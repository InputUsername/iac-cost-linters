[
  {
    "url": "https://github.com/tkhoa2711/terraform-digitalocean/commit/a86d89369aaf5a20c1e4d8415a8a771aa7de7d10",
    "files": [
      {
        "filename": "main.tf",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "status": "added",
        "patch": "@@ -0,0 +1,59 @@\n+provider \"digitalocean\" {\n+  token = \"${var.do_token}\"\n+}\n+\n+data \"digitalocean_ssh_key\" \"personal\" {\n+  name = \"${var.do_ssh_key_name}\"\n+}\n+\n+data \"digitalocean_sizes\" \"web\" {\n+  filter {\n+    key    = \"vcpus\"\n+    values = [1]\n+  }\n+\n+  filter {\n+    key    = \"memory\"\n+    values = [1024]\n+  }\n+\n+  filter {\n+    key    = \"regions\"\n+    values = [\"sgp1\"]\n+  }\n+\n+  sort {\n+    key       = \"price_monthly\"\n+    direction = \"asc\"\n+  }\n+}\n+\n+resource \"digitalocean_droplet\" \"web\" {\n+  ssh_keys = [\"${data.digitalocean_ssh_key.personal.id}\"]\n+  image    = \"ubuntu-18-04-x64\"\n+  name     = \"web\"\n+  region   = \"sgp1\"\n+\n+  # https://developers.digitalocean.com/documentation/v2/#list-all-sizes\n+  # size = \"s-1vcpu-1gb\" # $5.0/month\n+  size = \"${data.digitalocean_sizes.web.sizes.0.slug}\"\n+\n+  provisioner \"remote-exec\" {\n+    inline = [\n+      \"sudo adduser --disabled-password --gecos '' ${var.username}\",\n+      \"sudo mkdir -p /home/${var.username}/.ssh\",\n+      \"sudo touch /home/${var.username}/.ssh/authorized_keys\",\n+      \"sudo echo '${file(var.user_public_key)}' > /home/${var.username}/.ssh/authorized_keys\",\n+      \"sudo chmod 0600 /home/${var.username}/.ssh/authorized_keys\",\n+      \"sudo chown -R ${var.username}:${var.username} /home/${var.username}/.ssh\",\n+      \"sudo usermod -aG sudo ${var.username}\",\n+    ]\n+\n+    connection {\n+      type        = \"ssh\"\n+      user        = \"root\"\n+      private_key = \"${file(var.private_key)}\"\n+      timeout     = \"2m\"\n+    }\n+  }\n+}"
      },
      {
        "filename": "outputs.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+output \"public_ip\" {\n+  value = \"${digitalocean_droplet.web.ipv4_address}\"\n+}\n+\n+output \"price_monthly\" {\n+  value = \"${data.digitalocean_sizes.web.sizes.0.price_monthly}\"\n+}\n+\n+output \"name\" {\n+  value = \"${digitalocean_droplet.web.name}\"\n+}"
      },
      {
        "filename": "variable.tf",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+variable do_token {}\n+\n+variable do_ssh_key_name {\n+  type        = \"string\"\n+  description = \"The SSH key to associate with the box\"\n+}\n+\n+variable username {\n+  description = \"The username to login to the box after creation\"\n+}\n+\n+variable user_public_key {\n+  description = \"The public key of the user to login\"\n+}\n+\n+variable private_key {}"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["digitalocean", "not_relevant"],
    "notes": "The commit only adds code to provision a Digital Ocean droplet"
  },
  {
    "url": "https://github.com/stealthHat/k8s-terraform/commit/681a3f8b4942be495b3f2528fb9ee40d7a4eb08a",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n-erraform {\n+terraform {\n   required_providers {\n     aws = {\n       source  = \"hashicorp/aws\""
      },
      {
        "filename": "modules/vpc/main.tf",
        "additions": 18,
        "deletions": 17,
        "changes": 35,
        "status": "modified",
        "patch": "@@ -56,8 +56,9 @@ resource \"aws_route_table\" \"kubernetes-private\" {\n   vpc_id = aws_vpc.cluster-vpc.id\n \n   route {\n-    cidr_block     = \"0.0.0.0/0\"\n-    nat_gateway_id = element(aws_nat_gateway.cluster-nat-gateway.*.id, count.index)\n+    cidr_block = \"0.0.0.0/0\"\n+    gateway_id = aws_internet_gateway.id\n+    #nat_gateway_id = element(aws_nat_gateway.cluster-nat-gateway.*.id, count.index)\n   }\n \n   tags = merge(var.default_tags, map(\n@@ -95,21 +96,21 @@ resource \"aws_eip\" \"cluster-nat-eip\" {\n }\n \n # Nat gateway\n-resource \"aws_nat_gateway\" \"cluster-nat-gateway\" {\n-  count         = length(var.aws_cidr_subnets_public)\n-  allocation_id = element(aws_eip.cluster-nat-eip.*.id, count.index)\n-  subnet_id     = element(aws_subnet.cluster-vpc-subnets-public.*.id, count.index)\n-}\n-\n-# Security group\n-resource \"aws_security_group\" \"kubernetes\" {\n-  name   = \"kubernetes-${var.aws_cluster_name}-securitygroup\"\n-  vpc_id = aws_vpc.cluster-vpc.id\n-\n-  tags = merge(var.default_tags, map(\n-    \"Name\", \"kubernetes-${var.aws_cluster_name}-securitygroup\"\n-  ))\n-}\n+#resource \"aws_nat_gateway\" \"cluster-nat-gateway\" {\n+#  count         = length(var.aws_cidr_subnets_public)\n+#  allocation_id = element(aws_eip.cluster-nat-eip.*.id, count.index)\n+#  subnet_id     = element(aws_subnet.cluster-vpc-subnets-public.*.id, count.index)\n+#}\n+#\n+## Security group\n+#resource \"aws_security_group\" \"kubernetes\" {\n+#  name   = \"kubernetes-${var.aws_cluster_name}-securitygroup\"\n+#  vpc_id = aws_vpc.cluster-vpc.id\n+#\n+#  tags = merge(var.default_tags, map(\n+#    \"Name\", \"kubernetes-${var.aws_cluster_name}-securitygroup\"\n+#  ))\n+#}\n \n # Security group rules\n resource \"aws_security_group_rule\" \"allow-all-ingress\" {"
      }
    ],
    "existing_codes": [
      "networking",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/stealthHat/k8s-terraform/commit/4193db798227c6538c61d55a906ed9ac997563f7",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ terraform {\n \n # Configure the AWS Provider\n provider \"aws\" {\n-  region = \"sa-east-1\"\n+  region = \"us-east-1\"\n }\n \n # VPC module"
      },
      {
        "filename": "terraform.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ aws_cluster_name = \"hatlabs\"\n aws_vpc_cidr_block       = \"192.168.0.0/25\"\n aws_cidr_subnets_private = [\"192.168.0.0/26\"]\n aws_cidr_subnets_public  = [\"192.168.0.64/26\"]\n-aws_avail_zones          = [\"sa-east-1a\"]\n+aws_avail_zones          = [\"us-east-1a\"]\n \n terraform-aws = \"terraform-aws\"\n # Bastion Host"
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": ["aws", "cheaper_area"],
    "notes": "Moving from sa-east-1 to us-east-1 which was cheaper according to the commit message"
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-aws-codebuild-container/commit/4a00ffcbf9576d7e5febdbdf94a31d4735fc8035",
    "files": [
      {
        "filename": "example/examplea/Dockerfile",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n # checkov:skip=CKV_DOCKER_2:demo code\n-# checkov:skip=CKV_DOCKER_2:demo code\n+# checkov:skip=CKV_DOCKER_7:demo code\n \n FROM hashicorp/terraform\n "
      },
      {
        "filename": "example/examplea/aws_kms_key.codebuild.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+\n+resource \"aws_kms_key\" \"codebuild\" {\n+  enable_key_rotation = true\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "example/examplea/infracost-usage.yml",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "status": "added",
        "patch": "@@ -0,0 +1,71 @@\n+version: 0.1\n+resource_usage:\n+  module.container.module.codebuild.aws_codebuild_project.project:\n+    monthly_build_mins: 0\n+  module.container.module.codebuild.aws_s3_bucket.artifacts[0]:\n+    glacier:\n+      early_delete_gb: 0\n+      monthly_bulk_data_retrieval_gb: 0\n+      monthly_bulk_data_retrieval_requests: 0\n+      monthly_bulk_select_data_returned_gb: 0\n+      monthly_bulk_select_data_scanned_gb: 0\n+      monthly_expedited_data_retrieval_gb: 0\n+      monthly_expedited_data_retrieval_requests: 0\n+      monthly_expedited_select_data_returned_gb: 0\n+      monthly_expedited_select_data_scanned_gb: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_standard_data_retrieval_gb: 0\n+      monthly_standard_data_retrieval_requests: 0\n+      monthly_standard_select_data_returned_gb: 0\n+      monthly_standard_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    glacier_deep_archive:\n+      early_delete_gb: 0\n+      monthly_bulk_data_retrieval_gb: 0\n+      monthly_bulk_data_retrieval_requests: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_standard_data_retrieval_gb: 0\n+      monthly_standard_data_retrieval_requests: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    intelligent_tiering:\n+      early_delete_gb: 0\n+      frequent_access_storage_gb: 0\n+      infrequent_access_storage_gb: 0\n+      monitored_objects: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+    object_tags: 0\n+    one_zone_infrequent_access:\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_retrieval_gb: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    standard:\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    standard_infrequent_access:\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_retrieval_gb: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+  module.container.module.codecommit.aws_sns_topic.notification:\n+    monthly_requests: 0\n+    request_size_kb: 0\n+  module.container.module.ecr.aws_ecr_repository.repository:\n+    storage_gb: 0"
      },
      {
        "filename": "example/examplea/module.container.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -7,4 +7,5 @@ module \"container\" {\n   sourcecode             = var.sourcecode\n   force_artifact_destroy = \"true\"\n   projectroot            = \"example\"\n+  kms_key                = aws_kms_key.codebuild.key_id\n }"
      },
      {
        "filename": "module.codebuild.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n module \"codebuild\" {\n   source                 = \"jameswoolfenden/codebuild/aws\"\n-  version                = \"v0.2.123\"\n+  version                = \"v0.2.135\"\n   common_tags            = var.common_tags\n   description            = var.description\n   name                   = var.name"
      },
      {
        "filename": "module.ecr.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -3,5 +3,12 @@ module \"ecr\" {\n   version          = \"0.2.60\"\n   name             = var.name\n   repositorypolicy = data.aws_iam_policy_document.allowlocals.json\n+  kms_key          = var.kms_key\n   common_tags      = var.common_tags\n }\n+\n+\n+variable \"kms_key\" {\n+  type        = string\n+  description = \"KMS key id\"\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/dannysievers/gcp-project/commit/88303c62ab59b1e7a538289112cf19354a8ed05f",
    "files": [
      {
        "filename": "project/project.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ resource \"random_id\" \"id\" {\n resource \"google_project\" \"project\" {\n  name            = \"${var.project_name}\"\n  project_id      = \"${random_id.id.hex}\"\n- billing_account = \"${var.billing_account}\"\n+ billing_account = \"${var.billing_account_id}\"\n  org_id          = \"${var.org_id}\"\n }\n "
      },
      {
        "filename": "project/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n variable \"project_name\" {}\n-variable \"billing_account\" {}\n+variable \"billing_account_id\" {}\n variable \"org_id\" {}\n \n variable \"region\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": ["gcp", "not_relevant"],
    "notes": "Only changes the name of a variable (billing_account to billing_account_id)"
  },
  {
    "url": "https://github.com/thomastodon/jabujabu/commit/02210a3d3ba4a770c29623825b7f54f3ff33f3c7",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -11,4 +11,5 @@ gcp-credentials.json\n *.tfstate.*.backup\n *.tfstate.backup\n .terraform/\n+.terraform.*\n terraform.tfvars\n\\ No newline at end of file"
      },
      {
        "filename": "README.md",
        "additions": 31,
        "deletions": 10,
        "changes": 41,
        "status": "modified",
        "patch": "@@ -1,25 +1,46 @@\n ## jabujabu\n-Deploying concourse to [Google Compute Engine](https://cloud.google.com/compute/)\n+Deploying concourse to [Google Compute Engine](https://cloud.google.com/compute), \n+based on this [guide](https://github.com/cloudfoundry-incubator/bosh-google-cpi-release/tree/master/docs/concourse)\n \n Get tools:\n ```\n brew cask install google-cloud-sdk\n ```\n \n-Set some environment variables for the project:\n-```\n-export projectid=jabujabu-id\n-export region=us-central1\n-export zone=us-central1-a\n-export zone2=us-central1-b\n-```\n+Add bosh and root ssh keys to gcloud via the console\n \n-Terraform the bosh director\n+Terraform everything:\n ```\n terraform apply\n ```\n \n SSH onto the bastion VM:\n ```\n gcloud compute ssh bosh-bastion-concourse\n-```\n\\ No newline at end of file\n+```\n+\n+finish provisioning things:\n+```\n+bosh login admin admin\n+bosh target 10.0.0.6\n+bosh upload stemcell https://bosh.io/d/stemcells/bosh-google-kvm-ubuntu-trusty-go_agent?v=3445.11\n+bosh upload release https://bosh.io/d/github.com/concourse/concourse?v=3.5.0\n+bosh upload release https://bosh.io/d/github.com/cloudfoundry/garden-runc-release?v=1.6.0\n+export external_ip=`gcloud compute addresses describe --region us-central1 concourse | grep ^address: | cut -f2 -d' '`\n+export director_uuid=`bosh status --uuid 2>/dev/null`\n+```\n+\n+deploy concourse:\n+```\n+bosh update cloud-config /google-bosh-director/cloud-config.yml\n+bosh deployment /google-bosh-director/concourse.yml\n+bosh deploy\n+```\n+\n+add a dns record for concourse atc:\n+```\n+compute instances list\n+gcloud dns record-sets transaction add --zone thomasshoulerio \\\n+      --name conccourse. --ttl 300 \\\n+      --type A \"<EXTERNAL_IP_FROM_INSTANCE_ABOVE>\"\n+```"
      },
      {
        "filename": "cloud-config.yml",
        "additions": 6,
        "deletions": 11,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -21,19 +21,14 @@ vm_types:\n - name: common\n   cloud_properties:\n     machine_type: n1-standard-2\n-    root_disk_size_gb: 20\n-    root_disk_type: pd-ssd\n+    root_disk_size_gb: 10\n+    root_disk_type: pd-standard\n \n - name: worker\n   cloud_properties:\n     machine_type: n1-standard-4\n-    root_disk_size_gb: 100\n-    root_disk_type: pd-ssd\n-\n-vm_extensions:\n-- name: concourse-lb\n-  cloud_properties:\n-    target_pool: concourse-target-pool\n+    root_disk_size_gb: 10\n+    root_disk_type: pd-standard\n \n compilation:\n   workers: 2\n@@ -42,8 +37,8 @@ compilation:\n   az: z1\n   cloud_properties:\n     machine_type: n1-standard-4\n-    root_disk_size_gb: 100\n-    root_disk_type: pd-ssd\n+    root_disk_size_gb: 10\n+    root_disk_type: pd-standard\n     preemptible: true\n \n networks:"
      },
      {
        "filename": "concourse.tf",
        "additions": 22,
        "deletions": 20,
        "changes": 42,
        "status": "modified",
        "patch": "@@ -10,6 +10,28 @@ resource \"google_compute_subnetwork\" \"concourse-public-subnet-2\" {\n   network = \"${google_compute_network.network.self_link}\"\n }\n \n+resource \"google_dns_managed_zone\" \"thomasshoulerio\" {\n+  name = \"thomasshoulerio\"\n+  dns_name = \"thomasshouler.io.\"\n+  description = \"thomasshouler.io\"\n+  name_servers = [\n+    \"ns-cloud-e1.googledomains.com\",\n+    \"ns-cloud-e2.googledomains.com\",\n+    \"ns-cloud-e3.googledomains.com\",\n+    \"ns-cloud-e4.googledomains.com\",\n+  ]\n+}\n+\n+resource \"google_dns_record_set\" \"concourse\" {\n+  name = \"concourse.${google_dns_managed_zone.thomasshoulerio.dns_name}\"\n+  type = \"A\"\n+  ttl = 300\n+  managed_zone = \"${google_dns_managed_zone.thomasshoulerio.name}\"\n+  rrdatas = [\n+    \"${google_compute_address.concourse.address}\"\n+  ]\n+}\n+\n resource \"google_compute_firewall\" \"concourse-public\" {\n   name = \"concourse-public\"\n   network = \"${google_compute_network.network.name}\"\n@@ -61,23 +83,3 @@ resource \"google_compute_firewall\" \"concourse-internal\" {\n resource \"google_compute_address\" \"concourse\" {\n   name = \"concourse\"\n }\n-\n-resource \"google_compute_target_pool\" \"concourse-target-pool\" {\n-  name = \"concourse-target-pool\"\n-}\n-\n-resource \"google_compute_forwarding_rule\" \"concourse-http-forwarding-rule\" {\n-  name = \"concourse-http-forwarding-rule\"\n-  target = \"${google_compute_target_pool.concourse-target-pool.self_link}\"\n-  port_range = \"80-80\"\n-  ip_protocol = \"TCP\"\n-  ip_address = \"${google_compute_address.concourse.address}\"\n-}\n-\n-resource \"google_compute_forwarding_rule\" \"concourse-https-forwarding-rule\" {\n-  name = \"concourse-https-forwarding-rule\"\n-  target = \"${google_compute_target_pool.concourse-target-pool.self_link}\"\n-  port_range = \"443-443\"\n-  ip_protocol = \"TCP\"\n-  ip_address = \"${google_compute_address.concourse.address}\"\n-}"
      },
      {
        "filename": "concourse.yml",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -16,16 +16,15 @@ director_uuid: <%= director_uuid %>\n \n releases:\n - name: concourse\n-  version: 2.5.0\n+  version: 3.5.0\n - name: garden-runc\n-  version: 1.0.3\n+  version: 1.6.0\n \n instance_groups:\n - name: web\n   instances: 1\n   vm_type: common\n-  azs: [z1,z2]\n-  vm_extensions: [concourse-lb]\n+  azs: [z1, z2]\n   stemcell: trusty\n   networks:\n   - name: public"
      },
      {
        "filename": "main.tf",
        "additions": 80,
        "deletions": 11,
        "changes": 91,
        "status": "modified",
        "patch": "@@ -70,6 +70,81 @@ resource \"google_compute_instance\" \"bosh-bastion\" {\n     \"bosh-internal\"\n   ]\n \n+  connection {\n+    type = \"ssh\"\n+    user = \"root\"\n+    private_key = \"${file(\"~/.ssh/google_compute_engine\")}\"\n+    timeout = \"60s\"\n+  }\n+\n+  provisioner file {\n+    source = \"cloud-config.yml\"\n+    destination = \"/tmp/cloud-config.yml\"\n+  }\n+\n+  provisioner file {\n+    source = \"concourse.yml\"\n+    destination = \"/tmp/concourse.yml\"\n+  }\n+\n+  provisioner file {\n+    source = \"manifest.yml.erb\"\n+    destination = \"/tmp/manifest.yml.erb\"\n+  }\n+\n+  provisioner file {\n+    source = \"keys/bosh\"\n+    destination = \"/tmp/bosh\"\n+  }\n+\n+  provisioner file {\n+    source = \"keys/bosh.pub\"\n+    destination = \"/tmp/bosh.pub\"\n+  }\n+\n+  provisioner remote-exec {\n+    inline = [\n+      \"apt-get update -y\",\n+      \"apt-get install -y build-essential zlibc zlib1g-dev ruby ruby-dev openssl libxslt-dev libxml2-dev libssl-dev libreadline6 libreadline6-dev libyaml-dev libsqlite3-dev sqlite3\",\n+      \"gem install bosh_cli\",\n+      \"curl -o /tmp/cf.tgz https://s3.amazonaws.com/go-cli/releases/v6.20.0/cf-cli_6.20.0_linux_x86-64.tgz\",\n+      \"tar -zxvf /tmp/cf.tgz && mv cf /usr/bin/cf && chmod +x /usr/bin/cf && rm /tmp/cf.tgz\",\n+      \"curl -o /usr/bin/bosh-init https://s3.amazonaws.com/bosh-init-artifacts/bosh-init-0.0.96-linux-amd64\",\n+      \"chmod +x /usr/bin/bosh-init\",\n+    ]\n+  }\n+\n+  provisioner remote-exec {\n+    inline = [\n+      \"echo project_id=\\\"${var.projectid}\\\" | sudo tee -a /etc/environment\",\n+      \"echo region=\\\"${var.region}\\\" | sudo tee -a /etc/environment\",\n+      \"echo zone=\\\"${var.zone-1}\\\" | sudo tee -a /etc/environment\",\n+      \"echo zone2=\\\"${var.zone-2}\\\" | sudo tee -a /etc/environment\",\n+      \"echo ssh_key_path=$HOME/.ssh/bosh | sudo tee -a /etc/environment\",\n+      \"echo common_password=admin | sudo tee -a /etc/environment\",\n+      \"echo atc_password=admin | sudo tee -a /etc/environment\",\n+    ]\n+  }\n+\n+  provisioner remote-exec {\n+    inline = [\n+      \"mkdir /google-bosh-director\",\n+      \"mv /tmp/cloud-config.yml /google-bosh-director/cloud-config.yml\",\n+      \"mv /tmp/concourse.yml /google-bosh-director/concourse.yml\",\n+      \"mv /tmp/manifest.yml.erb /google-bosh-director/manifest.yml.erb\",\n+      \"mv /tmp/bosh .ssh/bosh\",\n+      \"mv /tmp/bosh.pub .ssh/bosh.pub\",\n+\n+      \"gcloud config set compute/zone $zone\",\n+      \"gcloud config set compute/region $region\",\n+\n+      \"cd /google-bosh-director\",\n+      \"bosh-init -v\",\n+      \"erb manifest.yml.erb > manifest.yml\",\n+      \"bosh-init deploy manifest.yml\",\n+    ]\n+  }\n+\n   boot_disk {\n     initialize_params {\n       image = \"ubuntu-1404-trusty-v20160627\"\n@@ -83,20 +158,14 @@ resource \"google_compute_instance\" \"bosh-bastion\" {\n     }\n   }\n \n-  metadata_startup_script = <<EOT\n-#!/bin/bash\n-apt-get update -y\n-apt-get install -y build-essential zlibc zlib1g-dev ruby ruby-dev openssl libxslt-dev libxml2-dev libssl-dev libreadline6 libreadline6-dev libyaml-dev libsqlite3-dev sqlite3\n-gem install bosh_cli\n-curl -o /tmp/cf.tgz https://s3.amazonaws.com/go-cli/releases/v6.20.0/cf-cli_6.20.0_linux_x86-64.tgz\n-tar -zxvf /tmp/cf.tgz && mv cf /usr/bin/cf && chmod +x /usr/bin/cf\n-curl -o /usr/bin/bosh-init https://s3.amazonaws.com/bosh-init-artifacts/bosh-init-0.0.96-linux-amd64\n-chmod +x /usr/bin/bosh-init\n-EOT\n-\n   service_account {\n     scopes = [\n       \"cloud-platform\"\n     ]\n   }\n }\n+\n+//TODO: refactor and make a dns record for the bosh bastion\n+//TODO: should not have external ips for anything but ATC vm\n+//TODO: set up SSL\n+//TODO: do we need the extra subnet?\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "cluster"
    ],
    "codes": ["gcp", "smaller_disk", "cheaper_disk_type", "remove_loadbalancer"],
    "notes": "Use a smaller disk (20 -> 10gb), cheaper disk type (pd-ssd -> pd-standard) (both not in a Terraform file); remove the use of a load balancer"
  },
  {
    "url": "https://github.com/tooxie/terraform-workshop/commit/002bcce28e46728714fa1e0d20bec6f2559caba2",
    "files": [
      {
        "filename": "default.auto.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+prod = true"
      },
      {
        "filename": "ec2_node.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n module \"node\" {\n   source = \"./cluster\"\n-  servers = 3\n+  servers = \"${var.prod ? 3 : 1}\"\n   type = \"node\"\n }\n "
      },
      {
        "filename": "variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+variable \"prod\" {\n+  type = \"string\"\n+  default = false\n+}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/deptno/terraform-aws-modules/commit/49f447bdbb3cf23499e8194e78f852ea1e256d3a",
    "files": [
      {
        "filename": "serverless-passport/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -2,6 +2,7 @@ resource aws_dynamodb_table token {\n   name = var.token-table-name\n   hash_key = var.token-table-hash-key\n   range_key = var.token-table-range-key\n+  billing_mode = \"PAY_PER_REQUEST\"\n \n   ttl {\n     attribute_name = var.token-table-ttl-key"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/beaulabs/terraform_aws_ec2_instance/commit/d6df68da5ae58fb5c650c6be15d9d8e676a129db",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -26,7 +26,7 @@ variable \"ami_id\" {\n \n variable \"instance_type\" {\n   description = \"type of EC2 instance to provision.\"\n-  default     = \"t2.large\"\n+  default     = \"t2.medium\"\n }\n \n variable \"myaws_keypair\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Moving from t2.large to t2.medium"
  },
  {
    "url": "https://github.com/aws-observability/aws-otel-test-framework/commit/c928fe0a05d1e9b8f1ecb1a7dacffecc2800e038",
    "files": [
      {
        "filename": "terraform/setup/backend.tf",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -50,11 +50,9 @@ resource \"aws_s3_bucket\" \"setup-remote-state-s3-bucket\" {\n #Avoid multiple developers change the state at the same time since it would cause race condition\n #Document: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table\n resource \"aws_dynamodb_table\" \"setup-remote-state-dynamodb-table\" {\n-  name           = \"setup-remote-state-dynamodb-table\"\n-  hash_key       = \"LockID\"\n-  billing_mode   = \"PAY_PER_REQUEST\"\n-  read_capacity  = \"8\"\n-  write_capacity = \"8\"\n+  name         = \"setup-remote-state-dynamodb-table\"\n+  hash_key     = \"LockID\"\n+  billing_mode = \"PAY_PER_REQUEST\"\n \n   attribute {\n     name = \"LockID\""
      },
      {
        "filename": "terraform/testcases/xrayreceiver/parameters.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -3,7 +3,7 @@ validation_config = \"default-xray-trace-validation.yml\"\n \n # sample application image to emit the trace data\n # src: https://github.com/aws/aws-xray-sdk-go/blob/master/sample-apps/http-server/application.go\n-sample_app_image = \"611364707713.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-otel-goxray-sample-app:v1.2.0\"\n+sample_app_image = \"public.ecr.aws/aws-otel-test/aws-otel-goxray-sample-app:v1.2.0\"\n \n # data type will be emitted. Possible values: metric or trace\n soaking_data_mode = \"trace\""
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ken-matsui/poac-infrastructure/commit/02c710b8259f493c475021fc9eac23b871305ae6",
    "files": [
      {
        "filename": "k8s/cluster.yaml",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -111,6 +111,8 @@ metadata:\n spec:\n   image: kope.io/k8s-1.4-debian-jessie-amd64-hvm-ebs-2016-10-21\n   machineType: t2.small\n+  # TODO:\n+  # machineType: t2.micro\n   maxSize: 1\n   minSize: 1\n   nodeLabels:\n@@ -139,6 +141,8 @@ spec:\n     kops.k8s.io/instancegroup: nodes\n   role: Node\n   rootVolumeSize: 20\n+  # TODO:\n+  # rootVolumeSize: 8\n   rootVolumeType: gp2\n   subnets:\n   - poacpm-priv1"
      },
      {
        "filename": "terraform/rds.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -20,5 +20,5 @@ resource \"aws_rds_cluster_instance\" \"cluster_instances\" {\n   count              = 2\n   identifier         = \"${aws_rds_cluster.cluster.cluster_identifier}-${count.index}\"\n   cluster_identifier = \"${aws_rds_cluster.cluster.id}\"\n-  instance_class     = \"db.r3.large\"\n+  instance_class     = \"db.t2.small\"\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": ["aws", "cheaper_rds_cluster"],
    "notes": "Move from db.r3.large to db.r2.small"
  },
  {
    "url": "https://github.com/chad-russell-git/terraform-oci-cis-landing-zone/commit/6a696dfa2dd5716a65b10fc3277cd9e994b8b30a",
    "files": [
      {
        "filename": "config/mon_tags.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -17,7 +17,7 @@ module \"lz_tags\" {\n   tags = { # the map keys are meant to be the tag names.\n     (local.createdby_tag_name) = {\n       tag_description         = \"Landing Zone tag that identifies who created the resource.\"\n-      tag_is_cost_tracking    = false #true\n+      tag_is_cost_tracking    = true\n       tag_is_retired          = false\n       make_tag_default        = true\n       tag_default_value       = \"$${iam.principal.name}\""
      }
    ],
    "existing_codes": [
      "awareness",
      "policy"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/chad-russell-git/terraform-oci-cis-landing-zone/commit/7247909ecd98c2d511316392f22cb3877f05250b",
    "files": [
      {
        "filename": "config/iam_policies.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -171,6 +171,13 @@ locals {\n                             \"Allow group ${local.exainfra_admin_group_name} to read instance-agent-plugins in compartment ${local.exainfra_compartment.name}\",\n                             \"Allow group ${local.exainfra_admin_group_name} to read virtual-network-family in compartment ${local.network_compartment.name}\"]\n \n+// Cost admin permissions to be created always at the root compartment\n+  cost_root_permissions = [\"define tenancy usage-report as ocid1.tenancy.oc1..aaaaaaaaned4fkpkisbwjlr56u7cj63lf3wffbilvqknstgtvzub7vhqkggq\", \n+                           \"Allow group ${local.cost_admin_group_name} to manage usage-report in tenancy\",\n+                           \"Allow group ${local.cost_admin_group_name} to manage usage-budgets in tenancy\", \n+                           \"endorse group ${local.cost_admin_group_name} to read objects in tenancy usage-report\"]\n+\n+\n     default_policies = { \n       (local.network_admin_policy_name) = {\n         compartment_id = local.parent_compartment_id\n@@ -271,6 +278,11 @@ module \"lz_root_policies\" {\n         \"Allow group ${local.cred_admin_group_name} to inspect groups in tenancy\",\n         \"Allow group ${local.cred_admin_group_name} to manage users in tenancy  where any {request.operation = 'ListApiKeys',request.operation = 'ListAuthTokens',request.operation = 'ListCustomerSecretKeys',request.operation = 'UploadApiKey',request.operation = 'DeleteApiKey',request.operation = 'UpdateAuthToken',request.operation = 'CreateAuthToken',request.operation = 'DeleteAuthToken',request.operation = 'CreateSecretKey',request.operation = 'UpdateCustomerSecretKey',request.operation = 'DeleteCustomerSecretKey',request.operation = 'UpdateUserCapabilities'}\",\n         \"Allow group ${local.cred_admin_group_name} to use cloud-shell in tenancy\"]\n+    },\n+    (local.cost_admin_root_policy_name) = {\n+      compartment_id = var.tenancy_ocid\n+      description    = \"Landing Zone ${local.cost_admin_group_name}'s root compartment policy.\"\n+      statements     = local.cost_root_permissions\n     }\n   } : {}\n }"
      },
      {
        "filename": "config/locals.tf",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -40,6 +40,8 @@ locals {\n   announcement_reader_group_name = var.use_existing_groups == false ? \"${var.service_label}-announcement-reader-group\" : data.oci_identity_groups.existing_announcement_reader_group.groups[0].name\n   exainfra_admin_group_name      = var.use_existing_groups == false ? \"${var.service_label}-exainfra-admin-group\" : data.oci_identity_groups.existing_exainfra_admin_group.groups[0].name\n   \n+  cost_admin_group_name          = var.use_existing_groups == false ? \"${var.service_label}-cost-admin-group\" : data.oci_identity_groups.existing_cost_admin_group.groups[0].name\n+\n   # Policy names\n   security_admin_policy_name      = \"${var.service_label}-security-admin-policy\"\n   security_admin_root_policy_name = \"${var.service_label}-security-admin-root-policy\"\n@@ -56,7 +58,7 @@ locals {\n   auditor_policy_name             = \"${var.service_label}-auditor-policy\"\n   announcement_reader_policy_name = \"${var.service_label}-announcement-reader-policy\"\n   exainfra_admin_policy_name      = \"${var.service_label}-exainfra-admin-policy\"\n-  \n+  cost_admin_root_policy_name  = \"${var.service_label}-cost-admin-root-policy\"\n   services_policy_name   = \"${var.service_label}-services-policy\"\n   cloud_guard_statements = [\"Allow service cloudguard to read keys in tenancy\",\n                             \"Allow service cloudguard to read compartments in tenancy\",\n@@ -136,7 +138,7 @@ locals {\n   appdev_cmp_target_name   = \"${local.appdev_compartment.key}-scan-target\"\n   database_cmp_target_name = \"${local.database_compartment.key}-scan-target\"\n \n-  ### Governance\n+  ### Cost Management\n   budget_display_name = \"${var.service_label}-main-budget\"\n   budget_description  = var.use_enclosing_compartment == true ? \"Tracks spending from the enclosing compartment level and down\" : \"Tracks spending across the tenancy\"\n "
      }
    ],
    "existing_codes": [
      "awareness",
      "policy"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ministryofjustice/modernisation-platform/commit/bc346a5604045d29b4b427c926f3e70d69440698",
    "files": [
      {
        "filename": "terraform/modernisation-platform-account/dynamodb.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -12,5 +12,9 @@ resource \"aws_dynamodb_table\" \"state-lock\" {\n     enabled = true\n   }\n \n+  point_in_time_recovery {\n+    enabled = true\n+  }\n+\n   tags = local.tags\n }"
      }
    ],
    "existing_codes": [
      "awareness",
      "increase",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/guilhermerenew/infra-cost/commit/ba858d94e29d03e3e81533df8cd8bc85b9f176f1",
    "files": [
      {
        "filename": ".github/workflows/infracost.yml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -20,4 +20,4 @@ jobs:\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n       with:\n         path: principal\n-        usage_file: infracost-usage.yml\n\\ No newline at end of file\n+        usage_file: infracost-usage.yml"
      },
      {
        "filename": "infracost-usage.yml",
        "additions": 330,
        "deletions": 4,
        "changes": 334,
        "status": "modified",
        "patch": "@@ -1,5 +1,331 @@\n-version: 0.1\n+version: v0.1\n resource_usage:\n-  aws_lambda_function.hello_world:\n-    monthly_requests: 100000000\n-    average_request_duration: 250  # Try changing this to 100 (milliseconds) to compare costs\n\\ No newline at end of file\n+\n+  aws_acmpca_certificate_authority.my_private_ca:\n+    monthly_requests: 20000 # Monthly private certificate requests.\n+\n+  aws_api_gateway_rest_api.my_rest_api:\n+    monthly_requests:  100000000 # Monthly requests to the Rest API Gateway.\n+\n+  aws_apigatewayv2_api.my_v2_api:\n+    monthly_requests: 100000000       # Monthly requests to the HTTP API Gateway.\n+    request_size_kb: 512              # Average request size sent to the HTTP API Gateway in KB. Requests are metered in 512KB increments, maximum size is 10MB.\n+    monthly_messages: 1500000000      # Monthly number of messages sent to the Websocket API Gateway.\n+    message_size_kb: 32               # Average size of the messages sent to the Websocket API Gateway in KB. Messages are metered in 32 KB increments, maximum size is 128KB.\n+    monthly_connection_mins: 10000000 # Monthly total connection minutes to Websockets.\n+\n+  aws_cloudwatch_event_bus.my_events:\n+    monthly_custom_events: 1000000            # Monthly custom events published. Each 64 KB chunk of payload is billed as 1 event.\n+    monthly_third_party_events: 2000000       # Monthly third-party and cross-account events published. Each 64 KB chunk of payload is billed as 1 event.\n+    monthly_archive_processing_gb: 100        # Monthly archive event processing in GB. \n+    archive_storage_gb: 200                   # Archive storage used for event replay in GB.\n+    monthly_schema_discovery_events: 1000000  # Monthly events ingested for schema discovery. Each 8 KB chunk of payload is billed as 1 event.\n+\n+  aws_cloudwatch_log_group.my_log_group:\n+    storage_gb: 1000               # Total data stored by CloudWatch logs in GB.\n+    monthly_data_ingested_gb: 1000 # Monthly data ingested by CloudWatch logs in GB.\n+    monthly_data_scanned_gb: 200   # Monthly data scanned by CloudWatch logs insights in GB.\n+\n+  aws_codebuild_project.my_project: \n+    monthly_build_mins: 10000 # Monthly total duration of builds in minutes. Each build is rounded up to the nearest minute.\n+    \n+  aws_config_config_rule.my_config:\n+    monthly_rule_evaluations: 1000000 # Monthly config rule evaluations.\n+\n+  aws_config_configuration_recorder.my_config:\n+    monthly_config_items: 10000        # Monthly config item records.\n+    monthly_custom_config_items: 20000 # Monthly custom config item records.\n+\n+  aws_config_organization_custom_rule.my_config:\n+    monthly_rule_evaluations: 300000 # Monthly config rule evaluations.\n+\n+  aws_config_organization_managed_rule.my_config:\n+    monthly_rule_evaluations: 10000 # Monthly config rule evaluations.\n+\n+  aws_data_transfer.my_region:\n+    region: ap-northeast-1                      # Region the data transfer is originating from.\n+    monthly_intra_region_gb: 1000               # Monthly data transferred between availability zones in the region.\n+    monthly_outbound_us_east_to_us_east_gb: 0   # Monthly data transferred between US east regions. NOTE: this is only valid if the region is a us-east region.\n+    monthly_outbound_other_region_gb: 750       # Monthly data transferred to other AWS regions.\n+    monthly_outbound_internet_gb: 1000          # Monthly data transferred to the Internet.\n+\n+  aws_docdb_cluster_instance.my_db:\n+    data_storage_gb: 1000         # Total storage for cluster in GB.\n+    monthly_io_request: 100000000 # Monthly number of input/output requests for cluster.\n+    backup_storage_gb: 10000      # Amount of backup storage that is in excess of 100% of the storage size for the cluster in GB.\n+    monthly_cpu_credit_hours: 100 # Monthly CPU credits used over the instance baseline in vCPU-hours, only applicable for T3 instances. \n+\n+  aws_dx_connection.my_dx_connection:\n+    monthly_outbound_region_to_dx_location_gb: 100 # Monthly outbound data transferred from AWS region to DX location in GB.\n+    dx_virtual_interface_type: private             # Interface type impacts outbound data transfer costs over DX, can be: private, public.\n+    dx_connection_type: dedicated                  # Connection type impacts the per-port hourly price, can be: dedicated, hosted.\n+\n+  aws_dx_gateway_association.my_gateway:\n+    monthly_data_processed_gb: 100 # Monthly data processed by the DX gateway association per month in GB.\n+\n+  aws_dynamodb_table.my_table:\n+    monthly_write_request_units: 3000000  # Monthly write request units in (used for on-demand DynamoDB).\n+    monthly_read_request_units: 8000000   # Monthly read request units in (used for on-demand DynamoDB).\n+    storage_gb: 230                       # Total storage for tables in GB.\n+    pitr_backup_storage_gb: 2300          # Total storage for Point-In-Time Recovery (PITR) backups in GB.\n+    on_demand_backup_storage_gb: 460      # Total storage for on-demand backups in GB.\n+    monthly_data_restored_gb: 230         # Monthly size of restored data in GB.\n+    monthly_streams_read_request_units: 2 # Monthly streams read request units.\n+\n+  aws_ebs_snapshot.my_snapshot:\n+    monthly_list_block_requests: 1000000  # Monthly number of ListChangedBlocks and ListSnapshotBlocks requests.\n+    monthly_get_block_requests: 100000    # Monthly number of GetSnapshotBlock requests (block size is 512KiB).\n+    monthly_put_block_requests: 100000    # Monthly number of PutSnapshotBlock requests (block size is 512KiB).\n+\n+  aws_ebs_volume.my_standard_volume:\n+    monthly_standard_io_requests: 10000000 # Monthly I/O requests for standard volume (Magnetic storage).\n+\n+  aws_ec2_transit_gateway_vpc_attachment.my_vpc_attachment:\n+    monthly_data_processed_gb: 100 # Monthly data processed by the EC2 transit gateway attachment(s) in GB.\n+\n+  aws_ecr_repository.my_repository:\n+    storage_gb: 1 # Total size of ECR repository in GB.\n+\n+  aws_efs_file_system.my_file_system:\n+    storage_gb: 230                         # Total storage for Standard class in GB.\n+    infrequent_access_storage_gb: 100       # Total storage for Infrequent Access class in GB.\n+    monthly_infrequent_access_read_gb: 50   # Monthly infrequent access read requests in GB.\n+    monthly_infrequent_access_write_gb: 100 # Monthly infrequent access write requests in GB.\n+\n+  aws_elasticache_cluster.my_redis_snapshot:\n+    snapshot_storage_size_gb: 10000 # Size of Redis snapshots in GB. \n+\n+  aws_elb.my_elb:\n+    monthly_data_processed_gb: 10000 # Monthly data processed by a Classic Load Balancer in GB.\n+\n+  aws_instance.windows_instance:\n+    operating_system: windows # Override the operating system of the instance, can be: windows, suse, rhel.\n+\n+  aws_fsx_windows_file_system.my_system:\n+    backup_storage_gb: 10000 # Total storage used for backups in GB.\n+\n+  aws_lambda_function.my_function:\n+    monthly_requests: 100000 # Monthly requests to the Lambda function.\n+    request_duration_ms: 500 # Average duration of each request in milliseconds.\n+\n+  # The same can be used for the aws_alb resource too.\n+  aws_lb.my_lb:\n+    new_connections: 10000    # Number of newly established connections per second on average.\n+    active_connections: 10000 # Number of active connections per minute on average.\n+    processed_bytes_gb: 1000  # The number of bytes processed by the load balancer for HTTP(S) requests and responses in GB.\n+    rule_evaluations: 10000   # The product of number of rules processed by the load balancer and the request rate.\n+\n+  aws_nat_gateway.my_nat_gateway:\n+    monthly_data_processed_gb: 10 # Monthly data processed by the NAT Gateway in GB.\n+\n+  aws_route53_record.my_record:\n+    monthly_standard_queries: 1100000000      # Monthly number of Standard queries.\n+    monthly_latency_based_queries: 1200000000 # Monthly number of Latency Based Routing queries.\n+    monthly_geo_queries: 1500000000           # Monthly number of Geo DNS and Geoproximity queries.\n+\n+  aws_route53_resolver_endpoint.my_endpoint:\n+    monthly_queries: 20000000000 # Monthly number of DNS queries processed through the endpoints.\n+\n+  aws_s3_bucket_analytics_configuration.my_config:\n+    monthly_monitored_objects: 10000000 # Monthly number of monitored objects by S3 Analytics Storage Class Analysis.\n+\n+  aws_s3_bucket_inventory.my_inventory:\n+    monthly_listed_objects: 100000000 # Monthly number of listed objects.\n+\n+  aws_s3_bucket.my_bucket:\n+    object_tags: 10000000 # Total object tags.\n+    standard: # Usages of S3 Standard:\n+      storage_gb: 10000 # Total storage in GB.\n+      monthly_tier_1_requests: 1000000 # Monthly PUT, COPY, POST, LIST requests (Tier 1).\n+      monthly_tier_2_requests: 100000 # Monthly GET, SELECT, and all other requests (Tier 2).\n+      monthly_select_data_scanned_gb: 10000 # Monthly data scanned by S3 Select in GB.\n+      monthly_select_data_returned_gb: 1000 # Monthly data returned by S3 Select in GB.\n+    intelligent_tiering: # Usages of S3 Intelligent - Tiering:\n+      frequent_access_storage_gb: 20000 # Total storage for Frequent Access Tier in GB.\n+      infrequent_access_storage_gb: 20000 # Total storage for Infrequent Access Tier in GB.\n+      monitored_objects: 2000 # Total objects monitored by the Intelligent Tiering.\n+      monthly_tier_1_requests: 2000000 # Monthly PUT, COPY, POST, LIST requests (Tier 1).\n+      monthly_tier_2_requests: 200000 # Monthly GET, SELECT, and all other requests (Tier 2).\n+      monthly_lifecycle_transition_requests: 200000 # Monthly Lifecycle Transition requests.\n+      monthly_select_data_scanned_gb: 20000 # Monthly data scanned by S3 Select in GB.\n+      monthly_select_data_returned_gb: 2000 # Monthly data returned by S3 Select in GB.\n+      early_delete_gb: 200000 # If an archive is deleted within 1 months of being uploaded, you will be charged an early deletion fee per GB.\n+    standard_infrequent_access: # Usages of S3 Standard - Infrequent Access:\n+      storage_gb: 30000 # Total storage in GB.\n+      monthly_tier_1_requests: 3000000 # Monthly PUT, COPY, POST, LIST requests (Tier 1).\n+      monthly_tier_2_requests: 300000 # Monthly GET, SELECT, and all other requests (Tier 2).\n+      monthly_lifecycle_transition_requests: 300000 # Monthly Lifecycle Transition requests.\n+      monthly_retrieval_gb: 30000 # Monthly data retrievals in GB\n+      monthly_select_data_scanned_gb: 30000 # Monthly data scanned by S3 Select in GB.\n+      monthly_select_data_returned_gb: 3000 # Monthly data returned by S3 Select in GB.\n+    one_zone_infrequent_access: # Usages of S3 One Zone - Infrequent Access:\n+      storage_gb: 40000 # Total storage in GB.\n+      monthly_tier_1_requests: 4000000 # Monthly PUT, COPY, POST, LIST requests (Tier 1).\n+      monthly_tier_2_requests: 400000 # Monthly GET, SELECT, and all other requests (Tier 2).\n+      monthly_lifecycle_transition_requests: 400000 # Monthly Lifecycle Transition requests.\n+      monthly_retrieval_gb: 40000 # Monthly data retrievals in GB\n+      monthly_select_data_scanned_gb: 40000 # Monthly data scanned by S3 Select in GB.\n+      monthly_select_data_returned_gb: 4000 # Monthly data returned by S3 Select in GB.\n+    glacier: # Usages of S3 Glacier:\n+      storage_gb: 50000 # Total storage in GB.\n+      monthly_tier_1_requests: 5000000 # Monthly PUT, COPY, POST, LIST requests (Tier 1).\n+      monthly_tier_2_requests: 500000 # Monthly GET, SELECT, and all other requests (Tier 2).\n+      monthly_lifecycle_transition_requests: 500000 # Monthly Lifecycle Transition requests.\n+      monthly_standard_select_data_scanned_gb: 500000 # Monthly data scanned by S3 Select in GB (for standard level of S3 Glacier).\n+      monthly_standard_select_data_returned_gb: 500000 # Monthly data returned by S3 Select in GB (for standard level of S3 Glacier).\n+      monthly_bulk_select_data_scanned_gb: 500000 # Monthly data scanned by S3 Select in GB (for bulk level of S3 Glacier)\n+      monthly_bulk_select_data_returned_gb: 500000 # Monthly data returned by S3 Select in GB (for bulk level of S3 Glacier)\n+      monthly_expedited_select_data_scanned_gb: 500000 # Monthly data scanned by S3 Select in GB (for expedited level of S3 Glacier)\n+      monthly_expedited_select_data_returned_gb: 500000 # Monthly data returned by S3 Select in GB (for expedited level of S3 Glacier)\n+      monthly_standard_data_retrieval_requests: 500000 # Monthly data Retrieval requests (for standard level of S3 Glacier).\n+      monthly_bulk_data_retrieval_requests: 500000 # Monthly data Retrieval requests (for bulk level of S3 Glacier).\n+      monthly_expedited_data_retrieval_requests: 500000 # Monthly data Retrieval requests (for expedited level of S3 Glacier).\n+      monthly_standard_data_retrieval_gb: 5000 # Monthly data retrievals in GB (for standard level of S3 Glacier).\n+      monthly_bulk_data_retrieval_gb: 5000 # Monthly data retrievals in GB (for bulk level of S3 Glacier).\n+      monthly_expedited_data_retrieval_gb: 5000 # Monthly data retrievals in GB (for expedited level of S3 Glacier).\n+      early_delete_gb: 500000 # If an archive is deleted within 3 months of being uploaded, you will be charged an early deletion fee per GB.\n+    glacier_deep_archive: # Usages of S3 Glacier Deep Archive:\n+      storage_gb: 60000 # Total storage in GB.\n+      monthly_tier_1_requests: 6000000 # Monthly PUT, COPY, POST, LIST requests (Tier 1).\n+      monthly_tier_2_requests: 600000 # Monthly GET, SELECT, and all other requests (Tier 2).\n+      monthly_lifecycle_transition_requests: 600000 # Monthly Lifecycle Transition requests.\n+      monthly_standard_data_retrieval_requests: 600000 # Monthly data Retrieval requests (for standard level of S3 Glacier).\n+      monthly_bulk_data_retrieval_requests: 600000 # Monthly data Retrieval requests (for bulk level of S3 Glacier).\n+      monthly_standard_data_retrieval_gb: 6000 # Monthly data retrievals in GB (for standard level of S3 Glacier).\n+      monthly_bulk_data_retrieval_gb: 6000 # Monthly data retrievals in GB (for bulk level of S3 Glacier).\n+      early_delete_gb: 600000 # If an archive is deleted within 6 months of being uploaded, you will be charged an early deletion fee per GB.\n+\n+  aws_secretsmanager_secret.my_secret:\n+    monthly_requests: 1000000 # Monthly API requests to Secrets Manager.\n+\n+  aws_sns_topic.my_sns_topic:\n+    monthly_requests: 1000000 # Monthly requests to SNS.\n+    request_size_kb: 64       # Size of requests to SNS, billed in 64KB chunks. So 1M requests at 128KB uses 2M requests.\n+\n+  aws_sns_topic_subscription.my_topic_subscription:\n+    monthly_requests: 1000000 # Monthly requests to SNS.\n+    request_size_kb: 64       # Size of requests to SNS, billed in 64KB chunks. So 1M requests at 128KB uses 2M requests.\n+\n+  aws_sqs_queue.my_queue:\n+    monthly_requests: 1000000 # Monthly requests to SQS.\n+    request_size_kb: 64       # Size of requests to SQS, billed in 64KB chunks. So 1M requests at 128KB uses 2M requests.\n+\n+  aws_ssm_parameter.my_ssm_parameter:\n+    api_throughput_limit: advanced    # SSM Parameter Throughput limit, can be: advanced, higher.\n+    monthly_api_interactions: 1000000 # Monthly API interactions.\n+    parameter_storage_hrs: 730        # Number of hours in the month parameters will be stored for.\n+\n+  aws_ssm_activation.my_activations:\n+    instance_tier: advanced # Instance tier being used, can be: advanced, standard.\n+    instances: 100          # Number of instances being managed.\n+\n+  aws_vpc_endpoint.my_endpoint:\n+    monthly_data_processed_gb: 1000 # Monthly data processed by the VPC endpoint(s) in GB.\n+\n+  aws_vpn_connection.my_connection:\n+    monthly_data_processed_gb: 100 # Monthly data processed through a transit gateway attached to your VPN Connection in GB.\n+\n+  aws_cloudfront_distribution.my_s3_distribution:\n+    monthly_data_transfer_to_internet_gb: # Monthly regional data transfer out to internet from the following, in GB:\n+      us: 51200000          # United States, Mexico, Canada\n+      europe: 220000        # Europe, Israel\n+      south_africa: 10000   # South Africa, Kenya, Middle East\n+      south_america: 50000  # South America\n+      japan: 387000         # Japan\n+      australia: 500000     # Australia, New Zealand\n+      asia_pacific: 1200000 # Hong Kong, Philippines, Singapore, South Korea, Taiwan, Thailand\n+      india: 200000         # India\n+    monthly_data_transfer_to_origin_gb: # Monthly regional data transfer out to origin from the following, in GB:\n+      us: 2200           # United States, Mexico, Canada\n+      europe: 1000       # Europe, Israel\n+      south_africa: 300  # South Africa, Kenya, Middle East\n+      south_america: 200 # South America\n+      japan: 10          # Japan\n+      australia: 100     # Australia, New Zealand\n+      asia_pacific: 30   # Hong Kong, Philippines, Singapore, South Korea, Taiwan, Thailand\n+      india: 80          # India\n+    monthly_http_requests: # Monthly number of HTTP requests to:\n+      us: 80000            # United States, Mexico, Canada\n+      europe: 40000        # Europe, Israel\n+      south_africa: 20000  # South Africa, Kenya, Middle East\n+      south_america: 10000 # South America\n+      japan: 3000          # Japan\n+      australia: 15000     # Australia, New Zealand\n+      asia_pacific: 45000  # Hong Kong, Philippines, Singapore, South Korea, Taiwan, Thailand\n+      india: 10000         # India\n+    monthly_https_requests: # Monthly number of HTTPS requests to:\n+      us: 180000           # United States, Mexico, Canada\n+      europe: 10000        # Europe, Israel\n+      south_africa: 50000  # South Africa, Kenya, Middle East\n+      south_america: 30000 # South America\n+      japan: 1000          # Japan\n+      australia: 45000     # Australia, New Zealand\n+      asia_pacific: 25000  # Hong Kong, Philippines, Singapore, South Korea, Taiwan, Thailand\n+      india: 30000         # India\n+    monthly_shield_requests: # Monthly number of shield requests to:\n+      us: 90000          # United States\n+      europe: 30000      # Europe\n+      south_america: 200 # South America\n+      japan: 12300       # Japan\n+      australia: 2300    # Australia\n+      singapore: 58600   # Singapore\n+      south_korea: 24000 # South Korea\n+      india: 10000       # India\n+    monthly_invalidation_requests: 1200 # Monthly number of invalidation requests.\n+    monthly_encryption_requests: 100000 # Monthly number of field level encryption requests.\n+    monthly_log_lines: 5000000          # Monthly number of real-time log lines.\n+    custom_ssl_certificates: 3          # Number of dedicated IP custom SSL certificates.\n+\n+  aws_autoscaling_group.my_asg:\n+    instances: 15 # Number of instances in the autoscaling group.\n+  \n+  #\n+  # Terraform GCP resources\n+  #\n+  google_cloudfunctions_function.my_function:\n+    request_duration_ms: 300               # Average duration of each request in milliseconds.\n+    monthly_function_invocations: 10000000 # Monthly number of function invocations.\n+    monthly_outbound_data_gb: 100          # Monthly data transferred from the function out to somewhere else in GB.\n+\n+  google_compute_router_nat.my_nat:\n+    assigned_vms: 4                 # Number of VM instances assigned to the NAT gateway\n+    monthly_data_processed_gb: 1000 # Monthly data processed (ingress and egress) by the NAT gateway in GB\n+\n+  google_container_cluster.my_cluster:\n+    nodes: 4    # Node count per zone for the default node pool\n+    node_pool[0]:\n+      nodes: 2  # Node count per zone for the first node pool\n+\n+  google_container_node_pool.my_node_pool:\n+    nodes: 4 # Node count per zone for the node pool\n+\n+  google_dns_record_set.my_record_set:\n+    monthly_queries:  1000000 # Monthly DNS queries.\n+\n+  google_kms_crypto_key.my_keys:\n+    key_versions: 10000             # Number of key versions.\n+    monthly_key_operations: 1000000 # Monthly number of key operations.\n+\n+  google_monitoring_metric_descriptor.my_monitoring:\n+    monthly_monitoring_data_mb: 5000 # Monthly monitoring data in MB.\n+    monthly_api_calls: 1000000       # Monthly read API calls (write calls are free).\n+\n+  google_pubsub_subscription.my_subscription:\n+    monthly_message_data_tb: 7.416 # Monthly amount of message data pulled by the subscription in TB.\n+    storage_gb: 605                # Storage for retaining acknowledged messages in GB.\n+    snapshot_storage_gb: 70.6      # Snapshot storage for unacknowledged messages in GB.\n+\n+  google_pubsub_topic.my_topic:\n+    monthly_message_data_tb: 7.416 # Monthly amount of message data published to the topic in TB.\n+    \n+  google_storage_bucket.my_storage_bucket:\n+    storage_gb: 150                   # Total size of bucket in GB.\n+    monthly_class_a_operations: 40000 # Monthly number of class A operations (object adds, bucket/object list).\n+    monthly_class_b_operations: 20000 # Monthly number of class B operations (object gets, retrieve bucket/object metadata).\n+    monthly_data_retrieval_gb: 500    # Monthly amount of data retrieved in GB.\n+    monthly_egress_data_transfer_gb:  # Monthly data transfer from Cloud Storage to the following, in GB:\n+      same_continent: 550  # Same continent.\n+      worldwide: 12500     # Worldwide excluding Asia, Australia.\n+      asia: 1500           # Asia excluding China, but including Hong Kong.\n+      china: 50            # China excluding Hong Kong.\n+      australia: 250       # Australia.\n\\ No newline at end of file"
      },
      {
        "filename": "principal/main.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -16,8 +16,8 @@ resource \"aws_instance\" \"web_app\" {\n   ebs_block_device {\n     device_name = \"my_data\"\n     volume_type = \"io1\"                     # <<<<< Try changing this to gp2 to compare costs\n-    volume_size = 1000\n-    iops        = 800\n+    volume_size = 3000\n+    iops        = 1200\n   }\n }\n \n@@ -26,5 +26,5 @@ resource \"aws_lambda_function\" \"hello_world\" {\n   role          = \"arn:aws:lambda:us-east-1:account-id:resource-id\"\n   handler       = \"exports.test\"\n   runtime       = \"nodejs12.x\"\n-  memory_size   = 2048                      # <<<<< Try changing this to 512 to compare costs\n+  memory_size   = 1024                      # <<<<< Try changing this to 512 to compare costs\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["aws", "lambda_less_memory"],
    "notes": "Reducing the memory size of a Lambda"
  },
  {
    "url": "https://github.com/UriKatsirPrivate/gcp-landing-zone/commit/0160ab1f89489abec4120ef4102bf5964b0af2fe",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -11,6 +11,7 @@ module \"projects\" {\n   folder-id         = \"${module.folders.id}\"\n   project-id        = \"${random_string.random.result}\"\n   project-id-no-vpc = \"${random_string.random-no-vpc.result}\"\n+  billing_account   = var.billing_account\n }\n \n module \"vpc\" {"
      },
      {
        "filename": "modules/projects/main.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -10,5 +10,6 @@ resource \"google_project\" \"project-no-vpc\" {\n   project_id          = var.project-id-no-vpc\n   folder_id           = var.folder-id\n   auto_create_network = false\n-  billing_account     = \"013FD1-9B204A-8B60C7\"\n+  # billing_account     = \"013FD1-9B204A-8B60C7\"\n+  billing_account = var.billing_account\n }"
      },
      {
        "filename": "modules/projects/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -52,3 +52,8 @@ variable \"disable_dependent_services\" {\n   type        = string\n }\n \n+variable \"billing_account\" {\n+  type        = string\n+  description = \"Billing account for the project\"\n+}\n+"
      },
      {
        "filename": "variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -89,3 +89,9 @@ variable \"https_source_ranges\" {\n   description = \"List of IP CIDR ranges for tag-based HTTPS rule, defaults to 0.0.0.0/0.\"\n   default     = [\"0.0.0.0/0\"]\n }\n+\n+variable \"billing_account\" {\n+  type        = string\n+  description = \"Billing account for the project\"\n+  default     = \"013FD1-9B204A-8B60C7\"\n+}"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/AJarombek/global-aws-infrastructure/commit/4a89f4b8235961275fa0e6aaf20848f2b8b7e733",
    "files": [
      {
        "filename": "budgets/README.md",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+### Overview\n+\n+AWS cost management budget configurations.  Used to prevent any unexpected AWS cloud expenses.\n+\n+### Files\n+\n+| Filename                  | Description                                                                             |\n+|---------------------------|-----------------------------------------------------------------------------------------|\n+| `main.tf`                 | Main Terraform script for AWS Cost Management Budget configuration.                     |\n\\ No newline at end of file"
      },
      {
        "filename": "budgets/main.tf",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "status": "added",
        "patch": "@@ -0,0 +1,41 @@\n+/**\n+ * AWS cost management budget configuration for my account.\n+ * Author: Andrew Jarombek\n+ * Date: 2/10/2021\n+ */\n+\n+provider \"aws\" {\n+  region = \"us-east-1\"\n+}\n+\n+terraform {\n+  required_version = \">= 0.13\"\n+\n+  required_providers {\n+    aws = \">= 3.27.0\"\n+  }\n+\n+  backend \"s3\" {\n+    bucket = \"andrew-jarombek-terraform-state\"\n+    encrypt = true\n+    key = \"global-aws-infrastructure/budgets\"\n+    region = \"us-east-1\"\n+  }\n+}\n+\n+resource \"aws_budgets_budget\" \"cost\" {\n+  name = \"Andrew Jarombek AWS Budget\"\n+  budget_type = \"COST\"\n+  limit_amount = \"325\"\n+  limit_unit = \"USD\"\n+  time_period_start = \"2021-02-01_12:00\"\n+  time_unit = \"MONTHLY\"\n+\n+  notification {\n+    comparison_operator = \"GREATER_THAN\"\n+    notification_type = \"FORECASTED\"\n+    threshold = 100\n+    threshold_type = \"PERCENTAGE\"\n+    subscriber_email_addresses = [\"andrew@jarombek.com\", \"ajarombek95@gmail.com\"]\n+  }\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "test/suites/README.md",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -8,8 +8,9 @@ repository.\n | Filename                   | Description                                                                             |\n |----------------------------|-----------------------------------------------------------------------------------------|\n | `testApplicationVPC.py`    | Test suite for the Application VPC.                                                     |\n-| `testBackend.py`           | Test suite for AWS CloudTrail configuration.                                            |\n-| `testCloudTrail.py`        | Test suite for the Terraform S3 Backend.                                                |\n+| `testBackend.py`           | Test suite for the Terraform S3 Backend.                                                |\n+| `testBudgets.py`           | Test suite for AWS cost management budgets.                                             |\n+| `testCloudTrail.py`        | Test suite for AWS CloudTrail configuration.                                            |\n | `testEKS.py`               | Test suite for the EKS cluster.                                                         |\n | `testIAM.py`               | Test suite for IAM roles and policies used globally.                                    |\n | `testJarombekComApp.py`    | Test suite for the Amazon HTTPS certificates.                                           |"
      },
      {
        "filename": "test/suites/testBudgets.py",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "status": "added",
        "patch": "@@ -0,0 +1,36 @@\n+\"\"\"\n+Unit tests for my AWS accounts Cost Management budget configuration.\n+Author: Andrew Jarombek\n+Date: 2/10/2021\n+\"\"\"\n+\n+import unittest\n+\n+import boto3\n+from boto3_type_annotations.budgets import Client as BudgetsClient\n+from boto3_type_annotations.sts import Client as STSClient\n+\n+\n+class TestCloudTrail(unittest.TestCase):\n+\n+    def setUp(self) -> None:\n+        \"\"\"\n+        Perform set-up logic before executing any unit tests\n+        \"\"\"\n+        self.budgets: BudgetsClient = boto3.client('budgets')\n+        self.sts: STSClient = boto3.client('sts')\n+\n+    def test_budget_exists(self) -> None:\n+        \"\"\"\n+        Determine if an AWS Cost Management budget exists as expected.\n+        \"\"\"\n+        account_id = self.sts.get_caller_identity().get('Account')\n+        budget: dict = self.budgets\\\n+            .describe_budget(AccountId=account_id, BudgetName='Andrew Jarombek AWS Budget')\\\n+            .get('Budget')\n+\n+        self.assertEqual('Andrew Jarombek AWS Budget', budget.get('BudgetName'))\n+        self.assertEqual('325.0', budget.get('BudgetLimit').get('Amount'))\n+        self.assertEqual('USD', budget.get('BudgetLimit').get('Unit'))\n+        self.assertEqual('MONTHLY', budget.get('TimeUnit'))\n+        self.assertEqual('COST', budget.get('BudgetType'))"
      },
      {
        "filename": "test/suites/testCloudTrail.py",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -8,6 +8,7 @@\n \n import boto3\n from boto3_type_annotations.cloudtrail import Client as CloudTrailClient\n+from boto3_type_annotations.s3 import Client as S3Client\n \n \n class TestCloudTrail(unittest.TestCase):\n@@ -17,7 +18,9 @@ def setUp(self) -> None:\n         Perform set-up logic before executing any unit tests\n         \"\"\"\n         self.cloud_trail: CloudTrailClient = boto3.client('cloudtrail')\n+        self.s3: S3Client = boto3.client('s3')\n \n+    @unittest.skip('CloudTrail not currently enabled.')\n     def test_cloud_trail_exists(self) -> None:\n         \"\"\"\n         Determine if the AWS CloudTrail trail exists as expected.\n@@ -26,3 +29,11 @@ def test_cloud_trail_exists(self) -> None:\n         trail = cloud_trail_info.get('Trail')\n         self.assertEqual(trail.get('Name'), 'andrew-jarombek-cloudtrail')\n         self.assertEqual(trail.get('S3BucketName'), 'andrew-jarombek-cloud-trail')\n+\n+    @unittest.skip('CloudTrail not currently enabled.')\n+    def test_s3_bucket_exists(self) -> None:\n+        \"\"\"\n+        Test if an S3 bucket for andrew-jarombek-cloud-trail exists\n+        \"\"\"\n+        s3_bucket = self.s3.list_objects(Bucket='andrew-jarombek-cloud-trail')\n+        return s3_bucket.get('Name') == 'andrew-jarombek-cloud-trail'"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/AJarombek/global-aws-infrastructure/commit/61e07012be3f140daf18d33b3be19c80147f12f2",
    "files": [
      {
        "filename": "lambda/daily-cost/lambda.py",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+\"\"\"\n+Lambda function used to determine the daily cost of AWS expenses.\n+Author: Andrew Jarombek\n+Date: 7/17/2021\n+\"\"\"\n+\n+import boto3\n+\n+\n+def handler(event, context):\n+    pass"
      },
      {
        "filename": "lambda/main.tf",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "status": "modified",
        "patch": "@@ -0,0 +1,92 @@\n+/**\n+ * AWS Lambda functions definitions and configuration.\n+ * Author: Andrew Jarombek\n+ * Date: 7/15/2021\n+ */\n+\n+provider \"aws\" {\n+  region = \"us-east-1\"\n+}\n+\n+terraform {\n+  required_version = \">= 1.0.1\"\n+\n+  required_providers {\n+    aws = \">= 3.48.0\"\n+  }\n+\n+  backend \"s3\" {\n+    bucket  = \"andrew-jarombek-terraform-state\"\n+    encrypt = true\n+    key     = \"global-aws-infrastructure/lambda\"\n+    region  = \"us-east-1\"\n+  }\n+}\n+\n+resource \"aws_lambda_function\" \"daily-cost\" {\n+  function_name = \"AWSDailyCost\"\n+  filename = \"${path.module}/AWSDailyCost.zip\"\n+  description = \"AWS daily cost function\"\n+  handler = \"lambda.handler\"\n+  role = aws_iam_role.daily-cost-lambda-role.arn\n+  runtime = \"python3.8\"\n+  source_code_hash = filebase64sha256(\"${path.module}/AWSDailyCost.zip\")\n+  timeout = 10\n+  memory_size = 128\n+\n+  tags = {\n+    Name = \"aws-daily-cost\"\n+    Environment = \"all\"\n+    Application = \"all\"\n+  }\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"daily-cost-log-group\" {\n+  name = \"/aws/lambda/AWSDailyCost\"\n+  retention_in_days = 7\n+}\n+\n+data \"aws_iam_policy_document\" \"daily-cost-lambda-assume-role-policy\" {\n+  statement {\n+    actions = [\"sts:AssumeRole\"]\n+    effect = \"Allow\"\n+\n+    principals {\n+      identifiers = [\"lambda.amazonaws.com\"]\n+      type = \"Service\"\n+    }\n+  }\n+}\n+\n+data \"aws_iam_policy_document\" \"daily-cost-lambda-policy\" {\n+  statement {\n+    sid = \"AWSDailyCostLambda\"\n+    effect = \"Allow\"\n+    actions = [\n+      \"logs:CreateLogGroup\",\n+      \"logs:CreateLogStream\",\n+      \"logs:PutLogEvents\",\n+      \"logs:DescribeLogStreams\"\n+    ]\n+    resources = [\"*\"]\n+  }\n+}\n+\n+resource \"aws_iam_role\" \"daily-cost-lambda-role\" {\n+  name = \"daily-cost-lambda-role\"\n+  path = \"/global/\"\n+  assume_role_policy = data.aws_iam_policy_document.daily-cost-lambda-assume-role-policy.json\n+  description = \"IAM role for an AWS Lambda function which computes daily AWS costs\"\n+}\n+\n+resource \"aws_iam_policy\" \"daily-cost-lambda-policy\" {\n+  name = \"daily-cost-lambda-policy\"\n+  path = \"/global/\"\n+  policy = data.aws_iam_policy_document.daily-cost-lambda-policy.json\n+  description = \"IAM policy for an AWS Lambda function which computes daily AWS costs\"\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"lambda-logging-policy-attachment\" {\n+  role = aws_iam_role.daily-cost-lambda-role.name\n+  policy_arn = aws_iam_policy.daily-cost-lambda-policy.arn\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/gudlyf/TerraformOpenVPN/commit/be1245d8634025277ba79a4155ee88d7eaffcdfb",
    "files": [
      {
        "filename": "AWS/ec2.tf",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -6,17 +6,12 @@ data \"aws_ami\" \"ubuntu\" {\n     values = [\"ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*\"]\n   }\n \n-  filter {\n-    name   = \"virtualization-type\"\n-    values = [\"hvm\"]\n-  }\n-\n   owners = [\"099720109477\"]\n }\n \n resource \"aws_instance\" \"ovpn\" {\n   ami           = \"${data.aws_ami.ubuntu.id}\"\n-  instance_type = \"t2.nano\"\n+  instance_type = \"t3.nano\"\n \n   associate_public_ip_address = true\n   source_dest_check           = false"
      },
      {
        "filename": "AWS/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n provider \"aws\" {\n   profile = \"${var.profile}\"\n-  region = \"${var.region}\"\n+  region  = \"${var.region}\"\n }"
      },
      {
        "filename": "AWS/sg.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n resource \"aws_security_group\" \"ovpn_sg\" {\n-  name        = \"ovpn_sg\"\n+  name_prefix = \"ovpn_sg-\"\n   description = \"OpenVPN SG\"\n \n   ingress {\n@@ -9,7 +9,7 @@ resource \"aws_security_group\" \"ovpn_sg\" {\n     cidr_blocks = [\"0.0.0.0/0\"]\n   }\n \n-ingress {\n+  ingress {\n     from_port   = 1194\n     to_port     = 1194\n     protocol    = \"udp\"\n@@ -22,5 +22,4 @@ ingress {\n     protocol    = \"-1\"\n     cidr_blocks = [\"0.0.0.0/0\"]\n   }\n-\n }"
      },
      {
        "filename": "AWS/terraform.tfvars",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+region = \"ca-central-1\"\n+private_key_file = \"../certs/ovpn\"\n+public_key_file = \"../certs/ovpn.pub\"\n+client_config_path = \"../client_configs\"\n+client_config_name = \"aws-ovpn-client\"\n+cert_details = \"../cert_details\""
      },
      {
        "filename": "AWS/userdata.sh",
        "additions": 24,
        "deletions": 6,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -14,33 +14,50 @@ echo \"Adding official OpenVPN Distro ...\"\n \n wget -O - https://swupdate.openvpn.net/repos/repo-public.gpg|apt-key add -\n \n-echo \"deb http://build.openvpn.net/debian/openvpn/stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/openvpn-aptrepo.list\n+echo \"deb http://build.openvpn.net/debian/openvpn/stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/openvpn.list\n+\n+echo \"Update apt sources ...\"\n+echo \"deb http://archive.ubuntu.com/ubuntu/ xenial main restricted\n+deb http://archive.ubuntu.com/ubuntu/ xenial-updates main restricted\n+deb http://archive.ubuntu.com/ubuntu/ xenial universe\n+deb http://archive.ubuntu.com/ubuntu/ xenial-updates universe\n+deb http://archive.ubuntu.com/ubuntu/ xenial multiverse\n+deb http://archive.ubuntu.com/ubuntu/ xenial-updates multiverse\n+deb http://archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse\" > /etc/apt/sources.list.d/ubuntu.list\n \n echo \"Fully update ...\"\n \n-apt-get update && apt-get -y dist-upgrade\n+unset UCF_FORCE_CONFFOLD\n+export UCF_FORCE_CONFFNEW=YES\n+ucf --purge /boot/grub/menu.lst\n+\n+export DEBIAN_FRONTEND=noninteractive\n+apt update\n+apt -o Dpkg::Options::=\"--force-confnew\" --force-yes -fuy dist-upgrade\n \n echo \"Install packages we need ...\"\n \n-apt-get -y install openvpn easy-rsa fail2ban\n+apt -y install openvpn easy-rsa fail2ban unattended-upgrades\n \n echo \"Enable and configure firewall ...\"\n \n-ufw enable\n+ufw --force enable\n ufw default allow outgoing\n ufw allow ssh\n ufw allow 1194/udp\n \n+TMPFILE=$(mktemp)\n+\n echo \"# START OPENVPN RULES\n # NAT table rules\n *nat\n :POSTROUTING ACCEPT [0:0]\n # Allow traffic from OpenVPN client to $INTERFACE\n -A POSTROUTING -s 192.168.51.0/24 -o $INTERFACE -j MASQUERADE\n COMMIT\n-# END OPENVPN RULES\n+# END OPENVPN RULES\" | cat - /etc/ufw/before.rules > $TMPFILE\n \n-$(cat /etc/ufw/before.rules)\" > /etc/ufw/before.rules\n+mv -f $TMPFILE /etc/ufw/before.rules\n \n sed -i.bak s/DEFAULT_FORWARD_POLICY=\\\"DROP\\\"/DEFAULT_FORWARD_POLICY=\\\"ACCEPT\\\"/g /etc/default/ufw\n \n@@ -153,4 +170,5 @@ EOF\n \n chmod 444 /etc/openvpn/client.ovpn\n \n+\n echo \"DONE!\""
      },
      {
        "filename": "AWS/variables.tf",
        "additions": 8,
        "deletions": 23,
        "changes": 31,
        "status": "modified",
        "patch": "@@ -1,25 +1,10 @@\n-variable \"profile\" {}\n-\n-variable \"region\" {\n-  default = \"ca-central-1\"\n-}\n-\n-variable \"private_key_file\" {\n-  default = \"../certs/ovpn\"\n-}\n-\n-variable \"public_key_file\" {\n-  default = \"../certs/ovpn.pub\"\n+variable \"profile\" {\n+  default = \"default\"\n }\n \n-variable \"client_config_path\" {\n-  default = \"../client_configs\"\n-}\n-\n-variable \"client_config_name\" {\n-  default = \"aws-ovpn-client\"\n-}\n-\n-variable \"cert_details\" {\n-  default = \"../cert_details\"\n-}\n+variable \"region\" {}\n+variable \"private_key_file\" {}\n+variable \"public_key_file\" {}\n+variable \"client_config_path\" {}\n+variable \"client_config_name\" {}\n+variable \"cert_details\" {}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from t2.nano to t3.nano"
  },
  {
    "url": "https://github.com/gudlyf/TerraformOpenVPN/commit/4bc861c153b65a2d7c0d5f3fac30ab72b0fc6942",
    "files": [
      {
        "filename": "Azure/instance.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -3,7 +3,7 @@ resource \"azurerm_virtual_machine\" \"openvpn\" {\n   location              = var.location\n   resource_group_name   = azurerm_resource_group.rg.name\n   network_interface_ids = [azurerm_network_interface.nic.id]\n-  vm_size               = \"Standard_A0\"\n+  vm_size               = \"Standard_B2s\"\n \n   # Uncomment this line to delete the OS disk automatically when deleting the VM\n   delete_os_disk_on_termination = true"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["azure", "cheaper_instance"],
    "notes": "Move from Standard_A0 to Standard_B2s"
  },
  {
    "url": "https://github.com/cloudchacho/terraform-google-hedwig-subscription/commit/ab8808de2e078c572e9d88fdc57ff91b8e4acc36",
    "files": [
      {
        "filename": "README.md",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -23,7 +23,8 @@ module \"sub-dev-myapp-dev-user-updated\" {\n }\n ```\n \n-It's recommended that `subscription` include your environment. \n+If using a single Google project for multiple environments (e.g. dev/staging/prod), ensure that `name` includes your \n+environment name.\n \n Naming convention - lowercase alphanumeric and dashes only.\n "
      },
      {
        "filename": "main.tf",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -7,18 +7,3 @@ resource \"google_pubsub_subscription\" \"subscription\" {\n \n   labels = \"${var.labels}\"\n }\n-\n-data \"google_client_config\" \"current\" {}\n-\n-resource \"google_dataflow_job\" \"dataflow\" {\n-  name              = \"${google_pubsub_subscription.subscription.name}\"\n-  temp_gcs_location = \"${var.dataflow_tmp_gcs_location}\"\n-  template_gcs_path = \"${var.dataflow_template_gcs_path}\"\n-\n-  zone = \"${var.dataflow_zone}\"\n-\n-  parameters = {\n-    inputSubscription = \"projects/${data.google_client_config.current.project}/subscriptions/${google_pubsub_subscription.subscription.name}\"\n-    outputTopic       = \"projects/${data.google_client_config.current.project}/topics/hedwig-${var.queue}\"\n-  }\n-}"
      },
      {
        "filename": "variables.tf",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -10,15 +10,3 @@ variable \"labels\" {\n   description = \"Labels to attach to the subscription\"\n   type        = \"map\"\n }\n-\n-variable \"dataflow_tmp_gcs_location\" {\n-  description = \"A gs bucket location for storing temporary files by Google Dataflow, e.g. gs://myBucket/tmp\"\n-}\n-\n-variable \"dataflow_template_gcs_path\" {\n-  description = \"The template path for Google Dataflow, e.g. gs://dataflow-templates/2019-04-03-00/Cloud_PubSub_to_Cloud_PubSub\"\n-}\n-\n-variable \"dataflow_zone\" {\n-  description = \"The zone to use for Dataflow. This may be required if it's not set at the provider level, or that zone doesn't support Dataflow\"\n-}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["gcp", "remove_dataflow"],
    "notes": "Stop using Dataflow which is 'prohibitively expensive' according to the commit message"
  },
  {
    "url": "https://github.com/ohoareau/terraform-modules/commit/d066b8dfa3b03df200afa9a521126a83884cdfb3",
    "files": [
      {
        "filename": "modules/dynamodb-table/main.tf",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -1,8 +1,12 @@\n+locals {\n+  read_capacity = (\"PROVISION\" == var.billing_mode) ? 1 : 0\n+  write_capacity = (\"PROVISION\" == var.billing_mode) ? 1 : 0\n+}\n resource \"aws_dynamodb_table\" \"table\" {\n   count          = var.enabled ? 1 : 0\n   name           = var.name\n-  read_capacity  = (\"PROVISION\" == var.billing_mode) ? 1 : 0\n-  write_capacity = (\"PROVISION\" == var.billing_mode) ? 1 : 0\n+  read_capacity  = local.read_capacity\n+  write_capacity = local.write_capacity\n   hash_key       = var.hash_key\n   range_key      = var.range_key\n   tags           = var.tags\n@@ -31,8 +35,8 @@ resource \"aws_dynamodb_table\" \"table\" {\n         name               = v.key\n         hash_key           = lookup(v.value, \"hash_key\", v.key)\n         range_key          = lookup(v.value, \"range_key\", null)\n-        write_capacity     = lookup(v.value, \"write_capacity\", 1)\n-        read_capacity      = lookup(v.value, \"read_capacity\", 1)\n+        write_capacity     = lookup(v.value, \"write_capacity\", local.write_capacity)\n+        read_capacity      = lookup(v.value, \"read_capacity\", local.read_capacity)\n         projection_type    = lookup(v.value, \"projection_type\", \"ALL\")\n         non_key_attributes = lookup(v.value, \"non_key_attributes\", null)\n     }"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/structurefall/jamulus-builder/commit/7190744187e0aed2df8ce84f2a944294d6d4fc5b",
    "files": [
      {
        "filename": "AWS/autoscaler.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -23,11 +23,12 @@ resource \"aws_autoscaling_group\" \"jamulus\" {\n   launch_configuration      = aws_launch_configuration.jamulus.name\n \n   vpc_zone_identifier       = [\n-    aws_subnet.jamulus_subnet_private.id\n+    aws_subnet.jamulus_subnet.id\n   ]\n \n   target_group_arns = [\n-    aws_lb_target_group.jamulus.arn\n+    aws_lb_target_group.jamulus.arn,\n+    aws_lb_target_group.jamulus_ssh.arn\n   ]\n \n   tags                      = ["
      },
      {
        "filename": "AWS/loadbalancer.tf",
        "additions": 48,
        "deletions": 17,
        "changes": 65,
        "status": "modified",
        "patch": "@@ -1,30 +1,61 @@\n resource \"aws_lb\" \"jamulus\" {\n-    name               = \"jamulus-udp\"\n-    load_balancer_type = \"network\"\n-    subnets            = [\n-      aws_subnet.jamulus_subnet_public.id\n+    name                = \"jamulus-healthchecker\"\n+    load_balancer_type  = \"network\"\n+    subnets             = [\n+      aws_subnet.jamulus_subnet.id\n     ]\n }\n \n resource \"aws_lb_target_group\" \"jamulus\" {\n-  name                 = \"jamulus-target-group\"\n-  target_type          = \"instance\"\n-  vpc_id               = aws_vpc.jamulus.id\n-  port                 = 22124\n-  protocol             = \"UDP\"\n-\n-  tags                 = {\n-    Application        = \"jamulus\"\n+  name                  = \"jamulus-target-group\"\n+  target_type           = \"instance\"\n+  vpc_id                = aws_vpc.jamulus.id\n+  port                  = 22124\n+  protocol              = \"UDP\"\n+\n+  health_check {\n+    port                = 22124\n+    protocol            = \"TCP\"\n+    healthy_threshold   = 5\n+    unhealthy_threshold = 5\n+    interval            = 2\n+  }\n+\n+  tags                  = {\n+    Application         = \"jamulus\"\n   }\n }\n \n resource \"aws_lb_listener\" \"jamulus_listener\" {\n-  load_balancer_arn    = aws_lb.jamulus.arn\n-  port                 = 22124\n-  protocol             = \"UDP\"\n+  load_balancer_arn     = aws_lb.jamulus.arn\n+  port                  = 22124\n+  protocol              = \"UDP\"\n+\n+  default_action {\n+    type                = \"forward\"\n+    target_group_arn    = aws_lb_target_group.jamulus.arn\n+  }\n+}\n+\n+resource \"aws_lb_target_group\" \"jamulus_ssh\" {\n+  name                  = \"jamulus-target-group-ssh\"\n+  target_type           = \"instance\"\n+  vpc_id                = aws_vpc.jamulus.id\n+  port                  = 22\n+  protocol              = \"TCP\"\n+\n+  tags                  = {\n+    Application         = \"jamulus\"\n+  }\n+}\n+\n+resource \"aws_lb_listener\" \"jamulus_ssh\" {\n+  load_balancer_arn     = aws_lb.jamulus.arn\n+  port                  = 22\n+  protocol              = \"TCP\"\n \n   default_action {\n-    type               = \"forward\"\n-    target_group_arn   = aws_lb_target_group.jamulus.arn\n+    type                = \"forward\"\n+    target_group_arn    = aws_lb_target_group.jamulus_ssh.arn\n   }\n }"
      },
      {
        "filename": "AWS/network.tf",
        "additions": 4,
        "deletions": 62,
        "changes": 66,
        "status": "modified",
        "patch": "@@ -7,22 +7,12 @@ resource \"aws_vpc\" \"jamulus\" {\n   }\n }\n \n-resource \"aws_subnet\" \"jamulus_subnet_private\" {\n+resource \"aws_subnet\" \"jamulus_subnet\" {\n     vpc_id           = aws_vpc.jamulus.id\n     cidr_block       = \"172.16.0.0/24\"\n \n     tags             = {\n-      Name           = \"jamulus-subnet-private\"\n-      Application    = \"jamulus\"\n-    }\n-}\n-\n-resource \"aws_subnet\" \"jamulus_subnet_public\" {\n-    vpc_id           = aws_vpc.jamulus.id\n-    cidr_block       = \"172.16.1.0/24\"\n-\n-    tags             = {\n-      Name           = \"jamulus-subnet-public\"\n+      Name           = \"jamulus-subnet\"\n       Application    = \"jamulus\"\n     }\n }\n@@ -36,59 +26,11 @@ resource \"aws_internet_gateway\" \"jamulus_internet\" {\n   }\n }\n \n-resource \"aws_route_table\" \"public\" {\n-    vpc_id           = aws_vpc.jamulus.id\n-\n-    route {\n-      cidr_block     = \"0.0.0.0/0\"\n-      gateway_id     = aws_internet_gateway.jamulus_internet.id\n-    }\n-\n-    tags               = {\n-      Name             = \"jamulus-public-route-table\"\n-      Application      = \"jamulus\"\n-    }\n-}\n-\n-resource \"aws_route_table\" \"private\" {\n-    vpc_id           = aws_vpc.jamulus.id\n-\n-    route {\n-      cidr_block     = \"0.0.0.0/0\"\n-      nat_gateway_id = aws_nat_gateway.jamulus.id\n-    }\n-\n-    tags               = {\n-      Name             = \"jamulus-private-route-table\"\n-      Application      = \"jamulus\"\n-    }\n-}\n-\n-resource \"aws_route_table_association\" \"public\" {\n-    subnet_id        = aws_subnet.jamulus_subnet_public.id\n-    route_table_id   = aws_route_table.public.id\n-}\n-\n-resource \"aws_route_table_association\" \"private\" {\n-    subnet_id        = aws_subnet.jamulus_subnet_private.id\n-    route_table_id   = aws_route_table.private.id\n-}\n-\n-resource \"aws_eip\" \"nat_eip\" {\n+resource \"aws_eip\" \"access_eip\" {\n   vpc                = true\n \n   tags               = {\n-    Name             = \"jamulus-nat-ip\"\n-    Application      = \"jamulus\"\n-  }\n-}\n-\n-resource \"aws_nat_gateway\" \"jamulus\" {\n-  allocation_id      = aws_eip.nat_eip.id\n-  subnet_id          = aws_subnet.jamulus_subnet_public.id\n-\n-  tags               = {\n-    Name             = \"jamulus-nat\"\n+    Name             = \"jamulus-ip\"\n     Application      = \"jamulus\"\n   }\n }"
      },
      {
        "filename": "AWS/security_groups.tf",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -25,3 +25,29 @@ resource \"aws_security_group\" \"jamulus\" {\n     Application = \"jamulus\"\n   }\n }\n+\n+resource \"aws_security_group\" \"ssh\" {\n+  name          = \"jamulus-ssh\"\n+  description   = \"SSH access to Jamulus through NLB.\"\n+  vpc_id        = aws_vpc.jamulus.id\n+\n+  ingress {\n+    from_port = 22\n+    to_port = 22\n+    protocol = \"tcp\"\n+    cidr_blocks = local.sshblocks\n+  }\n+\n+  egress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = \"-1\"\n+    cidr_blocks = [\n+      \"0.0.0.0/0\"\n+    ]\n+  }\n+\n+  tags          = {\n+    Application = \"jamulus\"\n+  }\n+}"
      },
      {
        "filename": "AWS/variables.tf",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,5 +1,6 @@\n locals {\n   userdata    = file(\"user-data.cloudconfig\")\n+  sshblocks   = concat(formatlist(\"%s/32\", var.sships), [aws_subnet.jamulus_subnet.cidr_block])\n }\n \n data \"aws_availability_zones\" \"available\" {\n@@ -9,5 +10,10 @@ data \"aws_availability_zones\" \"available\" {\n variable \"keypair\" {\n   type        = string\n   description = \"Name of your SSH keypair.\"\n-  default     = \"\"\n+  default     = null\n+}\n+\n+variable \"sships\" {\n+  type        = list(string)\n+  default     = []\n }"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "reduce_subnets", "remove_nat"],
    "notes": "Move to one subnet, removing 'costly' NAT"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/6488091456429ed61264b9cad841eeb6bf871e32",
    "files": [
      {
        "filename": "terraform/projects/infra-database-backups-bucket/main.tf",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -48,11 +48,11 @@ resource \"aws_s3_bucket\" \"database_backups\" {\n \n     transition {\n       storage_class = \"GLACIER\"\n-      days          = 60\n+      days          = 90\n     }\n \n     expiration {\n-      days = 90\n+      days = 120\n     }\n   }\n \n@@ -67,11 +67,11 @@ resource \"aws_s3_bucket\" \"database_backups\" {\n \n     transition {\n       storage_class = \"GLACIER\"\n-      days          = 60\n+      days          = 90\n     }\n \n     expiration {\n-      days = 90\n+      days = 120\n     }\n   }\n \n@@ -86,11 +86,11 @@ resource \"aws_s3_bucket\" \"database_backups\" {\n \n     transition {\n       storage_class = \"GLACIER\"\n-      days          = 60\n+      days          = 90\n     }\n \n     expiration {\n-      days = 90\n+      days = 120\n     }\n   }\n "
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/6cfda6ada5137b232ff442ae9f2aedc8520ee1b4",
    "files": [
      {
        "filename": "terraform/projects/app-asset-master/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -63,7 +63,7 @@ module \"asset-master\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"asset_master\", \"aws_hostname\", \"asset-master-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_asset-master_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = true\n   instance_key_name             = \"${var.stackname}-asset-master\"\n   instance_public_key           = \"${var.ssh_public_key}\""
      },
      {
        "filename": "terraform/projects/app-cache/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -212,7 +212,7 @@ module \"cache\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"cache\", \"aws_hostname\", \"cache-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_cache_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = true\n   instance_key_name             = \"${var.stackname}-cache\"\n   instance_public_key           = \"${var.ssh_public_key}\""
      },
      {
        "filename": "terraform/projects/app-content-store/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -167,7 +167,7 @@ module \"content-store\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"content_store\", \"aws_hostname\", \"content-store-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_content-store_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = true\n   instance_key_name             = \"${var.stackname}-content-store\"\n   instance_public_key           = \"${var.ssh_public_key}\""
      },
      {
        "filename": "terraform/projects/app-mongo/main.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -129,7 +129,7 @@ module \"mongo-1\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"mongo\", \"aws_hostname\", \"mongo-1\")}\"\n   instance_subnet_ids           = \"${matchkeys(values(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), keys(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), list(var.mongo_1_subnet))}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_mongo_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = false\n   instance_key_name             = \"${var.stackname}-mongo\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\"\n@@ -170,7 +170,7 @@ module \"mongo-2\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"mongo\", \"aws_hostname\", \"mongo-2\")}\"\n   instance_subnet_ids           = \"${matchkeys(values(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), keys(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), list(var.mongo_2_subnet))}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_mongo_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = false\n   instance_key_name             = \"${var.stackname}-mongo\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\"\n@@ -211,7 +211,7 @@ module \"mongo-3\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"mongo\", \"aws_hostname\", \"mongo-3\")}\"\n   instance_subnet_ids           = \"${matchkeys(values(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), keys(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), list(var.mongo_3_subnet))}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_mongo_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = false\n   instance_key_name             = \"${var.stackname}-mongo\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\""
      },
      {
        "filename": "terraform/projects/app-publishing-api/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -167,7 +167,7 @@ module \"publishing-api\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"publishing_api\", \"aws_hostname\", \"publishing-api-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_publishing-api_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = true\n   instance_key_name             = \"${var.stackname}-publishing-api\"\n   instance_public_key           = \"${var.ssh_public_key}\""
      },
      {
        "filename": "terraform/projects/app-rummager-elasticsearch/main.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -147,7 +147,7 @@ module \"rummager-elasticsearch-1\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"rummager_elasticsearch\", \"aws_hostname\", \"rummager-elasticsearch-1\", \"cluster_name\", var.cluster_name, \"backups_enabled\", var.rummager_elasticsearch_1_backups_enabled)}\"\n   instance_subnet_ids           = \"${matchkeys(values(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), keys(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), list(var.rummager_elasticsearch_1_subnet))}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_rummager-elasticsearch_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = false\n   instance_key_name             = \"${var.stackname}-rummager-elasticsearch\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\"\n@@ -181,7 +181,7 @@ module \"rummager-elasticsearch-2\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"rummager_elasticsearch\", \"aws_hostname\", \"rummager-elasticsearch-2\", \"cluster_name\", var.cluster_name, \"backups_enabled\", var.rummager_elasticsearch_2_backups_enabled)}\"\n   instance_subnet_ids           = \"${matchkeys(values(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), keys(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), list(var.rummager_elasticsearch_2_subnet))}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_rummager-elasticsearch_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = false\n   instance_key_name             = \"${var.stackname}-rummager-elasticsearch\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\"\n@@ -215,7 +215,7 @@ module \"rummager-elasticsearch-3\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"rummager_elasticsearch\", \"aws_hostname\", \"rummager-elasticsearch-3\", \"cluster_name\", var.cluster_name, \"backups_enabled\", var.rummager_elasticsearch_3_backups_enabled)}\"\n   instance_subnet_ids           = \"${matchkeys(values(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), keys(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), list(var.rummager_elasticsearch_3_subnet))}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_rummager-elasticsearch_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = false\n   instance_key_name             = \"${var.stackname}-rummager-elasticsearch\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\""
      },
      {
        "filename": "terraform/projects/app-whitehall-backend/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -191,7 +191,7 @@ module \"whitehall-backend\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"whitehall_backend\", \"aws_hostname\", \"whitehall-backend-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_whitehall-backend_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = true\n   instance_key_name             = \"${var.stackname}-whitehall-backend\"\n   instance_public_key           = \"${var.ssh_public_key}\""
      },
      {
        "filename": "terraform/projects/app-whitehall-frontend/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -108,7 +108,7 @@ module \"whitehall-frontend\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"whitehall_frontend\", \"aws_hostname\", \"whitehall-frontend-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_whitehall-frontend_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.large\"\n+  instance_type                 = \"m5.large\"\n   create_instance_key           = true\n   instance_key_name             = \"${var.stackname}-whitehall-frontend\"\n   instance_public_key           = \"${var.ssh_public_key}\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from m4.large to m5.large"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/aeb3bfbe393cdfc02e62b812843ed75cf5f245e4",
    "files": [
      {
        "filename": "terraform/projects/app-backend/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -191,7 +191,7 @@ module \"backend\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"backend\", \"aws_hostname\", \"backend-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_backend_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.xlarge\"\n+  instance_type                 = \"m5.xlarge\"\n   create_instance_key           = true\n   instance_key_name             = \"${var.stackname}-backend\"\n   instance_public_key           = \"${var.ssh_public_key}\""
      },
      {
        "filename": "terraform/projects/app-graphite/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -200,7 +200,7 @@ module \"graphite-1\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"graphite\", \"aws_hostname\", \"graphite-1\")}\"\n   instance_subnet_ids           = \"${matchkeys(values(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), keys(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), list(var.graphite_1_subnet))}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_graphite_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.xlarge\"\n+  instance_type                 = \"m5.xlarge\"\n   create_instance_key           = true\n   instance_key_name             = \"${var.stackname}-graphite-1\"\n   instance_public_key           = \"${var.ssh_public_key}\""
      },
      {
        "filename": "terraform/projects/app-puppetmaster/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -162,7 +162,7 @@ module \"puppetmaster\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"puppetmaster\", \"aws_hostname\", \"puppetmaster-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_puppetmaster_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.xlarge\"\n+  instance_type                 = \"m5.xlarge\"\n   create_instance_key           = true\n   instance_key_name             = \"${var.stackname}-puppetmaster_bootstrap\"\n   instance_public_key           = \"${var.ssh_public_key}\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from m4.xlarge to m5.xlarge"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/5fa5da9756f12559b490217dd5b173db48e7f2a9",
    "files": [
      {
        "filename": "terraform/projects/app-graphite/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -195,7 +195,7 @@ module \"graphite-1\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"graphite\", \"aws_hostname\", \"graphite-1\")}\"\n   instance_subnet_ids           = \"${matchkeys(values(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), keys(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map), list(var.graphite_1_subnet))}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_graphite_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"m4.xlarge\"\n+  instance_type                 = \"m5.xlarge\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\"\n   instance_elb_ids_length       = \"2\"\n   instance_elb_ids              = [\"${aws_elb.graphite_internal_elb.id}\", \"${aws_elb.graphite_external_elb.id}\"]"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from m4.xlarge to m5.xlarge"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/2ee1ff690416016dfed50dab6f516559f2270bf9",
    "files": [
      {
        "filename": "terraform/projects/app-monitoring/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -141,7 +141,7 @@ module \"monitoring\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"monitoring\", \"aws_hostname\", \"monitoring-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_monitoring_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"t2.medium\"\n+  instance_type                 = \"m5.large\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\"\n   instance_elb_ids_length       = \"2\"\n   instance_elb_ids              = [\"${aws_elb.monitoring_external_elb.id}\", \"${aws_elb.monitoring_internal_elb.id}\"]"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "Move to a larger/more expensive instance due to CPU limitations"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/19d187e4a29147cbcf1cfae456cfcbfa8ad52b45",
    "files": [
      {
        "filename": "terraform/projects/app-postgresql/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -80,7 +80,7 @@ module \"postgresql-primary_rds_instance\" {\n   username            = \"${var.username}\"\n   password            = \"${var.password}\"\n   allocated_storage   = \"190\"\n-  instance_class      = \"db.m4.xlarge\"\n+  instance_class      = \"db.m5.2xlarge\"\n   instance_name       = \"${var.stackname}-postgresql-primary\"\n   multi_az            = \"${var.multi_az}\"\n   security_group_ids  = [\"${data.terraform_remote_state.infra_security_groups.sg_postgresql-primary_id}\"]\n@@ -102,7 +102,7 @@ module \"postgresql-standby_rds_instance\" {\n \n   name                       = \"${var.stackname}-postgresql-standby\"\n   default_tags               = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"postgresql_standby\")}\"\n-  instance_class             = \"db.m4.xlarge\"\n+  instance_class             = \"db.m5.2xlarge\"\n   instance_name              = \"${var.stackname}-postgresql-standby\"\n   security_group_ids         = [\"${data.terraform_remote_state.infra_security_groups.sg_postgresql-primary_id}\"]\n   create_replicate_source_db = \"1\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "new_gen"],
    "notes": "Move from db.m4.xlarge to db.m5.2xlarge because of CPU limitations; the newer gen is cheaper, but the instance is more expensive"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/5d30d7d7ca658bed21677b1aa56c72a0e0cd737b",
    "files": [
      {
        "filename": "terraform/projects/app-data-science/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -130,7 +130,7 @@ module \"data-science-2\" {\n   default_tags                  = \"${map(\"aws_environment\", var.aws_environment, \"aws_migration\", \"data-science\", \"aws_hostname\", \"data-science-2\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.public_subnet_ids}\"\n   instance_security_group_ids   = [\"${aws_security_group.data-science.id}\"]\n-  instance_type                 = \"p3.2xlarge\"\n+  instance_type                 = \"p3.8xlarge\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\"\n   instance_elb_ids              = [\"${aws_elb.data-science_external_elb.id}\"]\n   instance_elb_ids_length       = \"1\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "Move to a larger/more expensive instance to reduce computation time; cost is not affected according to the commit"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/fbd513a3c74bf20ecdb67a4243d30356e8b86a01",
    "files": [
      {
        "filename": "terraform/projects/app-search/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -137,7 +137,7 @@ module \"search\" {\n   default_tags                  = \"${map(\"Project\", var.stackname, \"aws_stackname\", var.stackname, \"aws_environment\", var.aws_environment, \"aws_migration\", \"search\", \"aws_hostname\", \"search-1\")}\"\n   instance_subnet_ids           = \"${data.terraform_remote_state.infra_networking.private_subnet_ids}\"\n   instance_security_group_ids   = [\"${data.terraform_remote_state.infra_security_groups.sg_search_id}\", \"${data.terraform_remote_state.infra_security_groups.sg_management_id}\"]\n-  instance_type                 = \"t2.medium\"\n+  instance_type                 = \"c5.large\"\n   instance_additional_user_data = \"${join(\"\\n\", null_resource.user_data.*.triggers.snippet)}\"\n   instance_elb_ids_length       = \"1\"\n   instance_elb_ids              = [\"${aws_elb.search_elb.id}\"]"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "Move to a larger/more expensive instance due to CPU limits, without affecting cost"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/74fe1ac392549eb3aad67d239310b92cc9f0dd10",
    "files": [
      {
        "filename": "terraform/projects/app-elasticsearch5/README.md",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -39,6 +39,8 @@ doesn't support:\n | elasticsearch5_master_instance_type | Instance type of the dedicated master nodes in the cluster | string | `c4.large.elasticsearch` | no |\n | elasticsearch5_snapshot_start_hour | The hour in which the daily snapshot is taken | string | `1` | no |\n | elasticsearch_subnet_names | Names of the subnets to place the ElasticSearch domain in | list | - | yes |\n+| internal_domain_name | The domain name of the internal DNS records, it could be different from the zone name | string | - | yes |\n+| internal_zone_name | The name of the Route53 zone that contains internal records | string | - | yes |\n | remote_state_bucket | S3 bucket we store our terraform state in | string | - | yes |\n | remote_state_infra_monitoring_key_stack | Override stackname path to infra_monitoring remote state | string | `` | no |\n | remote_state_infra_networking_key_stack | Override infra_networking remote state path | string | `` | no |"
      },
      {
        "filename": "terraform/projects/app-elasticsearch5/main.tf",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "status": "modified",
        "patch": "@@ -118,6 +118,16 @@ variable \"upstream_bucket_arn\" {\n   default     = []\n }\n \n+variable \"internal_zone_name\" {\n+  type        = \"string\"\n+  description = \"The name of the Route53 zone that contains internal records\"\n+}\n+\n+variable \"internal_domain_name\" {\n+  type        = \"string\"\n+  description = \"The domain name of the internal DNS records, it could be different from the zone name\"\n+}\n+\n # Resources\n # --------------------------------------------------------------\n terraform {\n@@ -151,6 +161,11 @@ data \"aws_iam_policy_document\" \"elasticsearch5_log_publishing_policy\" {\n   }\n }\n \n+data \"aws_route53_zone\" \"internal\" {\n+  name         = \"${var.internal_zone_name}\"\n+  private_zone = true\n+}\n+\n resource \"aws_iam_service_linked_role\" \"role\" {\n   aws_service_name = \"es.amazonaws.com\"\n }\n@@ -288,8 +303,8 @@ CONFIG\n }\n \n resource \"aws_route53_record\" \"service_record\" {\n-  zone_id = \"${data.terraform_remote_state.infra_stack_dns_zones.internal_zone_id}\"\n-  name    = \"elasticsearch5.${data.terraform_remote_state.infra_stack_dns_zones.internal_domain_name}\"\n+  zone_id = \"${data.aws_route53_zone.internal.zone_id}\"\n+  name    = \"elasticsearch5.${var.internal_domain_name}\"\n   type    = \"CNAME\"\n   ttl     = 300\n   records = [\"${aws_elasticsearch_domain.elasticsearch5.endpoint}\"]"
      },
      {
        "filename": "terraform/projects/app-elasticsearch5/training.govuk.backend",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+bucket  = \"govuk-training-terraform-state\"\n+key     = \"govuk/app-elasticsearch5.tfstate\"\n+encrypt = true\n+region  = \"eu-west-2\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit does not make cost-related changes"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/e91c7912b25beb51199ccfff2414668bcc69186e",
    "files": [
      {
        "filename": "terraform/projects/app-knowledge-graph/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -215,7 +215,7 @@ resource \"aws_launch_template\" \"knowledge-graph_launch_template\" {\n   name     = \"knowledge-graph_launch-template\"\n   image_id = \"${data.aws_ami.neo4j_community_ami.id}\"\n \n-  instance_type = \"m5.2xlarge\"\n+  instance_type = \"r4.2xlarge\"\n \n   vpc_security_group_ids = [\"${data.terraform_remote_state.infra_security_groups.sg_knowledge-graph_id}\"]\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "Move to a larger/more expensive instance due to RAM limitations, without affecting cost"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/ef79a5aec29133d4c479652863c61f943fbdb42b",
    "files": [
      {
        "filename": "terraform/projects/app-postgresql/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -64,7 +64,7 @@ variable \"internal_domain_name\" {\n variable \"instance_type\" {\n   type        = \"string\"\n   description = \"Instance type used for RDS resources\"\n-  default     = \"db.m5.4xlarge\"\n+  default     = \"db.m5.8xlarge\"\n }\n \n variable \"allocated_storage\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness",
      "storage"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "Move to a larger/more expensive instance due to CPU limitations, increasing cost"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/6283dd7b80fd26ff09d242555a6e56c2eb75471b",
    "files": [
      {
        "filename": "terraform/projects/app-postgresql/README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -17,7 +17,7 @@ RDS PostgreSQL instances\n | aws\\_environment | AWS Environment | `string` | n/a | yes |\n | aws\\_region | AWS region | `string` | `\"eu-west-1\"` | no |\n | cloudwatch\\_log\\_retention | Number of days to retain Cloudwatch logs for | `string` | n/a | yes |\n-| instance\\_type | Instance type used for RDS resources | `string` | `\"db.m5.8xlarge\"` | no |\n+| instance\\_type | Instance type used for RDS resources | `string` | `\"db.m5.12xlarge\"` | no |\n | internal\\_domain\\_name | The domain name of the internal DNS records, it could be different from the zone name | `string` | n/a | yes |\n | internal\\_zone\\_name | The name of the Route53 zone that contains internal records | `string` | n/a | yes |\n | max\\_allocated\\_storage | current maximum storage in GB that AWS can autoscale the RDS storage to | `string` | `\"500\"` | no |"
      },
      {
        "filename": "terraform/projects/app-postgresql/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -64,7 +64,7 @@ variable \"internal_domain_name\" {\n variable \"instance_type\" {\n   type        = \"string\"\n   description = \"Instance type used for RDS resources\"\n-  default     = \"db.m5.8xlarge\"\n+  default     = \"db.m5.12xlarge\"\n }\n \n variable \"allocated_storage\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "provider"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "Move to a larger/more expensive instance due to RDS limitations, increasing cost"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/b4094f63c5d4a216ed7ade1a51ea3653222cf222",
    "files": [
      {
        "filename": "terraform/projects/app-frontend/README.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -31,6 +31,7 @@ Frontend application servers\n | instance\\_type | Instance type used for EC2 resources | `string` | `\"m5.xlarge\"` | no |\n | internal\\_domain\\_name | The domain name of the internal DNS records, it could be different from the zone name | `string` | n/a | yes |\n | internal\\_zone\\_name | The name of the Route53 zone that contains internal records | `string` | n/a | yes |\n+| memcached\\_instance\\_type | Instance type used for the shared Elasticache Memcached instances | `string` | `\"cache.r6g.large\"` | no |\n | remote\\_state\\_bucket | S3 bucket we store our terraform state in | `string` | n/a | yes |\n | remote\\_state\\_infra\\_monitoring\\_key\\_stack | Override stackname path to infra\\_monitoring remote state | `string` | `\"\"` | no |\n | remote\\_state\\_infra\\_networking\\_key\\_stack | Override infra\\_networking remote state path | `string` | `\"\"` | no |"
      },
      {
        "filename": "terraform/projects/app-frontend/main.tf",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -54,6 +54,13 @@ variable \"instance_type\" {\n   default     = \"m5.xlarge\"\n }\n \n+variable \"memcached_instance_type\" {\n+  type    = \"string\"\n+  default = \"cache.r6g.large\" # Memory optimized Graviton2 ($0.206/hour as of 2020)\n+\n+  description = \"Instance type used for the shared Elasticache Memcached instances\"\n+}\n+\n variable \"enable_alb\" {\n   type        = \"string\"\n   description = \"Use application specific target groups and healthchecks based on the list of services in the cname variable.\"\n@@ -189,7 +196,7 @@ resource \"aws_elasticache_cluster\" \"memcached\" {\n   engine          = \"memcached\"\n   engine_version  = \"1.6.6\"\n   port            = 11211\n-  node_type       = \"cache.r6g.large\" # Memory optimized Graviton2 ($0.206/hour as of 2020)\n+  node_type       = \"${var.memcached_instance_type}\"\n   num_cache_nodes = 1\n \n   parameter_group_name = \"default.memcached1.6\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "No change, only abstracting an instance type to a variable"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/f844cd8e254b161bebef04101f8ce177bcd0840c",
    "files": [
      {
        "filename": "terraform/projects/app-knowledge-graph/main.tf",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "status": "modified",
        "patch": "@@ -64,6 +64,39 @@ resource \"aws_s3_bucket\" \"data_infrastructure_bucket\" {\n     aws_environment = \"${var.aws_environment}\"\n     Name            = \"${local.data_infrastructure_bucket_name}\"\n   }\n+\n+  lifecycle_rule {\n+    id      = \"functional-network-lifecycle-rule\"\n+    enabled = true\n+    prefix  = \"functional-network/\"\n+\n+    expiration {\n+      days                         = 30\n+      expired_object_delete_marker = true\n+    }\n+  }\n+\n+  lifecycle_rule {\n+    id      = \"knowledge-graph-lifecycle-rule\"\n+    enabled = true\n+    prefix  = \"knowledge-graph/\"\n+\n+    expiration {\n+      days                         = 30\n+      expired_object_delete_marker = true\n+    }\n+  }\n+\n+  lifecycle_rule {\n+    id      = \"structural-network-lifecycle-rule\"\n+    enabled = true\n+    prefix  = \"structural-network/\"\n+\n+    expiration {\n+      days                         = 30\n+      expired_object_delete_marker = true\n+    }\n+  }\n }\n \n data \"aws_ami\" \"neo4j_community_ami\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["aws", "add_lifecycle_rule"],
    "notes": "Add lifecycle rules for S3 buckets to drop old data and save costs"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/806b1a2a47f2f4e580e524b2cf8cc5928749d972",
    "files": [
      {
        "filename": "terraform/projects/app-prometheus/main.tf",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -53,6 +53,12 @@ variable \"internal_domain_name\" {\n   description = \"The domain name of the internal DNS records, it could be different from the zone name\"\n }\n \n+variable \"ebs_volume_size\" {\n+  type        = \"string\"\n+  description = \"EBS volume size\"\n+  default     = \"64\"\n+}\n+\n # Resources\n # --------------------------------------------------------------\n terraform {\n@@ -83,8 +89,8 @@ keys(data.terraform_remote_state.infra_networking.private_subnet_names_ids_map),\n \n resource \"aws_ebs_volume\" \"prometheus-1\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.prometheus_1_subnet)}\"\n-  size              = 64\n-  type              = \"gp2\"\n+  size              = \"${var.ebs_volume_size}\"\n+  type              = \"gp3\"\n \n   tags {\n     Name            = \"${var.stackname}-prometheus-1\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_volume", "new_gen"],
    "notes": "Move from gp2 to gp3 which is 'cheaper and faster'"
  },
  {
    "url": "https://github.com/alphagov/govuk-aws/commit/8d7d2ebe0dbe9ebf8009572d1d710c4700cf245e",
    "files": [
      {
        "filename": "terraform/projects/app-ci-agents/README.md",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -108,7 +108,10 @@ CI agents\n | <a name=\"input_ci_agent_6_subnet\"></a> [ci\\_agent\\_6\\_subnet](#input\\_ci\\_agent\\_6\\_subnet) | subnet to deploy EC2 and EBS of CI agent 6 | `string` | `\"govuk_private_c\"` | no |\n | <a name=\"input_ci_agent_7_subnet\"></a> [ci\\_agent\\_7\\_subnet](#input\\_ci\\_agent\\_7\\_subnet) | subnet to deploy EC2 and EBS of CI agent 7 | `string` | `\"govuk_private_a\"` | no |\n | <a name=\"input_ci_agent_8_subnet\"></a> [ci\\_agent\\_8\\_subnet](#input\\_ci\\_agent\\_8\\_subnet) | subnet to deploy EC2 and EBS of CI agent 8 | `string` | `\"govuk_private_b\"` | no |\n+| <a name=\"input_data_block_device_volume_size\"></a> [data\\_block\\_device\\_volume\\_size](#input\\_data\\_block\\_device\\_volume\\_size) | Size of the data volume in GB | `string` | `\"130\"` | no |\n+| <a name=\"input_docker_block_device_volume_size\"></a> [docker\\_block\\_device\\_volume\\_size](#input\\_docker\\_block\\_device\\_volume\\_size) | Size of the Docker volume in GB | `string` | `\"130\"` | no |\n | <a name=\"input_ebs_encrypted\"></a> [ebs\\_encrypted](#input\\_ebs\\_encrypted) | whether or not the EBS volume is encrypted | `string` | `\"true\"` | no |\n+| <a name=\"input_ebs_volume_type\"></a> [ebs\\_volume\\_type](#input\\_ebs\\_volume\\_type) | Volume type to use for data and Docker EBS volumes; see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html | `string` | `\"gp3\"` | no |\n | <a name=\"input_elb_internal_certname\"></a> [elb\\_internal\\_certname](#input\\_elb\\_internal\\_certname) | The ACM cert domain name to find the ARN of | `string` | n/a | yes |\n | <a name=\"input_instance_ami_filter_name\"></a> [instance\\_ami\\_filter\\_name](#input\\_instance\\_ami\\_filter\\_name) | Name to use to find AMI images | `string` | `\"\"` | no |\n | <a name=\"input_instance_type\"></a> [instance\\_type](#input\\_instance\\_type) | Instance type used for EC2 resources | `string` | `\"m5.2xlarge\"` | no |"
      },
      {
        "filename": "terraform/projects/app-ci-agents/main.tf",
        "additions": 50,
        "deletions": 32,
        "changes": 82,
        "status": "modified",
        "patch": "@@ -58,6 +58,24 @@ variable \"root_block_device_volume_size\" {\n   default     = \"50\"\n }\n \n+variable \"data_block_device_volume_size\" {\n+  type        = \"string\"\n+  description = \"Size of the data volume in GB\"\n+  default     = \"130\"\n+}\n+\n+variable \"docker_block_device_volume_size\" {\n+  type        = \"string\"\n+  description = \"Size of the Docker volume in GB\"\n+  default     = \"130\"\n+}\n+\n+variable \"ebs_volume_type\" {\n+  type        = \"string\"\n+  description = \"Volume type to use for data and Docker EBS volumes; see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html\"\n+  default     = \"gp3\"\n+}\n+\n variable \"ebs_encrypted\" {\n   type        = \"string\"\n   description = \"whether or not the EBS volume is encrypted\"\n@@ -211,8 +229,8 @@ module \"ci-agent-1\" {\n resource \"aws_ebs_volume\" \"ci-agent-1-data\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_1_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.data_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-1-data\"\n@@ -228,8 +246,8 @@ resource \"aws_ebs_volume\" \"ci-agent-1-data\" {\n resource \"aws_ebs_volume\" \"ci-agent-1-docker\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_1_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.docker_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-1-docker\"\n@@ -331,8 +349,8 @@ module \"ci-agent-2\" {\n resource \"aws_ebs_volume\" \"ci-agent-2-data\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_2_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.data_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-2-data\"\n@@ -348,8 +366,8 @@ resource \"aws_ebs_volume\" \"ci-agent-2-data\" {\n resource \"aws_ebs_volume\" \"ci-agent-2-docker\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_2_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.docker_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-2-docker\"\n@@ -457,8 +475,8 @@ module \"ci-agent-3\" {\n resource \"aws_ebs_volume\" \"ci-agent-3-data\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_3_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.data_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-3-data\"\n@@ -474,8 +492,8 @@ resource \"aws_ebs_volume\" \"ci-agent-3-data\" {\n resource \"aws_ebs_volume\" \"ci-agent-3-docker\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_3_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.docker_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-3-docker\"\n@@ -577,8 +595,8 @@ module \"ci-agent-4\" {\n resource \"aws_ebs_volume\" \"ci-agent-4-data\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_4_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.data_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-4-data\"\n@@ -594,8 +612,8 @@ resource \"aws_ebs_volume\" \"ci-agent-4-data\" {\n resource \"aws_ebs_volume\" \"ci-agent-4-docker\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_4_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.docker_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-4-docker\"\n@@ -697,8 +715,8 @@ module \"ci-agent-5\" {\n resource \"aws_ebs_volume\" \"ci-agent-5-data\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_5_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.data_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-5-data\"\n@@ -714,8 +732,8 @@ resource \"aws_ebs_volume\" \"ci-agent-5-data\" {\n resource \"aws_ebs_volume\" \"ci-agent-5-docker\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_5_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.docker_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-5-docker\"\n@@ -817,8 +835,8 @@ module \"ci-agent-6\" {\n resource \"aws_ebs_volume\" \"ci-agent-6-data\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_6_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.data_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-6-data\"\n@@ -834,8 +852,8 @@ resource \"aws_ebs_volume\" \"ci-agent-6-data\" {\n resource \"aws_ebs_volume\" \"ci-agent-6-docker\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_6_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.docker_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-6-docker\"\n@@ -937,8 +955,8 @@ module \"ci-agent-7\" {\n resource \"aws_ebs_volume\" \"ci-agent-7-data\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_7_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.data_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-7-data\"\n@@ -954,8 +972,8 @@ resource \"aws_ebs_volume\" \"ci-agent-7-data\" {\n resource \"aws_ebs_volume\" \"ci-agent-7-docker\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_7_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.docker_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-7-docker\"\n@@ -1057,8 +1075,8 @@ module \"ci-agent-8\" {\n resource \"aws_ebs_volume\" \"ci-agent-8-data\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_8_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.data_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-8-data\"\n@@ -1074,8 +1092,8 @@ resource \"aws_ebs_volume\" \"ci-agent-8-data\" {\n resource \"aws_ebs_volume\" \"ci-agent-8-docker\" {\n   availability_zone = \"${lookup(data.terraform_remote_state.infra_networking.private_subnet_names_azs_map, var.ci_agent_8_subnet)}\"\n   encrypted         = \"${var.ebs_encrypted}\"\n-  size              = \"130\"\n-  type              = \"gp2\"\n+  size              = \"${var.docker_block_device_volume_size}\"\n+  type              = \"${var.ebs_volume_type}\"\n \n   tags {\n     Name            = \"${var.stackname}-ci-agent-8-docker\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_volume", "new_gen"],
    "notes": "Move from gp2 to gp3 which is 'cheaper and faster'"
  },
  {
    "url": "https://github.com/joshuaspence/infrastructure/commit/d8e1979ea7954076f64ab4d3337b95f14a06fc31",
    "files": [
      {
        "filename": "vpc.tf",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -42,7 +42,9 @@ module \"vpc\" {\n   create_database_subnet_group    = false\n   create_elasticache_subnet_group = false\n   create_redshift_subnet_group    = false\n-  enable_nat_gateway              = true\n+\n+  enable_nat_gateway = true\n+  single_nat_gateway = true\n \n   private_subnet_tags = merge(local.vpc_tags, { \"kubernetes.io/role/internal-elb\" = 1 })\n   public_subnet_tags  = merge(local.vpc_tags, { \"kubernetes.io/role/elb\" = 1 })"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "reduce_nat_gateways"],
    "notes": "Reduce the number of NAT gateways, which are expensive (use_single_nat_gateway = true)"
  },
  {
    "url": "https://github.com/joshuaspence/infrastructure/commit/b9b9465314e3b5ada78340d06b90703136cdf3dc",
    "files": [
      {
        "filename": "terraform.tfvars",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -32,7 +32,9 @@ kubernetes_cluster_name    = \"main\"\n kubernetes_cluster_version = \"1.14\"\n primary_domain             = \"joshuaspence.com\"\n vpc_cidr_block             = \"10.0.0.0/24\"\n-vpc_enable_nat_gateway     = true\n vpc_name                   = \"main\"\n vpc_single_nat_gateway     = true\n vpc_subnet_count           = 2\n+\n+# TODO: Remove this.\n+vpc_enable_nat_gateway = false"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_nat_gateway"],
    "notes": "Disable the VPC NAT gateway (vpc_enable_nat_gateway = false) to reduce costs"
  },
  {
    "url": "https://github.com/joshuaspence/infrastructure/commit/0cea1cf84859055ff5107fc8d8514475e7036bee",
    "files": [
      {
        "filename": "eks.tf",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "status": "removed",
        "patch": "@@ -1,74 +0,0 @@\n-variable \"kubernetes_cluster_name\" {\n-  type = string\n-}\n-\n-variable \"kubernetes_cluster_version\" {\n-  type = string\n-}\n-\n-module \"eks\" {\n-  source  = \"terraform-aws-modules/eks/aws\"\n-  version = \"~> 7.0\"\n-\n-  cluster_name              = var.kubernetes_cluster_name\n-  cluster_version           = var.kubernetes_cluster_version\n-  cluster_enabled_log_types = [\"api\", \"controllerManager\", \"scheduler\"]\n-  subnets                   = concat(module.vpc.private_subnets, module.vpc.public_subnets)\n-  vpc_id                    = module.vpc.vpc_id\n-\n-  # TODO: Disable public access to cluster endpoint.\n-  cluster_endpoint_private_access = true\n-  cluster_endpoint_public_access  = true\n-\n-  manage_aws_auth       = false\n-  write_aws_auth_config = false\n-\n-  config_output_path                         = pathexpand(\"~/.kube/config\")\n-  kubeconfig_aws_authenticator_env_variables = {\n-    AWS_PROFILE = var.aws_profile\n-  }\n-\n-  worker_groups_launch_template = [\n-    # asg_recreate_on_change\n-    # bootstrap_extra_args\n-    # kubelet_extra_args\n-    # root_kms_key_id\n-    # root_encrypted\n-    # cpu_credits\n-    # market_type\n-    # override_instance_types\n-    # on_demand_allocation_strategy\n-    # on_demand_base_capacity\n-    # on_demand_percentage_above_base_capacity\n-\n-    {\n-      asg_max_size  = 10\n-      instance_type = \"t3a.small\"\n-    }\n-  ]\n-  workers_group_defaults = {\n-    asg_desired_capacity  = 1\n-    asg_min_size          = 1\n-    autoscaling_enabled   = true\n-    enable_monitoring     = false\n-    protect_from_scale_in = true\n-\n-    # TODO: Figure out why worker nodes can't join the cluster without a public IP.\n-    # I think this will be fixed by https://github.com/terraform-providers/terraform-provider-aws/issues/6777.\n-    public_ip = true\n-\n-    # TODO: We should be utilizing the private subnets as well.\n-    subnets = module.vpc.public_subnets\n-  }\n-}\n-\n-# TODO: This should be managed by the `terraform-aws-modules/eks/aws` modul\n-# after https://github.com/terraform-aws-modules/terraform-aws-eks/pull/355\n-resource \"kubernetes_config_map\" \"aws_auth\" {\n-  metadata {\n-    name      = \"aws-auth\"\n-    namespace = \"kube-system\"\n-  }\n-\n-  data = yamldecode(module.eks.config_map_aws_auth)[\"data\"]\n-}"
      },
      {
        "filename": "helm.tf",
        "additions": 0,
        "deletions": 58,
        "changes": 58,
        "status": "removed",
        "patch": "@@ -1,58 +0,0 @@\n-/**\n- * TODO: All `helm_release` resources should depend on the `eks` module, see\n- * https://github.com/hashicorp/terraform/issues/2430.\n- */\n-\n-# TODO: Check version of `cluster-autoscaler`.\n-resource \"helm_release\" \"autoscaler\" {\n-  name      = \"autoscaler\"\n-  chart     = \"stable/cluster-autoscaler\"\n-  namespace = \"kube-system\"\n-\n-  set {\n-    name  = \"autoDiscovery.clusterName\"\n-    value = module.eks.cluster_id\n-  }\n-\n-  set {\n-    name  = \"autoDiscovery.enabled\"\n-    value = \"true\"\n-  }\n-\n-  set {\n-    name  = \"awsRegion\"\n-    value = var.aws_region\n-  }\n-\n-  set {\n-    name  = \"cloudProvider\"\n-    value = \"aws\"\n-  }\n-\n-  set {\n-    name  = \"rbac.create\"\n-    value = \"true\"\n-  }\n-}\n-\n-resource \"helm_release\" \"dashboard\" {\n-  name      = \"dashboard\"\n-  chart     = \"stable/kubernetes-dashboard\"\n-  namespace = \"kube-system\"\n-\n-  # image.tag\n-  # annotations\n-  # replicaCount\n-  # extraArgs\n-  # extraEnv\n-  # podAnnotations\n-  # enableSkipLogin\n-  # enableInsecureLogin\n-  # service.loadBalancerSourceRanges\n-  # ingress.labels\n-  # ingress.annotations\n-  # ingress.enabled\n-  # ingress.paths\n-  # ingress.hosts\n-  # ingress.tls\n-}"
      },
      {
        "filename": "provider.tf",
        "additions": 6,
        "deletions": 13,
        "changes": 19,
        "status": "modified",
        "patch": "@@ -57,28 +57,21 @@ provider \"gsuite\" {\n #===============================================================================\n \n provider \"helm\" {\n-  namespace       = kubernetes_service_account.tiller.metadata[0].namespace\n-  service_account = kubernetes_service_account.tiller.metadata[0].name\n-\n   kubernetes {\n-    host                   = module.eks.cluster_endpoint\n-    token                  = data.aws_eks_cluster_auth.main.token\n-    cluster_ca_certificate = base64decode(module.eks.cluster_certificate_authority_data)\n-    load_config_file       = false\n+    config_context = var.kubernetes_config_context\n   }\n+\n+  version = \">= 0.10.4\"\n }\n \n #===============================================================================\n # Kubernetes\n #===============================================================================\n \n-data \"aws_eks_cluster_auth\" \"main\" {\n-  name = module.eks.cluster_id\n+variable \"kubernetes_config_context\" {\n+  type = string\n }\n \n provider \"kubernetes\" {\n-  host                   = module.eks.cluster_endpoint\n-  cluster_ca_certificate = base64decode(module.eks.cluster_certificate_authority_data)\n-  token                  = data.aws_eks_cluster_auth.main.token\n-  load_config_file       = false\n+  config_context = var.kubernetes_config_context\n }"
      },
      {
        "filename": "terraform.tfvars",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -28,13 +28,12 @@ domains = {\n   }\n }\n \n-kubernetes_cluster_name    = \"main\"\n-kubernetes_cluster_version = \"1.14\"\n-primary_domain             = \"joshuaspence.com\"\n-vpc_cidr_block             = \"10.0.0.0/24\"\n-vpc_name                   = \"main\"\n-vpc_single_nat_gateway     = true\n-vpc_subnet_count           = 2\n+kubernetes_config_context = \"minikube\"\n+primary_domain            = \"joshuaspence.com\"\n+vpc_cidr_block            = \"10.0.0.0/24\"\n+vpc_name                  = \"main\"\n+vpc_single_nat_gateway    = true\n+vpc_subnet_count          = 2\n \n # TODO: Remove this.\n vpc_enable_nat_gateway = false"
      },
      {
        "filename": "tiller.tf",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "status": "removed",
        "patch": "@@ -1,29 +0,0 @@\n-/**\n- * TODO: These resources should no longer be required after Helm 3 is released,\n- * see https://github.com/terraform-providers/terraform-provider-helm/issues/299.\n- */\n-\n-resource \"kubernetes_service_account\" \"tiller\" {\n-  metadata {\n-    name      = \"tiller\"\n-    namespace = \"kube-system\"\n-  }\n-}\n-\n-resource \"kubernetes_cluster_role_binding\" \"tiller\" {\n-  metadata {\n-    name = \"tiller\"\n-  }\n-\n-  role_ref {\n-    kind      = \"ClusterRole\"\n-    name      = \"cluster-admin\"\n-    api_group = \"rbac.authorization.k8s.io\"\n-  }\n-\n-  subject {\n-    kind      = \"ServiceAccount\"\n-    name      = kubernetes_service_account.tiller.metadata[0].name\n-    namespace = kubernetes_service_account.tiller.metadata[0].namespace\n-  }\n-}"
      },
      {
        "filename": "vpc.tf",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -29,9 +29,7 @@ locals {\n   private_subnet_cidr_blocks = [for ii in range(var.vpc_subnet_count) : cidrsubnet(var.vpc_cidr_block, local.subnet_bits, ii)]\n   public_subnet_cidr_blocks  = [for ii in range(var.vpc_subnet_count) : cidrsubnet(var.vpc_cidr_block, local.subnet_bits, pow(2, local.subnet_bits - 1) + ii)]\n \n-  vpc_tags = {\n-    \"kubernetes.io/cluster/${var.kubernetes_cluster_name}\" = \"shared\"\n-  }\n+  vpc_tags = {}\n }\n \n data \"aws_availability_zones\" \"available\" {\n@@ -53,9 +51,9 @@ module \"vpc\" {\n   azs                 = random_shuffle.aws_availability_zones.result\n   cidr                = var.vpc_cidr_block\n   private_subnets     = local.private_subnet_cidr_blocks\n-  private_subnet_tags = merge(local.vpc_tags, { \"kubernetes.io/role/internal-elb\" = 1 })\n+  private_subnet_tags = merge(local.vpc_tags, {})\n   public_subnets      = local.public_subnet_cidr_blocks\n-  public_subnet_tags  = merge(local.vpc_tags, { \"kubernetes.io/role/elb\" = 1 })\n+  public_subnet_tags  = merge(local.vpc_tags, {})\n   vpc_tags            = local.vpc_tags\n \n   # TODO: Disable NAT gateways as they are very expensive."
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": ["aws", "remove_eks"],
    "notes": "Move from EKS to a self-managed Minikube"
  },
  {
    "url": "https://github.com/openinfrastructure/terraform-google-gitlab-runner/commit/8429375df72b04cc6fedc1ebb5f2c2e4ba18b9f2",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -72,7 +72,8 @@ resource google_compute_instance_template \"gitlab-runner\" {\n   }\n \n   scheduling {\n-    automatic_restart = true\n+    preemptible       = var.preemptible\n+    automatic_restart = var.automatic_restart\n   }\n \n   lifecycle {"
      },
      {
        "filename": "variables.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -115,3 +115,15 @@ variable \"update_policy_type\" {\n   description = \"The type of update. Valid values are 'OPPORTUNISTIC', 'PROACTIVE'\"\n   default     = \"OPPORTUNISTIC\"\n }\n+\n+variable \"automatic_restart\" {\n+  description = \"If true, automatically restart instances on maintenance events.  See https://cloud.google.com/compute/docs/instances/live-migration#autorestart\"\n+  type        = bool\n+  default     = false\n+}\n+\n+variable \"preemptible\" {\n+  description = \"If true, create preemptible VM instances intended to reduce cost.  Note, the MIG will recreate pre-empted instnaces.  See https://cloud.google.com/compute/docs/instances/preemptible\"\n+  type        = bool\n+  default     = true\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["gcp", "add_preemptible"],
    "notes": "Move to preemptible compute instances (preemptible = true) which are cheaper"
  },
  {
    "url": "https://github.com/dexterchan/Terraform_Webserver/commit/af5af0b8e6a59a9c5879fde7eaaa86d694c2bfa2",
    "files": [
      {
        "filename": "ecs_ec2/ecs_ec2_launch.tf",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -117,8 +117,10 @@ module \"ecs-private-cluster\" {\n \n   key_name = aws_key_pair.deployer.key_name\n \n-  asg_subnets = module.vpc.private_subnets\n-  alb_subnets = module.vpc.public_subnets\n+  asg_subnets      = [module.vpc.private_subnets[0], module.vpc.private_subnets[1]]\n+  alb_subnets      = module.vpc.public_subnets\n+  endpoint_subnets = [module.vpc.private_subnets[2]]\n+\n \n   asg_route_table_ids = module.vpc.private_route_table_ids\n "
      },
      {
        "filename": "ecs_ec2/modules/ecs-cluster-ec2-private/variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -44,6 +44,10 @@ variable \"asg_subnets\" {\n   description = \"asg subnets\"\n }\n \n+variable \"endpoint_subnets\" {\n+  description = \"endpoint subnets\"\n+}\n+\n variable \"asg_route_table_ids\" {\n   description = \"asg route table ids\"\n }"
      },
      {
        "filename": "ecs_ec2/modules/ecs-cluster-ec2-private/vpc-endpoint.tf",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ resource \"aws_vpc_endpoint\" \"cloudwatch\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -15,7 +15,7 @@ resource \"aws_vpc_endpoint\" \"ecs-agent\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -25,7 +25,7 @@ resource \"aws_vpc_endpoint\" \"ecs-telemetry\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -35,7 +35,7 @@ resource \"aws_vpc_endpoint\" \"ecs\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -45,7 +45,7 @@ resource \"aws_vpc_endpoint\" \"ecr_dkr\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -55,15 +55,15 @@ resource \"aws_vpc_endpoint\" \"ecr_api\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n resource \"aws_vpc_endpoint\" \"s3\" {\n   vpc_id            = var.vpc_id\n   service_name      = \"com.amazonaws.${var.region}.s3\"\n   vpc_endpoint_type = \"Gateway\"\n-  route_table_ids = var.asg_route_table_ids\n+  route_table_ids   = var.asg_route_table_ids\n }\n \n resource \"aws_vpc_endpoint\" \"ssm\" {\n@@ -72,7 +72,7 @@ resource \"aws_vpc_endpoint\" \"ssm\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -82,7 +82,7 @@ resource \"aws_vpc_endpoint\" \"kms\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -94,6 +94,6 @@ resource \"aws_vpc_endpoint\" \"sts_vpc_endpoint\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n-}*/\n\\ No newline at end of file\n+}*/"
      },
      {
        "filename": "ecs_ec2/profile1.auto.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ vpc_name=\"uswest2simplewebvpc\"\n vpc_azs=[\"us-west-2a\", \"us-west-2b\"]\n vpc_cidr=\"192.168.0.0/16\"\n vpc_public_subnets=[\"192.168.1.0/24\",\"192.168.2.0/24\"]\n-vpc_private_subnets=[\"192.168.101.0/24\", \"192.168.201.0/24\"]\n+vpc_private_subnets=[\"192.168.101.0/24\", \"192.168.102.0/24\", \"192.168.103.0/24\"]\n vpc_enable_nat_gateway=false\n vpc_tags={\n     Terraform   = \"true\""
      },
      {
        "filename": "ecs_fargate/ecs_fargate_launch.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -17,8 +17,9 @@ module \"ecs-private-cluster\" {\n \n   key_name = aws_key_pair.deployer.key_name\n \n-  asg_subnets = module.vpc.private_subnets\n-  alb_subnets = module.vpc.public_subnets\n+  asg_subnets      = [module.vpc.private_subnets[0], module.vpc.private_subnets[1]]\n+  alb_subnets      = module.vpc.public_subnets\n+  endpoint_subnets = [module.vpc.private_subnets[2]]\n \n   asg_route_table_ids = module.vpc.private_route_table_ids\n "
      },
      {
        "filename": "ecs_fargate/modules/ecs-cluster-fargate-private/variables.tf",
        "additions": 18,
        "deletions": 14,
        "changes": 32,
        "status": "modified",
        "patch": "@@ -7,9 +7,9 @@ variable \"ecs_cluster_name\" {\n   type        = string\n }\n \n-variable \"instance_type\"{\n+variable \"instance_type\" {\n   description = \"instance type\"\n-  default = \"t2.micro\"\n+  default     = \"t2.micro\"\n }\n \n variable \"launch_config_security_group\" {\n@@ -19,7 +19,7 @@ variable \"launch_config_security_group\" {\n variable \"ALB_security_group\" {\n   description = \"ALB security group id list\"\n }\n-variable \"vpc-endpoint_security_group\"{\n+variable \"vpc-endpoint_security_group\" {\n   description = \"vpc endpoint security group\"\n }\n \n@@ -31,9 +31,9 @@ variable \"key_name\" {\n   description = \"key name\"\n }\n \n-variable \"associate_public_ip_address\"{\n+variable \"associate_public_ip_address\" {\n   description = \"associate public ip address\"\n-  default = false\n+  default     = false\n }\n \n variable \"alb_subnets\" {\n@@ -44,34 +44,38 @@ variable \"asg_subnets\" {\n   description = \"asg subnets\"\n }\n \n-variable \"asg_route_table_ids\"{\n+variable \"endpoint_subnets\" {\n+  description = \"endpoint subnets\"\n+}\n+\n+variable \"asg_route_table_ids\" {\n   description = \"asg route table ids\"\n }\n \n-variable \"min_size\"{\n+variable \"min_size\" {\n   description = \"min size\"\n }\n \n-variable \"max_size\"{\n+variable \"max_size\" {\n   description = \"min size\"\n }\n \n-variable \"desired_capacity\"{\n+variable \"desired_capacity\" {\n   description = \"desired capacity\"\n }\n \n-variable \"ssl_certificate_arn\"{\n+variable \"ssl_certificate_arn\" {\n   description = \"arn of ssl certificate\"\n }\n \n-variable \"task_docker_image\"{\n+variable \"task_docker_image\" {\n   description = \"task docker image\"\n }\n \n-variable \"route53_zone_id\"{\n+variable \"route53_zone_id\" {\n   description = \"Route 53 zone id\"\n }\n \n-variable \"route53_A_record_hostname\"{\n+variable \"route53_A_record_hostname\" {\n   description = \"Route 53 A Record hostname\"\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "filename": "ecs_fargate/modules/ecs-cluster-fargate-private/vpc-endpoint.tf",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ resource \"aws_vpc_endpoint\" \"cloudwatch\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -15,7 +15,7 @@ resource \"aws_vpc_endpoint\" \"ecs-agent\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -25,7 +25,7 @@ resource \"aws_vpc_endpoint\" \"ecs-telemetry\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -35,7 +35,7 @@ resource \"aws_vpc_endpoint\" \"ecs\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -45,7 +45,7 @@ resource \"aws_vpc_endpoint\" \"ecr_dkr\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -55,15 +55,15 @@ resource \"aws_vpc_endpoint\" \"ecr_api\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n resource \"aws_vpc_endpoint\" \"s3\" {\n   vpc_id            = var.vpc_id\n   service_name      = \"com.amazonaws.${var.region}.s3\"\n   vpc_endpoint_type = \"Gateway\"\n-  route_table_ids = var.asg_route_table_ids\n+  route_table_ids   = var.asg_route_table_ids\n }\n \n resource \"aws_vpc_endpoint\" \"ssm\" {\n@@ -72,7 +72,7 @@ resource \"aws_vpc_endpoint\" \"ssm\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n \n@@ -82,7 +82,7 @@ resource \"aws_vpc_endpoint\" \"kms\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n }\n /*\n@@ -92,6 +92,6 @@ resource \"aws_vpc_endpoint\" \"sts_vpc_endpoint\" {\n   vpc_endpoint_type = \"Interface\"\n \n   security_group_ids  = var.vpc-endpoint_security_group\n-  subnet_ids          = var.asg_subnets\n+  subnet_ids          = var.endpoint_subnets\n   private_dns_enabled = true\n-}*/\n\\ No newline at end of file\n+}*/"
      },
      {
        "filename": "ecs_fargate/profilefargte.auto.tfvars",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -7,7 +7,9 @@ vpc_name=\"uswest2simplewebvpc\"\n vpc_azs=[\"us-west-2a\", \"us-west-2b\"]\n vpc_cidr=\"192.168.0.0/16\"\n vpc_public_subnets=[\"192.168.1.0/24\",\"192.168.2.0/24\"]\n-vpc_private_subnets=[\"192.168.101.0/24\", \"192.168.201.0/24\"]\n+vpc_private_subnets=[\"192.168.101.0/24\", \"192.168.102.0/24\",\"192.168.103.0/24\"]\n+#vpc_private_asg_subnets=[\"192.168.101.0/24\", \"192.168.201.0/24\"]\n+#vpc_private_endpoint_subnets=[\"192.168.301.0/24\"]\n vpc_enable_nat_gateway=false\n vpc_tags={\n     Terraform   = \"true\""
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "reduce_vpc_endpoint_subnets"],
    "notes": "Reduce the number of VPC endpoint subnets to 1, saving cost"
  },
  {
    "url": "https://github.com/ONSdigital/eq-terraform-dynamodb/commit/40eb651a50d0dfd5cf047ef62c8a6259c1c66e02",
    "files": [
      {
        "filename": "aws.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ terraform {\n }\n \n provider \"aws\" {\n-  version    = \">= 1.17.0\"\n+  version = \">= 1.51.0\"\n \n   allowed_account_ids = [\"${var.aws_account_id}\"]\n   assume_role {"
      },
      {
        "filename": "eq_session.tf",
        "additions": 1,
        "deletions": 118,
        "changes": 119,
        "status": "modified",
        "patch": "@@ -1,8 +1,7 @@\n resource \"aws_dynamodb_table\" \"eq_session_table\" {\n   name           = \"${var.env}-eq-session\"\n-  read_capacity  = \"${var.eq_session_min_read_capacity}\"\n-  write_capacity = \"${var.eq_session_min_write_capacity}\"\n   hash_key       = \"eq_session_id\"\n+  billing_mode   = \"PAY_PER_REQUEST\"\n \n   attribute {\n     name = \"eq_session_id\"\n@@ -28,122 +27,6 @@ resource \"aws_dynamodb_table\" \"eq_session_table\" {\n   }\n }\n \n-resource \"aws_appautoscaling_target\" \"eq_session_table_read_target\" {\n-  max_capacity       = \"${var.eq_session_max_read_capacity}\"\n-  min_capacity       = \"${var.eq_session_min_read_capacity}\"\n-  resource_id        = \"table/${aws_dynamodb_table.eq_session_table.name}\"\n-  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"eq_session_table_read_policy\" {\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.eq_session_table_read_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.eq_session_table_read_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.eq_session_table_read_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.eq_session_table_read_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBReadCapacityUtilization\"\n-    }\n-\n-    target_value = 40\n-  }\n-}\n-\n-resource \"aws_appautoscaling_target\" \"eq_session_table_write_target\" {\n-  max_capacity       = \"${var.eq_session_max_write_capacity}\"\n-  min_capacity       = \"${var.eq_session_min_write_capacity}\"\n-  resource_id        = \"table/${aws_dynamodb_table.eq_session_table.name}\"\n-  scalable_dimension = \"dynamodb:table:WriteCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"eq_session_table_write_policy\" {\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.eq_session_table_write_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.eq_session_table_write_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.eq_session_table_write_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.eq_session_table_write_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBWriteCapacityUtilization\"\n-    }\n-\n-    target_value = 40\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"eq_session_table_read_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-eq-session-read-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ConsumedReadCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Sum\"\n-  threshold           = \"${var.eq_session_max_read_capacity * 0.8 * 60}\"\n-  alarm_description   = \"EQ Session DynamoDB average consumed read throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.eq_session_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"eq_session_table_write_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-eq-session-write-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ConsumedWriteCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Sum\"\n-  threshold           = \"${var.eq_session_max_write_capacity * 0.8 * 60}\"\n-  alarm_description   = \"EQ Session DynamoDB average consumed write throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.eq_session_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"eq_session_table_provisioned_read_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-eq-session-provisioned-read-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ProvisionedReadCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Maximum\"\n-  threshold           = \"${var.eq_session_max_read_capacity * 0.8}\"\n-  alarm_description   = \"EQ Session DynamoDB provisioned read throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.eq_session_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"eq_session_table_provisioned_write_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-eq-session-provisioned-write-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ProvisionedWriteCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Maximum\"\n-  threshold           = \"${var.eq_session_max_write_capacity * 0.8}\"\n-  alarm_description   = \"EQ Session DynamoDB provisioned write throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.eq_session_table.name}\"\n-  }\n-}\n-\n resource \"aws_cloudwatch_metric_alarm\" \"eq_session_table_read_throttled\" {\n   alarm_name          = \"${var.env}-dynamodb-eq-session-read-throttled\"\n   comparison_operator = \"GreaterThanOrEqualToThreshold\""
      },
      {
        "filename": "global_vars.tf",
        "additions": 1,
        "deletions": 81,
        "changes": 82,
        "status": "modified",
        "patch": "@@ -12,84 +12,4 @@ variable \"aws_assume_role_arn\" {\n \n variable \"slack_alert_sns_arn\" {\n   description = \"The ARN of sns topic for slack alerts\"\n-}\n-\n-variable \"submitted_responses_min_read_capacity\" {\n-  description = \"The min number of Read units for the Submitted Responses table\"\n-  default     = 25\n-}\n-\n-variable \"submitted_responses_max_read_capacity\" {\n-  description = \"The max number of Read units for the Submitted Responses table\"\n-  default     = 5000\n-}\n-\n-variable \"submitted_responses_min_write_capacity\" {\n-  description = \"The min number of Write units for the Submitted Responses table\"\n-  default     = 25\n-}\n-\n-variable \"submitted_responses_max_write_capacity\" {\n-  description = \"The max number of Write units for the Submitted Responses table\"\n-  default     = 5000\n-}\n-\n-variable \"questionnaire_state_min_read_capacity\" {\n-  description = \"The min number of Read units for the Questionnaire State table\"\n-  default     = 25\n-}\n-\n-variable \"questionnaire_state_max_read_capacity\" {\n-  description = \"The max number of Read units for the Questionnaire State table\"\n-  default     = 5000\n-}\n-\n-variable \"questionnaire_state_min_write_capacity\" {\n-  description = \"The min number of Write units for the Questionnaire State table\"\n-  default     = 25\n-}\n-\n-variable \"questionnaire_state_max_write_capacity\" {\n-  description = \"The max number of Write units for the Questionnaire State table\"\n-  default     = 5000\n-}\n-\n-variable \"eq_session_min_read_capacity\" {\n-  description = \"The min number of Read units for the EQ Session table\"\n-  default     = 25\n-}\n-\n-variable \"eq_session_max_read_capacity\" {\n-  description = \"The max number of Read units for the EQ Session table\"\n-  default     = 5000\n-}\n-\n-variable \"eq_session_min_write_capacity\" {\n-  description = \"The min number of Write units for the EQ Session table\"\n-  default     = 25\n-}\n-\n-variable \"eq_session_max_write_capacity\" {\n-  description = \"The max number of Write units for the EQ Session table\"\n-  default     = 5000\n-}\n-\n-variable \"used_jti_claim_min_read_capacity\" {\n-  description = \"The min number of Read units for the Used JTI claims table\"\n-  default     = 1\n-}\n-\n-variable \"used_jti_claim_max_read_capacity\" {\n-  description = \"The max number of Read units for the Used JTI claims table\"\n-  default     = 5000\n-}\n-\n-variable \"used_jti_claim_min_write_capacity\" {\n-  description = \"The min number of Write units for the Used JTI claims table\"\n-  default     = 25\n-}\n-\n-variable \"used_jti_claim_max_write_capacity\" {\n-  description = \"The max number of Write units for the Used JTI claims table\"\n-  default     = 5000\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "questionnaire_state.tf",
        "additions": 1,
        "deletions": 118,
        "changes": 119,
        "status": "modified",
        "patch": "@@ -1,8 +1,7 @@\n resource \"aws_dynamodb_table\" \"questionnaire_state_table\" {\n   name           = \"${var.env}-questionnaire-state\"\n-  read_capacity  = \"${var.questionnaire_state_min_read_capacity}\"\n-  write_capacity = \"${var.questionnaire_state_min_write_capacity}\"\n   hash_key       = \"user_id\"\n+  billing_mode   = \"PAY_PER_REQUEST\"\n \n   attribute {\n     name = \"user_id\"\n@@ -19,122 +18,6 @@ resource \"aws_dynamodb_table\" \"questionnaire_state_table\" {\n   }\n }\n \n-resource \"aws_appautoscaling_target\" \"questionnaire_state_table_read_target\" {\n-  max_capacity       = \"${var.questionnaire_state_max_read_capacity}\"\n-  min_capacity       = \"${var.questionnaire_state_min_read_capacity}\"\n-  resource_id        = \"table/${aws_dynamodb_table.questionnaire_state_table.name}\"\n-  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"questionnaire_state_table_read_policy\" {\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.questionnaire_state_table_read_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.questionnaire_state_table_read_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.questionnaire_state_table_read_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.questionnaire_state_table_read_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBReadCapacityUtilization\"\n-    }\n-\n-    target_value = 40\n-  }\n-}\n-\n-resource \"aws_appautoscaling_target\" \"questionnaire_state_table_write_target\" {\n-  max_capacity       = \"${var.questionnaire_state_max_write_capacity}\"\n-  min_capacity       = \"${var.questionnaire_state_min_write_capacity}\"\n-  resource_id        = \"table/${aws_dynamodb_table.questionnaire_state_table.name}\"\n-  scalable_dimension = \"dynamodb:table:WriteCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"questionnaire_state_table_write_policy\" {\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.questionnaire_state_table_write_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.questionnaire_state_table_write_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.questionnaire_state_table_write_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.questionnaire_state_table_write_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBWriteCapacityUtilization\"\n-    }\n-\n-    target_value = 40\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"questionnaire_state_table_read_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-questionnaire-state-read-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ConsumedReadCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Sum\"\n-  threshold           = \"${var.questionnaire_state_max_read_capacity * 0.8 * 60}\"\n-  alarm_description   = \"EQ Questionnaire State DynamoDB average consumed read throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.questionnaire_state_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"questionnaire_state_table_write_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-questionnaire-state-write-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ConsumedWriteCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Sum\"\n-  threshold           = \"${var.questionnaire_state_max_write_capacity * 0.8 * 60}\"\n-  alarm_description   = \"EQ Questionnaire State DynamoDB average consumed write throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.questionnaire_state_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"questionnaire_state_table_provisioned_read_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-questionnaire-state-provisioned-read-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ProvisionedReadCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Maximum\"\n-  threshold           = \"${var.questionnaire_state_max_read_capacity * 0.8}\"\n-  alarm_description   = \"EQ Questionnaire State DynamoDB provisioned read throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.questionnaire_state_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"questionnaire_state_table_provisioned_write_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-questionnaire-state-provisioned-write-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ProvisionedWriteCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Maximum\"\n-  threshold           = \"${var.questionnaire_state_max_write_capacity * 0.8}\"\n-  alarm_description   = \"EQ Questionnaire State DynamoDB provisioned write throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.questionnaire_state_table.name}\"\n-  }\n-}\n-\n resource \"aws_cloudwatch_metric_alarm\" \"questionnaire_state_table_read_throttled\" {\n   alarm_name          = \"${var.env}-dynamodb-questionnaire-state-read-throttled\"\n   comparison_operator = \"GreaterThanOrEqualToThreshold\""
      },
      {
        "filename": "submitted_responses.tf",
        "additions": 1,
        "deletions": 118,
        "changes": 119,
        "status": "modified",
        "patch": "@@ -1,8 +1,7 @@\n resource \"aws_dynamodb_table\" \"submitted_responses_table\" {\n   name           = \"${var.env}-submitted-responses\"\n-  read_capacity  = \"${var.submitted_responses_min_read_capacity}\"\n-  write_capacity = \"${var.submitted_responses_min_write_capacity}\"\n   hash_key       = \"tx_id\"\n+  billing_mode   = \"PAY_PER_REQUEST\"\n \n   attribute {\n     name = \"tx_id\"\n@@ -24,122 +23,6 @@ resource \"aws_dynamodb_table\" \"submitted_responses_table\" {\n   }\n }\n \n-resource \"aws_appautoscaling_target\" \"submitted_responses_table_read_target\" {\n-  max_capacity       = \"${var.submitted_responses_max_read_capacity}\"\n-  min_capacity       = \"${var.submitted_responses_min_read_capacity}\"\n-  resource_id        = \"table/${aws_dynamodb_table.submitted_responses_table.name}\"\n-  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"submitted_responses_table_read_policy\" {\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.submitted_responses_table_read_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.submitted_responses_table_read_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.submitted_responses_table_read_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.submitted_responses_table_read_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBReadCapacityUtilization\"\n-    }\n-\n-    target_value = 40\n-  }\n-}\n-\n-resource \"aws_appautoscaling_target\" \"submitted_responses_table_write_target\" {\n-  max_capacity       = \"${var.submitted_responses_max_write_capacity}\"\n-  min_capacity       = \"${var.submitted_responses_min_write_capacity}\"\n-  resource_id        = \"table/${aws_dynamodb_table.submitted_responses_table.name}\"\n-  scalable_dimension = \"dynamodb:table:WriteCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"submitted_responses_table_write_policy\" {\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.submitted_responses_table_write_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.submitted_responses_table_write_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.submitted_responses_table_write_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.submitted_responses_table_write_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBWriteCapacityUtilization\"\n-    }\n-\n-    target_value = 40\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"submitted_responses_table_read_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-submitted-responses-read-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ConsumedReadCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Sum\"\n-  threshold           = \"${var.submitted_responses_max_read_capacity * 0.8 * 60}\"\n-  alarm_description   = \"EQ Submitted Responses DynamoDB average consumed read throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.submitted_responses_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"submitted_responses_table_write_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-submitted-responses-write-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ConsumedWriteCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Sum\"\n-  threshold           = \"${var.submitted_responses_max_write_capacity * 0.8 * 60}\"\n-  alarm_description   = \"EQ Submitted Responses DynamoDB average consumed write throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.submitted_responses_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"submitted_responses_table_provisioned_read_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-submitted-responses-provisioned-read-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ProvisionedReadCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Maximum\"\n-  threshold           = \"${var.submitted_responses_max_read_capacity * 0.8}\"\n-  alarm_description   = \"EQ Submitted Responses DynamoDB provisioned read throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.submitted_responses_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"submitted_responses_table_provisioned_write_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-submitted-responses-provisioned-write-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ProvisionedWriteCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Maximum\"\n-  threshold           = \"${var.submitted_responses_max_write_capacity * 0.8}\"\n-  alarm_description   = \"EQ Submitted Responses DynamoDB provisioned write throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.submitted_responses_table.name}\"\n-  }\n-}\n-\n resource \"aws_cloudwatch_metric_alarm\" \"submitted_responses_table_read_throttled\" {\n   alarm_name          = \"${var.env}-dynamodb-submitted-responses-read-throttled\"\n   comparison_operator = \"GreaterThanOrEqualToThreshold\""
      },
      {
        "filename": "used_jti_claim.tf",
        "additions": 1,
        "deletions": 118,
        "changes": 119,
        "status": "modified",
        "patch": "@@ -1,8 +1,7 @@\n resource \"aws_dynamodb_table\" \"used_jti_claim_table\" {\n   name           = \"${var.env}-used-jti-claim\"\n-  read_capacity  = \"${var.used_jti_claim_min_read_capacity}\"\n-  write_capacity = \"${var.used_jti_claim_min_write_capacity}\"\n   hash_key       = \"jti_claim\"\n+  billing_mode   = \"PAY_PER_REQUEST\"\n \n   attribute {\n     name = \"jti_claim\"\n@@ -24,122 +23,6 @@ resource \"aws_dynamodb_table\" \"used_jti_claim_table\" {\n   }\n }\n \n-resource \"aws_appautoscaling_target\" \"used_jti_claim_table_read_target\" {\n-  max_capacity       = \"${var.used_jti_claim_max_read_capacity}\"\n-  min_capacity       = \"${var.used_jti_claim_min_read_capacity}\"\n-  resource_id        = \"table/${aws_dynamodb_table.used_jti_claim_table.name}\"\n-  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"used_jti_claim_table_read_policy\" {\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.used_jti_claim_table_read_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.used_jti_claim_table_read_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.used_jti_claim_table_read_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.used_jti_claim_table_read_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBReadCapacityUtilization\"\n-    }\n-\n-    target_value = 40\n-  }\n-}\n-\n-resource \"aws_appautoscaling_target\" \"used_jti_claim_table_write_target\" {\n-  max_capacity       = \"${var.used_jti_claim_max_write_capacity}\"\n-  min_capacity       = \"${var.used_jti_claim_min_write_capacity}\"\n-  resource_id        = \"table/${aws_dynamodb_table.used_jti_claim_table.name}\"\n-  scalable_dimension = \"dynamodb:table:WriteCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"used_jti_claim_table_write_policy\" {\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.used_jti_claim_table_write_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.used_jti_claim_table_write_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.used_jti_claim_table_write_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.used_jti_claim_table_write_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBWriteCapacityUtilization\"\n-    }\n-\n-    target_value = 40\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"used_jti_claim_table_read_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-used-jti-claim-read-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ConsumedReadCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Sum\"\n-  threshold           = \"${var.used_jti_claim_max_read_capacity * 0.8 * 60}\"\n-  alarm_description   = \"EQ Used JTI Claim DynamoDB average consumed read throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.used_jti_claim_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"used_jti_claim_table_write_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-used-jti-claim-write-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ConsumedWriteCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Sum\"\n-  threshold           = \"${var.used_jti_claim_max_write_capacity * 0.8 * 60}\"\n-  alarm_description   = \"EQ Used JTI Claim DynamoDB average consumed write throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.used_jti_claim_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"used_jti_claim_table_provisioned_read_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-used-jti-claim-provisioned-read-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ProvisionedReadCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Maximum\"\n-  threshold           = \"${var.used_jti_claim_max_read_capacity * 0.8}\"\n-  alarm_description   = \"EQ Used JTI Claim DynamoDB provisioned read throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.used_jti_claim_table.name}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"used_jti_claim_table_provisioned_write_throughput\" {\n-  alarm_name          = \"${var.env}-dynamodb-used-jti-claim-provisioned-write-throughput\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"ProvisionedWriteCapacityUnits\"\n-  namespace           = \"AWS/DynamoDB\"\n-  period              = \"60\"\n-  statistic           = \"Maximum\"\n-  threshold           = \"${var.used_jti_claim_max_write_capacity * 0.8}\"\n-  alarm_description   = \"EQ Used JTI Claim DynamoDB provisioned write throughput above 80% of maximum for past 60 seconds\"\n-  alarm_actions       = [\"${var.slack_alert_sns_arn}\"]\n-\n-  dimensions {\n-    TableName = \"${aws_dynamodb_table.used_jti_claim_table.name}\"\n-  }\n-}\n-\n resource \"aws_cloudwatch_metric_alarm\" \"used_jti_claim_table_read_throttled\" {\n   alarm_name          = \"${var.env}-dynamodb-used-jti-claim-read-throttled\"\n   comparison_operator = \"GreaterThanOrEqualToThreshold\""
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/DoSomething/infrastructure/commit/a2dbfe25699f574b5ad4540063e4208ea8b04b4e",
    "files": [
      {
        "filename": "quasar/main.tf",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -363,7 +363,4 @@ resource \"aws_db_instance\" \"quasar\" {\n   copy_tags_to_snapshot  = true\n   monitoring_interval    = \"10\"\n   publicly_accessible    = true\n-\n-  # TEMPORARY: from @sheyd's testing over the weekend.\n-  iops = 10000\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "feature",
      "storage"
    ],
    "codes": ["aws", "remove_iops"],
    "notes": "Remove provisioned IOPS from a DB instance to use cheaper storage"
  },
  {
    "url": "https://github.com/hashicorp/terraform-azurerm-terraform-enterprise/commit/b2fe861f1949f5f9f5bad0b4ca4ee6b6cb65485f",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -343,7 +343,7 @@ variable \"redis_sku_name\" {\n }\n \n variable \"redis_size\" {\n-  default     = \"3\"\n+  default     = \"1\"\n   type        = string\n   description = \"The size of the Redis cache to deploy. Valid values for a SKU family of C (Basic/Standard) are 0, 1, 2, 3, 4, 5, 6, and for P (Premium) family are 1, 2, 3, 4.\"\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["azure", "cheaper_redis_cache"],
    "notes": "Move from P3 to P1 Redis cache size"
  },
  {
    "url": "https://github.com/MartinFeineis/terraform/commit/359ba426393c78b78695797f9bdd6a08c0455720",
    "files": [
      {
        "filename": "billing/main.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "added",
        "patch": "@@ -0,0 +1,14 @@\n+resource \"aws_cloudwatch_metric_alarm\" \"billing\" {\n+  alarm_name          = \"billing-alarm-${lower(var.currency)}\"\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods  = \"1\"\n+  metric_name         = \"EstimatedCharges\"\n+  namespace           = \"AWS/Billing\"\n+  period              = \"28800\"\n+  statistic           = \"Maximum\"\n+  threshold           = var.monthly_billing_threshold\n+\n+  dimensions = {\n+    Currency = \"${var.currency}\"\n+  }\n+}"
      },
      {
        "filename": "main.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -13,6 +13,12 @@ module \"testy\" {\n   commontags = var.roottags\n }\n \n+module \"bill\" {\n+  source                    = \"./billing\"\n+  monthly_billing_threshold = 13\n+  currency                  = \"USD\"\n+}\n+\n module \"eksaws\" {\n   source      = \"./eksaws\"\n   commontags  = var.roottags"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/stuartellis/stuartellis-org-tf-modules/commit/39a9cabac6765c75591ba258fef0d10ba7ae0f9e",
    "files": [
      {
        "filename": "aws/billing_alerts/main.tf",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "status": "added",
        "patch": "@@ -0,0 +1,27 @@\n+terraform {\n+  required_version = \"= 0.15.5\"\n+\n+  required_providers {\n+    aws = {\n+      source  = \"hashicorp/aws\"\n+      version = \"= 3.43.0\"\n+    }\n+  }\n+\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"billing_threshold_alarm\" {\n+  alarm_name = \"billing_threshold_alarm\"\n+  alarm_description = \"A CloudWatch Alarm that triggers the AWS bill reaches the specified threshold (default: 100 USD).\"\n+  metric_name = \"EstimatedCharges\"\n+  namespace = \"AWS/Billing\"\n+  statistic = \"Maximum\"\n+  period = \"21600\"\n+  threshold = \"100\"\n+  evaluation_periods = \"1\"\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  alarm_actions = [ \"${var.sns_alerts_arn}\" ]\n+  dimensions = {\n+    Currency = \"USD\"\n+  }\n+}"
      },
      {
        "filename": "aws/billing_alerts/variables.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+variable \"sns_alerts_arn\" {\n+  type = string\n+}"
      },
      {
        "filename": "aws/notifications/outputs.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+output \"sns_alerts_arn\" {\n+  value = aws_sns_topic.alerts.arn\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/greenbrian/musical-spork/commit/24c07bfd5c31438fff6374e9ba3d577e6402d777",
    "files": [
      {
        "filename": "README.md",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -21,7 +21,10 @@ This contains HashiCorp code to do the following:\n 6. Execute Packer build\n ```\n cd packer\n-packer build -var-file=vars.json -only=amazon-ebs-rhel-7.5-systemd  packer.json   \n+# CentOS 7(default)\n+packer build -var-file=vars.json -only=amazon-ebs-centos-7 packer.json   \n+# RHEL 7.5 - Additional licensing costs\n+packer build -var-file=vars.json -only=amazon-ebs-rhel-7.5-systemd packer.json   \n ```\n \n ## Terraform usage"
      },
      {
        "filename": "packer/packer.json",
        "additions": 50,
        "deletions": 1,
        "changes": 51,
        "status": "modified",
        "patch": "@@ -15,7 +15,7 @@\n       \"force_deregister\": true,\n       \"force_delete_snapshot\": true,\n       \"ssh_pty\": true,\n-      \"instance_type\": \"t2.medium\",\n+      \"instance_type\": \"t3.medium\",\n       \"associate_public_ip_address\": true,\n       \"source_ami_filter\": {\n         \"filters\": {\n@@ -44,6 +44,45 @@\n         \"Release\": \"{{ user `release` }}\"\n       }\n     },\n+    {\n+      \"name\": \"amazon-ebs-centos-7\",\n+      \"type\": \"amazon-ebs\",\n+      \"access_key\": \"{{ user `aws_access_key_id` }}\",\n+      \"secret_key\": \"{{ user `aws_secret_access_key` }}\",\n+      \"region\": \"{{ user `aws_region` }}\",\n+      \"spot_price\": \"0\",\n+      \"force_deregister\": true,\n+      \"force_delete_snapshot\": true,\n+      \"ssh_pty\": true,\n+      \"instance_type\": \"t3.medium\",\n+      \"associate_public_ip_address\": true,\n+      \"source_ami_filter\": {\n+        \"filters\": {\n+          \"virtualization-type\": \"hvm\",\n+          \"name\": \"*CentOS Linux 7 x86_64 HVM EBS ENA*\",\n+          \"root-device-type\": \"ebs\"\n+        },\n+        \"owners\": [\"679593333241\"],\n+        \"most_recent\": true\n+      },\n+      \"ssh_username\": \"centos\",\n+      \"ssh_timeout\": \"5m\",\n+      \"ami_virtualization_type\": \"hvm\",\n+      \"ami_name\": \"hashistack-image-centos7-{{isotime \\\"2006-01-02-03-04\\\"}}\",\n+      \"ami_description\": \"HashiStack Image - CentOS 7\",\n+      \"ami_regions\": [\"us-east-1\", \"us-east-2\", \"us-west-2\"],\n+      \"tags\": {\n+        \"Name\": \"HashiStack CentOS 7 Image {{ user `release_version` }}: Consul v{{ user `consul_version` }} Vault v{{ user `vault_version` }} Nomad v{{ user `nomad_version` }}\",\n+        \"System\": \"HashiStack\",\n+        \"Product\": \"HashiStack\",\n+        \"Consul-Version\": \"{{ user `consul_version` }}\",\n+        \"Vault-Version\": \"{{ user `vault_version` }}\",\n+        \"Nomad-Version\": \"{{ user `nomad_version` }}\",\n+        \"OS\": \"centos\",\n+        \"OS-Version\": \"7\",\n+        \"Release\": \"{{ user `release` }}\"\n+      }\n+    },\n     {\n       \"name\": \"amazon-ebs-ubuntu-18.04-systemd\",\n       \"type\": \"amazon-ebs\",\n@@ -179,6 +218,16 @@\n       \"script\": \"scripts/rhel.sh\",\n       \"only\": [\"amazon-ebs-rhel-7.5-systemd\"]\n     },\n+    {\n+      \"type\": \"shell\",\n+      \"script\": \"scripts/centos-7.sh\",\n+      \"only\": [\"amazon-ebs-centos-7\"]\n+    },\n+    {\n+      \"type\": \"shell\",\n+      \"script\": \"scripts/el7.sh\",\n+      \"only\": [\"amazon-ebs-rhel-7.5-systemd\",\"amazon-ebs-centos-7\"]\n+    },\n     {\n       \"type\": \"shell\",\n       \"script\": \"scripts/setup.sh\""
      },
      {
        "filename": "packer/scripts/centos-7.sh",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+#!/usr/bin/env bash\n+set -x\n+\n+# Centos7 Specific Setup Here"
      },
      {
        "filename": "packer/scripts/el7.sh",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "status": "added",
        "patch": "@@ -0,0 +1,39 @@\n+#!/usr/bin/env bash\n+set -x\n+\n+echo \"Installing updates and pre-requisites....\"\n+sudo yum -y check-update\n+sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n+sudo yum install -q -y wget unzip dnsmasq bind-utils ruby rubygems \\\n+  ntp git ca-certificates vim-enhanced haproxy nginx\n+sudo systemctl start ntpd.service\n+sudo systemctl enable ntpd.service\n+sudo systemctl stop firewalld.service\n+sudo systemctl disable firewalld.service\n+curl --silent -O https://bootstrap.pypa.io/get-pip.py\n+sudo python get-pip.py\n+sudo pip install awscli\n+echo \"Adding Consul and Vault system users\"\n+  # RHEL user setup\n+for _user in consul consul-template vault; do\n+  sudo /usr/sbin/groupadd --force --system ${_user}\n+  if ! getent passwd ${_user} >/dev/null ; then\n+    sudo /usr/sbin/adduser \\\n+      --system \\\n+      --gid ${_user} \\\n+      --home /srv/${_user} \\\n+      --no-create-home \\\n+      --comment \"${_user} account\" \\\n+      --shell /bin/false \\\n+      ${_user}  >/dev/null\n+  fi\n+done\n+\n+echo \"Installing Docker with RHEL Workaround\"\n+sudo yum -yq install policycoreutils-python yum-utils device-mapper-persistent-data lvm2\n+sudo yum -y remove docker docker-client docker-client-latest docker-common docker-latest \\\n+  docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux \\\n+  docker-engine container-selinux\n+sudo yum-config-manager -y --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n+sudo yum install -y --setopt=obsoletes=0 \\\n+  docker-ce-18.06.1.ce-3.el7.x86_64"
      },
      {
        "filename": "packer/scripts/rhel.sh",
        "additions": 1,
        "deletions": 36,
        "changes": 37,
        "status": "modified",
        "patch": "@@ -1,42 +1,7 @@\n #!/usr/bin/env bash\n set -x\n \n-echo \"Performing updates and installing prerequisites\"\n+echo \"Enabling RHEL repos....\"\n sudo yum-config-manager --enable rhui-REGION-rhel-server-releases-optional\n sudo yum-config-manager --enable rhui-REGION-rhel-server-supplementary\n sudo yum-config-manager --enable rhui-REGION-rhel-server-extras\n-sudo yum -y check-update\n-sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n-sudo yum install -q -y wget unzip dnsmasq bind-utils ruby rubygems \\\n-  ntp git ca-certificates vim-enhanced haproxy nginx\n-sudo systemctl start ntpd.service\n-sudo systemctl enable ntpd.service\n-sudo systemctl stop firewalld.service\n-sudo systemctl disable firewalld.service\n-curl --silent -O https://bootstrap.pypa.io/get-pip.py\n-sudo python get-pip.py\n-sudo pip install awscli\n-echo \"Adding Consul and Vault system users\"\n-  # RHEL user setup\n-for _user in consul consul-template vault; do\n-  sudo /usr/sbin/groupadd --force --system ${_user}\n-  if ! getent passwd ${_user} >/dev/null ; then\n-    sudo /usr/sbin/adduser \\\n-      --system \\\n-      --gid ${_user} \\\n-      --home /srv/${_user} \\\n-      --no-create-home \\\n-      --comment \"${_user} account\" \\\n-      --shell /bin/false \\\n-      ${_user}  >/dev/null\n-  fi\n-done\n-\n-echo \"Installing Docker with RHEL Workaround\"\n-sudo yum -yq install policycoreutils-python yum-utils device-mapper-persistent-data lvm2\n-sudo yum -y remove docker docker-client docker-client-latest docker-common docker-latest \\\n-  docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux \\\n-  docker-engine container-selinux\n-sudo yum-config-manager -y --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n-sudo yum install -y --setopt=obsoletes=0 \\\n-  docker-ce-18.06.1.ce-3.el7.x86_64"
      },
      {
        "filename": "packer/scripts/setup.sh",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -10,7 +10,14 @@ sudo curl --silent -Lo /bin/jq https://github.com/stedolan/jq/releases/download/\n sudo chmod +x /bin/jq\n \n echo \"Configuring Docker options and service\"\n-sudo sh -c \"echo \\\"DOCKER_OPTS='--dns 127.0.0.1 --dns 8.8.8.8 --dns-search service.consul'\\\" >> /etc/default/docker\"\n+sudo mkdir /etc/docker && sudo chmod 700 /etc/docker\n+sudo bash -c \"cat >/etc/docker/daemon.json\" << EOF\n+{\n+  \"bip\": \"172.17.0.1/16\",\n+  \"dns\": [ \"172.17.0.1\", \"8.8.8.8\" ],\n+  \"dns-search\": [ \"service.consul\" ]\n+}\n+EOF\n \n sudo systemctl enable docker\n sudo systemctl start docker"
      },
      {
        "filename": "terraform/admin/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -56,6 +56,7 @@ resource \"aws_instance\" \"admin\" {\n   }\n \n   tags {\n+    Name             = \"${var.cluster_name} - admin\"\n     Environment-Name = \"${var.environment_name}\"\n     role             = \"admin\"\n     owner            = \"${var.owner}\""
      },
      {
        "filename": "terraform/admin/variables.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -42,17 +42,17 @@ variable \"aviato_instance_arn\" {\n }\n \n variable \"operating_system\" {\n-  default     = \"rhel\"\n-  description = \"Operating system type, supported options are rhel and ubuntu\"\n+  default     = \"centos\"\n+  description = \"Operating system type, supported options are rhel, centos, and ubuntu\"\n }\n \n variable \"operating_system_version\" {\n-  default     = \"7.3\"\n-  description = \"Operating system version, supported options are 7.3 for rhel, 16.04 for ubuntu\"\n+  default     = \"7\"\n+  description = \"Operating system version, supported options are 7.5 for rhel, 7 for CentOS, 16.04/18.04 for ubuntu\"\n }\n \n variable \"ssh_user_name\" {\n-  default     = \"ec2-user\"\n+  default     = \"centos\"\n   description = \"Default ssh username for provisioning, ec2-user for rhel systems, ubuntu for ubuntu systems\"\n }\n "
      },
      {
        "filename": "terraform/aviato/main.tf",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -30,7 +30,7 @@ resource \"aws_key_pair\" \"main\" {\n \n resource \"aws_instance\" \"haproxy\" {\n   ami               = \"${data.aws_ami.hashistack.id}\"\n-  instance_type     = \"t2.small\"\n+  instance_type     = \"t3.small\"\n   count             = 1\n   subnet_id         = \"${var.subnet_ids[0]}\"\n   key_name          = \"${var.ssh_key_name}\"\n@@ -45,6 +45,7 @@ resource \"aws_instance\" \"haproxy\" {\n   iam_instance_profile        = \"${var.instance_profile}\"\n \n   tags {\n+    Name             = \"${var.cluster_name} - haproxy\"\n     Environment-Name = \"${var.environment_name}\"\n     role             = \"haproxy\"\n     owner            = \"${var.owner}\"\n@@ -87,7 +88,7 @@ resource \"aws_security_group\" \"haproxy\" {\n \n resource \"aws_instance\" \"nginx\" {\n   ami               = \"${data.aws_ami.hashistack.id}\"\n-  instance_type     = \"t2.small\"\n+  instance_type     = \"t3.small\"\n   count             = \"${var.nginx_count}\"\n   subnet_id         = \"${var.subnet_ids[0]}\"\n   key_name          = \"${var.ssh_key_name}\"\n@@ -102,6 +103,7 @@ resource \"aws_instance\" \"nginx\" {\n   iam_instance_profile        = \"${var.instance_profile}\"\n \n   tags {\n+    Name             = \"${var.cluster_name} - nginx\"\n     Environment-Name = \"${var.environment_name}\"\n     role             = \"nginx\"\n     owner            = \"${var.owner}\""
      },
      {
        "filename": "terraform/aviato/variables.tf",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -21,21 +21,21 @@ variable \"instance_type\" {\n }\n \n variable \"operating_system\" {\n-  default     = \"rhel\"\n-  description = \"Operating system type, supported options are rhel and ubuntu\"\n+  default     = \"centos\"\n+  description = \"Operating system type, supported options are rhel, centos, and ubuntu\"\n }\n \n variable \"operating_system_version\" {\n-  default     = \"7.3\"\n-  description = \"Operating system version, supported options are 7.3 for rhel, 16.04 for ubuntu\"\n+  default     = \"7\"\n+  description = \"Operating system version, supported options are 7.5 for rhel, 7 for CentOS, 16.04/18.04 for ubuntu\"\n }\n \n variable \"ssh_user_name\" {\n-  default     = \"ec2-user\"\n-  description = \"Default ssh username for provisioning, ec2-user for rhel systems, ubuntu for ubuntu systems\"\n+  default     = \"centos\"\n+  description = \"Default ssh username for provisioning, ec2-user for rhel systems, centos for CentOS systems, ubuntu for ubuntu systems\"\n }\n \n variable \"vanity_domain\" {\n   default     = \"none\"\n   description = \"Vanity domain name to use\"\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "filename": "terraform/client/init-client.tpl",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ exec 1> >(logger -s -t $(basename $0)) 2>&1\n instance_id=\"$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\"\n local_ipv4=\"$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\"\n public_ipv4=\"$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\"\n-new_hostname=\"hashistack-$${instance_id}\"\n+new_hostname=\"hashistack-client\"\n \n echo \"${private_key}\" > /home/${ssh_user_name}/.ssh/id_rsa\n chmod 0700 /home/${ssh_user_name}/.ssh"
      },
      {
        "filename": "terraform/client/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -40,6 +40,7 @@ resource \"aws_instance\" \"client\" {\n   iam_instance_profile        = \"${var.instance_profile}\"\n \n   tags {\n+    Name             = \"${var.cluster_name} - client\"\n     Environment-Name = \"${var.environment_name}\"\n     role             = \"client\"\n     owner            = \"${var.owner}\""
      },
      {
        "filename": "terraform/client/variables.tf",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "status": "added",
        "patch": "@@ -0,0 +1,47 @@\n+variable \"ssh_key_name\" {}\n+variable \"public_key_data\" {}\n+variable \"private_key_data\" {}\n+variable \"vpc_id\" {}\n+variable \"environment_name\" {}\n+variable \"cluster_name\" {}\n+variable \"region\" {}\n+variable \"instance_profile\" {}\n+variable \"owner\" {}\n+variable \"ttl\" {}\n+\n+variable \"subnet_ids\" {\n+  type = \"list\"\n+}\n+\n+variable \"instance_type\" {\n+  default     = \"t2.micro\"\n+  description = \"AWS instance type to use eg m4.large\"\n+}\n+\n+variable \"hashistack_instance_arn\" {\n+  description = \"AWS IAM role ARN value for Hashistack node\"\n+}\n+\n+variable \"operating_system\" {\n+  default     = \"centos\"\n+  description = \"Operating system type, supported options are rhel, centos, and ubuntu\"\n+}\n+\n+variable \"operating_system_version\" {\n+  default     = \"7\"\n+  description = \"Operating system version, supported options are 7.5 for rhel, 7 for CentOS, 16.04/18.04 for ubuntu\"\n+}\n+\n+variable \"ssh_user_name\" {\n+  default     = \"centos\"\n+  description = \"Default ssh username for provisioning, ec2-user for rhel systems, ubuntu for ubuntu systems\"\n+}\n+\n+output \"ssh_info\" {\n+  value = \"${data.template_file.format_ssh.rendered}\"\n+}\n+\n+variable \"vanity_domain\" {\n+  default     = \"none\"\n+  description = \"Vanity domain name to use\"\n+}"
      },
      {
        "filename": "terraform/hashistack/init-cluster.tpl",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ instance_id=\"$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\"\n availability_zone=\"$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)\"\n local_ipv4=\"$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\"\n public_ipv4=\"$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\"\n-new_hostname=\"hashistack-$${public_ipv4}\"\n+new_hostname=\"hashistack-cluster-$${local_ipv4}\"\n \n echo \"${private_key}\" > /home/${ssh_user_name}/.ssh/id_rsa\n chmod 0700 /home/${ssh_user_name}/.ssh"
      },
      {
        "filename": "terraform/hashistack/variables.tf",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -25,22 +25,22 @@ variable \"cluster_size\" {\n }\n \n variable \"instance_type\" {\n-  default     = \"t2.large\"\n+  default     = \"t3.large\"\n   description = \"AWS instance type to use\"\n }\n \n variable \"operating_system\" {\n-  default     = \"rhel\"\n-  description = \"Operating system type, supported options are rhel and ubuntu\"\n+  default     = \"centos\"\n+  description = \"Operating system type, supported options are rhel, centos, and ubuntu\"\n }\n \n variable \"operating_system_version\" {\n-  default     = \"7.3\"\n-  description = \"Operating system version, supported options are 7.3 for rhel, 16.04 for ubuntu\"\n+  default     = \"7\"\n+  description = \"Operating system version, supported options are 7.5 for rhel, 7 for centos, 16.04/18.04 for ubuntu\"\n }\n \n variable \"ssh_user_name\" {\n-  default     = \"ec2-user\"\n+  default     = \"centos\"\n   description = \"Default ssh username for provisioning, ec2-user for rhel systems, ubuntu for ubuntu systems\"\n }\n "
      },
      {
        "filename": "terraform/main.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -82,7 +82,7 @@ module \"vpc-west\" {\n }\n \n locals {\n-  ssh_user_map = \"${map(\"ubuntu\",\"ubuntu\",\"rhel\",\"ec2-user\")}\"\n+  ssh_user_map = \"${map(\"ubuntu\",\"ubuntu\",\"rhel\",\"ec2-user\",\"centos\",\"centos\")}\"\n }\n \n module \"hashistack-us-east\" {\n@@ -163,6 +163,7 @@ module \"client-west\" {\n   owner                            = \"${var.owner}\"\n   ttl                              = \"${var.ttl}\"\n   region                           = \"us-west-2\"\n+  cluster_name                     = \"${random_id.environment_name.hex}-us-west-2\"\n   environment_name                 = \"${random_id.environment_name.hex}\"\n   ssh_key_name                     = \"${random_id.environment_name.hex}-client\"\n   instance_profile                 = \"${module.hashistack-instance-profile.policy}\""
      },
      {
        "filename": "terraform/mysql-database/database.tpl",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -3,7 +3,7 @@\n instance_id=\"$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\"\n local_ipv4=\"$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\"\n public_ipv4=\"$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\"\n-new_hostname=\"hashistack-$${instance_id}\"\n+new_hostname=\"hashistack-db-$${public_ipv4}\"\n \n echo \"${private_key}\" > /home/${ssh_user_name}/.ssh/id_rsa\n chmod 0700 /home/${ssh_user_name}/.ssh"
      },
      {
        "filename": "terraform/mysql-database/main.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -30,7 +30,7 @@ resource \"aws_key_pair\" \"main\" {\n \n resource \"aws_instance\" \"db\" {\n   ami               = \"${data.aws_ami.hashistack.id}\"\n-  instance_type     = \"t2.small\"\n+  instance_type     = \"t3.small\"\n   count             = 1\n   subnet_id         = \"${var.subnet_ids[0]}\"\n   key_name          = \"${var.ssh_key_name}\"\n@@ -45,6 +45,7 @@ resource \"aws_instance\" \"db\" {\n   iam_instance_profile        = \"${var.instance_profile}\"\n \n   tags {\n+    Name             = \"${var.cluster_name} - mysql-database\"\n     Environment-Name = \"${var.environment_name}\"\n     role             = \"database\"\n     owner            = \"${var.owner}\""
      },
      {
        "filename": "terraform/mysql-database/variables.tf",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "status": "added",
        "patch": "@@ -0,0 +1,44 @@\n+variable \"ssh_key_name\" {}\n+variable \"public_key_data\" {}\n+variable \"private_key_data\" {}\n+variable \"vpc_id\" {}\n+variable \"environment_name\" {}\n+variable \"cluster_name\" {}\n+variable \"region\" {}\n+variable \"instance_profile\" {}\n+variable \"owner\" {}\n+variable \"ttl\" {}\n+variable \"image_release\" {}\n+\n+variable \"subnet_ids\" {\n+  type = \"list\"\n+}\n+\n+variable \"instance_type\" {\n+  default     = \"t2.micro\"\n+  description = \"AWS instance type to use eg m4.large\"\n+}\n+\n+variable \"operating_system\" {\n+  default     = \"centos\"\n+  description = \"Operating system type, supported options are rhel, centos, and ubuntu\"\n+}\n+\n+variable \"operating_system_version\" {\n+  default     = \"7\"\n+  description = \"Operating system version, supported options are 7.5 for rhel, 7 for CentOS, 16.04/18.04 for ubuntu\"\n+}\n+\n+variable \"ssh_user_name\" {\n+  default     = \"centos\"\n+  description = \"Default ssh username for provisioning, ec2-user for rhel systems, centos for CentOS systems, ubuntu for ubuntu systems\"\n+}\n+\n+variable \"vanity_domain\" {\n+  default     = \"none\"\n+  description = \"Vanity domain name to use\"\n+}\n+\n+output \"db_address\" {\n+  value = \"${var.vanity_domain == \"none\" ? \"${aws_instance.db.public_ip}\" : \"${element(concat(aws_route53_record.db.*.name, list(\"\")), 0)}\"}\"\n+}"
      },
      {
        "filename": "terraform/terraform.tfvars.example",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -2,9 +2,13 @@ owner    = \"John Doe\"\n ttl      = \"24\"\n env_name = \"hashistack\"\n \n-# rhel option\n-operating_system           = \"rhel\"\n-operating_system_version   = \"7.5\"\n+# centos option\n+operating_system           = \"centos\"\n+operating_system_version   = \"7\"\n+\n+# rhel option - additional instance licensing costs\n+#operating_system           = \"rhel\"\n+#operating_system_version   = \"7.5\"\n \n # ubuntu option - work in progress\n #operating_system           = \"ubuntu\""
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -32,17 +32,17 @@ variable \"vault_auto_replication_setup\" {\n }\n \n variable \"operating_system\" {\n-  default     = \"rhel\"\n-  description = \"Operating system type, supported options are rhel and ubuntu\"\n+  default     = \"centos\"\n+  description = \"Operating system type, supported options are rhel, centos, and ubuntu\"\n }\n \n variable \"operating_system_version\" {\n-  default     = \"7.5\"\n-  description = \"Operating system version, supported options are 7.3 for rhel, 16.04 for ubuntu\"\n+  default     = \"7\"\n+  description = \"Operating system version, supported options are 7.5 for rhel, 7 for CentOS, 16.04/18.04 for ubuntu\"\n }\n \n variable \"ssh_user_name\" {\n-  default     = \"ec2-user\"\n+  default     = \"centos\"\n   description = \"Default ssh username for provisioning, ec2-user for rhel systems, ubuntu for ubuntu systems\"\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_os", "cheaper_instance", "new_gen"],
    "notes": "Move from RHEL to CentOS; move from t2 instances to t3"
  },
  {
    "url": "https://github.com/fahdr/asz-dbz/commit/f5b50d8dfbec87dba0b824369021dc6b22058840",
    "files": [
      {
        "filename": "eks.tf",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -20,10 +20,10 @@ locals {\n     {\n       instance_type           = \"t2.micro\"\n       override_instance_types = var.asg_instance_types\n-      asg_desired_capacity    = var.autoscaling_minimum_size_by_az * length(data.aws_availability_zones.available_azs.zone_ids)\n-      asg_min_size            = var.autoscaling_minimum_size_by_az * length(data.aws_availability_zones.available_azs.zone_ids)\n-      asg_max_size            = var.autoscaling_maximum_size_by_az * length(data.aws_availability_zones.available_azs.zone_ids)\n-      on_demand_base_capacity = var.autoscaling_minimum_size_by_az * length(data.aws_availability_zones.available_azs.zone_ids)\n+      asg_desired_capacity    = var.autoscaling_minimum_size_by_az # * length(data.aws_availability_zones.available_azs.zone_ids)\n+      asg_min_size            = var.autoscaling_minimum_size_by_az #* length(data.aws_availability_zones.available_azs.zone_ids)\n+      asg_max_size            = var.autoscaling_maximum_size_by_az #* length(data.aws_availability_zones.available_azs.zone_ids)\n+      on_demand_base_capacity = var.autoscaling_minimum_size_by_az #* length(data.aws_availability_zones.available_azs.zone_ids)\n       on_demand_percentage_above_base_capacity = 25\n       spot_instance_pools                      = 3\n       kubelet_extra_args = \"--node-labels=node.kubernetes.io/lifecycle=`curl -s http://169.254.169.254/latest/meta-data/instance-life-cycle`\"\n@@ -48,6 +48,10 @@ module \"eks-cluster\" {\n \n   # map developer & admin ARNs as kubernetes Users\n   map_users = concat(local.admin_user_map_users, local.developer_user_map_users)\n+\n+   tags = {\n+    \"sre_candidate\"  = \"fahdrahman\"\n+  }\n }\n \n # get EKS cluster info to configure Kubernetes and Helm providers"
      },
      {
        "filename": "iam.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,6 +1,7 @@\n resource \"kubernetes_cluster_role\" \"iam_roles_developers\" {\n   metadata {\n     name = \"${var.name_prefix}-developers\"\n+    \n   }\n \n   rule {"
      },
      {
        "filename": "ingress.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,6 +1,9 @@\n # get (externally configured) DNS Zone\n resource \"aws_route53_zone\" \"base_domain\" {\n   name = var.dns_base_domain\n+  tags = {\n+    sre_candidate = \"fahdrahman\"\n+  }\n }\n \n \n@@ -12,7 +15,7 @@ resource \"aws_acm_certificate\" \"eks_domain_cert\" {\n \n   tags = {\n     Name            = \"${var.dns_base_domain}\"\n-    iac_environment = var.iac_environment_tag\n+    sre_candidate = \"fahdrahman\"\n   }\n }\n #resource \"aws_route53_record\" \"eks_domain_cert_validation_dns\" {"
      },
      {
        "filename": "network.tf",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ resource \"aws_eip\" \"nat_gw_elastic_ip\" {\n \n   tags = {\n     Name            = \"${var.cluster_name}-nat-eip\"\n-    iac_environment = var.iac_environment_tag\n+    \"sre_candidate\" = \"fahdrahman\"\n   }\n }\n \n@@ -20,21 +20,21 @@ module \"vpc\" {\n \n   name = \"${var.name_prefix}-vpc\"\n   cidr = var.main_network_block\n-  azs  = data.aws_availability_zones.available_azs.names\n+  azs  = data.aws_availability_zones.available_azs.names[0]\n \n   private_subnets = [\n     # this loop will create a one-line list as [\"10.0.0.0/20\", \"10.0.16.0/20\", \"10.0.32.0/20\", ...]\n     # with a length depending on how many Zones are available\n     for zone_id in data.aws_availability_zones.available_azs.zone_ids :\n-    cidrsubnet(var.main_network_block, var.subnet_prefix_extension, tonumber(substr(zone_id, length(zone_id) - 1, 1)) - 1)\n+    cidrsubnet(var.main_network_block, var.subnet_prefix_extension, tonumber(substr(data.aws_availability_zones.available_azs.zone_ids[0], length(data.aws_availability_zones.available_azs.zone_ids[0]) - 1, 1)) - 1)\n   ]\n \n   public_subnets = [\n     # this loop will create a one-line list as [\"10.0.128.0/20\", \"10.0.144.0/20\", \"10.0.160.0/20\", ...]\n     # with a length depending on how many Zones are available\n     # there is a zone Offset variable, to make sure no collisions are present with private subnet blocks\n     for zone_id in data.aws_availability_zones.available_azs.zone_ids :\n-    cidrsubnet(var.main_network_block, var.subnet_prefix_extension, tonumber(substr(zone_id, length(zone_id) - 1, 1)) + var.zone_offset - 1)\n+    cidrsubnet(var.main_network_block, var.subnet_prefix_extension, tonumber(substr(data.aws_availability_zones.available_azs.zone_ids[0], length(data.aws_availability_zones.available_azs.zone_ids[0]) - 1, 1)) + var.zone_offset - 1)\n   ]\n \n   # enable single NAT Gateway to save some money\n@@ -51,16 +51,16 @@ module \"vpc\" {\n   # add VPC/Subnet tags required by EKS\n   tags = {\n     \"kubernetes.io/cluster/${var.cluster_name}\" = \"shared\"\n-    iac_environment                             = var.iac_environment_tag\n+    \"sre_candidate\"                             = \"fahdrahman\"\n   }\n   public_subnet_tags = {\n     \"kubernetes.io/cluster/${var.cluster_name}\" = \"shared\"\n     \"kubernetes.io/role/elb\"                    = \"1\"\n-    iac_environment                             = var.iac_environment_tag\n+    \"sre_candidate\"                             = \"fahdrahman\"\n   }\n   private_subnet_tags = {\n     \"kubernetes.io/cluster/${var.cluster_name}\" = \"shared\"\n     \"kubernetes.io/role/internal-elb\"           = \"1\"\n-    iac_environment                             = var.iac_environment_tag\n+    \"sre_candidate\"                             = \"fahdrahman\"\n   }\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": ["aws", "reduce_az"],
    "notes": "Reduce the number of availability zones used for EKS to 1 to save costs"
  },
  {
    "url": "https://github.com/kmalkin/tf-aws-pi-hole/commit/066049972b995fb019bf29be7f0f307064a2f00e",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -3,5 +3,7 @@\n *.tfstate.backup\n .DS_Store\n .pem\n-aws-pi-hole-server.pem\n-ahm.tfvars\n\\ No newline at end of file\n+ahm.tfvars\n+kmalkin.tfvars\n+*pem\n+*.ovpn"
      },
      {
        "filename": ".pre-commit-config.yaml",
        "additions": 20,
        "deletions": 1,
        "changes": 21,
        "status": "modified",
        "patch": "@@ -3,4 +3,23 @@ repos:\n   rev: v1.41.0\n   hooks:\n     - id: terraform_fmt\n-    - id: terraform_docs\n\\ No newline at end of file\n+    - id: terraform_docs\n+- repo: https://github.com/pre-commit/pre-commit-hooks\n+  rev: v3.2.0\n+  hooks:\n+    -   id: check-merge-conflict\n+    -   id: trailing-whitespace\n+    -   id: end-of-file-fixer\n+    -   id: check-docstring-first\n+    -   id: check-json\n+    -   id: check-added-large-files\n+    -   id: check-yaml\n+    -   id: requirements-txt-fixer\n+-   repo: https://github.com/asottile/setup-cfg-fmt\n+    rev: v1.11.0\n+    hooks:\n+    -   id: setup-cfg-fmt\n+-   repo: https://github.com/pre-commit/pre-commit\n+    rev: v2.7.1\n+    hooks:\n+    -   id: validate_manifest"
      },
      {
        "filename": ".tool-versions",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n tflint 0.15.5\n-terraform 0.13.3 0.12.24 0.11.14\n-terraform-docs v0.9.1\n+terraform 0.13.4\n+terraform-docs v0.10.1\n tfsec 0.19.0"
      },
      {
        "filename": "CHANGELOG.md",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "status": "modified",
        "patch": "@@ -7,6 +7,31 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2).\n \n Dates in this file are in format of YYYY-MM-DD (2019-12-13 means 13th of December 2019).\n \n+## [[UNRELEASED]](https://github.com/kmalkin/tf-aws-pi-hole/releases/tag/n.n.n) - nnnn-nn-nn\n+\n+### Added\n+\n+* NEW `backend-state` code that setups bucket and dynamodb table for remote state management is the user doesnt already have a remote state bucket they can point at.[@kmalkin](https://github.com/kmalkin)\n+* NEW `open-vpn` module that creates self installing openvpn setup[@kmalkin](https://github.com/kmalkin)\n+* Remote state configuration for all backend.[@kmalkin](https://github.com/kmalkin)\n+* Variables added and mapped for hostname, instance type, ami_id and volume size.[@kmalkin](https://github.com/kmalkin)\n+\n+### Changed\n+\n+* Updated README's for all modules[@kmalkin](https://github.com/kmalkin)\n+* Updated .gitignore[@kmalkin](https://github.com/kmalkin)\n+* Pihole ec2 is now a module[@kmalkin](https://github.com/kmalkin)\n+* Pihole ec2 now has 10gb volume instead of 20gb[@kmalkin](https://github.com/kmalkin)\n+* Pihole instance security groups modified to allow cross instance comms from openVpn instance[@kmalkin](https://github.com/kmalkin)\n+\n+### Fixed\n+\n+* Sorted out the link between remote state and the locking dynamodb table[@kmalkin](https://github.com/kmalkin)\n+\n+### Removed\n+\n+* Iam role policy / user creation. Anyone should just be able to setup the permissions needed to run this into their aws acccount. If not then its not really the purpose of this code to create that.[@kmalkin](https://github.com/kmalkin)\n+\n ## [[1.2.0]](https://github.com/kmalkin/tf-aws-pi-hole/releases/tag/1.2.0) - 2020-10-01\n \n ### Added"
      },
      {
        "filename": "CONTRIBUTION.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -9,4 +9,4 @@ Please add too or create the [[UNREALEASED]] block in CHANGELOG.md\n \n ## README.md\n \n-terraform-docs should be used to generate your README.md, it does nice things like include inputs/outputs in a nice table.\n\\ No newline at end of file\n+terraform-docs should be used to generate your README.md, it does nice things like include inputs/outputs in a nice table."
      },
      {
        "filename": "README.md",
        "additions": 43,
        "deletions": 20,
        "changes": 63,
        "status": "modified",
        "patch": "@@ -1,35 +1,58 @@\n-# tf-aws-pi-hole\n+ # tfawspihole\n+ ## Complete Terraform solution to Pi Hole install\n \n-## Overview\n+ * Many thanks to the guys and gals that actually provide this free opensource tool for the benefit of us all.\n+ https://pihole.net/\n+ * Also Many thanks to leomoonstudios for making a silent installed for openvpn:  https://github.com/leomoonstudios/openvpninstallerforlinux\n \n-This repo is responsible for managing/creating an ec2 instance inside of aws free tier t2.micro with an elastic ip address and deploying pihole preconfigured into that instance\n+ ## Overview\n \n-It will also create a user/role/policy that can then be used from this point forwards to manage the service. However for first time run. Higher permissions are needed in order for the tf to be able to create the resources required.\n+ * This is a completely self configured self deploying Pihole/VPN solution for aws cloud.\n+ * It deploys a complete full traffic openvpn tunnel and wires it though pihole as its DNS provider. Creating a completely self contained private network tunnel with dns blocking / filtering solution.\n \n-For now the user it creates is a placeholder and had an incomplete policy. So will need admin to release initial run.\n+ ## Prerequisites\n+ * A basic knowledge of terraform , how to apply and run it.\n+ * A basic understanding of how to configure / setup and use aws cli commands.  You will need to setup appropriate profile\n+ * Linux experience and AWS account to deploy into.\n \n-## Prerequisites\n+ NB\n+ * It is recommended that you setup/and use a remote state.\n \n-A basic knowledge of terraform , how to apply and run it.\n-A basic understanding of how to configure / setup and use aws cli commands. -- You will need to setup appropriate profile\n+ ## Versions\n \n-## Versions\n+ See change log for specifics.\n \n-See change log for specifics. Recommended that the latest tag is always used rather than master\n+  * 1.#.# >= obsolete and probably wont be maintained now.\n+  * 2.#.# >= both the Pi Hole and OpenVPN in either single or separate instances\n \n-## Usage\n+ ## Usage\n \n-Simply run `terraform-apply` and provide the variables required. It will create the rest.\n+ ### Setup\n+ * Checkout the code. Enter the `backend-state` directory and run `terraform init && terraform apply`. This will create the backend remote state objects. Take note of the bucket name output.\n+ * Then simply run `terraform apply` in the parent terraform directory and provide the variables required. It will create the rest.\n+ * Or include the variables in a parameter file like `terraform apply varfile=params/default.tfvars`\n \n-Or include the variables in a parameter file like `terraform apply -var-file=params/default.tfvars`\n+ ### Different types of infra configurations\n+ * The 3 variables control what type of infra deployment you want. By default you will get single instance pihole and open vpn deployment inside the single ec2 instance.\n+ ```\n+ variable \"enable_separate_openvpn_instance\"  false\n+ variable \"enable_separate_pihole_instance\"  false\n+ variable \"split_instances\"  false\n+ ```\n+ * Setting `split_instances` to true, means you then need to choose which separate instances you want. You can have just 1 or both and use them individually or together.\n+ * When/If you do decide to split the instances. The vpn will not be pointing at the pihole by default. You have got to change open vpn config `/etc/openvpn/server/server.conf` to point to your pihole instance.\n+ * If you want a vpn solution that is automatically tunneled through the pihole I strongly recommend you go for the single instance default appoach.\n \n-## Future features\n+ ### Post infra deployment\n+ * The only step to do is to pull the *.ovpn config for programs like (tunnelblick) from the preconfigured openvpn isntance using SCP.\n+ * EG. `scp i \"YOURCERT.pem\" ubuntu@YOUREC2INSTANCE:/etc/openvpn/client/default_client.ovpn .`\n+ * Of course you can login via ssh and create new client setups, as many as you require. OpenVPN is configurable once logged in with `sudo lmovpn`\n \n-* SG to ensure there is always a running instance\n-* ariablised instance type so that it can be run on other instance types instead of just t2.mico (free tier)\n-* Variablised hostname to pass into the pihole ec2 setup\n-* Completed permissions map for the bespoke created IAM user/role/policy\n \n-# !!!! DISCLAIMER !!!!\n+ ## Future features\n \n-All code is currently designed to run within aws free tier. However there are still certain costs associated with running infra in aws. All costs are down to the responsibility of the aws account owner. If you dont know/understand what this is deploying. Dont deploy it. There may be running costs involved with elastic ips/storage/keypairs that you as the aws account owner would be responsible for.\n+ * ASG to ensure there is always a running instance\n+\n+ # !!!! DISCLAIMER !!!!\n+\n+ All code is currently designed to run within aws. All costs are down to the responsibility of the aws account owner. If you dont know/understand what this is deploying. Dont deploy it. There may be running costs involved with elastic ips/storage/keypairs that you as the aws account owner would be responsible for."
      },
      {
        "filename": "terraform/README.md",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "status": "modified",
        "patch": "@@ -1,3 +1,5 @@\n+# Terraform Docs\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n ## Requirements\n \n | Name | Version |\n@@ -7,29 +9,24 @@\n \n ## Providers\n \n-| Name | Version |\n-|------|---------|\n-| aws | ~> 3.0 |\n-| template | n/a |\n-| tls | n/a |\n+No provider.\n \n ## Inputs\n \n | Name | Description | Type | Default | Required |\n |------|-------------|------|---------|:--------:|\n+| additional\\_tags | Additional resource tags | `map(string)` | `{}` | no |\n | aws\\_credentials\\_profile | High level profile name that the terraform uses for aws access to create new role/policy/user for pihole deployment | `string` | n/a | yes |\n | aws\\_region | Region of aws to use | `string` | `\"eu-west-2\"` | no |\n-| enable\\_r53\\_zone\\_code | Boolean true/false flag that tells the terraform to run the route53 code if you have a zone setup already. If enabled remember to set r53\\_zone variable too. | `bool` | `false` | no |\n+| enable\\_separate\\_openvpn\\_instance | Boolean True/False to control the ec2 installs. Set to false if you dont want to build the openvpn instance. | `bool` | `false` | no |\n+| enable\\_separate\\_pihole\\_instance | Boolean True/False to control the ec2 installs. Set to false if you dont want to build the pihole instance. | `bool` | `false` | no |\n | ingress\\_access\\_ip\\_address | Ip address that you will access the pihole from. All other access will be locked. | `string` | n/a | yes |\n-| key\\_pair\\_name | Name to give the generated keypair that will be associated with the ec2 isntance for ssh access | `string` | `\"pi-hole-server-keypair\"` | no |\n-| pi\\_hole\\_management\\_role | Rolename created from the iam code used for managing the pi-hole instance | `string` | `\"pi-hole-management-role\"` | no |\n+| key\\_pair\\_name | Name to give the generated keypair that will be associated with the pihole ec2 isntance for ssh access | `string` | `\"server-keypair\"` | no |\n | pi\\_hole\\_web\\_admin\\_password | Password For accessing the Pihole gui admin console. Not really needed since security groups stop anyone but a single ip (your ip) from accessing it anyhow | `string` | `\"\"` | no |\n-| r53\\_zone | Route 53 Zone | `string` | `\"\"` | no |\n+| split\\_instances | Boolean True/False to control the ec2 installs. By default you will get 1 ec2 instance. Set to true and it will separate both OpenVPN and Pihole instances. Once split is true make sure you choose which intances to enable with the other vars. | `bool` | `false` | no |\n \n ## Outputs\n \n-| Name | Description |\n-|------|-------------|\n-| pihole | DNS Entry |\n-| public\\_ip | Public IP created |\n+No output.\n \n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->"
      },
      {
        "filename": "terraform/asg.tg",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "removed",
        "patch": null
      },
      {
        "filename": "terraform/backend-state/README.md",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "status": "added",
        "patch": "@@ -0,0 +1,26 @@\n+## Requirements\n+\n+| Name | Version |\n+|------|---------|\n+| terraform | >= 0.13.0 |\n+| aws | ~> 3.0 |\n+\n+## Providers\n+\n+| Name | Version |\n+|------|---------|\n+| aws | ~> 3.0 |\n+| random | n/a |\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|------|---------|:--------:|\n+| aws\\_credentials\\_profile | High level profile name that the terraform uses for aws access to create new role/policy/user for pihole deployment | `string` | n/a | yes |\n+| aws\\_dynamodb\\_table\\_name | Name for the backend state locking table | `string` | `\"terraform-statelock\"` | no |\n+| aws\\_region | Region of aws to use | `string` | `\"eu-west-2\"` | no |\n+| aws\\_s3\\_state\\_bucket\\_name | Name for the backend state bucket | `string` | `\"terraform-remotestate\"` | no |\n+\n+## Outputs\n+\n+No output."
      },
      {
        "filename": "terraform/backend-state/dynamodb.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "added",
        "patch": "@@ -0,0 +1,14 @@\n+resource \"aws_dynamodb_table\" \"terraform_statelock\" {\n+  name           = var.aws_dynamodb_table_name\n+  read_capacity  = 20\n+  write_capacity = 20\n+  hash_key       = \"LockID\"\n+\n+  attribute {\n+    name = \"LockID\"\n+    type = \"S\"\n+  }\n+  tags = {\n+    Name = \"Terraform State Locking table\"\n+  }\n+}"
      },
      {
        "filename": "terraform/backend-state/outputs.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+output \"Remote state bucket name\" {\n+  description = \"Name of the created bucket for backend remote state\"\n+  value       = aws_s3_bucket.terraform_remotestate.bucket\n+}"
      },
      {
        "filename": "terraform/backend-state/s3.tf",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+resource \"random_id\" \"state_bucket_rand\" {\n+  byte_length = 2\n+}\n+\n+resource \"aws_s3_bucket\" \"terraform_remotestate\" {\n+  bucket = \"${var.aws_s3_state_bucket_name}-${random_id.state_bucket_rand.dec}\"\n+  acl    = \"private\"\n+\n+  versioning {\n+    enabled = true\n+  }\n+\n+  tags = {\n+    Name = \"Terraform s3 State Bucket\"\n+  }\n+}\n+\n+resource \"aws_s3_bucket_object\" \"remotestate_folder\" {\n+  bucket = aws_s3_bucket.terraform_remotestate.id\n+  key    = \"terraform-aws/pihole_openvpn/\"\n+}"
      },
      {
        "filename": "terraform/backend-state/variables.tf",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+variable \"aws_region\" {\n+  description = \"Region of aws to use\"\n+  type        = string\n+  default     = \"eu-west-2\"\n+}\n+\n+variable \"aws_credentials_profile\" {\n+  description = \"High level profile name that the terraform uses for aws access to create new role/policy/user for pihole deployment\"\n+  type        = string\n+}\n+\n+variable \"aws_s3_state_bucket_name\" {\n+  description = \"Name for the backend state bucket\"\n+  type        = string\n+  default     = \"terraform-remotestate\"\n+}\n+variable \"aws_dynamodb_table_name\" {\n+  description = \"Name for the backend state locking table\"\n+  type        = string\n+  default     = \"terraform-statelock\"\n+}"
      },
      {
        "filename": "terraform/backend-state/versions.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "renamed",
        "patch": "@@ -11,4 +11,4 @@ terraform {\n provider \"aws\" {\n   profile = var.aws_credentials_profile\n   region  = var.aws_region\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "filename": "terraform/ec2.tf",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "status": "removed",
        "patch": "@@ -1,35 +0,0 @@\n-resource \"tls_private_key\" \"pi_hole_key_pair_config\" {\n-  algorithm = \"RSA\"\n-  rsa_bits  = 4096\n-}\n-\n-resource \"aws_key_pair\" \"generated_pi_hole_server_keypair\" {\n-  key_name   = var.key_pair_name\n-  public_key = tls_private_key.pi_hole_key_pair_config.public_key_openssh\n-}\n-\n-resource \"aws_instance\" \"pi_hole_ec2\" {\n-  ami                    = \"ami-05c424d59413a2876\"\n-  instance_type          = \"t2.micro\"\n-  vpc_security_group_ids = [aws_security_group.pi_hole_security_group.id]\n-  key_name               = var.key_pair_name\n-  root_block_device {\n-    volume_size = 20\n-  }\n-  user_data = data.template_file.pi_hole_user_data.rendered\n-  tags = {\n-    \"Name\" = \"AWS Pi Hole Server\"\n-  }\n-}\n-\n-resource \"aws_eip\" \"pi_hole_elastic_ip\" {\n-  instance = aws_instance.pi_hole_ec2.id\n-  vpc      = true\n-}\n-\n-data \"template_file\" \"pi_hole_user_data\" {\n-  template = \"${file(\"${path.module}/templates/pi-hole-init.tpl\")}\"\n-  vars = {\n-    web_admin_password = var.pi_hole_web_admin_password\n-  }\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/iam.tf",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "status": "removed",
        "patch": "@@ -1,6 +0,0 @@\n-module \"iam_user\" {\n-  source                  = \"./iam\"\n-  aws_credentials_profile = var.aws_credentials_profile\n-  aws_region              = var.aws_region\n-  pi_hole_management_role = var.pi_hole_management_role\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/iam/README.md",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "status": "removed",
        "patch": "@@ -1,25 +0,0 @@\n-## Requirements\n-\n-| Name | Version |\n-|------|---------|\n-| terraform | >= 0.12.0 |\n-| aws | ~> 2.50.0 |\n-\n-## Providers\n-\n-| Name | Version |\n-|------|---------|\n-| aws | ~> 2.50.0 |\n-\n-## Inputs\n-\n-| Name | Description | Type | Default | Required |\n-|------|-------------|------|---------|:--------:|\n-| aws\\_credentials\\_profile | High level rofile name that the terraform uses for aws access to create new role/policy/user for pihole deployment | `any` | n/a | yes |\n-| aws\\_region | Region of aws to use | `string` | `\"eu-west-2\"` | no |\n-| pi\\_hole\\_management\\_role | Rolename created from the iam code used for managing the pi-hole instance | `string` | `\"pi-hole-management-role\"` | no |\n-\n-## Outputs\n-\n-No output.\n-"
      },
      {
        "filename": "terraform/iam/outputs.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "removed",
        "patch": null
      },
      {
        "filename": "terraform/iam/policies/pi-hole-management.policy",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "removed",
        "patch": "@@ -1,10 +0,0 @@\n-{\n-    \"Version\": \"2012-10-17\",\n-    \"Statement\": {\n-      \"Effect\": \"Allow\",\n-      \"Action\": [\n-        \"ec2:Describe*\"\n-      ],\n-      \"Resource\": \"*\"\n-    }\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/iam/policy.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "removed",
        "patch": "@@ -1,10 +0,0 @@\n-resource \"aws_iam_policy\" \"pi_hole_management_policy\" {\n-  name        = \"pi-hole-management-policy\"\n-  description = \"assuming this role lets the user create the pi-hole instances\"\n-  policy      = file(\"${path.module}/policies/pi-hole-management.policy\")\n-}\n-\n-resource \"aws_iam_user_policy_attachment\" \"pi_hole_user_attachment\" {\n-  user       = aws_iam_user.pi_hole_iam_user.name\n-  policy_arn = aws_iam_policy.pi_hole_management_policy.arn\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/iam/role.tf",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "status": "removed",
        "patch": "@@ -1,20 +0,0 @@\n-data \"aws_iam_policy_document\" \"pi_hole_management_assume_role_policy\" {\n-  statement {\n-    actions = [\"sts:AssumeRole\"]\n-\n-    principals {\n-      type        = \"Service\"\n-      identifiers = [\"ec2.amazonaws.com\"]\n-    }\n-  }\n-}\n-\n-resource \"aws_iam_role\" \"pi_hole_management_role\" {\n-  name               = var.pi_hole_management_role\n-  assume_role_policy = data.aws_iam_policy_document.pi_hole_management_assume_role_policy.json\n-}\n-\n-resource \"aws_iam_role_policy_attachment\" \"pi_hole_role_policy_attachment\" {\n-  role       = aws_iam_role.pi_hole_management_role.name\n-  policy_arn = aws_iam_policy.pi_hole_management_policy.arn\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/iam/user.tf",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "status": "removed",
        "patch": "@@ -1,3 +0,0 @@\n-resource \"aws_iam_user\" \"pi_hole_iam_user\" {\n-  name = \"pi-hole_user\"\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/iam/variables.tf",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "status": "removed",
        "patch": "@@ -1,13 +0,0 @@\n-variable \"aws_credentials_profile\" {\n-  description = \"High level rofile name that the terraform uses for aws access to create new role/policy/user for pihole deployment\"\n-}\n-\n-variable \"aws_region\" {\n-  description = \"Region of aws to use\"\n-  default     = \"eu-west-2\"\n-}\n-\n-variable \"pi_hole_management_role\" {\n-  description = \"Rolename created from the iam code used for managing the pi-hole instance\"\n-  default     = \"pi-hole-management-role\"\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/main.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+module \"pi_hole_open_vpn\" {\n+  source                           = \"./pi-hole-open-vpn\"\n+  aws_credentials_profile          = var.aws_credentials_profile\n+  aws_region                       = var.aws_region\n+  ingress_access_ip_address        = var.ingress_access_ip_address\n+  pi_hole_web_admin_password       = var.pi_hole_web_admin_password\n+  enable_separate_pihole_instance  = var.enable_separate_pihole_instance\n+  enable_separate_openvpn_instance = var.enable_separate_openvpn_instance\n+  split_instances                  = var.split_instances\n+  key_pair_name                    = var.key_pair_name\n+  additional_tags                  = var.additional_tags\n+}"
      },
      {
        "filename": "terraform/outputs.tf",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -1,9 +0,0 @@\n-output \"public_ip\" {\n-  description = \"Public IP created\"\n-  value       = aws_eip.pi_hole_elastic_ip.public_ip\n-}\n-\n-output \"pihole\" {\n-  description = \"DNS Entry\"\n-  value       = join(\"\", aws_route53_record.pihole.*.fqdn)\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/params/default.tfvars",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,3 +1,2 @@\n aws_credentials_profile   = \"\"\n ingress_access_ip_address = \"\"\n-r53_zone                  = \"\"\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/README.md",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "status": "added",
        "patch": "@@ -0,0 +1,29 @@\n+# Terraform Docs\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Requirements\n+\n+No requirements.\n+\n+## Providers\n+\n+No provider.\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|------|---------|:--------:|\n+| additional\\_tags | Additional resource tags | `map(string)` | n/a | yes |\n+| aws\\_credentials\\_profile | High level profile name that the terraform uses for aws access to create new role/policy/user for pihole deployment | `string` | n/a | yes |\n+| aws\\_region | Region of aws to use | `string` | n/a | yes |\n+| enable\\_separate\\_openvpn\\_instance | Boolean True/False to control the ec2 installs. Set to false if you dont want to build the openvpn instance. | `bool` | n/a | yes |\n+| enable\\_separate\\_pihole\\_instance | Boolean True/False to control the ec2 installs. Set to false if you dont want to build the pihole instance. | `bool` | n/a | yes |\n+| ingress\\_access\\_ip\\_address | Ip address that you will access the pihole from. All other access will be locked. | `string` | n/a | yes |\n+| key\\_pair\\_name | Name to give the generated keypair that will be associated with the pihole ec2 isntance for ssh access | `string` | n/a | yes |\n+| pi\\_hole\\_web\\_admin\\_password | Password For accessing the Pihole gui admin console. Not really needed since security groups stop anyone but a single ip (your ip) from accessing it anyhow | `string` | n/a | yes |\n+| split\\_instances | Boolean True/False to control the ec2 installs. By default you will get 2 separate ec2 instances isolated and running independently. Set to false and it will consolidate both OpenVPN and Pihole into single EC2 | `bool` | n/a | yes |\n+\n+## Outputs\n+\n+No output.\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/instance_deployment/README.md",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "status": "added",
        "patch": "@@ -0,0 +1,39 @@\n+# Terraform Docs\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Requirements\n+\n+No requirements.\n+\n+## Providers\n+\n+| Name | Version |\n+|------|---------|\n+| aws | n/a |\n+| template | n/a |\n+| tls | n/a |\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|------|---------|:--------:|\n+| additional\\_tags | Additional resource tags | `map(string)` | n/a | yes |\n+| aws\\_credentials\\_profile | High level profile name that the terraform uses for aws access to create new role/policy/user for pihole deployment | `string` | n/a | yes |\n+| aws\\_region | Region of aws to use | `string` | n/a | yes |\n+| ingress\\_access\\_ip\\_address | Ip address that you will access the instance from. All other access will be locked. | `string` | n/a | yes |\n+| instance\\_ami\\_id | Requested Instance Ami Image Id | `string` | `\"ami-05c424d59413a2876\"` | no |\n+| instance\\_hostname | Requested Instance Hostname | `string` | n/a | yes |\n+| instance\\_type | Requested Instance Type | `string` | n/a | yes |\n+| instance\\_volume\\_size | Requested Instance Volume Size | `number` | n/a | yes |\n+| key\\_pair\\_name | Name to give the generated keypair that will be associated with the ec2 isntance for ssh access | `string` | n/a | yes |\n+| pi\\_hole\\_web\\_admin\\_password | Password For accessing the Pihole gui admin console. Not really needed since security groups stop anyone but a single ip (your ip) from accessing it anyhow | `string` | `\"\"` | no |\n+| prefix\\_identifier | Prefix added to all resources in aws to differentiate between types of infra setup | `string` | n/a | yes |\n+| user\\_data\\_template | User Data that the ec2 instance will run post creation | `any` | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| public\\_ip | Instance Public IP created |\n+| security\\_group\\_id | Secuirty Group Id |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/instance_deployment/ec2.tf",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "status": "added",
        "patch": "@@ -0,0 +1,41 @@\n+resource \"tls_private_key\" \"key_pair_config\" {\n+  algorithm = \"RSA\"\n+  rsa_bits  = 4096\n+}\n+\n+resource \"aws_key_pair\" \"generated_server_keypair\" {\n+  key_name   = \"${var.prefix_identifier}${var.key_pair_name}\"\n+  public_key = tls_private_key.key_pair_config.public_key_openssh\n+}\n+\n+resource \"aws_instance\" \"ec2\" {\n+  ami                    = var.instance_ami_id\n+  instance_type          = var.instance_type\n+  vpc_security_group_ids = [aws_security_group.security_group.id]\n+  key_name               = \"${var.prefix_identifier}${var.key_pair_name}\"\n+  root_block_device {\n+    volume_size = var.instance_volume_size\n+  }\n+  user_data = data.template_file.user_data.rendered\n+  tags = merge(\n+    {},\n+    var.additional_tags,\n+  )\n+}\n+\n+resource \"aws_eip\" \"elastic_ip\" {\n+  instance = aws_instance.ec2.id\n+  vpc      = true\n+  tags = merge(\n+    {},\n+    var.additional_tags,\n+  )\n+}\n+\n+data \"template_file\" \"user_data\" {\n+  template = var.user_data_template\n+  vars = {\n+    web_admin_password = var.pi_hole_web_admin_password\n+    instance_hostname  = var.instance_hostname\n+  }\n+}"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/instance_deployment/outputs.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+output \"public_ip\" {\n+  description = \"Instance Public IP created\"\n+  value       = aws_eip.elastic_ip.public_ip\n+}\n+\n+output \"security_group_id\" {\n+  description = \"Secuirty Group Id\"\n+  value       = aws_security_group.security_group.id\n+}"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/instance_deployment/sg.tf",
        "additions": 10,
        "deletions": 15,
        "changes": 25,
        "status": "renamed",
        "patch": "@@ -1,6 +1,6 @@\n-resource \"aws_security_group\" \"pi_hole_security_group\" {\n-  name        = \"pi-hole-security-group\"\n-  description = \"Configures All rules required for Pihole access and management\"\n+resource \"aws_security_group\" \"security_group\" {\n+  name        = \"${var.prefix_identifier}security-group\"\n+  description = \"Configures All rules required for ${var.prefix_identifier} instance access and management\"\n \n   ingress {\n     description = \"Home LAN SSH Access\"\n@@ -50,22 +50,17 @@ resource \"aws_security_group\" \"pi_hole_security_group\" {\n     cidr_blocks = [\"${var.ingress_access_ip_address}/32\"]\n   }\n \n-  ingress {\n-    description = \"Lets Encrypts HTTP Access\"\n-    from_port   = 80\n-    to_port     = 80\n-    protocol    = \"tcp\"\n-    cidr_blocks = [\"172.65.32.248/32\"]\n-  }\n-\n   egress {\n     from_port   = 0\n     to_port     = 0\n     protocol    = \"-1\"\n     cidr_blocks = [\"0.0.0.0/0\"]\n   }\n \n-  tags = {\n-    Name = \"Pi hole Security Group\"\n-  }\n-}\n\\ No newline at end of file\n+  tags = merge(\n+    {\n+      Name = \"OpenVPN / Pi Hole Security Group\"\n+    },\n+    var.additional_tags,\n+  )\n+}"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/instance_deployment/variables.tf",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "status": "added",
        "patch": "@@ -0,0 +1,60 @@\n+variable \"aws_region\" {\n+  description = \"Region of aws to use\"\n+  type        = string\n+}\n+\n+variable \"aws_credentials_profile\" {\n+  description = \"High level profile name that the terraform uses for aws access to create new role/policy/user for pihole deployment\"\n+  type        = string\n+}\n+\n+variable \"ingress_access_ip_address\" {\n+  description = \"Ip address that you will access the instance from. All other access will be locked.\"\n+  type        = string\n+}\n+\n+variable \"pi_hole_web_admin_password\" {\n+  description = \"Password For accessing the Pihole gui admin console. Not really needed since security groups stop anyone but a single ip (your ip) from accessing it anyhow\"\n+  type        = string\n+  default     = \"\"\n+}\n+\n+variable \"key_pair_name\" {\n+  description = \"Name to give the generated keypair that will be associated with the ec2 isntance for ssh access\"\n+  type        = string\n+}\n+\n+variable \"additional_tags\" {\n+  description = \"Additional resource tags\"\n+  type        = map(string)\n+}\n+\n+variable \"user_data_template\" {\n+  description = \"User Data that the ec2 instance will run post creation\"\n+}\n+\n+variable \"prefix_identifier\" {\n+  description = \"Prefix added to all resources in aws to differentiate between types of infra setup\"\n+  type        = string\n+}\n+\n+variable \"instance_type\" {\n+  description = \"Requested Instance Type\"\n+  type        = string\n+}\n+\n+variable \"instance_hostname\" {\n+  description = \"Requested Instance Hostname\"\n+  type        = string\n+}\n+\n+variable \"instance_volume_size\" {\n+  description = \"Requested Instance Volume Size\"\n+  type        = number\n+}\n+\n+variable \"instance_ami_id\" {\n+  description = \"Requested Instance Ami Image Id\"\n+  type        = string\n+  default     = \"ami-05c424d59413a2876\"\n+}"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/setup.tf",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "status": "added",
        "patch": "@@ -0,0 +1,59 @@\n+module \"open_vpn_instance\" {\n+  count = var.enable_separate_openvpn_instance ? 1 : 0\n+\n+  source                    = \"./instance_deployment\"\n+  aws_credentials_profile   = var.aws_credentials_profile\n+  aws_region                = var.aws_region\n+  ingress_access_ip_address = var.ingress_access_ip_address\n+  key_pair_name             = var.key_pair_name\n+  additional_tags           = merge({ Name = \"Open Vpn Server\" }, var.additional_tags)\n+  user_data_template        = file(\"${path.module}/templates/open-vpn-init.tpl\")\n+  prefix_identifier         = \"open-vpn-\"\n+  instance_type             = \"t3.nano\"\n+  instance_hostname         = \"aws-open-vpn-server\"\n+  instance_volume_size      = 8\n+}\n+\n+module \"pi_hole_instance\" {\n+  count = var.enable_separate_pihole_instance ? 1 : 0\n+\n+  source                     = \"./instance_deployment\"\n+  aws_credentials_profile    = var.aws_credentials_profile\n+  aws_region                 = var.aws_region\n+  ingress_access_ip_address  = var.ingress_access_ip_address\n+  pi_hole_web_admin_password = var.pi_hole_web_admin_password\n+  key_pair_name              = var.key_pair_name\n+  additional_tags            = merge({ Name = \"Pi Hole Server\" }, var.additional_tags)\n+  user_data_template         = file(\"${path.module}/templates/pi-hole-init.tpl\")\n+  prefix_identifier          = \"pi-hole-\"\n+  instance_type              = \"t3.nano\"\n+  instance_hostname          = \"aws-pihole-server\"\n+  instance_volume_size       = 8\n+}\n+\n+module \"additional_pihole_instance_sg_rules\" {\n+  count      = var.enable_separate_openvpn_instance ? 1 : 0\n+  depends_on = [module.pi_hole_instance, module.open_vpn_instance]\n+\n+  source                     = \"./sg_rules\"\n+  instance_access_ip_address = module.open_vpn_instance[0].public_ip\n+  pi_hole_instance_sg_id     = module.pi_hole_instance[0].security_group_id\n+\n+}\n+\n+module \"shared_instance\" {\n+  count = var.split_instances ? 0 : 1\n+\n+  source                     = \"./instance_deployment\"\n+  aws_credentials_profile    = var.aws_credentials_profile\n+  aws_region                 = var.aws_region\n+  ingress_access_ip_address  = var.ingress_access_ip_address\n+  pi_hole_web_admin_password = var.pi_hole_web_admin_password\n+  key_pair_name              = var.key_pair_name\n+  additional_tags            = merge({ Name = \"Pi Hole / Open Vpn Server\" }, var.additional_tags)\n+  user_data_template         = file(\"${path.module}/templates/open-vpn-pi-hole-joint-init.tpl\")\n+  prefix_identifier          = \"pi-hole-open-vpn-shared-\"\n+  instance_type              = \"t3.nano\"\n+  instance_hostname          = \"aws-pihole-openvpn-server\"\n+  instance_volume_size       = 10\n+}"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/sg_rules/README.md",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+## Requirements\n+\n+No requirements.\n+\n+## Providers\n+\n+| Name | Version |\n+|------|---------|\n+| aws | n/a |\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|------|---------|:--------:|\n+| instance\\_access\\_ip\\_address | Ip address that the vpn instances will access the pihole from. | `string` | n/a | yes |\n+| pi\\_hole\\_instance\\_sg\\_id | SG id associated with pi-hole that the new rules will bind too. | `string` | n/a | yes |\n+\n+## Outputs\n+\n+No output."
      },
      {
        "filename": "terraform/pi-hole-open-vpn/sg_rules/additional_cross_instance_rules.tf",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "status": "added",
        "patch": "@@ -0,0 +1,36 @@\n+resource \"aws_security_group_rule\" \"tcp_dns_in\" {\n+  description       = \"VPN to Pihole DNS TCP Access\"\n+  type              = \"ingress\"\n+  from_port         = 53\n+  to_port           = 53\n+  protocol          = \"tcp\"\n+  cidr_blocks       = [\"${var.instance_access_ip_address}/32\"]\n+  security_group_id = var.pi_hole_instance_sg_id\n+}\n+resource \"aws_security_group_rule\" \"udp_dns_in\" {\n+  description       = \"VPN to Pihole DNS UDP Access\"\n+  type              = \"ingress\"\n+  from_port         = 53\n+  to_port           = 53\n+  protocol          = \"udp\"\n+  cidr_blocks       = [\"${var.instance_access_ip_address}/32\"]\n+  security_group_id = var.pi_hole_instance_sg_id\n+}\n+resource \"aws_security_group_rule\" \"tcp_http_in\" {\n+  description       = \"VPN to Pihole HTTP Access\"\n+  type              = \"ingress\"\n+  from_port         = 80\n+  to_port           = 80\n+  protocol          = \"tcp\"\n+  cidr_blocks       = [\"${var.instance_access_ip_address}/32\"]\n+  security_group_id = var.pi_hole_instance_sg_id\n+}\n+resource \"aws_security_group_rule\" \"tcp_https_in\" {\n+  description       = \"VPN to Pihole HTTPS Access\"\n+  type              = \"ingress\"\n+  from_port         = 443\n+  to_port           = 443\n+  protocol          = \"tcp\"\n+  cidr_blocks       = [\"${var.instance_access_ip_address}/32\"]\n+  security_group_id = var.pi_hole_instance_sg_id\n+}"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/sg_rules/variables.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+variable \"instance_access_ip_address\" {\n+  description = \"Ip address that the vpn instances will access the pihole from.\"\n+  type        = string\n+}\n+\n+variable \"pi_hole_instance_sg_id\" {\n+  description = \"SG id associated with pi-hole that the new rules will bind too.\"\n+  type        = string\n+}"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/templates/open-vpn-init.tpl",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+#!/bin/bash\n+#For additional silent config/options please see https://leomoon.com/downloads/scripts/openvpn-installer-for-linux/\n+apt-get update -y\n+apt-get upgrade -y\n+sudo hostnamectl set-hostname ${instance_hostname}\n+\n+wget https://raw.githubusercontent.com/leomoon-studios/openvpn-installer/master/src/openvpn-installer -O ~/openvpn-installer\n+chmod +x ~/openvpn-installer\n+cd ~/ && SILENT=y sudo -E ~/openvpn-installer\n+MENU=1 CLIENT=default_client PASS=n sudo -E lmovpn"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/templates/open-vpn-pi-hole-joint-init.tpl",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "status": "added",
        "patch": "@@ -0,0 +1,47 @@\n+#!/bin/bash\n+\n+apt-get update -y\n+apt-get upgrade -y\n+sudo hostnamectl set-hostname ${instance_hostname}\n+mkdir /etc/pihole\n+touch /etc/pihole/setupVars.conf\n+\n+wget https://raw.githubusercontent.com/leomoon-studios/openvpn-installer/master/src/openvpn-installer -O ~/openvpn-installer\n+chmod +x ~/openvpn-installer\n+cd ~/ && SILENT=y DNS_TYPE=11 sudo -E ~/openvpn-installer\n+\n+MENU=5 CLIENT=default_client PASS=n sudo -E lmovpn\n+MENU=1 CLIENT=default_client PASS=n sudo -E lmovpn\n+\n+sudo resolvectl dns tun0 \"10.8.0.1\"\n+\n+cat >/etc/pihole/setupVars.conf <<EOL\n+WEBPASSWORD=${web_admin_password}\n+PIHOLE_INTERFACE=tun0\n+IPV4_ADDRESS=10.8.0.1\n+IPV6_ADDRESS=2601:444:8111:403:55d6:2f11:41bf:13bb\n+QUERY_LOGGING=true\n+INSTALL_WEB=true\n+DNSMASQ_LISTENING=single\n+PIHOLE_DNS_1=208.67.222.222\n+PIHOLE_DNS_2=208.67.220.220\n+PIHOLE_DNS_3=2620:0:ccc::2\n+PIHOLE_DNS_4=2620:0:ccd::2\n+DNS_FQDN_REQUIRED=true\n+DNS_BOGUS_PRIV=true\n+DNSSEC=true\n+TEMPERATUREUNIT=C\n+WEBUIBOXEDLAYOUT=traditional\n+API_EXCLUDE_DOMAINS=\n+API_EXCLUDE_CLIENTS=\n+API_QUERY_LOG_SHOW=all\n+API_PRIVACY_MODE=false\n+EOL\n+\n+curl -L https://install.pi-hole.net | bash /dev/stdin --unattended\n+\n+cat >>/etc/openvpn/server/server.conf <<EOL\n+push \"dhcp-option DNS 10.8.0.1\"\n+EOL\n+\n+MENU=5 CLIENT=default_client PASS=n sudo -E lmovpn"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/templates/pi-hole-init.tpl",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "renamed",
        "patch": "@@ -2,6 +2,9 @@\n \n apt-get update -y\n apt-get upgrade -y\n+\n+sudo hostnamectl set-hostname ${instance_hostname}\n+\n mkdir /etc/pihole\n touch /etc/pihole/setupVars.conf\n \n@@ -30,4 +33,4 @@ API_QUERY_LOG_SHOW=all\n API_PRIVACY_MODE=false\n EOL\n \n-curl -L https://install.pi-hole.net | bash /dev/stdin --unattended\n\\ No newline at end of file\n+curl -L https://install.pi-hole.net | bash /dev/stdin --unattended"
      },
      {
        "filename": "terraform/pi-hole-open-vpn/variables.tf",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "status": "added",
        "patch": "@@ -0,0 +1,44 @@\n+variable \"aws_region\" {\n+  description = \"Region of aws to use\"\n+  type        = string\n+}\n+\n+variable \"aws_credentials_profile\" {\n+  description = \"High level profile name that the terraform uses for aws access to create new role/policy/user for pihole deployment\"\n+  type        = string\n+}\n+\n+variable \"ingress_access_ip_address\" {\n+  description = \"Ip address that you will access the pihole from. All other access will be locked.\"\n+  type        = string\n+}\n+\n+variable \"pi_hole_web_admin_password\" {\n+  description = \"Password For accessing the Pihole gui admin console. Not really needed since security groups stop anyone but a single ip (your ip) from accessing it anyhow\"\n+  type        = string\n+}\n+\n+variable \"additional_tags\" {\n+  description = \"Additional resource tags\"\n+  type        = map(string)\n+}\n+\n+variable \"key_pair_name\" {\n+  description = \"Name to give the generated keypair that will be associated with the pihole ec2 isntance for ssh access\"\n+  type        = string\n+}\n+\n+variable \"enable_separate_openvpn_instance\" {\n+  description = \"Boolean True/False to control the ec2 installs. Set to false if you dont want to build the openvpn instance.\"\n+  type        = bool\n+}\n+\n+variable \"enable_separate_pihole_instance\" {\n+  description = \"Boolean True/False to control the ec2 installs. Set to false if you dont want to build the pihole instance.\"\n+  type        = bool\n+}\n+\n+variable \"split_instances\" {\n+  description = \"Boolean True/False to control the ec2 installs. By default you will get 2 separate ec2 instances isolated and running independently. Set to false and it will consolidate both OpenVPN and Pihole into single EC2\"\n+  type        = bool\n+}"
      },
      {
        "filename": "terraform/r53.tf",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "status": "removed",
        "patch": "@@ -1,15 +0,0 @@\n-resource \"aws_route53_zone\" \"myzone\" {\n-  count = var.enable_r53_zone_code ? 1 : 0\n-\n-  name = var.r53_zone\n-}\n-\n-resource \"aws_route53_record\" \"pihole\" {\n-  count = var.enable_r53_zone_code ? 1 : 0\n-\n-  zone_id = aws_route53_zone.myzone[0].id\n-  name    = \"pihole.${var.r53_zone}\"\n-  type    = \"A\"\n-  ttl     = \"300\"\n-  records = [aws_eip.pi_hole_elastic_ip.public_ip]\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/s3.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "removed",
        "patch": null
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 20,
        "deletions": 14,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -4,12 +4,6 @@ variable \"aws_region\" {\n   default     = \"eu-west-2\"\n }\n \n-variable \"pi_hole_management_role\" {\n-  description = \"Rolename created from the iam code used for managing the pi-hole instance\"\n-  type        = string\n-  default     = \"pi-hole-management-role\"\n-}\n-\n variable \"aws_credentials_profile\" {\n   description = \"High level profile name that the terraform uses for aws access to create new role/policy/user for pihole deployment\"\n   type        = string\n@@ -21,9 +15,9 @@ variable \"ingress_access_ip_address\" {\n }\n \n variable \"key_pair_name\" {\n-  description = \"Name to give the generated keypair that will be associated with the ec2 isntance for ssh access\"\n+  description = \"Name to give the generated keypair that will be associated with the pihole ec2 isntance for ssh access\"\n   type        = string\n-  default     = \"pi-hole-server-keypair\"\n+  default     = \"server-keypair\"\n }\n \n variable \"pi_hole_web_admin_password\" {\n@@ -32,14 +26,26 @@ variable \"pi_hole_web_admin_password\" {\n   default     = \"\"\n }\n \n-variable \"enable_r53_zone_code\" {\n-  description = \"Boolean true/false flag that tells the terraform to run the route53 code if you have a zone setup already. If enabled remember to set r53_zone variable too.\"\n+variable \"additional_tags\" {\n+  description = \"Additional resource tags\"\n+  type        = map(string)\n+  default     = {}\n+}\n+\n+variable \"enable_separate_openvpn_instance\" {\n+  description = \"Boolean True/False to control the ec2 installs. Set to false if you dont want to build the openvpn instance.\"\n   type        = bool\n   default     = false\n }\n \n-variable \"r53_zone\" {\n-  description = \"Route 53 Zone\"\n-  type        = string\n-  default     = \"\"\n+variable \"enable_separate_pihole_instance\" {\n+  description = \"Boolean True/False to control the ec2 installs. Set to false if you dont want to build the pihole instance.\"\n+  type        = bool\n+  default     = false\n+}\n+\n+variable \"split_instances\" {\n+  description = \"Boolean True/False to control the ec2 installs. By default you will get 1 ec2 instance. Set to true and it will separate both OpenVPN and Pihole instances. Once split is true make sure you choose which intances to enable with the other vars.\"\n+  type        = bool\n+  default     = false\n }"
      },
      {
        "filename": "terraform/versions.tf",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,4 +1,8 @@\n terraform {\n+  backend \"s3\" {\n+    key            = \"terraform-aws/pihole_openvpn/terraform.tfstate\"\n+    dynamodb_table = \"terraform-statelock\"\n+  }\n   required_version = \">= 0.13.0\"\n   required_providers {\n     aws = {\n@@ -11,4 +15,4 @@ terraform {\n provider \"aws\" {\n   profile = var.aws_credentials_profile\n   region  = var.aws_region\n-}\n\\ No newline at end of file\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "remove_iam"],
    "notes": "Remove IAM user 'as its just creating cost / confusion issues'"
  },
  {
    "url": "https://github.com/poseidon/terraform-google-kubernetes/commit/189d96ce0f96c107ebf62dbaf73734e6fd20883a",
    "files": [
      {
        "filename": "ingress.tf",
        "additions": 96,
        "deletions": 0,
        "changes": 96,
        "status": "added",
        "patch": "@@ -0,0 +1,96 @@\n+# Static IPv4 address for the TCP Proxy Load Balancer\n+resource \"google_compute_global_address\" \"ingress-ipv4\" {\n+  name       = \"${var.cluster_name}-ingress-ip\"\n+  ip_version = \"IPV4\"\n+}\n+\n+# Forward IPv4 TCP traffic to the HTTP proxy load balancer\n+# Google Cloud does not allow TCP proxies for port 80. Must use HTTP proxy.\n+resource \"google_compute_global_forwarding_rule\" \"ingress-http\" {\n+  name        = \"${var.cluster_name}-ingress-http\"\n+  ip_address  = \"${google_compute_global_address.ingress-ipv4.address}\"\n+  ip_protocol = \"TCP\"\n+  port_range  = \"80\"\n+  target      = \"${google_compute_target_http_proxy.ingress-http.self_link}\"\n+}\n+\n+# Forward IPv4 TCP traffic to the TCP proxy load balancer\n+resource \"google_compute_global_forwarding_rule\" \"ingress-https\" {\n+  name        = \"${var.cluster_name}-ingress-https\"\n+  ip_address  = \"${google_compute_global_address.ingress-ipv4.address}\"\n+  ip_protocol = \"TCP\"\n+  port_range  = \"443\"\n+  target      = \"${google_compute_target_tcp_proxy.ingress-https.self_link}\"\n+}\n+\n+# HTTP proxy load balancer for ingress controllers\n+resource \"google_compute_target_http_proxy\" \"ingress-http\" {\n+  name = \"${var.cluster_name}-ingress-http\"\n+  description = \"Distribute HTTP load across ${var.cluster_name} workers\"\n+  url_map = \"${google_compute_url_map.ingress-http.self_link}\"\n+}\n+\n+# TCP proxy load balancer for ingress controllers\n+resource \"google_compute_target_tcp_proxy\" \"ingress-https\" {\n+  name = \"${var.cluster_name}-ingress-https\"\n+  description = \"Distribute HTTPS load across ${var.cluster_name} workers\"\n+  backend_service = \"${google_compute_backend_service.ingress-https.self_link}\"\n+}\n+\n+# HTTP URL Map (required)\n+resource \"google_compute_url_map\" \"ingress-http\" {\n+  name = \"${var.cluster_name}-ingress-http\"\n+  # Do not add host/path rules for applications here. Use Ingress resources.\n+  default_service = \"${google_compute_backend_service.ingress-http.self_link}\"\n+}\n+\n+# Backend service backed by managed instance group of workers\n+resource \"google_compute_backend_service\" \"ingress-http\" {\n+  name        = \"${var.cluster_name}-ingress-http\"\n+  description = \"${var.cluster_name} ingress service\"\n+\n+  protocol         = \"HTTP\"\n+  port_name        = \"http\"\n+  session_affinity = \"NONE\"\n+  timeout_sec      = \"60\"\n+\n+  backend {\n+    group = \"${module.workers.instance_group}\"\n+  }\n+\n+  health_checks = [\"${google_compute_health_check.ingress.self_link}\"]\n+}\n+\n+# Backend service backed by managed instance group of workers\n+resource \"google_compute_backend_service\" \"ingress-https\" {\n+  name        = \"${var.cluster_name}-ingress-https\"\n+  description = \"${var.cluster_name} ingress service\"\n+\n+  protocol         = \"TCP\"\n+  port_name        = \"https\"\n+  session_affinity = \"NONE\"\n+  timeout_sec      = \"60\"\n+\n+  backend {\n+    group = \"${module.workers.instance_group}\"\n+  }\n+\n+  health_checks = [\"${google_compute_health_check.ingress.self_link}\"]\n+}\n+\n+# Ingress HTTP Health Check\n+resource \"google_compute_health_check\" \"ingress\" {\n+  name        = \"${var.cluster_name}-ingress-health\"\n+  description = \"Health check for Ingress controller\"\n+\n+  timeout_sec        = 5\n+  check_interval_sec = 5\n+\n+  healthy_threshold   = 2\n+  unhealthy_threshold = 4\n+\n+  http_health_check {\n+    port = 10254\n+    request_path = \"/healthz\"\n+  }\n+}"
      },
      {
        "filename": "network.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -161,3 +161,17 @@ resource \"google_compute_firewall\" \"internal-kubelet-readonly\" {\n   source_tags = [\"${var.cluster_name}-controller\", \"${var.cluster_name}-worker\"]\n   target_tags = [\"${var.cluster_name}-controller\", \"${var.cluster_name}-worker\"]\n }\n+\n+resource \"google_compute_firewall\" \"google-health-checks\" {\n+  name = \"${var.cluster_name}-google-health-checks\"\n+  network = \"${google_compute_network.network.name}\"\n+\n+  allow {\n+    protocol = \"tcp\"\n+    ports    = [10254]\n+  }\n+\n+  # https://cloud.google.com/compute/docs/load-balancing/tcp-ssl/tcp-proxy#health-checking\n+  source_ranges = [\"130.211.0.0/22\", \"35.191.0.0/16\"]\n+  target_tags = [\"${var.cluster_name}-worker\"]\n+}"
      },
      {
        "filename": "outputs.tf",
        "additions": 22,
        "deletions": 4,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -3,12 +3,17 @@ output \"controllers_ipv4_public\" {\n   value = [\"${google_compute_instance.controllers.*.network_interface.0.access_config.0.assigned_nat_ip}\"]\n }\n \n-output \"ingress_static_ip\" {\n-  value = \"${module.workers.ingress_static_ip}\"\n+# Outputs for Kubernetes Ingress\n+\n+output \"ingress_static_ipv4\" {\n+  description = \"Global IPv4 address for proxy load balancing to the nearest Ingress controller\"\n+  value = \"${google_compute_global_address.ingress-ipv4.address}\"\n }\n \n-output \"network_self_link\" {\n-  value = \"${google_compute_network.network.self_link}\"\n+# Deprecated, use ingress_static_ipv4\n+output \"ingress_static_ip\" {\n+  description = \"Global IPv4 address for proxy load balancing to the nearest Ingress controller\"\n+  value = \"${google_compute_global_address.ingress-ipv4.address}\"\n }\n \n # Outputs for worker pools\n@@ -20,3 +25,16 @@ output \"network_name\" {\n output \"kubeconfig\" {\n   value = \"${module.bootkube.kubeconfig}\"\n }\n+\n+# Outputs for custom firewalling\n+\n+output \"network_self_link\" {\n+  value = \"${google_compute_network.network.self_link}\"\n+}\n+\n+# Outputs for custom load balancing\n+\n+output \"worker_instance_group\" {\n+  description = \"Full URL of the worker managed instance group\"\n+  value = \"${module.workers.instance_group}\"\n+}"
      },
      {
        "filename": "workers/ingress.tf",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "status": "removed",
        "patch": "@@ -1,45 +0,0 @@\n-# Static IPv4 address for the Network Load Balancer\n-resource \"google_compute_address\" \"ingress-ip\" {\n-  name = \"${var.name}-ingress-ip\"\n-}\n-\n-# Network Load Balancer (i.e. forwarding rules)\n-resource \"google_compute_forwarding_rule\" \"worker-http-lb\" {\n-  name       = \"${var.name}-worker-http-rule\"\n-  ip_address = \"${google_compute_address.ingress-ip.address}\"\n-  port_range = \"80\"\n-  target     = \"${google_compute_target_pool.workers.self_link}\"\n-}\n-\n-resource \"google_compute_forwarding_rule\" \"worker-https-lb\" {\n-  name       = \"${var.name}-worker-https-rule\"\n-  ip_address = \"${google_compute_address.ingress-ip.address}\"\n-  port_range = \"443\"\n-  target     = \"${google_compute_target_pool.workers.self_link}\"\n-}\n-\n-# Network Load Balancer target pool of instances.\n-resource \"google_compute_target_pool\" \"workers\" {\n-  name = \"${var.name}-worker-pool\"\n-\n-  health_checks = [\n-    \"${google_compute_http_health_check.ingress.name}\",\n-  ]\n-\n-  session_affinity = \"NONE\"\n-}\n-\n-# Ingress HTTP Health Check\n-resource \"google_compute_http_health_check\" \"ingress\" {\n-  name        = \"${var.name}-ingress-health\"\n-  description = \"Health check Ingress controller health host port\"\n-\n-  timeout_sec        = 5\n-  check_interval_sec = 5\n-\n-  healthy_threshold   = 2\n-  unhealthy_threshold = 4\n-\n-  port         = 10254\n-  request_path = \"/healthz\"\n-}"
      },
      {
        "filename": "workers/outputs.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n-output \"ingress_static_ip\" {\n-  value = \"${google_compute_address.ingress-ip.address}\"\n+output \"instance_group\" {\n+  description = \"Full URL of the worker managed instance group\"\n+  value = \"${google_compute_region_instance_group_manager.workers.instance_group}\"\n }"
      },
      {
        "filename": "workers/workers.tf",
        "additions": 27,
        "deletions": 22,
        "changes": 49,
        "status": "modified",
        "patch": "@@ -1,5 +1,4 @@\n-# Regional managed instance group maintains a homogeneous set of workers that\n-# span the zones in the region.\n+# Regional managed instance group of workers\n resource \"google_compute_region_instance_group_manager\" \"workers\" {\n   name        = \"${var.name}-worker-group\"\n   description = \"Compute instance group of ${var.name} workers\"\n@@ -11,30 +10,18 @@ resource \"google_compute_region_instance_group_manager\" \"workers\" {\n \n   target_size = \"${var.count}\"\n \n-  # target pool to which instances in the group should be added\n-  target_pools = [\n-    \"${google_compute_target_pool.workers.self_link}\",\n-  ]\n-}\n-\n-# Worker Container Linux Config\n-data \"template_file\" \"worker_config\" {\n-  template = \"${file(\"${path.module}/cl/worker.yaml.tmpl\")}\"\n-\n-  vars = {\n-    kubeconfig            = \"${indent(10, var.kubeconfig)}\"\n-    ssh_authorized_key    = \"${var.ssh_authorized_key}\"\n-    k8s_dns_service_ip    = \"${cidrhost(var.service_cidr, 10)}\"\n-    cluster_domain_suffix = \"${var.cluster_domain_suffix}\"\n+  named_port {\n+    name = \"http\"\n+    port = \"80\"\n   }\n-}\n \n-data \"ct_config\" \"worker_ign\" {\n-  content      = \"${data.template_file.worker_config.rendered}\"\n-  pretty_print = false\n-  snippets     = [\"${var.clc_snippets}\"]\n+  named_port {\n+    name = \"https\"\n+    port = \"443\"\n+  }\n }\n \n+# Worker instance template\n resource \"google_compute_instance_template\" \"worker\" {\n   name_prefix  = \"${var.name}-worker-\"\n   description  = \"Worker Instance template\"\n@@ -76,3 +63,21 @@ resource \"google_compute_instance_template\" \"worker\" {\n     create_before_destroy = true\n   }\n }\n+\n+# Worker Container Linux Config\n+data \"template_file\" \"worker_config\" {\n+  template = \"${file(\"${path.module}/cl/worker.yaml.tmpl\")}\"\n+\n+  vars = {\n+    kubeconfig            = \"${indent(10, var.kubeconfig)}\"\n+    ssh_authorized_key    = \"${var.ssh_authorized_key}\"\n+    k8s_dns_service_ip    = \"${cidrhost(var.service_cidr, 10)}\"\n+    cluster_domain_suffix = \"${var.cluster_domain_suffix}\"\n+  }\n+}\n+\n+data \"ct_config\" \"worker_ign\" {\n+  content      = \"${data.template_file.worker_config.rendered}\"\n+  pretty_print = false\n+  snippets     = [\"${var.clc_snippets}\"]\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["gcp", "use_global_loadbalancing"],
    "notes": "Move Ingress from regional network load balancers to global HTTP/TCP Proxy load balancing; Google bills the first 5 global and regional forwarding rules separately."
  },
  {
    "url": "https://github.com/austin1237/clip-stitcher/commit/4eed76f9bfd4f93181660178ea689d98cd6d66d5",
    "files": [
      {
        "filename": "lamdas/fargaterunner/fargaterunner.zip",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "modified",
        "patch": null
      },
      {
        "filename": "lamdas/fargaterunner/main.go",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -39,10 +39,12 @@ func main() {\n \n func HandleRequest(ctx context.Context) (string, error) {\n \tlaunchType := \"FARGATE\"\n+\tassignPublicIP := \"ENABLED\"\n \tsess := session.Must(session.NewSession())\n \tecsClient := ecs.New(sess)\n \tvpcConfig := ecs.AwsVpcConfiguration{\n-\t\tSubnets: []*string{&subnetId},\n+\t\tSubnets:        []*string{&subnetId},\n+\t\tAssignPublicIp: &assignPublicIP,\n \t}\n \tnetworkConfig := ecs.NetworkConfiguration{\n \t\tAwsvpcConfiguration: &vpcConfig,"
      },
      {
        "filename": "terraform/dev/fargate-worker/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -32,6 +32,7 @@ resource \"aws_ecs_service\" \"service\" {\n   desired_count = \"${var.desired_count}\"\n   network_configuration = [\n       {\n+          assign_public_ip = true,\n           subnets = [\"${var.subnet_id}\"]\n       },\n    ]"
      },
      {
        "filename": "terraform/dev/main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -15,6 +15,7 @@ terraform {\n }\n \n provider \"aws\" {\n+  version = \"1.9\"\n   region = \"${var.region}\"\n }\n \n@@ -35,7 +36,7 @@ module \"clipstitcher\" {\n   source = \"./fargate-worker\"\n \n   name = \"clipstitcher-${var.env}\"\n-  subnet_id = \"${module.vpc.private_subnet_id}\"\n+  subnet_id = \"${module.vpc.subnet_id}\"\n \n   image = \"${var.docker_image}\"\n   docker_version = \"${var.docker_version}\"\n@@ -56,5 +57,5 @@ module \"fargate-runner\" {\n   cluster_arn = \"${module.clipstitcher.cluster_arn}\"\n   task_arn = \"${module.clipstitcher.task_arn}\"\n   name = \"fargate-runner-${var.env}\"\n-  subnet_id = \"${module.vpc.private_subnet_id}\"\n+  subnet_id = \"${module.vpc.subnet_id}\"\n }\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/dev/vpc/main.tf",
        "additions": 30,
        "deletions": 30,
        "changes": 60,
        "status": "modified",
        "patch": "@@ -13,21 +13,21 @@ resource \"aws_subnet\" \"public_subnet_a\" {\n   vpc_id                  = \"${aws_vpc.vpc.id}\"\n   cidr_block              = \"10.0.0.0/24\"\n   availability_zone       = \"${element(data.aws_availability_zones.available.names, count.index)}\"\n-  map_public_ip_on_launch = false\n+  map_public_ip_on_launch = true\n \n   tags {\n     Name = \"clipstitcher-public-subnet\"\n   }\n }\n \n-resource \"aws_subnet\" \"private_subnet_a\" {\n-  vpc_id                  = \"${aws_vpc.vpc.id}\"\n-  cidr_block              = \"10.0.1.0/24\"\n-  availability_zone = \"${element(data.aws_availability_zones.available.names, count.index)}\"\n-  tags {\n-    Name = \"clipstitcher-private-subnet\"\n-  }\n-}\n+# resource \"aws_subnet\" \"private_subnet_a\" {\n+#   vpc_id                  = \"${aws_vpc.vpc.id}\"\n+#   cidr_block              = \"10.0.1.0/24\"\n+#   availability_zone = \"${element(data.aws_availability_zones.available.names, count.index)}\"\n+#   tags {\n+#     Name = \"clipstitcher-private-subnet\"\n+#   }\n+# }\n \n resource \"aws_internet_gateway\" \"internet_gateway\" {\n   vpc_id = \"${aws_vpc.vpc.id}\"\n@@ -52,29 +52,29 @@ resource \"aws_route_table_association\" \"public_subnet_a\" {\n }\n \n \n-resource \"aws_eip\" \"nat\" {\n-  vpc = true\n-}\n+# resource \"aws_eip\" \"nat\" {\n+#   vpc = true\n+# }\n \n-resource \"aws_nat_gateway\" \"nat\" {\n-  allocation_id = \"${aws_eip.nat.id}\"\n-  subnet_id     = \"${aws_subnet.public_subnet_a.id}\"\n-}\n+# resource \"aws_nat_gateway\" \"nat\" {\n+#   allocation_id = \"${aws_eip.nat.id}\"\n+#   subnet_id     = \"${aws_subnet.public_subnet_a.id}\"\n+# }\n \n-resource \"aws_route_table\" \"private_routetable\" {\n-  vpc_id = \"${aws_vpc.vpc.id}\"\n+# resource \"aws_route_table\" \"private_routetable\" {\n+#   vpc_id = \"${aws_vpc.vpc.id}\"\n \n-  route {\n-    cidr_block     = \"0.0.0.0/0\"\n-    nat_gateway_id = \"${aws_nat_gateway.nat.id}\"\n-  }\n+#   route {\n+#     cidr_block     = \"0.0.0.0/0\"\n+#     nat_gateway_id = \"${aws_nat_gateway.nat.id}\"\n+#   }\n \n-  tags {\n-    label = \"clipstitcher-private_routetable\"\n-  }\n-}\n+#   tags {\n+#     label = \"clipstitcher-private_routetable\"\n+#   }\n+# }\n \n-resource \"aws_route_table_association\" \"private_subnet_a\" {\n-  subnet_id      = \"${aws_subnet.private_subnet_a.id}\"\n-  route_table_id = \"${aws_route_table.private_routetable.id}\"\n-}\n\\ No newline at end of file\n+# resource \"aws_route_table_association\" \"private_subnet_a\" {\n+#   subnet_id      = \"${aws_subnet.private_subnet_a.id}\"\n+#   route_table_id = \"${aws_route_table.private_routetable.id}\"\n+# }\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/dev/vpc/outputs.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,3 +1,3 @@\n-output \"private_subnet_id\" {\n-  value = \"${aws_subnet.private_subnet_a.id}\"\n+output \"subnet_id\" {\n+  value = \"${aws_subnet.public_subnet_a.id}\"\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_private_subnet", "remove_nat"],
    "notes": "Remove private subnet and NAT to reduce costs"
  },
  {
    "url": "https://github.com/giantswarm/giantnetes-terraform/commit/53ed24b573947c73ea9f0f4f8b477c44b7de2d54",
    "files": [
      {
        "filename": "modules/azure/bastion-as/bastion.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -30,7 +30,7 @@ resource \"azurerm_virtual_machine\" \"bastion\" {\n \n   storage_os_disk {\n     name              = \"bastion-${count.index}-os\"\n-    managed_disk_type = \"${var.storage_type}\"\n+    managed_disk_type = \"${var.os_disk_storage_type}\"\n     create_option     = \"FromImage\"\n     caching           = \"ReadWrite\"\n     os_type           = \"linux\""
      },
      {
        "filename": "modules/azure/bastion-as/variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -46,9 +46,9 @@ variable \"resource_group_name\" {\n   type = \"string\"\n }\n \n-variable \"storage_type\" {\n+variable \"os_disk_storage_type\" {\n   type        = \"string\"\n-  description = \"Storage account type\"\n+  description = \"Storage account type for OS disk.\"\n }\n \n variable \"vm_size\" {"
      },
      {
        "filename": "modules/azure/master-as/master-as.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -56,7 +56,7 @@ resource \"azurerm_virtual_machine\" \"master\" {\n \n   storage_os_disk {\n     name              = \"master-${count.index}-os\"\n-    managed_disk_type = \"${var.storage_type}\"\n+    managed_disk_type = \"${var.os_disk_storage_type}\"\n     create_option     = \"FromImage\"\n     caching           = \"ReadWrite\"\n     os_type           = \"linux\""
      },
      {
        "filename": "modules/azure/master-as/variables.tf",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -13,7 +13,7 @@ variable \"core_ssh_key\" {\n \n variable \"user_data\" {\n   type        = \"string\"\n-  description = \"Generated user data\"\n+  description = \"Generated user data.\"\n }\n \n variable \"cluster_name\" {\n@@ -23,7 +23,7 @@ variable \"cluster_name\" {\n \n variable \"location\" {\n   type        = \"string\"\n-  description = \"Location is the Azure Location (East US, West US, etc)\"\n+  description = \"Location is the Azure Location (East US, West US, etc).\"\n }\n \n variable \"master_count\" {\n@@ -46,14 +46,19 @@ variable \"resource_group_name\" {\n   type = \"string\"\n }\n \n+variable \"os_disk_storage_type\" {\n+  type        = \"string\"\n+  description = \"Storage account type for OS disk.\"\n+}\n+\n variable \"storage_type\" {\n   type        = \"string\"\n-  description = \"Storage account type\"\n+  description = \"Storage account type.\"\n }\n \n variable \"vm_size\" {\n   type        = \"string\"\n-  description = \"VM Size name\"\n+  description = \"VM Size name.\"\n }\n \n variable \"docker_disk_size\" {"
      },
      {
        "filename": "modules/azure/vault/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -41,6 +41,11 @@ variable \"resource_group_name\" {\n   type = \"string\"\n }\n \n+variable \"os_disk_storage_type\" {\n+  type        = \"string\"\n+  description = \"Storage account type for OS disk.\"\n+}\n+\n variable \"storage_type\" {\n   type        = \"string\"\n   description = \"Storage account type\""
      },
      {
        "filename": "modules/azure/vault/vault.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -33,7 +33,7 @@ resource \"azurerm_virtual_machine\" \"vault\" {\n \n   storage_os_disk {\n     name              = \"vault-os\"\n-    managed_disk_type = \"${var.storage_type}\"\n+    managed_disk_type = \"${var.os_disk_storage_type}\"\n     create_option     = \"FromImage\"\n     caching           = \"ReadWrite\"\n     os_type           = \"linux\""
      },
      {
        "filename": "modules/azure/worker-as/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -50,6 +50,11 @@ variable \"network_interface_ids\" {\n   description = \"List of NICs to use for Vault VMs\"\n }\n \n+variable \"os_disk_storage_type\" {\n+  type        = \"string\"\n+  description = \"Storage account type for OS disk.\"\n+}\n+\n variable \"storage_type\" {\n   type        = \"string\"\n   description = \"Storage account type\""
      },
      {
        "filename": "modules/azure/worker-as/worker-as.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -51,7 +51,7 @@ resource \"azurerm_virtual_machine\" \"worker\" {\n \n   storage_os_disk {\n     name              = \"worker-${count.index}-os\"\n-    managed_disk_type = \"${var.storage_type}\"\n+    managed_disk_type = \"${var.os_disk_storage_type}\"\n     create_option     = \"FromImage\"\n     caching           = \"ReadWrite\"\n     os_type           = \"linux\""
      },
      {
        "filename": "platforms/azure/giantnetes/main.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -82,7 +82,7 @@ module \"bastion\" {\n   network_interface_ids       = \"${module.vnet.bastion_network_interface_ids}\"\n   platform_fault_domain_count = \"${var.platform_fault_domain_count}\"\n   resource_group_name         = \"${module.resource_group.name}\"\n-  storage_type                = \"${var.bastion_storage_type}\"\n+  os_disk_storage_type        = \"${var.os_disk_storage_type}\"\n   user_data                   = \"${data.ct_config.bastion.rendered}\"\n   vm_size                     = \"${var.bastion_vm_size}\"\n }\n@@ -112,6 +112,7 @@ module \"vault\" {\n   core_ssh_key            = \"${var.core_ssh_key}\"\n   location                = \"${var.azure_location}\"\n   network_interface_ids   = \"${module.vnet.vault_network_interface_ids}\"\n+  os_disk_storage_type    = \"${var.os_disk_storage_type}\"\n   resource_group_name     = \"${module.resource_group.name}\"\n   storage_type            = \"${var.vault_storage_type}\"\n   user_data               = \"${data.ct_config.vault.rendered}\"\n@@ -171,6 +172,7 @@ module \"master\" {\n   # Only single master supported.\n   master_count                = \"1\"\n   resource_group_name         = \"${module.resource_group.name}\"\n+  os_disk_storage_type        = \"${var.os_disk_storage_type}\"\n   platform_fault_domain_count = \"${var.platform_fault_domain_count}\"\n   storage_type                = \"${var.master_storage_type}\"\n \n@@ -230,6 +232,7 @@ module \"worker\" {\n \n   worker_count                = \"${var.worker_count}\"\n   resource_group_name         = \"${module.resource_group.name}\"\n+  os_disk_storage_type        = \"${var.os_disk_storage_type}\"\n   platform_fault_domain_count = \"${var.platform_fault_domain_count}\"\n   storage_type                = \"${var.worker_storage_type}\"\n "
      },
      {
        "filename": "platforms/azure/giantnetes/variables.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -49,7 +49,7 @@ variable \"nodes_vault_token\" {\n variable \"worker_count\" {\n   type        = \"string\"\n   description = \"Number of worker nodes to be created.\"\n-  default     = \"4\"\n+  default     = \"3\"\n }\n \n ### Compute and Storage ###\n@@ -59,7 +59,7 @@ variable \"bastion_vm_size\" {\n   default = \"Standard_A1\"\n }\n \n-variable \"bastion_storage_type\" {\n+variable \"os_disk_storage_type\" {\n   type    = \"string\"\n   default = \"Standard_LRS\"\n }\n@@ -76,7 +76,7 @@ variable \"vault_storage_type\" {\n \n variable \"master_vm_size\" {\n   type    = \"string\"\n-  default = \"Standard_DS2_v2\"\n+  default = \"Standard_D2s_v3\"\n }\n \n variable \"master_storage_type\" {\n@@ -86,12 +86,12 @@ variable \"master_storage_type\" {\n \n variable \"worker_vm_size\" {\n   type    = \"string\"\n-  default = \"Standard_DS3_v2\"\n+  default = \"Standard_D4s_v3\"\n }\n \n variable \"worker_storage_type\" {\n   type    = \"string\"\n-  default = \"Premium_LRS\"\n+  default = \"Standard_LRS\"\n }\n \n ### Container Linux ###"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kathputli/terraform-aws/commit/321b1aee88f7d15dafe46aede2b86ced70061025",
    "files": [
      {
        "filename": "bootstrap.tf",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "status": "modified",
        "patch": "@@ -104,4 +104,79 @@ resource \"aws_autoscaling_group\" \"bootstrap\" {\n       propagate_at_launch = \"true\"\n     },\n   ]\n+\n+  depends_on = [\n+    \"aws_efs_mount_target.bootstrap1\",\n+    \"aws_efs_mount_target.bootstrap2\"\n+  ]\n+}\n+\n+#\n+#\n+#\n+\n+# Create a role for the Spot Fleet service to assume.\n+resource \"aws_iam_role\" \"bootstrap_fleet\" {\n+  name_prefix        = \"Bootstrap\"\n+  assume_role_policy = <<EOF\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Effect\": \"Allow\",\n+      \"Principal\": {\n+        \"Service\": \"spotfleet.amazonaws.com\"\n+      },\n+      \"Action\": \"sts:AssumeRole\"\n+    }\n+  ]\n+}\n+EOF\n+}\n+\n+# As part of the role, allow the Spoot Fleet service to have access according\n+# to EC2's standard spot fleet policy.\n+resource \"aws_iam_role_policy_attachment\" \"bootstrap_fleet\" {\n+  role       = \"${aws_iam_role.bootstrap_fleet.name}\"\n+  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetRole\"\n+}\n+\n+# Create a Spot fleet to maintain one bootstrap server\n+resource \"aws_spot_fleet_request\" \"bootstrap\" {\n+  count = \"${var.bootstrap_spot == \"true\" ? 1 : 0}\"\n+\n+  iam_fleet_role = \"${aws_iam_role.bootstrap_fleet.arn}\"\n+\n+  target_capacity = 1\n+  spot_price      = \"${var.bootstrap_spot_price}\"\n+  valid_until     = \"${var.bootstrap_spot_expiration}\"\n+\n+# Once fixed, will later need to add m3.large,r3.large,r4.large,c3.large\n+# Also subnet ${aws_subnet.home_misc2.id}\n+  launch_specification {\n+    instance_type     = \"m3.medium\"\n+    ami               = \"${var.bootstrap_ami[var.home_region]}\"\n+    monitoring        = \"false\"\n+\n+    key_name                    = \"${aws_key_pair.admin_home.id}\"\n+#    associate_public_ip_address = \"true\"\n+    vpc_security_group_ids      = [ \"${aws_security_group.home_bastion.id}\" ]\n+    iam_instance_profile        = \"${aws_iam_instance_profile.bootstrap.name}\"\n+\n+    root_block_device {\n+      volume_type           = \"standard\"\n+      volume_size           = \"10\"\n+      delete_on_termination = \"true\"\n+    }\n+\n+    availability_zone = \"${aws_subnet.home_misc1.availability_zone}\"\n+    subnet_id         = \"${aws_subnet.home_misc1.id}\"\n+\n+    user_data = \"${data.template_file.bootstrap_user_data.rendered}\"\n+  }\n+\n+  depends_on = [\n+    \"aws_efs_mount_target.bootstrap1\",\n+    \"aws_efs_mount_target.bootstrap2\"\n+  ]\n }"
      },
      {
        "filename": "variables.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -40,3 +40,21 @@ variable \"ssh_key\" {\n   type        = \"string\"\n   description = \"The SSH public key to use for SSHing into EC2 instances.\"\n }\n+\n+variable \"bootstrap_spot\" {\n+  type        = \"string\"\n+  description = \"Defaults to false.  Set to true to use a spot fleet to maintain the bootstrap server, instead of an auto-scaling group.\"\n+  default     = \"false\"\n+}\n+\n+variable \"bootstrap_spot_price\" {\n+  type        = \"string\"\n+  description = \"If bootstrap_spot is true, this is the maximum spot price.  This should be set to something less than the hourly price of an on-demand t2.small instance.\"\n+  default     = \"0.02\"\n+}\n+\n+variable \"bootstrap_spot_expiration\" {\n+  type        = \"string\"\n+  description = \"A date/time, in YYYY-MM-DDTHH:MM:SSZ format, marking the end point of the spot request.  This needs to be moved forward regularly.\"\n+  default     = \"2018-01-04T00:00:00Z\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "use_spot_fleet"],
    "notes": "Add support for using AWS Spot Fleet instead of an EC2 instance"
  },
  {
    "url": "https://github.com/public-transport/infrastructure/commit/64bfc57cef180a90c4dfe91801e7e1a4c66c3151",
    "files": [
      {
        "filename": "cloud-resources/ovh.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -28,10 +28,10 @@ resource \"ovh_cloud_project_kube_nodepool\" \"orchid_workers\" {\n   kube_id        = ovh_cloud_project_kube.orchid_cluster.id\n   name           = \"workers\"\n   flavor_name    = \"d2-4\"\n-  desired_nodes  = 1\n-  min_nodes      = 1\n-  max_nodes      = 1\n-  monthly_billed = false\n+  desired_nodes  = 2\n+  min_nodes      = 2\n+  max_nodes      = 2\n+  monthly_billed = true # THIS IS A BIT DANGEROUS, BECAUSE PODS ARE BILLED IMMEDIATELY FOR A FULL MONTH, SO PLEASE DEACTIVATE THIS WHEN EXPERIMENTING\n   anti_affinity  = true\n   autoscale      = false\n }"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/IncredibleHolg/infra-aws-code/commit/70904707a36ff8e5167e695de3529d8318911ba4",
    "files": [
      {
        "filename": "infra-basic/efs.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ resource \"aws_efs_file_system\" \"minecraftstorage\" {\n     \"installtype\" = \"terraform\"\r\n   }\r\n   lifecycle_policy {\r\n-    transition_to_ia = \"AFTER_30_DAYS\"\r\n+    transition_to_ia = \"AFTER_7_DAYS\"\r\n   }\r\n   lifecycle_policy {\r\n     transition_to_primary_storage_class = \"AFTER_1_ACCESS\"\r"
      },
      {
        "filename": "infra-basic/variables.tf",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -34,6 +34,9 @@ variable s3_mc_resources {\n # when not calculating: \"t2.micro\"\n # \"t2.xlarge\" is bursting, not suitable vor longer calculations\n # Better a \"m\" instance, check which is compatible, try m5.xlarge\n+# variable ec2_type {\n+#  default = \"m5.xlarge\"\n+# }\n variable ec2_type {\n-  default = \"m5.xlarge\"\n-}\n\\ No newline at end of file\n+  default = \"t2.micro\"\n+}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/IoT-Data-Marketplace/mp-infrastructure/commit/5afcf39a85fc972eb9bb3486e5dc8aeeba77d3ee",
    "files": [
      {
        "filename": "2-config.tf",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -60,10 +60,9 @@ locals {\n   }\n \n   namespaces = {\n-    mp-system = {\n-    }\n-    mp-logging = {\n-    }\n+    mp-system            = {}\n+    mp-logging           = {}\n+    kubernetes-dashboard = {}\n   }\n \n }\n\\ No newline at end of file"
      },
      {
        "filename": "5-networking.tf",
        "additions": 26,
        "deletions": 31,
        "changes": 57,
        "status": "modified",
        "patch": "@@ -28,37 +28,32 @@ module \"vpc\" {\n   )\n }\n \n-resource \"aws_ec2_client_vpn_endpoint\" \"client_vpn_endpoint\" {\n-  client_cidr_block      = var.vpn_config[\"client_cidr_block\"]\n-  server_certificate_arn = var.vpn_config[\"server_certificate_arn\"]\n-  split_tunnel           = true\n-  authentication_options {\n-    type                       = \"certificate-authentication\"\n-    root_certificate_chain_arn = var.vpn_config[\"root_certificate_chain_arn\"]\n-  }\n-\n-  connection_log_options {\n-    enabled = false\n-  }\n-\n-  tags = merge(\n-    map(\n-      \"Name\", format(\"%s-vpn-%s\", local.vpc_config.name, local.aws_region),\n-      \"VPC\", local.vpc_config.name\n-    )\n-  )\n-}\n-\n-resource \"aws_ec2_client_vpn_network_association\" \"vpn_network_association\" {\n-  for_each = toset(module.vpc.private_subnets)\n-  lifecycle {\n-    //    bug in terraform, it can't preserve the order of the subnet associations so it always tries to recreate them\n-    ignore_changes = [subnet_id]\n-  }\n-  client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.client_vpn_endpoint.id\n-  subnet_id              = each.key\n-}\n-\n+//resource \"aws_ec2_client_vpn_endpoint\" \"client_vpn_endpoint\" {\n+//  client_cidr_block      = var.vpn_config[\"client_cidr_block\"]\n+//  server_certificate_arn = var.vpn_config[\"server_certificate_arn\"]\n+//  split_tunnel           = true\n+//  authentication_options {\n+//    type                       = \"certificate-authentication\"\n+//    root_certificate_chain_arn = var.vpn_config[\"root_certificate_chain_arn\"]\n+//  }\n+//\n+//  connection_log_options {\n+//    enabled = false\n+//  }\n+//\n+//  tags = merge(\n+//    map(\n+//      \"Name\", format(\"%s-vpn-%s\", local.vpc_config.name, local.aws_region),\n+//      \"VPC\", local.vpc_config.name\n+//    )\n+//  )\n+//}\n+//\n+//resource \"aws_ec2_client_vpn_network_association\" \"vpn_network_association\" {\n+//  client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.client_vpn_endpoint.id\n+//  subnet_id              = module.vpc.public_subnets[0]\n+//}\n+//\n resource \"aws_key_pair\" \"deployer\" {\n   key_name   = format(\"%s-ssh-key-pair\", local.vpc_config.name)\n   public_key = var.ssh_public_key"
      },
      {
        "filename": "8-cluster.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -2,7 +2,7 @@ module \"eks_cluster\" {\n   source                        = \"./modules/eks/eks-cluster\"\n   cluster_name                  = local.cluster_config.cluster_name\n   eks_kubernetes_version        = local.cluster_config.eks_kubernetes_version\n-  enable_endpoint_public_access = false\n+  enable_endpoint_public_access = true\n   subnet_ids                    = sort(concat(module.vpc.public_subnets, module.vpc.private_subnets))\n   cluster_security_group_ids = [\n     module.cluster_sg.security_group_id"
      },
      {
        "filename": "modules/eks/eks-cluster-init/3-namesapce-pvc.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n-resource \"kubernetes_namespace\" \"dr_namespace\" {\n+resource \"kubernetes_namespace\" \"namespaces\" {\n   for_each = var.namespace_config\n   metadata {\n     name = each.key"
      },
      {
        "filename": "modules/eks/eks-cluster-init/6-kubernetes-dashboard.tf",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,7 +1,9 @@\n resource \"helm_release\" \"kubernetes_dashboard\" {\n-  count = local.k8s_dashboard.install ? 1 : 0\n-  name  = format(\"%s-kubernetes-dashboard\", local.cluster.name)\n-  chart = \"${path.module}/helm-charts/kubernetes-dashboard\"\n+  depends_on = [kubernetes_namespace.namespaces]\n+  count      = local.k8s_dashboard.install ? 1 : 0\n+  name       = format(\"%s-kubernetes-dashboard\", local.cluster.name)\n+  chart      = \"${path.module}/helm-charts/kubernetes-dashboard\"\n+  namespace  = \"kubernetes-dashboard\"\n \n   set_string {\n     name  = \"service.nodePort\""
      },
      {
        "filename": "modules/eks/eks-cluster-init/helm-charts/kubernetes-dashboard/templates/namespace.yaml",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "status": "removed",
        "patch": "@@ -1,4 +0,0 @@\n-apiVersion: v1\n-kind: Namespace\n-metadata:\n-  name: kubernetes-dashboard\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_vpn"],
    "notes": "Stop using VPN 'since it is too expensive'"
  },
  {
    "url": "https://github.com/mdcurran/terraform-infrastructure/commit/d7f24bafaa9f80e9d3e834dc34b8fbe950a6c437",
    "files": [
      {
        "filename": "providers/gcp/mdcurran.xyz.tf",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "status": "removed",
        "patch": "@@ -1,22 +0,0 @@\n-resource \"google_storage_bucket\" \"mdcurran_xyz\" {\n-  name          = var.mdcurran_website_domain\n-  project       = var.gcp_main_project_id\n-  location      = var.gcp_london_region\n-  storage_class = \"REGIONAL\"\n-\n-  uniform_bucket_level_access = false\n-\n-  website {\n-    main_page_suffix = \"index.html\"\n-    not_found_page   = \"404.html\"\n-  }\n-}\n-\n-resource \"google_storage_default_object_acl\" \"public_rule\" {\n-  bucket      = google_storage_bucket.mdcurran_xyz.name\n-  role_entity = [\"READER:allUsers\"]\n-\n-  depends_on = [\n-    google_storage_bucket.mdcurran_xyz,\n-  ]\n-}"
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": ["gcp", "remove_gcp"],
    "notes": "The commit moves away from GCP entirely to save on cost"
  },
  {
    "url": "https://github.com/ministryofjustice/cloud-platform-infrastructure/commit/e5dd13d33c1e927f932971d067d8f70e9041b5f3",
    "files": [
      {
        "filename": "kops/live-1.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -399,7 +399,7 @@ metadata:\n   name: nodes\n spec:\n   image: kope.io/k8s-1.13-debian-stretch-amd64-hvm-ebs-2019-08-16\n-  machineType: r5.2xlarge\n+  machineType: r5.xlarge\n   maxSize: 21\n   minSize: 21\n   rootVolumeSize: 256"
      },
      {
        "filename": "terraform/cloud-platform/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -33,6 +33,6 @@ variable \"master_node_machine_type\" {\n \n variable \"worker_node_machine_type\" {\n   description = \"The AWS EC2 instance types to use for worker nodes\"\n-  default     = \"r5.2xlarge\"\n+  default     = \"r5.xlarge\"\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from r5.2xlarge to r5.xlarge"
  },
  {
    "url": "https://github.com/ministryofjustice/cloud-platform-infrastructure/commit/fdd3a7dcb787a6a24e34b93a6aa124c94e93cb0e",
    "files": [
      {
        "filename": "terraform/aws-accounts/cloud-platform-aws/vpc/eks/components/components.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -110,7 +110,7 @@ module \"logging\" {\n }\n \n module \"monitoring\" {\n-  source = \"github.com/ministryofjustice/cloud-platform-terraform-monitoring?ref=2.0.1\"\n+  source = \"github.com/ministryofjustice/cloud-platform-terraform-monitoring?ref=2.0.2\"\n \n   alertmanager_slack_receivers               = var.alertmanager_slack_receivers\n   iam_role_nodes                             = data.aws_iam_role.nodes.arn"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ministryofjustice/cloud-platform-terraform-elasticache-cluster/commit/ddcc1a8abc1d29e8e32ed3c2e92ed9755dd17014",
    "files": [
      {
        "filename": "example/elasticache.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -21,6 +21,7 @@ module \"example_team_ec_cluster\" {\n   cluster_name           = var.cluster_name\n   cluster_state_bucket   = var.cluster_state_bucket\n   team_name              = \"example-repo\"\n+  namespace              = var.namespace\n   business-unit          = \"example-bu\"\n   application            = \"exampleapp\"\n   is-production          = \"false\"\n@@ -35,7 +36,7 @@ module \"example_team_ec_cluster\" {\n resource \"kubernetes_secret\" \"example_team_ec_cluster\" {\n   metadata {\n     name      = \"example-team-ec-cluster-output\"\n-    namespace = \"my-namespace\"\n+    namespace = var.namespace\n   }\n \n   data = {"
      },
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -69,6 +69,7 @@ resource \"aws_elasticache_replication_group\" \"ec_redis\" {\n   apply_immediately             = true\n \n   tags = {\n+    namespace              = var.namespace\n     business-unit          = var.business-unit\n     application            = var.application\n     is-production          = var.is-production"
      },
      {
        "filename": "variables.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -19,6 +19,9 @@ variable \"is-production\" {\n   default = \"false\"\n }\n \n+variable \"namespace\" {\n+}\n+\n variable \"business-unit\" {\n   description = \"Area of the MOJ responsible for the service\"\n   default     = \"mojdigital\""
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/dotancohen81/Rancher/commit/90944271b4e8bd46e3d42ac64bc4964a33a8fdc3",
    "files": [
      {
        "filename": "aws/terraform.tfvars.example",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -25,4 +25,4 @@ docker_version_server = \"17.03\"\n # Docker version of host being added to a cluster (running `rancher/rancher-agent`)\n docker_version_agent = \"17.03\"\n # AWS Instance Type\n-type = \"t2.medium\"\n+type = \"t3.medium\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from t2.medium to t3.medium"
  },
  {
    "url": "https://github.com/cisagov/cyhy_amis/commit/4e67a501bb3f5187a3e9af523921ac62b8a88469",
    "files": [
      {
        "filename": "terraform/bod_docker_ec2.tf",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -22,18 +22,22 @@ data \"aws_ami\" \"bod_docker\" {\n }\n \n # The docker EC2 instance\n+locals {\n+  production_instance = \"${terraform.workspace == \"production\" || terraform.workspace == \"planet_piss\" ? true : false}\"\n+}\n+\n resource \"aws_instance\" \"bod_docker\" {\n   ami = \"${data.aws_ami.bod_docker.id}\"\n-  instance_type = \"${terraform.workspace == \"production\" || terraform.workspace == \"planet_piss\" ? \"r4.4xlarge\" : \"t2.micro\"}\"\n-  ebs_optimized = \"${terraform.workspace == \"production\" || terraform.workspace == \"planet_piss\" ? true : false}\"\n+  instance_type = \"${local.production_instance ? \"r4.xlarge\" : \"t2.micro\"}\"\n+  ebs_optimized = \"${local.production_instance}\"\n   availability_zone = \"${var.aws_region}${var.aws_availability_zone}\"\n \n   # This is the private subnet\n   subnet_id = \"${aws_subnet.bod_private_subnet.id}\"\n \n   root_block_device {\n     volume_type = \"gp2\"\n-    volume_size = \"${terraform.workspace == \"production\" || terraform.workspace == \"planet_piss\" ? 100 : 10}\"\n+    volume_size = \"${local.production_instance ? 100 : 10}\"\n     delete_on_termination = true\n   }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from r4.4xlarge to r4.xlarge"
  },
  {
    "url": "https://github.com/cisagov/cyhy_amis/commit/7b8d9247a679295e0e1791b13d6c437c473e44b8",
    "files": [
      {
        "filename": "terraform/bod_bastion_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -9,9 +9,8 @@ resource \"aws_instance\" \"bod_bastion\" {\n   associate_public_ip_address = true\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = 20\n-    delete_on_termination = true\n+    volume_size = 20\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      },
      {
        "filename": "terraform/bod_docker_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -129,9 +129,8 @@ resource \"aws_instance\" \"bod_docker\" {\n   subnet_id = aws_subnet.bod_docker_subnet.id\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = 200\n-    delete_on_termination = true\n+    volume_size = 200\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      },
      {
        "filename": "terraform/cyhy_bastion_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -9,9 +9,8 @@ resource \"aws_instance\" \"cyhy_bastion\" {\n   associate_public_ip_address = true\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = 20\n-    delete_on_termination = true\n+    volume_size = 20\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      },
      {
        "filename": "terraform/cyhy_dashboard_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -31,9 +31,8 @@ resource \"aws_instance\" \"cyhy_dashboard\" {\n   associate_public_ip_address = false\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = local.production_workspace ? 100 : 10\n-    delete_on_termination = true\n+    volume_size = local.production_workspace ? 100 : 10\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      },
      {
        "filename": "terraform/cyhy_mongo_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -118,9 +118,8 @@ resource \"aws_instance\" \"cyhy_mongo\" {\n   associate_public_ip_address = false\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = 100\n-    delete_on_termination = true\n+    volume_size = 100\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      },
      {
        "filename": "terraform/cyhy_nessus_ec2.tf",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -29,9 +29,8 @@ resource \"aws_instance\" \"cyhy_nessus\" {\n   subnet_id = aws_subnet.cyhy_vulnscanner_subnet.id\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = local.production_workspace ? 100 : 16\n-    delete_on_termination = true\n+    volume_size = local.production_workspace ? 100 : 16\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = [\n@@ -125,7 +124,7 @@ resource \"aws_ebs_volume\" \"nessus_cyhy_runner_data\" {\n   count             = length(aws_instance.cyhy_nessus)\n   availability_zone = \"${var.aws_region}${var.aws_availability_zone}\"\n \n-  type      = \"gp2\"\n+  type      = \"gp3\"\n   size      = local.production_workspace ? 2 : 1\n   encrypted = true\n "
      },
      {
        "filename": "terraform/cyhy_nmap_ec2.tf",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -34,9 +34,8 @@ resource \"aws_instance\" \"cyhy_nmap\" {\n   subnet_id = aws_subnet.cyhy_portscanner_subnet.id\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = local.production_workspace ? 20 : 8\n-    delete_on_termination = true\n+    volume_size = local.production_workspace ? 20 : 8\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = [\n@@ -128,7 +127,7 @@ resource \"aws_ebs_volume\" \"nmap_cyhy_runner_data\" {\n   availability_zone = \"${var.aws_region}${var.aws_availability_zone}\"\n \n   # availability_zone = \"${element(data.aws_availability_zones.all.names, count.index)}\"\n-  type      = \"gp2\"\n+  type      = \"gp3\"\n   size      = local.production_workspace ? 2 : 1\n   encrypted = true\n "
      },
      {
        "filename": "terraform/cyhy_reporter_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -81,9 +81,8 @@ resource \"aws_instance\" \"cyhy_reporter\" {\n   associate_public_ip_address = false\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = 50\n-    delete_on_termination = true\n+    volume_size = 50\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      },
      {
        "filename": "terraform/mgmt_bastion_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -11,9 +11,8 @@ resource \"aws_instance\" \"mgmt_bastion\" {\n   associate_public_ip_address = true\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = 20\n-    delete_on_termination = true\n+    volume_size = 20\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      },
      {
        "filename": "terraform/mgmt_nessus_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -8,9 +8,8 @@ resource \"aws_instance\" \"mgmt_nessus\" {\n   subnet_id = aws_subnet.mgmt_private_subnet[0].id\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = local.production_workspace ? 100 : 16\n-    delete_on_termination = true\n+    volume_size = local.production_workspace ? 100 : 16\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      },
      {
        "filename": "terraform_nessus_only/nessus_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -29,9 +29,8 @@ resource \"aws_instance\" \"nessus\" {\n   subnet_id = aws_subnet.nessus_scanner_subnet.id\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = local.production_workspace ? 100 : 16\n-    delete_on_termination = true\n+    volume_size = local.production_workspace ? 100 : 16\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_volume", "new_gen"],
    "notes": "Move from gp2 to gp3"
  },
  {
    "url": "https://github.com/olliefr/aws-terraform-cloud1/commit/bf753832a519b0649f8d58d93aa643afe3f94fc7",
    "files": [
      {
        "filename": "example.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -45,6 +45,7 @@ resource \"random_pet\" \"table_name\" {}\n resource \"aws_dynamodb_table\" \"tfc_example_table\" {\n   name = \"${var.db_table_name}-${random_pet.table_name.id}\"\n \n+  billing_mode = \"PAY_PER_REQUEST\"\n   read_capacity  = var.db_read_capacity\n   write_capacity = var.db_write_capacity\n   hash_key       = \"UUID\""
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": ["aws", "dynamo_on_demand"],
    "notes": "Use PAY_PER_REQUEST billing mode for DynamoDB"
  },
  {
    "url": "https://github.com/InvictrixRom/website-infrastructure/commit/09e400452c1bde25fe393dd56c2fd608b84a18ac",
    "files": [
      {
        "filename": "main.tf",
        "additions": 86,
        "deletions": 78,
        "changes": 164,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n provider \"aws\" {\n-  region = \"${var.region}\"\n+  region     = \"${var.region}\"\n   access_key = \"${var.access_key}\"\n   secret_key = \"${var.secret_key}\"\n }\n@@ -10,48 +10,12 @@ module \"cluster\" {\n   aws_name = \"wordpress\"\n }\n \n-module \"alb\" {\n-  source               = \"modules/alb\"\n-  name                 = \"wordpress\"\n-  aws_name             = \"wordpress\"\n-  certificate_arn      = \"${var.certificate_arn}\"\n-  public_second_subnet = \"${module.cluster.public_second_subnet_id}\"\n-  public_subnet        = \"${module.cluster.public_subnet_id}\"\n-  vpc                  = \"${module.cluster.vpc_id}\"\n-  security_group       = \"${aws_security_group.security_group.id}\"\n-  front_end_container  = \"${aws_ecs_task_definition.wordpress_task_definition.id}\"\n-}\n-\n module \"logs\" {\n   source = \"modules/logs\"\n }\n \n-resource \"aws_db_subnet_group\" \"db_subnet_group\" {\n-  name       = \"wordpress\"\n-  subnet_ids = [\"${module.cluster.public_second_subnet_id}\",\"${module.cluster.public_subnet_id}\"]\n-\n-  tags {\n-    Name = \"Wordpress DB Subnet Group\"\n-  }\n-}\n-\n-resource \"aws_db_instance\" \"database\" {\n-  allocated_storage      = 10\n-  identifier             = \"wordpress\"\n-  db_subnet_group_name   = \"${aws_db_subnet_group.db_subnet_group.id}\"\n-  multi_az               = \"false\"\n-  engine                 = \"mysql\"\n-  engine_version         = \"5.7\"\n-  instance_class         = \"db.t2.micro\"\n-  name                   = \"wordpress\"\n-  username               = \"wordpress\"\n-  password               = \"jkMCjKMgKe7X4236jYqFfyarJKkzWCgi3v2ofWKrU\"\n-  parameter_group_name   = \"default.mysql5.7\"\n-  vpc_security_group_ids = [\"${aws_security_group.security_group.id}\"]\n-}\n-\n-resource \"aws_iam_role\" \"ecs_instance_role\" {\n-  name = \"ecs_instance_role\"\n+resource \"aws_iam_role\" \"my_ecs_instance_role\" {\n+  name = \"my_ecs_instance_role\"\n \n   assume_role_policy = <<EOF\n {\n@@ -70,46 +34,31 @@ EOF\n }\n \n resource \"aws_iam_instance_profile\" \"ecs\" {\n-  name = \"ecs_instance_profile\"\n+  name = \"my_ecs_instance_profile\"\n   path = \"/\"\n-  role = \"${aws_iam_role.ecs_instance_role.name}\"\n+  role = \"${aws_iam_role.my_ecs_instance_role.name}\"\n }\n \n resource \"aws_iam_role_policy_attachment\" \"ecs_ec2_role\" {\n-  role       = \"${aws_iam_role.ecs_instance_role.id}\"\n+  role       = \"${aws_iam_role.my_ecs_instance_role.id}\"\n   policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role\"\n }\n \n-\n-resource \"aws_launch_configuration\" \"wordpress_launch_configuration\" {\n-  name          = \"wordpress\"\n-  image_id      = \"${module.cluster.ecs_ami}\"\n-  instance_type = \"t2.micro\"\n+resource \"aws_instance\" \"instance\" {\n+  ami                    = \"${module.cluster.ecs_ami}\"\n+  availability_zone      = \"${var.region}a\"\n+  instance_type          = \"t2.micro\"\n+  iam_instance_profile   = \"${aws_iam_instance_profile.ecs.name}\"\n+  vpc_security_group_ids = [\"${aws_security_group.security_group.id}\"]\n+  subnet_id              = \"${module.cluster.public_subnet_id}\"\n \n   user_data = <<EOF\n #!/bin/bash -xe\n echo ECS_CLUSTER=${module.cluster.cluster_name} >> /etc/ecs/ecs.config\n EOF\n \n-  iam_instance_profile = \"${aws_iam_instance_profile.ecs.arn}\"\n-  ebs_optimized        = false\n-\n-  lifecycle {\n-    create_before_destroy = true\n-  }\n-}\n-\n-resource \"aws_autoscaling_group\" \"wordpress_autoscaling_group\" {\n-  name                 = \"wordpress\"\n-  launch_configuration = \"${aws_launch_configuration.wordpress_launch_configuration.name}\"\n-  min_size             = 1\n-  max_size             = 1\n-  vpc_zone_identifier  = [\"${module.cluster.private_subnet_id}\"]\n-\n   tags {\n-    key                 = \"Name\"\n-    value               = \"wordpress\"\n-    propagate_at_launch = true\n+    Name = \"Invictrix Instance\"\n   }\n \n   lifecycle {\n@@ -158,12 +107,22 @@ resource \"aws_security_group\" \"security_group\" {\n module \"wordpress_container_definition\" {\n   source          = \"./modules/container_definitions/wordpress\"\n   container_image = \"wordpress\"\n-  db_host     = \"${aws_db_instance.database.endpoint}\"\n-  db_name     = \"wordpress\"\n-  db_user     = \"wordpress\"\n-  db_password = \"jkMCjKMgKe7X4236jYqFfyarJKkzWCgi3v2ofWKrU\"\n-  aws_region  = \"${var.region}\"\n-  log_group   = \"${module.logs.wordpress_logs_name}\"\n+  db_host         = \"mysql.wordpress.local\"\n+  db_name         = \"wordpress\"\n+  db_user         = \"wordpress\"\n+  db_password     = \"${data.terraform_remote_state.state.mysql_password}\"\n+  aws_region      = \"${var.region}\"\n+  log_group       = \"${module.logs.wordpress_logs_name}\"\n+}\n+\n+module \"mysql_container_definition\" {\n+  source          = \"./modules/container_definitions/mysql\"\n+  container_image = \"mysql:5.7\"\n+  mysql_database  = \"wordpress\"\n+  mysql_user      = \"wordpress\"\n+  mysql_password  = \"${data.terraform_remote_state.state.mysql_password}\"\n+  aws_region      = \"${var.region}\"\n+  log_group       = \"${module.logs.mysql_logs_name}\"\n }\n \n resource \"aws_iam_role\" \"ecsTaskExecutionRole\" {\n@@ -195,24 +154,44 @@ resource \"aws_ecs_task_definition\" \"wordpress_task_definition\" {\n   execution_role_arn = \"${aws_iam_role.ecsTaskExecutionRole.arn}\"\n }\n \n+resource \"aws_ecs_task_definition\" \"mysql_task_definition\" {\n+  family                = \"mysql\"\n+  container_definitions = \"${module.mysql_container_definition.json}\"\n+  network_mode          = \"awsvpc\"\n+\n+  task_role_arn      = \"${aws_iam_role.app_role.arn}\"\n+  execution_role_arn = \"${aws_iam_role.ecsTaskExecutionRole.arn}\"\n+}\n+\n resource \"aws_ecs_service\" \"wordpress\" {\n   name            = \"wordpress\"\n   cluster         = \"${module.cluster.cluster_id}\"\n   task_definition = \"${aws_ecs_task_definition.wordpress_task_definition.arn}\"\n   desired_count   = 1\n+}\n+\n+resource \"aws_ecs_service\" \"mysql\" {\n+  name            = \"mysql\"\n+  cluster         = \"${module.cluster.cluster_id}\"\n+  task_definition = \"${aws_ecs_task_definition.mysql_task_definition.arn}\"\n+  desired_count   = 1\n \n-  load_balancer {\n-    target_group_arn = \"${module.alb.lb_target_group}\"\n-    container_name   = \"wordpress\"\n-    container_port   = 80\n+  service_registries {\n+    registry_arn   = \"${aws_service_discovery_service.wordpress_service_discovery_service.arn}\"\n+    container_name = \"mysql\"\n   }\n-}\n \n+  network_configuration {\n+    security_groups = [\"${aws_security_group.security_group.id}\"]\n+    subnets         = [\"${module.cluster.public_subnet_id}\"]\n+  }\n+}\n \n resource \"aws_iam_role\" \"app_role\" {\n   name               = \"wordpress-app-role\"\n   assume_role_policy = \"${data.aws_iam_policy_document.app_role_assume_role_policy.json}\"\n }\n+\n resource \"aws_iam_role_policy\" \"app_policy\" {\n   name   = \"wordpress-app-policy\"\n   role   = \"${aws_iam_role.app_role.id}\"\n@@ -231,7 +210,6 @@ data \"aws_iam_policy_document\" \"app_policy\" {\n   }\n }\n \n-\n data \"aws_iam_policy_document\" \"app_role_assume_role_policy\" {\n   statement {\n     actions = [\"sts:AssumeRole\"]\n@@ -241,4 +219,34 @@ data \"aws_iam_policy_document\" \"app_role_assume_role_policy\" {\n       identifiers = [\"ecs-tasks.amazonaws.com\"]\n     }\n   }\n-}\n\\ No newline at end of file\n+}\n+\n+resource \"aws_eip_association\" \"eip_assoc\" {\n+  instance_id   = \"${aws_instance.instance.id}\"\n+  allocation_id = \"${module.cluster.eip_id}\"\n+}\n+\n+resource \"aws_service_discovery_private_dns_namespace\" \"wordpress_dns\" {\n+  name        = \"wordpress.local\"\n+  description = \"wordpress dns\"\n+  vpc         = \"${module.cluster.vpc_id}\"\n+}\n+\n+resource \"aws_service_discovery_service\" \"wordpress_service_discovery_service\" {\n+  name = \"mysql\"\n+\n+  dns_config {\n+    namespace_id = \"${aws_service_discovery_private_dns_namespace.wordpress_dns.id}\"\n+\n+    dns_records {\n+      ttl  = 10\n+      type = \"A\"\n+    }\n+\n+    routing_policy = \"MULTIVALUE\"\n+  }\n+\n+  health_check_custom_config {\n+    failure_threshold = 1\n+  }\n+}"
      },
      {
        "filename": "modules/alb/main.tf",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "status": "removed",
        "patch": "@@ -1,48 +0,0 @@\n-resource \"aws_lb\" \"load_balancer\" {\n-  name               = \"${var.aws_name}\"\n-  internal           = false\n-  load_balancer_type = \"application\"\n-  security_groups    = [\"${var.security_group}\"]\n-  subnets            = [\"${var.public_subnet}\", \"${var.public_second_subnet}\"]\n-  enable_deletion_protection = true\n-\n-  tags {\n-    Name = \"${var.name}\"\n-  }\n-}\n-\n-resource \"aws_lb_listener\" \"bastion\" {\n-  load_balancer_arn = \"${aws_lb.load_balancer.arn}\"\n-  port              = \"443\"\n-  protocol          = \"HTTPS\"\n-  ssl_policy        = \"ELBSecurityPolicy-2016-08\"\n-  \n-  certificate_arn   = \"${var.certificate_arn}\"\n-\n-  default_action {\n-    type             = \"forward\"\n-    target_group_arn = \"${aws_lb_target_group.front_end.arn}\"\n-  }\n-}\n-\n-resource \"aws_lb_listener\" \"https_to_http\" {\n-  load_balancer_arn = \"${aws_lb.load_balancer.arn}\"\n-  port              = \"80\"\n-  protocol          = \"HTTP\"\n-\n-  default_action {\n-    type = \"redirect\"\n-    redirect {\n-      port = \"443\"\n-      protocol = \"HTTPS\"\n-      status_code = \"HTTP_301\"\n-    }\n-  }\n-}\n-\n-resource \"aws_lb_target_group\" \"front_end\" {\n-  name     = \"${var.aws_name}\"\n-  port     = 80\n-  protocol = \"HTTP\"\n-  vpc_id   = \"${var.vpc}\"\n-}"
      },
      {
        "filename": "modules/alb/outputs.tf",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "status": "removed",
        "patch": "@@ -1,11 +0,0 @@\n-output \"alb\" {\n-  value = \"${aws_lb.load_balancer.arn}\"\n-}\n-\n-output \"alb_dns_name\" {\n-  value = \"${aws_lb.load_balancer.dns_name}\"\n-}\n-\n-output \"lb_target_group\" {\n-  value = \"${aws_lb_target_group.front_end.arn}\"\n-}"
      },
      {
        "filename": "modules/alb/variables.tf",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "status": "removed",
        "patch": "@@ -1,8 +0,0 @@\n-variable \"name\" {}\n-variable \"aws_name\" {}\n-variable \"public_subnet\" {}\n-variable \"public_second_subnet\" {}\n-variable \"security_group\" {}\n-variable \"vpc\" {}\n-variable \"front_end_container\" {}\n-variable \"certificate_arn\" {}"
      },
      {
        "filename": "modules/cloudposse-aws-ecs-container-definition/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -26,5 +26,5 @@ locals {\n   }]\n \n   environment = \"${var.environment}\"\n-  depends_on = \"${var.depends_on}\"\n+  depends_on  = \"${var.depends_on}\"\n }"
      },
      {
        "filename": "modules/cloudposse-aws-ecs-container-definition/variables.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -81,11 +81,12 @@ variable \"log_options\" {\n   description = \"The configuration options to send to the log_driver.\"\n \n   default = {\n-    \"awslogs-region\" = \"us-west-1\"\n-    \"awslogs-group\" = \"default\"\n+    \"awslogs-region\"        = \"us-west-1\"\n+    \"awslogs-group\"         = \"default\"\n     \"awslogs-stream-prefix\" = \"default\"\n   }\n }\n+\n variable \"depends_on\" {\n   default = []\n }"
      },
      {
        "filename": "modules/cluster/main.tf",
        "additions": 4,
        "deletions": 58,
        "changes": 62,
        "status": "modified",
        "patch": "@@ -29,9 +29,9 @@ data \"aws_ami\" \"aws_ami\" {\n data \"aws_availability_zones\" \"available\" {}\n \n resource \"aws_vpc\" \"vpc\" {\n-  cidr_block = \"10.0.0.0/16\"\n+  cidr_block           = \"10.0.0.0/16\"\n   enable_dns_hostnames = true\n-  enable_dns_support = true\n+  enable_dns_support   = true\n \n   tags {\n     Name = \"${var.name}\"\n@@ -49,28 +49,6 @@ resource \"aws_subnet\" \"public_subnet\" {\n   }\n }\n \n-resource \"aws_subnet\" \"public_second_subnet\" {\n-  vpc_id                  = \"${aws_vpc.vpc.id}\"\n-  cidr_block              = \"10.0.4.0/24\"\n-  map_public_ip_on_launch = true\n-  availability_zone       = \"${data.aws_availability_zones.available.names[1]}\"\n-\n-  tags {\n-    Name = \"${var.name} Public Second Subnet\"\n-  }\n-}\n-\n-resource \"aws_subnet\" \"private_subnet\" {\n-  vpc_id                  = \"${aws_vpc.vpc.id}\"\n-  cidr_block              = \"10.0.2.0/24\"\n-  map_public_ip_on_launch = false\n-  availability_zone       = \"${data.aws_availability_zones.available.names[1]}\"\n-\n-  tags {\n-    Name = \"${var.name} Private Subnet\"\n-  }\n-}\n-\n resource \"aws_internet_gateway\" \"internet_gateway\" {\n   vpc_id = \"${aws_vpc.vpc.id}\"\n \n@@ -79,20 +57,11 @@ resource \"aws_internet_gateway\" \"internet_gateway\" {\n   }\n }\n \n-resource \"aws_eip\" \"nat_eip\" {\n+resource \"aws_eip\" \"eip\" {\n   vpc = true\n \n   tags {\n-    Name = \"${var.name} NAT Gateway EIP\"\n-  }\n-}\n-\n-resource \"aws_nat_gateway\" \"nat_gateway\" {\n-  allocation_id = \"${aws_eip.nat_eip.id}\"\n-  subnet_id     = \"${aws_subnet.public_subnet.id}\"\n-\n-  tags {\n-    Name = \"${var.name} NAT\"\n+    Name = \"${var.name} EIP\"\n   }\n }\n \n@@ -114,34 +83,11 @@ resource \"aws_route_table\" \"public_route_table\" {\n   }\n }\n \n-resource \"aws_route_table\" \"private_route_table\" {\n-  vpc_id = \"${aws_vpc.vpc.id}\"\n-\n-  route {\n-    cidr_block     = \"0.0.0.0/0\"\n-    nat_gateway_id = \"${aws_nat_gateway.nat_gateway.id}\"\n-  }\n-\n-  tags {\n-    Name = \"${var.name} Private Route Table\"\n-  }\n-}\n-\n resource \"aws_route_table_association\" \"route_table_association\" {\n   subnet_id      = \"${aws_subnet.public_subnet.id}\"\n   route_table_id = \"${aws_route_table.public_route_table.id}\"\n }\n \n-resource \"aws_route_table_association\" \"second_route_table_association\" {\n-  subnet_id      = \"${aws_subnet.public_second_subnet.id}\"\n-  route_table_id = \"${aws_route_table.public_route_table.id}\"\n-}\n-\n-resource \"aws_route_table_association\" \"private_route_table_association\" {\n-  subnet_id      = \"${aws_subnet.private_subnet.id}\"\n-  route_table_id = \"${aws_route_table.private_route_table.id}\"\n-}\n-\n resource \"aws_ecs_cluster\" \"cluster\" {\n   name = \"${var.aws_name}\"\n }"
      },
      {
        "filename": "modules/cluster/outputs.tf",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -6,14 +6,6 @@ output \"public_subnet_id\" {\n   value = \"${aws_subnet.public_subnet.id}\"\n }\n \n-output \"public_second_subnet_id\" {\n-  value = \"${aws_subnet.public_second_subnet.id}\"\n-}\n-\n-output \"private_subnet_id\" {\n-  value = \"${aws_subnet.private_subnet.id}\"\n-}\n-\n output \"ecs_ami\" {\n   value = \"${data.aws_ami.ecs_ami.id}\"\n }\n@@ -30,4 +22,6 @@ output \"cluster_id\" {\n   value = \"${aws_ecs_cluster.cluster.id}\"\n }\n \n-\n+output \"eip_id\" {\n+  value = \"${aws_eip.eip.id}\"\n+}"
      },
      {
        "filename": "modules/container_definitions/mysql/main.tf",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "status": "added",
        "patch": "@@ -0,0 +1,42 @@\n+module \"task_definition_creator\" {\n+  source                       = \"../../cloudposse-aws-ecs-container-definition\"\n+  container_name               = \"mysql\"\n+  container_image              = \"${var.container_image}\"\n+  container_memory             = 450\n+  container_memory_reservation = 128\n+\n+  environment = [\n+    {\n+      name  = \"MYSQL_USER\"\n+      value = \"${var.mysql_user}\"\n+    },\n+    {\n+      name  = \"MYSQL_PASSWORD\"\n+      value = \"${var.mysql_password}\"\n+    },\n+    {\n+      name  = \"MYSQL_DATABASE\"\n+      value = \"${var.mysql_database}\"\n+    },\n+    {\n+      name  = \"MYSQL_RANDOM_ROOT_PASSWORD\"\n+      value = \"yes\"\n+    },\n+  ]\n+\n+  log_driver = \"awslogs\"\n+\n+  log_options = {\n+    awslogs-region        = \"${var.aws_region}\"\n+    awslogs-group         = \"${var.log_group}\"\n+    awslogs-stream-prefix = \"mysql\"\n+  }\n+\n+  port_mappings = [\n+    {\n+      containerPort = 3306\n+      hostPort      = 3306\n+      protocol      = \"tcp\"\n+    },\n+  ]\n+}"
      },
      {
        "filename": "modules/container_definitions/mysql/outputs.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+output \"name\" {\n+  value = \"mysql\"\n+}\n+\n+output \"json\" {\n+  value = \"${module.task_definition_creator.json}\"\n+}"
      },
      {
        "filename": "modules/container_definitions/mysql/variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+variable \"container_image\" {}\n+variable \"mysql_user\" {}\n+variable \"mysql_password\" {}\n+variable \"mysql_database\" {}\n+variable \"aws_region\" {}\n+variable \"log_group\" {}"
      },
      {
        "filename": "modules/container_definitions/wordpress/main.tf",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -2,8 +2,8 @@ module \"task_definition_creator\" {\n   source                       = \"../../cloudposse-aws-ecs-container-definition\"\n   container_name               = \"wordpress\"\n   container_image              = \"${var.container_image}\"\n-  container_memory             = 768\n-  container_memory_reservation = 512\n+  container_memory             = 450\n+  container_memory_reservation = 128\n \n   environment = [\n     {\n@@ -21,21 +21,22 @@ module \"task_definition_creator\" {\n     {\n       name  = \"WORDPRESS_DB_NAME\"\n       value = \"${var.db_name}\"\n-    }\n+    },\n   ]\n \n   log_driver = \"awslogs\"\n+\n   log_options = {\n-      awslogs-region = \"${var.aws_region}\"\n-      awslogs-group = \"${var.log_group}\"\n-      awslogs-stream-prefix = \"wordpress\"\n+    awslogs-region        = \"${var.aws_region}\"\n+    awslogs-group         = \"${var.log_group}\"\n+    awslogs-stream-prefix = \"wordpress\"\n   }\n \n   port_mappings = [\n     {\n       containerPort = 80\n       hostPort      = 80\n       protocol      = \"tcp\"\n-    }\n+    },\n   ]\n }"
      },
      {
        "filename": "modules/container_definitions/wordpress/outputs.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,6 +1,7 @@\n output \"name\" {\n   value = \"wordpress\"\n }\n+\n output \"json\" {\n   value = \"${module.task_definition_creator.json}\"\n }"
      },
      {
        "filename": "modules/logs/main.tf",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -1,4 +1,9 @@\n resource \"aws_cloudwatch_log_group\" \"wordpress_logs\" {\n-  name = \"wordpress\"\n+  name              = \"wordpress\"\n+  retention_in_days = 30\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"mysql_logs\" {\n+  name              = \"mysql\"\n   retention_in_days = 30\n }"
      },
      {
        "filename": "modules/logs/outputs.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,3 +1,7 @@\n output \"wordpress_logs_name\" {\n   value = \"wordpress\"\n }\n+\n+output \"mysql_logs_name\" {\n+  value = \"mysql\"\n+}"
      },
      {
        "filename": "outputs.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,3 +1,3 @@\n-output \"DNSName\" {\n-  value = \"${module.alb.alb_dns_name}\"\n+output \"mysql_password\" {\n+  value = \"${data.terraform_remote_state.state.mysql_password}\"\n }"
      },
      {
        "filename": "state.tf",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+terraform {\n+  backend \"s3\" {\n+    bucket  = \"invictrix-terraform\"\n+    key     = \"invictrix_site.tfstate\"\n+    region  = \"us-east-1\"\n+    encrypt = true\n+    profile = \"invictrix\"\n+  }\n+}\n+\n+data \"terraform_remote_state\" \"state\" {\n+  backend = \"s3\"\n+\n+  config {\n+    bucket  = \"invictrix-terraform\"\n+    key     = \"invictrix_site.tfstate\"\n+    region  = \"us-east-1\"\n+    encrypt = true\n+    profile = \"invictrix\"\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/InvictrixRom/website-infrastructure/commit/d51caa0c810f6d5ad6f0846a317ec2432835aad7",
    "files": [
      {
        "filename": "main.tf",
        "additions": 78,
        "deletions": 86,
        "changes": 164,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n provider \"aws\" {\n-  region     = \"${var.region}\"\n+  region = \"${var.region}\"\n   access_key = \"${var.access_key}\"\n   secret_key = \"${var.secret_key}\"\n }\n@@ -10,12 +10,48 @@ module \"cluster\" {\n   aws_name = \"wordpress\"\n }\n \n+module \"alb\" {\n+  source               = \"modules/alb\"\n+  name                 = \"wordpress\"\n+  aws_name             = \"wordpress\"\n+  certificate_arn      = \"${var.certificate_arn}\"\n+  public_second_subnet = \"${module.cluster.public_second_subnet_id}\"\n+  public_subnet        = \"${module.cluster.public_subnet_id}\"\n+  vpc                  = \"${module.cluster.vpc_id}\"\n+  security_group       = \"${aws_security_group.security_group.id}\"\n+  front_end_container  = \"${aws_ecs_task_definition.wordpress_task_definition.id}\"\n+}\n+\n module \"logs\" {\n   source = \"modules/logs\"\n }\n \n-resource \"aws_iam_role\" \"my_ecs_instance_role\" {\n-  name = \"my_ecs_instance_role\"\n+resource \"aws_db_subnet_group\" \"db_subnet_group\" {\n+  name       = \"wordpress\"\n+  subnet_ids = [\"${module.cluster.public_second_subnet_id}\",\"${module.cluster.public_subnet_id}\"]\n+\n+  tags {\n+    Name = \"Wordpress DB Subnet Group\"\n+  }\n+}\n+\n+resource \"aws_db_instance\" \"database\" {\n+  allocated_storage      = 10\n+  identifier             = \"wordpress\"\n+  db_subnet_group_name   = \"${aws_db_subnet_group.db_subnet_group.id}\"\n+  multi_az               = \"false\"\n+  engine                 = \"mysql\"\n+  engine_version         = \"5.7\"\n+  instance_class         = \"db.t2.micro\"\n+  name                   = \"wordpress\"\n+  username               = \"wordpress\"\n+  password               = \"jkMCjKMgKe7X4236jYqFfyarJKkzWCgi3v2ofWKrU\"\n+  parameter_group_name   = \"default.mysql5.7\"\n+  vpc_security_group_ids = [\"${aws_security_group.security_group.id}\"]\n+}\n+\n+resource \"aws_iam_role\" \"ecs_instance_role\" {\n+  name = \"ecs_instance_role\"\n \n   assume_role_policy = <<EOF\n {\n@@ -34,31 +70,46 @@ EOF\n }\n \n resource \"aws_iam_instance_profile\" \"ecs\" {\n-  name = \"my_ecs_instance_profile\"\n+  name = \"ecs_instance_profile\"\n   path = \"/\"\n-  role = \"${aws_iam_role.my_ecs_instance_role.name}\"\n+  role = \"${aws_iam_role.ecs_instance_role.name}\"\n }\n \n resource \"aws_iam_role_policy_attachment\" \"ecs_ec2_role\" {\n-  role       = \"${aws_iam_role.my_ecs_instance_role.id}\"\n+  role       = \"${aws_iam_role.ecs_instance_role.id}\"\n   policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role\"\n }\n \n-resource \"aws_instance\" \"instance\" {\n-  ami                    = \"${module.cluster.ecs_ami}\"\n-  availability_zone      = \"${var.region}a\"\n-  instance_type          = \"t2.micro\"\n-  iam_instance_profile   = \"${aws_iam_instance_profile.ecs.name}\"\n-  vpc_security_group_ids = [\"${aws_security_group.security_group.id}\"]\n-  subnet_id              = \"${module.cluster.public_subnet_id}\"\n+\n+resource \"aws_launch_configuration\" \"wordpress_launch_configuration\" {\n+  name          = \"wordpress\"\n+  image_id      = \"${module.cluster.ecs_ami}\"\n+  instance_type = \"t2.micro\"\n \n   user_data = <<EOF\n #!/bin/bash -xe\n echo ECS_CLUSTER=${module.cluster.cluster_name} >> /etc/ecs/ecs.config\n EOF\n \n+  iam_instance_profile = \"${aws_iam_instance_profile.ecs.arn}\"\n+  ebs_optimized        = false\n+\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n+}\n+\n+resource \"aws_autoscaling_group\" \"wordpress_autoscaling_group\" {\n+  name                 = \"wordpress\"\n+  launch_configuration = \"${aws_launch_configuration.wordpress_launch_configuration.name}\"\n+  min_size             = 1\n+  max_size             = 1\n+  vpc_zone_identifier  = [\"${module.cluster.private_subnet_id}\"]\n+\n   tags {\n-    Name = \"Invictrix Instance\"\n+    key                 = \"Name\"\n+    value               = \"wordpress\"\n+    propagate_at_launch = true\n   }\n \n   lifecycle {\n@@ -107,22 +158,12 @@ resource \"aws_security_group\" \"security_group\" {\n module \"wordpress_container_definition\" {\n   source          = \"./modules/container_definitions/wordpress\"\n   container_image = \"wordpress\"\n-  db_host         = \"mysql.wordpress.local\"\n-  db_name         = \"wordpress\"\n-  db_user         = \"wordpress\"\n-  db_password     = \"${data.terraform_remote_state.state.mysql_password}\"\n-  aws_region      = \"${var.region}\"\n-  log_group       = \"${module.logs.wordpress_logs_name}\"\n-}\n-\n-module \"mysql_container_definition\" {\n-  source          = \"./modules/container_definitions/mysql\"\n-  container_image = \"mysql:5.7\"\n-  mysql_database  = \"wordpress\"\n-  mysql_user      = \"wordpress\"\n-  mysql_password  = \"${data.terraform_remote_state.state.mysql_password}\"\n-  aws_region      = \"${var.region}\"\n-  log_group       = \"${module.logs.mysql_logs_name}\"\n+  db_host     = \"${aws_db_instance.database.endpoint}\"\n+  db_name     = \"wordpress\"\n+  db_user     = \"wordpress\"\n+  db_password = \"jkMCjKMgKe7X4236jYqFfyarJKkzWCgi3v2ofWKrU\"\n+  aws_region  = \"${var.region}\"\n+  log_group   = \"${module.logs.wordpress_logs_name}\"\n }\n \n resource \"aws_iam_role\" \"ecsTaskExecutionRole\" {\n@@ -154,44 +195,24 @@ resource \"aws_ecs_task_definition\" \"wordpress_task_definition\" {\n   execution_role_arn = \"${aws_iam_role.ecsTaskExecutionRole.arn}\"\n }\n \n-resource \"aws_ecs_task_definition\" \"mysql_task_definition\" {\n-  family                = \"mysql\"\n-  container_definitions = \"${module.mysql_container_definition.json}\"\n-  network_mode          = \"awsvpc\"\n-\n-  task_role_arn      = \"${aws_iam_role.app_role.arn}\"\n-  execution_role_arn = \"${aws_iam_role.ecsTaskExecutionRole.arn}\"\n-}\n-\n resource \"aws_ecs_service\" \"wordpress\" {\n   name            = \"wordpress\"\n   cluster         = \"${module.cluster.cluster_id}\"\n   task_definition = \"${aws_ecs_task_definition.wordpress_task_definition.arn}\"\n   desired_count   = 1\n-}\n-\n-resource \"aws_ecs_service\" \"mysql\" {\n-  name            = \"mysql\"\n-  cluster         = \"${module.cluster.cluster_id}\"\n-  task_definition = \"${aws_ecs_task_definition.mysql_task_definition.arn}\"\n-  desired_count   = 1\n-\n-  service_registries {\n-    registry_arn   = \"${aws_service_discovery_service.wordpress_service_discovery_service.arn}\"\n-    container_name = \"mysql\"\n-  }\n \n-  network_configuration {\n-    security_groups = [\"${aws_security_group.security_group.id}\"]\n-    subnets         = [\"${module.cluster.public_subnet_id}\"]\n+  load_balancer {\n+    target_group_arn = \"${module.alb.lb_target_group}\"\n+    container_name   = \"wordpress\"\n+    container_port   = 80\n   }\n }\n \n+\n resource \"aws_iam_role\" \"app_role\" {\n   name               = \"wordpress-app-role\"\n   assume_role_policy = \"${data.aws_iam_policy_document.app_role_assume_role_policy.json}\"\n }\n-\n resource \"aws_iam_role_policy\" \"app_policy\" {\n   name   = \"wordpress-app-policy\"\n   role   = \"${aws_iam_role.app_role.id}\"\n@@ -210,6 +231,7 @@ data \"aws_iam_policy_document\" \"app_policy\" {\n   }\n }\n \n+\n data \"aws_iam_policy_document\" \"app_role_assume_role_policy\" {\n   statement {\n     actions = [\"sts:AssumeRole\"]\n@@ -219,34 +241,4 @@ data \"aws_iam_policy_document\" \"app_role_assume_role_policy\" {\n       identifiers = [\"ecs-tasks.amazonaws.com\"]\n     }\n   }\n-}\n-\n-resource \"aws_eip_association\" \"eip_assoc\" {\n-  instance_id   = \"${aws_instance.instance.id}\"\n-  allocation_id = \"${module.cluster.eip_id}\"\n-}\n-\n-resource \"aws_service_discovery_private_dns_namespace\" \"wordpress_dns\" {\n-  name        = \"wordpress.local\"\n-  description = \"wordpress dns\"\n-  vpc         = \"${module.cluster.vpc_id}\"\n-}\n-\n-resource \"aws_service_discovery_service\" \"wordpress_service_discovery_service\" {\n-  name = \"mysql\"\n-\n-  dns_config {\n-    namespace_id = \"${aws_service_discovery_private_dns_namespace.wordpress_dns.id}\"\n-\n-    dns_records {\n-      ttl  = 10\n-      type = \"A\"\n-    }\n-\n-    routing_policy = \"MULTIVALUE\"\n-  }\n-\n-  health_check_custom_config {\n-    failure_threshold = 1\n-  }\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/alb/main.tf",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "status": "added",
        "patch": "@@ -0,0 +1,48 @@\n+resource \"aws_lb\" \"load_balancer\" {\n+  name               = \"${var.aws_name}\"\n+  internal           = false\n+  load_balancer_type = \"application\"\n+  security_groups    = [\"${var.security_group}\"]\n+  subnets            = [\"${var.public_subnet}\", \"${var.public_second_subnet}\"]\n+  enable_deletion_protection = true\n+\n+  tags {\n+    Name = \"${var.name}\"\n+  }\n+}\n+\n+resource \"aws_lb_listener\" \"bastion\" {\n+  load_balancer_arn = \"${aws_lb.load_balancer.arn}\"\n+  port              = \"443\"\n+  protocol          = \"HTTPS\"\n+  ssl_policy        = \"ELBSecurityPolicy-2016-08\"\n+  \n+  certificate_arn   = \"${var.certificate_arn}\"\n+\n+  default_action {\n+    type             = \"forward\"\n+    target_group_arn = \"${aws_lb_target_group.front_end.arn}\"\n+  }\n+}\n+\n+resource \"aws_lb_listener\" \"https_to_http\" {\n+  load_balancer_arn = \"${aws_lb.load_balancer.arn}\"\n+  port              = \"80\"\n+  protocol          = \"HTTP\"\n+\n+  default_action {\n+    type = \"redirect\"\n+    redirect {\n+      port = \"443\"\n+      protocol = \"HTTPS\"\n+      status_code = \"HTTP_301\"\n+    }\n+  }\n+}\n+\n+resource \"aws_lb_target_group\" \"front_end\" {\n+  name     = \"${var.aws_name}\"\n+  port     = 80\n+  protocol = \"HTTP\"\n+  vpc_id   = \"${var.vpc}\"\n+}"
      },
      {
        "filename": "modules/alb/outputs.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+output \"alb\" {\n+  value = \"${aws_lb.load_balancer.arn}\"\n+}\n+\n+output \"alb_dns_name\" {\n+  value = \"${aws_lb.load_balancer.dns_name}\"\n+}\n+\n+output \"lb_target_group\" {\n+  value = \"${aws_lb_target_group.front_end.arn}\"\n+}"
      },
      {
        "filename": "modules/alb/variables.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+variable \"name\" {}\n+variable \"aws_name\" {}\n+variable \"public_subnet\" {}\n+variable \"public_second_subnet\" {}\n+variable \"security_group\" {}\n+variable \"vpc\" {}\n+variable \"front_end_container\" {}\n+variable \"certificate_arn\" {}"
      },
      {
        "filename": "modules/cloudposse-aws-ecs-container-definition/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -26,5 +26,5 @@ locals {\n   }]\n \n   environment = \"${var.environment}\"\n-  depends_on  = \"${var.depends_on}\"\n+  depends_on = \"${var.depends_on}\"\n }"
      },
      {
        "filename": "modules/cloudposse-aws-ecs-container-definition/variables.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -81,12 +81,11 @@ variable \"log_options\" {\n   description = \"The configuration options to send to the log_driver.\"\n \n   default = {\n-    \"awslogs-region\"        = \"us-west-1\"\n-    \"awslogs-group\"         = \"default\"\n+    \"awslogs-region\" = \"us-west-1\"\n+    \"awslogs-group\" = \"default\"\n     \"awslogs-stream-prefix\" = \"default\"\n   }\n }\n-\n variable \"depends_on\" {\n   default = []\n }"
      },
      {
        "filename": "modules/cluster/main.tf",
        "additions": 58,
        "deletions": 4,
        "changes": 62,
        "status": "modified",
        "patch": "@@ -29,9 +29,9 @@ data \"aws_ami\" \"aws_ami\" {\n data \"aws_availability_zones\" \"available\" {}\n \n resource \"aws_vpc\" \"vpc\" {\n-  cidr_block           = \"10.0.0.0/16\"\n+  cidr_block = \"10.0.0.0/16\"\n   enable_dns_hostnames = true\n-  enable_dns_support   = true\n+  enable_dns_support = true\n \n   tags {\n     Name = \"${var.name}\"\n@@ -49,6 +49,28 @@ resource \"aws_subnet\" \"public_subnet\" {\n   }\n }\n \n+resource \"aws_subnet\" \"public_second_subnet\" {\n+  vpc_id                  = \"${aws_vpc.vpc.id}\"\n+  cidr_block              = \"10.0.4.0/24\"\n+  map_public_ip_on_launch = true\n+  availability_zone       = \"${data.aws_availability_zones.available.names[1]}\"\n+\n+  tags {\n+    Name = \"${var.name} Public Second Subnet\"\n+  }\n+}\n+\n+resource \"aws_subnet\" \"private_subnet\" {\n+  vpc_id                  = \"${aws_vpc.vpc.id}\"\n+  cidr_block              = \"10.0.2.0/24\"\n+  map_public_ip_on_launch = false\n+  availability_zone       = \"${data.aws_availability_zones.available.names[1]}\"\n+\n+  tags {\n+    Name = \"${var.name} Private Subnet\"\n+  }\n+}\n+\n resource \"aws_internet_gateway\" \"internet_gateway\" {\n   vpc_id = \"${aws_vpc.vpc.id}\"\n \n@@ -57,11 +79,20 @@ resource \"aws_internet_gateway\" \"internet_gateway\" {\n   }\n }\n \n-resource \"aws_eip\" \"eip\" {\n+resource \"aws_eip\" \"nat_eip\" {\n   vpc = true\n \n   tags {\n-    Name = \"${var.name} EIP\"\n+    Name = \"${var.name} NAT Gateway EIP\"\n+  }\n+}\n+\n+resource \"aws_nat_gateway\" \"nat_gateway\" {\n+  allocation_id = \"${aws_eip.nat_eip.id}\"\n+  subnet_id     = \"${aws_subnet.public_subnet.id}\"\n+\n+  tags {\n+    Name = \"${var.name} NAT\"\n   }\n }\n \n@@ -83,11 +114,34 @@ resource \"aws_route_table\" \"public_route_table\" {\n   }\n }\n \n+resource \"aws_route_table\" \"private_route_table\" {\n+  vpc_id = \"${aws_vpc.vpc.id}\"\n+\n+  route {\n+    cidr_block     = \"0.0.0.0/0\"\n+    nat_gateway_id = \"${aws_nat_gateway.nat_gateway.id}\"\n+  }\n+\n+  tags {\n+    Name = \"${var.name} Private Route Table\"\n+  }\n+}\n+\n resource \"aws_route_table_association\" \"route_table_association\" {\n   subnet_id      = \"${aws_subnet.public_subnet.id}\"\n   route_table_id = \"${aws_route_table.public_route_table.id}\"\n }\n \n+resource \"aws_route_table_association\" \"second_route_table_association\" {\n+  subnet_id      = \"${aws_subnet.public_second_subnet.id}\"\n+  route_table_id = \"${aws_route_table.public_route_table.id}\"\n+}\n+\n+resource \"aws_route_table_association\" \"private_route_table_association\" {\n+  subnet_id      = \"${aws_subnet.private_subnet.id}\"\n+  route_table_id = \"${aws_route_table.private_route_table.id}\"\n+}\n+\n resource \"aws_ecs_cluster\" \"cluster\" {\n   name = \"${var.aws_name}\"\n }"
      },
      {
        "filename": "modules/cluster/outputs.tf",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -6,6 +6,14 @@ output \"public_subnet_id\" {\n   value = \"${aws_subnet.public_subnet.id}\"\n }\n \n+output \"public_second_subnet_id\" {\n+  value = \"${aws_subnet.public_second_subnet.id}\"\n+}\n+\n+output \"private_subnet_id\" {\n+  value = \"${aws_subnet.private_subnet.id}\"\n+}\n+\n output \"ecs_ami\" {\n   value = \"${data.aws_ami.ecs_ami.id}\"\n }\n@@ -22,6 +30,4 @@ output \"cluster_id\" {\n   value = \"${aws_ecs_cluster.cluster.id}\"\n }\n \n-output \"eip_id\" {\n-  value = \"${aws_eip.eip.id}\"\n-}\n+"
      },
      {
        "filename": "modules/container_definitions/mysql/main.tf",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "status": "removed",
        "patch": "@@ -1,42 +0,0 @@\n-module \"task_definition_creator\" {\n-  source                       = \"../../cloudposse-aws-ecs-container-definition\"\n-  container_name               = \"mysql\"\n-  container_image              = \"${var.container_image}\"\n-  container_memory             = 450\n-  container_memory_reservation = 128\n-\n-  environment = [\n-    {\n-      name  = \"MYSQL_USER\"\n-      value = \"${var.mysql_user}\"\n-    },\n-    {\n-      name  = \"MYSQL_PASSWORD\"\n-      value = \"${var.mysql_password}\"\n-    },\n-    {\n-      name  = \"MYSQL_DATABASE\"\n-      value = \"${var.mysql_database}\"\n-    },\n-    {\n-      name  = \"MYSQL_RANDOM_ROOT_PASSWORD\"\n-      value = \"yes\"\n-    },\n-  ]\n-\n-  log_driver = \"awslogs\"\n-\n-  log_options = {\n-    awslogs-region        = \"${var.aws_region}\"\n-    awslogs-group         = \"${var.log_group}\"\n-    awslogs-stream-prefix = \"mysql\"\n-  }\n-\n-  port_mappings = [\n-    {\n-      containerPort = 3306\n-      hostPort      = 3306\n-      protocol      = \"tcp\"\n-    },\n-  ]\n-}"
      },
      {
        "filename": "modules/container_definitions/mysql/outputs.tf",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "status": "removed",
        "patch": "@@ -1,7 +0,0 @@\n-output \"name\" {\n-  value = \"mysql\"\n-}\n-\n-output \"json\" {\n-  value = \"${module.task_definition_creator.json}\"\n-}"
      },
      {
        "filename": "modules/container_definitions/mysql/variables.tf",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "status": "removed",
        "patch": "@@ -1,6 +0,0 @@\n-variable \"container_image\" {}\n-variable \"mysql_user\" {}\n-variable \"mysql_password\" {}\n-variable \"mysql_database\" {}\n-variable \"aws_region\" {}\n-variable \"log_group\" {}"
      },
      {
        "filename": "modules/container_definitions/wordpress/main.tf",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -2,8 +2,8 @@ module \"task_definition_creator\" {\n   source                       = \"../../cloudposse-aws-ecs-container-definition\"\n   container_name               = \"wordpress\"\n   container_image              = \"${var.container_image}\"\n-  container_memory             = 450\n-  container_memory_reservation = 128\n+  container_memory             = 768\n+  container_memory_reservation = 512\n \n   environment = [\n     {\n@@ -21,22 +21,21 @@ module \"task_definition_creator\" {\n     {\n       name  = \"WORDPRESS_DB_NAME\"\n       value = \"${var.db_name}\"\n-    },\n+    }\n   ]\n \n   log_driver = \"awslogs\"\n-\n   log_options = {\n-    awslogs-region        = \"${var.aws_region}\"\n-    awslogs-group         = \"${var.log_group}\"\n-    awslogs-stream-prefix = \"wordpress\"\n+      awslogs-region = \"${var.aws_region}\"\n+      awslogs-group = \"${var.log_group}\"\n+      awslogs-stream-prefix = \"wordpress\"\n   }\n \n   port_mappings = [\n     {\n       containerPort = 80\n       hostPort      = 80\n       protocol      = \"tcp\"\n-    },\n+    }\n   ]\n }"
      },
      {
        "filename": "modules/container_definitions/wordpress/outputs.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,7 +1,6 @@\n output \"name\" {\n   value = \"wordpress\"\n }\n-\n output \"json\" {\n   value = \"${module.task_definition_creator.json}\"\n }"
      },
      {
        "filename": "modules/logs/main.tf",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -1,9 +1,4 @@\n resource \"aws_cloudwatch_log_group\" \"wordpress_logs\" {\n-  name              = \"wordpress\"\n-  retention_in_days = 30\n-}\n-\n-resource \"aws_cloudwatch_log_group\" \"mysql_logs\" {\n-  name              = \"mysql\"\n+  name = \"wordpress\"\n   retention_in_days = 30\n }"
      },
      {
        "filename": "modules/logs/outputs.tf",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,7 +1,3 @@\n output \"wordpress_logs_name\" {\n   value = \"wordpress\"\n }\n-\n-output \"mysql_logs_name\" {\n-  value = \"mysql\"\n-}"
      },
      {
        "filename": "outputs.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,3 +1,3 @@\n-output \"mysql_password\" {\n-  value = \"${data.terraform_remote_state.state.mysql_password}\"\n+output \"DNSName\" {\n+  value = \"${module.alb.alb_dns_name}\"\n }"
      },
      {
        "filename": "state.tf",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "status": "removed",
        "patch": "@@ -1,21 +0,0 @@\n-terraform {\n-  backend \"s3\" {\n-    bucket  = \"invictrix-terraform\"\n-    key     = \"invictrix_site.tfstate\"\n-    region  = \"us-east-1\"\n-    encrypt = true\n-    profile = \"invictrix\"\n-  }\n-}\n-\n-data \"terraform_remote_state\" \"state\" {\n-  backend = \"s3\"\n-\n-  config {\n-    bucket  = \"invictrix-terraform\"\n-    key     = \"invictrix_site.tfstate\"\n-    region  = \"us-east-1\"\n-    encrypt = true\n-    profile = \"invictrix\"\n-  }\n-}"
      }
    ],
    "existing_codes": [
      "saving",
      "awareness"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "Reverts the prior commit which was meant to make the infrastructure more cost effective"
  },
  {
    "url": "https://github.com/InvictrixRom/website-infrastructure/commit/44d66328ea4467d05d7fb8092631aff5afbd8b26",
    "files": [
      {
        "filename": "main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -70,7 +70,7 @@ EOF\n }\n \n resource \"aws_iam_instance_profile\" \"ecs\" {\n-  name = \"ecs_instance_profile\"\n+  name = \"my_ecs_instance_profile\"\n   path = \"/\"\n   role = \"${aws_iam_role.ecs_instance_role.name}\"\n }\n@@ -85,6 +85,7 @@ resource \"aws_launch_configuration\" \"wordpress_launch_configuration\" {\n   name          = \"wordpress\"\n   image_id      = \"${module.cluster.ecs_ami}\"\n   instance_type = \"t2.micro\"\n+  security_groups = [\"${aws_security_group.security_group.id}\"]\n \n   user_data = <<EOF\n #!/bin/bash -xe\n@@ -104,7 +105,7 @@ resource \"aws_autoscaling_group\" \"wordpress_autoscaling_group\" {\n   launch_configuration = \"${aws_launch_configuration.wordpress_launch_configuration.name}\"\n   min_size             = 1\n   max_size             = 1\n-  vpc_zone_identifier  = [\"${module.cluster.private_subnet_id}\"]\n+  vpc_zone_identifier  = [\"${module.cluster.public_subnet_id}\"]\n \n   tags {\n     key                 = \"Name\""
      },
      {
        "filename": "modules/cluster/main.tf",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "status": "modified",
        "patch": "@@ -60,17 +60,6 @@ resource \"aws_subnet\" \"public_second_subnet\" {\n   }\n }\n \n-resource \"aws_subnet\" \"private_subnet\" {\n-  vpc_id                  = \"${aws_vpc.vpc.id}\"\n-  cidr_block              = \"10.0.2.0/24\"\n-  map_public_ip_on_launch = false\n-  availability_zone       = \"${data.aws_availability_zones.available.names[1]}\"\n-\n-  tags {\n-    Name = \"${var.name} Private Subnet\"\n-  }\n-}\n-\n resource \"aws_internet_gateway\" \"internet_gateway\" {\n   vpc_id = \"${aws_vpc.vpc.id}\"\n \n@@ -79,23 +68,6 @@ resource \"aws_internet_gateway\" \"internet_gateway\" {\n   }\n }\n \n-resource \"aws_eip\" \"nat_eip\" {\n-  vpc = true\n-\n-  tags {\n-    Name = \"${var.name} NAT Gateway EIP\"\n-  }\n-}\n-\n-resource \"aws_nat_gateway\" \"nat_gateway\" {\n-  allocation_id = \"${aws_eip.nat_eip.id}\"\n-  subnet_id     = \"${aws_subnet.public_subnet.id}\"\n-\n-  tags {\n-    Name = \"${var.name} NAT\"\n-  }\n-}\n-\n resource \"aws_route_table\" \"public_route_table\" {\n   vpc_id = \"${aws_vpc.vpc.id}\"\n \n@@ -114,19 +86,6 @@ resource \"aws_route_table\" \"public_route_table\" {\n   }\n }\n \n-resource \"aws_route_table\" \"private_route_table\" {\n-  vpc_id = \"${aws_vpc.vpc.id}\"\n-\n-  route {\n-    cidr_block     = \"0.0.0.0/0\"\n-    nat_gateway_id = \"${aws_nat_gateway.nat_gateway.id}\"\n-  }\n-\n-  tags {\n-    Name = \"${var.name} Private Route Table\"\n-  }\n-}\n-\n resource \"aws_route_table_association\" \"route_table_association\" {\n   subnet_id      = \"${aws_subnet.public_subnet.id}\"\n   route_table_id = \"${aws_route_table.public_route_table.id}\"\n@@ -137,11 +96,6 @@ resource \"aws_route_table_association\" \"second_route_table_association\" {\n   route_table_id = \"${aws_route_table.public_route_table.id}\"\n }\n \n-resource \"aws_route_table_association\" \"private_route_table_association\" {\n-  subnet_id      = \"${aws_subnet.private_subnet.id}\"\n-  route_table_id = \"${aws_route_table.private_route_table.id}\"\n-}\n-\n resource \"aws_ecs_cluster\" \"cluster\" {\n   name = \"${var.aws_name}\"\n }"
      },
      {
        "filename": "modules/cluster/outputs.tf",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -10,10 +10,6 @@ output \"public_second_subnet_id\" {\n   value = \"${aws_subnet.public_second_subnet.id}\"\n }\n \n-output \"private_subnet_id\" {\n-  value = \"${aws_subnet.private_subnet.id}\"\n-}\n-\n output \"ecs_ami\" {\n   value = \"${data.aws_ami.ecs_ami.id}\"\n }"
      }
    ],
    "existing_codes": [
      "networking",
      "saving",
      "awareness"
    ],
    "codes": ["aws", "remove_private_subnet", "remove_nat"],
    "notes": "Remove private subnet and NAT to reduce costs"
  },
  {
    "url": "https://github.com/tjpotenza/kubernetes-modules/commit/d750e25615e7e37914119cb257fbd9c7fad3a52a",
    "files": [
      {
        "filename": "control_plane/dns.tf",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -8,12 +8,6 @@ resource \"aws_route53_record\" \"ingress\" {\n   type     = \"A\"\n   ttl      = 60\n   records  = (\n-    lookup(each.value, \"internal\", false) ? concat(\n-      aws_instance.single_node[*].private_ip,\n-      aws_instance.ha_nodes[*].private_ip,\n-    ) : concat(\n-      aws_instance.single_node[*].public_ip,\n-      aws_instance.ha_nodes[*].public_ip,\n-    )\n+    lookup(each.value, \"internal\", false) ? aws_instance.instances[*].private_ip : aws_instance.instances[*].public_ip\n   )\n }"
      },
      {
        "filename": "control_plane/instances.tf",
        "additions": 16,
        "deletions": 19,
        "changes": 35,
        "status": "renamed",
        "patch": "@@ -1,10 +1,23 @@\n-resource \"aws_instance\" \"single_node\" {\n-  count                  = var.ha_enabled ? 0 : 1\n+# Since it's kinda tough to auto-pick subnet groups in a way that's both intuitive *and* won't heavily favor\n+# the same exact distribution in different projects, we just sort the list and generate a random offset\n+# at which to start iterating.  Technically we'll still trend toward groups of the same lexicographically\n+# sequential sets of subnets across projects, but that's good enough for my use cases (for now).\n+resource \"random_integer\" \"subnet_offset\" {\n+  min = 0\n+  max = 255\n+}\n+\n+resource \"aws_instance\" \"instances\" {\n+  count                  = var.instances\n   ami                    = data.aws_ami.ami.id\n   instance_type          = var.instance_type\n   key_name               = var.key_name\n   user_data_base64       = data.template_cloudinit_config.user_data.rendered\n-  subnet_id              = length(local.subnet_ids) == 1 ? local.subnet_ids[0] : null\n+  iam_instance_profile   = aws_iam_instance_profile.control_plane.id\n+  subnet_id              = (\n+    length(local.subnet_ids) == 0 ? null :\n+      element(local.subnet_ids, random_integer.subnet_offset.result + count.index)\n+  )\n   vpc_security_group_ids = concat(\n     values(data.aws_security_group.instance).*.id,\n     var.security_group_ids,\n@@ -38,19 +51,3 @@ resource \"aws_instance\" \"single_node\" {\n     }\n   )\n }\n-\n-resource \"aws_lb_target_group_attachment\" \"ingress\" {\n-  for_each = {\n-    for name, config in var.ingress:\n-      name => config if contains(keys(config), \"load_balancer\") && !var.ha_enabled\n-  }\n-  target_group_arn = aws_lb_target_group.ingress[each.key].arn\n-  target_id        = aws_instance.single_node[0].id\n-}\n-\n-# Attaching the single node to any shared ingress target groups\n-resource \"aws_lb_target_group_attachment\" \"single_node_shared\" {\n-  for_each          = !var.ha_enabled ? var.target_group_arns : {}\n-  target_group_arn  = each.value\n-  target_id         = aws_instance.single_node[0].id\n-}"
      },
      {
        "filename": "control_plane/locals.tf",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -1,10 +1,13 @@\n locals {\n   region     = data.aws_region.current.name\n   vpc_id     = (var.vpc_id == null ? data.aws_vpc.main[0].id : var.vpc_id)\n-  subnet_ids = (var.subnet_ids == null ? data.aws_subnet_ids.main[0].ids : var.subnet_ids)\n+  subnet_ids = sort(var.subnet_ids == null ? data.aws_subnet_ids.main[0].ids : var.subnet_ids)\n \n-  control_plane_sans = values({\n-    for name, config in var.ingress:\n-      name => \"control-plane--${var.cluster_name}.${local.region}.${config.dns_zone}\" if contains(keys(config), \"dns_zone\")\n-  })\n+  control_plane_sans = concat(\n+    values({\n+      for name, config in var.ingress:\n+        name => \"control-plane--${var.cluster_name}.${local.region}.${config.dns_zone}\" if contains(keys(config), \"dns_zone\")\n+    }),\n+    [ \"control-plane.cluster.local\" ]\n+  )\n }"
      },
      {
        "filename": "control_plane/outputs.tf",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -11,5 +11,9 @@ output \"target_group_arns\" {\n }\n \n output \"single_node_id\" {\n-  value = var.ha_enabled ? null : aws_instance.single_node[0].id\n+  value = \"\"\n }\n+\n+output \"iam_instance_profile_arn\" {\n+  value = aws_iam_instance_profile.control_plane.arn\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "control_plane/target_group.tf",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "status": "modified",
        "patch": "@@ -27,3 +27,28 @@ resource \"aws_lb_target_group\" \"ingress\" {\n     ignore_changes        = [name]\n   }\n }\n+\n+# \\/ These ugly for_each's exist because we need a target_group_attachment per instance, per target group\n+\n+resource \"aws_lb_target_group_attachment\" \"ingress\" {\n+  for_each          = merge([\n+    for i in range(var.instances): {\n+      for ingress_type, ingress_config in var.ingress:\n+        \"${i}-${ingress_type}\" => { instance = aws_instance.instances[i], ingress_type = ingress_type, ingress_config = ingress_config }\n+        if contains(keys(ingress_config), \"load_balancer\")\n+    }\n+  ]...)\n+  target_group_arn = aws_lb_target_group.ingress[each.value.ingress_type].arn\n+  target_id        = each.value.instance.id\n+}\n+\n+resource \"aws_lb_target_group_attachment\" \"shared\" {\n+  for_each          = merge([\n+    for i in range(var.instances): {\n+      for target_group_name, target_group_arn in var.target_group_arns:\n+        \"${i}-${target_group_name}\" => { instance = aws_instance.instances[i], target_group_arn = target_group_arn }\n+    }\n+  ]...)\n+  target_group_arn  = each.value\n+  target_id         = each.value.instance.id\n+}"
      },
      {
        "filename": "control_plane/user_data.tf",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "status": "renamed",
        "patch": "@@ -138,45 +138,3 @@ data \"template_cloudinit_config\" \"user_data\" {\n     TEMPLATE\n   }\n }\n-\n-resource \"aws_instance\" \"ha_nodes\" {\n-  count                  = var.ha_enabled ? var.instances : 0\n-  ami                    = data.aws_ami.ami.id\n-  instance_type          = var.instance_type\n-  key_name               = var.key_name\n-  user_data_base64       = data.template_cloudinit_config.user_data.rendered\n-  iam_instance_profile   = aws_iam_instance_profile.control_plane.id\n-  subnet_id              = length(local.subnet_ids) == 1 ? local.subnet_ids[0] : null\n-  vpc_security_group_ids = concat(\n-    values(data.aws_security_group.instance).*.id,\n-    var.security_group_ids,\n-    [ aws_security_group.cluster_member.id ],\n-  )\n-\n-  root_block_device {\n-    volume_type           = lookup(var.root_block_device, \"volume_type\", null)\n-    volume_size           = lookup(var.root_block_device, \"volume_size\", null)\n-    iops                  = lookup(var.root_block_device, \"iops\", null)\n-    delete_on_termination = lookup(var.root_block_device, \"delete_on_termination\", null)\n-    encrypted             = lookup(var.root_block_device, \"encrypted\", null)\n-  }\n-\n-  dynamic \"credit_specification\" {\n-    for_each = var.instance_cpu_credits != null ? { enabled = true } : {}\n-    content {\n-      cpu_credits = var.instance_cpu_credits\n-    }\n-  }\n-\n-  tags = merge(\n-    {\n-      Name    = \"${var.cluster_name}-control-plane\"\n-      Cluster = var.cluster_name\n-      Role    = \"control-plane\"\n-    },\n-    {\n-      for name, config in var.ingress:\n-        \"${title(name)}Address\" =>  \"control-plane--${var.cluster_name}.${local.region}.${config.dns_zone}\" if contains(keys(config), \"dns_zone\")\n-    }\n-  )\n-}"
      },
      {
        "filename": "control_plane/user_data/etcd/etcd.sh",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -53,12 +53,13 @@ fi\n ####################################################################################################\n \n # General model:\n-# - A cluster exists, and I'm not a member\n-# - A cluster exists, and I'm a member\n-# - No cluster exists, but I can start one\n-# - No cluster exists, and I can't start one\n+# 1. A cluster exists, and I'm not a member\n+# 2. A cluster exists, and I'm a member\n+# 3. No cluster exists, but I can start one\n+# 4. No cluster exists, and I can't start one\n #\n-# All four scenarios\n+# Scenarios 2, 3, and 4 all can be started with the same arguments for etcd.  There's a few extra\n+# settings needed for scenario one, since it involves registering with the cluster and two steps.\n \n if [[ \"$cluster_to_join\" != \"\" && \"$is_former_member\" == \"false\" ]]; then\n     log \"Found a running etcd server on an instance with similar tags to which this instance is not registered.  Attempting to join it...\""
      },
      {
        "filename": "control_plane/user_data/k3s/graceful-shutdown.sh",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ function fatal() { echo \"[ERR] $1\" >&2; exit 1; }\n log \"Retrieving kubectl credentials from control-plane...\"\n token=$(curl -sSLf \"localhost:30000/token\")\n ca_crt=$(curl -sSLf \"localhost:30000/ca.crt\" | base64 -w0)\n-control_plane_address=\"https://${control_plane_address}:6443\"\n+control_plane_address=\"https://control-plane.cluster.local:6443\"\n \n kubeconfig=\"\n ---"
      },
      {
        "filename": "control_plane/userdata.tf",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "status": "removed",
        "patch": "@@ -1,40 +0,0 @@\n-# ####################################################################################################\n-# # Config Files\n-# ####################################################################################################\n-# data \"template_file\" \"admin_yaml\" {\n-#   template = file(\"${path.module}/user_data/admin.yaml\")\n-# }\n-\n-# data \"template_file\" \"worker_bootstrapper_yaml\" {\n-#   template = file(\"${path.module}/user_data/worker-bootstrapper.yaml\")\n-# }\n-\n-# data \"template_file\" \"graceful_shutdown_service\" {\n-#   template = file(\"${path.module}/user_data/graceful-shutdown.service\")\n-#   vars     = {\n-#     kubernetes_unit = \"k3s\"\n-#   }\n-# }\n-\n-# data \"template_file\" \"graceful_shutdown_sh\" {\n-#   template = file(\"${path.module}/user_data/graceful-shutdown.sh\")\n-#   vars     = {\n-#     control_plane_address = \"localhost\"\n-#   }\n-# }\n-\n-# ####################################################################################################\n-# # Bootstrapping Script\n-# ####################################################################################################\n-# data \"template_file\" \"bootstrap_sh\" {\n-#   template = file(\"${path.module}/user_data/bootstrap.sh\")\n-#   vars = {\n-#     k3s_install_options       = local.k3s_install_options\n-#     k3s_options               = base64encode(local.k3s_options)\n-#     control_plane_sans        = base64encode( join(\", \", local.control_plane_sans) )\n-#     admin_yaml                = base64encode(data.template_file.admin_yaml.rendered)\n-#     worker_bootstrapper_yaml  = base64encode(data.template_file.worker_bootstrapper_yaml.rendered)\n-#     graceful_shutdown_service = base64encode(data.template_file.graceful_shutdown_service.rendered)\n-#     graceful_shutdown_sh      = base64encode(data.template_file.graceful_shutdown_sh.rendered)\n-#   }\n-# }"
      },
      {
        "filename": "control_plane/variables.tf",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -1,9 +1,3 @@\n-variable \"ha_enabled\" {\n-  description = \"Control Plane: Whether the control plane is using an HA-compatible data store.  Runs as a single node using internal storage if false.\"\n-  type        = bool\n-  default     = false\n-}\n-\n variable \"vpc_id\" {\n   description = \"ID for the VPC within which resources will be created.\"\n   type        = string\n@@ -110,3 +104,9 @@ variable \"control_plane_address\" {\n   type        = string\n   default     = null\n }\n+\n+variable \"iam_instance_profile_arn\" {\n+  description = \"Workers: ARN for an IAM Instance Profile to associate with instances.\"\n+  type        = string\n+  default     = null\n+}"
      },
      {
        "filename": "workers/main.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -9,6 +9,10 @@ resource \"aws_launch_template\" \"workers\" {\n     var.security_group_ids\n   )\n \n+  iam_instance_profile {\n+    arn = var.iam_instance_profile_arn\n+  }\n+\n   dynamic \"block_device_mappings\" {\n     # Only create this block if any values are set within var.root_block_device\n     for_each = var.root_block_device != {} ? { enabled = true } : {}"
      },
      {
        "filename": "workers/user_data.tf",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "status": "renamed",
        "patch": "@@ -2,6 +2,12 @@ locals {\n   k3s_install_options = lookup(var.k3s, \"version\", null) != null ? \"INSTALL_K3S_VERSION=${var.k3s.version}\" : \"\"\n   k3s_options         = join(\" \", lookup(var.k3s, \"options\", []))\n \n+  k3s_discover_control_plane_sh = base64encode(\n+    templatefile(\"${path.module}/user_data/k3s/discover-control-plane.sh\", {\n+      cluster = var.cluster_name\n+    })\n+  )\n+\n   k3s_graceful_shutdown_service = base64encode(\n     templatefile(\"${path.module}/user_data/k3s/graceful-shutdown.service\", {\n       kubernetes_unit = \"k3s-agent\"\n@@ -17,7 +23,8 @@ locals {\n   k3s_install_sh = base64encode(\n     templatefile(\"${path.module}/user_data/k3s/install.sh\", {\n       k3s_install_options   = local.k3s_install_options\n-      control_plane_address = var.control_plane_address\n+      k3s_options           = local.k3s_options\n+      control_plane_address = base64encode(var.control_plane_address)\n     })\n   )\n }\n@@ -41,6 +48,11 @@ data \"template_cloudinit_config\" \"user_data\" {\n         permissions: \"0755\"\n         encoding:    \"b64\"\n         content:     \"${local.k3s_install_sh}\"\n+      - path:        \"/usr/local/lib/k3s/discover-control-plane.sh\"\n+        owner:       \"root:root\"\n+        permissions: \"0755\"\n+        encoding:    \"b64\"\n+        content:     \"${local.k3s_discover_control_plane_sh}\"\n       - path:        \"/usr/local/lib/k3s/graceful-shutdown.sh\"\n         owner:       \"root:root\"\n         permissions: \"0755\""
      },
      {
        "filename": "workers/user_data/k3s/discover-control-plane.sh",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "status": "added",
        "patch": "@@ -0,0 +1,36 @@\n+#!/usr/bin/env bash\n+set -o errexit -o pipefail\n+\n+function log()   { echo \"[INFO] $1\" >&2; }\n+function warn()  { echo \"[WARN] $1\" >&2; }\n+function err()   { echo \"[ERR] $1\" >&2; }\n+function fatal() { echo \"[ERR] $1\" >&2; exit 1; }\n+\n+cluster=\"${cluster}\"\n+role=\"control-plane\"\n+control_plane_address=\"control-plane.cluster.local\"\n+\n+log \"Looking up a control-plane instance ip...\"\n+region=$( curl -sSLf \"http://169.254.169.254/latest/dynamic/instance-identity/document\" | jq \".region\" -rec )\n+control_plane_instance_ip=$(\n+    aws ec2 describe-instances \\\n+        --region=\"$region\" \\\n+        --output=\"json\" \\\n+        --filters \\\n+            \"Name=tag:Cluster,Values=$cluster\" \\\n+            \"Name=tag:Role,Values=$role\" \\\n+            \"Name=instance-state-name,Values=running\" \\\n+    | jq \".Reservations[].Instances[].PrivateIpAddress\" -rec | sort -R | head -n1\n+)\n+\n+etc_hosts_line=\"$control_plane_instance_ip   $control_plane_address\"\n+\n+grep \"$control_plane_address\" \"/etc/hosts\" > \"/dev/null\" 2>&1 && {\n+    log \"Updating existing [$control_plane_address] entry in /etc/hosts to [$etc_hosts_line]...\"\n+    sudo sed -i -E \"s/.*$control_plane_address\\$/$etc_hosts_line/\" \"/etc/hosts\"\n+} || {\n+    log \"Adding new entry in /etc/hosts for [$etc_hosts_line]...\"\n+    echo \"$etc_hosts_line\" | sudo tee -a \"/etc/hosts\" > \"/dev/null\"\n+}\n+\n+log \"Successfully updated /etc/hosts with entry [$etc_hosts_line].\""
      },
      {
        "filename": "workers/user_data/k3s/install.sh",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "status": "modified",
        "patch": "@@ -1,18 +1,33 @@\n #!/usr/bin/env bash\n set -o errexit -o pipefail\n \n+sudo yum update -y\n+sudo yum install -y jq\n+\n ####################################################################################################\n # Worker: Frontloading Terraform template values and EC2 metadata values into bash vars\n ####################################################################################################\n-control_plane_address=$(     echo \"${control_plane_address}\"     | base64 -d )\n+# control_plane_address=$( echo \"${control_plane_address}\" | base64 -d )\n+control_plane_address=\"control-plane.cluster.local\"\n \n-public_ip=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)\n-availability_zone=$(curl http://169.254.169.254/latest/meta-data/placement/availability-zone)\n+public_ip=$(         curl -sSLf http://169.254.169.254/latest/meta-data/public-ipv4 )\n+availability_zone=$( curl -sSLf http://169.254.169.254/latest/meta-data/placement/availability-zone )\n \n ####################################################################################################\n # Worker: Installing Kubernetes itself\n ####################################################################################################\n+sudo /usr/local/lib/k3s/discover-control-plane.sh\n node_token=\"$( curl -sfL \"http://$control_plane_address:30000/node-token\" )\"\n cluster_api_endpoint=\"https://$control_plane_address:6443\"\n \n-curl -sfL https://get.k3s.io | K3S_URL=\"$cluster_api_endpoint\" K3S_TOKEN=\"$node_token\" ${k3s_install_options} sh -s - --node-label=\"topology.kubernetes.io/zone=$availability_zone\"\n+curl -sfL https://get.k3s.io | ${k3s_install_options} \\\n+    K3S_TOKEN=\"$node_token\" \\\n+    K3S_URL=\"$cluster_api_endpoint\" \\\n+    INSTALL_K3S_SKIP_START=\"true\" \\\n+    INSTALL_K3S_SKIP_ENABLE=\"true\" \\\n+    sh -s - \\\n+    --node-label=\"topology.kubernetes.io/zone=$availability_zone\" ${k3s_options}\n+\n+echo \"ExecStartPre=/usr/local/lib/k3s/discover-control-plane.sh\" | sudo tee -a \"/etc/systemd/system/k3s-agent.service\" > \"/dev/null\"\n+sudo systemctl daemon-reload\n+sudo systemctl enable k3s-agent --now"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Harmelodic/automation-infrastructure/commit/8b563a7d3c7d90ddd2359500d9781547347cc56a",
    "files": [
      {
        "filename": "infrastructure/database.tf",
        "additions": 62,
        "deletions": 62,
        "changes": 124,
        "status": "modified",
        "patch": "@@ -1,62 +1,62 @@\n-resource \"google_sql_database_instance\" \"instance\" {\n-  name                = terraform.workspace\n-  region              = var.region\n-  database_version    = \"MYSQL_8_0\"\n-  deletion_protection = \"true\"\n-\n-  settings {\n-    tier      = var.db_tier\n-    disk_size = var.db_disk_size\n-    disk_type = \"PD_SSD\"\n-\n-    backup_configuration {\n-      enabled  = true\n-      location = var.region\n-\n-      backup_retention_settings {\n-        retained_backups = 2\n-        retention_unit   = \"COUNT\"\n-      }\n-    }\n-\n-    ip_configuration {\n-      ipv4_enabled = true\n-      require_ssl  = true\n-    }\n-\n-    maintenance_window {\n-      day          = 2\n-      hour         = 3\n-      update_track = \"stable\"\n-    }\n-  }\n-}\n-\n-resource \"google_sql_database\" \"blog\" {\n-  instance = google_sql_database_instance.instance.name\n-  name     = \"blog\"\n-}\n-\n-resource \"google_sql_database\" \"scribbles\" {\n-  instance = google_sql_database_instance.instance.name\n-  name     = \"scribbles\"\n-}\n-\n-resource \"google_sql_database\" \"shopping\" {\n-  instance = google_sql_database_instance.instance.name\n-  name     = \"shopping\"\n-}\n-\n-variable \"db_tier\" {\n-  default     = \"db-n1-standard-1\"\n-  description = \"Type of DB machine\"\n-  sensitive   = true\n-  type        = string\n-}\n-\n-variable \"db_disk_size\" {\n-  default     = 10\n-  description = \"Size of DB storage in GB\"\n-  sensitive   = true\n-  type        = number\n-}\n+#resource \"google_sql_database_instance\" \"instance\" {\n+#  name                = terraform.workspace\n+#  region              = var.region\n+#  database_version    = \"MYSQL_8_0\"\n+#  deletion_protection = \"true\"\n+#\n+#  settings {\n+#    tier      = var.db_tier\n+#    disk_size = var.db_disk_size\n+#    disk_type = \"PD_SSD\"\n+#\n+#    backup_configuration {\n+#      enabled  = true\n+#      location = var.region\n+#\n+#      backup_retention_settings {\n+#        retained_backups = 2\n+#        retention_unit   = \"COUNT\"\n+#      }\n+#    }\n+#\n+#    ip_configuration {\n+#      ipv4_enabled = true\n+#      require_ssl  = true\n+#    }\n+#\n+#    maintenance_window {\n+#      day          = 2\n+#      hour         = 3\n+#      update_track = \"stable\"\n+#    }\n+#  }\n+#}\n+#\n+#resource \"google_sql_database\" \"blog\" {\n+#  instance = google_sql_database_instance.instance.name\n+#  name     = \"blog\"\n+#}\n+#\n+#resource \"google_sql_database\" \"scribbles\" {\n+#  instance = google_sql_database_instance.instance.name\n+#  name     = \"scribbles\"\n+#}\n+#\n+#resource \"google_sql_database\" \"shopping\" {\n+#  instance = google_sql_database_instance.instance.name\n+#  name     = \"shopping\"\n+#}\n+#\n+#variable \"db_tier\" {\n+#  default     = \"db-n1-standard-1\"\n+#  description = \"Type of DB machine\"\n+#  sensitive   = true\n+#  type        = string\n+#}\n+#\n+#variable \"db_disk_size\" {\n+#  default     = 10\n+#  description = \"Size of DB storage in GB\"\n+#  sensitive   = true\n+#  type        = number\n+#}"
      },
      {
        "filename": "infrastructure/gke.tf",
        "additions": 101,
        "deletions": 101,
        "changes": 202,
        "status": "modified",
        "patch": "@@ -1,101 +1,101 @@\n-resource \"google_container_cluster\" \"gke_cluster\" {\n-  description                 = \"GKE Cluster for personal projects\"\n-  enable_binary_authorization = false\n-  enable_intranode_visibility = false\n-  enable_legacy_abac          = false\n-  enable_shielded_nodes       = true\n-  enable_tpu                  = false\n-  initial_node_count          = 1\n-  location                    = var.gke_location\n-  logging_service             = \"logging.googleapis.com/kubernetes\"\n-  name                        = terraform.workspace\n-  network                     = google_compute_network.gke.self_link\n-  remove_default_node_pool    = true\n-  subnetwork                  = google_compute_subnetwork.gke.self_link\n-\n-  resource_labels = {\n-    environment = terraform.workspace\n-  }\n-\n-  addons_config {\n-    horizontal_pod_autoscaling {\n-      disabled = false\n-    }\n-\n-    http_load_balancing {\n-      disabled = false\n-    }\n-\n-    network_policy_config {\n-      disabled = true\n-    }\n-  }\n-\n-  cluster_autoscaling {\n-    enabled = false\n-  }\n-\n-  ip_allocation_policy {\n-    cluster_secondary_range_name  = local.cluster_secondary_range_name\n-    services_secondary_range_name = local.services_secondary_range_name\n-  }\n-\n-  maintenance_policy {\n-    daily_maintenance_window {\n-      start_time = \"00:00\"\n-    }\n-  }\n-\n-  private_cluster_config {\n-    enable_private_endpoint = false\n-  }\n-\n-  network_policy {\n-    enabled = false\n-  }\n-\n-  release_channel {\n-    channel = \"RAPID\"\n-  }\n-\n-  workload_identity_config {\n-    identity_namespace = \"${var.project_id}.svc.id.goog\"\n-  }\n-}\n-\n-resource \"google_compute_network\" \"gke\" {\n-  auto_create_subnetworks         = false\n-  delete_default_routes_on_create = false\n-  description                     = \"Compute Network for GKE nodes\"\n-  name                            = \"${terraform.workspace}-gke\"\n-  routing_mode                    = \"GLOBAL\"\n-}\n-\n-resource \"google_compute_subnetwork\" \"gke\" {\n-  name          = \"${terraform.workspace}-gke-subnetwork\"\n-  ip_cidr_range = \"10.255.0.0/16\"\n-  region        = var.region\n-  network       = google_compute_network.gke.id\n-\n-  secondary_ip_range {\n-    range_name    = local.cluster_secondary_range_name\n-    ip_cidr_range = \"10.0.0.0/12\"\n-  }\n-\n-  secondary_ip_range {\n-    range_name    = local.services_secondary_range_name\n-    ip_cidr_range = \"10.16.0.0/12\"\n-  }\n-}\n-\n-locals {\n-  cluster_secondary_range_name = \"cluster-secondary-range\"\n-  services_secondary_range_name = \"services-secondary-range\"\n-}\n-\n-variable \"gke_location\" {\n-  default     = \"europe-north1\"\n-  description = \"Location of where GKE cluster will be created\"\n-  sensitive   = true\n-  type        = string\n-}\n+#resource \"google_container_cluster\" \"gke_cluster\" {\n+#  description                 = \"GKE Cluster for personal projects\"\n+#  enable_binary_authorization = false\n+#  enable_intranode_visibility = false\n+#  enable_legacy_abac          = false\n+#  enable_shielded_nodes       = true\n+#  enable_tpu                  = false\n+#  initial_node_count          = 1\n+#  location                    = var.gke_location\n+#  logging_service             = \"logging.googleapis.com/kubernetes\"\n+#  name                        = terraform.workspace\n+#  network                     = google_compute_network.gke.self_link\n+#  remove_default_node_pool    = true\n+#  subnetwork                  = google_compute_subnetwork.gke.self_link\n+#\n+#  resource_labels = {\n+#    environment = terraform.workspace\n+#  }\n+#\n+#  addons_config {\n+#    horizontal_pod_autoscaling {\n+#      disabled = false\n+#    }\n+#\n+#    http_load_balancing {\n+#      disabled = false\n+#    }\n+#\n+#    network_policy_config {\n+#      disabled = true\n+#    }\n+#  }\n+#\n+#  cluster_autoscaling {\n+#    enabled = false\n+#  }\n+#\n+#  ip_allocation_policy {\n+#    cluster_secondary_range_name  = local.cluster_secondary_range_name\n+#    services_secondary_range_name = local.services_secondary_range_name\n+#  }\n+#\n+#  maintenance_policy {\n+#    daily_maintenance_window {\n+#      start_time = \"00:00\"\n+#    }\n+#  }\n+#\n+#  private_cluster_config {\n+#    enable_private_endpoint = false\n+#  }\n+#\n+#  network_policy {\n+#    enabled = false\n+#  }\n+#\n+#  release_channel {\n+#    channel = \"RAPID\"\n+#  }\n+#\n+#  workload_identity_config {\n+#    identity_namespace = \"${var.project_id}.svc.id.goog\"\n+#  }\n+#}\n+#\n+#resource \"google_compute_network\" \"gke\" {\n+#  auto_create_subnetworks         = false\n+#  delete_default_routes_on_create = false\n+#  description                     = \"Compute Network for GKE nodes\"\n+#  name                            = \"${terraform.workspace}-gke\"\n+#  routing_mode                    = \"GLOBAL\"\n+#}\n+#\n+#resource \"google_compute_subnetwork\" \"gke\" {\n+#  name          = \"${terraform.workspace}-gke-subnetwork\"\n+#  ip_cidr_range = \"10.255.0.0/16\"\n+#  region        = var.region\n+#  network       = google_compute_network.gke.id\n+#\n+#  secondary_ip_range {\n+#    range_name    = local.cluster_secondary_range_name\n+#    ip_cidr_range = \"10.0.0.0/12\"\n+#  }\n+#\n+#  secondary_ip_range {\n+#    range_name    = local.services_secondary_range_name\n+#    ip_cidr_range = \"10.16.0.0/12\"\n+#  }\n+#}\n+#\n+#locals {\n+#  cluster_secondary_range_name = \"cluster-secondary-range\"\n+#  services_secondary_range_name = \"services-secondary-range\"\n+#}\n+#\n+#variable \"gke_location\" {\n+#  default     = \"europe-north1\"\n+#  description = \"Location of where GKE cluster will be created\"\n+#  sensitive   = true\n+#  type        = string\n+#}"
      },
      {
        "filename": "infrastructure/node_pool.tf",
        "additions": 68,
        "deletions": 68,
        "changes": 136,
        "status": "modified",
        "patch": "@@ -1,68 +1,68 @@\n-resource \"google_container_node_pool\" \"gke_node_pool\" {\n-  cluster        = google_container_cluster.gke_cluster.name\n-  location       = var.gke_location\n-  name           = terraform.workspace\n-  node_count     = 1\n-  node_locations = var.gke_node_locations\n-\n-  management {\n-    auto_repair  = true\n-    auto_upgrade = true\n-  }\n-\n-  node_config {\n-    disk_size_gb    = 100\n-    disk_type       = \"pd-standard\"\n-    image_type      = \"cos_containerd\"\n-    local_ssd_count = 0\n-    machine_type    = var.gke_node_pool_machine_type\n-    preemptible     = false\n-    service_account = google_service_account.gke_node_pool.email\n-\n-    labels = {\n-      environment = terraform.workspace\n-    }\n-\n-    metadata = {\n-      disable-legacy-endpoints = true\n-    }\n-\n-    tags = [\n-      terraform.workspace\n-    ]\n-\n-    shielded_instance_config {\n-      enable_integrity_monitoring = true\n-      enable_secure_boot          = true\n-    }\n-  }\n-\n-  upgrade_settings {\n-    max_surge       = 2\n-    max_unavailable = 1\n-  }\n-}\n-\n-resource \"google_service_account\" \"gke_node_pool\" {\n-  account_id   = \"${terraform.workspace}-node-pool\"\n-  description  = \"The default service account for pods to use in ${terraform.workspace}\"\n-  display_name = \"GKE Node Pool ${terraform.workspace} Service Account\"\n-}\n-\n-resource \"google_project_iam_member\" \"gke_node_pool\" {\n-  member = \"serviceAccount:${google_service_account.gke_node_pool.email}\"\n-  role   = \"roles/viewer\"\n-}\n-\n-variable \"gke_node_locations\" {\n-  description = \"The list of zones in which the node pool's nodes should be located\"\n-  sensitive   = true\n-  type        = list(string)\n-}\n-\n-variable \"gke_node_pool_machine_type\" {\n-  default     = \"g1-small\"\n-  description = \"Machine size for GKE node pool\"\n-  sensitive   = true\n-  type        = string\n-}\n+#resource \"google_container_node_pool\" \"gke_node_pool\" {\n+#  cluster        = google_container_cluster.gke_cluster.name\n+#  location       = var.gke_location\n+#  name           = terraform.workspace\n+#  node_count     = 1\n+#  node_locations = var.gke_node_locations\n+#\n+#  management {\n+#    auto_repair  = true\n+#    auto_upgrade = true\n+#  }\n+#\n+#  node_config {\n+#    disk_size_gb    = 100\n+#    disk_type       = \"pd-standard\"\n+#    image_type      = \"cos_containerd\"\n+#    local_ssd_count = 0\n+#    machine_type    = var.gke_node_pool_machine_type\n+#    preemptible     = false\n+#    service_account = google_service_account.gke_node_pool.email\n+#\n+#    labels = {\n+#      environment = terraform.workspace\n+#    }\n+#\n+#    metadata = {\n+#      disable-legacy-endpoints = true\n+#    }\n+#\n+#    tags = [\n+#      terraform.workspace\n+#    ]\n+#\n+#    shielded_instance_config {\n+#      enable_integrity_monitoring = true\n+#      enable_secure_boot          = true\n+#    }\n+#  }\n+#\n+#  upgrade_settings {\n+#    max_surge       = 2\n+#    max_unavailable = 1\n+#  }\n+#}\n+#\n+#resource \"google_service_account\" \"gke_node_pool\" {\n+#  account_id   = \"${terraform.workspace}-node-pool\"\n+#  description  = \"The default service account for pods to use in ${terraform.workspace}\"\n+#  display_name = \"GKE Node Pool ${terraform.workspace} Service Account\"\n+#}\n+#\n+#resource \"google_project_iam_member\" \"gke_node_pool\" {\n+#  member = \"serviceAccount:${google_service_account.gke_node_pool.email}\"\n+#  role   = \"roles/viewer\"\n+#}\n+#\n+#variable \"gke_node_locations\" {\n+#  description = \"The list of zones in which the node pool's nodes should be located\"\n+#  sensitive   = true\n+#  type        = list(string)\n+#}\n+#\n+#variable \"gke_node_pool_machine_type\" {\n+#  default     = \"g1-small\"\n+#  description = \"Machine size for GKE node pool\"\n+#  sensitive   = true\n+#  type        = string\n+#}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["gcp", "remove_gcp"],
    "notes": "The commit stops using GCP entirely to save on cost"
  },
  {
    "url": "https://github.com/garylb2/terraform-example-patterns/commit/6de6d83d930bd9459e1cf8c311fa7b45c3f90987",
    "files": [
      {
        "filename": "basic-terraform/awsaccnt1/us-west-2/lookup/dynamodb.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -22,16 +22,6 @@ resource \"aws_dynamodb_table\" \"data\" {\n     ignore_changes = [\"ttl\"]\n   }\n \n-  global_secondary_index {\n-    name               = \"customerIdIndex\"\n-    hash_key           = \"customerId\"\n-    range_key          = \"\"\n-    write_capacity     = 1\n-    read_capacity      = 1\n-    projection_type    = \"KEYS_ONLY\"\n-    non_key_attributes = []\n-  }\n-\n   server_side_encryption {\n     enabled = \"true\"\n   }"
      },
      {
        "filename": "basic-terraform/nonprod/us-west-2/lookup/dynamodb.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -22,16 +22,6 @@ resource \"aws_dynamodb_table\" \"data\" {\n     ignore_changes = [\"ttl\"]\n   }\n \n-  global_secondary_index {\n-    name               = \"customerIdIndex\"\n-    hash_key           = \"customerId\"\n-    range_key          = \"\"\n-    write_capacity     = 1\n-    read_capacity      = 1\n-    projection_type    = \"KEYS_ONLY\"\n-    non_key_attributes = []\n-  }\n-\n   server_side_encryption {\n     enabled = \"true\"\n   }"
      },
      {
        "filename": "dry-workspace-terragrunt/modules/persistence/main.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -22,16 +22,6 @@ resource \"aws_dynamodb_table\" \"data\" {\n     ignore_changes = [\"ttl\"]\n   }\n \n-  global_secondary_index {\n-    name               = \"customerIdIndex\"\n-    hash_key           = \"customerId\"\n-    range_key          = \"\"\n-    write_capacity     = 1\n-    read_capacity      = 1\n-    projection_type    = \"KEYS_ONLY\"\n-    non_key_attributes = []\n-  }\n-\n   server_side_encryption {\n     enabled = \"true\"\n   }"
      },
      {
        "filename": "envvar-terragrunt/modules/persistence/main.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -22,16 +22,6 @@ resource \"aws_dynamodb_table\" \"data\" {\n     ignore_changes = [\"ttl\"]\n   }\n \n-  global_secondary_index {\n-    name               = \"customerIdIndex\"\n-    hash_key           = \"customerId\"\n-    range_key          = \"\"\n-    write_capacity     = 1\n-    read_capacity      = 1\n-    projection_type    = \"KEYS_ONLY\"\n-    non_key_attributes = []\n-  }\n-\n   server_side_encryption {\n     enabled = \"true\"\n   }"
      },
      {
        "filename": "module-terraform/modules/persistence/main.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -22,16 +22,6 @@ resource \"aws_dynamodb_table\" \"data\" {\n     ignore_changes = [\"ttl\"]\n   }\n \n-  global_secondary_index {\n-    name               = \"customerIdIndex\"\n-    hash_key           = \"customerId\"\n-    range_key          = \"\"\n-    write_capacity     = 1\n-    read_capacity      = 1\n-    projection_type    = \"KEYS_ONLY\"\n-    non_key_attributes = []\n-  }\n-\n   server_side_encryption {\n     enabled = \"true\"\n   }"
      },
      {
        "filename": "module-terragrunt/modules/persistence/main.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -22,16 +22,6 @@ resource \"aws_dynamodb_table\" \"data\" {\n     ignore_changes = [\"ttl\"]\n   }\n \n-  global_secondary_index {\n-    name               = \"customerIdIndex\"\n-    hash_key           = \"customerId\"\n-    range_key          = \"\"\n-    write_capacity     = 1\n-    read_capacity      = 1\n-    projection_type    = \"KEYS_ONLY\"\n-    non_key_attributes = []\n-  }\n-\n   server_side_encryption {\n     enabled = \"true\"\n   }"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["aws", "remove_dynamo_global_secondary_indices"],
    "notes": ""
  },
  {
    "url": "https://github.com/gstimac/terralab/commit/7696353632379532ab7006f9eda39fbf14e25532",
    "files": [
      {
        "filename": "azure/aks/main.tf",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "status": "modified",
        "patch": "@@ -16,7 +16,7 @@ resource \"azurerm_kubernetes_cluster\" \"aks\" {\n   location            = azurerm_resource_group.aks.location\n   resource_group_name = azurerm_resource_group.aks.name\n   dns_prefix          = var.dns_prefix\n-  #kubernetes_version      = \"1.20.2\"\n+  kubernetes_version      = \"1.23.5\"\n   private_cluster_enabled = false\n   tags                    = local.tags\n \n@@ -39,7 +39,7 @@ resource \"azurerm_kubernetes_cluster\" \"aks\" {\n \n   network_profile {\n     network_plugin    = \"kubenet\"\n-    load_balancer_sku = \"Standard\"\n+    load_balancer_sku = \"Basic\"\n     outbound_type     = \"loadBalancer\"\n   }\n \n@@ -59,26 +59,26 @@ resource \"azurerm_kubernetes_cluster\" \"aks\" {\n   }\n }\n \n-resource \"azurerm_kubernetes_cluster_node_pool\" \"nodepool\" {\n-  name                  = \"adospot\"\n-  kubernetes_cluster_id = azurerm_kubernetes_cluster.aks.id\n-  vm_size               = \"Standard_D2a_v4\"\n-  node_count            = 0\n-  min_count             = 0\n-  max_count             = 3\n-  priority              = \"Spot\"\n-  enable_auto_scaling   = var.enable_autoscaling\n-  eviction_policy       = \"Delete\"\n-  spot_max_price        = -1\n-  os_disk_size_gb       = \"30\"\n+# resource \"azurerm_kubernetes_cluster_node_pool\" \"nodepool\" {\n+#   name                  = \"adospot\"\n+#   kubernetes_cluster_id = azurerm_kubernetes_cluster.aks.id\n+#   vm_size               = \"Standard_D2a_v4\"\n+#   node_count            = 1\n+#   min_count             = 0\n+#   max_count             = 3\n+#   priority              = \"Spot\"\n+#   enable_auto_scaling   = var.enable_autoscaling\n+#   eviction_policy       = \"Delete\"\n+#   spot_max_price        = -1\n+#   os_disk_size_gb       = \"30\"\n \n-  node_labels = {\n-    \"kubernetes.azure.com/scalesetpriority\" = \"spot\"\n-    \"application\"                           = \"ADO\"\n-  }\n-  node_taints = [\n-    \"kubernetes.azure.com/scalesetpriority=spot:NoSchedule\"\n-  ]\n+#   node_labels = {\n+#     \"kubernetes.azure.com/scalesetpriority\" = \"spot\"\n+#     \"application\"                           = \"ADO\"\n+#   }\n+#   node_taints = [\n+#     \"kubernetes.azure.com/scalesetpriority=spot:NoSchedule\"\n+#   ]\n \n-  tags = local.tags\n-}\n+#   tags = local.tags\n+# }"
      },
      {
        "filename": "azure/aks/variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n variable \"ssh_public_key\" {\n-  default = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCswS+E1sd3b78oecd+rvlLAvxgKfyNd/a6vpU5iRzKj8Vpvmsu9L3V/O6AW6sBQTH2JHd0WHXNgVQx7anPgStu9BSuIOUtgeyic/buB/dxDex5iRXLB3mB72RhP/lu5PB//nl3TLwlXMIz8YZ9ABTsHAqfdFOcBizaLsxZMiYk27QJ1eiNn2nUOdD9DfmyqTBKgtzAkQw5ji5ylCOAjKi0/6fRYnMvDDqNt0gB1JuM1sDxptr/VsJNyIiBymg/di9RQET44G99ugKrQKfmuld++aBIn/DrMjW3l8SBphtIFoe0A8qK6YrGCScPMOcGOJazXmbFNKhbFeM59genmX6jZ9DzxI+19iSZM3nZSEWOiijhgqgz3tWCNtY2Hnd4W2Wf0TUPRXTnmJyFUwcImVLKY8q6DNNoSzqWMwzZsDp+8YmWSHBn2HwXdbm0JZ2RqRTqjJlYWVaB2W+7dYteo1HFz5fnVBFifiNtUtBBjp5sVLmCedI3dU+sl6Jac/cpZdX8R9ow4qlOUq5TruMNAhLLE2hihrb0GxxjJz+sH3HX/NIWY3jEPRdResyKjizQUBRIMp/o7JsaFhm+lzysfd+v3UiD9aPYvEEe6gtDab0Gnlw2KRFHgJeiuB38/ExGg0Ndxvkf5Q6+MOXVqKCzf0EelwwVNgh74Fal11a4Beru/Q== goran@DESKTOP-UFM55D3\"\n+  default = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCw/V7mahbD34hmQucJ34m/+jxBv4YtOD6R0xKt62lITPKKZlEeyfx4MkSI+kgi4S5hDlcEvDnggKnCld7v7JnD3ETUcf3OYnB011kOE3b6cyN65lZKRNMngzK7NjlEzohlHDhK/ZEOzI+YeQCAMQQAFyLYRiF4o2/lz5gm0Y1fPR8mJZqNppgT8b/+RSM1xi9szZS55ef6RB7bEjcGaE7+0tFTQJKt1wCkFtsnDdh6CX/bNhvdxAeh9bp8P/2vVy6zGsFsIhYroshyVq62a6n+Q/du69ikkYuVz11seZq/3NoODRQiySLcWOmWuTH5OJ9SzYcRdLqwYjLjO76qJs1CzXd5xnnDSq/GEQwFZJowt3VW2GaXtL3EYCM6KjR5tesZPq35e2LIfpQLxiVfl8jQtlUGfOiRIfgPjlL+fCO5Q/XpeauhPi99X+gI0MQCckej2ACGRNw1uHVOKzJU7SeMVPIWHEA7MekAymhPY9lqBZD0Ref9VO54yrELyepxYhw2/ZaU0attm9Fgdw814xQAiswh6FBdcFCljfEfqSLe/+QsJvhqxT+GHEEMqFvZmkxwn4jcfB6f3+5n3Qkm6m7udqbnp5tvzhIujTef+h7YKAbIbvdX2+yBkHfnpHxerIc7aT1OQ4hs2ErTLZWRporXXZPdh+xiWasCZg7CnEbFrQ== goran@m1.local\"\n }\n \n variable \"cluster_name\" {\n@@ -78,5 +78,5 @@ variable \"auto_scaling_max\" {\n }\n \n variable \"auto_scaling_min\" {\n-  default = \"0\"\n+  default = \"1\"\n }"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/naciriii/terraform-ec2-gitlab-runner/commit/f8af6bc22bd3d827566e7e65deb63c13cdaf6031",
    "files": [
      {
        "filename": "ec2-gb-runner/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n \n-resource \"aws_instance\" \"ec2-gb-runner\" {\n+resource \"aws_spot_instance_request\" \"ec2-gitlab-runner\" {\n   ami           = \"ami-085925f297f89fce1\"\n   instance_type = \"t2.micro\"\n   key_name      = \"nacer\""
      },
      {
        "filename": "ec2-gb-runner/output.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,13 +1,13 @@\n output \"ec2-runner-dns\" {\n-  value       = aws_instance.ec2-gb-runner.public_dns\n+  value       = aws_spot_instance_request.ec2-gitlab-runner.public_dns\n   description = \"Ec2 gitlab runner public dns\"\n }\n output \"ec2-runner-ip\" {\n-  value       = aws_instance.ec2-gb-runner.public_ip\n+  value       = aws_spot_instance_request.ec2-gitlab-runner.public_ip\n   description = \"Ec2 gitlab runner public dns\"\n }\n output \"ec2-runner-type\" {\n-  value = aws_instance.ec2-gb-runner.instance_type\n+  value = aws_spot_instance_request.ec2-gitlab-runner.instance_type\n }\n output \"gitlab_token\" {\n   value = var.gitlab_token"
      },
      {
        "filename": "main.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,5 +1,4 @@\n module \"ec2-gb-runner\" {\n   source       = \"./ec2-gb-runner\"\n   gitlab_token = \"NaeJX8TjF9itpqxcNHLt\"\n-  runners      = 4\n }"
      },
      {
        "filename": "output.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "added",
        "patch": "@@ -0,0 +1,14 @@\n+output \"ec2-runner-dns\" {\n+  value       = module.ec2-gb-runner.ec2-runner-dns\n+  description = \"Ec2 gitlab runner public dns\"\n+}\n+output \"ec2-runner-ip\" {\n+  value       = module.ec2-gb-runner.ec2-runner-ip\n+  description = \"Ec2 gitlab runner public dns\"\n+}\n+output \"ec2-runner-type\" {\n+  value = module.ec2-gb-runner.ec2-runner-type\n+}\n+output \"gitlab_token\" {\n+  value = module.ec2-gb-runner.gitlab_token\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "use_spot_instance"],
    "notes": "Use Spot instances 'to get cheaper instances/hour'"
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-aws-codepipeline/commit/cf842d48df037476a754b221f7b4115bb4f5ddf1",
    "files": [
      {
        "filename": "example/examplea/aws_s3_bucket.codepipeline.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -20,3 +20,11 @@ resource \"aws_s3_bucket\" \"codepipeline\" {\n   tags = var.common_tags\n \n }\n+\n+resource \"aws_s3_bucket_public_access_block\" \"pipeline\" {\n+  bucket                  = aws_s3_bucket.codepipeline.id\n+  restrict_public_buckets = true\n+  block_public_acls       = true\n+  block_public_policy     = true\n+  ignore_public_acls      = true\n+}"
      },
      {
        "filename": "example/examplea/examplea.auto.tfvars",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -35,23 +35,6 @@ stages = [\n       }\n     }\n   },\n-  {\n-    name    = \"Approval\"\n-    enabled = var.manual_approval\n-    action = {\n-      name      = \"Approval\"\n-      category  = \"Approval\"\n-      owner     = \"AWS\"\n-      provider  = \"Manual\"\n-      version   = \"1\"\n-      run_order = 3\n-      configuration = {\n-        NotificationArn    = var.approval_sns_arn\n-        CustomData         = var.approval_comment\n-        ExternalEntityLink = var.approval_url\n-      }\n-    }\n-  },\n   {\n     name = \"Deploy\"\n     action = {"
      },
      {
        "filename": "example/examplea/infracost-usage.yml",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "status": "added",
        "patch": "@@ -0,0 +1,64 @@\n+version: 0.1\n+resource_usage:\n+  aws_s3_bucket.codepipeline:\n+    glacier:\n+      early_delete_gb: 0\n+      monthly_bulk_data_retrieval_gb: 0\n+      monthly_bulk_data_retrieval_requests: 0\n+      monthly_bulk_select_data_returned_gb: 0\n+      monthly_bulk_select_data_scanned_gb: 0\n+      monthly_expedited_data_retrieval_gb: 0\n+      monthly_expedited_data_retrieval_requests: 0\n+      monthly_expedited_select_data_returned_gb: 0\n+      monthly_expedited_select_data_scanned_gb: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_standard_data_retrieval_gb: 0\n+      monthly_standard_data_retrieval_requests: 0\n+      monthly_standard_select_data_returned_gb: 0\n+      monthly_standard_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    glacier_deep_archive:\n+      early_delete_gb: 0\n+      monthly_bulk_data_retrieval_gb: 0\n+      monthly_bulk_data_retrieval_requests: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_standard_data_retrieval_gb: 0\n+      monthly_standard_data_retrieval_requests: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    intelligent_tiering:\n+      early_delete_gb: 0\n+      frequent_access_storage_gb: 0\n+      infrequent_access_storage_gb: 0\n+      monitored_objects: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+    object_tags: 0\n+    one_zone_infrequent_access:\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_retrieval_gb: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    standard:\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    standard_infrequent_access:\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_retrieval_gb: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0"
      },
      {
        "filename": "example/examplea/variables.tf",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -28,20 +28,3 @@ variable \"manual_approval\" {\n   description = \"Whether deployment requires manual approval or not\"\n   default     = false\n }\n-\n-variable \"approval_sns_arn\" {\n-  type        = string\n-  description = \"ARN of SNS channel approval notification will be sent to\"\n-}\n-\n-variable \"approval_comment\" {\n-  type        = string\n-  description = \"Optional approval message\"\n-  default     = \"\"\n-}\n-\n-variable \"approval_url\" {\n-  type        = string\n-  description = \"Optional URL to include in approval message\"\n-  default     = \"\"\n-}"
      },
      {
        "filename": "variables.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -14,7 +14,6 @@ variable \"role_arn\" {\n }\n \n variable \"stages\" {\n-  type        = any\n   description = \"This list describes each stage of the build\"\n }\n "
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Arkoprabho/TerraformTutorial/commit/ba317d7e402f014589e230fad8c7384016211ba2",
    "files": [
      {
        "filename": "tfstate/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -35,6 +35,7 @@ resource \"aws_s3_bucket\" \"state_bucket\" {\n \n resource \"aws_dynamodb_table\" \"terraform_locks\" {\n   name         = \"terraform-state-locks\"\n+  billing_mode = \"PAY_PER_REQUEST\"\n   hash_key     = \"LockID\"\n \n   attribute {"
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": ["aws", "dynamo_on_demand"],
    "notes": "Use PAY_PER_REQUEST billing mode for DynamoDB"
  },
  {
    "url": "https://github.com/Kalmalyzer/UE-Jenkins-BuildSystem/commit/636097557e403eb1d6b6211b09e30c47e7f39466",
    "files": [
      {
        "filename": "infrastructure/services/kubernetes_cluster/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -58,7 +58,7 @@ module \"kubernetes_cluster\" {\n \n     {\n       name               = \"jenkins-agent-linux-node-pool\"\n-      machine_type       = \"n1-standard-32\"\n+      machine_type       = \"n1-standard-16\"\n       node_locations     = var.zone\n       min_count          = 0\n       max_count          = 10\n@@ -75,7 +75,7 @@ module \"kubernetes_cluster\" {\n \n     {\n       name               = \"jenkins-agent-windows-node-pool\"\n-      machine_type       = \"n1-standard-32\"\n+      machine_type       = \"n1-standard-16\"\n       node_locations     = var.zone\n       min_count          = 0\n       max_count          = 10"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["gcp", "cheaper_instance"],
    "notes": "Move from n1-standard-32 to n1-standard-16"
  },
  {
    "url": "https://github.com/Kalmalyzer/UE-Jenkins-BuildSystem/commit/ee8942b2c5d59546dd3b3be5f2cb88500d0fe1be",
    "files": [
      {
        "filename": "environments/kalms/agents/terraform.tfvars",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -26,31 +26,31 @@ dynamic_agent_templates = {\n     linux = {\n         \"build-engine-linux-dynamic\" = {\n             machine_type = \"n1-standard-32\"\n-            boot_disk_type = \"pd-balanced\"\n+            boot_disk_type = \"pd-standard\"\n             boot_disk_size = 50\n-            persistent_disk_type = \"pd-balanced\"\n+            persistent_disk_type = \"pd-standard\"\n             persistent_disk_size = 200\n         }\n \n         \"build-game-linux-dynamic\" = {\n             machine_type = \"n1-standard-8\"\n-            boot_disk_type = \"pd-balanced\"\n+            boot_disk_type = \"pd-standard\"\n             boot_disk_size = 50\n-            persistent_disk_type = \"pd-balanced\"\n+            persistent_disk_type = \"pd-standard\"\n             persistent_disk_size = 200\n         }\n     }\n \n     windows = {\n         \"build-engine-win64-dynamic\" = {\n             machine_type = \"n1-standard-32\"\n-            boot_disk_type = \"pd-balanced\"\n+            boot_disk_type = \"pd-standard\"\n             boot_disk_size = 500\n         }\n \n         \"build-game-win64-dynamic\" = {\n             machine_type = \"n1-standard-8\"\n-            boot_disk_type = \"pd-balanced\"\n+            boot_disk_type = \"pd-standard\"\n             boot_disk_size = 200\n         }\n     }\n@@ -60,17 +60,17 @@ static_agent_templates = {\n     linux = {\n         \"build-linux-static\" = {\n             machine_type = \"n1-standard-8\"\n-            boot_disk_type = \"pd-balanced\"\n+            boot_disk_type = \"pd-standard\"\n             boot_disk_size = 50\n-            persistent_disk_type = \"pd-balanced\"\n+            persistent_disk_type = \"pd-standard\"\n             persistent_disk_size = 300\n         }\n     }\n \n     windows = {\n         \"build-win64-static\" = {\n             machine_type = \"n1-standard-8\"\n-            boot_disk_type = \"pd-balanced\"\n+            boot_disk_type = \"pd-standard\"\n             boot_disk_size = 600\n         }\n     }"
      },
      {
        "filename": "environments/kalms/kubernetes/terraform.tfvars",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -12,7 +12,7 @@ node_pools = {\n         \"jenkins-agent-linux-node-pool\" = {\n             os = \"linux\"\n             machine_type = \"n1-standard-16\"\n-            disk_type = \"pd-balanced\"\n+            disk_type = \"pd-standard\"\n             disk_size = 300         # Dimensioned to have enough storage to run a \"build engine linux\" job without a separate PVC\n             min_nodes = 0\n             max_nodes = 2\n@@ -21,7 +21,7 @@ node_pools = {\n         \"jenkins-agent-windows-node-pool\" = {\n             os = \"windows\"\n             machine_type = \"n1-standard-16\"\n-            disk_type = \"pd-balanced\"\n+            disk_type = \"pd-standard\"\n             disk_size = 500         # Dimensioned to have enough storage to run a \"build engine win64\" job without a separate PVC\n             min_nodes = 0\n             max_nodes = 2"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["gcp", "cheaper_disk_type"],
    "notes": "Move from pd-balanced to pd-standard"
  },
  {
    "url": "https://github.com/forgotpw/forgotpw-infrastructure/commit/f4363ad27d366385f2388d073ce8af796e035406",
    "files": [
      {
        "filename": "terraform/dev/dev-us-east-1/billing-alert.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+module \"billing_alert\" {\n+  source = \"billtrust/billing-alarm/aws\"\n+\n+  # Will be appended to SNS topic and alarm name\n+  aws_env = \"${var.environment}\"\n+  # Alarm when estimated monthly charges are above this amount\n+  monthly_billing_threshold = \"${var.monthly_billing_threshold}\"\n+  # Currency is optional and defaults to USD\n+  currency = \"USD\"\n+}"
      },
      {
        "filename": "terraform/dev/dev-us-east-1/dev-variables.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+variable \"monthly_billing_threshold\" {\n+  default = 50\n+}"
      },
      {
        "filename": "terraform/prod/prod-us-east-1/billing-alert.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+module \"billing_alert\" {\n+  source = \"billtrust/billing-alarm/aws\"\n+\n+  # Will be appended to SNS topic and alarm name\n+  aws_env = \"${var.environment}\"\n+  # Alarm when estimated monthly charges are above this amount\n+  monthly_billing_threshold = \"${var.monthly_billing_threshold}\"\n+  # Currency is optional and defaults to USD\n+  currency = \"USD\"\n+}"
      },
      {
        "filename": "terraform/prod/prod-us-east-1/prod-variables.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+variable \"monthly_billing_threshold\" {\n+  default = 50\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/dshmelev/aws_kube_tc/commit/853298ac74250964aa2d2ea921daa5905528b3a9",
    "files": [
      {
        "filename": "tf/kubernetes.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -197,7 +197,7 @@ resource \"aws_launch_configuration\" \"master-us-west-2a-masters-k8s-dshmelev-net\"\n resource \"aws_launch_configuration\" \"nodes-k8s-dshmelev-net\" {\n   name_prefix                 = \"nodes.k8s.dshmelev.net-\"\n   image_id                    = \"ami-ac58c0cc\"\n-  instance_type               = \"t2.medium\"\n+  instance_type               = \"t2.small\"\n   key_name                    = \"${aws_key_pair.kubernetes-k8s-dshmelev-net-0a3bb97b55cb3871af607ed429d1a02e.id}\"\n   iam_instance_profile        = \"${aws_iam_instance_profile.nodes-k8s-dshmelev-net.id}\"\n   security_groups             = [\"${aws_security_group.nodes-k8s-dshmelev-net.id}\"]"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from t2.medium to t2.small"
  },
  {
    "url": "https://github.com/sworisbreathing/splunk-refactor-poc/commit/5be96c3735b14c16dbe87f4c544f5ab1c75ab93a",
    "files": [
      {
        "filename": "resources_aws_mgmt.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -18,7 +18,7 @@ resource \"aws_instance\" \"splk_srv_standalone\" {\n     client = \"ecetera\"\n     notify = \"steven.swor@ecetera.com.au\"\n     Name = \"techtalk-splunk-aws-terraform-ansible-standalone\"\n-    \"auto:stop\" = \"*/15 * * * *\"\n+    \"auto:stop\" = \"*/60 * * * *\"\n   }\n \n }"
      },
      {
        "filename": "resources_aws_prd.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -17,7 +17,7 @@ resource \"aws_instance\" \"splk_fwd_prd\" {\n     client = \"ecetera\"\n     notify = \"steven.swor@ecetera.com.au\"\n     Name = \"techtalk-splunk-aws-terraform-ansible-prd\"\n-    \"auto:stop\" = \"*/15 * * * *\"\n+    \"auto:stop\" = \"*/60 * * * *\"\n   }\n \n }"
      },
      {
        "filename": "resources_aws_qat.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -17,7 +17,7 @@ resource \"aws_instance\" \"splk_fwd_qat\" {\n     client = \"ecetera\"\n     notify = \"steven.swor@ecetera.com.au\"\n     Name = \"techtalk-splunk-aws-terraform-ansible-qat\"\n-    \"auto:stop\" = \"*/15 * * * *\"\n+    \"auto:stop\" = \"*/60 * * * *\"\n   }\n \n }"
      },
      {
        "filename": "resources_aws_stg.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -17,7 +17,7 @@ resource \"aws_instance\" \"splk_fwd_stg\" {\n     client = \"ecetera\"\n     notify = \"steven.swor@ecetera.com.au\"\n     Name = \"techtalk-splunk-aws-terraform-ansible-stg\"\n-    \"auto:stop\" = \"*/15 * * * *\"\n+    \"auto:stop\" = \"*/60 * * * *\"\n   }\n \n }"
      },
      {
        "filename": "resources_aws_uat.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -17,7 +17,7 @@ resource \"aws_instance\" \"splk_fwd_uat\" {\n     client = \"ecetera\"\n     notify = \"steven.swor@ecetera.com.au\"\n     Name = \"techtalk-splunk-aws-terraform-ansible-uat\"\n-    \"auto:stop\" = \"*/15 * * * *\"\n+    \"auto:stop\" = \"*/60 * * * *\"\n   }\n \n }"
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": ["aws", "auto_stop_1h"],
    "notes": "Set auto_stop for aws_instances to 1h since that is the minimum billing period according to the commit"
  },
  {
    "url": "https://github.com/pvandervelde/infrastructure.azure.core.network.hub/commit/0ecf0a154918bd9bdc0f53557bc1f80920da6b14",
    "files": [
      {
        "filename": "src/hub.tf",
        "additions": 0,
        "deletions": 211,
        "changes": 211,
        "status": "modified",
        "patch": "@@ -141,21 +141,6 @@ locals {\n   merged_dmz_nsg_rules = flatten([\r\n     for nsg in var.dmz_nsg_rules : merge(local.default_nsg_rule, nsg)\r\n   ])\r\n-\r\n-  nat_rules = { for idx, rule in var.firewall_nat_rules : rule.name => {\r\n-    idx : idx,\r\n-    rule : rule,\r\n-  } }\r\n-\r\n-  network_rules = { for idx, rule in var.firewall_network_rules : rule.name => {\r\n-    idx : idx,\r\n-    rule : rule,\r\n-  } }\r\n-\r\n-  application_rules = { for idx, rule in var.firewall_application_rules : rule.name => {\r\n-    idx : idx,\r\n-    rule : rule,\r\n-  } }\r\n }\r\n \r\n # Diagnostics\r\n@@ -288,19 +273,6 @@ resource \"azurerm_advanced_threat_protection\" \"threat_protection\" {\n   target_resource_id = azurerm_storage_account.storage.id\r\n }\r\n \r\n-#\r\n-# DDos protection plan\r\n-#\r\n-\r\n-resource \"azurerm_network_ddos_protection_plan\" \"ddos_protection\" {\r\n-  count = var.create_ddos_plan ? 1 : 0\r\n-  location = var.location\r\n-  name  = \"{local.name_prefix_tf}-ddos\"\r\n-  resource_group_name = azurerm_resource_group.rg.name\r\n-\r\n-  tags = merge( local.common_tags, local.extra_tags, var.tags )\r\n-}\r\n-\r\n #\r\n # Hub network with subnets\r\n #\r\n@@ -312,15 +284,6 @@ resource \"azurerm_virtual_network\" \"vnet\" {\n   resource_group_name = azurerm_resource_group.rg.name\r\n \r\n   tags = merge( local.common_tags, local.extra_tags, var.tags )\r\n-\r\n-  dynamic \"ddos_protection_plan\" {\r\n-    for_each = var.create_ddos_plan ? [true] : []\r\n-    iterator = ddos\r\n-    content {\r\n-      id     = azurerm_network_ddos_protection_plan.ddos_protection.id\r\n-      enable = true\r\n-    }\r\n-  }\r\n }\r\n \r\n # Set the user principals who are allowed to peer vnets\r\n@@ -368,7 +331,6 @@ resource \"azurerm_subnet\" \"firewall\" {\n   address_prefixes = [ cidrsubnet(var.address_space, 2, 0) ]\r\n   name = \"AzureFirewallSubnet\" # Must be named like this\r\n   resource_group_name = azurerm_resource_group.rg.name\r\n-  service_endpoints = var.service_endpoints\r\n   virtual_network_name = azurerm_virtual_network.vnet.name\r\n }\r\n \r\n@@ -429,15 +391,6 @@ resource \"azurerm_route_table\" \"out\" {\n   tags = merge( local.common_tags, local.extra_tags, var.tags )\r\n }\r\n \r\n-resource \"azurerm_route\" \"fw\" {\r\n-  address_prefix = \"0.0.0.0/0\"\r\n-  name = \"${local.name_prefix_tf}-r-firewall\"\r\n-  next_hop_in_ip_address = azurerm_firewall.fw.ip_configuration.0.private_ip_address\r\n-  next_hop_type = \"VirtualAppliance\"\r\n-  resource_group_name = azurerm_resource_group.rg.name\r\n-  route_table_name = azurerm_route_table.out.name\r\n-}\r\n-\r\n resource \"azurerm_subnet_route_table_association\" \"mgmt\" {\r\n   route_table_id = azurerm_route_table.out.id\r\n   subnet_id = azurerm_subnet.mgmt.id\r\n@@ -639,167 +592,3 @@ resource \"azurerm_role_assignment\" \"dns\" {\n   role_definition_name = \"Private DNS Zone Contributor\"\r\n   scope = azurerm_private_dns_zone.main[0].id\r\n }\r\n-\r\n-#\r\n-# Firewall\r\n-#\r\n-\r\n-resource \"azurerm_public_ip_prefix\" \"fw\" {\r\n-  location = azurerm_resource_group.rg.location\r\n-  name = \"${local.name_prefix_tf}-pippre\"\r\n-  prefix_length = var.public_ip_prefix_length\r\n-  resource_group_name = azurerm_resource_group.rg.name\r\n-  tags = merge( local.common_tags, local.extra_tags, var.tags )\r\n-}\r\n-\r\n-resource \"random_string\" \"dns\" {\r\n-  length = 6\r\n-  special = false\r\n-  upper = false\r\n-}\r\n-\r\n-resource \"azurerm_public_ip\" \"fw\" {\r\n-  allocation_method = \"Static\"\r\n-  domain_name_label = format(\"%s%sfw%s\", lower(replace(var.category, \"/[[:^alnum:]]/\", \"\")), lower(replace(var.public_ip_name, \"/[[:^alnum:]]/\", \"\")), random_string.dns.result)\r\n-  location = azurerm_resource_group.rg.location\r\n-  name = \"${local.name_prefix_tf}-pip-fw\"\r\n-  public_ip_prefix_id = azurerm_public_ip_prefix.fw.id\r\n-  resource_group_name = azurerm_resource_group.rg.name\r\n-  sku = \"Standard\"\r\n-  tags = merge( local.common_tags, local.extra_tags, var.tags )\r\n-}\r\n-\r\n-resource \"azurerm_monitor_diagnostic_setting\" \"fw_pip\" {\r\n-  log_analytics_workspace_id     = data.azurerm_log_analytics_workspace.log_analytics_workspace.id\r\n-  name                           = \"${local.name_prefix_tf}-mds-fw-pip\"\r\n-  target_resource_id             = azurerm_public_ip.fw.id\r\n-\r\n-  dynamic \"log\" {\r\n-    for_each = setintersection(local.parsed_diag.log, local.diag_pip_logs)\r\n-    content {\r\n-      category = log.value\r\n-\r\n-      retention_policy {\r\n-        enabled = false\r\n-      }\r\n-    }\r\n-  }\r\n-\r\n-  dynamic \"metric\" {\r\n-    for_each = setintersection(local.parsed_diag.metric, local.diag_pip_metrics)\r\n-    content {\r\n-      category = metric.value\r\n-\r\n-      retention_policy {\r\n-        enabled = false\r\n-      }\r\n-    }\r\n-  }\r\n-}\r\n-\r\n-resource \"azurerm_firewall\" \"fw\" {\r\n-  location = azurerm_resource_group.rg.location\r\n-  name = \"${local.name_prefix_tf}-fw\"\r\n-  resource_group_name = azurerm_resource_group.rg.name\r\n-  zones = var.firewall_zones\r\n-\r\n-  ip_configuration {\r\n-    name = var.public_ip_name\r\n-    subnet_id = azurerm_subnet.firewall.id\r\n-    public_ip_address_id = azurerm_public_ip.fw.id\r\n-  }\r\n-\r\n-  # Avoid changes when adding more public ips manually to firewall\r\n-  lifecycle {\r\n-    ignore_changes = [\r\n-      ip_configuration,\r\n-    ]\r\n-  }\r\n-\r\n-  tags = merge( local.common_tags, local.extra_tags, var.tags )\r\n-}\r\n-\r\n-resource \"azurerm_monitor_diagnostic_setting\" \"fw\" {\r\n-  count                          = 1\r\n-  log_analytics_workspace_id     = data.azurerm_log_analytics_workspace.log_analytics_workspace.id\r\n-  name                           = \"${local.name_prefix_tf}-mds-fw\"\r\n-  target_resource_id             = azurerm_firewall.fw.id\r\n-\r\n-  dynamic \"log\" {\r\n-    for_each = setintersection(local.parsed_diag.log, local.diag_fw_logs)\r\n-    content {\r\n-      category = log.value\r\n-\r\n-      retention_policy {\r\n-        enabled = false\r\n-      }\r\n-    }\r\n-  }\r\n-\r\n-  dynamic \"metric\" {\r\n-    for_each = setintersection(local.parsed_diag.metric, local.diag_fw_metrics)\r\n-    content {\r\n-      category = metric.value\r\n-\r\n-      retention_policy {\r\n-        enabled = false\r\n-      }\r\n-    }\r\n-  }\r\n-}\r\n-\r\n-resource \"azurerm_firewall_application_rule_collection\" \"fw\" {\r\n-  action = each.value.rule.action\r\n-  azure_firewall_name = azurerm_firewall.fw.name\r\n-  for_each = local.application_rules\r\n-  name = \"${local.name_prefix_tf}-fwappr-${each.key}\"\r\n-  priority = 100 * (each.value.idx + 1)\r\n-  resource_group_name = azurerm_resource_group.rg.name\r\n-\r\n-  rule {\r\n-    name = each.key\r\n-    source_addresses = each.value.rule.source_addresses\r\n-    target_fqdns = each.value.rule.target_fqdns\r\n-\r\n-    protocol {\r\n-      type = each.value.rule.protocol.type\r\n-      port = each.value.rule.protocol.port\r\n-    }\r\n-  }\r\n-}\r\n-\r\n-resource \"azurerm_firewall_network_rule_collection\" \"fw\" {\r\n-  action = each.value.rule.action\r\n-  azure_firewall_name = azurerm_firewall.fw.name\r\n-  for_each = local.network_rules\r\n-  name = \"${local.name_prefix_tf}-fwnwr-${each.key}\"\r\n-  priority = 100 * (each.value.idx + 1)\r\n-  resource_group_name = azurerm_resource_group.rg.name\r\n-\r\n-  rule {\r\n-    name = each.key\r\n-    source_addresses = each.value.rule.source_addresses\r\n-    destination_ports = each.value.rule.destination_ports\r\n-    destination_addresses = [for dest in each.value.rule.destination_addresses : contains(var.public_ip_name, dest) ? azurerm_public_ip.fw[dest].ip_address : dest]\r\n-    protocols = each.value.rule.protocols\r\n-  }\r\n-}\r\n-\r\n-resource \"azurerm_firewall_nat_rule_collection\" \"fw\" {\r\n-  action = each.value.rule.action\r\n-  azure_firewall_name = azurerm_firewall.fw.name\r\n-  for_each = local.nat_rules\r\n-  name = \"${local.name_prefix_tf}-fwnatr-${each.key}\"\r\n-  priority = 100 * (each.value.idx + 1)\r\n-  resource_group_name = azurerm_resource_group.rg.name\r\n-\r\n-  rule {\r\n-    name = each.key\r\n-    source_addresses = each.value.rule.source_addresses\r\n-    destination_ports = each.value.rule.destination_ports\r\n-    destination_addresses = [for dest in each.value.rule.destination_addresses : contains(var.public_ip_name, dest) ? azurerm_public_ip.fw[dest].ip_address : dest]\r\n-    protocols = each.value.rule.protocols\r\n-    translated_address = each.value.rule.translated_address\r\n-    translated_port = each.value.rule.translated_port\r\n-  }\r\n-}\r"
      },
      {
        "filename": "src/variables.tf",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "status": "modified",
        "patch": "@@ -44,16 +44,6 @@ variable \"address_space\" {\n     description = \"The full address space that is used the virtual network. Requires at least a /24 address space.\"\r\n }\r\n \r\n-#\r\n-# NETWORK - DDOS\r\n-#\r\n-\r\n-variable \"create_ddos_plan\" {\r\n-  description = \"Create a DDos protection plan and attach to vnet.\"\r\n-  type = bool\r\n-  default = false\r\n-}\r\n-\r\n #\r\n # NETWORK - DNS\r\n #\r\n@@ -63,64 +53,6 @@ variable \"private_dns_zone\" {\n   default = \"hub.azure.calvinverse.net\"\r\n }\r\n \r\n-#\r\n-# NETWORK - FIREWALL\r\n-#\r\n-\r\n-variable \"firewall_zones\" {\r\n-  default = null\r\n-  description = \"A collection of availability zones to spread the Firewall over.\"\r\n-  type = list(string)\r\n-}\r\n-\r\n-variable \"firewall_application_rules\" {\r\n-  default = []\r\n-  description = \"List of application rules to apply to firewall.\"\r\n-  type = list(object({ name = string, action = string, source_addresses = list(string), target_fqdns = list(string), protocol = object({ type = string, port = string }) }))\r\n-}\r\n-\r\n-variable \"firewall_network_rules\" {\r\n-  default = []\r\n-  description = \"List of network rules to apply to firewall.\"\r\n-  type = list(object({ name = string, action = string, source_addresses = list(string), destination_ports = list(string), destination_addresses = list(string), protocols = list(string) }))\r\n-}\r\n-\r\n-variable \"firewall_nat_rules\" {\r\n-  default = []\r\n-  description = \"List of nat rules to apply to firewall.\"\r\n-  type = list(object({ name = string, action = string, source_addresses = list(string), destination_ports = list(string), destination_addresses = list(string), protocols = list(string), translated_address = string, translated_port = string }))\r\n-}\r\n-\r\n-variable \"service_endpoints\" {\r\n-  description = \"Service endpoints to add to the firewall subnet.\"\r\n-  type        = list(string)\r\n-  default = [\r\n-    \"Microsoft.AzureActiveDirectory\",\r\n-    \"Microsoft.AzureCosmosDB\",\r\n-    \"Microsoft.EventHub\",\r\n-    \"Microsoft.KeyVault\",\r\n-    \"Microsoft.ServiceBus\",\r\n-    \"Microsoft.Sql\",\r\n-    \"Microsoft.Storage\",\r\n-  ]\r\n-}\r\n-\r\n-#\r\n-# NETWORK - PUBLIC IP\r\n-#\r\n-\r\n-variable \"public_ip_name\" {\r\n-  default = \"fw-public\"\r\n-  description = \"Public ip is the ip name that are connected to the firewall.\"\r\n-  type = string\r\n-}\r\n-\r\n-variable \"public_ip_prefix_length\" {\r\n-  default = 30\r\n-  description = \"Specifies the number of bits of the prefix. The value can be set between 24 (256 addresses) and 31 (2 addresses).\"\r\n-  type = number\r\n-}\r\n-\r\n #\r\n # NETWORK - SECURITY RULES\r\n #\r"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["azure", "remove_firewall"],
    "notes": "Stop using firewall because of cost and lack of public IP"
  },
  {
    "url": "https://github.com/yardbirdsax/elasticsearch-the-hard-way/commit/521bae59a4002a616eac44c1681ca5066bbd00c8",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1 +1,2 @@\n-terraform/.terraform/*\n\\ No newline at end of file\n+terraform/.terraform/*\n+terraform/*.tfstate*\n\\ No newline at end of file"
      },
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -10,7 +10,7 @@ This is a series of lessons on how to bootstrap and secure an Elasticsearch clus\n \n At the moment, this tutorial is using AWS EC2 instances as the base of the lab. I hope in the future to enable provisioning of resources in other cloud platforms, most notably Microsoft Azure and Google Cloud Platform.\n \n-At present time (October of 2019), the full lab will cost you around $375 per month if left running full time (or about $0.50 per hour), so it would be wise to ensure the instances are deallocated (but not terminated!) when not in use to save costs. You could arguably use smaller instances, however in trying to replicate what a small sized production deployment might look like I decided to go with the t3.xlarge (4CPU and 16GB RAM) size.\n+At present time (October of 2019), the full lab will cost you around $45 per month if left running full time, so it would be wise to ensure the instances are deallocated (but not terminated!) when not in use to save costs.\n \n Before proceeding, you'll need to install [Terraform](https://terraform.io), the [AWS CLI](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html), and ensure that you have the AWS CLI configured (don't use your root key!).\n "
      },
      {
        "filename": "terraform/default.tfvars",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n cidrBlock = \"10.150.0.0/24\"\n sshPubKeyFilePath = \"~/.ssh/id_rsa.pub\"\n-nodeCount = 3\n\\ No newline at end of file\n+nodeCount = 3\n+nodeSize = \"t3.small\"\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -78,6 +78,7 @@ module \"masterNode\" {\n   subnetId = aws_subnet.es-labSubnet.id\n   securityGroupId = aws_security_group.es-labSG.id\n   keyName = aws_key_pair.es-labKeyPair.key_name\n+  nodeSize = var.nodeSize\n }\n \n resource aws_route_table \"es-labRouteTable\" {"
      },
      {
        "filename": "terraform/modules/node-module/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -13,7 +13,7 @@ EOF\n resource aws_instance \"instance\" {\n   \n   ami = var.amiId\n-  instance_type = \"t2.small\"\n+  instance_type = var.nodeSize\n   tags = {\n     Name = \"${var.instanceName}-${count.index}\"\n   }"
      },
      {
        "filename": "terraform/modules/node-module/variables.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -7,6 +7,9 @@ variable \"instanceName\" {\n variable \"nodeCount\" {\n     type = number\n }\n+variable \"nodeSize\" {\n+    type = string\n+}\n variable \"subnetId\" {\n     type = string\n }"
      },
      {
        "filename": "terraform/terraform.tfstate",
        "additions": 0,
        "deletions": 701,
        "changes": 701,
        "status": "removed",
        "patch": "@@ -1,701 +0,0 @@\n-{\n-  \"version\": 4,\n-  \"terraform_version\": \"0.12.8\",\n-  \"serial\": 46,\n-  \"lineage\": \"66c52e56-9b49-72e7-eb1b-bacbfbe7b6bb\",\n-  \"outputs\": {\n-    \"dnsNames\": {\n-      \"value\": \"ec2-3-232-114-110.compute-1.amazonaws.com,ec2-34-231-15-64.compute-1.amazonaws.com,ec2-3-232-103-131.compute-1.amazonaws.com\",\n-      \"type\": \"string\"\n-    }\n-  },\n-  \"resources\": [\n-    {\n-      \"mode\": \"data\",\n-      \"type\": \"aws_ami\",\n-      \"name\": \"ubuntu\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"architecture\": \"x86_64\",\n-            \"block_device_mappings\": [\n-              {\n-                \"device_name\": \"/dev/sda1\",\n-                \"ebs\": {\n-                  \"delete_on_termination\": \"true\",\n-                  \"encrypted\": \"false\",\n-                  \"iops\": \"0\",\n-                  \"snapshot_id\": \"snap-0b2ce82fbce9ea451\",\n-                  \"volume_size\": \"8\",\n-                  \"volume_type\": \"gp2\"\n-                },\n-                \"no_device\": \"\",\n-                \"virtual_name\": \"\"\n-              },\n-              {\n-                \"device_name\": \"/dev/sdb\",\n-                \"ebs\": {},\n-                \"no_device\": \"\",\n-                \"virtual_name\": \"ephemeral0\"\n-              },\n-              {\n-                \"device_name\": \"/dev/sdc\",\n-                \"ebs\": {},\n-                \"no_device\": \"\",\n-                \"virtual_name\": \"ephemeral1\"\n-              }\n-            ],\n-            \"creation_date\": \"2019-10-21T22:21:16.000Z\",\n-            \"description\": \"Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2019-10-21\",\n-            \"executable_users\": null,\n-            \"filter\": [\n-              {\n-                \"name\": \"name\",\n-                \"values\": [\n-                  \"ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*\"\n-                ]\n-              }\n-            ],\n-            \"hypervisor\": \"xen\",\n-            \"id\": \"ami-0d5ae5525eb033d0a\",\n-            \"image_id\": \"ami-0d5ae5525eb033d0a\",\n-            \"image_location\": \"099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191021\",\n-            \"image_owner_alias\": null,\n-            \"image_type\": \"machine\",\n-            \"kernel_id\": null,\n-            \"most_recent\": true,\n-            \"name\": \"ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20191021\",\n-            \"name_regex\": null,\n-            \"owner_id\": \"099720109477\",\n-            \"owners\": [\n-              \"099720109477\"\n-            ],\n-            \"platform\": null,\n-            \"product_codes\": [],\n-            \"public\": true,\n-            \"ramdisk_id\": null,\n-            \"root_device_name\": \"/dev/sda1\",\n-            \"root_device_type\": \"ebs\",\n-            \"root_snapshot_id\": \"snap-0b2ce82fbce9ea451\",\n-            \"sriov_net_support\": \"simple\",\n-            \"state\": \"available\",\n-            \"state_reason\": {\n-              \"code\": \"UNSET\",\n-              \"message\": \"UNSET\"\n-            },\n-            \"tags\": {},\n-            \"virtualization_type\": \"hvm\"\n-          }\n-        }\n-      ]\n-    },\n-    {\n-      \"module\": \"module.masterNode\",\n-      \"mode\": \"data\",\n-      \"type\": \"template_cloudinit_config\",\n-      \"name\": \"userData\",\n-      \"each\": \"list\",\n-      \"provider\": \"provider.template\",\n-      \"instances\": [\n-        {\n-          \"index_key\": 0,\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"base64_encode\": true,\n-            \"gzip\": true,\n-            \"id\": \"218757515\",\n-            \"part\": [\n-              {\n-                \"content\": \"#cloud-config\\r\\n---\\r\\nhostname: \\\"es-master-0\\\"\\r\\n\",\n-                \"content_type\": \"text/cloud-config\",\n-                \"filename\": \"\",\n-                \"merge_type\": \"\"\n-              }\n-            ],\n-            \"rendered\": \"H4sIAAAAAAAA/2TOv2rDMBDH8V2gdxDqfLU7FVQ69I+HDm6hJIGMsnV2BNbJSGew3z44Q3DwePDhvr+vSIzEcFhGNCpMA/vRJi6Cn9G9qSZO5Gxa3nX9U1eff8ff74//sxbrBSdM2Ucy6uW5lEIKgC2S4v47WcodJqiojc5Tb9Rr43kDbnHGmYt2iJODNlLneylqH3CXeXo0ACDFJWYmG9AojRmCzYwJSr1fteJrAAAA//9wnB199AAAAA==\"\n-          }\n-        },\n-        {\n-          \"index_key\": 1,\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"base64_encode\": true,\n-            \"gzip\": true,\n-            \"id\": \"2335475843\",\n-            \"part\": [\n-              {\n-                \"content\": \"#cloud-config\\r\\n---\\r\\nhostname: \\\"es-master-1\\\"\\r\\n\",\n-                \"content_type\": \"text/cloud-config\",\n-                \"filename\": \"\",\n-                \"merge_type\": \"\"\n-              }\n-            ],\n-            \"rendered\": \"H4sIAAAAAAAA/2TOv2rDMBDH8V2gdxDqfHU9FVQ69I+HDm6hJIGMsnV2BNbJSGew3z44Q3DwePDhvr+vSIzEcFhGNCpMA/vRJi6Cn9G9qSZO5Gxa3nX9U1eff8ff74//sxbrBSdM2Ucyqnx+kUIKgC2S4v47WcodJqiojc5Tb9Rr43kDbnHGmYt2iJODNlLneylqH3CXeXo0ACDFJWYmG9AojRmCzYwJSr1fteJrAAAA//9X+Tj89AAAAA==\"\n-          }\n-        },\n-        {\n-          \"index_key\": 2,\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"base64_encode\": true,\n-            \"gzip\": true,\n-            \"id\": \"3472162860\",\n-            \"part\": [\n-              {\n-                \"content\": \"#cloud-config\\r\\n---\\r\\nhostname: \\\"es-master-2\\\"\\r\\n\",\n-                \"content_type\": \"text/cloud-config\",\n-                \"filename\": \"\",\n-                \"merge_type\": \"\"\n-              }\n-            ],\n-            \"rendered\": \"H4sIAAAAAAAA/2TOv2rDMBDH8V2gdxDqfHXbpaDSoX88dHADIQlklK2zI7BORjqD/fbBGYKDx4MP9/39RGIkhsM8oFFh7NkPNnER/ITuQ9VxJGfT/Kmrv6r83h3/f7/2Zy2WC06Yso9k1OvzixRSAKyRFPffyVJuMUFJTXSeOqPea88rcIszTlw0fRwdNJFa30lR+YCbzNOjAQApLjEz2YBGacwQbGZM8Ka3qxZ8DQAA//9/UCak9AAAAA==\"\n-          }\n-        }\n-      ]\n-    },\n-    {\n-      \"module\": \"module.masterNode\",\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_eip\",\n-      \"name\": \"elasticIp\",\n-      \"each\": \"list\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"index_key\": 0,\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"allocation_id\": null,\n-            \"associate_with_private_ip\": null,\n-            \"association_id\": \"eipassoc-0970deb1c04e84cab\",\n-            \"domain\": \"vpc\",\n-            \"id\": \"eipalloc-07ef8effda8876022\",\n-            \"instance\": \"i-0aa82b109639b9554\",\n-            \"network_interface\": \"eni-0648cebb98dfb81a2\",\n-            \"private_dns\": \"ip-10-150-0-148.ec2.internal\",\n-            \"private_ip\": \"10.150.0.148\",\n-            \"public_dns\": \"ec2-3-232-114-110.compute-1.amazonaws.com\",\n-            \"public_ip\": \"3.232.114.110\",\n-            \"public_ipv4_pool\": \"amazon\",\n-            \"tags\": null,\n-            \"timeouts\": null,\n-            \"vpc\": true\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==\",\n-          \"depends_on\": [\n-            \"aws_instance.instance\"\n-          ]\n-        },\n-        {\n-          \"index_key\": 1,\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"allocation_id\": null,\n-            \"associate_with_private_ip\": null,\n-            \"association_id\": \"eipassoc-087b8f2b3364553c2\",\n-            \"domain\": \"vpc\",\n-            \"id\": \"eipalloc-018c655ff079833b4\",\n-            \"instance\": \"i-0aa335c90e4e94924\",\n-            \"network_interface\": \"eni-0325f064f1525e58e\",\n-            \"private_dns\": \"ip-10-150-0-204.ec2.internal\",\n-            \"private_ip\": \"10.150.0.204\",\n-            \"public_dns\": \"ec2-34-231-15-64.compute-1.amazonaws.com\",\n-            \"public_ip\": \"34.231.15.64\",\n-            \"public_ipv4_pool\": \"amazon\",\n-            \"tags\": null,\n-            \"timeouts\": null,\n-            \"vpc\": true\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==\",\n-          \"depends_on\": [\n-            \"aws_instance.instance\"\n-          ]\n-        },\n-        {\n-          \"index_key\": 2,\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"allocation_id\": null,\n-            \"associate_with_private_ip\": null,\n-            \"association_id\": \"eipassoc-050cca29416a3d3c4\",\n-            \"domain\": \"vpc\",\n-            \"id\": \"eipalloc-05d2c55041384a79a\",\n-            \"instance\": \"i-0c8ab124d74788c1d\",\n-            \"network_interface\": \"eni-069ff5434d5fc71b9\",\n-            \"private_dns\": \"ip-10-150-0-52.ec2.internal\",\n-            \"private_ip\": \"10.150.0.52\",\n-            \"public_dns\": \"ec2-3-232-103-131.compute-1.amazonaws.com\",\n-            \"public_ip\": \"3.232.103.131\",\n-            \"public_ipv4_pool\": \"amazon\",\n-            \"tags\": null,\n-            \"timeouts\": null,\n-            \"vpc\": true\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==\",\n-          \"depends_on\": [\n-            \"aws_instance.instance\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"module\": \"module.masterNode\",\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_instance\",\n-      \"name\": \"instance\",\n-      \"each\": \"list\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"index_key\": 0,\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"ami\": \"ami-0d5ae5525eb033d0a\",\n-            \"arn\": \"arn:aws:ec2:us-east-1:684135021874:instance/i-0aa82b109639b9554\",\n-            \"associate_public_ip_address\": false,\n-            \"availability_zone\": \"us-east-1a\",\n-            \"cpu_core_count\": 1,\n-            \"cpu_threads_per_core\": 1,\n-            \"credit_specification\": [\n-              {\n-                \"cpu_credits\": \"standard\"\n-              }\n-            ],\n-            \"disable_api_termination\": false,\n-            \"ebs_block_device\": [],\n-            \"ebs_optimized\": false,\n-            \"ephemeral_block_device\": [],\n-            \"get_password_data\": false,\n-            \"host_id\": null,\n-            \"iam_instance_profile\": \"\",\n-            \"id\": \"i-0aa82b109639b9554\",\n-            \"instance_initiated_shutdown_behavior\": null,\n-            \"instance_state\": \"running\",\n-            \"instance_type\": \"t2.small\",\n-            \"ipv6_address_count\": 0,\n-            \"ipv6_addresses\": [],\n-            \"key_name\": \"es-lab-keyPair\",\n-            \"monitoring\": false,\n-            \"network_interface\": [],\n-            \"network_interface_id\": null,\n-            \"password_data\": \"\",\n-            \"placement_group\": \"\",\n-            \"primary_network_interface_id\": \"eni-0648cebb98dfb81a2\",\n-            \"private_dns\": \"ip-10-150-0-148.ec2.internal\",\n-            \"private_ip\": \"10.150.0.148\",\n-            \"public_dns\": \"\",\n-            \"public_ip\": \"\",\n-            \"root_block_device\": [\n-              {\n-                \"delete_on_termination\": true,\n-                \"encrypted\": false,\n-                \"iops\": 100,\n-                \"kms_key_id\": \"\",\n-                \"volume_id\": \"vol-0a7f70138b136a82d\",\n-                \"volume_size\": 8,\n-                \"volume_type\": \"gp2\"\n-              }\n-            ],\n-            \"security_groups\": [],\n-            \"source_dest_check\": true,\n-            \"subnet_id\": \"subnet-0a353f38a9963e65d\",\n-            \"tags\": {\n-              \"Name\": \"es-master-0\"\n-            },\n-            \"tenancy\": \"default\",\n-            \"timeouts\": null,\n-            \"user_data\": \"bb0d4ebe048024b4562be233cdcde925b349ba19\",\n-            \"user_data_base64\": null,\n-            \"volume_tags\": {},\n-            \"vpc_security_group_ids\": [\n-              \"sg-05cca2790cb8ca556\"\n-            ]\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==\",\n-          \"depends_on\": [\n-            \"data.template_cloudinit_config.userData\"\n-          ]\n-        },\n-        {\n-          \"index_key\": 1,\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"ami\": \"ami-0d5ae5525eb033d0a\",\n-            \"arn\": \"arn:aws:ec2:us-east-1:684135021874:instance/i-0aa335c90e4e94924\",\n-            \"associate_public_ip_address\": false,\n-            \"availability_zone\": \"us-east-1a\",\n-            \"cpu_core_count\": 1,\n-            \"cpu_threads_per_core\": 1,\n-            \"credit_specification\": [\n-              {\n-                \"cpu_credits\": \"standard\"\n-              }\n-            ],\n-            \"disable_api_termination\": false,\n-            \"ebs_block_device\": [],\n-            \"ebs_optimized\": false,\n-            \"ephemeral_block_device\": [],\n-            \"get_password_data\": false,\n-            \"host_id\": null,\n-            \"iam_instance_profile\": \"\",\n-            \"id\": \"i-0aa335c90e4e94924\",\n-            \"instance_initiated_shutdown_behavior\": null,\n-            \"instance_state\": \"running\",\n-            \"instance_type\": \"t2.small\",\n-            \"ipv6_address_count\": 0,\n-            \"ipv6_addresses\": [],\n-            \"key_name\": \"es-lab-keyPair\",\n-            \"monitoring\": false,\n-            \"network_interface\": [],\n-            \"network_interface_id\": null,\n-            \"password_data\": \"\",\n-            \"placement_group\": \"\",\n-            \"primary_network_interface_id\": \"eni-0325f064f1525e58e\",\n-            \"private_dns\": \"ip-10-150-0-204.ec2.internal\",\n-            \"private_ip\": \"10.150.0.204\",\n-            \"public_dns\": \"\",\n-            \"public_ip\": \"\",\n-            \"root_block_device\": [\n-              {\n-                \"delete_on_termination\": true,\n-                \"encrypted\": false,\n-                \"iops\": 100,\n-                \"kms_key_id\": \"\",\n-                \"volume_id\": \"vol-056037c4f048d73b9\",\n-                \"volume_size\": 8,\n-                \"volume_type\": \"gp2\"\n-              }\n-            ],\n-            \"security_groups\": [],\n-            \"source_dest_check\": true,\n-            \"subnet_id\": \"subnet-0a353f38a9963e65d\",\n-            \"tags\": {\n-              \"Name\": \"es-master-1\"\n-            },\n-            \"tenancy\": \"default\",\n-            \"timeouts\": null,\n-            \"user_data\": \"ffdcbb8f982e38a92336e69b5008dbddfd6b88ea\",\n-            \"user_data_base64\": null,\n-            \"volume_tags\": {},\n-            \"vpc_security_group_ids\": [\n-              \"sg-05cca2790cb8ca556\"\n-            ]\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==\",\n-          \"depends_on\": [\n-            \"data.template_cloudinit_config.userData\"\n-          ]\n-        },\n-        {\n-          \"index_key\": 2,\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"ami\": \"ami-0d5ae5525eb033d0a\",\n-            \"arn\": \"arn:aws:ec2:us-east-1:684135021874:instance/i-0c8ab124d74788c1d\",\n-            \"associate_public_ip_address\": false,\n-            \"availability_zone\": \"us-east-1a\",\n-            \"cpu_core_count\": 1,\n-            \"cpu_threads_per_core\": 1,\n-            \"credit_specification\": [\n-              {\n-                \"cpu_credits\": \"standard\"\n-              }\n-            ],\n-            \"disable_api_termination\": false,\n-            \"ebs_block_device\": [],\n-            \"ebs_optimized\": false,\n-            \"ephemeral_block_device\": [],\n-            \"get_password_data\": false,\n-            \"host_id\": null,\n-            \"iam_instance_profile\": \"\",\n-            \"id\": \"i-0c8ab124d74788c1d\",\n-            \"instance_initiated_shutdown_behavior\": null,\n-            \"instance_state\": \"running\",\n-            \"instance_type\": \"t2.small\",\n-            \"ipv6_address_count\": 0,\n-            \"ipv6_addresses\": [],\n-            \"key_name\": \"es-lab-keyPair\",\n-            \"monitoring\": false,\n-            \"network_interface\": [],\n-            \"network_interface_id\": null,\n-            \"password_data\": \"\",\n-            \"placement_group\": \"\",\n-            \"primary_network_interface_id\": \"eni-069ff5434d5fc71b9\",\n-            \"private_dns\": \"ip-10-150-0-52.ec2.internal\",\n-            \"private_ip\": \"10.150.0.52\",\n-            \"public_dns\": \"\",\n-            \"public_ip\": \"\",\n-            \"root_block_device\": [\n-              {\n-                \"delete_on_termination\": true,\n-                \"encrypted\": false,\n-                \"iops\": 100,\n-                \"kms_key_id\": \"\",\n-                \"volume_id\": \"vol-042e838e55be7692d\",\n-                \"volume_size\": 8,\n-                \"volume_type\": \"gp2\"\n-              }\n-            ],\n-            \"security_groups\": [],\n-            \"source_dest_check\": true,\n-            \"subnet_id\": \"subnet-0a353f38a9963e65d\",\n-            \"tags\": {\n-              \"Name\": \"es-master-2\"\n-            },\n-            \"tenancy\": \"default\",\n-            \"timeouts\": null,\n-            \"user_data\": \"b6a9c465aed134b23e4929bc2f9f8217efab51ba\",\n-            \"user_data_base64\": null,\n-            \"volume_tags\": {},\n-            \"vpc_security_group_ids\": [\n-              \"sg-05cca2790cb8ca556\"\n-            ]\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==\",\n-          \"depends_on\": [\n-            \"data.template_cloudinit_config.userData\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_internet_gateway\",\n-      \"name\": \"igw\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"igw-09e3a3a3cf51c3004\",\n-            \"owner_id\": \"684135021874\",\n-            \"tags\": {\n-              \"name\": \"es-lab\"\n-            },\n-            \"vpc_id\": \"vpc-022563250ef9c874f\"\n-          },\n-          \"private\": \"bnVsbA==\",\n-          \"depends_on\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_key_pair\",\n-      \"name\": \"es-labKeyPair\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"fingerprint\": \"86:52:f5:4d:6a:0b:67:04:35:5d:72:fe:de:9b:b6:e0\",\n-            \"id\": \"es-lab-keyPair\",\n-            \"key_name\": \"es-lab-keyPair\",\n-            \"key_name_prefix\": null,\n-            \"public_key\": \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgF0sUn1w4qCd3OcyI5eSEF8BMoBXAjoKR3hHafEp7e0+qIfrqE9RHBlThCXtos8P5FMAeOUUyLqQqqUsIaoVbDazy2UrIDMv6mdktVFnHLZ7oW7bSpUBCX4e3eGsZBYUSfQemX9ng1YzLlUdbv5z5gmQc+RDW2ZvLuTfTiKO7tVqVRWtQcBostaJ/AD6OBR/YWM5muOV+QFou/UqQJHZVafFbmVlbn4cHJa/H3HaxjGZum9j6WsCGLJSNWYBp9bolup7HQzHvRIk4herYBDkpPTiKE+6PerjB7+ZJP8J9gdBZOWf2NsQpYJR7XuBL1Eha1dX7FhR1GTD/45gaoIqr\"\n-          },\n-          \"private\": \"eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==\"\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table\",\n-      \"name\": \"es-labRouteTable\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"rtb-0bb439d02a4394196\",\n-            \"owner_id\": \"684135021874\",\n-            \"propagating_vgws\": [],\n-            \"route\": [\n-              {\n-                \"cidr_block\": \"0.0.0.0/0\",\n-                \"egress_only_gateway_id\": \"\",\n-                \"gateway_id\": \"igw-09e3a3a3cf51c3004\",\n-                \"instance_id\": \"\",\n-                \"ipv6_cidr_block\": \"\",\n-                \"nat_gateway_id\": \"\",\n-                \"network_interface_id\": \"\",\n-                \"transit_gateway_id\": \"\",\n-                \"vpc_peering_connection_id\": \"\"\n-              }\n-            ],\n-            \"tags\": {\n-              \"Name\": \"es-lab-RouteTable\"\n-            },\n-            \"vpc_id\": \"vpc-022563250ef9c874f\"\n-          },\n-          \"private\": \"bnVsbA==\",\n-          \"depends_on\": [\n-            \"aws_internet_gateway.igw\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table_association\",\n-      \"name\": \"es-labRouteTableAssociation\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"rtbassoc-010b956af0a243f07\",\n-            \"route_table_id\": \"rtb-0bb439d02a4394196\",\n-            \"subnet_id\": \"subnet-0a353f38a9963e65d\"\n-          },\n-          \"private\": \"bnVsbA==\",\n-          \"depends_on\": [\n-            \"aws_route_table.es-labRouteTable\",\n-            \"aws_subnet.es-labSubnet\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_security_group\",\n-      \"name\": \"es-labSG\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:684135021874:security-group/sg-05cca2790cb8ca556\",\n-            \"description\": \"Managed by Terraform\",\n-            \"egress\": [\n-              {\n-                \"cidr_blocks\": [\n-                  \"0.0.0.0/0\"\n-                ],\n-                \"description\": \"\",\n-                \"from_port\": 0,\n-                \"ipv6_cidr_blocks\": [],\n-                \"prefix_list_ids\": [],\n-                \"protocol\": \"-1\",\n-                \"security_groups\": [],\n-                \"self\": false,\n-                \"to_port\": 0\n-              }\n-            ],\n-            \"id\": \"sg-05cca2790cb8ca556\",\n-            \"ingress\": [\n-              {\n-                \"cidr_blocks\": [\n-                  \"0.0.0.0/0\"\n-                ],\n-                \"description\": \"\",\n-                \"from_port\": 22,\n-                \"ipv6_cidr_blocks\": [],\n-                \"prefix_list_ids\": [],\n-                \"protocol\": \"tcp\",\n-                \"security_groups\": [],\n-                \"self\": false,\n-                \"to_port\": 22\n-              },\n-              {\n-                \"cidr_blocks\": [\n-                  \"10.150.0.0/24\"\n-                ],\n-                \"description\": \"\",\n-                \"from_port\": 0,\n-                \"ipv6_cidr_blocks\": [],\n-                \"prefix_list_ids\": [],\n-                \"protocol\": \"-1\",\n-                \"security_groups\": [],\n-                \"self\": false,\n-                \"to_port\": 0\n-              }\n-            ],\n-            \"name\": \"terraform-20191023202754065700000001\",\n-            \"name_prefix\": null,\n-            \"owner_id\": \"684135021874\",\n-            \"revoke_rules_on_delete\": false,\n-            \"tags\": null,\n-            \"timeouts\": null,\n-            \"vpc_id\": \"vpc-022563250ef9c874f\"\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=\",\n-          \"depends_on\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_subnet\",\n-      \"name\": \"es-labSubnet\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:684135021874:subnet/subnet-0a353f38a9963e65d\",\n-            \"assign_ipv6_address_on_creation\": false,\n-            \"availability_zone\": \"us-east-1a\",\n-            \"availability_zone_id\": \"use1-az4\",\n-            \"cidr_block\": \"10.150.0.0/24\",\n-            \"id\": \"subnet-0a353f38a9963e65d\",\n-            \"ipv6_cidr_block\": \"\",\n-            \"ipv6_cidr_block_association_id\": \"\",\n-            \"map_public_ip_on_launch\": false,\n-            \"owner_id\": \"684135021874\",\n-            \"tags\": {\n-              \"name\": \"es-lab\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc_id\": \"vpc-022563250ef9c874f\"\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n-          \"depends_on\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_vpc\",\n-      \"name\": \"vpc\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:684135021874:vpc/vpc-022563250ef9c874f\",\n-            \"assign_generated_ipv6_cidr_block\": false,\n-            \"cidr_block\": \"10.150.0.0/24\",\n-            \"default_network_acl_id\": \"acl-059aeb755499b4ef9\",\n-            \"default_route_table_id\": \"rtb-0e5e366e975619cd6\",\n-            \"default_security_group_id\": \"sg-0cc8f31ab5368bd17\",\n-            \"dhcp_options_id\": \"dopt-04b32aa21e7917b3b\",\n-            \"enable_classiclink\": false,\n-            \"enable_classiclink_dns_support\": false,\n-            \"enable_dns_hostnames\": true,\n-            \"enable_dns_support\": true,\n-            \"id\": \"vpc-022563250ef9c874f\",\n-            \"instance_tenancy\": \"default\",\n-            \"ipv6_association_id\": \"\",\n-            \"ipv6_cidr_block\": \"\",\n-            \"main_route_table_id\": \"rtb-0e5e366e975619cd6\",\n-            \"owner_id\": \"684135021874\",\n-            \"tags\": {\n-              \"name\": \"es-lab\"\n-            }\n-          },\n-          \"private\": \"eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==\"\n-        }\n-      ]\n-    }\n-  ]\n-}"
      },
      {
        "filename": "terraform/terraform.tfstate.backup",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "status": "removed",
        "patch": "@@ -1,8 +0,0 @@\n-{\n-  \"version\": 4,\n-  \"terraform_version\": \"0.12.8\",\n-  \"serial\": 32,\n-  \"lineage\": \"66c52e56-9b49-72e7-eb1b-bacbfbe7b6bb\",\n-  \"outputs\": {},\n-  \"resources\": []\n-}"
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,12 +1,16 @@\n variable \"cidrBlock\" {\n-  type = \"string\"\n+  type = string\n }\n \n variable \"sshPubKeyFilePath\" {\n-  type = \"string\"\n+  type = string\n }\n \n variable \"nodeCount\" {\n   type = number\n   default = 1\n+}\n+\n+variable \"nodeSize\" {\n+  type = string\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from t2.small to t3.small"
  },
  {
    "url": "https://github.com/geraldwuhoo/homelab-iac/commit/3228ee1c5bfdf89e57e898659b086364122d58c1",
    "files": [
      {
        "filename": "ansible/roles/k8s/tasks/main.yml",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -2,12 +2,12 @@\n \n - name: Secure SSH\n   ansible.builtin.import_tasks: ssh.yml\n-  become: yes\n+  become: true\n \n - name: Install packages\n   ansible.builtin.import_tasks: packages.yml\n-  become: yes\n+  become: true\n \n - name: Configuration\n   ansible.builtin.import_tasks: config.yml\n-  become: yes\n+  become: true"
      },
      {
        "filename": "ansible/roles/k8s/tasks/packages.yml",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -1,10 +1,10 @@\n # vim: ts=2 sw=2 smartindent\n \n-- name: Register system to Red Hat\n-  community.general.redhat_subscription:\n-    state: present\n-    activationkey: \"{{ activationkey }}\"\n-    org_id: \"{{ org_id }}\"\n+# - name: Register system to Red Hat\n+#   community.general.redhat_subscription:\n+#     state: present\n+#     activationkey: \"{{ activationkey }}\"\n+#     org_id: \"{{ org_id }}\"\n \n - name: Add kubernetes repos\n   ansible.builtin.yum_repository:\n@@ -16,23 +16,23 @@\n     repo_gpgcheck: no\n     gpgkey: \"{{ item.gpgkey }}\"\n     exclude: \"{{ item.exclude }}\"\n-  loop: \"{{ repos }}\"\n+  with_items: \"{{ repos }}\"\n \n - name: Remove conflicting packages\n   ansible.builtin.dnf:\n     name: \"{{ conflicting_packages }}\"\n     state: absent\n \n-- name: Enable RHSM codeready-builder\n-  community.general.rhsm_repository:\n-    name: codeready-builder-for-rhel-8-x86_64-rpms\n+# - name: Enable RHSM codeready-builder\n+#   community.general.rhsm_repository:\n+#     name: codeready-builder-for-rhel-8-x86_64-rpms\n \n - name: Install epel repo\n   ansible.builtin.dnf:\n     name: \"{{ item }}\"\n     state: present\n     disable_gpg_check: yes\n-  loop:\n+  with_items:\n     - 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm'\n     - 'https://www.elrepo.org/elrepo-release-8.el8.elrepo.noarch.rpm'\n "
      },
      {
        "filename": "ansible/roles/k8s/vars/main.yml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -36,7 +36,7 @@ packages:\n   - kubectl\n   - kubelet\n   - rsync\n-  - tc\n+  # - tc\n   - vim\n   - wireguard-tools\n "
      },
      {
        "filename": "terraform/modules/kube-proxmox/ansible/k8s.yml",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -1,10 +1,10 @@\n ---\n-- hosts: k8s\n-  gather_facts: false\n-  tags:\n-    - prepare\n-  roles:\n-    - register\n+# - hosts: k8s\n+#   gather_facts: false\n+#   tags:\n+#     - prepare\n+#   roles:\n+#     - register\n \n - hosts: controlplane\n   gather_facts: false"
      },
      {
        "filename": "terraform/modules/kube-proxmox/ansible/roles/register/tasks/main.yml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,4 +5,4 @@\n     state: present\n     activationkey: \"{{ activationkey }}\"\n     org_id: \"{{ org_id }}\"\n-  become: yes\n+  become: true"
      },
      {
        "filename": "terraform/modules/kube-proxmox/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -88,7 +88,7 @@ resource \"proxmox_vm_qemu\" \"kube-nodes\" {\n \n   provisioner \"local-exec\" {\n     when       = destroy\n-    command    = \"cd ${path.module}/ansible; kubectl drain --ignore-daemonsets --delete-emptydir-data ${self.name}; ansible --inventory=\\\"hosts.${self.tags}\\\" ${self.name} -m shell -a \\\"subscription-manager remove --all; subscription-manager unregister; subscription-manager clean; kubeadm reset --force\\\" -b; kubectl delete node ${self.name}; sed -i '/^${self.name}/d' ~/.ssh/known_hosts\"\n+    command    = \"cd ${path.module}/ansible; kubectl drain --ignore-daemonsets --delete-emptydir-data ${self.name}; ansible --inventory=\\\"hosts.${self.tags}\\\" ${self.name} -m shell -a \\\"kubeadm reset --force\\\" -b; kubectl delete node ${self.name}; sed -i '/^${self.name}/d' ~/.ssh/known_hosts\"\n     on_failure = continue\n   }\n "
      },
      {
        "filename": "terraform/prod/config.yaml",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -10,19 +10,19 @@\n       node: bake\n       hastate: started\n       macaddr: 02:95:a7:a0:ee:b5\n-      template_name: apparition\n+      template_name: oddity\n     - vmid: 201\n       name: shinobu\n       node: nise\n       hastate: started\n       macaddr: 02:c9:f2:01:b1:45\n-      template_name: apparition\n+      template_name: oddity\n     - vmid: 202\n       name: senjougahara\n       node: neko\n       hastate: started\n       macaddr: 02:1a:ca:a2:d9:3e\n-      template_name: apparition\n+      template_name: oddity\n - type: worker\n   specs:\n     cores: 4\n@@ -35,16 +35,16 @@\n       node: bake\n       hastate: started\n       macaddr: 02:ad:d6:ec:15:d1\n-      template_name: apparition\n+      template_name: oddity\n     - vmid: 301\n       name: hachikuji\n       node: nise\n       hastate: started\n       macaddr: 02:ba:fd:cd:73:48\n-      template_name: apparition\n+      template_name: oddity\n     - vmid: 302\n       name: kanbaru\n       node: neko\n       hastate: started\n       macaddr: 02:a3:3e:14:c0:78\n-      template_name: apparition\n+      template_name: oddity"
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": ["not_relevant"],
    "notes": "The commit does not make cost-related changes"
  },
  {
    "url": "https://github.com/firehawkvfx/firehawk-main/commit/aef45215a4fe18d7fd03b7556fa3070815c57a22",
    "files": [
      {
        "filename": "modules/kms-key/main.tf",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "status": "added",
        "patch": "@@ -0,0 +1,23 @@\n+resource \"aws_kms_key\" \"vault\" {\n+  description             = \"Vault unseal key\"\n+  deletion_window_in_days = 10\n+\n+  tags = {\n+    Name = \"vault-kms-unseal-${random_pet.env.id}\"\n+  }\n+}\n+\n+resource \"aws_ssm_parameter\" \"vault_kms_unseal\" {\n+  name  = \"vault_kms_unseal_key_id\"\n+  type  = \"SecureString\"\n+  value = aws_kms_key.vault.id\n+}\n+\n+data \"aws_ssm_parameter\" \"vault_kms_unseal\" {\n+  name = \"vault_kms_unseal_key_id\"\n+  type = \"SecureString\"\n+}\n+\n+data \"aws_kms_key\" \"vault\" {\n+  key_id = data.aws_ssm_parameter.vault_kms_unseal\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/terraform-aws-vault",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1 +1 @@\n-Subproject commit 3f54821aaf9d637d6f423b6826e7db69954d7a92\n+Subproject commit 29fe7bc2531843e3a2137dddbb908fb9f7bbf845"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jkstenzel95/jks.gameservers/commit/411ab992ba07e698cb08b56eb4cfc9d6e001d43f",
    "files": [
      {
        "filename": "infra/service/game-servers/modules/game-kv-store/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,5 +1,6 @@\n resource \"aws_dynamodb_table\" \"game_key_value_store\" {\n   name             = \"jks-gs-${var.env}-${var.region_shortname}-${var.game_name}-${var.map_name}-kv_table\"\n+  billing_mode = \"PAY_PER_REQUEST\"\n   hash_key         = \"Key\"\n \n   attribute {"
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode",
      "storage"
    ],
    "codes": ["aws", "dynamo_on_demand"],
    "notes": "Use PAY_PER_REQUEST billing mode for DynamoDB"
  },
  {
    "url": "https://github.com/Eximchain/terraform-aws-quorum-cluster/commit/6a56f400f7de3f4d5cef646d92e3f848608031c1",
    "files": [
      {
        "filename": "packer/instance-scripts/init-quorum.sh",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -333,9 +333,14 @@ sleep 5\n # Generate supervisor config to run quorum\n NUM_MAKERS=$(cat /opt/quorum/info/num-makers.txt)\n generate_quorum_supervisor_config $ADDRESS $GETH_PW $HOSTNAME $ROLE /opt/quorum/constellation/config.conf\n-generate_quorum_crash_listener\n-generate_constellation_crash_listener\n-generate_cloudwatch_txpool_supervisor_config $HOSTNAME 22000\n+\n+# Start processes that generate CloudWatch metrics\n+if [ $(cat /opt/quorum/info/generate-metrics.txt) == \"1\" ]\n+then\n+    generate_quorum_crash_listener\n+    generate_constellation_crash_listener\n+    generate_cloudwatch_txpool_supervisor_config $HOSTNAME 22000\n+fi\n \n # Remove the config that runs this and run quorum\n sudo rm /etc/supervisor/conf.d/init-quorum-supervisor.conf"
      },
      {
        "filename": "terraform/example.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -4,6 +4,7 @@ cert_owner                = \"FIXME_USER\"\n key_name                  = \"quorum-cluster\"\n network_id                = 64813\n force_destroy_s3_buckets  = true\n+generate_metrics          = true\n vault_cluster_size        = 1\n vault_instance_type       = \"t2.small\"\n consul_cluster_size       = 1"
      },
      {
        "filename": "terraform/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -9,6 +9,7 @@ module \"quorum_cluster\" {\n   network_id                = \"${var.network_id}\"\n   gas_limit                 = \"${var.gas_limit}\"\n   force_destroy_s3_buckets  = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics          = \"${var.generate_metrics}\"\n   vault_cluster_size        = \"${var.vault_cluster_size}\"\n   vault_instance_type       = \"${var.vault_instance_type}\"\n   consul_cluster_size       = \"${var.consul_cluster_size}\""
      },
      {
        "filename": "terraform/modules/quorum-cluster-region/quorum.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -79,6 +79,7 @@ resource \"aws_instance\" \"quorum_maker_node\" {\n       \"echo '${var.max_block_time}' | sudo tee /opt/quorum/info/max-block-time.txt\",\n       \"echo '${var.gas_limit}' | sudo tee /opt/quorum/info/gas-limit.txt\",\n       \"echo '${var.aws_region}' | sudo tee /opt/quorum/info/aws-region.txt\",\n+      \"echo '${var.generate_metrics}' | sudo tee /opt/quorum/info/generate-metrics.txt\",\n       # This should be last because init scripts wait for this file to determine terraform is done provisioning\n       \"echo '${var.network_id}' | sudo tee /opt/quorum/info/network-id.txt\",\n     ]\n@@ -131,6 +132,7 @@ resource \"aws_instance\" \"quorum_validator_node\" {\n       \"echo '${var.max_block_time}' | sudo tee /opt/quorum/info/max-block-time.txt\",\n       \"echo '${var.gas_limit}' | sudo tee /opt/quorum/info/gas-limit.txt\",\n       \"echo '${var.aws_region}' | sudo tee /opt/quorum/info/aws-region.txt\",\n+      \"echo '${var.generate_metrics}' | sudo tee /opt/quorum/info/generate-metrics.txt\",\n       # This should be last because init scripts wait for this file to determine terraform is done provisioning\n       \"echo '${var.network_id}' | sudo tee /opt/quorum/info/network-id.txt\",\n     ]\n@@ -183,6 +185,7 @@ resource \"aws_instance\" \"quorum_observer_node\" {\n       \"echo '${var.max_block_time}' | sudo tee /opt/quorum/info/max-block-time.txt\",\n       \"echo '${var.gas_limit}' | sudo tee /opt/quorum/info/gas-limit.txt\",\n       \"echo '${var.aws_region}' | sudo tee /opt/quorum/info/aws-region.txt\",\n+      \"echo '${var.generate_metrics}' | sudo tee /opt/quorum/info/generate-metrics.txt\",\n       # This should be last because init scripts wait for this file to determine terraform is done provisioning\n       \"echo '${var.network_id}' | sudo tee /opt/quorum/info/network-id.txt\",\n     ]"
      },
      {
        "filename": "terraform/modules/quorum-cluster-region/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -84,6 +84,11 @@ variable \"force_destroy_s3_buckets\" {\n   default     = false\n }\n \n+variable \"generate_metrics\" {\n+  description = \"Whether or not to generate CloudWatch metrics from the cluster. Set to false to disable for cost savings.\"\n+  default     = true\n+}\n+\n variable \"bootnode_instance_type\" {\n   description = \"The EC2 instance type to use for bootnodes\"\n   default     = \"t2.small\""
      },
      {
        "filename": "terraform/modules/quorum-cluster/main.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -41,6 +41,7 @@ module \"quorum_cluster_us_east_1\" {\n   aws_region = \"us-east-1\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -79,6 +80,7 @@ module \"quorum_cluster_us_east_2\" {\n   aws_region = \"us-east-2\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -117,6 +119,7 @@ module \"quorum_cluster_us_west_1\" {\n   aws_region = \"us-west-1\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -155,6 +158,7 @@ module \"quorum_cluster_us_west_2\" {\n   aws_region = \"us-west-2\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -193,6 +197,7 @@ module \"quorum_cluster_eu_central_1\" {\n   aws_region = \"eu-central-1\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -231,6 +236,7 @@ module \"quorum_cluster_eu_west_1\" {\n   aws_region = \"eu-west-1\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -269,6 +275,7 @@ module \"quorum_cluster_eu_west_2\" {\n   aws_region = \"eu-west-2\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -307,6 +314,7 @@ module \"quorum_cluster_ap_south_1\" {\n   aws_region = \"ap-south-1\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -345,6 +353,7 @@ module \"quorum_cluster_ap_northeast_1\" {\n   aws_region = \"ap-northeast-1\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -383,6 +392,7 @@ module \"quorum_cluster_ap_northeast_2\" {\n   aws_region = \"ap-northeast-2\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -421,6 +431,7 @@ module \"quorum_cluster_ap_southeast_1\" {\n   aws_region = \"ap-southeast-1\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -459,6 +470,7 @@ module \"quorum_cluster_ap_southeast_2\" {\n   aws_region = \"ap-southeast-2\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -497,6 +509,7 @@ module \"quorum_cluster_ca_central_1\" {\n   aws_region = \"ca-central-1\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n \n@@ -535,6 +548,7 @@ module \"quorum_cluster_sa_east_1\" {\n   aws_region = \"sa-east-1\"\n \n   force_destroy_s3_buckets = \"${var.force_destroy_s3_buckets}\"\n+  generate_metrics         = \"${var.generate_metrics}\"\n \n   public_key_path = \"${var.public_key_path}\"\n "
      },
      {
        "filename": "terraform/modules/quorum-cluster/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -81,6 +81,11 @@ variable \"force_destroy_s3_buckets\" {\n   default     = false\n }\n \n+variable \"generate_metrics\" {\n+  description = \"Whether or not to generate CloudWatch metrics from the cluster. Set to false to disable for cost savings.\"\n+  default     = true\n+}\n+\n variable \"cert_org_name\" {\n   description = \"The organization to associate with the vault certificates.\"\n   default     = \"Example Co.\""
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -76,6 +76,11 @@ variable \"force_destroy_s3_buckets\" {\n   default     = false\n }\n \n+variable \"generate_metrics\" {\n+  description = \"Whether or not to generate CloudWatch metrics from the cluster. Set to false to disable for cost savings.\"\n+  default     = true\n+}\n+\n variable \"cert_org_name\" {\n   description = \"The organization to associate with the vault certificates.\"\n   default     = \"Example Co.\""
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["aws", "remove_cloudwatch_metrics"],
    "notes": "Made CloudWatch metrics configurable/optional to allow cost saving"
  },
  {
    "url": "https://github.com/bretmullinix/terraform-for-beginners/commit/3a3e9f6d19da0730f2b077b0c160a467102f5666",
    "files": [
      {
        "filename": "getting_started/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,8 +1,8 @@\n provider \"aws\" {\n-  region = \"us-east-2\"\n+  region = \"us-east-1\"\n }\n resource \"aws_instance\" \"master1_centos\" {\n-  ami           = \"ami-3c715059\"\n+  ami           = \"ami-0ff750889570c0406\"\n   instance_type = \"t2.medium\"\n   vpc_security_group_ids = [aws_security_group.instance.id]\n   tags          = { Name = \"master\" }"
      },
      {
        "filename": "injecting-your-ssh-key-into-ec2-instance/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n variable \"region\" {\n-  default = \"us-east-2\"\n+  default = \"us-east-1\"\n }\n     \n variable \"amazon_instance\" {\n@@ -33,7 +33,7 @@ resource \"aws_key_pair\" \"instance-key-pair\" {\n }\n \n resource \"aws_instance\" \"master1_centos\" {\n-  ami           = \"ami-3c715059\"\n+  ami           = \"ami-0ff750889570c0406\"\n   key_name = aws_key_pair.instance-key-pair.key_name\n   instance_type = var.amazon_instance.instance_type\n   vpc_security_group_ids = [aws_security_group.instance.id]"
      },
      {
        "filename": "injecting-your-ssh-key-into-ec2-instance/readme.md",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n # Working with Terraform and Injecting Your SSH Key for your Amazon EC2 Instance\n \n-Last updated: 06.10.2020\n+Last updated: 06.13.2020\n \n ## Purpose\n \n@@ -23,7 +23,7 @@ You must follow the [readme.md](../readme.md) steps.\n \n     ```hcl-terraform\n         variable \"region\" {\n-          default = \"us-east-2\"\n+          default = \"us-east-1\"\n         }\n         \n         variable \"amazon_instance\" {\n@@ -88,7 +88,7 @@ with the following:\n \n    ```hcl-terraform\n    resource \"aws_instance\" \"master1_centos\" {\n-     ami           = \"ami-3c715059\"\n+     ami           = \"ami-0ff750889570c0406\"\n      key_name = aws_key_pair.instance-key-pair.key_name\n      instance_type = var.amazon_instance.instance_type\n      vpc_security_group_ids = [aws_security_group.instance.id]"
      },
      {
        "filename": "readme.md",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n # Working with Terraform\n \n-Last updated: 06.09.2020\n+Last updated: 06.13.2020\n \n ## Purpose\n \n@@ -67,7 +67,7 @@ environment and cost you money.\n \n     ```hcl-terraform\n     provider \"aws\" {\n-      region = \"us-east-2\"}\n+      region = \"us-east-1\"}\n     ```\n \n 1. Specify the Security Group to use for the VPC:\n@@ -94,7 +94,7 @@ environment and cost you money.\n \n    ```hcl-terraform\n     resource \"aws_instance\" \"master1_centos\" {\n-      ami           = \"ami-3c715059\"\n+      ami           = \"ami-0ff750889570c0406\"\n       instance_type = \"t2.medium\"\n       vpc_security_group_ids = [aws_security_group.instance.id]\n       tags          = { Name = \"master\" }"
      },
      {
        "filename": "using-variables/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n \n variable \"region\" {\n-      default = \"us-east-2\"\n+      default = \"us-east-1\"\n     }\n variable \"amazon_instance\" {\n   type = object (\n@@ -20,7 +20,7 @@ provider \"aws\" {\n   region = var.region\n }\n resource \"aws_instance\" \"master1_centos\" {\n-  ami           = \"ami-3c715059\"\n+  ami           = \"ami-0ff750889570c0406\"\n   instance_type = var.amazon_instance.instance_type\n   vpc_security_group_ids = [aws_security_group.instance.id]\n   tags          = { Name = var.amazon_instance.name }"
      },
      {
        "filename": "using-variables/readme.md",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n # Working with Terraform\n \n-Last updated: 06.09.2020\n+Last updated: 06.13.2020\n \n ## Purpose\n \n@@ -21,7 +21,7 @@ You must follow the [readme.md](../readme.md) steps.\n \n     ```hcl-terraform\n     variable \"region\" {\n-      default = \"us-east-2\"\n+      default = \"us-east-1\"\n     }\n     variable \"amazon_instance\" {\n       type = object (\n@@ -62,7 +62,7 @@ with the following:\n \n    ```hcl-terraform\n    resource \"aws_instance\" \"master1_centos\" {\n-     ami           = \"ami-3c715059\"\n+     ami           = \"ami-0ff750889570c0406\"\n      instance_type = var.amazon_instance.instance_type\n      vpc_security_group_ids = [aws_security_group.instance.id]\n      tags          = { Name = var.amazon_instance.name }"
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": ["aws", "cheaper_image"],
    "notes": "Use a different machine image (AMI) which is cheaper"
  },
  {
    "url": "https://github.com/Accurate0/infrastructure/commit/06889e08148d258f329118d43734f8c8dcff994e",
    "files": [
      {
        "filename": "ww3-api/api.tf",
        "additions": 26,
        "deletions": 2,
        "changes": 28,
        "status": "modified",
        "patch": "@@ -9,11 +9,29 @@ resource \"aws_apigatewayv2_stage\" \"ww3-api\" {\n   name        = \"ww3-api\"\n   auto_deploy = true\n \n+  access_log_settings {\n+    destination_arn = aws_cloudwatch_log_group.api-gw.arn\n+\n+    format = jsonencode({\n+      requestId               = \"$context.requestId\"\n+      sourceIp                = \"$context.identity.sourceIp\"\n+      requestTime             = \"$context.requestTime\"\n+      protocol                = \"$context.protocol\"\n+      httpMethod              = \"$context.httpMethod\"\n+      resourcePath            = \"$context.resourcePath\"\n+      routeKey                = \"$context.routeKey\"\n+      status                  = \"$context.status\"\n+      responseLength          = \"$context.responseLength\"\n+      integrationErrorMessage = \"$context.integrationErrorMessage\"\n+      }\n+    )\n+  }\n+\n   default_route_settings {\n     throttling_burst_limit = 10\n     throttling_rate_limit  = 10\n+    logging_level          = \"OFF\"\n   }\n-\n }\n \n resource \"aws_apigatewayv2_integration\" \"status\" {\n@@ -31,11 +49,17 @@ resource \"aws_apigatewayv2_route\" \"status\" {\n   target    = \"integrations/${aws_apigatewayv2_integration.status.id}\"\n }\n \n-resource \"aws_lambda_permission\" \"api_gw\" {\n+resource \"aws_lambda_permission\" \"api-gw\" {\n   statement_id  = \"AllowExecutionFromAPIGateway\"\n   action        = \"lambda:InvokeFunction\"\n   function_name = aws_lambda_function.ww3-api.function_name\n   principal     = \"apigateway.amazonaws.com\"\n \n   source_arn = \"${aws_apigatewayv2_api.ww3-api.execution_arn}/*/*\"\n }\n+\n+resource \"aws_cloudwatch_log_group\" \"api-gw\" {\n+  name = \"/aws/api-gw/${aws_apigatewayv2_api.ww3-api.name}\"\n+\n+  retention_in_days = 30\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["aws", "remove_cloudwatch_logs"],
    "notes": "Stop using CloudWatch logs (logging_level = OFF for aws_apigatewayv2_stage) and set limited retention_in_days for CloudWatch log group"
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-azurerm-sql/commit/4fe0be131b0f6b5f073391227b9fe54372506b42",
    "files": [
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n terraform {\n   required_providers {\n     azurerm = {\n-      version = \"2.56.0\"\n+      version = \"2.59.0\"\n       source  = \"hashicorp/azurerm\"\n     }\n   }"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Midas-Protocol/webtwo-infra/commit/25ed0319bf8099f0cc79eceba9104c73d9507e0d",
    "files": [
      {
        "filename": "config/modules/ec2/main.tf",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "status": "modified",
        "patch": "@@ -39,34 +39,9 @@ resource \"aws_autoscaling_group\" \"default\" {\n   min_size             = 1\n   name                 = \"auto-scaling-group\"\n   termination_policies = [\"OldestInstance\"]\n-  vpc_zone_identifier  = var.subnet_ids\n \n   lifecycle {\n     create_before_destroy = true\n   }\n }\n \n-#\n-#resource \"aws_instance\" \"ec2_instance\" {\n-#  ami                    = data.aws_ami\n-#  subnet_id              = var.subnet_id\n-#  iam_instance_profile   = var.iam_instance_profile\n-#  instance_type          = var.instance_type\n-#  vpc_security_group_ids = var.vpc_security_group_ids\n-#  key_name               = var.key_name\n-#  ebs_optimized          = false\n-#  source_dest_check      = false\n-#  user_data              = data.template_file.user_data.rendered\n-#\n-#  tags = {\n-#    Chain                   = var.chain\n-#  }\n-#\n-#  lifecycle {\n-#    ignore_changes         = [\"ami\", \"user_data\", \"subnet_id\", \"key_name\", \"ebs_optimized\", \"private_ip\"]\n-#  }\n-#}\n-#\n-#data \"template_file\" \"user_data\" {\n-#  template = file(\"${path.module}/user_data.tpl\")\n-#}\n\\ No newline at end of file"
      },
      {
        "filename": "config/modules/networking/main.tf",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "status": "modified",
        "patch": "@@ -16,17 +16,6 @@ resource \"aws_subnet\" \"main\" {\n \n }\n \n-resource \"aws_subnet\" \"private\" {\n-  count  = var.az_count\n-  vpc_id = aws_vpc.main.id\n-\n-  # availability_zone = \"us-east-1b\"\n-  availability_zone = data.aws_availability_zones.available.names[count.index]\n-  cidr_block        = cidrsubnet(aws_vpc.main.cidr_block, 8, count.index)\n-  depends_on        = [aws_internet_gateway.main]\n-\n-}\n-\n resource \"aws_internet_gateway\" \"main\" {\n   vpc_id = aws_vpc.main.id\n \n@@ -39,38 +28,6 @@ resource \"aws_route\" \"internet_access\" {\n   gateway_id             = aws_internet_gateway.main.id\n }\n \n-#Create a NAT gateway with an EIP for each private subnet to get internet connectivity\n-resource \"aws_eip\" \"gw\" {\n-  count      = var.az_count\n-  vpc        = true\n-  depends_on = [aws_internet_gateway.main]\n-}\n-\n-resource \"aws_nat_gateway\" \"gw\" {\n-  count         = var.az_count\n-  subnet_id     = element(aws_subnet.main.*.id, count.index)\n-  allocation_id = element(aws_eip.gw.*.id, count.index)\n-}\n-\n-# Create a new route table for the private subnets\n-# And make it route non-local traffic through the NAT gateway to the internet\n-resource \"aws_route_table\" \"private\" {\n-  count  = var.az_count\n-  vpc_id = aws_vpc.main.id\n-\n-  route {\n-    cidr_block     = \"0.0.0.0/0\"\n-    nat_gateway_id = element(aws_nat_gateway.gw.*.id, count.index)\n-  }\n-}\n-\n-# Explicitely associate the newly created route tables to the private subnets (so they don't default to the main route table)\n-resource \"aws_route_table_association\" \"private\" {\n-  count          = var.az_count\n-  subnet_id      = element(aws_subnet.private.*.id, count.index)\n-  route_table_id = element(aws_route_table.private.*.id, count.index)\n-}\n-\n \n resource \"aws_security_group\" \"allow_all\" {\n   name        = \"allow_all\""
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["aws", "remove_nat_gateway", "remove_eip"],
    "notes": "Remove NAT gateway and elastic IP to reduce costs"
  },
  {
    "url": "https://github.com/Midas-Protocol/webtwo-infra/commit/2809f4e2d78ff33b48e9c1742b58a256ebce986d",
    "files": [
      {
        "filename": "config/modules/ecs/variables.tf",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,9 +1,3 @@\n variable \"ecs_cluster_name\" {\n   type = string\n }\n-\n-variable \"public_subnets\" {\n-  type = list(string)\n-}\n-\n-variable \"vpc_id\" {}"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "This commit only removes variables, likely due to being missed in a previous commit"
  },
  {
    "url": "https://github.com/ImminentDomain/immdom-terraform/commit/a49aaeed1776f0991256221e61ebc868ae5b60cb",
    "files": [
      {
        "filename": "aws/module/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -85,7 +85,7 @@ data \"aws_caller_identity\" \"current\" {}\n # Billing Cloudwatch Alert\n ################################################################################\n module \"billing_alert\" {\n-  source = \"git@github.com:ahodges22/terraform-aws-cost-billing-alarm.git\"\n+  source = \"github.com:ahodges22/terraform-aws-cost-billing-alarm\"\n \n   create                    = var.enable_billing_alert\n   aws_env                   = var.name"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/GBergeret/tf-vpc-module/commit/34d80ece7d0ef598414baffceb074c6580dd819b",
    "files": [
      {
        "filename": "test/fixtures/wrapper/test.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -34,7 +34,7 @@ resource \"random_integer\" \"az\" {\n }\n \n resource \"aws_instance\" \"i\" {\n-  instance_type = \"t2.micro\"\n+  instance_type = \"t3.nano\"\n   ami           = \"${data.aws_ami.core.id}\"\n   subnet_id     = \"${element(module.vpc.subnets[\"public\"], random_integer.az.result)}\"\n   key_name      = \"${aws_key_pair.k.key_name}\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from t2.micro to t3.nano"
  },
  {
    "url": "https://github.com/GBergeret/tf-vpc-module/commit/5e63c8390cb1001daf4ad74bb2926cc060c0de08",
    "files": [
      {
        "filename": ".travis.yml",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -19,10 +19,11 @@ before_script:\n   - ssh-keygen -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa\n   - eval $(ssh-agent)\n   - ssh-add ~/.ssh/id_rsa\n-  - kitchen create\n+  - bundle exec kitchen create\n \n script:\n-  - kitchen verify\n+  - bundle exec kitchen converge\n+  - bundle exec kitchen verify\n \n after_script:\n-  - kitchen destroy\n+  - bundle exec kitchen destroy"
      },
      {
        "filename": "README.md",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -2,19 +2,25 @@\n \n AWS VPC module to create a basic VPCs with 1 public subnet per AZ in AWS.\n \n+_This module can run in money saving mode so you don't spend crazy amount while\n+running tests. You simply need to use the variable `price_saving_enabled`._\n+\n ## How To Use\n \n ### Variables\n \n * `name_prefix`: String (optional, default: `tf-`)\n-* `cidr_block`: String (optional, default: `172.31.0.0/16`)\n+* `cidr_block`: String needs to be at least `/23` \n+  (optional, default: `172.31.0.0/16`)\n+* `price_saving_enabled`: Bool used to reduce cost by using EC2 instances as NAT\n+  gateway instead of AWS NAT Gateway (optional, default: `false`)\n \n ### Outputs\n \n * `vpc_id`: String \n * `default_security_group`: String\n-* `subnets`: Map\\[List]: list of subnet ids per tier (_public_)\n-* `cidr_blocks`: Map\\[List]: list of CIDR blocks per tier (_vpc_, _public_)\n+* `subnets`: Map\\[List]: list of subnet ids per tier (_public_, _private_)\n+* `cidr_blocks`: Map\\[List]: list of CIDR blocks per tier (_vpc_, _public_, _private_)\n \n ### Example\n "
      },
      {
        "filename": "kitchen.yml",
        "additions": 23,
        "deletions": 1,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -10,7 +10,10 @@ verifier:\n   name: terraform\n \n platforms:\n-  - name: coreos\n+  - name: case_1\n+    driver:\n+      variables:\n+        price_saving_enabled: \"1\"\n     verifier:\n       systems:\n         - name: remote\n@@ -20,6 +23,25 @@ platforms:\n             - operating_system\n           hosts_output: instance_ip\n           user: core\n+          # @TODO Clean when this issue is fixed : https://github.com/newcontext-oss/kitchen-terraform/issues/301\n+          bastion_host: \"<%= `terraform output -state=test/fixtures/wrapper/terraform.tfstate.d/kitchen-terraform-default-case-1/terraform.tfstate bastion_ip || echo 1` %>\"\n+          bastion_user: core\n+  - name: case_2\n+    driver:\n+      variables:\n+        price_saving_enabled: \"0\"\n+    verifier:\n+      systems:\n+        - name: remote\n+          backend: ssh\n+          controls:\n+            - internet_access\n+            - operating_system\n+          hosts_output: instance_ip\n+          user: core\n+          # @TODO Clean when this issue is fixed : https://github.com/newcontext-oss/kitchen-terraform/issues/301\n+          bastion_host: \"<%= `terraform output -state=test/fixtures/wrapper/terraform.tfstate.d/kitchen-terraform-default-case-2/terraform.tfstate bastion_ip || echo 1` %>\"\n+          bastion_user: core\n \n suites:\n   - name: default"
      },
      {
        "filename": "nat_gateways.tf",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "status": "added",
        "patch": "@@ -0,0 +1,72 @@\n+###\n+# EIP to control NAT IPs on Internet\n+##\n+resource \"aws_eip\" \"nat\" {\n+  count = \"${length(data.aws_availability_zones.available.names)}\"\n+}\n+\n+###\n+# HA AWS NAT Gateway (expensive but HA ideal for production workload).\n+##\n+resource \"aws_nat_gateway\" \"nat\" {\n+  count = \"${var.price_saving_enabled == \"1\" ? 0 : length(data.aws_availability_zones.available.names)}\"\n+\n+  allocation_id = \"${element(aws_eip.nat.*.id, count.index)}\"\n+  subnet_id     = \"${element(aws_subnet.public.*.id, count.index)}\"\n+}\n+\n+###\n+# Simple tiny EC2 instances to NAT internet access (not HA but cheap to test).\n+##\n+data \"aws_ami\" \"nat\" {\n+  most_recent = true\n+  owners      = [\"amazon\"]\n+\n+  filter {\n+    name   = \"name\"\n+    values = [\"amzn-ami-vpc-nat-hvm-*\"]\n+  }\n+}\n+\n+resource \"aws_instance\" \"nat\" {\n+  count = \"${var.price_saving_enabled == \"1\" ? length(data.aws_availability_zones.available.names) : 0}\"\n+\n+  instance_type = \"t3.nano\"\n+  ami           = \"${data.aws_ami.nat.id}\"\n+\n+  vpc_security_group_ids = [\"${aws_security_group.nat.id}\"]\n+  subnet_id              = \"${element(aws_subnet.public.*.id, count.index)}\"\n+  source_dest_check      = false\n+\n+  tags {\n+    Name = \"${var.name_prefix}nat-${element(data.aws_availability_zones.available.names, count.index)}\"\n+  }\n+}\n+\n+resource \"aws_eip_association\" \"nat\" {\n+  count = \"${var.price_saving_enabled == \"1\" ? length(data.aws_availability_zones.available.names) : 0}\"\n+\n+  instance_id   = \"${element(aws_instance.nat.*.id, count.index)}\"\n+  allocation_id = \"${element(aws_eip.nat.*.id, count.index)}\"\n+}\n+\n+resource \"aws_security_group\" \"nat\" {\n+  count = \"${var.price_saving_enabled == \"1\" ? 1 : 0}\"\n+\n+  name_prefix = \"${var.name_prefix}nat-\"\n+  vpc_id      = \"${aws_vpc.v.id}\"\n+\n+  ingress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = \"-1\"\n+    cidr_blocks = [\"${aws_subnet.private.*.cidr_block}\"]\n+  }\n+\n+  egress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = \"-1\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+}"
      },
      {
        "filename": "outputs.tf",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -8,13 +8,15 @@ output \"default_security_group\" {\n \n output \"subnets\" {\n   value = {\n-    public = [\"${aws_subnet.public.*.id}\"]\n+    public  = [\"${aws_subnet.public.*.id}\"]\n+    private = [\"${aws_subnet.private.*.id}\"]\n   }\n }\n \n output \"cidr_blocks\" {\n   value = {\n-    vpc    = [\"${aws_vpc.v.cidr_block}\"]\n-    public = [\"${aws_subnet.public.*.cidr_block}\"]\n+    vpc     = [\"${aws_vpc.v.cidr_block}\"]\n+    public  = [\"${aws_subnet.public.*.cidr_block}\"]\n+    private = [\"${aws_subnet.private.*.cidr_block}\"]\n   }\n }"
      },
      {
        "filename": "route_tables.tf",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "status": "added",
        "patch": "@@ -0,0 +1,38 @@\n+resource \"aws_default_route_table\" \"public\" {\n+  default_route_table_id = \"${aws_vpc.v.main_route_table_id}\"\n+}\n+\n+resource \"aws_route\" \"public_default\" {\n+  route_table_id         = \"${aws_default_route_table.public.id}\"\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  gateway_id             = \"${aws_internet_gateway.i.id}\"\n+}\n+\n+resource \"aws_route_table\" \"private\" {\n+  count = \"${length(data.aws_availability_zones.available.names)}\"\n+\n+  vpc_id = \"${aws_vpc.v.id}\"\n+}\n+\n+resource \"aws_route\" \"private_default_ec2\" {\n+  count = \"${var.price_saving_enabled == \"1\" ? length(data.aws_availability_zones.available.names) : 0}\"\n+\n+  route_table_id         = \"${element(aws_route_table.private.*.id, count.index)}\"\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  instance_id            = \"${element(aws_instance.nat.*.id, count.index)}\"\n+}\n+\n+resource \"aws_route\" \"private_default_nat_gateway\" {\n+  count = \"${var.price_saving_enabled == \"1\" ? 0 : length(data.aws_availability_zones.available.names)}\"\n+\n+  route_table_id         = \"${element(aws_route_table.private.*.id, count.index)}\"\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  nat_gateway_id         = \"${element(aws_nat_gateway.nat.*.id, count.index)}\"\n+}\n+\n+resource \"aws_route_table_association\" \"private\" {\n+  count = \"${length(data.aws_availability_zones.available.names)}\"\n+\n+  subnet_id      = \"${element(aws_subnet.private.*.id, count.index)}\"\n+  route_table_id = \"${element(aws_route_table.private.*.id, count.index)}\"\n+}"
      },
      {
        "filename": "subnets.tf",
        "additions": 15,
        "deletions": 2,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -6,8 +6,21 @@ resource \"aws_subnet\" \"public\" {\n   vpc_id            = \"${aws_vpc.v.id}\"\n   availability_zone = \"${element(data.aws_availability_zones.available.names, count.index)}\"\n \n-  # 3 new bits mean 8 subnets (should be enough as regions have maximum 6 AZs)\n-  cidr_block = \"${cidrsubnet(aws_vpc.v.cidr_block, 3, count.index)}\"\n+  # 5 new bits mean 32 subnets (should be enough as regions have maximum 6 AZs).\n+  # bare in mind the 24 last CIDR blocks are used by private subnets.\n+  cidr_block = \"${cidrsubnet(aws_vpc.v.cidr_block, 5, count.index)}\"\n \n   map_public_ip_on_launch = true\n }\n+\n+resource \"aws_subnet\" \"private\" {\n+  count = \"${length(data.aws_availability_zones.available.names)}\"\n+\n+  vpc_id            = \"${aws_vpc.v.id}\"\n+  availability_zone = \"${element(data.aws_availability_zones.available.names, count.index)}\"\n+\n+  # 3 new bits mean 8 subnets (should be enough as regions have maximum 6 AZs).\n+  # only up to 6 subnets can be allocated privately (2 first CIDR blocks are used\n+  # by public subnets). \n+  cidr_block = \"${cidrsubnet(aws_vpc.v.cidr_block, 3, 2 + count.index)}\"\n+}"
      },
      {
        "filename": "test/fixtures/wrapper/test.tf",
        "additions": 54,
        "deletions": 6,
        "changes": 60,
        "status": "modified",
        "patch": "@@ -1,11 +1,21 @@\n-locals {\n-  \"name_prefix\" = \"test-tf-vpc-module-\"\n-}\n+###\n+# Module call (module to test)\n+##\n+variable \"price_saving_enabled\" {}\n \n module \"vpc\" {\n   source = \"../../../\"\n \n   name_prefix = \"${local.name_prefix}\"\n+\n+  price_saving_enabled = \"${var.price_saving_enabled}\"\n+}\n+\n+###\n+# Misc\n+##\n+locals {\n+  \"name_prefix\" = \"test-tf-vpc-module-\"\n }\n \n data \"aws_ami\" \"core\" {\n@@ -33,19 +43,57 @@ resource \"random_integer\" \"az\" {\n   max = \"${length(module.vpc.subnets[\"public\"]) - 1}\" # -1 as the max value is inclusive\n }\n \n+###\n+# Dummy Instance to run test from\n+##\n resource \"aws_instance\" \"i\" {\n   instance_type = \"t3.nano\"\n   ami           = \"${data.aws_ami.core.id}\"\n-  subnet_id     = \"${element(module.vpc.subnets[\"public\"], random_integer.az.result)}\"\n+  subnet_id     = \"${element(module.vpc.subnets[\"private\"], random_integer.az.result)}\"\n   key_name      = \"${aws_key_pair.k.key_name}\"\n \n   vpc_security_group_ids = [\"${module.vpc.default_security_group}\"]\n \n   tags {\n-    Name = \"${local.name_prefix}instance\"\n+    Name = \"${local.name_prefix}dummy-instance\"\n   }\n }\n \n output \"instance_ip\" {\n-  value = \"${aws_instance.i.public_ip}\"\n+  value = \"${aws_instance.i.private_ip}\"\n+}\n+\n+###\n+# SSH Bastion to reach dummy instance\n+##\n+resource \"aws_instance\" \"b\" {\n+  instance_type = \"t3.nano\"\n+  ami           = \"${data.aws_ami.core.id}\"\n+  subnet_id     = \"${element(module.vpc.subnets[\"public\"], random_integer.az.result)}\"\n+  key_name      = \"${aws_key_pair.k.key_name}\"\n+\n+  vpc_security_group_ids = [\n+    \"${module.vpc.default_security_group}\",\n+    \"${aws_security_group.bastion.id}\",\n+  ]\n+\n+  tags {\n+    Name = \"${local.name_prefix}dummy-bastion\"\n+  }\n+}\n+\n+resource \"aws_security_group\" \"bastion\" {\n+  name_prefix = \"${local.name_prefix}-ec2-ssh-bastion-\"\n+  vpc_id      = \"${module.vpc.vpc_id}\"\n+\n+  egress {\n+    from_port   = 22\n+    to_port     = 22\n+    protocol    = \"tcp\"\n+    cidr_blocks = [\"${module.vpc.cidr_blocks[\"private\"]}\"]\n+  }\n+}\n+\n+output \"bastion_ip\" {\n+  value = \"${aws_instance.b.public_ip}\"\n }"
      },
      {
        "filename": "variables.tf",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -3,5 +3,11 @@ variable \"name_prefix\" {\n }\n \n variable \"cidr_block\" {\n-  default = \"172.31.0.0/16\"\n+  description = \"CIDR blocks wanted to be used for your VPC (min /23).\"\n+  default     = \"172.31.0.0/16\"\n+}\n+\n+variable \"price_saving_enabled\" {\n+  description = \"Variable to reduce cost (deprecated in production).\"\n+  default     = \"0\"\n }"
      },
      {
        "filename": "vpc.tf",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -5,12 +5,3 @@ resource \"aws_vpc\" \"v\" {\n resource \"aws_internet_gateway\" \"i\" {\n   vpc_id = \"${aws_vpc.v.id}\"\n }\n-\n-resource \"aws_default_route_table\" \"r\" {\n-  default_route_table_id = \"${aws_vpc.v.main_route_table_id}\"\n-\n-  route {\n-    cidr_block = \"0.0.0.0/0\"\n-    gateway_id = \"${aws_internet_gateway.i.id}\"\n-  }\n-}"
      }
    ],
    "existing_codes": [
      "networking",
      "saving",
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/chaspy/terraform-alibaba-isucon8/commit/53588dad5dd4c13903a6c582f74e1afe2671d33e",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n data \"alicloud_instance_types\" \"type\" {\n-  cpu_core_count = 2\n-  memory_size    = 4\n+  cpu_core_count = 1\n+  memory_size    = 1\n }\n \n data \"alicloud_images\" \"default\" {"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["alicloud", "less_cpu_cores", "less_memory"],
    "notes": "Use fewer CPU cores and less memory for a compute instance"
  },
  {
    "url": "https://github.com/Cinegy/terraform-cinegy-modules/commit/09636724e63599b1f589065c92074575471ac234",
    "files": [
      {
        "filename": "directoryservice/readme.md",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -25,6 +25,4 @@ aws-vault exec terragrunt-admin -- aws iam list-roles\n \n Then terraform is not going to work either!\n \n-For more details, see here: https://99designs.co.uk/tech-blog/blog/2015/10/26/aws-vault/\n-\n-\n+For more details, see here: <https://99designs.co.uk/tech-blog/blog/2015/10/26/aws-vault/>"
      },
      {
        "filename": "iam/readme.md",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -25,6 +25,4 @@ aws-vault exec terragrunt-admin -- aws iam list-roles\n \n Then terraform is not going to work either!\n \n-For more details, see here: https://99designs.co.uk/tech-blog/blog/2015/10/26/aws-vault/\n-\n-\n+For more details, see here: <https://99designs.co.uk/tech-blog/blog/2015/10/26/aws-vault/>"
      },
      {
        "filename": "vpc/main.tf",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -21,7 +21,7 @@ resource \"aws_vpc\" \"main\" {\n   enable_dns_hostnames = true\n \n   tags = {\n-    Name      = \"Cinegy ${var.app_name} ${upper(var.environment_name)} VPC\"\n+    Name      = \"${var.app_name} ${upper(var.environment_name)} VPC\"\n     App       = var.app_name\n     Env       = var.environment_name\n     Terraform = true\n@@ -43,7 +43,8 @@ resource \"aws_eip\" \"nat_1a\" {\n # Create an elastic IP for the NAT gateway\n resource \"aws_eip\" \"nat_1b\" {\n   vpc = true\n-\n+  count = var.secondary_az_enabled ? 1 : 0\n+  \n   tags = {\n     Name      = \"NAT GW 1b EIP\"\n     Env       = var.environment_name\n@@ -82,6 +83,7 @@ resource \"aws_nat_gateway\" \"nat_1a\" {\n resource \"aws_nat_gateway\" \"nat_1b\" {\n   allocation_id = aws_eip.nat_1b.id\n   subnet_id     = aws_subnet.public_b.id\n+  count = var.secondary_az_enabled ? 1 : 0\n \n   depends_on = [aws_internet_gateway.gw]\n \n@@ -127,6 +129,7 @@ resource \"aws_route_table_association\" \"private_a_subnet_to_nat_gw_1a\" {\n # allow internet access to private subnets in AZ-B through nat #1b\n resource \"aws_route_table\" \"nat_gw_1b\" {\n   vpc_id = aws_vpc.main.id\n+  count = var.secondary_az_enabled ? 1 : 0\n \n   tags = {\n     Name      = \"Private 1b subnets via NAT GW 1b\"\n@@ -138,12 +141,14 @@ resource \"aws_route_table\" \"nat_gw_1b\" {\n \n # add a default route for nat_gw1b\n resource \"aws_route\" \"default_gw_nat_gw1b\" {\n+  count = var.secondary_az_enabled ? 1 : 0\n   route_table_id         = aws_route_table.nat_gw_1b.id\n   destination_cidr_block = \"0.0.0.0/0\"\n   nat_gateway_id         = aws_nat_gateway.nat_1b.id\n }\n \n resource \"aws_route_table_association\" \"private_b_subnet_to_nat_gw_1b\" {\n+  count = var.secondary_az_enabled ? 1 : 0\n   route_table_id = aws_route_table.nat_gw_1b.id\n   subnet_id      = aws_subnet.private_b.id\n }\n@@ -167,6 +172,7 @@ resource \"aws_subnet\" \"public_a\" {\n \n # Availability Zone B - Publically accessible\n resource \"aws_subnet\" \"public_b\" {\n+  count = var.secondary_az_enabled ? 1 : 0\n   vpc_id                  = aws_vpc.main.id\n   cidr_block              = var.public_b_subnet_cidr_block\n   availability_zone       = \"${var.aws_region}b\"\n@@ -199,6 +205,7 @@ resource \"aws_subnet\" \"private_a\" {\n \n # Availability Zone B - NOT Publically accessible\n resource \"aws_subnet\" \"private_b\" {\n+  count = var.secondary_az_enabled ? 1 : 0\n   vpc_id                  = aws_vpc.main.id\n   cidr_block              = var.private_b_subnet_cidr_block\n   availability_zone       = \"${var.aws_region}b\""
      },
      {
        "filename": "vpc/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -92,6 +92,11 @@ variable \"private_b_subnet_cidr_block\" {\n   description = \"IP range in CIDR format for subnet usage\"\n }\n \n+variable \"secondary_az_enabled\" {\n+  description = \"Value indicating if resources should create or use a secondary AZ (HA modes)\"\n+  default = false\n+}\n+\n variable \"cinegy_agent_default_manifest_path\" {\n   description = \"Path to a file containing the defaults to use when creating an Cinegy Agent manifest file\"\n   default     = \"./conf/defaultproducts.manifest\""
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["aws", "reduce_az"],
    "notes": "Made using a secondary availability zone configurable/optional"
  },
  {
    "url": "https://github.com/SUSE/caps-automation/commit/5675965b57d05932ae8b806bad2cd219d15fe516",
    "files": [
      {
        "filename": "infra/terraform/EKS/modules/postgresql/main.tf",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "status": "modified",
        "patch": "@@ -19,7 +19,7 @@ resource \"aws_security_group\" \"allow_psql\" {\n   vpc_id      = aws_default_vpc.default.id\n \n   ingress {\n-    description = \"RDS from VPC\"\n+    description = \"PSQL RDS from VPC\"\n     from_port   = 5432\n     to_port     = 5432\n     protocol    = \"tcp\"\n@@ -45,24 +45,31 @@ resource \"aws_security_group\" \"allow_psql\" {\n   }\n }\n \n-resource \"aws_db_instance\" \"postgresql\" {\n-  allocated_storage      = 10\n-  engine                 = \"postgres\"\n+resource \"aws_rds_cluster\" \"aurora\" {\n+  engine                 = \"aurora-postgresql\"\n   engine_version         = var.postgresql_version\n-  instance_class         = \"db.t3.medium\"\n-  password               = random_password.db_password.result\n   skip_final_snapshot    = true\n   storage_encrypted      = true\n   vpc_security_group_ids = [aws_security_group.allow_psql.id]\n-  username               = var.administrator_login\n+  master_username        = var.administrator_login\n+  master_password        = random_password.db_password.result\n+}\n+\n+resource \"aws_rds_cluster_instance\" \"postgresql\" {\n+  cluster_identifier     = aws_rds_cluster.aurora.id\n+  engine                 = aws_rds_cluster.aurora.engine\n+  engine_version         = aws_rds_cluster.aurora.engine_version\n+  instance_class         = \"db.t3.medium\"\n+  #vpc_security_group_ids = [aws_security_group.allow_psql.id]\n+\n   publicly_accessible    = true\n }\n \n resource \"null_resource\" \"create_databases\" {\n   for_each = toset(var.databases)\n \n   provisioner \"local-exec\" {\n-    command = \"createdb -h ${aws_db_instance.postgresql.address} -U ${var.administrator_login} ${each.value}\"\n+    command = \"createdb -h ${aws_rds_cluster.aurora.endpoint} -U ${var.administrator_login} ${each.value}\"\n \n     environment = {\n       PGPASSWORD = random_password.db_password.result"
      },
      {
        "filename": "infra/terraform/EKS/modules/postgresql/output.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,9 +1,9 @@\n output \"fqdn\" {\n-  value = aws_db_instance.postgresql.address\n+  value = aws_rds_cluster_instance.postgresql.endpoint\n }\n \n output \"login\" {\n-  value = aws_db_instance.postgresql.username\n+  value = aws_rds_cluster.aurora.master_username\n }\n \n output \"password\" {"
      },
      {
        "filename": "infra/terraform/EKS/modules/postgresql/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -14,7 +14,7 @@ variable \"administrator_login\" {\n \n variable \"postgresql_version\" {\n   description = \"PostgreSQL Server version to deploy\"\n-  default     = \"11\"\n+  default     = \"11.7\"\n }\n \n variable \"databases\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "use_single_instance_aurora"],
    "notes": "The commit moves from a regular RDS instance to an Aurora cluster with one instance, which is cheaper according to the commit message"
  },
  {
    "url": "https://github.com/akshay3030/dockerized-jenkins-master/commit/4356e9ebf89921898e9459f85f1173d44f3a3a6f",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -12,4 +12,5 @@\n \n # .tfstate files\n *.tfstate\n-*.tfstate.*\n\\ No newline at end of file\n+*.tfstate.*\n+*.zip\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/jenkins_alb_s3_mount_not_working/data.tf",
        "additions": 0,
        "deletions": 105,
        "changes": 105,
        "status": "removed",
        "patch": "@@ -1,105 +0,0 @@\n-# Use this to get the AWS Account Id\n-# ${data.aws_caller_identity.current.account_id}\n-data \"aws_caller_identity\" \"current\" {}\n-\n-/*\n-output \"account_id\" {\n-  value = \"${data.aws_caller_identity.current.account_id}\"\n-}\n-\n-output \"caller_arn\" {\n-  value = \"${data.aws_caller_identity.current.arn}\"\n-}\n-\n-output \"caller_user\" {\n-  value = \"${data.aws_caller_identity.current.user_id}\"\n-}\n-\n-# \"${data.aws_region.current.name}\"\n-data \"aws_region\" \"current\" {\n-  current = true\n-}*/\n-\n-# Query myorg VPC\n-\n-# Get our myorg-default vpc\n-data \"aws_vpc\" \"myorg\" {\n-  tags {\n-    #Name = \"myorg-private\"\n-    #Name = \"myorg-default\"\n-    Name = \"${var.vpc_name}\"\n-\n-  }\n-}\n-\n-# private subnets\n-data \"aws_subnet\" \"private_subnet_0\" {\n-  vpc_id = \"${data.aws_vpc.myorg.id}\"\n-  filter {\n-    name=\"tag:Name\"\n-    values=[\"Private0*\"]\n-  }\n-}\n-\n-data \"aws_subnet\" \"private_subnet_1\" {\n-  vpc_id = \"${data.aws_vpc.myorg.id}\"\n-  filter {\n-    name=\"tag:Name\"\n-    values=[\"Private1*\"]\n-  }\n-}\n-\n-data \"aws_subnet\" \"private_subnet_2\" {\n-  vpc_id = \"${data.aws_vpc.myorg.id}\"\n-  filter {\n-    name=\"tag:Name\"\n-    values=[\"Private2*\"]\n-  }\n-}\n-\n-# public subnets\n-data \"aws_subnet\" \"public_subnet_0\" {\n-  vpc_id = \"${data.aws_vpc.myorg.id}\"\n-  filter {\n-    name=\"tag:Name\"\n-    values=[\"Public0*\"]\n-  }\n-}\n-\n-data \"aws_subnet\" \"public_subnet_1\" {\n-  vpc_id = \"${data.aws_vpc.myorg.id}\"\n-  filter {\n-    name=\"tag:Name\"\n-    values=[\"Public1*\"]\n-  }\n-}\n-\n-data \"aws_subnet\" \"public_subnet_2\" {\n-  vpc_id = \"${data.aws_vpc.myorg.id}\"\n-  filter {\n-    name=\"tag:Name\"\n-    values=[\"Public2*\"]\n-  }\n-}\n-\n-data \"aws_availability_zones\" \"all\" {}\n-\n-# Template for initial configuration bash script\n-#user_data = \"${data.template_file.init.rendered}\"\n-data \"template_file\" \"init\" {\n-  template = \"${file(\"${path.module}/userdata\")}\"\n-\n-  vars {\n-\n-    region = \"${var.aws_region}\"\n-    jenkins_s3_bucket = \"${aws_s3_bucket.s3bucket_jenkins.id}\"\n-\n-  }\n-}\n-\n-\n-//data \"aws_route53_zone\" \"hosted_zone\" {\n-//  name         = \"${var.route53_zone_base}\"\n-//  private_zone = \"${var.is_hosted_zone_private}\"\n-//  provider = \"aws\"\n-//}"
      },
      {
        "filename": "terraform/jenkins_alb_s3_mount_not_working/environments/common.tfvars",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "status": "removed",
        "patch": "@@ -1,5 +0,0 @@\n-environment_prefix = \"jenkins\"\n-route53_zone_base=\"devops.xxx.io\"\n-vpc_name=\"xxx-default\"\n-ec2_keypair_name = \"xxx\"\n-service_name = \"jenkinsdockerv1\"\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/jenkins_alb_s3_mount_not_working/environments/dev.tfvars",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "status": "removed",
        "patch": "@@ -1,8 +0,0 @@\n-environment = \"dev\"\n-#ami_id = \"ami-009d6802948d06e52\" #us-east-1\n-#ami_id  = \"ami-01bbe152bf19d0289\" #us-west-2\n-ami_id   = \"ami-0d1000aff9a9bad89\"\n-ec2_instance_type = \"t2.medium\"\n-aws_region = \"us-west-2\"\n-availibity_zone_suffix = \"b\"\n-aws_profile = \"default\"\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/jenkins_alb_s3_mount_not_working/main.tf",
        "additions": 0,
        "deletions": 629,
        "changes": 629,
        "status": "removed",
        "patch": "@@ -1,629 +0,0 @@\n-\n-########\n-provider \"aws\" {\n-  //  access_key = \"${var.aws_access_key}\"\n-  //  secret_key = \"${var.aws_secret_key}\"\n-  #region     = \"us-west-2\"\n-  region = \"${var.aws_region}\"\n-  profile = \"default\"\n-}\n-\n-resource \"random_id\" \"server\" {\n-  keepers = {\n-    # Generate a new id each time we switch to a new AMI id\n-    #ami_id = \"${var.ami_id}\"\n-  }\n-\n-  byte_length = 8\n-}\n-\n-\n-resource \"aws_autoscaling_group\" \"webapp_v1\" {\n-  #depends_on = [\"aws_alb.webapp\"]\n-  depends_on = [\"aws_launch_configuration.launchWebapp\"]\n-  name = \"Webapp-${var.environment}-${var.environment_prefix}\"\n-  default_cooldown = 600\n-  desired_capacity = \"${var.num_nodes}\"\n-  health_check_grace_period = 900\n-\n-  launch_configuration = \"${aws_launch_configuration.launchWebapp.name}\"\n-  max_size = \"${var.max_num_nodes}\"\n-  min_size = \"${var.min_num_nodes}\"\n-\n-  #load_balancers = [\"${aws_lb.alb.id}\"]\n-  target_group_arns = [\"${aws_alb_target_group.tgHttp.arn}\"]\n-  #availability_zones = [\"${var.aws_region}a\"] only works for clb\n-\n-\n-  tags = [\n-    {\n-      key                 = \"Name\"\n-      #value               = \"${var.environment}.${var.environment_prefix}.${var.route53_zone_base}\"\n-      value                = \"test-jinstance\"\n-      propagate_at_launch = true\n-    },\n-    {\n-      key                 = \"Backup\"\n-      value               = \"${var.environment == \"dev\" ? 1 : 3}\"  # if IsDevelopment 1, else 3\n-      propagate_at_launch = true\n-    },\n-    {\n-      key                 = \"Project\"\n-      value               = \"webappv1\"\n-      propagate_at_launch = true\n-    },\n-    {\n-      key                 = \"Department\"\n-      value               = \"DevOps Eng\"\n-      propagate_at_launch = true\n-    },\n-    {\n-      key                 = \"Environment\"\n-      value               = \"${var.environment}-${var.environment_prefix}\"\n-      propagate_at_launch = true\n-    },\n-    {\n-      key                 = \"Owner\"\n-      value               = \"devops@xxx.com\"\n-      propagate_at_launch = true\n-    },\n-    {\n-      key                 = \"Cost Center\"\n-      value               = \"CS123\"\n-      propagate_at_launch = true\n-    },\n-    {\n-      key                 = \"Compliance\"\n-      value               = \"No-PII\"\n-      propagate_at_launch = true\n-    }\n-  ]\n-\n-\n-//  target_group_arns = [\"${aws_alb_target_group.tgWebappHttp.arn}\", \"${aws_alb_target_group.tgWebappHttps.arn}\"]\n-  //target_group_arns = [\"${aws_alb_target_group.tgWebappHttps.arn}\"]\n-\n-  termination_policies = [\"OldestLaunchConfiguration\", \"OldestInstance\"]\n-  vpc_zone_identifier = [\"${data.aws_subnet.private_subnet_0.id}\", \"${data.aws_subnet.private_subnet_1.id}\",\"${data.aws_subnet.private_subnet_2.id}\"]\n-  #vpc_zone_identifier = [\"${data.aws_subnet.public_subnet_0.id}\", \"${data.aws_subnet.public_subnet_1.id}\",\"${data.aws_subnet.public_subnet_2.id}\"]\n-\n-  #load_balancers = [\"${aws_alb.webapp.name}\"]\n-  #load_balancers = [\"${aws_alb.webapp.id}\"]\n-  health_check_type = \"ELB\"\n-\n-  enabled_metrics = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupTotalInstances\"]\n-\n-  metrics_granularity = \"1Minute\"\n-\n-}\n-\n-resource \"aws_autoscaling_policy\" \"autopolicy-up\" {\n-  name = \"${var.environment}-${var.environment_prefix}-autopolicy-up\"\n-  scaling_adjustment = 1\n-  adjustment_type = \"ChangeInCapacity\"\n-  cooldown = 300\n-  autoscaling_group_name = \"${aws_autoscaling_group.webapp_v1.name}\"\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"cpualarm-up\" {\n-  alarm_name = \"${var.environment}-${var.environment_prefix}-alarm-up\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods = \"2\"\n-  metric_name = \"CPUUtilization\"\n-  namespace = \"AWS/EC2\"\n-  period = \"120\"\n-  statistic = \"Average\"\n-  threshold = \"60\"\n-  dimensions {\n-    AutoScalingGroupName = \"${aws_autoscaling_group.webapp_v1.name}\"\n-  }\n-  alarm_description = \"This metric monitor EC2 instance cpu utilization\"\n-  alarm_actions = [\"${aws_autoscaling_policy.autopolicy-up.arn}\"]\n-}\n-\n-\n-resource \"aws_autoscaling_policy\" \"autopolicy-down\" {\n-  name = \"${var.environment}-${var.environment_prefix}-autopolicy-down\"\n-  scaling_adjustment = -1\n-  adjustment_type = \"ChangeInCapacity\"\n-  cooldown = 300\n-  autoscaling_group_name = \"${aws_autoscaling_group.webapp_v1.name}\"\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"cpualarm-down\" {\n-  alarm_name = \"${var.environment}-${var.environment_prefix}-alarm-down\"\n-  comparison_operator = \"LessThanOrEqualToThreshold\"\n-  evaluation_periods = \"2\"\n-  metric_name = \"CPUUtilization\"\n-  namespace = \"AWS/EC2\"\n-  period = \"120\"\n-  statistic = \"Average\"\n-  threshold = \"10\"\n-\n-  dimensions {\n-    AutoScalingGroupName = \"${aws_autoscaling_group.webapp_v1.name}\"\n-}\n-\n-  alarm_description = \"This metric monitor EC2 instance cpu utilization\"\n-  alarm_actions = [\"${aws_autoscaling_policy.autopolicy-down.arn}\"]\n-}\n-\n-\n-//# Create a classic load balancer\n-//resource \"aws_elb\" \"clb\" {\n-//  name               = \"webapp-clb-${var.environment_type}-${var.environment}\"\n-//  #availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n-//  subnets = [\"${data.aws_subnet.public_subnet_0.id}\",\"${data.aws_subnet.public_subnet_1.id}\",\"${data.aws_subnet.public_subnet_2.id}\"]\n-//  #subnets = [\"${data.aws_subnet.private_subnet_0.id}\", \"${data.aws_subnet.private_subnet_1.id}\",\"${data.aws_subnet.private_subnet_2.id}\"]\n-//  security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n-//  #internal = false\n-//\n-////  access_logs {\n-////    bucket        = \"foo\"\n-////    bucket_prefix = \"bar\"\n-////    interval      = 60\n-////  }\n-//\n-//  listener {\n-//    instance_port     = 80\n-//    instance_protocol = \"http\"\n-//    lb_port           = 80\n-//    lb_protocol       = \"http\"\n-//  }\n-//\n-//  listener {\n-//    instance_port      = 80\n-//    instance_protocol  = \"http\"\n-//    lb_port            = 443\n-//    lb_protocol        = \"https\"\n-//    ssl_certificate_id = \"arn:aws:acm:us-west-2:568065941114:certificate/3d7be649-e502-4c42-9c6e-556df048afbb\"\n-//  }\n-//\n-//  health_check {\n-//    healthy_threshold   = 2\n-//    unhealthy_threshold = 2\n-//    timeout             = 3\n-//    target              = \"HTTP:80/index.html\"\n-//    interval            = 30\n-//  }\n-//\n-//  #instances                   = [\"${aws_instance.foo.id}\"]\n-//  cross_zone_load_balancing   = true\n-//  idle_timeout                = 400\n-//  connection_draining         = true\n-//  connection_draining_timeout = 400\n-//\n-//  tags {\n-//    Name = \"webapp-elb\"\n-//  }\n-//}\n-\n-\n-# Use aws_alb, it's the ELB v2.   internal = false means internet facing\n-resource \"aws_lb\" \"alb\" {\n-  load_balancer_type = \"application\"\n-  internal = true\n-  //depends_on = [\"module.certificate\"]\n-  #depends_on = [\"aws_acm_certificate.cert\"]\n-  name = \"Webapp-${var.environment}-pub-elb\"\n-  security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n-  #subnets = [\"${data.aws_subnet.public_subnet_0.id}\", \"${data.aws_subnet.public_subnet_1.id}\",\"${data.aws_subnet.public_subnet_2.id}\"]\n-  subnets = [\"${data.aws_subnet.private_subnet_0.id}\", \"${data.aws_subnet.private_subnet_1.id}\",\"${data.aws_subnet.private_subnet_2.id}\"]\n-\n-  tags {\n-    #publicURL = \"${aws_route53_record.record_set.name}\"\n-    Name      = \"jenkins-alb-${var.environment}-${var.environment_prefix}\"\n-  }\n-\n-}\n-\n-resource \"aws_alb_listener\" \"listenerHttps\" {\n-  #certificate_arn = \"${module.certificate.arn}\"\n-  certificate_arn = \"arn:aws:acm:us-west-2:568065941114:certificate/3d7be649-e502-4c42-9c6e-556df048afbb\"\n-\n-  \"default_action\" {\n-    target_group_arn = \"${aws_alb_target_group.tgHttp.arn}\"\n-    type = \"forward\"\n-  }\n-  load_balancer_arn = \"${aws_lb.alb.arn}\"\n-  port = 443\n-  protocol = \"HTTPS\"\n-}\n-\n-resource \"aws_alb_listener\" \"listenerHttp\" {\n-  #certificate_arn = \"${module.certificate.arn}\"\n-\n-  \"default_action\" {\n-    target_group_arn = \"${aws_alb_target_group.tgHttp.arn}\"\n-    type = \"forward\"\n-  }\n-  load_balancer_arn = \"${aws_lb.alb.arn}\"\n-  port = 80\n-  protocol = \"HTTP\"\n-}\n-\n-\n-resource \"aws_alb_target_group\" \"tgHttp\" {\n-  port = 80\n-  protocol = \"HTTP\"\n-  vpc_id = \"${data.aws_vpc.myorg.id}\"\n-  health_check {\n-    healthy_threshold = 2\n-    unhealthy_threshold = 10\n-    timeout = 60\n-    interval = 300\n-    #target = \"HTTP:80/\"\n-    protocol = \"HTTP\"\n-    #port = \"80\"\n-    #path = \"/index.html\"\n-    path = \"/\"\n-  }\n-}\n-\n-resource \"aws_alb_listener_rule\" \"listener_rule_http\" {\n-  listener_arn = \"${aws_alb_listener.listenerHttp.arn}\"\n-  priority     = 100\n-\n-  action {\n-    type             = \"forward\"\n-    target_group_arn = \"${aws_alb_target_group.tgHttp.arn}\"\n-  }\n-\n-  condition {\n-    field  = \"path-pattern\"\n-    #values = [\"/static/*\"]\n-    values = [\"/*\"]\n-\n-  }\n-//  condition {\n-//    field = \"host-header\"\n-//    values = [\"${element(values(var.services_map), count.index)}.${var.domain}\"]\n-//  }\n-}\n-\n-resource \"aws_alb_listener_rule\" \"listener_rule_https\" {\n-  listener_arn = \"${aws_alb_listener.listenerHttps.arn}\"\n-  priority     = 100\n-\n-  action {\n-    type             = \"forward\"\n-    target_group_arn = \"${aws_alb_target_group.tgHttp.arn}\"\n-  }\n-\n-  condition {\n-    field  = \"path-pattern\"\n-    #values = [\"/static/*\"]\n-    values = [\"/*\"]\n-\n-  }\n-  //  condition {\n-  //    field = \"host-header\"\n-  //    values = [\"${element(values(var.services_map), count.index)}.${var.domain}\"]\n-  //  }\n-}\n-\n-//resource \"aws_alb_listener_rule\" \"host_based_routing\" {\n-//  listener_arn = \"${aws_lb_listener.front_end.arn}\"\n-//  priority     = 99\n-//\n-//  action {\n-//    type             = \"forward\"\n-//    target_group_arn = \"${aws_lb_target_group.static.arn}\"\n-//  }\n-//\n-//  condition {\n-//    field  = \"host-header\"\n-//    values = [\"my-service.*.terraform.io\"]\n-//  }\n-//}\n-\n-\n-resource \"aws_launch_configuration\" \"launchWebapp\" {\n-  #name = \"Webapp-LC-${var.environment_type}-${var.environment}-${md5(\"${data.template_file.init.rendered}\")}\"\n-  #name = \"Webapp-LC-${var.environment_type}-${var.environment}-${random_id.server.hex}\"\n-  root_block_device {\n-    #device_name = \"/dev/xvda\"\n-    volume_type = \"gp2\"\n-    delete_on_termination = true\n-  }\n-\n-  ebs_optimized = false\n-\n-  iam_instance_profile = \"${aws_iam_instance_profile.WebappInstanceProfile.name}\"\n-\n-  image_id        = \"${var.ami_id}\"\n-  enable_monitoring = true\n-  instance_type   = \"${var.ec2_instance_type}\"\n-  key_name = \"${var.ec2_keypair_name}\"\n-  placement_tenancy = \"default\"\n-  security_groups = [\"${aws_security_group.sgWebappEc2.id}\"]\n-\n-  user_data = \"${data.template_file.init.rendered}\"\n-\n-  lifecycle {\n-    create_before_destroy = true\n-  }\n-}\n-\n-# A security group for the ELB so it is accessible via the web\n-resource \"aws_security_group\" \"sgWebappElb\" {\n-  #name        = \"webapp_elb_sg\"\n-  description = \"Security Group for 1 ELB\"\n-  vpc_id        = \"${data.aws_vpc.myorg.id}\"\n-\n-  ingress {\n-    cidr_blocks = [\"0.0.0.0/0\"]\n-    from_port   = 443\n-    to_port     = 443\n-    protocol    = \"tcp\"\n-  }\n-  ingress {\n-    cidr_blocks = [\"0.0.0.0/0\"]\n-    from_port   = 80\n-    to_port     = 80\n-    protocol    = \"tcp\"\n-  }\n-\n-  egress {\n-    from_port = 0\n-    to_port = 0\n-    protocol = \"-1\"\n-    cidr_blocks = [\"0.0.0.0/0\"]\n-  }\n-}\n-\n-# Security group for EC2 instance\n-resource \"aws_security_group\" \"sgWebappEc2\" {\n-  #name = \"webapp_v1_instance_sg\"\n-  description = \"Security Group for Webapp v1 instances\"\n-  vpc_id = \"${data.aws_vpc.myorg.id}\"\n-\n-  ingress {\n-    cidr_blocks = [\"10.0.0.0/8\"]\n-    from_port = -1\n-    to_port = -1\n-    protocol = \"icmp\"\n-  }\n-\n-  ingress {\n-    cidr_blocks = [\"10.0.0.0/8\"]\n-    from_port = 22\n-    protocol = \"tcp\"\n-    to_port = 22\n-  }\n-\n-  #verify :may or may not need this\n-  ingress {\n-    security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n-    from_port = 80\n-    protocol = \"tcp\"\n-    to_port = 80\n-  }\n-\n-  ingress {\n-    security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n-    from_port = 443\n-    protocol = \"tcp\"\n-    to_port = 443\n-  }\n-\n-  egress {\n-    from_port       = 0\n-    to_port         = 0\n-    protocol        = \"-1\"\n-    cidr_blocks     = [\"0.0.0.0/0\"]\n-\n-  }\n-\n-\n-  lifecycle {\n-    create_before_destroy = true\n-  }\n-\n-}\n-\n-resource \"aws_iam_role\" \"WebappRole\" {\n-  name = \"${var.jenkins_v1_role_prefix}-${var.environment}-${var.environment_prefix}\"\n-  assume_role_policy = <<EOF\n-{\n-  \"Version\": \"2012-10-17\",\n-  \"Statement\": [{\n-      \"Effect\": \"Allow\",\n-      \"Principal\": {\n-          \"Service\": [\n-              \"ec2.amazonaws.com\"\n-          ]\n-      },\n-      \"Action\": [\n-          \"sts:AssumeRole\"\n-      ]\n-  }]\n-}\n-EOF\n-\n-  path = \"/\"\n-}\n-\n-resource \"aws_iam_instance_profile\" \"WebappInstanceProfile\" {\n-  path = \"/\"\n-  role = \"${aws_iam_role.WebappRole.name}\"\n-}\n-\n-resource \"aws_iam_policy\" \"root\" {\n-  #role = \"${aws_iam_role.WebappRole.id}\"\n-  policy = <<EOF\n-{\n-    \"Version\": \"2012-10-17\",\n-    \"Statement\": [{\n-        \"Effect\": \"Allow\",\n-        \"Action\": [\n-            \"ec2:DescribeInstances\",\n-            \"ec2:DescribeVolumes\",\n-            \"ec2:DescribeTags\",\n-            \"ec2:AttachVolume\",\n-            \"ec2:DetachVolume\",\n-            \"cloudformation:DescribeStacks\",\n-            \"kms:Decrypt\",\n-            \"sts:AssumeRole\",\n-            \"iam:GetUser\",\n-            \"iam:PassRole\",\n-            \"s3:*\"\n-        ],\n-        \"Resource\": \"*\"\n-    }, {\n-        \"Effect\": \"Allow\",\n-        \"Action\": [\n-            \"logs:Create*\",\n-            \"logs:PutLogEvents\",\n-            \"logs:DescribeLogStreams\"\n-        ],\n-        \"Resource\": \"arn:aws:logs:*:*:*\"\n-    }, {\n-        \"Action\": [\n-            \"s3:GetObject\",\n-            \"s3:PutObject\",\n-            \"s3:DeleteObject\",\n-            \"s3:ListBucket\"\n-        ],\n-        \"Effect\": \"Allow\",\n-        \"Resource\": [\n-          \"arn:aws:s3:::*\"\n-        ]\n-    }]\n-}\n-EOF\n-}\n-\n-resource \"aws_iam_role_policy_attachment\" \"root_policy_attach\" {\n-  role       = \"${aws_iam_role.WebappRole.name}\"\n-  policy_arn = \"${aws_iam_policy.root.arn}\"\n-}\n-\n-/*  Ask Jonathan, what this is\n-  \"ManagedPolicyArns\": [{\n-                    \"Fn::Sub\": \"arn:aws:iam::${AWS::AccountId}:policy/XlxaeInfraLoggingPolicy\"\n-                }],\n-*/\n-//resource \"aws_iam_role_policy_attachment\" \"log_policy_attach\" {\n-//  role       = \"${aws_iam_role.WebappRole.name}\"\n-//  policy_arn = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:policy/XlxaeInfraLoggingPolicy\"\n-//}\n-\n-//<project_name>-<environment>-<function_name>\n-\n-//3 cloudwatch log groups: access, error, api\n-resource \"aws_cloudwatch_log_group\" \"access_log_group\" {\n-  name = \"webapp-${var.environment}-access\"\n-  retention_in_days = 5\n-}\n-\n-//add more for api,error,access\n-\n-resource \"aws_cloudwatch_log_group\" \"error_log_group\" {\n-  name = \"webapp-${var.environment}-error\"\n-  retention_in_days = 5\n-}\n-\n-resource \"aws_cloudwatch_log_group\" \"api_log_group\" {\n-  name = \"webapp-${var.environment}-api\"\n-  retention_in_days = 5\n-}\n-\n-resource \"aws_cloudwatch_log_metric_filter\" \"404_metric_filter\" {\n-  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n-  \"metric_transformation\" {\n-    name = \"Status_404\"\n-    namespace = \"WebappMetrics\"\n-    value = \"1\"\n-  }\n-  name = \"404_metric_filter\"\n-  pattern = \"{ $.status = 404 }\"\n-}\n-resource \"aws_cloudwatch_log_metric_filter\" \"5xx_metric_filter\" {\n-  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n-  \"metric_transformation\" {\n-    name = \"Status_5XX\"\n-    namespace = \"WebappMetrics\"\n-    value = \"1\"\n-  }\n-  name = \"5xx_metric_filter\"\n-  pattern = \"{ $.status = 5* }\"\n-}\n-\n-resource \"aws_cloudwatch_log_metric_filter\" \"2xx_metric_filter\" {\n-  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n-\n-\n-  \"metric_transformation\" {\n-    name = \"Status_2XX\"\n-    namespace = \"WebappMetrics\"\n-    value = \"1\"\n-  }\n-  name = \"2xx_metric_filter\"\n-  pattern = \"{ $.status = 2* }\"\n-}\n-\n-resource \"aws_cloudwatch_log_metric_filter\" \"2xx_metric_filter_bytes\" {\n-  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n-  \"metric_transformation\" {\n-    name = \"body_bytes_sent\"\n-    namespace = \"WebappMetrics\"\n-    value = \"$.body_bytes_sent\"\n-  }\n-  name = \"2xx_metric_filter_bytes\"\n-  pattern = \"{ $.status = 2* }\"\n-}\n-\n-\n-#hosted zone mapping\n-data \"aws_route53_zone\" \"parent\" {\n-  name         = \"${var.route53_zone_base}.\"\n-  #private_zone = true\n-}\n-\n-resource \"aws_route53_record\" \"record_set\" {\n-  zone_id = \"${data.aws_route53_zone.parent.zone_id}\"\n-  name    = \"${var.environment}.${var.environment_prefix}.${var.route53_zone_base}\"\n-  type    = \"A\"\n-\n-  alias {\n-    #name                   = \"dualstack.${aws_lb.alb.dns_name}\"\n-    name                   = \"${aws_lb.alb.dns_name}\"\n-    zone_id                = \"${aws_lb.alb.zone_id}\"\n-    evaluate_target_health = false\n-  }\n-}\n-\n-\n-resource \"aws_s3_bucket\" \"s3bucket_jenkins\" {\n-  bucket = \"s3fs-em-devops-${var.aws_region}-${var.environment_prefix}-${var.environment}\"\n-  acl    = \"private\"\n-  #region = \"${var.aws_region}\"\n-  force_destroy = true\n-\n-  tags {\n-    Name        = \"jenkins_ec2_s3_mount\"\n-    Environment = \"${var.aws_region}\"\n-  }\n-}\n-\n-\n-output \"jenkins_r53_dns_name\" {\n-  description = \"The Load Balancer DNS Name\"\n-  value = \"${aws_route53_record.record_set.name}\"\n-}\n-\n-output \"elb_dns_name\" {\n-  description = \"The Load Balancer DNS Name\"\n-  value = \"${aws_lb.alb.dns_name}\"\n-\n-}\n-\n-output \"jenkins_s3_bucket_name\" {\n-  value = \"${aws_s3_bucket.s3bucket_jenkins.id}\"\n-}\n-\n-output \"aws_autoscaling_group\" {\n-  value = \"${aws_autoscaling_group.webapp_v1.name}\"\n-}\n-"
      },
      {
        "filename": "terraform/jenkins_alb_s3_mount_not_working/terraform.tfstate",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "status": "removed",
        "patch": "@@ -1,16 +0,0 @@\n-{\n-    \"version\": 3,\n-    \"terraform_version\": \"0.11.10\",\n-    \"serial\": 59,\n-    \"lineage\": \"d82f2f65-972d-2da0-9293-401f37a20261\",\n-    \"modules\": [\n-        {\n-            \"path\": [\n-                \"root\"\n-            ],\n-            \"outputs\": {},\n-            \"resources\": {},\n-            \"depends_on\": []\n-        }\n-    ]\n-}"
      },
      {
        "filename": "terraform/jenkins_alb_s3_mount_not_working/terraform.tfstate.backup",
        "additions": 0,
        "deletions": 1283,
        "changes": 1283,
        "status": "removed",
        "patch": "@@ -1,1283 +0,0 @@\n-{\n-    \"version\": 3,\n-    \"terraform_version\": \"0.11.10\",\n-    \"serial\": 59,\n-    \"lineage\": \"d82f2f65-972d-2da0-9293-401f37a20261\",\n-    \"modules\": [\n-        {\n-            \"path\": [\n-                \"root\"\n-            ],\n-            \"outputs\": {\n-                \"aws_autoscaling_group\": {\n-                    \"sensitive\": false,\n-                    \"type\": \"string\",\n-                    \"value\": \"Webapp-dev-jenkins\"\n-                },\n-                \"elb_dns_name\": {\n-                    \"sensitive\": false,\n-                    \"type\": \"string\",\n-                    \"value\": \"internal-Webapp-dev-pub-elb-1874650569.us-west-2.elb.amazonaws.com\"\n-                },\n-                \"jenkins_r53_dns_name\": {\n-                    \"sensitive\": false,\n-                    \"type\": \"string\",\n-                    \"value\": \"dev.jenkins.devops.elliemae.io\"\n-                },\n-                \"jenkins_s3_bucket_name\": {\n-                    \"sensitive\": false,\n-                    \"type\": \"string\",\n-                    \"value\": \"s3fs-em-devops-us-west-2-jenkins-dev\"\n-                }\n-            },\n-            \"resources\": {\n-                \"aws_alb_listener.listenerHttp\": {\n-                    \"type\": \"aws_alb_listener\",\n-                    \"depends_on\": [\n-                        \"aws_alb_target_group.tgHttp\",\n-                        \"aws_lb.alb\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener/app/Webapp-dev-pub-elb/e47039c13c657afa/f11e15fd5e45a965\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener/app/Webapp-dev-pub-elb/e47039c13c657afa/f11e15fd5e45a965\",\n-                            \"default_action.#\": \"1\",\n-                            \"default_action.0.authenticate_cognito.#\": \"0\",\n-                            \"default_action.0.authenticate_oidc.#\": \"0\",\n-                            \"default_action.0.fixed_response.#\": \"0\",\n-                            \"default_action.0.order\": \"0\",\n-                            \"default_action.0.redirect.#\": \"0\",\n-                            \"default_action.0.target_group_arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:targetgroup/tf-20190109225553905800000003/70701ae2937858e7\",\n-                            \"default_action.0.type\": \"forward\",\n-                            \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener/app/Webapp-dev-pub-elb/e47039c13c657afa/f11e15fd5e45a965\",\n-                            \"load_balancer_arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:loadbalancer/app/Webapp-dev-pub-elb/e47039c13c657afa\",\n-                            \"port\": \"80\",\n-                            \"protocol\": \"HTTP\",\n-                            \"ssl_policy\": \"\"\n-                        },\n-                        \"meta\": {\n-                            \"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\": {\n-                                \"read\": 600000000000\n-                            }\n-                        },\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_alb_listener.listenerHttps\": {\n-                    \"type\": \"aws_alb_listener\",\n-                    \"depends_on\": [\n-                        \"aws_alb_target_group.tgHttp\",\n-                        \"aws_lb.alb\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener/app/Webapp-dev-pub-elb/e47039c13c657afa/f8dcce5b22dbae5d\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener/app/Webapp-dev-pub-elb/e47039c13c657afa/f8dcce5b22dbae5d\",\n-                            \"certificate_arn\": \"arn:aws:acm:us-west-2:568065941114:certificate/3d7be649-e502-4c42-9c6e-556df048afbb\",\n-                            \"default_action.#\": \"1\",\n-                            \"default_action.0.authenticate_cognito.#\": \"0\",\n-                            \"default_action.0.authenticate_oidc.#\": \"0\",\n-                            \"default_action.0.fixed_response.#\": \"0\",\n-                            \"default_action.0.order\": \"0\",\n-                            \"default_action.0.redirect.#\": \"0\",\n-                            \"default_action.0.target_group_arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:targetgroup/tf-20190109225553905800000003/70701ae2937858e7\",\n-                            \"default_action.0.type\": \"forward\",\n-                            \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener/app/Webapp-dev-pub-elb/e47039c13c657afa/f8dcce5b22dbae5d\",\n-                            \"load_balancer_arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:loadbalancer/app/Webapp-dev-pub-elb/e47039c13c657afa\",\n-                            \"port\": \"443\",\n-                            \"protocol\": \"HTTPS\",\n-                            \"ssl_policy\": \"ELBSecurityPolicy-2016-08\"\n-                        },\n-                        \"meta\": {\n-                            \"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\": {\n-                                \"read\": 600000000000\n-                            }\n-                        },\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_alb_listener_rule.listener_rule_http\": {\n-                    \"type\": \"aws_alb_listener_rule\",\n-                    \"depends_on\": [\n-                        \"aws_alb_listener.listenerHttp\",\n-                        \"aws_alb_target_group.tgHttp\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener-rule/app/Webapp-dev-pub-elb/e47039c13c657afa/f11e15fd5e45a965/fc4d786c3c9e38da\",\n-                        \"attributes\": {\n-                            \"action.#\": \"1\",\n-                            \"action.0.authenticate_cognito.#\": \"0\",\n-                            \"action.0.authenticate_oidc.#\": \"0\",\n-                            \"action.0.fixed_response.#\": \"0\",\n-                            \"action.0.order\": \"0\",\n-                            \"action.0.redirect.#\": \"0\",\n-                            \"action.0.target_group_arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:targetgroup/tf-20190109225553905800000003/70701ae2937858e7\",\n-                            \"action.0.type\": \"forward\",\n-                            \"arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener-rule/app/Webapp-dev-pub-elb/e47039c13c657afa/f11e15fd5e45a965/fc4d786c3c9e38da\",\n-                            \"condition.#\": \"1\",\n-                            \"condition.2611135190.field\": \"path-pattern\",\n-                            \"condition.2611135190.values.#\": \"1\",\n-                            \"condition.2611135190.values.0\": \"/*\",\n-                            \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener-rule/app/Webapp-dev-pub-elb/e47039c13c657afa/f11e15fd5e45a965/fc4d786c3c9e38da\",\n-                            \"listener_arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener/app/Webapp-dev-pub-elb/e47039c13c657afa/f11e15fd5e45a965\",\n-                            \"priority\": \"100\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_alb_listener_rule.listener_rule_https\": {\n-                    \"type\": \"aws_alb_listener_rule\",\n-                    \"depends_on\": [\n-                        \"aws_alb_listener.listenerHttps\",\n-                        \"aws_alb_target_group.tgHttp\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener-rule/app/Webapp-dev-pub-elb/e47039c13c657afa/f8dcce5b22dbae5d/95276cb40218dd45\",\n-                        \"attributes\": {\n-                            \"action.#\": \"1\",\n-                            \"action.0.authenticate_cognito.#\": \"0\",\n-                            \"action.0.authenticate_oidc.#\": \"0\",\n-                            \"action.0.fixed_response.#\": \"0\",\n-                            \"action.0.order\": \"0\",\n-                            \"action.0.redirect.#\": \"0\",\n-                            \"action.0.target_group_arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:targetgroup/tf-20190109225553905800000003/70701ae2937858e7\",\n-                            \"action.0.type\": \"forward\",\n-                            \"arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener-rule/app/Webapp-dev-pub-elb/e47039c13c657afa/f8dcce5b22dbae5d/95276cb40218dd45\",\n-                            \"condition.#\": \"1\",\n-                            \"condition.2611135190.field\": \"path-pattern\",\n-                            \"condition.2611135190.values.#\": \"1\",\n-                            \"condition.2611135190.values.0\": \"/*\",\n-                            \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener-rule/app/Webapp-dev-pub-elb/e47039c13c657afa/f8dcce5b22dbae5d/95276cb40218dd45\",\n-                            \"listener_arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:listener/app/Webapp-dev-pub-elb/e47039c13c657afa/f8dcce5b22dbae5d\",\n-                            \"priority\": \"100\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_alb_target_group.tgHttp\": {\n-                    \"type\": \"aws_alb_target_group\",\n-                    \"depends_on\": [\n-                        \"data.aws_vpc.myorg\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:targetgroup/tf-20190109225553905800000003/70701ae2937858e7\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:targetgroup/tf-20190109225553905800000003/70701ae2937858e7\",\n-                            \"arn_suffix\": \"targetgroup/tf-20190109225553905800000003/70701ae2937858e7\",\n-                            \"deregistration_delay\": \"300\",\n-                            \"health_check.#\": \"1\",\n-                            \"health_check.0.healthy_threshold\": \"2\",\n-                            \"health_check.0.interval\": \"300\",\n-                            \"health_check.0.matcher\": \"200\",\n-                            \"health_check.0.path\": \"/\",\n-                            \"health_check.0.port\": \"traffic-port\",\n-                            \"health_check.0.protocol\": \"HTTP\",\n-                            \"health_check.0.timeout\": \"60\",\n-                            \"health_check.0.unhealthy_threshold\": \"10\",\n-                            \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:targetgroup/tf-20190109225553905800000003/70701ae2937858e7\",\n-                            \"name\": \"tf-20190109225553905800000003\",\n-                            \"port\": \"80\",\n-                            \"protocol\": \"HTTP\",\n-                            \"proxy_protocol_v2\": \"false\",\n-                            \"slow_start\": \"0\",\n-                            \"stickiness.#\": \"1\",\n-                            \"stickiness.0.cookie_duration\": \"86400\",\n-                            \"stickiness.0.enabled\": \"false\",\n-                            \"stickiness.0.type\": \"lb_cookie\",\n-                            \"tags.%\": \"0\",\n-                            \"target_type\": \"instance\",\n-                            \"vpc_id\": \"vpc-ee7e9588\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_autoscaling_group.webapp_v1\": {\n-                    \"type\": \"aws_autoscaling_group\",\n-                    \"depends_on\": [\n-                        \"aws_alb_target_group.tgHttp\",\n-                        \"aws_launch_configuration.launchWebapp\",\n-                        \"data.aws_subnet.private_subnet_0\",\n-                        \"data.aws_subnet.private_subnet_1\",\n-                        \"data.aws_subnet.private_subnet_2\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"Webapp-dev-jenkins\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:autoscaling:us-west-2:568065941114:autoScalingGroup:aa8401e3-97f4-4dea-a866-3cce0d326a97:autoScalingGroupName/Webapp-dev-jenkins\",\n-                            \"availability_zones.#\": \"3\",\n-                            \"availability_zones.2050015877\": \"us-west-2c\",\n-                            \"availability_zones.221770259\": \"us-west-2b\",\n-                            \"availability_zones.2487133097\": \"us-west-2a\",\n-                            \"default_cooldown\": \"600\",\n-                            \"desired_capacity\": \"1\",\n-                            \"enabled_metrics.#\": \"5\",\n-                            \"enabled_metrics.1940933563\": \"GroupTotalInstances\",\n-                            \"enabled_metrics.3394537085\": \"GroupDesiredCapacity\",\n-                            \"enabled_metrics.3551801763\": \"GroupInServiceInstances\",\n-                            \"enabled_metrics.4118539418\": \"GroupMinSize\",\n-                            \"enabled_metrics.4136111317\": \"GroupMaxSize\",\n-                            \"force_delete\": \"false\",\n-                            \"health_check_grace_period\": \"900\",\n-                            \"health_check_type\": \"ELB\",\n-                            \"id\": \"Webapp-dev-jenkins\",\n-                            \"launch_configuration\": \"terraform-20190109225559745100000007\",\n-                            \"launch_template.#\": \"0\",\n-                            \"load_balancers.#\": \"0\",\n-                            \"max_size\": \"1\",\n-                            \"metrics_granularity\": \"1Minute\",\n-                            \"min_size\": \"1\",\n-                            \"name\": \"Webapp-dev-jenkins\",\n-                            \"placement_group\": \"\",\n-                            \"protect_from_scale_in\": \"false\",\n-                            \"service_linked_role_arn\": \"arn:aws:iam::568065941114:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling\",\n-                            \"suspended_processes.#\": \"0\",\n-                            \"tags.#\": \"8\",\n-                            \"tags.0.%\": \"3\",\n-                            \"tags.0.key\": \"Name\",\n-                            \"tags.0.propagate_at_launch\": \"1\",\n-                            \"tags.0.value\": \"test-jinstance\",\n-                            \"tags.1.%\": \"3\",\n-                            \"tags.1.key\": \"Backup\",\n-                            \"tags.1.propagate_at_launch\": \"1\",\n-                            \"tags.1.value\": \"1\",\n-                            \"tags.2.%\": \"3\",\n-                            \"tags.2.key\": \"Project\",\n-                            \"tags.2.propagate_at_launch\": \"1\",\n-                            \"tags.2.value\": \"webappv1\",\n-                            \"tags.3.%\": \"3\",\n-                            \"tags.3.key\": \"Department\",\n-                            \"tags.3.propagate_at_launch\": \"1\",\n-                            \"tags.3.value\": \"DevOps Eng\",\n-                            \"tags.4.%\": \"3\",\n-                            \"tags.4.key\": \"Environment\",\n-                            \"tags.4.propagate_at_launch\": \"1\",\n-                            \"tags.4.value\": \"dev-jenkins\",\n-                            \"tags.5.%\": \"3\",\n-                            \"tags.5.key\": \"Owner\",\n-                            \"tags.5.propagate_at_launch\": \"1\",\n-                            \"tags.5.value\": \"devops@xxx.com\",\n-                            \"tags.6.%\": \"3\",\n-                            \"tags.6.key\": \"Cost Center\",\n-                            \"tags.6.propagate_at_launch\": \"1\",\n-                            \"tags.6.value\": \"CS123\",\n-                            \"tags.7.%\": \"3\",\n-                            \"tags.7.key\": \"Compliance\",\n-                            \"tags.7.propagate_at_launch\": \"1\",\n-                            \"tags.7.value\": \"No-PII\",\n-                            \"target_group_arns.#\": \"1\",\n-                            \"target_group_arns.206994085\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:targetgroup/tf-20190109225553905800000003/70701ae2937858e7\",\n-                            \"termination_policies.#\": \"2\",\n-                            \"termination_policies.0\": \"OldestLaunchConfiguration\",\n-                            \"termination_policies.1\": \"OldestInstance\",\n-                            \"vpc_zone_identifier.#\": \"3\",\n-                            \"vpc_zone_identifier.1136435507\": \"subnet-85a501de\",\n-                            \"vpc_zone_identifier.1680021681\": \"subnet-e0faa5a9\",\n-                            \"vpc_zone_identifier.3122230202\": \"subnet-89aeaaee\",\n-                            \"wait_for_capacity_timeout\": \"10m\"\n-                        },\n-                        \"meta\": {\n-                            \"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\": {\n-                                \"delete\": 600000000000\n-                            }\n-                        },\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_autoscaling_policy.autopolicy-down\": {\n-                    \"type\": \"aws_autoscaling_policy\",\n-                    \"depends_on\": [\n-                        \"aws_autoscaling_group.webapp_v1\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"dev-jenkins-autopolicy-down\",\n-                        \"attributes\": {\n-                            \"adjustment_type\": \"ChangeInCapacity\",\n-                            \"arn\": \"arn:aws:autoscaling:us-west-2:568065941114:scalingPolicy:a5829779-3a84-448f-85e2-432521118630:autoScalingGroupName/Webapp-dev-jenkins:policyName/dev-jenkins-autopolicy-down\",\n-                            \"autoscaling_group_name\": \"Webapp-dev-jenkins\",\n-                            \"cooldown\": \"300\",\n-                            \"estimated_instance_warmup\": \"0\",\n-                            \"id\": \"dev-jenkins-autopolicy-down\",\n-                            \"metric_aggregation_type\": \"\",\n-                            \"min_adjustment_step\": \"0\",\n-                            \"name\": \"dev-jenkins-autopolicy-down\",\n-                            \"policy_type\": \"SimpleScaling\",\n-                            \"scaling_adjustment\": \"-1\",\n-                            \"step_adjustment.#\": \"0\",\n-                            \"target_tracking_configuration.#\": \"0\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_autoscaling_policy.autopolicy-up\": {\n-                    \"type\": \"aws_autoscaling_policy\",\n-                    \"depends_on\": [\n-                        \"aws_autoscaling_group.webapp_v1\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"dev-jenkins-autopolicy-up\",\n-                        \"attributes\": {\n-                            \"adjustment_type\": \"ChangeInCapacity\",\n-                            \"arn\": \"arn:aws:autoscaling:us-west-2:568065941114:scalingPolicy:c23362ec-0002-4862-80bf-7675e6e2acbf:autoScalingGroupName/Webapp-dev-jenkins:policyName/dev-jenkins-autopolicy-up\",\n-                            \"autoscaling_group_name\": \"Webapp-dev-jenkins\",\n-                            \"cooldown\": \"300\",\n-                            \"estimated_instance_warmup\": \"0\",\n-                            \"id\": \"dev-jenkins-autopolicy-up\",\n-                            \"metric_aggregation_type\": \"\",\n-                            \"min_adjustment_step\": \"0\",\n-                            \"name\": \"dev-jenkins-autopolicy-up\",\n-                            \"policy_type\": \"SimpleScaling\",\n-                            \"scaling_adjustment\": \"1\",\n-                            \"step_adjustment.#\": \"0\",\n-                            \"target_tracking_configuration.#\": \"0\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_cloudwatch_log_group.access_log_group\": {\n-                    \"type\": \"aws_cloudwatch_log_group\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"webapp-dev-access\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:logs:us-west-2:568065941114:log-group:webapp-dev-access:*\",\n-                            \"id\": \"webapp-dev-access\",\n-                            \"kms_key_id\": \"\",\n-                            \"name\": \"webapp-dev-access\",\n-                            \"retention_in_days\": \"5\",\n-                            \"tags.%\": \"0\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_cloudwatch_log_group.api_log_group\": {\n-                    \"type\": \"aws_cloudwatch_log_group\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"webapp-dev-api\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:logs:us-west-2:568065941114:log-group:webapp-dev-api:*\",\n-                            \"id\": \"webapp-dev-api\",\n-                            \"kms_key_id\": \"\",\n-                            \"name\": \"webapp-dev-api\",\n-                            \"retention_in_days\": \"5\",\n-                            \"tags.%\": \"0\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_cloudwatch_log_group.error_log_group\": {\n-                    \"type\": \"aws_cloudwatch_log_group\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"webapp-dev-error\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:logs:us-west-2:568065941114:log-group:webapp-dev-error:*\",\n-                            \"id\": \"webapp-dev-error\",\n-                            \"kms_key_id\": \"\",\n-                            \"name\": \"webapp-dev-error\",\n-                            \"retention_in_days\": \"5\",\n-                            \"tags.%\": \"0\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_cloudwatch_log_metric_filter.2xx_metric_filter\": {\n-                    \"type\": \"aws_cloudwatch_log_metric_filter\",\n-                    \"depends_on\": [\n-                        \"aws_cloudwatch_log_group.access_log_group\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"2xx_metric_filter\",\n-                        \"attributes\": {\n-                            \"id\": \"2xx_metric_filter\",\n-                            \"log_group_name\": \"webapp-dev-access\",\n-                            \"metric_transformation.#\": \"1\",\n-                            \"metric_transformation.0.default_value\": \"0\",\n-                            \"metric_transformation.0.name\": \"Status_2XX\",\n-                            \"metric_transformation.0.namespace\": \"WebappMetrics\",\n-                            \"metric_transformation.0.value\": \"1\",\n-                            \"name\": \"2xx_metric_filter\",\n-                            \"pattern\": \"{ $.status = 2* }\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_cloudwatch_log_metric_filter.2xx_metric_filter_bytes\": {\n-                    \"type\": \"aws_cloudwatch_log_metric_filter\",\n-                    \"depends_on\": [\n-                        \"aws_cloudwatch_log_group.access_log_group\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"2xx_metric_filter_bytes\",\n-                        \"attributes\": {\n-                            \"id\": \"2xx_metric_filter_bytes\",\n-                            \"log_group_name\": \"webapp-dev-access\",\n-                            \"metric_transformation.#\": \"1\",\n-                            \"metric_transformation.0.default_value\": \"0\",\n-                            \"metric_transformation.0.name\": \"body_bytes_sent\",\n-                            \"metric_transformation.0.namespace\": \"WebappMetrics\",\n-                            \"metric_transformation.0.value\": \"$.body_bytes_sent\",\n-                            \"name\": \"2xx_metric_filter_bytes\",\n-                            \"pattern\": \"{ $.status = 2* }\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_cloudwatch_log_metric_filter.404_metric_filter\": {\n-                    \"type\": \"aws_cloudwatch_log_metric_filter\",\n-                    \"depends_on\": [\n-                        \"aws_cloudwatch_log_group.access_log_group\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"404_metric_filter\",\n-                        \"attributes\": {\n-                            \"id\": \"404_metric_filter\",\n-                            \"log_group_name\": \"webapp-dev-access\",\n-                            \"metric_transformation.#\": \"1\",\n-                            \"metric_transformation.0.default_value\": \"0\",\n-                            \"metric_transformation.0.name\": \"Status_404\",\n-                            \"metric_transformation.0.namespace\": \"WebappMetrics\",\n-                            \"metric_transformation.0.value\": \"1\",\n-                            \"name\": \"404_metric_filter\",\n-                            \"pattern\": \"{ $.status = 404 }\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_cloudwatch_log_metric_filter.5xx_metric_filter\": {\n-                    \"type\": \"aws_cloudwatch_log_metric_filter\",\n-                    \"depends_on\": [\n-                        \"aws_cloudwatch_log_group.access_log_group\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"5xx_metric_filter\",\n-                        \"attributes\": {\n-                            \"id\": \"5xx_metric_filter\",\n-                            \"log_group_name\": \"webapp-dev-access\",\n-                            \"metric_transformation.#\": \"1\",\n-                            \"metric_transformation.0.default_value\": \"0\",\n-                            \"metric_transformation.0.name\": \"Status_5XX\",\n-                            \"metric_transformation.0.namespace\": \"WebappMetrics\",\n-                            \"metric_transformation.0.value\": \"1\",\n-                            \"name\": \"5xx_metric_filter\",\n-                            \"pattern\": \"{ $.status = 5* }\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_cloudwatch_metric_alarm.cpualarm-down\": {\n-                    \"type\": \"aws_cloudwatch_metric_alarm\",\n-                    \"depends_on\": [\n-                        \"aws_autoscaling_group.webapp_v1\",\n-                        \"aws_autoscaling_policy.autopolicy-down\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"dev-jenkins-alarm-down\",\n-                        \"attributes\": {\n-                            \"actions_enabled\": \"true\",\n-                            \"alarm_actions.#\": \"1\",\n-                            \"alarm_actions.800511769\": \"arn:aws:autoscaling:us-west-2:568065941114:scalingPolicy:a5829779-3a84-448f-85e2-432521118630:autoScalingGroupName/Webapp-dev-jenkins:policyName/dev-jenkins-autopolicy-down\",\n-                            \"alarm_description\": \"This metric monitor EC2 instance cpu utilization\",\n-                            \"alarm_name\": \"dev-jenkins-alarm-down\",\n-                            \"arn\": \"arn:aws:cloudwatch:us-west-2:568065941114:alarm:dev-jenkins-alarm-down\",\n-                            \"comparison_operator\": \"LessThanOrEqualToThreshold\",\n-                            \"datapoints_to_alarm\": \"0\",\n-                            \"dimensions.%\": \"1\",\n-                            \"dimensions.AutoScalingGroupName\": \"Webapp-dev-jenkins\",\n-                            \"evaluate_low_sample_count_percentiles\": \"\",\n-                            \"evaluation_periods\": \"2\",\n-                            \"extended_statistic\": \"\",\n-                            \"id\": \"dev-jenkins-alarm-down\",\n-                            \"insufficient_data_actions.#\": \"0\",\n-                            \"metric_name\": \"CPUUtilization\",\n-                            \"namespace\": \"AWS/EC2\",\n-                            \"ok_actions.#\": \"0\",\n-                            \"period\": \"120\",\n-                            \"statistic\": \"Average\",\n-                            \"threshold\": \"10\",\n-                            \"treat_missing_data\": \"missing\",\n-                            \"unit\": \"\"\n-                        },\n-                        \"meta\": {\n-                            \"schema_version\": \"1\"\n-                        },\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_cloudwatch_metric_alarm.cpualarm-up\": {\n-                    \"type\": \"aws_cloudwatch_metric_alarm\",\n-                    \"depends_on\": [\n-                        \"aws_autoscaling_group.webapp_v1\",\n-                        \"aws_autoscaling_policy.autopolicy-up\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"dev-jenkins-alarm-up\",\n-                        \"attributes\": {\n-                            \"actions_enabled\": \"true\",\n-                            \"alarm_actions.#\": \"1\",\n-                            \"alarm_actions.1494251018\": \"arn:aws:autoscaling:us-west-2:568065941114:scalingPolicy:c23362ec-0002-4862-80bf-7675e6e2acbf:autoScalingGroupName/Webapp-dev-jenkins:policyName/dev-jenkins-autopolicy-up\",\n-                            \"alarm_description\": \"This metric monitor EC2 instance cpu utilization\",\n-                            \"alarm_name\": \"dev-jenkins-alarm-up\",\n-                            \"arn\": \"arn:aws:cloudwatch:us-west-2:568065941114:alarm:dev-jenkins-alarm-up\",\n-                            \"comparison_operator\": \"GreaterThanOrEqualToThreshold\",\n-                            \"datapoints_to_alarm\": \"0\",\n-                            \"dimensions.%\": \"1\",\n-                            \"dimensions.AutoScalingGroupName\": \"Webapp-dev-jenkins\",\n-                            \"evaluate_low_sample_count_percentiles\": \"\",\n-                            \"evaluation_periods\": \"2\",\n-                            \"extended_statistic\": \"\",\n-                            \"id\": \"dev-jenkins-alarm-up\",\n-                            \"insufficient_data_actions.#\": \"0\",\n-                            \"metric_name\": \"CPUUtilization\",\n-                            \"namespace\": \"AWS/EC2\",\n-                            \"ok_actions.#\": \"0\",\n-                            \"period\": \"120\",\n-                            \"statistic\": \"Average\",\n-                            \"threshold\": \"60\",\n-                            \"treat_missing_data\": \"missing\",\n-                            \"unit\": \"\"\n-                        },\n-                        \"meta\": {\n-                            \"schema_version\": \"1\"\n-                        },\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_iam_instance_profile.WebappInstanceProfile\": {\n-                    \"type\": \"aws_iam_instance_profile\",\n-                    \"depends_on\": [\n-                        \"aws_iam_role.WebappRole\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"terraform-20190109225554802900000004\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:iam::568065941114:instance-profile/terraform-20190109225554802900000004\",\n-                            \"create_date\": \"2019-01-09T22:55:57Z\",\n-                            \"id\": \"terraform-20190109225554802900000004\",\n-                            \"name\": \"terraform-20190109225554802900000004\",\n-                            \"path\": \"/\",\n-                            \"role\": \"jenkins_v1_role-dev-jenkins\",\n-                            \"roles.#\": \"0\",\n-                            \"unique_id\": \"AIPAJ5E4CYLALKDPHF5LA\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_iam_policy.root\": {\n-                    \"type\": \"aws_iam_policy\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"arn:aws:iam::568065941114:policy/terraform-20190109225553904100000001\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:iam::568065941114:policy/terraform-20190109225553904100000001\",\n-                            \"description\": \"\",\n-                            \"id\": \"arn:aws:iam::568065941114:policy/terraform-20190109225553904100000001\",\n-                            \"name\": \"terraform-20190109225553904100000001\",\n-                            \"path\": \"/\",\n-                            \"policy\": \"{\\n    \\\"Version\\\": \\\"2012-10-17\\\",\\n    \\\"Statement\\\": [{\\n        \\\"Effect\\\": \\\"Allow\\\",\\n        \\\"Action\\\": [\\n            \\\"ec2:DescribeInstances\\\",\\n            \\\"ec2:DescribeVolumes\\\",\\n            \\\"ec2:DescribeTags\\\",\\n            \\\"ec2:AttachVolume\\\",\\n            \\\"ec2:DetachVolume\\\",\\n            \\\"cloudformation:DescribeStacks\\\",\\n            \\\"kms:Decrypt\\\",\\n            \\\"sts:AssumeRole\\\",\\n            \\\"iam:GetUser\\\",\\n            \\\"iam:PassRole\\\",\\n            \\\"s3:*\\\"\\n        ],\\n        \\\"Resource\\\": \\\"*\\\"\\n    }, {\\n        \\\"Effect\\\": \\\"Allow\\\",\\n        \\\"Action\\\": [\\n            \\\"logs:Create*\\\",\\n            \\\"logs:PutLogEvents\\\",\\n            \\\"logs:DescribeLogStreams\\\"\\n        ],\\n        \\\"Resource\\\": \\\"arn:aws:logs:*:*:*\\\"\\n    }, {\\n        \\\"Action\\\": [\\n            \\\"s3:GetObject\\\",\\n            \\\"s3:PutObject\\\",\\n            \\\"s3:DeleteObject\\\",\\n            \\\"s3:ListBucket\\\"\\n        ],\\n        \\\"Effect\\\": \\\"Allow\\\",\\n        \\\"Resource\\\": [\\n          \\\"arn:aws:s3:::*\\\"\\n        ]\\n    }]\\n}\\n\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_iam_role.WebappRole\": {\n-                    \"type\": \"aws_iam_role\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"jenkins_v1_role-dev-jenkins\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:iam::568065941114:role/jenkins_v1_role-dev-jenkins\",\n-                            \"assume_role_policy\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Service\\\":\\\"ec2.amazonaws.com\\\"},\\\"Action\\\":\\\"sts:AssumeRole\\\"}]}\",\n-                            \"create_date\": \"2019-01-09T22:55:56Z\",\n-                            \"description\": \"\",\n-                            \"force_detach_policies\": \"false\",\n-                            \"id\": \"jenkins_v1_role-dev-jenkins\",\n-                            \"max_session_duration\": \"3600\",\n-                            \"name\": \"jenkins_v1_role-dev-jenkins\",\n-                            \"path\": \"/\",\n-                            \"unique_id\": \"AROAJDFRVNYA6LE5E33LC\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_iam_role_policy_attachment.root_policy_attach\": {\n-                    \"type\": \"aws_iam_role_policy_attachment\",\n-                    \"depends_on\": [\n-                        \"aws_iam_policy.root\",\n-                        \"aws_iam_role.WebappRole\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"jenkins_v1_role-dev-jenkins-20190109225556024700000005\",\n-                        \"attributes\": {\n-                            \"id\": \"jenkins_v1_role-dev-jenkins-20190109225556024700000005\",\n-                            \"policy_arn\": \"arn:aws:iam::568065941114:policy/terraform-20190109225553904100000001\",\n-                            \"role\": \"jenkins_v1_role-dev-jenkins\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_launch_configuration.launchWebapp\": {\n-                    \"type\": \"aws_launch_configuration\",\n-                    \"depends_on\": [\n-                        \"aws_iam_instance_profile.WebappInstanceProfile\",\n-                        \"aws_security_group.sgWebappEc2\",\n-                        \"data.template_file.init\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"terraform-20190109225559745100000007\",\n-                        \"attributes\": {\n-                            \"associate_public_ip_address\": \"false\",\n-                            \"ebs_block_device.#\": \"0\",\n-                            \"ebs_optimized\": \"false\",\n-                            \"enable_monitoring\": \"true\",\n-                            \"ephemeral_block_device.#\": \"0\",\n-                            \"iam_instance_profile\": \"terraform-20190109225554802900000004\",\n-                            \"id\": \"terraform-20190109225559745100000007\",\n-                            \"image_id\": \"ami-0d1000aff9a9bad89\",\n-                            \"instance_type\": \"t2.medium\",\n-                            \"key_name\": \"emdevops\",\n-                            \"name\": \"terraform-20190109225559745100000007\",\n-                            \"placement_tenancy\": \"default\",\n-                            \"root_block_device.#\": \"1\",\n-                            \"root_block_device.0.delete_on_termination\": \"true\",\n-                            \"root_block_device.0.iops\": \"0\",\n-                            \"root_block_device.0.volume_size\": \"0\",\n-                            \"root_block_device.0.volume_type\": \"gp2\",\n-                            \"security_groups.#\": \"1\",\n-                            \"security_groups.765115625\": \"sg-0ea279467406ec41f\",\n-                            \"spot_price\": \"\",\n-                            \"user_data\": \"a30f6c920092cad6c6c90d2dcd5d2125cf4203d7\",\n-                            \"vpc_classic_link_id\": \"\",\n-                            \"vpc_classic_link_security_groups.#\": \"0\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_lb.alb\": {\n-                    \"type\": \"aws_lb\",\n-                    \"depends_on\": [\n-                        \"aws_security_group.sgWebappElb\",\n-                        \"data.aws_subnet.private_subnet_0\",\n-                        \"data.aws_subnet.private_subnet_1\",\n-                        \"data.aws_subnet.private_subnet_2\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:loadbalancer/app/Webapp-dev-pub-elb/e47039c13c657afa\",\n-                        \"attributes\": {\n-                            \"access_logs.#\": \"0\",\n-                            \"arn\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:loadbalancer/app/Webapp-dev-pub-elb/e47039c13c657afa\",\n-                            \"arn_suffix\": \"app/Webapp-dev-pub-elb/e47039c13c657afa\",\n-                            \"dns_name\": \"internal-Webapp-dev-pub-elb-1874650569.us-west-2.elb.amazonaws.com\",\n-                            \"enable_deletion_protection\": \"false\",\n-                            \"enable_http2\": \"true\",\n-                            \"id\": \"arn:aws:elasticloadbalancing:us-west-2:568065941114:loadbalancer/app/Webapp-dev-pub-elb/e47039c13c657afa\",\n-                            \"idle_timeout\": \"60\",\n-                            \"internal\": \"true\",\n-                            \"ip_address_type\": \"ipv4\",\n-                            \"load_balancer_type\": \"application\",\n-                            \"name\": \"Webapp-dev-pub-elb\",\n-                            \"security_groups.#\": \"1\",\n-                            \"security_groups.1249137825\": \"sg-09e3946d53cbc6a9d\",\n-                            \"subnet_mapping.#\": \"0\",\n-                            \"subnets.#\": \"3\",\n-                            \"subnets.1136435507\": \"subnet-85a501de\",\n-                            \"subnets.1680021681\": \"subnet-e0faa5a9\",\n-                            \"subnets.3122230202\": \"subnet-89aeaaee\",\n-                            \"tags.%\": \"1\",\n-                            \"tags.Name\": \"jenkins-alb-dev-jenkins\",\n-                            \"vpc_id\": \"vpc-ee7e9588\",\n-                            \"zone_id\": \"Z1H1FL5HABSF5\"\n-                        },\n-                        \"meta\": {\n-                            \"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\": {\n-                                \"create\": 600000000000,\n-                                \"delete\": 600000000000,\n-                                \"update\": 600000000000\n-                            }\n-                        },\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_route53_record.record_set\": {\n-                    \"type\": \"aws_route53_record\",\n-                    \"depends_on\": [\n-                        \"aws_lb.alb\",\n-                        \"data.aws_route53_zone.parent\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"Z2GXW5PUHJ7WHR_dev.jenkins.devops.elliemae.io_A\",\n-                        \"attributes\": {\n-                            \"alias.#\": \"1\",\n-                            \"alias.1392905418.evaluate_target_health\": \"false\",\n-                            \"alias.1392905418.name\": \"internal-Webapp-dev-pub-elb-1874650569.us-west-2.elb.amazonaws.com\",\n-                            \"alias.1392905418.zone_id\": \"Z1H1FL5HABSF5\",\n-                            \"allow_overwrite\": \"true\",\n-                            \"fqdn\": \"dev.jenkins.devops.elliemae.io\",\n-                            \"id\": \"Z2GXW5PUHJ7WHR_dev.jenkins.devops.elliemae.io_A\",\n-                            \"name\": \"dev.jenkins.devops.elliemae.io\",\n-                            \"type\": \"A\",\n-                            \"zone_id\": \"Z2GXW5PUHJ7WHR\"\n-                        },\n-                        \"meta\": {\n-                            \"schema_version\": \"2\"\n-                        },\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_s3_bucket.s3bucket_jenkins\": {\n-                    \"type\": \"aws_s3_bucket\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"s3fs-em-devops-us-west-2-jenkins-dev\",\n-                        \"attributes\": {\n-                            \"acceleration_status\": \"\",\n-                            \"acl\": \"private\",\n-                            \"arn\": \"arn:aws:s3:::s3fs-em-devops-us-west-2-jenkins-dev\",\n-                            \"bucket\": \"s3fs-em-devops-us-west-2-jenkins-dev\",\n-                            \"bucket_domain_name\": \"s3fs-em-devops-us-west-2-jenkins-dev.s3.amazonaws.com\",\n-                            \"bucket_regional_domain_name\": \"s3fs-em-devops-us-west-2-jenkins-dev.s3.us-west-2.amazonaws.com\",\n-                            \"cors_rule.#\": \"0\",\n-                            \"force_destroy\": \"true\",\n-                            \"hosted_zone_id\": \"Z3BJ6K6RIION7M\",\n-                            \"id\": \"s3fs-em-devops-us-west-2-jenkins-dev\",\n-                            \"lifecycle_rule.#\": \"0\",\n-                            \"logging.#\": \"0\",\n-                            \"region\": \"us-west-2\",\n-                            \"replication_configuration.#\": \"0\",\n-                            \"request_payer\": \"BucketOwner\",\n-                            \"server_side_encryption_configuration.#\": \"0\",\n-                            \"tags.%\": \"2\",\n-                            \"tags.Environment\": \"us-west-2\",\n-                            \"tags.Name\": \"jenkins_ec2_s3_mount\",\n-                            \"versioning.#\": \"1\",\n-                            \"versioning.0.enabled\": \"false\",\n-                            \"versioning.0.mfa_delete\": \"false\",\n-                            \"website.#\": \"0\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_security_group.sgWebappEc2\": {\n-                    \"type\": \"aws_security_group\",\n-                    \"depends_on\": [\n-                        \"aws_security_group.sgWebappElb\",\n-                        \"data.aws_vpc.myorg\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"sg-0ea279467406ec41f\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:ec2:us-west-2:568065941114:security-group/sg-0ea279467406ec41f\",\n-                            \"description\": \"Security Group for Webapp v1 instances\",\n-                            \"egress.#\": \"1\",\n-                            \"egress.482069346.cidr_blocks.#\": \"1\",\n-                            \"egress.482069346.cidr_blocks.0\": \"0.0.0.0/0\",\n-                            \"egress.482069346.description\": \"\",\n-                            \"egress.482069346.from_port\": \"0\",\n-                            \"egress.482069346.ipv6_cidr_blocks.#\": \"0\",\n-                            \"egress.482069346.prefix_list_ids.#\": \"0\",\n-                            \"egress.482069346.protocol\": \"-1\",\n-                            \"egress.482069346.security_groups.#\": \"0\",\n-                            \"egress.482069346.self\": \"false\",\n-                            \"egress.482069346.to_port\": \"0\",\n-                            \"id\": \"sg-0ea279467406ec41f\",\n-                            \"ingress.#\": \"4\",\n-                            \"ingress.179083333.cidr_blocks.#\": \"1\",\n-                            \"ingress.179083333.cidr_blocks.0\": \"10.0.0.0/8\",\n-                            \"ingress.179083333.description\": \"\",\n-                            \"ingress.179083333.from_port\": \"22\",\n-                            \"ingress.179083333.ipv6_cidr_blocks.#\": \"0\",\n-                            \"ingress.179083333.prefix_list_ids.#\": \"0\",\n-                            \"ingress.179083333.protocol\": \"tcp\",\n-                            \"ingress.179083333.security_groups.#\": \"0\",\n-                            \"ingress.179083333.self\": \"false\",\n-                            \"ingress.179083333.to_port\": \"22\",\n-                            \"ingress.195912805.cidr_blocks.#\": \"0\",\n-                            \"ingress.195912805.description\": \"\",\n-                            \"ingress.195912805.from_port\": \"80\",\n-                            \"ingress.195912805.ipv6_cidr_blocks.#\": \"0\",\n-                            \"ingress.195912805.prefix_list_ids.#\": \"0\",\n-                            \"ingress.195912805.protocol\": \"tcp\",\n-                            \"ingress.195912805.security_groups.#\": \"1\",\n-                            \"ingress.195912805.security_groups.1249137825\": \"sg-09e3946d53cbc6a9d\",\n-                            \"ingress.195912805.self\": \"false\",\n-                            \"ingress.195912805.to_port\": \"80\",\n-                            \"ingress.2186059159.cidr_blocks.#\": \"0\",\n-                            \"ingress.2186059159.description\": \"\",\n-                            \"ingress.2186059159.from_port\": \"443\",\n-                            \"ingress.2186059159.ipv6_cidr_blocks.#\": \"0\",\n-                            \"ingress.2186059159.prefix_list_ids.#\": \"0\",\n-                            \"ingress.2186059159.protocol\": \"tcp\",\n-                            \"ingress.2186059159.security_groups.#\": \"1\",\n-                            \"ingress.2186059159.security_groups.1249137825\": \"sg-09e3946d53cbc6a9d\",\n-                            \"ingress.2186059159.self\": \"false\",\n-                            \"ingress.2186059159.to_port\": \"443\",\n-                            \"ingress.3128968423.cidr_blocks.#\": \"1\",\n-                            \"ingress.3128968423.cidr_blocks.0\": \"10.0.0.0/8\",\n-                            \"ingress.3128968423.description\": \"\",\n-                            \"ingress.3128968423.from_port\": \"-1\",\n-                            \"ingress.3128968423.ipv6_cidr_blocks.#\": \"0\",\n-                            \"ingress.3128968423.prefix_list_ids.#\": \"0\",\n-                            \"ingress.3128968423.protocol\": \"icmp\",\n-                            \"ingress.3128968423.security_groups.#\": \"0\",\n-                            \"ingress.3128968423.self\": \"false\",\n-                            \"ingress.3128968423.to_port\": \"-1\",\n-                            \"name\": \"terraform-20190109225556883200000006\",\n-                            \"owner_id\": \"568065941114\",\n-                            \"revoke_rules_on_delete\": \"false\",\n-                            \"tags.%\": \"0\",\n-                            \"vpc_id\": \"vpc-ee7e9588\"\n-                        },\n-                        \"meta\": {\n-                            \"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\": {\n-                                \"create\": 600000000000,\n-                                \"delete\": 600000000000\n-                            },\n-                            \"schema_version\": \"1\"\n-                        },\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"aws_security_group.sgWebappElb\": {\n-                    \"type\": \"aws_security_group\",\n-                    \"depends_on\": [\n-                        \"data.aws_vpc.myorg\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"sg-09e3946d53cbc6a9d\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:ec2:us-west-2:568065941114:security-group/sg-09e3946d53cbc6a9d\",\n-                            \"description\": \"Security Group for 1 ELB\",\n-                            \"egress.#\": \"1\",\n-                            \"egress.482069346.cidr_blocks.#\": \"1\",\n-                            \"egress.482069346.cidr_blocks.0\": \"0.0.0.0/0\",\n-                            \"egress.482069346.description\": \"\",\n-                            \"egress.482069346.from_port\": \"0\",\n-                            \"egress.482069346.ipv6_cidr_blocks.#\": \"0\",\n-                            \"egress.482069346.prefix_list_ids.#\": \"0\",\n-                            \"egress.482069346.protocol\": \"-1\",\n-                            \"egress.482069346.security_groups.#\": \"0\",\n-                            \"egress.482069346.self\": \"false\",\n-                            \"egress.482069346.to_port\": \"0\",\n-                            \"id\": \"sg-09e3946d53cbc6a9d\",\n-                            \"ingress.#\": \"2\",\n-                            \"ingress.2214680975.cidr_blocks.#\": \"1\",\n-                            \"ingress.2214680975.cidr_blocks.0\": \"0.0.0.0/0\",\n-                            \"ingress.2214680975.description\": \"\",\n-                            \"ingress.2214680975.from_port\": \"80\",\n-                            \"ingress.2214680975.ipv6_cidr_blocks.#\": \"0\",\n-                            \"ingress.2214680975.prefix_list_ids.#\": \"0\",\n-                            \"ingress.2214680975.protocol\": \"tcp\",\n-                            \"ingress.2214680975.security_groups.#\": \"0\",\n-                            \"ingress.2214680975.self\": \"false\",\n-                            \"ingress.2214680975.to_port\": \"80\",\n-                            \"ingress.2617001939.cidr_blocks.#\": \"1\",\n-                            \"ingress.2617001939.cidr_blocks.0\": \"0.0.0.0/0\",\n-                            \"ingress.2617001939.description\": \"\",\n-                            \"ingress.2617001939.from_port\": \"443\",\n-                            \"ingress.2617001939.ipv6_cidr_blocks.#\": \"0\",\n-                            \"ingress.2617001939.prefix_list_ids.#\": \"0\",\n-                            \"ingress.2617001939.protocol\": \"tcp\",\n-                            \"ingress.2617001939.security_groups.#\": \"0\",\n-                            \"ingress.2617001939.self\": \"false\",\n-                            \"ingress.2617001939.to_port\": \"443\",\n-                            \"name\": \"terraform-20190109225553905100000002\",\n-                            \"owner_id\": \"568065941114\",\n-                            \"revoke_rules_on_delete\": \"false\",\n-                            \"tags.%\": \"0\",\n-                            \"vpc_id\": \"vpc-ee7e9588\"\n-                        },\n-                        \"meta\": {\n-                            \"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\": {\n-                                \"create\": 600000000000,\n-                                \"delete\": 600000000000\n-                            },\n-                            \"schema_version\": \"1\"\n-                        },\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_availability_zones.all\": {\n-                    \"type\": \"aws_availability_zones\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"2019-01-09 22:55:50.247225 +0000 UTC\",\n-                        \"attributes\": {\n-                            \"id\": \"2019-01-09 22:55:50.247225 +0000 UTC\",\n-                            \"names.#\": \"3\",\n-                            \"names.0\": \"us-west-2a\",\n-                            \"names.1\": \"us-west-2b\",\n-                            \"names.2\": \"us-west-2c\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_caller_identity.current\": {\n-                    \"type\": \"aws_caller_identity\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"2019-01-09 22:55:50.600958 +0000 UTC\",\n-                        \"attributes\": {\n-                            \"account_id\": \"568065941114\",\n-                            \"arn\": \"arn:aws:iam::568065941114:user/em-devops-dev-jenkins\",\n-                            \"id\": \"2019-01-09 22:55:50.600958 +0000 UTC\",\n-                            \"user_id\": \"AIDAJU5X6YO37TR4BE23C\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_route53_zone.parent\": {\n-                    \"type\": \"aws_route53_zone\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"Z2GXW5PUHJ7WHR\",\n-                        \"attributes\": {\n-                            \"caller_reference\": \"2018-05-01 10:50:11.048294\",\n-                            \"comment\": \"PC-4093 by jbaker\",\n-                            \"id\": \"Z2GXW5PUHJ7WHR\",\n-                            \"name\": \"devops.elliemae.io.\",\n-                            \"name_servers.#\": \"4\",\n-                            \"name_servers.0\": \"ns-116.awsdns-14.com\",\n-                            \"name_servers.1\": \"ns-1545.awsdns-01.co.uk\",\n-                            \"name_servers.2\": \"ns-1389.awsdns-45.org\",\n-                            \"name_servers.3\": \"ns-595.awsdns-10.net\",\n-                            \"private_zone\": \"false\",\n-                            \"resource_record_set_count\": \"8\",\n-                            \"zone_id\": \"Z2GXW5PUHJ7WHR\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_subnet.private_subnet_0\": {\n-                    \"type\": \"aws_subnet\",\n-                    \"depends_on\": [\n-                        \"data.aws_vpc.myorg\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"subnet-89aeaaee\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:ec2:us-west-2:568065941114:subnet/subnet-89aeaaee\",\n-                            \"assign_ipv6_address_on_creation\": \"false\",\n-                            \"availability_zone\": \"us-west-2a\",\n-                            \"cidr_block\": \"10.200.40.96/27\",\n-                            \"default_for_az\": \"false\",\n-                            \"filter.#\": \"1\",\n-                            \"filter.787444477.name\": \"tag:Name\",\n-                            \"filter.787444477.values.#\": \"1\",\n-                            \"filter.787444477.values.4259186353\": \"Private0*\",\n-                            \"id\": \"subnet-89aeaaee\",\n-                            \"map_public_ip_on_launch\": \"false\",\n-                            \"state\": \"available\",\n-                            \"tags.%\": \"1\",\n-                            \"tags.Name\": \"Private0(us-west-2a)\",\n-                            \"vpc_id\": \"vpc-ee7e9588\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_subnet.private_subnet_1\": {\n-                    \"type\": \"aws_subnet\",\n-                    \"depends_on\": [\n-                        \"data.aws_vpc.myorg\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"subnet-e0faa5a9\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:ec2:us-west-2:568065941114:subnet/subnet-e0faa5a9\",\n-                            \"assign_ipv6_address_on_creation\": \"false\",\n-                            \"availability_zone\": \"us-west-2b\",\n-                            \"cidr_block\": \"10.200.40.128/27\",\n-                            \"default_for_az\": \"false\",\n-                            \"filter.#\": \"1\",\n-                            \"filter.328162125.name\": \"tag:Name\",\n-                            \"filter.328162125.values.#\": \"1\",\n-                            \"filter.328162125.values.4229721222\": \"Private1*\",\n-                            \"id\": \"subnet-e0faa5a9\",\n-                            \"map_public_ip_on_launch\": \"false\",\n-                            \"state\": \"available\",\n-                            \"tags.%\": \"1\",\n-                            \"tags.Name\": \"Private1(us-west-2b)\",\n-                            \"vpc_id\": \"vpc-ee7e9588\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_subnet.private_subnet_2\": {\n-                    \"type\": \"aws_subnet\",\n-                    \"depends_on\": [\n-                        \"data.aws_vpc.myorg\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"subnet-85a501de\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:ec2:us-west-2:568065941114:subnet/subnet-85a501de\",\n-                            \"assign_ipv6_address_on_creation\": \"false\",\n-                            \"availability_zone\": \"us-west-2c\",\n-                            \"cidr_block\": \"10.200.40.160/27\",\n-                            \"default_for_az\": \"false\",\n-                            \"filter.#\": \"1\",\n-                            \"filter.1412374941.name\": \"tag:Name\",\n-                            \"filter.1412374941.values.#\": \"1\",\n-                            \"filter.1412374941.values.4267365087\": \"Private2*\",\n-                            \"id\": \"subnet-85a501de\",\n-                            \"map_public_ip_on_launch\": \"false\",\n-                            \"state\": \"available\",\n-                            \"tags.%\": \"1\",\n-                            \"tags.Name\": \"Private2(us-west-2c)\",\n-                            \"vpc_id\": \"vpc-ee7e9588\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_subnet.public_subnet_0\": {\n-                    \"type\": \"aws_subnet\",\n-                    \"depends_on\": [\n-                        \"data.aws_vpc.myorg\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"subnet-d7a8acb0\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:ec2:us-west-2:568065941114:subnet/subnet-d7a8acb0\",\n-                            \"assign_ipv6_address_on_creation\": \"false\",\n-                            \"availability_zone\": \"us-west-2a\",\n-                            \"cidr_block\": \"10.200.40.0/27\",\n-                            \"default_for_az\": \"false\",\n-                            \"filter.#\": \"1\",\n-                            \"filter.536144450.name\": \"tag:Name\",\n-                            \"filter.536144450.values.#\": \"1\",\n-                            \"filter.536144450.values.1414452620\": \"Public0*\",\n-                            \"id\": \"subnet-d7a8acb0\",\n-                            \"map_public_ip_on_launch\": \"false\",\n-                            \"state\": \"available\",\n-                            \"tags.%\": \"1\",\n-                            \"tags.Name\": \"Public0(us-west-2a)\",\n-                            \"vpc_id\": \"vpc-ee7e9588\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_subnet.public_subnet_1\": {\n-                    \"type\": \"aws_subnet\",\n-                    \"depends_on\": [\n-                        \"data.aws_vpc.myorg\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"subnet-42f7a80b\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:ec2:us-west-2:568065941114:subnet/subnet-42f7a80b\",\n-                            \"assign_ipv6_address_on_creation\": \"false\",\n-                            \"availability_zone\": \"us-west-2b\",\n-                            \"cidr_block\": \"10.200.40.32/27\",\n-                            \"default_for_az\": \"false\",\n-                            \"filter.#\": \"1\",\n-                            \"filter.580174834.name\": \"tag:Name\",\n-                            \"filter.580174834.values.#\": \"1\",\n-                            \"filter.580174834.values.1435287483\": \"Public1*\",\n-                            \"id\": \"subnet-42f7a80b\",\n-                            \"map_public_ip_on_launch\": \"false\",\n-                            \"state\": \"available\",\n-                            \"tags.%\": \"1\",\n-                            \"tags.Name\": \"Public1(us-west-2b)\",\n-                            \"vpc_id\": \"vpc-ee7e9588\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_subnet.public_subnet_2\": {\n-                    \"type\": \"aws_subnet\",\n-                    \"depends_on\": [\n-                        \"data.aws_vpc.myorg\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"subnet-82a004d9\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:ec2:us-west-2:568065941114:subnet/subnet-82a004d9\",\n-                            \"assign_ipv6_address_on_creation\": \"false\",\n-                            \"availability_zone\": \"us-west-2c\",\n-                            \"cidr_block\": \"10.200.40.64/27\",\n-                            \"default_for_az\": \"false\",\n-                            \"filter.#\": \"1\",\n-                            \"filter.1697954082.name\": \"tag:Name\",\n-                            \"filter.1697954082.values.#\": \"1\",\n-                            \"filter.1697954082.values.1472856546\": \"Public2*\",\n-                            \"id\": \"subnet-82a004d9\",\n-                            \"map_public_ip_on_launch\": \"false\",\n-                            \"state\": \"available\",\n-                            \"tags.%\": \"1\",\n-                            \"tags.Name\": \"Public2(us-west-2c)\",\n-                            \"vpc_id\": \"vpc-ee7e9588\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.aws_vpc.myorg\": {\n-                    \"type\": \"aws_vpc\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"vpc-ee7e9588\",\n-                        \"attributes\": {\n-                            \"arn\": \"arn:aws:ec2:us-west-2:568065941114:vpc/vpc-ee7e9588\",\n-                            \"cidr_block\": \"10.200.40.0/24\",\n-                            \"cidr_block_associations.#\": \"1\",\n-                            \"cidr_block_associations.0.association_id\": \"vpc-cidr-assoc-8b9735e3\",\n-                            \"cidr_block_associations.0.cidr_block\": \"10.200.40.0/24\",\n-                            \"cidr_block_associations.0.state\": \"associated\",\n-                            \"default\": \"false\",\n-                            \"dhcp_options_id\": \"dopt-2e9f3748\",\n-                            \"enable_dns_hostnames\": \"true\",\n-                            \"enable_dns_support\": \"true\",\n-                            \"id\": \"vpc-ee7e9588\",\n-                            \"instance_tenancy\": \"default\",\n-                            \"state\": \"available\",\n-                            \"tags.%\": \"1\",\n-                            \"tags.Name\": \"elmae-default\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.aws\"\n-                },\n-                \"data.template_file.init\": {\n-                    \"type\": \"template_file\",\n-                    \"depends_on\": [\n-                        \"aws_s3_bucket.s3bucket_jenkins\"\n-                    ],\n-                    \"primary\": {\n-                        \"id\": \"d24c174853fd604dbd2eff1b871d40a3a68f70705af4df1df8803f69d9cdfc01\",\n-                        \"attributes\": {\n-                            \"id\": \"d24c174853fd604dbd2eff1b871d40a3a68f70705af4df1df8803f69d9cdfc01\",\n-                            \"rendered\": \"#!/bin/bash -v\\n\\necho \\\"*****Begin executing*** \\\"\\necho \\\"Wait a bit for the network\\\"\\nsleep 15s\\n\\necho \\\"list data template variable\\\"\\necho us-west-2\\necho s3fs-em-devops-us-west-2-jenkins-dev\\n\\naws configure set default.region us-west-2\\nyum update -y\\nyum install docker -y\\nservice docker start\\necho \\\"docker setup \\u0026 started\\\"\\ndocker version\\nchmod 766 /var/run/docker.sock\\n\\n\\ncurl -L \\\"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)\\\" -o /usr/local/bin/docker-compose\\nchmod +x /usr/local/bin/docker-compose\\necho \\\"docker-compose setup\\\"\\ndocker-compose -v\\n\\nInstanceID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\\nmkdir -p /var/jenkins_home/\\n\\ncurl -O -L https://s3-us-west-2.amazonaws.com/em-devops-terraform/utilities/jenkins/jenkins.zip\\nunzip jenkins.zip\\ncd jenkins\\npwd\\nls\\n\\n./create_jenkins_stack_docker.sh up\\n\\nsleep 60s\\n\\necho \\\"s3 bucket mounting as ec2 volume\\\"\\nyum install -y gcc libstdc++-devel gcc-c++ fuse fuse-devel curl-devel libxml2-devel mailcap automake openssl-devel git\\ngit clone https://github.com/s3fs-fuse/s3fs-fuse\\ncd s3fs-fuse/\\n./autogen.sh\\n./configure --prefix=/usr --with-openssl\\nmake\\nmake install\\n\\ns3fs --version\\ns3fs -o iam_role=\\\"$( curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/ )\\\" -o url=\\\"https://s3.us-west-2.amazonaws.com\\\" -o endpoint=us-west-2 -o dbglevel=info -o curldbg -o allow_other -o use_cache=/tmp -o nonempty s3fs-em-devops-us-west-2-jenkins-dev /var/jenkins_home\\nps -aef | grep s3fs\\n\\n#service docker stop\\n#service docker start\\n\\necho \\\"user_data is done\\\"\\n\",\n-                            \"template\": \"#!/bin/bash -v\\n\\necho \\\"*****Begin executing*** \\\"\\necho \\\"Wait a bit for the network\\\"\\nsleep 15s\\n\\necho \\\"list data template variable\\\"\\necho ${region}\\necho ${jenkins_s3_bucket}\\n\\naws configure set default.region ${region}\\nyum update -y\\nyum install docker -y\\nservice docker start\\necho \\\"docker setup \\u0026 started\\\"\\ndocker version\\nchmod 766 /var/run/docker.sock\\n\\n\\ncurl -L \\\"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)\\\" -o /usr/local/bin/docker-compose\\nchmod +x /usr/local/bin/docker-compose\\necho \\\"docker-compose setup\\\"\\ndocker-compose -v\\n\\nInstanceID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\\nmkdir -p /var/jenkins_home/\\n\\ncurl -O -L https://s3-us-west-2.amazonaws.com/em-devops-terraform/utilities/jenkins/jenkins.zip\\nunzip jenkins.zip\\ncd jenkins\\npwd\\nls\\n\\n./create_jenkins_stack_docker.sh up\\n\\nsleep 60s\\n\\necho \\\"s3 bucket mounting as ec2 volume\\\"\\nyum install -y gcc libstdc++-devel gcc-c++ fuse fuse-devel curl-devel libxml2-devel mailcap automake openssl-devel git\\ngit clone https://github.com/s3fs-fuse/s3fs-fuse\\ncd s3fs-fuse/\\n./autogen.sh\\n./configure --prefix=/usr --with-openssl\\nmake\\nmake install\\n\\ns3fs --version\\ns3fs -o iam_role=\\\"$( curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/ )\\\" -o url=\\\"https://s3.${region}.amazonaws.com\\\" -o endpoint=${region} -o dbglevel=info -o curldbg -o allow_other -o use_cache=/tmp -o nonempty ${jenkins_s3_bucket} /var/jenkins_home\\nps -aef | grep s3fs\\n\\n#service docker stop\\n#service docker start\\n\\necho \\\"user_data is done\\\"\\n\",\n-                            \"vars.%\": \"2\",\n-                            \"vars.jenkins_s3_bucket\": \"s3fs-em-devops-us-west-2-jenkins-dev\",\n-                            \"vars.region\": \"us-west-2\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.template\"\n-                },\n-                \"random_id.server\": {\n-                    \"type\": \"random_id\",\n-                    \"depends_on\": [],\n-                    \"primary\": {\n-                        \"id\": \"THZZ6WzmODA\",\n-                        \"attributes\": {\n-                            \"b64\": \"THZZ6WzmODA\",\n-                            \"b64_std\": \"THZZ6WzmODA=\",\n-                            \"b64_url\": \"THZZ6WzmODA\",\n-                            \"byte_length\": \"8\",\n-                            \"dec\": \"5509690053223659568\",\n-                            \"hex\": \"4c7659e96ce63830\",\n-                            \"id\": \"THZZ6WzmODA\"\n-                        },\n-                        \"meta\": {},\n-                        \"tainted\": false\n-                    },\n-                    \"deposed\": [],\n-                    \"provider\": \"provider.random\"\n-                }\n-            },\n-            \"depends_on\": []\n-        }\n-    ]\n-}"
      },
      {
        "filename": "terraform/jenkins_alb_s3_mount_not_working/userdata",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "status": "removed",
        "patch": "@@ -1,54 +0,0 @@\n-#!/bin/bash -v\n-\n-echo \"*****Begin executing*** \"\n-echo \"Wait a bit for the network\"\n-sleep 15s\n-\n-echo \"list data template variable\"\n-echo ${region}\n-echo ${jenkins_s3_bucket}\n-\n-aws configure set default.region ${region}\n-yum update -y\n-yum install docker -y\n-service docker start\n-echo \"docker setup & started\"\n-docker version\n-chmod 766 /var/run/docker.sock\n-\n-\n-curl -L \"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n-chmod +x /usr/local/bin/docker-compose\n-echo \"docker-compose setup\"\n-docker-compose -v\n-\n-InstanceID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\n-mkdir -p /var/jenkins_home/\n-\n-curl -O -L https://s3-us-west-2.amazonaws.com/em-devops-terraform/utilities/jenkins/jenkins.zip\n-unzip jenkins.zip\n-cd jenkins\n-pwd\n-ls\n-\n-./create_jenkins_stack_docker.sh up\n-\n-sleep 60s\n-\n-echo \"s3 bucket mounting as ec2 volume\"\n-yum install -y gcc libstdc++-devel gcc-c++ fuse fuse-devel curl-devel libxml2-devel mailcap automake openssl-devel git\n-git clone https://github.com/s3fs-fuse/s3fs-fuse\n-cd s3fs-fuse/\n-./autogen.sh\n-./configure --prefix=/usr --with-openssl\n-make\n-make install\n-\n-s3fs --version\n-s3fs -o iam_role=\"$( curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/ )\" -o url=\"https://s3.${region}.amazonaws.com\" -o endpoint=${region} -o dbglevel=info -o curldbg -o allow_other -o use_cache=/tmp -o nonempty ${jenkins_s3_bucket} /var/jenkins_home\n-ps -aef | grep s3fs\n-\n-#service docker stop\n-#service docker start\n-\n-echo \"user_data is done\""
      },
      {
        "filename": "terraform/jenkins_alb_s3_mount_not_working/vars.tf",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "status": "removed",
        "patch": "@@ -1,83 +0,0 @@\n-variable \"profile\" {\n-  description = \"The AWS profile used\"\n-  default = \"default\"\n-}\n-\n-variable \"service_name\" {\n-  description = \"The service name\"\n-  #default = \"jenkinsdockerv1\"\n-}\n-\n-variable \"ec2_instance_type\" {\n-  description = \"EC2 Instance Type\"\n-  #default = \"t2.micro\"\n-}\n-\n-variable \"num_nodes\" {\n-  description = \"Number of nodes in the autoscaling group\"\n-  default = \"1\"\n-}\n-\n-variable \"max_num_nodes\" {\n-  description = \"Max number of nodes in the autoscaling group\"\n-  default = \"1\"\n-}\n-\n-variable \"min_num_nodes\" {\n-  description = \"Min of nodes in the autoscaling group\"\n-  default = \"1\"\n-}\n-\n-\n-variable \"ami_id\" {\n-  description = \"EC2 Image Id\"\n-\n-}\n-\n-variable \"ec2_keypair_name\" {\n-  description = \"SSH Keypair Name\"\n-}\n-\n-variable \"environment_prefix\" {\n-  description = \"The environment identifier e.g. engineering,prod,green,blue\"\n-  #default =\"jenkins\"\n-}\n-\n-variable \"environment\" {\n-  description = \"The environment TYPE\"\n-  #default = \"dev\"\n-}\n-\n-\n-variable \"aws_region\" {\n-  description = \"The primary region (to orchestrate things which happen once)\"\n-  #default =  \"us-west-2\"\n-}\n-\n-variable \"route53_zone_base\" {\n-  description = \"Route 53 Zone Name\"\n-  #default = \"devops.xxxxx.io\"\n-}\n-\n-variable \"vpc_name\" {\n-  description = \"VPC Name to be search by data resource\"\n-}\n-\n-\n-\n-\n-variable \"jenkins_v1_role_prefix\"\n-{\n-  description = \"Jenkins Role Name Prefix\"\n-  default = \"jenkins_v1_role\"\n-}\n-\n-variable \"availibity_zone_suffix\"\n-{\n-  description = \"availibity zone suffix\"\n-}\n-\n-variable \"aws_profile\"\n-{\n-  description = \"aws_profile\"\n-}"
      },
      {
        "filename": "terraform/jenkins_clb/environments/common.tfvars",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "status": "removed",
        "patch": "@@ -1,6 +0,0 @@\n-environment_prefix = \"jenkins\"\n-route53_zone_base=\"devops.xxx.io\"\n-vpc_name=\"xxx-default\"\n-ec2_keypair_name = \"xx\"\n-service_name = \"jenkinsdockerv1\"\n-s3_access_key = \"\"\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/jenkins_ebs_cost_optimized/data.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "renamed",
        "patch": "@@ -95,6 +95,9 @@ data \"template_file\" \"init\" {\n     region = \"${var.aws_region}\"\n     ebs_volume_id = \"${aws_ebs_volume.ebs_jenkins.id}\"\n     s3_access_key = \"${var.s3_access_key}\"\n+    r53_zone_base = \"${var.route53_zone_base}\"\n+    environment   = \"${var.environment}\"\n+    environment_prefix = \"${var.environment_prefix}\"\n \n   }\n }"
      },
      {
        "filename": "terraform/jenkins_ebs_cost_optimized/main.tf",
        "additions": 226,
        "deletions": 220,
        "changes": 446,
        "status": "renamed",
        "patch": "@@ -31,7 +31,7 @@ resource \"aws_autoscaling_group\" \"webapp_v1\" {\n   max_size = \"${var.max_num_nodes}\"\n   min_size = \"${var.min_num_nodes}\"\n \n-  load_balancers = [\"${aws_elb.clb.id}\"]\n+  #load_balancers = [\"${aws_elb.clb.id}\"]\n   #target_group_arns = [\"${aws_alb_target_group.tgHttp.arn}\"]\n   availability_zones = [\"${var.aws_region}${var.availibity_zone_suffix}\"]\n   vpc_zone_identifier = [\"${data.aws_subnet.private_subnet_0.id}\"]\n@@ -97,111 +97,111 @@ resource \"aws_autoscaling_group\" \"webapp_v1\" {\n \n }\n \n-resource \"aws_autoscaling_policy\" \"autopolicy-up\" {\n-  name = \"${var.environment}-${var.environment_prefix}-autopolicy-up\"\n-  scaling_adjustment = 1\n-  adjustment_type = \"ChangeInCapacity\"\n-  cooldown = 300\n-  autoscaling_group_name = \"${aws_autoscaling_group.webapp_v1.name}\"\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"cpualarm-up\" {\n-  alarm_name = \"${var.environment}-${var.environment_prefix}-alarm-up\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods = \"2\"\n-  metric_name = \"CPUUtilization\"\n-  namespace = \"AWS/EC2\"\n-  period = \"120\"\n-  statistic = \"Average\"\n-  threshold = \"60\"\n-  dimensions {\n-    AutoScalingGroupName = \"${aws_autoscaling_group.webapp_v1.name}\"\n-  }\n-  alarm_description = \"This metric monitor EC2 instance cpu utilization\"\n-  alarm_actions = [\"${aws_autoscaling_policy.autopolicy-up.arn}\"]\n-}\n-\n-\n-resource \"aws_autoscaling_policy\" \"autopolicy-down\" {\n-  name = \"${var.environment}-${var.environment_prefix}-autopolicy-down\"\n-  scaling_adjustment = -1\n-  adjustment_type = \"ChangeInCapacity\"\n-  cooldown = 300\n-  autoscaling_group_name = \"${aws_autoscaling_group.webapp_v1.name}\"\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"cpualarm-down\" {\n-  alarm_name = \"${var.environment}-${var.environment_prefix}-alarm-down\"\n-  comparison_operator = \"LessThanOrEqualToThreshold\"\n-  evaluation_periods = \"2\"\n-  metric_name = \"CPUUtilization\"\n-  namespace = \"AWS/EC2\"\n-  period = \"120\"\n-  statistic = \"Average\"\n-  threshold = \"10\"\n-\n-  dimensions {\n-    AutoScalingGroupName = \"${aws_autoscaling_group.webapp_v1.name}\"\n-}\n-\n-  alarm_description = \"This metric monitor EC2 instance cpu utilization\"\n-  alarm_actions = [\"${aws_autoscaling_policy.autopolicy-down.arn}\"]\n-}\n-\n+//resource \"aws_autoscaling_policy\" \"autopolicy-up\" {\n+//  name = \"${var.environment}-${var.environment_prefix}-autopolicy-up\"\n+//  scaling_adjustment = 1\n+//  adjustment_type = \"ChangeInCapacity\"\n+//  cooldown = 300\n+//  autoscaling_group_name = \"${aws_autoscaling_group.webapp_v1.name}\"\n+//}\n \n-# Create a classic load balancer\n-resource \"aws_elb\" \"clb\" {\n-  name               =\"jenkins-clb-${var.environment}-${var.environment_prefix}\"\n-  #availability_zones = [\"${var.aws_region}a\"]\n-  #subnets = [\"${data.aws_subnet.public_subnet_0.id}\",\"${data.aws_subnet.public_subnet_1.id}\",\"${data.aws_subnet.public_subnet_2.id}\"]\n-  #subnets = [\"${data.aws_subnet.private_subnet_0.id}\", \"${data.aws_subnet.private_subnet_1.id}\",\"${data.aws_subnet.private_subnet_2.id}\"]\n-  subnets = [\"${data.aws_subnet.private_subnet_0.id}\"]\n-  security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n-  internal = true\n-\n-//  access_logs {\n-//    bucket        = \"foo\"\n-//    bucket_prefix = \"bar\"\n-//    interval      = 60\n+//resource \"aws_cloudwatch_metric_alarm\" \"cpualarm-up\" {\n+//  alarm_name = \"${var.environment}-${var.environment_prefix}-alarm-up\"\n+//  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+//  evaluation_periods = \"2\"\n+//  metric_name = \"CPUUtilization\"\n+//  namespace = \"AWS/EC2\"\n+//  period = \"120\"\n+//  statistic = \"Average\"\n+//  threshold = \"60\"\n+//  dimensions {\n+//    AutoScalingGroupName = \"${aws_autoscaling_group.webapp_v1.name}\"\n //  }\n+//  alarm_description = \"This metric monitor EC2 instance cpu utilization\"\n+//  alarm_actions = [\"${aws_autoscaling_policy.autopolicy-up.arn}\"]\n+//}\n \n-  listener {\n-    instance_port     = 80\n-    instance_protocol = \"http\"\n-    lb_port           = 80\n-    lb_protocol       = \"http\"\n-  }\n-\n-  listener {\n-    instance_port      = 80\n-    instance_protocol  = \"http\"\n-    lb_port            = 443\n-    lb_protocol        = \"https\"\n-    #ssl_certificate_id = \"arn:aws:acm:us-west-2:568065941114:certificate/3d7be649-e502-4c42-9c6e-556df048afbb\"\n-    #ssl_certificate_id  = \"arn:aws:acm:us-west-2:568065941114:certificate/54415211-3614-4587-bd0e-36f5321600b4\"\n-    ssl_certificate_id = \"${data.aws_acm_certificate.jenkins_acm.arn}\"\n-  }\n \n-  health_check {\n-    #all times in seconds\n-    healthy_threshold   = 2\n-    unhealthy_threshold = 5\n-    timeout             = 3\n-    #target              = \"HTTP:80/index.html\"\n-    target              = \"HTTP:80/\"\n-    interval            = 15\n-  }\n+//resource \"aws_autoscaling_policy\" \"autopolicy-down\" {\n+//  name = \"${var.environment}-${var.environment_prefix}-autopolicy-down\"\n+//  scaling_adjustment = -1\n+//  adjustment_type = \"ChangeInCapacity\"\n+//  cooldown = 300\n+//  autoscaling_group_name = \"${aws_autoscaling_group.webapp_v1.name}\"\n+//}\n+//\n+//resource \"aws_cloudwatch_metric_alarm\" \"cpualarm-down\" {\n+//  alarm_name = \"${var.environment}-${var.environment_prefix}-alarm-down\"\n+//  comparison_operator = \"LessThanOrEqualToThreshold\"\n+//  evaluation_periods = \"2\"\n+//  metric_name = \"CPUUtilization\"\n+//  namespace = \"AWS/EC2\"\n+//  period = \"120\"\n+//  statistic = \"Average\"\n+//  threshold = \"10\"\n+//\n+//  dimensions {\n+//    AutoScalingGroupName = \"${aws_autoscaling_group.webapp_v1.name}\"\n+//}\n+//\n+//  alarm_description = \"This metric monitor EC2 instance cpu utilization\"\n+//  alarm_actions = [\"${aws_autoscaling_policy.autopolicy-down.arn}\"]\n+//}\n \n-  #instances                   = [\"${aws_instance.foo.id}\"]\n-  cross_zone_load_balancing   = true\n-  idle_timeout                = 400\n-  connection_draining         = true\n-  connection_draining_timeout = 400\n \n-  tags {\n-    Name = \"webapp-elb\"\n-  }\n-}\n+//# Create a classic load balancer\n+//resource \"aws_elb\" \"clb\" {\n+//  name               =\"jenkins-clb-${var.environment}-${var.environment_prefix}\"\n+//  #availability_zones = [\"${var.aws_region}a\"]\n+//  #subnets = [\"${data.aws_subnet.public_subnet_0.id}\",\"${data.aws_subnet.public_subnet_1.id}\",\"${data.aws_subnet.public_subnet_2.id}\"]\n+//  #subnets = [\"${data.aws_subnet.private_subnet_0.id}\", \"${data.aws_subnet.private_subnet_1.id}\",\"${data.aws_subnet.private_subnet_2.id}\"]\n+//  subnets = [\"${data.aws_subnet.private_subnet_0.id}\"]\n+//  security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n+//  internal = true\n+//\n+////  access_logs {\n+////    bucket        = \"foo\"\n+////    bucket_prefix = \"bar\"\n+////    interval      = 60\n+////  }\n+//\n+//  listener {\n+//    instance_port     = 80\n+//    instance_protocol = \"http\"\n+//    lb_port           = 80\n+//    lb_protocol       = \"http\"\n+//  }\n+//\n+//  listener {\n+//    instance_port      = 80\n+//    instance_protocol  = \"http\"\n+//    lb_port            = 443\n+//    lb_protocol        = \"https\"\n+//    #ssl_certificate_id = \"arn:aws:acm:us-west-2:568065941114:certificate/3d7be649-e502-4c42-9c6e-556df048afbb\"\n+//    #ssl_certificate_id  = \"arn:aws:acm:us-west-2:568065941114:certificate/54415211-3614-4587-bd0e-36f5321600b4\"\n+//    ssl_certificate_id = \"${data.aws_acm_certificate.jenkins_acm.arn}\"\n+//  }\n+//\n+//  health_check {\n+//    #all times in seconds\n+//    healthy_threshold   = 2\n+//    unhealthy_threshold = 5\n+//    timeout             = 3\n+//    #target              = \"HTTP:80/index.html\"\n+//    target              = \"HTTP:80/\"\n+//    interval            = 15\n+//  }\n+//\n+//  #instances                   = [\"${aws_instance.foo.id}\"]\n+//  cross_zone_load_balancing   = true\n+//  idle_timeout                = 400\n+//  connection_draining         = true\n+//  connection_draining_timeout = 400\n+//\n+//  tags {\n+//    Name = \"webapp-elb\"\n+//  }\n+//}\n \n \n resource \"aws_launch_configuration\" \"launchWebapp\" {\n@@ -232,31 +232,31 @@ resource \"aws_launch_configuration\" \"launchWebapp\" {\n }\n \n # A security group for the ELB so it is accessible via the web\n-resource \"aws_security_group\" \"sgWebappElb\" {\n-  #name        = \"webapp_elb_sg\"\n-  description = \"Security Group for 1 ELB\"\n-  vpc_id        = \"${data.aws_vpc.myorg.id}\"\n-\n-  ingress {\n-    cidr_blocks = [\"0.0.0.0/0\"]\n-    from_port   = 443\n-    to_port     = 443\n-    protocol    = \"tcp\"\n-  }\n-  ingress {\n-    cidr_blocks = [\"0.0.0.0/0\"]\n-    from_port   = 80\n-    to_port     = 80\n-    protocol    = \"tcp\"\n-  }\n-\n-  egress {\n-    from_port = 0\n-    to_port = 0\n-    protocol = \"-1\"\n-    cidr_blocks = [\"0.0.0.0/0\"]\n-  }\n-}\n+//resource \"aws_security_group\" \"sgWebappElb\" {\n+//  #name        = \"webapp_elb_sg\"\n+//  description = \"Security Group for 1 ELB\"\n+//  vpc_id        = \"${data.aws_vpc.myorg.id}\"\n+//\n+//  ingress {\n+//    cidr_blocks = [\"0.0.0.0/0\"]\n+//    from_port   = 443\n+//    to_port     = 443\n+//    protocol    = \"tcp\"\n+//  }\n+//  ingress {\n+//    cidr_blocks = [\"0.0.0.0/0\"]\n+//    from_port   = 80\n+//    to_port     = 80\n+//    protocol    = \"tcp\"\n+//  }\n+//\n+//  egress {\n+//    from_port = 0\n+//    to_port = 0\n+//    protocol = \"-1\"\n+//    cidr_blocks = [\"0.0.0.0/0\"]\n+//  }\n+//}\n \n # Security group for EC2 instance\n resource \"aws_security_group\" \"sgWebappEc2\" {\n@@ -277,22 +277,28 @@ resource \"aws_security_group\" \"sgWebappEc2\" {\n     protocol = \"tcp\"\n     to_port = 22\n   }\n-\n-  #verify :may or may not need this\n   ingress {\n-    security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n+    cidr_blocks = [\"10.0.0.0/8\"]\n     from_port = 80\n-    protocol = \"tcp\"\n     to_port = 80\n-  }\n-\n-  ingress {\n-    security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n-    from_port = 443\n     protocol = \"tcp\"\n-    to_port = 443\n   }\n \n+  #verify :may or may not need this\n+//  ingress {\n+//    security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n+//    from_port = 80\n+//    protocol = \"tcp\"\n+//    to_port = 80\n+//  }\n+\n+//  ingress {\n+//    security_groups = [\"${aws_security_group.sgWebappElb.id}\"]\n+//    from_port = 443\n+//    protocol = \"tcp\"\n+//    to_port = 443\n+//  }\n+\n   egress {\n     from_port       = 0\n     to_port         = 0\n@@ -301,7 +307,6 @@ resource \"aws_security_group\" \"sgWebappEc2\" {\n \n   }\n \n-\n   lifecycle {\n     create_before_destroy = true\n   }\n@@ -354,7 +359,8 @@ resource \"aws_iam_policy\" \"root\" {\n             \"s3:*\",\n             \"iam:ListAccountAliases\",\n             \"route53:List*\",\n-            \"route53:Get*\"\n+            \"route53:Get*\",\n+            \"route53:Change*\"\n         ],\n         \"Resource\": \"*\"\n     }, {\n@@ -399,87 +405,87 @@ resource \"aws_iam_role_policy_attachment\" \"root_policy_attach\" {\n //<project_name>-<environment>-<function_name>\n \n //3 cloudwatch log groups: access, error, api\n-resource \"aws_cloudwatch_log_group\" \"access_log_group\" {\n-  name = \"webapp-${var.environment}-access\"\n-  retention_in_days = 5\n-}\n+//resource \"aws_cloudwatch_log_group\" \"access_log_group\" {\n+//  name = \"webapp-${var.environment}-access\"\n+//  retention_in_days = 5\n+//}\n \n //add more for api,error,access\n \n-resource \"aws_cloudwatch_log_group\" \"error_log_group\" {\n-  name = \"webapp-${var.environment}-error\"\n-  retention_in_days = 5\n-}\n-\n-resource \"aws_cloudwatch_log_group\" \"api_log_group\" {\n-  name = \"webapp-${var.environment}-api\"\n-  retention_in_days = 5\n-}\n-\n-resource \"aws_cloudwatch_log_metric_filter\" \"404_metric_filter\" {\n-  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n-  \"metric_transformation\" {\n-    name = \"Status_404\"\n-    namespace = \"WebappMetrics\"\n-    value = \"1\"\n-  }\n-  name = \"404_metric_filter\"\n-  pattern = \"{ $.status = 404 }\"\n-}\n-resource \"aws_cloudwatch_log_metric_filter\" \"5xx_metric_filter\" {\n-  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n-  \"metric_transformation\" {\n-    name = \"Status_5XX\"\n-    namespace = \"WebappMetrics\"\n-    value = \"1\"\n-  }\n-  name = \"5xx_metric_filter\"\n-  pattern = \"{ $.status = 5* }\"\n-}\n+//resource \"aws_cloudwatch_log_group\" \"error_log_group\" {\n+//  name = \"webapp-${var.environment}-error\"\n+//  retention_in_days = 5\n+//}\n \n-resource \"aws_cloudwatch_log_metric_filter\" \"2xx_metric_filter\" {\n-  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n+//resource \"aws_cloudwatch_log_group\" \"api_log_group\" {\n+//  name = \"webapp-${var.environment}-api\"\n+//  retention_in_days = 5\n+//}\n \n+//resource \"aws_cloudwatch_log_metric_filter\" \"404_metric_filter\" {\n+//  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n+//  \"metric_transformation\" {\n+//    name = \"Status_404\"\n+//    namespace = \"WebappMetrics\"\n+//    value = \"1\"\n+//  }\n+//  name = \"404_metric_filter\"\n+//  pattern = \"{ $.status = 404 }\"\n+//}\n+//resource \"aws_cloudwatch_log_metric_filter\" \"5xx_metric_filter\" {\n+//  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n+//  \"metric_transformation\" {\n+//    name = \"Status_5XX\"\n+//    namespace = \"WebappMetrics\"\n+//    value = \"1\"\n+//  }\n+//  name = \"5xx_metric_filter\"\n+//  pattern = \"{ $.status = 5* }\"\n+//}\n \n-  \"metric_transformation\" {\n-    name = \"Status_2XX\"\n-    namespace = \"WebappMetrics\"\n-    value = \"1\"\n-  }\n-  name = \"2xx_metric_filter\"\n-  pattern = \"{ $.status = 2* }\"\n-}\n+//resource \"aws_cloudwatch_log_metric_filter\" \"2xx_metric_filter\" {\n+//  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n+//\n+//\n+//  \"metric_transformation\" {\n+//    name = \"Status_2XX\"\n+//    namespace = \"WebappMetrics\"\n+//    value = \"1\"\n+//  }\n+//  name = \"2xx_metric_filter\"\n+//  pattern = \"{ $.status = 2* }\"\n+//}\n \n-resource \"aws_cloudwatch_log_metric_filter\" \"2xx_metric_filter_bytes\" {\n-  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n-  \"metric_transformation\" {\n-    name = \"body_bytes_sent\"\n-    namespace = \"WebappMetrics\"\n-    value = \"$.body_bytes_sent\"\n-  }\n-  name = \"2xx_metric_filter_bytes\"\n-  pattern = \"{ $.status = 2* }\"\n-}\n+//resource \"aws_cloudwatch_log_metric_filter\" \"2xx_metric_filter_bytes\" {\n+//  log_group_name = \"${aws_cloudwatch_log_group.access_log_group.name}\"\n+//  \"metric_transformation\" {\n+//    name = \"body_bytes_sent\"\n+//    namespace = \"WebappMetrics\"\n+//    value = \"$.body_bytes_sent\"\n+//  }\n+//  name = \"2xx_metric_filter_bytes\"\n+//  pattern = \"{ $.status = 2* }\"\n+//}\n \n \n #hosted zone mapping\n-data \"aws_route53_zone\" \"parent\" {\n-  name         = \"${var.route53_zone_base}.\"\n-  #private_zone = true\n-}\n-\n-resource \"aws_route53_record\" \"record_set\" {\n-  zone_id = \"${data.aws_route53_zone.parent.zone_id}\"\n-  name    = \"${var.environment}.${var.environment_prefix}.${var.route53_zone_base}\"\n-  type    = \"A\"\n+//data \"aws_route53_zone\" \"parent\" {\n+//  name         = \"${var.route53_zone_base}.\"\n+//  #private_zone = true\n+//}\n \n-  alias {\n-    #name                   = \"dualstack.${aws_lb.alb.dns_name}\"\n-    name                   = \"${aws_elb.clb.dns_name}\"\n-    zone_id                = \"${aws_elb.clb.zone_id}\"\n-    evaluate_target_health = false\n-  }\n-}\n+//resource \"aws_route53_record\" \"record_set\" {\n+//  zone_id = \"${data.aws_route53_zone.parent.zone_id}\"\n+//  name    = \"${var.environment}.${var.environment_prefix}.${var.route53_zone_base}\"\n+//  type    = \"A\"\n+//\n+//  alias {\n+//    #name                   = \"dualstack.${aws_lb.alb.dns_name}\"\n+//    name                   = \"${aws_elb.clb.dns_name}\"\n+//    zone_id                = \"${aws_elb.clb.zone_id}\"\n+//    evaluate_target_health = false\n+//  }\n+//}\n \n resource \"aws_ebs_volume\" \"ebs_jenkins\" {\n   availability_zone = \"${var.aws_region}${var.availibity_zone_suffix}\"\n@@ -497,16 +503,16 @@ resource \"aws_ebs_volume\" \"ebs_jenkins\" {\n //  instance_id = \"${aws_instance.id}\"\n //}\n \n-output \"jenkins_r53_dns_name\" {\n-  description = \"The Load Balancer DNS Name\"\n-  value = \"${aws_route53_record.record_set.name}\"\n-}\n-\n-output \"elb_dns_name\" {\n-  description = \"The Load Balancer DNS Name\"\n-  value = \"${aws_elb.clb.dns_name}\"\n+//output \"jenkins_r53_dns_name\" {\n+//  description = \"The Load Balancer DNS Name\"\n+//  value = \"${aws_route53_record.record_set.name}\"\n+//}\n \n-}\n+//output \"elb_dns_name\" {\n+//  description = \"The Load Balancer DNS Name\"\n+//  value = \"${aws_elb.clb.dns_name}\"\n+//\n+//}\n \n output \"jenkins_ebs_volume_id\" {\n   value = \"${aws_ebs_volume.ebs_jenkins.arn}\"\n@@ -516,11 +522,11 @@ output \"aws_autoscaling_group\" {\n   value = \"${aws_autoscaling_group.webapp_v1.name}\"\n }\n \n-output \"ssl_certificate_id\" {\n-  value = \"${data.aws_acm_certificate.jenkins_acm.arn}\"\n-}\n+//output \"ssl_certificate_id\" {\n+//  value = \"${data.aws_acm_certificate.jenkins_acm.arn}\"\n+//}\n \n output \"jenkins_url\" {\n-  value = \"https://${aws_route53_record.record_set.name}\"\n+  value = \"http://${var.environment}.${var.environment_prefix}.${var.route53_zone_base}\"\n }\n "
      },
      {
        "filename": "terraform/jenkins_ebs_cost_optimized/userdata",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "status": "renamed",
        "patch": "@@ -7,6 +7,7 @@ sleep 15s\n echo \"list data template variable\"\n echo ${region}\n echo ${ebs_volume_id}\n+echo ${r53_zone_base}\n \n aws configure set default.region ${region}\n \n@@ -41,6 +42,7 @@ pip install docker-compose\n \n InstanceID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\n \n+\n #Run it as backgroup detached process\n aws ec2 attach-volume --volume-id ${ebs_volume_id} --instance-id $InstanceID --device /dev/xvdb\n \n@@ -97,4 +99,36 @@ cd jenkins\n \n ./create_jenkins_stack_docker.sh up\n \n+sleep 30s\n+\n+\n+RESULT=$(aws route53 list-hosted-zones-by-name --query \"HostedZones[?starts_with(Name, '${r53_zone_base}')].Id\" --output text)\n+HOSTED_ZONE_ID=${RESULT#*/hostedzone/}\n+echo \"HOSTED_ZONE_ID --> $HOSTED_ZONE_ID\"\n+PrivateIP=$(curl -s curl http://169.254.169.254/latest/meta-data/local-ipv4)\n+echo \"PrivateIP --> $PrivateIP\"\n+\n+\n+\n+RECORD_SET_NAME=\"${environment}.${environment_prefix}.${r53_zone_base}\"\n+\n+aws route53 change-resource-record-sets --hosted-zone-id $HOSTED_ZONE_ID --change-batch '{\n+  \"Changes\": [\n+    {\n+      \"Action\": \"UPSERT\",\n+      \"ResourceRecordSet\": {\n+        \"Name\": \"'$RECORD_SET_NAME'\",\n+        \"Type\": \"A\",\n+        \"TTL\": 300,\n+        \"ResourceRecords\": [\n+          {\n+            \"Value\": \"'$PrivateIP'\"\n+          }\n+        ]\n+      }\n+    }\n+  ]\n+}'\n+\n+\n echo \"user_data is done\""
      },
      {
        "filename": "terraform/jenkins_ebs_cost_optimized/vars.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit does not make cost-related changes, only introduces 'cost-optimized EBS'"
  },
  {
    "url": "https://github.com/00inboxtest/cloud-foundation-fabric/commit/3a8a040ff3efcec38c423d5249625ed2d87ab261",
    "files": [
      {
        "filename": "modules/billing-budget/README.md",
        "additions": 95,
        "deletions": 0,
        "changes": 95,
        "status": "added",
        "patch": "@@ -0,0 +1,95 @@\n+# Google Cloud Billing Budget Module\n+\n+This module allows creating a Cloud Billing budget for a set of services and projects.\n+\n+To create billing budgets you need one of the following IAM roles on the target billing account:\n+\n+* Billing Account Administrator\n+* Billing Account Costs Manager\n+\n+## Examples\n+\n+### Simple email notification\n+\n+Send a notification to an email when a set of projects reach $100 of spend.\n+\n+```hcl\n+resource \"google_monitoring_notification_channel\" \"channel\" {\n+  display_name = \"$100 spend channel\"\n+  type         = \"email\"\n+  project      = var.project_id\n+  labels = {\n+    email_address = \"user@example.com\"\n+  }\n+}\n+\n+module \"budget\" {\n+  source          = \"./modules/billing-budget\"\n+  billing_account = var.billing_account_id\n+  name            = \"$100 budget\"\n+  amount          = 100\n+  thresholds = {\n+    current    = [0.5, 0.75, 1.0]\n+    forecasted = [1.0]\n+  }\n+  projects = [\n+    \"projects/123456789000\",\n+    \"projects/123456789111\"\n+  ]\n+  notification_channels = [\n+    google_monitoring_notification_channel.channel.id\n+  ]\n+}\n+# tftest:modules=1:resources=1\n+```\n+\n+### Pubsub notification\n+\n+Send a notification to a PubSub topic the total spend of a billing account reaches the previous month's spend.\n+\n+\n+```hcl\n+module \"budget\" {\n+  source          = \"./modules/billing-budget\"\n+  billing_account = var.billing_account_id\n+  name            = \"previous period budget\"\n+  amount          = 0\n+  thresholds = {\n+    current    = [1.0]\n+    forecasted = []\n+  }\n+  pubsub_topic = module.pubsub.id\n+}\n+\n+module \"pubsub\" {\n+  source     = \"./modules/pubsub\"\n+  project_id = var.project_id\n+  name       = \"budget-topic\"\n+}\n+\n+# tftest:modules=2:resources=2\n+```\n+\n+<!-- BEGIN TFDOC -->\n+## Variables\n+\n+| name | description | type | required | default |\n+|---|---|:---: |:---:|:---:|\n+| billing_account | Billing account id. | <code title=\"\">string</code> | \u2713 |  |\n+| name | Budget name. | <code title=\"\">string</code> | \u2713 |  |\n+| thresholds | None | <code title=\"object&#40;&#123;&#10;current    &#61; list&#40;number&#41;&#10;forecasted &#61; list&#40;number&#41;&#10;&#125;&#41;&#10;validation &#123;&#10;condition     &#61; length&#40;var.thresholds.current&#41; &#62; 0 &#124;&#124; length&#40;var.thresholds.forecasted&#41; &#62; 0&#10;error_message &#61; &#34;Must specify at least one budget threshold.&#34;&#10;&#125;\">object({...})</code> | \u2713 |  |\n+| *amount* | Amount in the billing account's currency for the budget. Use 0 to set budget to 100% of last period's spend. | <code title=\"\">number</code> |  | <code title=\"\">0</code> |\n+| *credit_treatment* | How credits should be treated when determining spend for threshold calculations. Only INCLUDE_ALL_CREDITS or EXCLUDE_ALL_CREDITS are supported | <code title=\"\">string</code> |  | <code title=\"INCLUDE_ALL_CREDITS&#10;validation &#123;&#10;condition &#61; &#40;&#10;var.credit_treatment &#61;&#61; &#34;INCLUDE_ALL_CREDITS&#34; &#124;&#124;&#10;var.credit_treatment &#61;&#61; &#34;EXCLUDE_ALL_CREDITS&#34;&#10;&#41;&#10;error_message &#61; &#34;Argument credit_treatment must be INCLUDE_ALL_CREDITS or EXCLUDE_ALL_CREDITS.&#34;&#10;&#125;\">...</code> |\n+| *notification_channels* | Monitoring notification channels (up to 5) where to send updates. | <code title=\"list&#40;string&#41;\">list(string)</code> |  | <code title=\"\">null</code> |\n+| *notify_default_recipients* | Notify Billing Account Administrators and Billing Account Users IAM roles for the target account. | <code title=\"\">bool</code> |  | <code title=\"\">false</code> |\n+| *projects* | List of projects of the form projects/{project_number}, specifying that usage from only this set of projects should be included in the budget. Set to null to include all projects linked to the billing account. | <code title=\"list&#40;string&#41;\">list(string)</code> |  | <code title=\"\">null</code> |\n+| *pubsub_topic* | The ID of the Cloud Pub/Sub topic where budget related messages will be published. | <code title=\"\">string</code> |  | <code title=\"\">null</code> |\n+| *services* | List of services of the form services/{service_id}, specifying that usage from only this set of services should be included in the budget. Set to null to include usage for all services. | <code title=\"list&#40;string&#41;\">list(string)</code> |  | <code title=\"\">null</code> |\n+\n+## Outputs\n+\n+| name | description | sensitive |\n+|---|---|:---:|\n+| budget | Budget resource. |  |\n+| id | Budget ID. |  |\n+<!-- END TFDOC -->"
      },
      {
        "filename": "modules/billing-budget/main.tf",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "status": "added",
        "patch": "@@ -0,0 +1,78 @@\n+/**\n+ * Copyright 2021 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+locals {\n+  spend_basis = {\n+    current    = \"CURRENT_SPEND\"\n+    forecasted = \"FORECASTED_SPEND\"\n+  }\n+  threshold_pairs = flatten([\n+    for type, values in var.thresholds : [\n+      for value in values : {\n+        spend_basis       = local.spend_basis[type]\n+        threshold_percent = value\n+      }\n+    ]\n+  ])\n+}\n+\n+resource \"google_billing_budget\" \"budget\" {\n+  billing_account = var.billing_account\n+  display_name    = var.name\n+\n+  budget_filter {\n+    projects               = var.projects\n+    credit_types_treatment = var.credit_treatment\n+    services               = var.services\n+  }\n+\n+  dynamic \"amount\" {\n+    for_each = var.amount == 0 ? [1] : []\n+    content {\n+      last_period_amount = true\n+    }\n+  }\n+\n+  dynamic \"amount\" {\n+    for_each = var.amount != 0 ? [1] : []\n+    content {\n+      dynamic \"specified_amount\" {\n+        for_each = var.amount != 0 ? [1] : []\n+        content {\n+          units = var.amount\n+        }\n+      }\n+    }\n+  }\n+\n+  dynamic \"threshold_rules\" {\n+    for_each = local.threshold_pairs\n+    iterator = threshold\n+    content {\n+      threshold_percent = threshold.value.threshold_percent\n+      spend_basis       = threshold.value.spend_basis\n+    }\n+  }\n+\n+  all_updates_rule {\n+    monitoring_notification_channels = var.notification_channels\n+    pubsub_topic                     = var.pubsub_topic\n+    # disable_default_iam_recipients can only be set if\n+    # monitoring_notification_channels is nonempty\n+    disable_default_iam_recipients = try(length(var.notification_channels), 0) > 0 && !var.notify_default_recipients\n+    schema_version                 = \"1.0\"\n+  }\n+}"
      },
      {
        "filename": "modules/billing-budget/outputs.tf",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "status": "added",
        "patch": "@@ -0,0 +1,25 @@\n+/**\n+ * Copyright 2021 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+output \"budget\" {\n+  description = \"Budget resource.\"\n+  value       = google_billing_budget.budget\n+}\n+\n+output \"id\" {\n+  description = \"Budget ID.\"\n+  value       = google_billing_budget.budget.id\n+}"
      },
      {
        "filename": "modules/billing-budget/variables.tf",
        "additions": 85,
        "deletions": 0,
        "changes": 85,
        "status": "added",
        "patch": "@@ -0,0 +1,85 @@\n+/**\n+ * Copyright 2021 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+variable \"amount\" {\n+  description = \"Amount in the billing account's currency for the budget. Use 0 to set budget to 100% of last period's spend.\"\n+  type        = number\n+  default     = 0\n+}\n+\n+variable \"billing_account\" {\n+  description = \"Billing account id.\"\n+  type        = string\n+}\n+\n+variable \"credit_treatment\" {\n+  description = \"How credits should be treated when determining spend for threshold calculations. Only INCLUDE_ALL_CREDITS or EXCLUDE_ALL_CREDITS are supported\"\n+  type        = string\n+  default     = \"INCLUDE_ALL_CREDITS\"\n+  validation {\n+    condition = (\n+      var.credit_treatment == \"INCLUDE_ALL_CREDITS\" ||\n+      var.credit_treatment == \"EXCLUDE_ALL_CREDITS\"\n+    )\n+    error_message = \"Argument credit_treatment must be INCLUDE_ALL_CREDITS or EXCLUDE_ALL_CREDITS.\"\n+  }\n+}\n+\n+variable \"name\" {\n+  description = \"Budget name.\"\n+  type        = string\n+}\n+\n+variable \"notification_channels\" {\n+  description = \"Monitoring notification channels (up to 5) where to send updates.\"\n+  type        = list(string)\n+  default     = null\n+}\n+\n+variable \"notify_default_recipients\" {\n+  description = \"Notify Billing Account Administrators and Billing Account Users IAM roles for the target account.\"\n+  type        = bool\n+  default     = false\n+}\n+\n+variable \"projects\" {\n+  description = \"List of projects of the form projects/{project_number}, specifying that usage from only this set of projects should be included in the budget. Set to null to include all projects linked to the billing account.\"\n+  type        = list(string)\n+  default     = null\n+}\n+\n+variable \"pubsub_topic\" {\n+  description = \"The ID of the Cloud Pub/Sub topic where budget related messages will be published.\"\n+  type        = string\n+  default     = null\n+}\n+\n+variable \"services\" {\n+  description = \"List of services of the form services/{service_id}, specifying that usage from only this set of services should be included in the budget. Set to null to include usage for all services.\"\n+  type        = list(string)\n+  default     = null\n+}\n+\n+variable \"thresholds\" {\n+  type = object({\n+    current    = list(number)\n+    forecasted = list(number)\n+  })\n+  validation {\n+    condition     = length(var.thresholds.current) > 0 || length(var.thresholds.forecasted) > 0\n+    error_message = \"Must specify at least one budget threshold.\"\n+  }\n+}"
      },
      {
        "filename": "modules/billing-budget/versions.tf",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "status": "added",
        "patch": "@@ -0,0 +1,23 @@\n+/**\n+ * Copyright 2021 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+terraform {\n+  required_version = \">= 0.13.0\"\n+  required_providers {\n+    google      = \">= 3.79.0\"\n+    google-beta = \">= 3.79.0\"\n+  }\n+}"
      },
      {
        "filename": "tests/modules/billing_budget/__init__.py",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+# Copyright 2021 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License."
      },
      {
        "filename": "tests/modules/billing_budget/fixture/main.tf",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "status": "added",
        "patch": "@@ -0,0 +1,29 @@\n+/**\n+ * Copyright 2021 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+module \"budget\" {\n+  source                    = \"../../../../modules/billing-budget\"\n+  billing_account           = \"123456-123456-123456\"\n+  name                      = \"my budget\"\n+  projects                  = var.projects\n+  services                  = var.services\n+  notify_default_recipients = var.notify_default_recipients\n+  amount                    = var.amount\n+  credit_treatment          = var.credit_treatment\n+  pubsub_topic              = var.pubsub_topic\n+  notification_channels     = var.notification_channels\n+  thresholds                = var.thresholds\n+}"
      },
      {
        "filename": "tests/modules/billing_budget/fixture/variables.tf",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "status": "added",
        "patch": "@@ -0,0 +1,61 @@\n+/**\n+ * Copyright 2021 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+variable \"amount\" {\n+  type    = number\n+  default = 0\n+}\n+\n+variable \"credit_treatment\" {\n+  type    = string\n+  default = \"INCLUDE_ALL_CREDITS\"\n+}\n+\n+variable \"notification_channels\" {\n+  type    = list(string)\n+  default = null\n+}\n+\n+variable \"notify_default_recipients\" {\n+  type    = bool\n+  default = false\n+}\n+\n+variable \"projects\" {\n+  type    = list(string)\n+  default = null\n+}\n+\n+variable \"pubsub_topic\" {\n+  type    = string\n+  default = null\n+}\n+\n+variable \"services\" {\n+  type    = list(string)\n+  default = null\n+}\n+\n+variable \"thresholds\" {\n+  type = object({\n+    current    = list(number)\n+    forecasted = list(number)\n+  })\n+  default = {\n+    current    = [0.5, 1.0]\n+    forecasted = [1.0]\n+  }\n+}"
      },
      {
        "filename": "tests/modules/billing_budget/test_plan.py",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "status": "added",
        "patch": "@@ -0,0 +1,63 @@\n+# Copyright 2021 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\n+import os\n+import pytest\n+\n+\n+FIXTURES_DIR = os.path.join(os.path.dirname(__file__), 'fixture')\n+\n+\n+def test_resource_count(plan_runner):\n+  \"Test number of resources created.\"\n+  _, resources = plan_runner(FIXTURES_DIR, pubsub_topic='topic')\n+  assert len(resources) == 1\n+  resource = resources[0]\n+  assert resource['values']['all_updates_rule'] == [\n+    {'disable_default_iam_recipients': False,\n+     'monitoring_notification_channels': None,\n+     'pubsub_topic': 'topic',\n+     'schema_version': '1.0'}\n+  ]\n+\n+  _, resources = plan_runner(FIXTURES_DIR, notification_channels='[\"channel\"]')\n+  assert len(resources) == 1\n+  resource = resources[0]\n+  assert resource['values']['all_updates_rule'] == [\n+    {'disable_default_iam_recipients': True,\n+     'monitoring_notification_channels': ['channel'],\n+     'pubsub_topic': None,\n+     'schema_version': '1.0'}\n+  ]\n+\n+\n+def test_absolute_amount(plan_runner):\n+  \"Test absolute amount budget.\"\n+  _, resources = plan_runner(FIXTURES_DIR, pubsub_topic='topic', amount=\"100\")\n+  assert len(resources) == 1\n+  resource = resources[0]\n+\n+  amount = resource['values']['amount'][0]\n+  assert amount['last_period_amount'] is None\n+  assert amount['specified_amount'] == [{'nanos': None, 'units': '100'}]\n+\n+  assert resource['values']['threshold_rules'] ==  [\n+    {'spend_basis': 'CURRENT_SPEND',\n+     'threshold_percent': 0.5},\n+    {'spend_basis': 'CURRENT_SPEND',\n+     'threshold_percent': 1},\n+    {'spend_basis': 'FORECASTED_SPEND',\n+     'threshold_percent': 1}\n+  ]"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/laurijssen/tform_azure/commit/6f802267c2d43803eebbdb383da9e3815c1c68bd",
    "files": [
      {
        "filename": "vars.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n variable \"location\" {\n   type    = string\n-  default = \"westeurope\"\n+  default = \"northeurope\"\n }\n \n variable \"prefix\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": ["azure", "cheaper_area"],
    "notes": "Move from westeurope to northeurope which is 'mo cheapo'"
  },
  {
    "url": "https://github.com/AwakeningSV/live-infrastructure/commit/43bba3db97631d8730160950395fde42793adbc2",
    "files": [
      {
        "filename": "README.md",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -1,18 +1,26 @@\n # live-infrastructure\n \n-[Awakening Church][AC] uses CloudFlare and DigitalOcean to host\n+[Awakening Church][AC] uses CloudFlare and Microsoft Azure to host\n [nginx-rtmp configured for H.264/AAC HLS streaming][awakening-nginx-rtmp]\n running in Docker on CoreOS. This repositiory creates that infrastructure\n using [Terraform][]. You can use this configuration to start your own\n copy of our live video transcoding system.\n \n-We use this system for 4 hours a week. This costs $1 per week as of August 2016.\n+We use this system for 4 hours a week. Costs are estimated at about $5 per week.\n+However, since Microsoft offers\n+[$5,000 per year in Azure credits to non-profits, including churches][azure-credit],\n+this costs us nothing to run. Thanks Microsoft!\n \n ## Usage\n \n+Gather the required [Azure credentials][azure-setup].\n [Install Terraform.][install] Configure the [required Terraform variables][tfvars]:\n \n- - `do_token` DigitalOcean API Token\n+ - `azure_region` Azure region, e.g. `West US 2`\n+ - `azure_tenant_id` Azure [Tenant ID][azure-setup]\n+ - `azure_client_id` Azure [Client ID][azure-setup]\n+ - `azure_client_secret` Azure [Client secret][azure-setup]\n+ - `azure_storage_prefix` Unique name for Azure storage, e.g. `livevideoadventure`\n  - `cf_email` CloudFlare Email\n  - `cf_token` CloudFlare API Token\n  - `cf_domain` CloudFlare Domain, e.g. `awakeningchurch.com`\n@@ -46,3 +54,5 @@ MIT\n [awakening-nginx-rtmp]: https://github.com/awakening-church/awakening-nginx-rtmp\n [usage]: https://github.com/awakening-church/awakening-nginx-rtmp/blob/master/README.md#usage\n [eof]: https://github.com/hashicorp/terraform/issues/8011\n+[azure-setup]: https://www.terraform.io/docs/providers/azurerm/index.html#creating-credentials\n+[azure-credit]: https://www.microsoft.com/en-us/philanthropies/product-donations/products/azure\n\\ No newline at end of file"
      },
      {
        "filename": "av.tf",
        "additions": 100,
        "deletions": 16,
        "changes": 116,
        "status": "modified",
        "patch": "@@ -1,5 +1,8 @@\n-provider \"digitalocean\" {\n-    token = \"${var.do_token}\"\n+provider \"azurerm\" {\n+    subscription_id = \"${var.azure_subscription_id}\"\n+    client_id = \"${var.azure_client_id}\"\n+    client_secret = \"${var.azure_client_secret}\"\n+    tenant_id = \"${var.azure_tenant_id}\"\n }\n \n provider \"cloudflare\" {\n@@ -14,25 +17,106 @@ data \"template_file\" \"av_cloud_config\" {\n     }\n }\n \n-resource \"digitalocean_ssh_key\" \"av\" {\n-    name = \"AV SSH Key\"\n-    public_key = \"${file(\"${var.ssh_key_file}\")}\"\n+resource \"azurerm_resource_group\" \"live\" {\n+    name = \"LiveVideo\"\n+    location = \"${var.azure_region}\"\n }\n \n-resource \"digitalocean_droplet\" \"av1\" {\n+resource \"azurerm_virtual_network\" \"av_net\" {\n+    name = \"av-net\"\n+    address_space = [\"10.0.0.0/16\"]\n+    location = \"${var.azure_region}\"\n+    resource_group_name = \"${azurerm_resource_group.live.name}\"\n+}\n+\n+resource \"azurerm_subnet\" \"av_mgmt\" {\n+    name = \"av-management\"\n+    address_prefix = \"10.0.254.0/24\"\n+    resource_group_name = \"${azurerm_resource_group.live.name}\"\n+    virtual_network_name = \"${azurerm_virtual_network.av_net.name}\"\n+}\n+\n+resource \"azurerm_public_ip\" \"av_public\" {\n+    name = \"av-public\"\n+    location = \"${var.azure_region}\"\n+    resource_group_name = \"${azurerm_resource_group.live.name}\"\n+    public_ip_address_allocation = \"static\"\n+    domain_name_label = \"livevideo-av\"\n+}\n+\n+resource \"azurerm_network_interface\" \"av_nic\" {\n+    name = \"av-${count.index}-nic\"\n+    location = \"${var.azure_region}\"\n+    resource_group_name = \"${azurerm_resource_group.live.name}\"\n+\n+    ip_configuration {\n+        name = \"av-${count.index}\"\n+        subnet_id = \"${azurerm_subnet.av_mgmt.id}\"\n+        private_ip_address_allocation = \"dynamic\"\n+        public_ip_address_id = \"${azurerm_public_ip.av_public.id}\"\n+    }\n+}\n+\n+resource \"azurerm_storage_account\" \"av_storage\" {\n+    name = \"${var.azure_storage_prefix}av\"\n+    location = \"${var.azure_region}\"\n+    resource_group_name = \"${azurerm_resource_group.live.name}\"\n+    account_type = \"Standard_LRS\"\n+}\n+\n+resource \"azurerm_storage_container\" \"av_storage_container\" {\n+    name = \"vhds\"\n+    resource_group_name = \"${azurerm_resource_group.live.name}\"\n+    storage_account_name = \"${azurerm_storage_account.av_storage.name}\"\n+    container_access_type = \"private\"\n+}\n+\n+resource \"azurerm_virtual_machine\" \"av_vm\" {\n     count = 1\n-    name = \"av1.${var.cf_domain}\"\n-    size = \"16gb\"\n-    image = \"coreos-stable\"\n-    region = \"sfo1\"\n-    ssh_keys = [\"${digitalocean_ssh_key.av.id}\"]\n-    user_data = \"${data.template_file.av_cloud_config.rendered}\"\n+\n+    name = \"av${count.index}.${var.cf_domain}\"\n+    location = \"${var.azure_region}\"\n+    resource_group_name = \"${azurerm_resource_group.live.name}\"\n+    network_interface_ids = [\"${azurerm_network_interface.av_nic.id}\"]\n+    vm_size = \"Standard_F8S\"\n+\n+    delete_data_disks_on_termination = \"true\"\n+    delete_os_disk_on_termination = \"true\"\n+\n+    storage_image_reference {\n+        publisher = \"CoreOS\"\n+        offer = \"CoreOS\"\n+        sku = \"Stable\"\n+        version = \"latest\"\n+    }\n+\n+    storage_os_disk {\n+        name = \"av${count.index}-disk\"\n+        vhd_uri = \"${azurerm_storage_account.av_storage.primary_blob_endpoint}${azurerm_storage_container.av_storage_container.name}/${azurerm_resource_group.live.name}-av${count.index}.vhd\"\n+        caching = \"ReadWrite\"\n+        create_option = \"FromImage\"\n+    }\n+\n+    os_profile {\n+        computer_name = \"av${count.index}\"\n+        admin_username = \"core\"\n+        admin_password = \"Password1234!\"\n+        custom_data = \"${base64encode(data.template_file.av_cloud_config.rendered)}\"\n+    }\n+\n+    os_profile_linux_config {\n+        disable_password_authentication = true\n+        ssh_keys {\n+            path = \"/home/core/.ssh/authorized_keys\"\n+            key_data = \"${file(\"${var.ssh_key_file}\")}\"\n+        }\n+    }\n }\n \n-resource \"cloudflare_record\" \"av1\" {\n+resource \"cloudflare_record\" \"av0\" {\n     domain = \"${var.cf_domain}\"\n-    name = \"av1\"\n-    value = \"${digitalocean_droplet.av1.ipv4_address}\"\n+    name = \"av0\"\n+    value = \"${azurerm_public_ip.av_public.ip_address}\"\n     type = \"A\"\n     ttl = 120\n     proxied = false\n@@ -41,7 +125,7 @@ resource \"cloudflare_record\" \"av1\" {\n resource \"cloudflare_record\" \"live\" {\n     domain = \"${var.cf_domain}\"\n     name = \"live\"\n-    value = \"${digitalocean_droplet.av1.ipv4_address}\"\n+    value = \"${azurerm_public_ip.av_public.ip_address}\"\n     type = \"A\"\n     ttl = 120\n     proxied = false"
      },
      {
        "filename": "variables.tf",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -1,6 +1,11 @@\n-variable \"do_token\" {}\n variable \"ssh_key_file\" {}\n variable \"cf_email\" {}\n variable \"cf_token\" {}\n variable \"cf_domain\" {}\n variable \"publish_secret\" {}\n+variable \"azure_region\" {}\n+variable \"azure_tenant_id\" {}\n+variable \"azure_subscription_id\" {}\n+variable \"azure_client_id\" {}\n+variable \"azure_client_secret\" {}\n+variable \"azure_storage_prefix\" {}"
      }
    ],
    "existing_codes": [
      "saving",
      "awareness",
      "provider"
    ],
    "codes": ["digitalocean", "azure", "cheaper_provider"],
    "notes": "The commit moves from Digital Ocean to Azure, since Microsoft provides $5000 of credits to non-profits"
  },
  {
    "url": "https://github.com/alphagov/govuk-terraform-provisioning/commit/ed67711a54ca65473c9c7b788161d680914ef1c7",
    "files": [
      {
        "filename": "projects/transition-logs-backups/resources/storage_and_access.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+module \"private_s3_bucket\" {\n+    source = \"../../../modules/private_s3_bucket\"\n+\n+    bucket_name = \"govuk-transition-logs\"\n+    environment = \"${var.environment}\"\n+    team        = \"Infrastructure\"\n+    username    = \"govuk-transition-logs\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit only mentions low-cost without any related change; it also mentions that Terraform did not support lifecycle management for S3 buckets at that time, which it now does"
  },
  {
    "url": "https://github.com/alphagov/govuk-terraform-provisioning/commit/ac105ab0a5ae38fbf69167e072f8970a4a61c3e8",
    "files": [
      {
        "filename": "projects/mongodb-backup-s3/resources/storage_and_access.tf",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -41,6 +41,15 @@ resource \"aws_s3_bucket\" \"govuk-mongodb-backup-s3\" {\n     versioning {\n         enabled = \"${var.versioning}\"\n     }\n+\n+    lifecycle_rule {\n+        prefix = \"\"\n+        enabled = true\n+\n+        noncurrent_version_expiration {\n+            days = 7\n+        }\n+    }\n }\n \n \n@@ -56,6 +65,23 @@ resource \"aws_s3_bucket\" \"govuk-mongodb-backup-s3-daily\" {\n     versioning {\n         enabled = \"${var.versioning}\"\n     }\n+\n+    lifecycle_rule {\n+        prefix = \"\"\n+        enabled = true\n+\n+        noncurrent_version_transition {\n+            days = 30\n+            storage_class = \"STANDARD_IA\"\n+        }\n+        noncurrent_version_transition {\n+            days = 60\n+            storage_class = \"GLACIER\"\n+        }\n+        noncurrent_version_expiration {\n+            days = 90\n+        }\n+    }\n }\n \n resource \"aws_iam_policy\" \"readwrite_policy\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "add_lifecycle_rule"],
    "notes": "Add lifecycle rules for S3 buckets to drop old data and save costs"
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-aws-glue-crawler/commit/484b85587d32f2f2a6d54ffe16d5c759841961f8",
    "files": [
      {
        "filename": ".github/workflows/compare.yml",
        "additions": 19,
        "deletions": 17,
        "changes": 36,
        "status": "modified",
        "patch": "@@ -7,9 +7,6 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n-  terraform-docs: 0.11.2\n-  tfsec: 0.39.10\n   tf_target_dir: example/examplea\n   branch: main\n jobs:\n@@ -23,9 +20,10 @@ jobs:\n           token: ${{ github.token }}\n       - name: tfsec\n         run: |\n-         wget https://github.com/tfsec/tfsec/releases/download/v${{ env.tfsec }}/tfsec-linux-amd64\n-         chmod +x tfsec-linux-amd64\n-         ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n+          pip3 install lastversion\n+          lastversion tfsec/tfsec --assets -d\n+          chmod +x tfsec-linux-amd64\n+          ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n@@ -67,18 +65,20 @@ jobs:\n       - name: install terrascan\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion accurics/terrascan)\n-          curl --location https://github.com/accurics/terrascan/releases/download/v${now}/terrascan_${now}_Linux_x86_64.tar.gz --output terrascan.tar.gz\n-          tar -xvf terrascan.tar.gz\n+          lastversion accurics/terrascan --assets -d --verbose\n+          tar -xvf terrascan*.tar.gz\n+          chmod +x ./terrascan\n       - name: run terrascan\n-        run: ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json >terrascan.json\n+        run: |\n+          ./terrascan init\n+          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: terrascan\n           path: terrascan.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n   kics:\n     runs-on: ubuntu-latest\n     steps:\n@@ -87,18 +87,20 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: run kics Scan\n-        uses: checkmarx/kics-action@v1.0\n-        with:\n-          path: ${{ env.tf_target_dir }}\n-          output_path: \"kics.json\"\n+      - name: install kics\n+        run: |\n+          pip3 install lastversion\n+          lastversion Checkmarx/kics --assets -d --verbose\n+          tar -xvf kics*.tar.gz\n+      - name: run kics\n+        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: kics\n           path: kics.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n \n   upload:\n     needs: [kics, terrascan, checkov, tfsec]"
      },
      {
        "filename": ".github/workflows/main.yml",
        "additions": 33,
        "deletions": 9,
        "changes": 42,
        "status": "modified",
        "patch": "@@ -9,8 +9,7 @@ on:\n     branches:\n       - main\n env:\n-  terraform: 0.14.8\n-  terraform-docs: 0.11.2\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n   branch: main\n jobs:\n@@ -34,6 +33,28 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+      - name: Bills\n+        run: |\n+          pip3 install lastversion\n+          lastversion infracost --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf infracost*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/infracost-linux-amd64\n+          $GITHUB_WORKSPACE/bin/infracost-linux-amd64 breakdown --path ${{ env.tf_target_dir }} --usage-file ${{ env.tf_target_dir }}/infracost-usage.yml\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -42,20 +63,23 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-\n-      - name: Checkov action\n-        uses: bridgecrewio/checkov-action@master\n+      - uses: actions/setup-python@v2\n         with:\n-          directory: ${{ env.tf_target_dir }}\n-          framework: terraform\n-          args: \"--output cli  --bc-api-key ${{ secrets.BC_API_KEY }}\"\n+          python-version: 3.8\n+      - run: |\n+          pip3 install lastversion\n+          lastversion terraform-docs --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n+          echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n+      - uses: pre-commit/action@v2.0.0\n   version:\n     name: versioning\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@master\n       - name: Bump version and push tag\n-        if: ${{ !env.ACT }}\n         uses: anothrNick/github-tag-action@master\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "filename": ".github/workflows/pull_request.yml",
        "additions": 39,
        "deletions": 8,
        "changes": 47,
        "status": "modified",
        "patch": "@@ -6,8 +6,7 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n-  terraform-docs: 0.11.2\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n \n jobs:\n@@ -30,17 +29,49 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout\n         uses: actions/checkout@v2\n         with:\n           token: ${{ github.token }}\n-\n-      - name: Checkov action\n-        uses: bridgecrewio/checkov-action@master\n+      - uses: actions/setup-python@v2\n+        with:\n+          python-version: 3.8\n+      - run: |\n+          pip3 install lastversion\n+          lastversion terraform-docs --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n+          echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n+      - uses: pre-commit/action@v2.0.0\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          # See the cloud credentials section for the options\n         with:\n-          directory: \"example/examplea\"\n-          framework: terraform\n-          args: \"--output cli  --bc-api-key ${{ secrets.BC_API_KEY }}\"\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          usage_file: ${{ env.tf_target_dir }}/infracost-usage.yml\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": ".markdownlint.json",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -4,7 +4,8 @@\n   \"MD033\": {\n     \"allowed_elements\": [\n       \"br\",\n-      \"pre\"\n+      \"pre\",\n+      \"a\"\n     ]\n   },\n   \"MD034\": false,"
      },
      {
        "filename": "README.md",
        "additions": 63,
        "deletions": 29,
        "changes": 92,
        "status": "modified",
        "patch": "@@ -25,11 +25,46 @@ Include this repository as a module in your existing Terraform code:\n ```terraform\n module 'crawler\" {\n   source           = \"JamesWoolfenden/aws/glue-crawler\"\n-  version          = \"v0.2.30\"\n+  version          = \"v0.1.30\"\n   name             = var.name\n }\n ```\n \n+## Costs\n+\n+```text\n+monthly cost estimate\n+\n+Project: .\n+\n+ Name                                           Monthly Qty  Unit                Monthly Cost\n+\n+ aws_kms_key.glue\n+ \u251c\u2500 Customer master key                                   1  months                     $1.00\n+ \u251c\u2500 Requests                                Cost depends on usage: $0.03 per 10k requests\n+ \u251c\u2500 ECC GenerateDataKeyPair requests        Cost depends on usage: $0.10 per 10k requests\n+ \u2514\u2500 RSA GenerateDataKeyPair requests        Cost depends on usage: $0.10 per 10k requests\n+\n+ aws_s3_bucket.glue_target\n+ \u2514\u2500 Standard\n+    \u251c\u2500 Storage                              Cost depends on usage: $0.02 per GB-months\n+    \u251c\u2500 PUT, COPY, POST, LIST requests       Cost depends on usage: $0.0053 per 1k requests\n+    \u251c\u2500 GET, SELECT, and all other requests  Cost depends on usage: $0.00042 per 1k requests\n+    \u251c\u2500 Select data scanned                  Cost depends on usage: $0.00225 per GB-months\n+    \u2514\u2500 Select data returned                 Cost depends on usage: $0.0008 per GB-months\n+\n+ PROJECT TOTAL                                                                          $1.00\n+\n+----------------------------------\n+To estimate usage-based resources use --usage-file, see https://infracost.io/usage-file\n+\n+5 resource types weren't estimated as they're not supported yet.\n+1 x aws_glue_data_catalog_encryption_settings\n+1 x aws_glue_job\n+1 x aws_glue_catalog_database\n+1 x aws_glue_security_configuration\n+1 x aws_glue_crawler\n+```\n <!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n ## Requirements\n \n@@ -39,50 +74,49 @@ No requirements.\n \n | Name | Version |\n |------|---------|\n-| aws | n/a |\n+| <a name=\"provider_aws\"></a> [aws](#provider\\_aws) | n/a |\n \n ## Modules\n \n-No Modules.\n+No modules.\n \n ## Resources\n \n-| Name |\n-|------|\n-| [aws_glue_catalog_database](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_catalog_database) |\n-| [aws_glue_crawler](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_crawler) |\n-| [aws_glue_data_catalog_encryption_settings](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_data_catalog_encryption_settings) |\n-| [aws_glue_job](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_job) |\n-| [aws_glue_security_configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_security_configuration) |\n-| [aws_iam_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy) |\n-| [aws_iam_role](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role) |\n-| [aws_iam_role_policy_attachment](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy_attachment) |\n-| [aws_kms_key](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/kms_key) |\n+| Name | Type |\n+|------|------|\n+| [aws_glue_catalog_database.glue_database](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_catalog_database) | resource |\n+| [aws_glue_crawler.glue_crawler](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_crawler) | resource |\n+| [aws_glue_data_catalog_encryption_settings.examplea](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_data_catalog_encryption_settings) | resource |\n+| [aws_glue_job.example](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_job) | resource |\n+| [aws_glue_security_configuration.example](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_security_configuration) | resource |\n+| [aws_iam_policy.glue_crawler](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy) | resource |\n+| [aws_iam_role.glue_crawler](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role) | resource |\n+| [aws_iam_role_policy_attachment.glue_crawler](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy_attachment) | resource |\n+| [aws_iam_role_policy_attachment.glue_service](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy_attachment) | resource |\n \n ## Inputs\n \n | Name | Description | Type | Default | Required |\n |------|-------------|------|---------|:--------:|\n-| catalog\\_id | n/a | `string` | `null` | no |\n-| common\\_tags | Standard `common_tags` module input. | `map(string)` | n/a | yes |\n-| description | n/a | `string` | `\"A Glue DB\"` | no |\n-| glue\\_crawler\\_name | Name of the Glue crawler. | `string` | `\"uhu\"` | no |\n-| glue\\_database\\_name | Name of the Glue catalog database. | `string` | n/a | yes |\n-| glue\\_job\\_name | n/a | `string` | `\"myfirstgluejob\"` | no |\n-| glue\\_script\\_path | n/a | `any` | n/a | yes |\n-| kms\\_key\\_name | n/a | `string` | n/a | yes |\n-| location\\_uri | n/a | `string` | `null` | no |\n-| name\\_prefix | Prefix for naming | `string` | n/a | yes |\n-| params | n/a | `map(any)` | `{}` | no |\n-| s3\\_target\\_bucket\\_name | S3 target bucket for Glue crawler. | `string` | n/a | yes |\n-| target\\_path | Path to crawler target file(s). | `string` | n/a | yes |\n+| <a name=\"input_catalog_id\"></a> [catalog\\_id](#input\\_catalog\\_id) | n/a | `string` | `null` | no |\n+| <a name=\"input_description\"></a> [description](#input\\_description) | n/a | `string` | `\"A Glue DB\"` | no |\n+| <a name=\"input_glue_crawler_name\"></a> [glue\\_crawler\\_name](#input\\_glue\\_crawler\\_name) | Name of the Glue crawler. | `string` | `\"uhu\"` | no |\n+| <a name=\"input_glue_database_name\"></a> [glue\\_database\\_name](#input\\_glue\\_database\\_name) | Name of the Glue catalog database. | `string` | n/a | yes |\n+| <a name=\"input_glue_job_name\"></a> [glue\\_job\\_name](#input\\_glue\\_job\\_name) | n/a | `string` | `\"myfirstgluejob\"` | no |\n+| <a name=\"input_glue_script_path\"></a> [glue\\_script\\_path](#input\\_glue\\_script\\_path) | n/a | `string` | n/a | yes |\n+| <a name=\"input_kms_key\"></a> [kms\\_key](#input\\_kms\\_key) | n/a | `any` | n/a | yes |\n+| <a name=\"input_location_uri\"></a> [location\\_uri](#input\\_location\\_uri) | n/a | `string` | `null` | no |\n+| <a name=\"input_name_prefix\"></a> [name\\_prefix](#input\\_name\\_prefix) | Prefix for naming | `string` | n/a | yes |\n+| <a name=\"input_params\"></a> [params](#input\\_params) | n/a | `map(any)` | `{}` | no |\n+| <a name=\"input_s3_target_bucket_name\"></a> [s3\\_target\\_bucket\\_name](#input\\_s3\\_target\\_bucket\\_name) | S3 target bucket for Glue crawler. | `string` | n/a | yes |\n+| <a name=\"input_target_path\"></a> [target\\_path](#input\\_target\\_path) | Path to crawler target file(s). | `string` | n/a | yes |\n \n ## Outputs\n \n | Name | Description |\n |------|-------------|\n-| glue\\_crawler\\_name | The name of the Glue crawler. |\n-| security\\_configuration | A Glue Security Configuration |\n+| <a name=\"output_glue_crawler_name\"></a> [glue\\_crawler\\_name](#output\\_glue\\_crawler\\_name) | The name of the Glue crawler. |\n+| <a name=\"output_security_configuration\"></a> [security\\_configuration](#output\\_security\\_configuration) | A Glue Security Configuration |\n <!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n \n ## Information"
      },
      {
        "filename": "aws_glue_crawler.glue_crawler.tf",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -3,12 +3,9 @@ resource \"aws_glue_crawler\" \"glue_crawler\" {\n   database_name          = aws_glue_catalog_database.glue_database.name\n   name                   = var.glue_crawler_name\n   role                   = aws_iam_role.glue_crawler.arn\n-  security_configuration = aws_glue_security_configuration.example\n+  security_configuration = aws_glue_security_configuration.example.id\n \n   s3_target {\n     path = local.crawler_bucket_path\n   }\n-\n-\n-  tags = var.common_tags\n }"
      },
      {
        "filename": "aws_glue_data_catalog_encryption_settings.examplea.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,13 +1,13 @@\n resource \"aws_glue_data_catalog_encryption_settings\" \"examplea\" {\n   data_catalog_encryption_settings {\n     connection_password_encryption {\n-      aws_kms_key_id                       = data.aws_kms_key.example.arn\n+      aws_kms_key_id                       = var.kms_key.id\n       return_connection_password_encrypted = true\n     }\n \n     encryption_at_rest {\n       catalog_encryption_mode = \"SSE-KMS\"\n-      sse_aws_kms_key_id      = data.aws_kms_key.example.arn\n+      sse_aws_kms_key_id      = var.kms_key.id\n     }\n   }\n }"
      },
      {
        "filename": "aws_glue_job.example.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,9 +1,8 @@\n resource \"aws_glue_job\" \"example\" {\n   name                   = var.glue_job_name\n-  security_configuration = aws_glue_security_configuration.example\n-  role_arn               = aws_iam_role.glue_crawler\n+  security_configuration = aws_glue_security_configuration.example.id\n+  role_arn               = aws_iam_role.glue_crawler.arn\n   command {\n     script_location = var.glue_script_path\n   }\n-  tags = var.common_tags\n }"
      },
      {
        "filename": "aws_glue_security_configuration.example.tf",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -4,21 +4,17 @@ resource \"aws_glue_security_configuration\" \"example\" {\n   encryption_configuration {\n     cloudwatch_encryption {\n       cloudwatch_encryption_mode = \"SSE-KMS\"\n-      kms_key_arn                = \"\"\n+      kms_key_arn                = var.kms_key.arn\n     }\n \n     job_bookmarks_encryption {\n-      kms_key_arn                   = \"\"\n+      kms_key_arn                   = var.kms_key.arn\n       job_bookmarks_encryption_mode = \"CSE-KMS\"\n     }\n \n     s3_encryption {\n-      kms_key_arn        = data.aws_kms_key.example.arn\n+      kms_key_arn        = var.kms_key.arn\n       s3_encryption_mode = \"SSE-KMS\"\n     }\n   }\n }\n-\n-data \"aws_kms_key\" \"example\" {\n-  key_id = var.kms_key_name\n-}"
      },
      {
        "filename": "aws_iam_role.glue_crawler.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -17,5 +17,4 @@ resource \"aws_iam_role\" \"glue_crawler\" {\n   ]\n }\n EOF\n-  tags               = var.common_tags\n }"
      },
      {
        "filename": "example/examplea/aws_kms_key.glue.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -9,6 +9,6 @@ resource \"aws_kms_key\" \"glue\" {\n \n \n resource \"aws_kms_alias\" \"glue\" {\n-  name          = var.kms_key_name\n+  name          = \"alias/glue\"\n   target_key_id = aws_kms_key.glue.key_id\n }"
      },
      {
        "filename": "example/examplea/aws_s3_bucket.glue_target.tf",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "status": "added",
        "patch": "@@ -0,0 +1,25 @@\n+resource \"aws_s3_bucket\" \"glue_target\" {\n+  # checkov:skip=CKV_AWS_18: test data\n+  # checkov:skip=CKV_AWS_145: test data\n+  # checkov:skip=CKV_AWS_144: test data\n+  # checkov:skip=CKV_AWS_21: test data\n+  # checkov:skip=CKV_AWS_52: test data\n+  #tfsec:ignore:AWS002\n+  #tfsec:ignore:AWS077\n+  server_side_encryption_configuration {\n+    rule {\n+      apply_server_side_encryption_by_default {\n+        sse_algorithm = \"AES256\"\n+      }\n+    }\n+  }\n+}\n+\n+\n+resource \"aws_s3_bucket_public_access_block\" \"glue_target\" {\n+  bucket                  = aws_s3_bucket.glue_target.id\n+  restrict_public_buckets = true\n+  block_public_acls       = true\n+  block_public_policy     = true\n+  ignore_public_acls      = true\n+}"
      },
      {
        "filename": "example/examplea/examplea.auto.tfvars",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,6 +1,4 @@\n-common_tags = {\n-  \"createby\" = \"Terraform\"\n-  module     = \"terraform-aws-glue-crawler\"\n-}\n-kms_key_name     = \"alias/glue\"\n-glue_script_path = \"s3://mygluejobbucket/example.py\"\n+\n+glue_script_path   = \"s3://mygluejobbucket/example.py\"\n+glue_crawler_name  = \"examplea\"\n+glue_database_name = \"examplea\""
      },
      {
        "filename": "example/examplea/infracost-usage.yml",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "status": "added",
        "patch": "@@ -0,0 +1,64 @@\n+version: 0.1\n+resource_usage:\n+  aws_s3_bucket.glue_target:\n+    glacier:\n+      early_delete_gb: 0\n+      monthly_bulk_data_retrieval_gb: 0\n+      monthly_bulk_data_retrieval_requests: 0\n+      monthly_bulk_select_data_returned_gb: 0\n+      monthly_bulk_select_data_scanned_gb: 0\n+      monthly_expedited_data_retrieval_gb: 0\n+      monthly_expedited_data_retrieval_requests: 0\n+      monthly_expedited_select_data_returned_gb: 0\n+      monthly_expedited_select_data_scanned_gb: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_standard_data_retrieval_gb: 0\n+      monthly_standard_data_retrieval_requests: 0\n+      monthly_standard_select_data_returned_gb: 0\n+      monthly_standard_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    glacier_deep_archive:\n+      early_delete_gb: 0\n+      monthly_bulk_data_retrieval_gb: 0\n+      monthly_bulk_data_retrieval_requests: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_standard_data_retrieval_gb: 0\n+      monthly_standard_data_retrieval_requests: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    intelligent_tiering:\n+      early_delete_gb: 0\n+      frequent_access_storage_gb: 0\n+      infrequent_access_storage_gb: 0\n+      monitored_objects: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+    object_tags: 0\n+    one_zone_infrequent_access:\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_retrieval_gb: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    standard:\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    standard_infrequent_access:\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_retrieval_gb: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0"
      },
      {
        "filename": "example/examplea/module.glue.tf",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -1,10 +1,9 @@\n module \"glue\" {\n   source                = \"../../\"\n-  common_tags           = var.common_tags\n-  glue_database_name    = \"locktite\"\n-  kms_key_name          = var.kms_key_name\n+  glue_database_name    = var.glue_database_name\n   name_prefix           = var.name_prefix\n-  s3_target_bucket_name = var.s3_target_bucket_name\n+  s3_target_bucket_name = aws_s3_bucket.glue_target.id\n   target_path           = var.target_path\n   glue_script_path      = var.glue_script_path\n+  kms_key               = aws_kms_key.glue\n }"
      },
      {
        "filename": "example/examplea/provider.aws.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,3 +1,9 @@\n provider \"aws\" {\n   region = \"eu-west-2\"\n+  default_tags {\n+    tags = {\n+      createdby = \"Terraform\"\n+      module    = \"terraform-aws-glue-crawler\"\n+    }\n+  }\n }"
      },
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,9 +1,9 @@\n terraform {\n   required_providers {\n     aws = {\n-      version = \"3.32.0\"\n+      version = \"3.39.0\"\n       source  = \"hashicorp/aws\"\n     }\n   }\n-  required_version = \"0.14.8\"\n+  required_version = \">=0.14.8\"\n }"
      },
      {
        "filename": "example/examplea/variables.tf",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -1,7 +1,3 @@\n-variable \"common_tags\" {\n-  description = \"This is to help you add tags to your cloud objects\"\n-  type        = map(any)\n-}\n variable \"glue_database_name\" {\n   description = \"Name of the Glue catalog database.\"\n   type        = string\n@@ -12,11 +8,6 @@ variable \"glue_crawler_name\" {\n   type        = string\n }\n \n-variable \"s3_target_bucket_name\" {\n-  description = \"S3 target bucket for Glue crawler.\"\n-  type        = string\n-}\n-\n variable \"target_path\" {\n   description = \"Path to crawler target file(s).\"\n   type        = string\n@@ -29,10 +20,6 @@ variable \"name_prefix\" {\n   default     = \"jgw-\"\n }\n \n-variable \"kms_key_name\" {\n-  type = string\n-}\n-\n variable \"glue_script_path\" {\n \n }"
      },
      {
        "filename": "variables.tf",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -1,9 +1,4 @@\n \n-variable \"common_tags\" {\n-  description = \"Standard `common_tags` module input.\"\n-  type        = map(string)\n-}\n-\n variable \"glue_database_name\" {\n   description = \"Name of the Glue catalog database.\"\n   type        = string\n@@ -49,15 +44,15 @@ variable \"description\" {\n   default = \"A Glue DB\"\n }\n \n-variable \"kms_key_name\" {\n-  type = string\n-}\n \n variable \"glue_job_name\" {\n   type    = string\n   default = \"myfirstgluejob\"\n }\n \n variable \"glue_script_path\" {\n+  type = string\n+}\n \n+variable \"kms_key\" {\n }"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/GBergeret/micro-service-as-code/commit/46f76d50b8569f450ce909e04f3c5fa81b97737a",
    "files": [
      {
        "filename": "terraform/ec2.tf",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -24,9 +24,11 @@ resource \"aws_launch_configuration\" \"ec2\" {\n }\n \n resource \"aws_autoscaling_group\" \"ec2\" {\n+  depends_on = [\"aws_lb_listener.l\"]\n+\n   name_prefix          = \"${var.name_prefix}\"\n   launch_configuration = \"${aws_launch_configuration.ec2.name}\"\n-  load_balancers       = [\"${aws_elb.lb.name}\"]\n+  target_group_arns    = [\"${aws_lb_target_group.g.arn}\"]\n   vpc_zone_identifier  = [\"${var.subnets}\"]\n \n   min_size                  = 2\n@@ -65,10 +67,10 @@ resource \"aws_security_group\" \"ec2\" {\n resource \"aws_security_group_rule\" \"ec2_http_alt_inbound\" {\n   security_group_id = \"${aws_security_group.ec2.id}\"\n   type              = \"ingress\"\n-  description       = \"Allow HTTP Alt Inbound from ELB Security Group\"\n+  description       = \"Allow HTTP Alt Inbound from LB Security Group\"\n \n   from_port                = 8080\n   to_port                  = 8080\n   protocol                 = \"tcp\"\n-  source_security_group_id = \"${aws_security_group.elb.id}\"\n+  source_security_group_id = \"${aws_security_group.lb.id}\"\n }"
      },
      {
        "filename": "terraform/elb.tf",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "status": "removed",
        "patch": "@@ -1,68 +0,0 @@\n-resource \"random_id\" \"lb\" {\n-  byte_length = 2\n-}\n-\n-resource \"aws_elb\" \"lb\" {\n-  name            = \"${var.name_prefix}lb-${random_id.lb.hex}\"\n-  subnets         = [\"${var.subnets}\"]\n-  security_groups = [\"${aws_security_group.elb.id}\"]\n-\n-  listener {\n-    instance_port     = 8080\n-    instance_protocol = \"http\"\n-    lb_port           = 80\n-    lb_protocol       = \"http\"\n-  }\n-\n-  health_check {\n-    healthy_threshold   = 3\n-    unhealthy_threshold = 2\n-    timeout             = 3\n-    target              = \"HTTP:8080/health\"\n-    interval            = 30\n-  }\n-\n-  cross_zone_load_balancing   = true\n-  idle_timeout                = 300\n-  connection_draining         = true\n-  connection_draining_timeout = 400\n-\n-  tags {\n-    Name = \"${var.name_prefix}-lb\"\n-  }\n-\n-  lifecycle {\n-    create_before_destroy = true\n-  }\n-}\n-\n-resource \"aws_security_group\" \"elb\" {\n-  name_prefix = \"${var.name_prefix}elb-\"\n-  vpc_id      = \"${var.vpc_id}\"\n-\n-  lifecycle {\n-    create_before_destroy = true\n-  }\n-}\n-\n-resource \"aws_security_group_rule\" \"elb_http_inbound\" {\n-  security_group_id = \"${aws_security_group.elb.id}\"\n-  type              = \"ingress\"\n-  description       = \"Allow HTTP Inbound from Internet\"\n-\n-  from_port   = 80\n-  to_port     = 80\n-  protocol    = \"tcp\"\n-  cidr_blocks = [\"0.0.0.0/0\"]\n-}\n-\n-resource \"aws_security_group_rule\" \"elb_http_alt_outbound\" {\n-  security_group_id = \"${aws_security_group.elb.id}\"\n-  type              = \"egress\"\n-  description       = \"Allow HTTP Alt Outbound to EC2 Security Group\"\n-\n-  from_port                = 8080\n-  to_port                  = 8080\n-  protocol                 = \"tcp\"\n-  source_security_group_id = \"${aws_security_group.ec2.id}\"\n-}"
      },
      {
        "filename": "terraform/lb.tf",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "status": "added",
        "patch": "@@ -0,0 +1,88 @@\n+resource \"random_id\" \"lb\" {\n+  byte_length = 2\n+}\n+\n+resource \"random_id\" \"target_group\" {\n+  byte_length = 2\n+}\n+\n+resource \"aws_lb\" \"lb\" {\n+  name            = \"${var.name_prefix}lb-${random_id.lb.hex}\"\n+  subnets         = [\"${var.subnets}\"]\n+  security_groups = [\"${aws_security_group.lb.id}\"]\n+\n+  enable_cross_zone_load_balancing = true\n+  idle_timeout                     = 300\n+\n+  tags {\n+    Name = \"${var.name_prefix}-lb\"\n+  }\n+\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n+}\n+\n+resource \"aws_lb_listener\" \"l\" {\n+  load_balancer_arn = \"${aws_lb.lb.arn}\"\n+  port              = \"80\"\n+  protocol          = \"HTTP\"\n+\n+  default_action {\n+    type             = \"forward\"\n+    target_group_arn = \"${aws_lb_target_group.g.arn}\"\n+  }\n+\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n+}\n+\n+resource \"aws_lb_target_group\" \"g\" {\n+  name     = \"${var.name_prefix}tg-${random_id.target_group.hex}\"\n+  port     = 8080\n+  protocol = \"HTTP\"\n+  vpc_id   = \"${var.vpc_id}\"\n+\n+  health_check {\n+    healthy_threshold   = 3\n+    unhealthy_threshold = 2\n+    path                = \"/health\"\n+    matcher             = \"200\"\n+  }\n+\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n+}\n+\n+resource \"aws_security_group\" \"lb\" {\n+  name_prefix = \"${var.name_prefix}lb-\"\n+  vpc_id      = \"${var.vpc_id}\"\n+\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n+}\n+\n+resource \"aws_security_group_rule\" \"lb_http_inbound\" {\n+  security_group_id = \"${aws_security_group.lb.id}\"\n+  type              = \"ingress\"\n+  description       = \"Allow HTTP Inbound from Internet\"\n+\n+  from_port   = 80\n+  to_port     = 80\n+  protocol    = \"tcp\"\n+  cidr_blocks = [\"0.0.0.0/0\"]\n+}\n+\n+resource \"aws_security_group_rule\" \"lb_http_alt_outbound\" {\n+  security_group_id = \"${aws_security_group.lb.id}\"\n+  type              = \"egress\"\n+  description       = \"Allow HTTP Alt Outbound to EC2 Security Group\"\n+\n+  from_port                = 8080\n+  to_port                  = 8080\n+  protocol                 = \"tcp\"\n+  source_security_group_id = \"${aws_security_group.ec2.id}\"\n+}"
      },
      {
        "filename": "terraform/outputs.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,3 +1,3 @@\n output \"url\" {\n-  value = \"${aws_elb.lb.dns_name}\"\n+  value = \"${aws_lb.lb.dns_name}\"\n }"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["aws", "use_alb"],
    "notes": ""
  },
  {
    "url": "https://github.com/aaaaasam/azure/commit/c7bc0ce6f3fcaffcbbe7753f1a9d8437809bc167",
    "files": [
      {
        "filename": "terraform/buildahubnetworkenv/main.tf",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -1,3 +1,6 @@\n+data \"azurerm_subscription\" \"current\" {\n+}\n+\n locals {\n   region_and_CIDR = {\n     \"eastasia\" = \"10.0.0.0/24\"\n@@ -17,14 +20,14 @@ locals {\n     \"vm_name_format\" = \"test-vm-%s-01\"\n   }\n   defaultsubnetname = \"DefaultSubnet\"\n-  vmsize = \"Standard_E4s_v4\"\n+  vmsize = \"Standard_B1s\"\n   vmadmin = \"sam\"\n   vmadminpass = \"Abc123456789!\"\n   location_list = {\n     \"main\" = \"eastasia\"\n     \"secondary\" = [\"southeastasia\", \"southafricanorth\", \"brazilsouth\", \"southcentralus\", \"uaenorth\"]\n   }\n-  subscription_id = \"4b3f41fa-b066-4ffa-92e5-093d8669f29c\"\n+  subscription_id = data.azurerm_subscription.current.subscription_id\n }\n \n terraform {\n@@ -40,10 +43,11 @@ terraform {\n provider \"azurerm\" {\n   features {}\n \n-  subscription_id = \"4b3f41fa-b066-4ffa-92e5-093d8669f29c\"\n-  client_id       = \"7c0ae36b-ac2b-49dc-8aeb-e5d4e13d7778\"\n-  client_secret   = \"XykTS.kaI3peiET~-Uuhx.m4vJcEVIqk9V\"\n-  tenant_id       = \"2cc5e5e8-0383-4da4-951e-51c19e2db9c0\"\n+# Delete Azure account access info to avoid leaking\n+  # subscription_id = \" \"\n+  # client_id       = \" \"\n+  # client_secret   = \" \"\n+  # tenant_id       = \" \"\n   # Use azure web shell run this command to generate Authtication key\uff0c and the above authtication key has been deleted.  -> az ad sp create-for-rbac\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["azure", "cheaper_instance"],
    "notes": "Move from Standard_E4s_v4 to Standard_B1s"
  },
  {
    "url": "https://github.com/Hapag-Lloyd/terraform-aws-bastion-host-ssm/commit/516075e2987bdd1063f22768d451c1c1eb647175",
    "files": [
      {
        "filename": "README.md",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -135,9 +135,12 @@ way you can access the database, Redis cluster, ... directly from your localhost\n | Name | Type |\n |------|------|\n | [aws_ami_copy.latest_amazon_linux](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ami_copy) | resource |\n-| [aws_autoscaling_group.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_group) | resource |\n-| [aws_autoscaling_schedule.down](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_schedule) | resource |\n-| [aws_autoscaling_schedule.up](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_schedule) | resource |\n+| [aws_autoscaling_group.on_demand](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_group) | resource |\n+| [aws_autoscaling_group.on_spot](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_group) | resource |\n+| [aws_autoscaling_schedule.on_demand_down](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_schedule) | resource |\n+| [aws_autoscaling_schedule.on_demand_up](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_schedule) | resource |\n+| [aws_autoscaling_schedule.on_spot_down](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_schedule) | resource |\n+| [aws_autoscaling_schedule.on_spot_up](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_schedule) | resource |\n | [aws_iam_policy.access_bastion](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy) | resource |\n | [aws_iam_role.access_bastion](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role) | resource |\n | [aws_iam_role_policy_attachment.access_bastion](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy_attachment) | resource |\n@@ -158,7 +161,7 @@ way you can access the database, Redis cluster, ... directly from your localhost\n | <a name=\"input_egress_open_tcp_ports\"></a> [egress\\_open\\_tcp\\_ports](#input\\_egress\\_open\\_tcp\\_ports) | The list of TCP ports to open for outgoing traffic. | `list(number)` | n/a | yes |\n | <a name=\"input_iam_role_path\"></a> [iam\\_role\\_path](#input\\_iam\\_role\\_path) | Role path for the created bastion instance profile. Must end with '/' | `string` | `\"/\"` | no |\n | <a name=\"input_iam_user_arn\"></a> [iam\\_user\\_arn](#input\\_iam\\_user\\_arn) | ARN of the user who is allowed to assume the role giving access to the bastion host. | `string` | n/a | yes |\n-| <a name=\"input_instance\"></a> [instance](#input\\_instance) | Defines the basic parameters for the EC2 instance used as Bastion host | <pre>object({<br>    type              = string # EC2 instance type<br>    root_volume_size  = number # in GB<br>    enable_monitoring = bool<br>  })</pre> | <pre>{<br>  \"enable_monitoring\": false,<br>  \"root_volume_size\": 8,<br>  \"type\": \"t3.nano\"<br>}</pre> | no |\n+| <a name=\"input_instance\"></a> [instance](#input\\_instance) | Defines the basic parameters for the EC2 instance used as Bastion host | <pre>object({<br>    type              = string # EC2 instance type<br>    desired_capacity  = number # number of EC2 instances to run<br>    root_volume_size  = number # in GB<br>    enable_monitoring = bool<br><br>    enable_spot = bool<br>  })</pre> | <pre>{<br>  \"desired_capacity\": 1,<br>  \"enable_monitoring\": false,<br>  \"enable_spot\": false,<br>  \"root_volume_size\": 8,<br>  \"type\": \"t3.nano\"<br>}</pre> | no |\n | <a name=\"input_resource_names\"></a> [resource\\_names](#input\\_resource\\_names) | Settings for generating resource names. Set the prefix and the separator according to your company style guide. | <pre>object({<br>    prefix    = string<br>    separator = string<br>  })</pre> | <pre>{<br>  \"prefix\": \"bastion\",<br>  \"separator\": \"-\"<br>}</pre> | no |\n | <a name=\"input_schedule\"></a> [schedule](#input\\_schedule) | Defines when to start and stop the instances. Use 'start' and 'stop' with a cron expression and add the 'time\\_zone'. | <pre>object({<br>    start     = string<br>    stop      = string<br>    time_zone = string<br>  })</pre> | `null` | no |\n | <a name=\"input_subnet_ids\"></a> [subnet\\_ids](#input\\_subnet\\_ids) | The subnets to place the bastion in. | `list(string)` | n/a | yes |"
      },
      {
        "filename": "autoscaling.tf",
        "additions": 132,
        "deletions": 0,
        "changes": 132,
        "status": "added",
        "patch": "@@ -0,0 +1,132 @@\n+resource \"aws_autoscaling_group\" \"on_demand\" {\n+  count = var.instance.enable_spot ? 0 : 1\n+\n+  name = var.resource_names[\"prefix\"]\n+\n+  vpc_zone_identifier = var.subnet_ids\n+\n+  min_size         = 1\n+  desired_capacity = var.instance.desired_capacity\n+  max_size         = var.instance.desired_capacity\n+  force_delete     = false\n+\n+  health_check_type         = \"EC2\"\n+  health_check_grace_period = 120\n+\n+  termination_policies = [\"OldestInstance\"]\n+  launch_configuration = aws_launch_configuration.this.id\n+\n+  dynamic \"tag\" {\n+    for_each = local.asg_tags\n+\n+    content {\n+      key                 = tag.key\n+      value               = tag.value\n+      propagate_at_launch = true\n+    }\n+  }\n+\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n+\n+  depends_on = [aws_launch_configuration.this]\n+}\n+\n+resource \"aws_autoscaling_group\" \"on_spot\" {\n+  count = var.instance.enable_spot ? 1 : 0\n+\n+  name = var.resource_names[\"prefix\"]\n+\n+  vpc_zone_identifier = var.subnet_ids\n+\n+  min_size         = 1\n+  desired_capacity = var.instance.desired_capacity\n+  max_size         = var.instance.desired_capacity\n+  force_delete     = false\n+\n+  health_check_type         = \"EC2\"\n+  health_check_grace_period = 120\n+\n+  termination_policies = [\"OldestInstance\"]\n+\n+  mixed_instances_policy {\n+    instances_distribution {\n+      on_demand_percentage_above_base_capacity = 0\n+      on_demand_base_capacity                  = 0\n+    }\n+\n+    launch_template {\n+      launch_template_specification {\n+        launch_template_id = aws_launch_template.manual_start.id\n+        version            = \"$Latest\"\n+      }\n+    }\n+  }\n+\n+  dynamic \"tag\" {\n+    for_each = local.asg_tags\n+\n+    content {\n+      key                 = tag.key\n+      value               = tag.value\n+      propagate_at_launch = true\n+    }\n+  }\n+\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n+}\n+\n+resource \"aws_autoscaling_schedule\" \"on_demand_up\" {\n+  count = var.schedule != null && !var.instance.enable_spot ? 1 : 0\n+\n+  scheduled_action_name = \"${local.resource_prefix_with_separator}start\"\n+  recurrence            = var.schedule[\"start\"]\n+  time_zone             = var.schedule[\"time_zone\"]\n+\n+  min_size               = 1\n+  max_size               = var.instance.desired_capacity\n+  desired_capacity       = var.instance.desired_capacity\n+  autoscaling_group_name = aws_autoscaling_group.on_demand[0].name\n+}\n+\n+resource \"aws_autoscaling_schedule\" \"on_demand_down\" {\n+  count = var.schedule != null && !var.instance.enable_spot ? 1 : 0\n+\n+  scheduled_action_name = \"${local.resource_prefix_with_separator}stop\"\n+  recurrence            = var.schedule[\"stop\"]\n+  time_zone             = var.schedule[\"time_zone\"]\n+\n+  min_size               = 0\n+  max_size               = 0\n+  desired_capacity       = 0\n+  autoscaling_group_name = aws_autoscaling_group.on_demand[0].name\n+}\n+\n+resource \"aws_autoscaling_schedule\" \"on_spot_up\" {\n+  count = var.schedule != null && var.instance.enable_spot ? 1 : 0\n+\n+  scheduled_action_name = \"${local.resource_prefix_with_separator}start\"\n+  recurrence            = var.schedule[\"start\"]\n+  time_zone             = var.schedule[\"time_zone\"]\n+\n+  min_size               = 1\n+  max_size               = var.instance.desired_capacity\n+  desired_capacity       = var.instance.desired_capacity\n+  autoscaling_group_name = aws_autoscaling_group.on_spot[0].name\n+}\n+\n+resource \"aws_autoscaling_schedule\" \"on_spot_down\" {\n+  count = var.schedule != null && var.instance.enable_spot ? 1 : 0\n+\n+  scheduled_action_name = \"${local.resource_prefix_with_separator}stop\"\n+  recurrence            = var.schedule[\"stop\"]\n+  time_zone             = var.schedule[\"time_zone\"]\n+\n+  min_size               = 0\n+  max_size               = 0\n+  desired_capacity       = 0\n+  autoscaling_group_name = aws_autoscaling_group.on_spot[0].name\n+}"
      },
      {
        "filename": "examples/full/main.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -11,8 +11,11 @@ module \"bastion_host\" {\n \n   instance = {\n     type              = \"t3.nano\"\n+    desired_capacity  = 1\n     root_volume_size  = 8\n     enable_monitoring = false\n+\n+    enable_spot = false\n   }\n \n   resource_names = {"
      },
      {
        "filename": "examples/spot/README.md",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "added",
        "patch": "@@ -0,0 +1,2 @@\n+# Simple Example\n+The easiest way to use this module, simple and straight forward."
      },
      {
        "filename": "examples/spot/main.tf",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "status": "added",
        "patch": "@@ -0,0 +1,47 @@\n+module \"bastion_host\" {\n+  source = \"../../\"\n+\n+  egress_open_tcp_ports = [3306, 5432]\n+\n+  iam_user_arn = module.bastion_user.iam_user_arn\n+\n+  instance = {\n+    type              = \"t3.nano\"\n+    desired_capacity  = 3\n+    root_volume_size  = 8\n+    enable_monitoring = false\n+\n+    enable_spot = true\n+  }\n+\n+  vpc_id     = module.vpc.vpc_id\n+  subnet_ids = module.vpc.private_subnets\n+}\n+\n+data \"aws_availability_zones\" \"available\" {\n+  state = \"available\"\n+}\n+\n+module \"vpc\" {\n+  source  = \"terraform-aws-modules/vpc/aws\"\n+  version = \"2.70\"\n+\n+  name = \"my-vpc\"\n+  cidr = \"10.214.0.0/16\"\n+\n+  azs             = data.aws_availability_zones.available.names\n+  private_subnets = [\"10.214.1.0/24\", \"10.214.2.0/24\", \"10.214.3.0/24\"]\n+\n+  map_public_ip_on_launch = false\n+}\n+\n+module \"bastion_user\" {\n+  source  = \"terraform-aws-modules/iam/aws//modules/iam-user\"\n+  version = \"4.15.1\"\n+\n+  name = \"bastion\"\n+\n+  password_reset_required       = false\n+  create_iam_user_login_profile = false\n+  force_destroy                 = true\n+}"
      },
      {
        "filename": "examples/spot/provider.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+terraform {\n+  required_providers {\n+    aws = {\n+      source  = \"hashicorp/aws\"\n+      version = \"3.53.0\"\n+    }\n+  }\n+}\n+\n+provider \"aws\" {\n+  region = \"eu-central-1\"\n+}"
      },
      {
        "filename": "main.tf",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "status": "modified",
        "patch": "@@ -144,59 +144,3 @@ resource \"aws_launch_template\" \"manual_start\" {\n     http_put_response_hop_limit = 2\n   }\n }\n-\n-resource \"aws_autoscaling_group\" \"this\" {\n-  name = var.resource_names[\"prefix\"]\n-\n-  vpc_zone_identifier = var.subnet_ids\n-\n-  min_size     = 1\n-  max_size     = 1\n-  force_delete = false\n-\n-  health_check_type         = \"EC2\"\n-  health_check_grace_period = 120\n-\n-  termination_policies = [\"OldestInstance\"]\n-  launch_configuration = aws_launch_configuration.this.id\n-\n-  dynamic \"tag\" {\n-    for_each = local.asg_tags\n-\n-    content {\n-      key                 = tag.key\n-      value               = tag.value\n-      propagate_at_launch = true\n-    }\n-  }\n-\n-  lifecycle {\n-    create_before_destroy = true\n-  }\n-}\n-\n-resource \"aws_autoscaling_schedule\" \"up\" {\n-  count = var.schedule == null ? 0 : 1\n-\n-  scheduled_action_name = \"${local.resource_prefix_with_separator}start\"\n-  recurrence            = var.schedule[\"start\"]\n-  time_zone             = var.schedule[\"time_zone\"]\n-\n-  min_size               = 1\n-  max_size               = 1\n-  desired_capacity       = 1\n-  autoscaling_group_name = aws_autoscaling_group.this.name\n-}\n-\n-resource \"aws_autoscaling_schedule\" \"down\" {\n-  count = var.schedule == null ? 0 : 1\n-\n-  scheduled_action_name = \"${local.resource_prefix_with_separator}stop\"\n-  recurrence            = var.schedule[\"stop\"]\n-  time_zone             = var.schedule[\"time_zone\"]\n-\n-  min_size               = 0\n-  max_size               = 0\n-  desired_capacity       = 0\n-  autoscaling_group_name = aws_autoscaling_group.this.name\n-}"
      },
      {
        "filename": "variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -60,15 +60,21 @@ variable \"resource_names\" {\n variable \"instance\" {\n   type = object({\n     type              = string # EC2 instance type\n+    desired_capacity  = number # number of EC2 instances to run\n     root_volume_size  = number # in GB\n     enable_monitoring = bool\n+\n+    enable_spot = bool\n   })\n   description = \"Defines the basic parameters for the EC2 instance used as Bastion host\"\n \n   default = {\n     type              = \"t3.nano\"\n+    desired_capacity  = 1\n     root_volume_size  = 8\n     enable_monitoring = false\n+\n+    enable_spot = false\n   }\n }\n "
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["aws", "use_spot_instance"],
    "notes": "Add the ability to configure Spot instances and autoscaling groups"
  },
  {
    "url": "https://github.com/Hapag-Lloyd/terraform-aws-bastion-host-ssm/commit/840ed0938bea8867caba921446b8a77a2f1c9e7d",
    "files": [
      {
        "filename": "README.md",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -9,18 +9,18 @@ can be realized by the user by creating multiple connections to the bastion host\n \n Check the `examples` directory for the module usage.\n \n-## Cost Estimation (1.7.0)\n+## Cost Estimation (1.9.1)\n \n ```\n  Name                                                   Monthly Qty  Unit   Monthly Cost\n \n- module.bastion_host.aws_autoscaling_group.this\n- \u2514\u2500 module.bastion_host.aws_launch_configuration.this\n-    \u251c\u2500 Instance usage (Linux/UNIX, on-demand, t3.nano)          730  hours         $4.38\n+ module.bastion_host.aws_autoscaling_group.on_spot[0]\n+ \u2514\u2500 module.bastion_host.aws_launch_template.manual_start\n+    \u2514\u2500 Instance usage (Linux/UNIX, spot, t3.nano)               1,460  hours         $2.63\n     \u2514\u2500 root_block_device\n-       \u2514\u2500 Storage (general purpose SSD, gp3)                      8  GB            $0.76\n+       \u2514\u2500 Storage (general purpose SSD, gp3)                       16  GB            $1.52\n \n- OVERALL TOTAL                                                                     $5.14\n+ OVERALL TOTAL                                                                       $4.15\n ```\n \n ## Features"
      },
      {
        "filename": "examples/spot/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ module \"bastion_host\" {\n \n   instance = {\n     type              = \"t3.nano\"\n-    desired_capacity  = 3\n+    desired_capacity  = 2\n     root_volume_size  = 8\n     enable_monitoring = false\n "
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ExpediaGroup/apiary-data-lake/commit/47e62f2fc73a96611606cd619c084d1ded9d844d",
    "files": [
      {
        "filename": "CHANGELOG.md",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -3,6 +3,12 @@ All notable changes to this project will be documented in this file.\n \n The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/) and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n \n+## [2.0.0] - TBD\n+\n+### Added\n+- Option to configure S3 storage class for cost optimization.\n+- Change in structure of `apiary_managed_schemas` variable from list to list of maps.\n+\n ## [1.1.0] - TBD\n \n ### Added"
      },
      {
        "filename": "VARIABLES.md",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@\n | apiary_domain_name | Apiary domain name for Route 53. | string | `` | no |\n | apiary_log_bucket | Bucket for Apiary logs. | string | - | yes |\n | apiary_log_prefix | Prefix for Apiary logs. | string | `` | no |\n-| apiary_managed_schemas | Schema names from which S3 bucket names will be derived, corresponding S3 bucket will be named as apiary_instance-aws_account-aws_region-schema_name. | list | `<list>` | no |\n+| apiary_managed_schemas | Schema names from which S3 bucket names will be derived, corresponding S3 bucket will be named as apiary_instance-aws_account-aws_region-schema_name, along with S3 storage properties like storage class and number of days for transitions. For valid values for S3 Storage classes, Reference: https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#storage_class | list of map | `<list of map>` | no |\n | apiary_producer_iamroles | AWS IAM roles allowed write access to managed Apiary S3 buckets. | map | `<map>` | no |\n | apiary_rds_additional_sg | Comma-separated string containing additional security groups to attach to RDS. | list | `<list>` | no |\n | apiary_shared_schemas | Schema names which are accessible from read-only metastore, default is all schemas. | list | `<list>` | no |\n@@ -57,4 +57,6 @@\n | ranger_audit_solr_url | Ranger Solr audit provider configuration. | string | `` | no |\n | ranger_policy_manager_url | Ranger admin URL to synchronize policies. | string | `` | no |\n | secondary_vpcs | List of VPCs to associate with Service Discovery namespace. | list | `<list>` | no |\n+| s3_lifecycle_policy_transition_period | Number of days for transition to a different storage class using lifecycle policy. | string  | `30` | no |\n+| s3_storage_class | Destination S3 storage class for transition in the lifecycle policy. | string  | `INTELLIGENT_TIERING` | no |\n | vpc_id | VPC ID. | string | - | yes |"
      },
      {
        "filename": "common.tf",
        "additions": 26,
        "deletions": 5,
        "changes": 31,
        "status": "modified",
        "patch": "@@ -5,11 +5,12 @@\n  */\n \n locals {\n-  instance_alias         = \"${ var.instance_name == \"\" ? \"apiary\" : format(\"apiary-%s\",var.instance_name) }\"\n-  enable_route53_records = \"${ var.apiary_domain_name == \"\" ? \"0\" : \"1\" }\"\n-  apiary_managed_schemas = \"${ split(\",\",replace(join(\",\",var.apiary_managed_schemas),\"_\",\"-\")) }\"\n-  apiary_data_buckets    = \"${ formatlist(\"%s-%s-%s-%s\",local.instance_alias,data.aws_caller_identity.current.account_id,var.aws_region,local.apiary_managed_schemas) }\"\n-  gluedb_prefix          = \"${ var.instance_name == \"\" ? \"\" : \"${var.instance_name}_\" }\"\n+  instance_alias                       = \"${ var.instance_name == \"\" ? \"apiary\" : format(\"apiary-%s\",var.instance_name) }\"\n+  enable_route53_records               = \"${ var.apiary_domain_name == \"\" ? \"0\" : \"1\" }\"\n+  apiary_managed_schema_names_original = [\"${data.template_file.schema_names.*.rendered}\"]\n+  apiary_managed_schema_names_replaced = [\"${data.template_file.schema_names_replaced.*.rendered}\"]\n+  apiary_data_buckets                  = \"${ formatlist(\"%s-%s-%s-%s\",local.instance_alias,data.aws_caller_identity.current.account_id,var.aws_region,local.apiary_managed_schema_names_replaced) }\"\n+  gluedb_prefix                        = \"${ var.instance_name == \"\" ? \"\" : \"${var.instance_name}_\" }\"\n }\n \n data \"aws_caller_identity\" \"current\" {}\n@@ -23,3 +24,23 @@ data \"aws_route53_zone\" \"apiary_zone\" {\n   name   = \"${var.apiary_domain_name}\"\n   vpc_id = \"${var.vpc_id}\"\n }\n+\n+data \"template_file\" \"schema_names\" {\n+  count    = \"${length(var.apiary_managed_schemas)}\"\n+  template = \"${lookup(var.apiary_managed_schemas[count.index], \"schema_name\")}\"\n+}\n+\n+data \"template_file\" \"schema_names_replaced\" {\n+  count    = \"${length(var.apiary_managed_schemas)}\"\n+  template = \"${replace(lookup(var.apiary_managed_schemas[count.index], \"schema_name\"),\"_\",\"-\")}\"\n+}\n+\n+data \"template_file\" \"s3_lifecycle_policy_transition_period\" {\n+  count    = \"${length(var.apiary_managed_schemas)}\"\n+  template = \"${lookup(var.apiary_managed_schemas[count.index], \"s3_lifecycle_policy_transition_period\", var.s3_lifecycle_policy_transition_period)}\"\n+}\n+\n+data \"template_file\" \"s3_storage_class\" {\n+  count    = \"${length(var.apiary_managed_schemas)}\"\n+  template = \"${lookup(var.apiary_managed_schemas[count.index], \"s3_storage_class\", var.s3_storage_class)}\"\n+}"
      },
      {
        "filename": "s3.tf",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -13,12 +13,12 @@ data \"template_file\" \"bucket_policy\" {\n \n   vars {\n     #if apiary_shared_schemas is empty or contains current schema, allow customer accounts to access this bucket.\n-    customer_principal = \"${ length(var.apiary_shared_schemas) == 0 || contains(var.apiary_shared_schemas, element(concat(var.apiary_managed_schemas,list(\"\")),count.index)) ?\n+    customer_principal = \"${ length(var.apiary_shared_schemas) == 0 || contains(var.apiary_shared_schemas, element(concat(local.apiary_managed_schema_names_original,list(\"\")),count.index)) ?\n                              join(\"\\\",\\\"\", formatlist(\"arn:aws:iam::%s:root\",var.apiary_customer_accounts)) :\n                              \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\" }\"\n \n     bucket_name       = \"${local.apiary_data_buckets[count.index]}\"\n-    producer_iamroles = \"${replace(lookup(var.apiary_producer_iamroles,element(concat(var.apiary_managed_schemas,list(\"\")),count.index),\"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"),\",\",\"\\\",\\\"\")}\"\n+    producer_iamroles = \"${replace(lookup(var.apiary_producer_iamroles,element(concat(local.apiary_managed_schema_names_original,list(\"\")),count.index),\"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"),\",\",\"\\\",\\\"\")}\"\n   }\n }\n \n@@ -37,6 +37,16 @@ resource \"aws_s3_bucket\" \"apiary_data_bucket\" {\n     target_bucket = \"${var.apiary_log_bucket}\"\n     target_prefix = \"${var.apiary_log_prefix}${local.apiary_data_buckets[count.index]}/\"\n   }\n+\n+  lifecycle_rule {\n+    id      = \"cost_optimization\"\n+    enabled = true\n+\n+    transition {\n+      days          = \"${data.template_file.s3_lifecycle_policy_transition_period.*.rendered[count.index]}\"\n+      storage_class = \"${data.template_file.s3_storage_class.*.rendered[count.index]}\"\n+    }\n+  }\n }\n \n resource \"aws_s3_bucket_notification\" \"data_events\" {"
      },
      {
        "filename": "sns.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -29,7 +29,7 @@ POLICY\n \n resource \"aws_sns_topic\" \"apiary_data_events\" {\n   count = \"${ var.enable_data_events == \"\" ? 0 : length(var.apiary_managed_schemas) }\"\n-  name  = \"${local.instance_alias}-${local.apiary_managed_schemas[count.index]}-data-events\"\n+  name  = \"${local.instance_alias}-${local.apiary_managed_schema_names_replaced[count.index]}-data-events\"\n \n   policy = <<POLICY\n {\n@@ -38,7 +38,7 @@ resource \"aws_sns_topic\" \"apiary_data_events\" {\n         \"Effect\": \"Allow\",\n         \"Principal\": {\"AWS\":\"*\"},\n         \"Action\": \"SNS:Publish\",\n-        \"Resource\": \"arn:aws:sns:*:*:${local.instance_alias}-${local.apiary_managed_schemas[count.index]}-data-events\",\n+        \"Resource\": \"arn:aws:sns:*:*:${local.instance_alias}-${local.apiary_managed_schema_names_replaced[count.index]}-data-events\",\n         \"Condition\":{\n             \"ArnLike\":{\"aws:SourceArn\":\"${aws_s3_bucket.apiary_data_bucket.*.arn[count.index]}\"}\n         }"
      },
      {
        "filename": "templates.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -20,7 +20,7 @@ data \"template_file\" \"hms_readwrite\" {\n     hive_metastore_log_level   = \"${var.hms_log_level}\"\n     nofile_ulimit              = \"${var.hms_nofile_ulimit}\"\n     enable_metrics             = \"${var.enable_hive_metastore_metrics}\"\n-    managed_schemas            = \"${join(\",\",var.apiary_managed_schemas)}\"\n+    managed_schemas            = \"${join(\",\",local.apiary_managed_schema_names_original)}\"\n     instance_name              = \"${local.instance_alias}\"\n     sns_arn                    = \"${ var.enable_metadata_events == \"\" ? \"\" : join(\"\",aws_sns_topic.apiary_metadata_events.*.arn) }\"\n     table_param_filter         = \"${ var.enable_metadata_events == \"\" ? \"\" : var.table_param_filter }\""
      },
      {
        "filename": "variables.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -332,3 +332,15 @@ variable \"docker_registry_auth_secret_name\" {\n   type        = \"string\"\n   default     = \"\"\n }\n+\n+variable \"s3_storage_class\" {\n+  description = \"S3 storage class after transition using lifecycle policy\"\n+  type        = \"string\"\n+  default     = \"INTELLIGENT_TIERING\"\n+}\n+\n+variable \"s3_lifecycle_policy_transition_period\" {\n+  description = \"S3 Lifecycle Policy number of days for Transition rule\"\n+  type        = \"string\"\n+  default     = \"30\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature",
      "storage"
    ],
    "codes": ["aws", "add_lifecycle_rule"],
    "notes": "Add a (configurable) lifecycle rule to change storage class after 30 days"
  },
  {
    "url": "https://github.com/nmaupu/auto-gcp/commit/ef1df1044df317c78987f7f8398b4e45f5a3ee0a",
    "files": [
      {
        "filename": "k8s/charts/Makefile",
        "additions": 18,
        "deletions": 10,
        "changes": 28,
        "status": "modified",
        "patch": "@@ -15,7 +15,7 @@ DB_BACKUP_OPTS  += --set secret.key=mysql-root-password\n default: upgrade-all\n \n .PHONY: upgrade-all\n-upgrade-all: helm-init\n+upgrade-all:\n \tmake ingress-watchers\n \tmake ingress-controllers\n \tmake kube-ops-view\n@@ -39,7 +39,7 @@ ingress-controllers: check-param-priv1-domain\n #\thelm upgrade --install --namespace kube-system --set ingress.host=kov.$(PRIV1_DOMAIN) romantic-euler kube-ops-view\n \n .PHONY: mysql\n-mysql: check-vault gke-storage-ssd\n+mysql: check-vault gke-storage-ssd ns-db\n \thelm upgrade --install \\\n \t  --namespace $(DB_NAMESPACE) \\\n \t  --set mysqlRootPassword=$(shell vault read -field password secret/gce/mysql) \\\n@@ -59,7 +59,7 @@ mysql: check-vault gke-storage-ssd\n \t  mysql-backup\n \n .PHONY: dolibarr\n-dolibarr: gke-storage-ssd\n+dolibarr: gke-storage-ssd ns-tools ns-db\n \thelm upgrade --install \\\n \t  --namespace tools \\\n \t  --set image.tag=8.0.2 \\\n@@ -79,7 +79,7 @@ dolibarr: gke-storage-ssd\n \t  mysql-backup\n \n .PHONY: compte\n-compte: check-vault\n+compte: check-vault ns-tools ns-db\n \thelm upgrade --install \\\n \t  --namespace tools \\\n \t  --set ingress.hosts=\"$(shell vault read -field appurl secret/gce/mysql-compte)\" \\\n@@ -99,25 +99,33 @@ compte: check-vault\n \t  mysql-backup\n \n .PHONY: phpmyadmin\n-phpmyadmin: check-param-priv1-domain\n+phpmyadmin: check-param-priv1-domain ns-tools\n \thelm upgrade --install \\\n \t  --namespace tools \\\n \t  --set ingress.host=phpmyadmin.$(PRIV1_DOMAIN) \\\n \t  --set pma.host=mysql.$(DB_NAMESPACE) \\\n \t  cocky-cori \\\n \t  phpmyadmin\n \n-.PHONY: helm-init\n-helm-init:\n-\tkubectl apply -f tiller-rbac.yaml\n-\thelm init --upgrade --service-account=tiller\n-\tsleep 8\n+#.PHONY: helm-init\n+#helm-init:\n+#\tkubectl apply -f tiller-rbac.yaml\n+#\thelm init --upgrade --service-account=tiller\n+#\tsleep 8\n \n .PHONY: gke-storage-ssd\n gke-storage-ssd:\n \t# GKE SSD Storage class\n \tkubectl apply -f gke-storage-ssd.yaml\n \n+.PHONY: ns-tools\n+ns-tools:\n+\tkubectl create ns tools || true\n+\n+.PHONY: ns-db\n+ns-db:\n+\tkubectl create ns $(DB_NAMESPACE) || true\n+\n .PHONY: run-mysql-client\n run-mysql-client:\n \tkubectl run --rm --namespace $(DB_NAMESPACE) -i --tty mysql-client --image=docker.io/nmaupu/mysql-client:1.1 --overrides=' \\"
      },
      {
        "filename": "k8s/charts/kube-ingwatcher/templates/deployment.yaml",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-apiVersion: extensions/v1beta1\n+apiVersion: apps/v1\n kind: Deployment\n metadata:\n   name: {{ template \"kube-ingwatcher.fullname\" . }}\n@@ -11,6 +11,10 @@ metadata:\n     heritage: {{ .Release.Service }}\n spec:\n   replicas: {{ .Values.replicaCount }}\n+  selector:\n+    matchLabels:\n+      app: {{ template \"kube-ingwatcher.name\" . }}\n+      release: {{ .Release.Name }}\n   template:\n     metadata:\n       labels:"
      },
      {
        "filename": "k8s/charts/kube-ops-view/templates/kube-ops-view.yaml",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-apiVersion: extensions/v1beta1\n+apiVersion: apps/v1\n kind: Deployment\n metadata:\n   name: {{ template \"appFullName\" . }}-deploy\n@@ -9,6 +9,10 @@ metadata:\n     version: v{{ .Chart.Version }}\n spec:\n   replicas: 1\n+  selector:\n+    matchLabels:\n+      k8s-app: {{ template \"appName\" . }}\n+      version: v{{ .Chart.Version }}\n   template:\n     metadata:\n       labels:"
      },
      {
        "filename": "k8s/charts/phpmyadmin/templates/deployment.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n-apiVersion: apps/v1beta2\n+apiVersion: apps/v1\n kind: Deployment\n metadata:\n   name: {{ template \"phpmyadmin.fullname\" . }}"
      },
      {
        "filename": "k8s/charts/tiller-rbac.yaml",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "status": "removed",
        "patch": "@@ -1,19 +0,0 @@\n----\n-apiVersion: v1\n-kind: ServiceAccount\n-metadata:\n-  name: tiller\n-  namespace: kube-system\n----\n-apiVersion: rbac.authorization.k8s.io/v1beta1\n-kind: ClusterRoleBinding\n-metadata:\n-  name: tiller\n-roleRef:\n-  apiGroup: rbac.authorization.k8s.io\n-  kind: ClusterRole\n-  name: cluster-admin\n-subjects:\n-  - kind: ServiceAccount\n-    name: tiller\n-    namespace: kube-system"
      },
      {
        "filename": "k8s/charts/traefik/templates/deployment.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n ---\n+apiVersion: apps/v1\n kind: Deployment\n-apiVersion: extensions/v1beta1\n metadata:\n   name: {{ template \"traefik.fullname\" . }}\n   namespace: {{ .Release.Namespace }}"
      },
      {
        "filename": "terraform/modules/gke/container-cluster/main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,8 +1,9 @@\n resource \"google_container_cluster\" \"default\" {\n   name               = var.name\n-  location           = var.location\n+  location           = var.master_location\n   # Used instead of legacy additional_zones\n-  node_locations     = [\"${var.location}-c\"]\n+  node_locations     = var.nodes_location\n+\n   min_master_version = var.min_master_version\n   node_version       = var.node_version\n "
      },
      {
        "filename": "terraform/modules/gke/container-cluster/vars.tf",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -1,11 +1,17 @@\n-variable \"name\" {\n-  type        = string\n-  description = \"A name for the resource\"\n+# Cluster will be created multi-zonal but with a monozone master\n+# based on region_location variable\n+variable \"master_location\" {\n+  type = string\n+  description = \"Region/zone in which to create the cluster's control plane\"\n+}\n+variable \"nodes_location\" {\n+  type = list(string)\n+  description = \"Additional zones within the region in which to create nodes\"\n }\n \n-variable \"location\" {\n+variable \"name\" {\n   type        = string\n-  description = \"Location in which to install the cluster\"\n+  description = \"A name for the resource\"\n }\n \n variable \"min_master_version\" {"
      },
      {
        "filename": "terraform/projects/kube/gke.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -2,7 +2,8 @@ module \"gke\" {\n   source   = \"../../modules/gke/container-cluster\"\n   project  = data.terraform_remote_state.projects.outputs.kube_project_id\n   name     = var.gke_name\n-  location = var.region\n+  master_location = \"${var.region}-c\"\n+  nodes_location = [\"${var.region}-b\"]\n \n   min_master_version = var.gke_min_master_version\n   node_version       = var.gke_node_version\n@@ -11,15 +12,14 @@ module \"gke\" {\n   # to be recreated at each terraform apply.\n   # Using name seems to fix this...\n   network = module.network.name\n-\n   subnetwork = module.subnetwork.name\n }\n \n module \"gke-pool-1\" {\n   source       = \"../../modules/gke/node-pool\"\n   project      = data.terraform_remote_state.projects.outputs.kube_project_id\n   name_prefix  = \"np\"\n-  location     = var.region\n+  location     = \"${var.region}-c\" # Zone in which the cluster is installed\n   cluster      = module.gke.name\n   node_count   = var.gke_node_count\n   machine_type = var.gke_machine_type"
      },
      {
        "filename": "terraform/projects/kube/terraform.tfvars",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -9,11 +9,11 @@ subnetwork_name = \"kube-subnetwork\"\n cidr            = \"10.42.42.0/24\"\n \n gke_name               = \"nma-kube\"\n-gke_min_master_version = \"1.16.9-gke.6\"\n-gke_node_version       = \"1.16.9-gke.6\"\n+gke_min_master_version = \"1.16.10-gke.8\"\n+gke_node_version       = \"1.16.10-gke.8\"\n \n # Number of nodes by zone\n-gke_node_count   = \"3\"\n+gke_node_count   = \"2\"\n gke_machine_type = \"e2-medium\"\n gke_disk_size_gb = \"10\"\n gke_preemptible  = \"true\""
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jenkins-infra/aws/commit/4a9e2c05092acca34f0608394638776c75496a99",
    "files": [
      {
        "filename": "eks-cluster.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -33,9 +33,9 @@ module \"eks\" {\n   worker_groups = [\n     {\n       name                 = \"main-linux\"\n-      instance_type        = \"t3a.2xlarge\"\n-      asg_desired_capacity = 3\n-      asg_min_size         = 2\n+      instance_type        = \"m5a.4xlarge\"\n+      asg_desired_capacity = 1 # This value will be changed extrnally by the autoscaler helm chart, so we set it to the bare minimum here.\n+      asg_min_size         = 1\n       asg_max_size         = 50\n       public_ip            = false\n       kubelet_extra_args   = \"--node-labels=node.kubernetes.io/lifecycle=normal\""
      }
    ],
    "existing_codes": [
      "saving",
      "awareness",
      "storage"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit moves to a more expensive instance; the keyword 'cost' refers to the new instance costing 2x more"
  },
  {
    "url": "https://github.com/rbabyuk/terra/commit/beae899804779adf914c08f290c5d71b542c9ed1",
    "files": [
      {
        "filename": "test-vm/dev/dev.auto.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n zone = \"us-east1-b\"\n-machine_type = \"e2-medium\"\n+machine_type = \"e2-micro\"\n os_image = \"ubuntu-os-cloud/ubuntu-minimal-2004-lts\"\n listen_port = 8081\n project = \"\""
      },
      {
        "filename": "test-vm/prod/prod.auto.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n zone = \"us-east1-b\"\n-machine_type = \"e2-medium\"\n+machine_type = \"e2-micro\"\n os_image = \"ubuntu-os-cloud/ubuntu-minimal-1804-lts\"\n listen_port = 8081\n project = \"\""
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["gcp", "cheaper_instance"],
    "notes": "Move from e2-medium to e2-micro"
  },
  {
    "url": "https://github.com/ministryofjustice/hmpps-delius-core-terraform/commit/6e25b2cfb1cb80fd45ab6627a04e52735bb2fb5e",
    "files": [
      {
        "filename": "modules/ecs_service/ecs.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -162,6 +162,14 @@ resource \"aws_ecs_service\" \"service\" {\n     }\n   }\n \n+  dynamic \"ordered_placement_strategy\" {\n+    for_each = var.placement_strategy\n+    content {\n+      field = ordered_placement_strategy.value.field\n+      type  = ordered_placement_strategy.value.type\n+    }\n+  }\n+\n   service_registries {\n     registry_arn   = aws_service_discovery_service.web_svc_record.arn\n     container_name = var.service_name"
      },
      {
        "filename": "modules/ecs_service/variables.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -161,6 +161,24 @@ variable \"disable_scale_in\" {\n   default     = false\n }\n \n+variable \"placement_strategy\" {\n+  description = \"Service level strategy rules that are taken into consideration during task placement. List from top to bottom in order of precedence. Defaults to AZ-balanced binpack. See https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html\"\n+  type = list(object({\n+    field = string\n+    type  = string\n+  }))\n+  default = [\n+    {\n+      type  = \"spread\"\n+      field = \"attribute:ecs.availability-zone\"\n+    },\n+    {\n+      type  = \"binpack\"\n+      field = \"memory\"\n+    }\n+  ]\n+}\n+\n variable \"deregistration_delay\" {\n   description = \"Number of seconds to spend draining tasks\"\n   default     = 60"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "add_placement_strategy"],
    "notes": "The commit message mentions that adding placement strategies for ECS saves on EC2 costs"
  },
  {
    "url": "https://github.com/wellcomecollection/goobi-infrastructure/commit/271bf02f91bfe5e8fc7ea9f94bfe56fd49a8d8e0",
    "files": [
      {
        "filename": "infrastructure/modules/network/vpc_endpoints.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+data \"aws_vpc_endpoint_service\" \"s3\" {\n+  service = \"s3\"\n+}\n+\n+resource \"aws_vpc_endpoint\" \"s3\" {\n+  vpc_id          = aws_vpc.vpc.id\n+  service_name    = data.aws_vpc_endpoint_service.s3.service_name\n+  route_table_ids = aws_route_table.private_route_table.*.id\n+}"
      }
    ],
    "existing_codes": [
      "networking",
      "saving",
      "awareness"
    ],
    "codes": ["aws", "add_s3_vpc_endpoint"],
    "notes": "According to the commit message, the lack of a VPC endpoint for S3 has nontrivial cost"
  },
  {
    "url": "https://github.com/Leonard-Ta/Sample-Security-service-Terraform/commit/c16481a84d5823b65ce96bd811a265222385b43b",
    "files": [
      {
        "filename": "aws-security-hub-boostrap-and-operationalization/variables.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -102,10 +102,10 @@ variable \"ElasticSearch_Master_Instance_Type\" {\n   default = \"c4.large.elasticsearch\"\n }\n variable \"ElasticSearch_Domain_Instance_Count\" {\n-  default = \"2\"\n+  default = \"1\"\n }\n variable \"ElasticSearch_Master_Instance_Count\" {\n-  default = \"3\"\n+  default = \"1\"\n }\n variable \"Elasticsearch_Trusted_IP\" {\n   default = \"\"\n@@ -129,7 +129,7 @@ variable \"CloudTrail_Bucket_Prefix\" {\n   default = \"cis-cloudtrail-logs-bucket\"\n }\n variable \"Network_Resource_Count\" {\n-  default     = 3\n+  default     = 1\n   description = \"Amount of Network Resources Provisioned e.g. Subnets and Route Tables - Adjust for Regional AZ Count\"\n }\n variable \"CIS_VPC_CIDR\" {"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["azure", "cheaper_instance", "cheaper_disk_type"],
    "notes": "Move from Standard_D2s_v3 to Standard_DS1_v2"
  },
  {
    "url": "https://github.com/jjffggpp/jjffggpp/commit/0e69a9978eae9e3432de8f16c2ca1b38033c23a7",
    "files": [
      {
        "filename": "libvirt/terraform/README.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -120,6 +120,7 @@ with the needed package and try again.\n - **iscsi_image**: Source image of the machine hosting the iscsi target (sles15 or above) (only used if `iscsi` is used as a shared storage for fencing)\n - **ha_sap_deployment_repo**: Repository with HA and Salt formula packages. The latest RPM packages can be found at [https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/{YOUR OS VERSION}](https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/)\n - **additional_repos**: Additional repos to add to the guest machines.\n+- **scenario_type**: SAP HANA scenario type. Available options: `performance-optimized` and `cost-optimized`.\n - **provisioner**: Select the desired provisioner to configure the nodes. Salt is used by default: [salt](../../salt). Let it empty to disable the provisioning part.\n - **background**: Run the provisioning process in background finishing terraform execution.\n - **reg_code**: Registration code for the installed base product (Ex.: SLES for SAP). This parameter is optional. If informed, the system will be registered against the SUSE Customer Center."
      },
      {
        "filename": "libvirt/terraform/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -62,6 +62,7 @@ module \"hana_node\" {\n   reg_additional_modules = \"${var.reg_additional_modules}\"\n   additional_repos       = \"${var.additional_repos}\"\n   ha_sap_deployment_repo = \"${var.ha_sap_deployment_repo}\"\n+  scenario_type          = \"${var.scenario_type}\"\n   provisioner            = \"${var.provisioner}\"\n   background             = \"${var.background}\"\n }"
      },
      {
        "filename": "libvirt/terraform/modules/hana_node/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -18,6 +18,7 @@ module \"hana_node\" {\n \n provider: libvirt\n role: hana_node\n+scenario_type: ${var.scenario_type}\n hana_disk_device: /dev/vdb\n shared_storage_type: ${var.shared_storage_type}\n sbd_disk_device: \"${var.shared_storage_type == \"iscsi\" ? \"/dev/sda\" : \"/dev/vdc\"}\""
      },
      {
        "filename": "libvirt/terraform/modules/hana_node/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -94,6 +94,11 @@ variable \"hana_inst_folder\" {\n   type        = \"string\"\n }\n \n+variable \"scenario_type\" {\n+  description = \"Deployed scenario type. Available options: performance-optimized, cost-optimized\"\n+  default     = \"performance-optimized\"\n+}\n+\n variable \"provisioner\" {\n   description = \"Used provisioner option. Available options: salt. Let empty to not use any provisioner\"\n   default     = \"salt\""
      },
      {
        "filename": "libvirt/terraform/terraform.tfvars.example",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -25,5 +25,12 @@ ha_sap_deployment_repo = \"\"\n #    \"sle-module-containers/12/x86_64\" = \"\"\n #    \"sle-ha-geo/12.4/x86_64\" = \"<<REG_CODE>>\"\n #}\n+\n+# Cost optimized scenario\n+#scenario_type: \"cost-optimized\"\n+\n # To disable the provisioning process\n #provisioner = \"\"\n+\n+# Run provisioner execution in background\n+#background = true"
      },
      {
        "filename": "libvirt/terraform/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -91,6 +91,11 @@ variable \"ha_sap_deployment_repo\" {\n   type        = \"string\"\n }\n \n+variable \"scenario_type\" {\n+  description = \"Deployed scenario type. Available options: performance-optimized, cost-optimized\"\n+  default     = \"performance-optimized\"\n+}\n+\n variable \"provisioner\" {\n   description = \"Used provisioner option. Available options: salt. Let empty to not use any provisioner\"\n   default     = \"salt\""
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jjffggpp/jjffggpp/commit/948727c5b1e87b970a7a9dee4cd67bb84d19abf8",
    "files": [
      {
        "filename": "aws/terraform_salt/README.md",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -212,8 +212,9 @@ All this means that basically the default command `terraform apply` and be also\n * **cluster_ssh_pub**: SSH public key name (must match with the key copied in sshkeys folder)\n * **cluster_ssh_key**: SSH private key name (must match with the key copied in sshkeys folder)\n * **ha_sap_deployment_repo**: Repository with HA and Salt formula packages. The latest RPM packages can be found at [https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/{YOUR OS VERSION}](https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/)\n-- **provisioner**: select the desired provisioner to configure the nodes. Salt is used by default: [salt](../../salt). Let it empty to disable the provisioning part.\n-- **background**: run the provisioning process in background finishing terraform execution.\n+* **scenario_type**: SAP HANA scenario type. Available options: `performance-optimized` and `cost-optimized`.\n+* **provisioner**: select the desired provisioner to configure the nodes. Salt is used by default: [salt](../../salt). Let it empty to disable the provisioning part.\n+* **background**: run the provisioning process in background finishing terraform execution.\n * **reg_code**: registration code for the installed base product (Ex.: SLES for SAP). This parameter is optional. If informed, the system will be registered against the SUSE Customer Center.\n * **reg_email**: email to be associated with the system registration. This parameter is optional.\n * **reg_additional_modules**: additional optional modules and extensions to be registered (Ex.: Containers Module, HA module, Live Patching, etc). The variable is a key-value map, where the key is   the _module name_ and the value is the _registration code_. If the _registration code_ is not needed,  set an empty string as value. The module format must follow SUSEConnect convention:"
      },
      {
        "filename": "aws/terraform_salt/salt_provisioner.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -42,9 +42,10 @@ resource \"null_resource\" \"iscsi_provisioner\" {\n   provisioner \"file\" {\n     content = <<EOF\n provider: aws\n+role: iscsi_srv\n+scenario_type: ${var.scenario_type}\n iscsi_srv_ip: ${aws_instance.iscsisrv.private_ip}\n iscsidev: ${var.iscsidev}\n-role: iscsi_srv\n qa_mode: ${var.qa_mode}\n reg_code: ${var.reg_code}\n reg_email: ${var.reg_email}"
      },
      {
        "filename": "aws/terraform_salt/terraform.tfvars.example",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -68,6 +68,9 @@ ha_sap_deployment_repo = \"\"\n #    \"sle-ha-geo/12.4/x86_64\" = \"<<REG_CODE>>\"\n #}\n \n+# Cost optimized scenario\n+#scenario_type: \"cost-optimized\"\n+\n # To disable the provisioning process\n #provisioner = \"\"\n "
      },
      {
        "filename": "aws/terraform_salt/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -164,6 +164,11 @@ variable \"ha_sap_deployment_repo\" {\n   type        = \"string\"\n }\n \n+variable \"scenario_type\" {\n+  description = \"Deployed scenario type. Available options: performance-optimized, cost-optimized\"\n+  default     = \"performance-optimized\"\n+}\n+\n variable \"provisioner\" {\n   description = \"Used provisioner option. Available options: salt. Let empty to not use any provisioner\"\n   default     = \"salt\""
      },
      {
        "filename": "azure/terraform_salt/README.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -85,6 +85,7 @@ In the file [terraform.tfvars.example](terraform.tfvars.example) there are a num\n * **cluster_ssh_pub**: SSH public key name (must match with the key copied in sshkeys folder)\n * **cluster_ssh_key**: SSH private key name (must match with the key copied in sshkeys folder)\n * **ha_sap_deployment_repo**: Repository with HA and Salt formula packages. The latest RPM packages can be found at [https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/{YOUR OS VERSION}](https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/)\n+* **scenario_type**: SAP HANA scenario type. Available options: `performance-optimized` and `cost-optimized`.\n * **provisioner**: select the desired provisioner to configure the nodes. Salt is used by default: [salt](../../salt). Let it empty to disable the provisioning part.\n * **background**: run the provisioning process in background finishing terraform execution.\n * **reg_code**: registration code for the installed base product (Ex.: SLES for SAP). This parameter is optional. If informed, the system will be registered against the SUSE Customer Center."
      },
      {
        "filename": "azure/terraform_salt/salt_provisioner.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -43,6 +43,7 @@ resource \"null_resource\" \"iscsi_provisioner\" {\n     content = <<EOF\n provider: azure\n role: iscsi_srv\n+scenario_type: ${var.scenario_type}\n iscsi_srv_ip: ${azurerm_network_interface.iscsisrv.private_ip_address}\n iscsidev: ${var.iscsidev}\n qa_mode: ${var.qa_mode}"
      },
      {
        "filename": "azure/terraform_salt/terraform.tfvars.example",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -88,6 +88,9 @@ ha_sap_deployment_repo = \"\"\n #    \"sle-ha-geo/12.4/x86_64\" = \"<<REG_CODE>>\"\n #}\n \n+# Cost optimized scenario\n+#scenario_type: \"cost-optimized\"\n+\n # To disable the provisioning process\n #provisioner = \"\"\n "
      },
      {
        "filename": "azure/terraform_salt/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -122,6 +122,11 @@ variable \"ha_sap_deployment_repo\" {\n   type        = \"string\"\n }\n \n+variable \"scenario_type\" {\n+  description = \"Deployed scenario type. Available options: performance-optimized, cost-optimized\"\n+  default     = \"performance-optimized\"\n+}\n+\n variable \"provisioner\" {\n   description = \"Used provisioner option. Available options: salt. Let empty to not use any provisioner\"\n   default     = \"salt\""
      },
      {
        "filename": "gcp/terraform_salt/README.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -113,6 +113,7 @@ In the file [terraform.tfvars](terraform.tfvars.example) there are a number of v\n * **hana_inst_disk_device**: device used by node where HANA will be downloaded.\n * **hana_disk_device**: device used by node where HANA will be installed.\n * **ha_sap_deployment_repo**: Repository with HA and Salt formula packages. The latest RPM packages can be found at [https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/{YOUR OS VERSION}](https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/)\n+* **scenario_type**: SAP HANA scenario type. Available options: `performance-optimized` and `cost-optimized`.\n * **provisioner**: select the desired provisioner to configure the nodes. Salt is used by default: [salt](../../salt). Let it empty to disable the provisioning part.\n * **background**: run the provisioning process in background finishing terraform execution.\n * **reg_code**: registration code for the installed base product (Ex.: SLES for SAP). This parameter is optional. If informed, the system will be registered against the SUSE Customer Center."
      },
      {
        "filename": "gcp/terraform_salt/salt_provisioner.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -43,6 +43,7 @@ resource \"null_resource\" \"iscsi_provisioner\" {\n     content = <<EOF\n provider: gcp\n role: iscsi_srv\n+scenario_type: ${var.scenario_type}\n iscsi_srv_ip: ${var.iscsi_ip}\n iscsidev: ${var.iscsidev}\n qa_mode: ${var.qa_mode}"
      },
      {
        "filename": "gcp/terraform_salt/terraform.tfvars.example",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -76,6 +76,9 @@ ha_sap_deployment_repo = \"\"\n #    \"sle-ha-geo/12.4/x86_64\" = \"<<REG_CODE>>\"\n #}\n \n+# Cost optimized scenario\n+#scenario_type: \"cost-optimized\"\n+\n # To disable the provisioning process\n #provisioner = \"\"\n "
      },
      {
        "filename": "gcp/terraform_salt/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -168,6 +168,11 @@ variable \"host_ips\" {\n   type        = \"list\"\n }\n \n+variable \"scenario_type\" {\n+  description = \"Deployed scenario type. Available options: performance-optimized, cost-optimized\"\n+  default     = \"performance-optimized\"\n+}\n+\n variable \"provisioner\" {\n   description = \"Used provisioner option. Available options: salt. Let empty to not use any provisioner\"\n   default     = \"salt\""
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jjffggpp/jjffggpp/commit/93ee12adde6ac773c76b590fe89c24df372f326b",
    "files": [
      {
        "filename": "azure/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -473,7 +473,7 @@ variable \"iscsi_srv_uri\" {\n variable \"iscsi_vm_size\" {\n   description = \"VM size for the iscsi server machine\"\n   type        = string\n-  default     = \"Standard_D2s_v3\"\n+  default     = \"Standard_DS1_v2\"\n }\n \n variable \"iscsi_srv_ip\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cisagov/vulnerable-instances/commit/f70410061b8c6b9249895571e05dfb7a142efb18",
    "files": [
      {
        "filename": "terraform/ubuntu1404_ec2.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -31,9 +31,8 @@ resource \"aws_instance\" \"vuln_ubuntu1404\" {\n   associate_public_ip_address = true\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n-    volume_size           = 100\n-    delete_on_termination = true\n+    volume_size = 100\n+    volume_type = \"gp3\"\n   }\n \n   vpc_security_group_ids = ["
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness",
      "storage"
    ],
    "codes": ["aws", "cheaper_volume", "new_gen"],
    "notes": "Move from gp2 to gp3"
  },
  {
    "url": "https://github.com/lwilliams1990/deepfence-threatmapper-lab/commit/cbd8ce761041eac3afbdfbf74e001895895682f2",
    "files": [
      {
        "filename": "ec2.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -18,10 +18,10 @@ data \"aws_ami\" \"ubuntu\" {\n # Create Deepfence Management Console Server\n resource \"aws_instance\" \"deep-lab-ap01\" {\n   ami                         = data.aws_ami.ubuntu.id\n-  instance_type               = var.bastion_instance_size\n-  subnet_id                   = aws_subnet.ansib-lab-subnet-public.id\n+  instance_type               = m5.large\n+  subnet_id                   = aws_subnet.deepfence-lab-subnet-public.id\n   associate_public_ip_address = true\n-  vpc_security_group_ids      = [aws_security_group.ansib-lab-sg.id]\n+  vpc_security_group_ids      = [aws_security_group.deepfence-lab-sg.id]\n \n   tags = {\n     Name = \"deep-lab-ap01\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/adeelbarki/aws-with-terraform-and-ansible/commit/742f35a1fdf66b24ddb1f6a514b2af5a1f2b4282",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -338,8 +338,9 @@ resource \"aws_s3_bucket\" \"code\" {\n #----------------RDS-----------------\n resource \"aws_db_instance\" \"wp_db\" {\n   allocated_storage = 10\n+  storage_type = \"gp2\"\n   engine = \"mysql\"\n-  engine_version = \"5.6.27\"\n+  engine_version = \"5.6\"\n   instance_class = \"${var.db_instance_class}\"\n   name = \"${var.dbname}\"\n   username = \"${var.dbuser}\""
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/EOjeah/route53-ps/commit/1c619d5df3f2e7f49dd9a3a47150aa41b0de497f",
    "files": [
      {
        "filename": "delegation-set.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+resource \"aws_route53_delegation_set\" \"main\" {\n+  reference_name = \"1047874\"\n+}\n+\n+output \"delegation_set_id\" {\n+  value = aws_route53_delegation_set.main.id\n+}"
      },
      {
        "filename": "main.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -323,13 +323,13 @@ output \"east-2-public-ip\" {\n \n # sample query on bash $ aws ec2 describe-images --region us-west-1 --filters \"Name=name,Values=aws-elasticbeanstalk-amzn-2017.09.1.x86_64-ecs-hvm-*\" --query 'Images[*].[Name, ImageId]'\n \n-resource \"aws_route53_delegation_set\" \"main\" {\n-  reference_name = \"1047874\"\n-}\n-\n resource \"aws_route53_zone\" \"primary\" {\n   name              = \"emmanuelojeah.xyz.\"\n-  delegation_set_id = aws_route53_delegation_set.main.id\n+  delegation_set_id = data.aws_route53_delegation_set.main.id\n+}\n+\n+data \"aws_route53_delegation_set\" \"main\" {\n+  id = \"N01183162IKVAVWFA9MD1\"\n }\n \n resource \"aws_route53_record\" \"web1-east\" {"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/SamTowne/BasketballDrillBot/commit/4ec6d54e4d36ab02b0a7daf042e727717371eaec",
    "files": [
      {
        "filename": "main.tf",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -2,11 +2,10 @@\n ### Bootstrap ###\n #################\n \n-## Build an S3 bucket and DynamoDB for Terraform state and locking\n+# Build an S3 bucket and DynamoDB for Terraform state and locking\n module \"bootstrap\" {\n   source                  = \"./modules/bootstrap\"\n   tfstate_bucket          = \"shooting-insights-terraform-tfstate\"\n-  logging_bucket          = \"shooting-insights-logging-bucket\"\n   data_bucket             = \"shooting-insights-data\"\n   athena_results_bucket   = \"shooting-insights-athena-results\"\n   tf_lock_dynamo_table    = \"shooting-insights-dynamodb-terraform-locking\"\n@@ -80,7 +79,8 @@ module \"processing\" {\n module \"response\" {\n   source                    = \"./modules/response\"\n   data_bucket_arn           = module.bootstrap.data_bucket_arn\n-  athena_results_bucket_arn = module.processing.athena_results_bucket_arn\n+  temp_bucket_arn           = module.collection.temp_bucket_arn\n+  athena_bucket_arn         = module.processing.athena_bucket_arn\n }\n \n ###############\n@@ -89,6 +89,7 @@ module \"response\" {\n \n module \"cleanup\" {\n   source = \"./modules/cleanup\"\n-  data_bucket_arn           = module.bootstrap.data_bucket_arn\n-  athena_results_bucket_arn = module.processing.athena_results_bucket_arn\n+  temp_bucket_arn           = module.collection.temp_bucket_arn\n+  athena_bucket_arn         = module.processing.athena_bucket_arn\n+  processing_bucket_arn     = module.processing.processing_bucket_arn\n }\n\\ No newline at end of file"
      },
      {
        "filename": "modules/bootstrap/bootstrap.tf",
        "additions": 31,
        "deletions": 22,
        "changes": 53,
        "status": "modified",
        "patch": "@@ -15,6 +15,20 @@ resource \"aws_s3_bucket\" \"state_bucket\" {\n   versioning {\n     enabled = true\n   }\n+\n+  lifecycle_rule {\n+    id = \"state bucket lifecycle\"\n+    enabled = true\n+    abort_incomplete_multipart_upload_days = 1\n+    noncurrent_version_transition {\n+      days = 1\n+      storage_class = \"INTELLIGENT_TIERING\"      \n+    }\n+\n+    transition {\n+      storage_class = \"INTELLIGENT_TIERING\"\n+    }\n+  }  \n }\n \n # Build a DynamoDB to use for terraform state locking\n@@ -34,21 +48,6 @@ resource \"aws_dynamodb_table\" \"tf_lock_state\" {\n   }\n }\n \n-\n-# Build an AWS S3 bucket for logging\n-resource \"aws_s3_bucket\" \"s3_logging_bucket\" {\n-  bucket = var.logging_bucket\n-  acl    = \"private\"\n-\n-  server_side_encryption_configuration {\n-    rule {\n-      apply_server_side_encryption_by_default {\n-        sse_algorithm = \"AES256\"\n-      }\n-    }\n-  }\n-}\n-\n # Build an AWS S3 bucket for storing lambda data\n resource \"aws_s3_bucket\" \"s3_data_bucket\" {\n   bucket = var.data_bucket\n@@ -84,15 +83,25 @@ resource \"aws_s3_bucket\" \"s3_data_bucket\" {\n       }\n     }\n   }\n-}\n \n-# Output name of S3 logging bucket back to main.tf\n-output \"logging_bucket_id\" {\n-  value = aws_s3_bucket.s3_logging_bucket.id\n-}\n-output \"logging_bucket\" {\n-  value = aws_s3_bucket.s3_logging_bucket.bucket\n+  lifecycle_rule {\n+    id = \"data bucket lifecycle\"\n+    enabled = true\n+    abort_incomplete_multipart_upload_days = 1\n+    \n+    noncurrent_version_expiration {\n+      days = 1\n+    }\n+\n+    transition {\n+      storage_class = \"INTELLIGENT_TIERING\"\n+    }\n+  }\n+\n }\n+\n+# Output name of data bucket back to main.tf\n+\n output \"data_bucket\" {\n   value = aws_s3_bucket.s3_data_bucket.bucket\n }"
      },
      {
        "filename": "modules/bootstrap/bootstrap_variables.tf",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -3,10 +3,6 @@ variable \"tfstate_bucket\" {\n   description = \"Name of the S3 bucket used for Terraform state storage\"\n }\n \n-variable \"logging_bucket\" {\n-  description = \"Name of S3 bucket to use for access logging\"\n-}\n-\n variable \"data_bucket\" {\n   description = \"Name of S3 bucket to use for data\"\n }"
      },
      {
        "filename": "modules/cleanup/cleanup.py",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -2,9 +2,18 @@\n \n def lambda_handler(event, context):\n     s3 = boto3.resource('s3')\n-    my_bucket = 'shooting-insights-data'\n-    for item in my_bucket.objects.filter(Prefix='temp/3point/'):\n-        item.delete()\n+\n+    # Delete everything in the athena results bucket \n+    athena_bucket = s3.Bucket('shooting-insights-athena-results')\n+    athena_bucket.objects.all().delete()\n+\n+    # Delete everything in the temp bucket\n+    temp_bucket = s3.Bucket('shooting-insights-temp')\n+    temp_bucket.objects.all().delete()\n+\n+    # Delete everything in the processing bucket\n+    processing_bucket = s3.Bucket('shooting-insights-setup-processing-results')\n+    processing_bucket.objects.all().delete()\n \n     return {\n         'statusCode': 200,"
      },
      {
        "filename": "modules/cleanup/cleanup.tf",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -41,10 +41,12 @@ resource \"aws_iam_policy\" \"lambda_policy\" {\n               \"s3:DeleteObject\"\n           ],\n           \"Resource\": [\n-              \"${var.data_bucket_arn}\",\n-              \"${var.data_bucket_arn}/*\",\n-              \"${var.athena_results_bucket_arn}\",\n-              \"${var.athena_results_bucket_arn}/*\"\n+              \"${var.temp_bucket_arn}\",\n+              \"${var.temp_bucket_arn}/*\",\n+              \"${var.athena_bucket_arn}\",\n+              \"${var.athena_bucket_arn}/*\",\n+              \"${var.processing_bucket_arn}\",\n+              \"${var.processing_bucket_arn}/*\"\n           ]\n       }\n   ]"
      },
      {
        "filename": "modules/cleanup/cleanup_payload.zip",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "modified",
        "patch": null
      },
      {
        "filename": "modules/cleanup/cleanup_variables.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,2 +1,3 @@\n-variable \"data_bucket_arn\" {}\n-variable \"athena_results_bucket_arn\" {}\n\\ No newline at end of file\n+variable \"temp_bucket_arn\" {}\n+variable \"athena_bucket_arn\" {}\n+variable \"processing_bucket_arn\" {}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/collection/collection.py",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -13,24 +13,26 @@ def lambda_handler(event, context):\n     body = json.loads(\"{}\".format(event['body']))\n     \n     bucket_name = \"shooting-insights-data\"\n+    temp_bucket_name = \"shooting-insights-temp\"\n     \n-    file_name = str(uuid.uuid4()) + \".json\"\n+    file_name = str(uuid.uuid4())\n     \n-    s3_path = \"collection/3point/\" + file_name\n+    s3_path = \"collection/3point/\" + file_name + \".json\"\n+    temp_s3_path = \"collection_temp/3point/\" + file_name + \".json\"\n     \n     s3 = boto3.resource(\"s3\")\n-    \n+\n+    # Put json file in shooting insights data bucket collection path \n     s3.Bucket(bucket_name).put_object(Key=s3_path, Body=json.dumps(body), ContentType=\"application/json\", )\n \n-    payload = json.dumps({'bucket': \"{_bucket}\".format(_bucket=bucket_name),'path': \"{_path}\".format(_path=s3_path)})\n+    # Put json file containing the json file's name in unique bucket so processing can obtain the correct file\n+    s3.Bucket(temp_bucket_name).put_object(Key=temp_s3_path, Body=json.dumps({'file': \"{_file}\".format(_file=file_name)}), ContentType=\"application/json\", )\n \n     ### Invoke processing lambda (async)\n-\n     lambda_client = boto3.client(\"lambda\")\n-    lambda_client.invoke(FunctionName='processing',\n+    lambda_client.invoke(FunctionName='setup_processing',\n                      InvocationType='Event',\n-                     LogType='None',\n-                     Payload= payload\n+                     LogType='None'\n                      )\n     \n     return {"
      },
      {
        "filename": "modules/collection/collection.tf",
        "additions": 55,
        "deletions": 1,
        "changes": 56,
        "status": "modified",
        "patch": "@@ -76,7 +76,7 @@ resource \"aws_iam_policy\" \"lambda_policy\" {\n               \"s3:PutObject\"\n           ],\n           \"Resource\": [\n-              \"${var.data_bucket_arn}\"\n+              \"*\"\n           ]\n       }\n   ]\n@@ -98,6 +98,56 @@ resource \"aws_lambda_function\" \"lambda\" {\n   source_code_hash = filebase64sha256(\"./modules/collection/collection_payload.zip\")\n }\n \n+# Build an AWS S3 bucket for Collection Temp\n+resource \"aws_s3_bucket\" \"shooting_insights_temp_bucket\" {\n+  bucket = \"shooting-insights-temp\"\n+  acl    = \"private\"\n+  policy = <<EOT\n+{\n+  \"Id\": \"SITempBucketPolicy\",\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Sid\": \"lambda\",\n+      \"Action\": [\n+        \"s3:*\"\n+      ],\n+      \"Effect\": \"Allow\",\n+      \"Resource\": [\n+        \"arn:aws:s3:::shooting-insights-temp/*\"\n+      ],\n+      \"Principal\": {\n+        \"AWS\": [\n+          \"arn:aws:iam::272773485930:role/collection_lambda_role\",\n+          \"arn:aws:iam::272773485930:role/processing_lambda_role\",\n+          \"arn:aws:iam::272773485930:role/response_lambda_role\",\n+          \"arn:aws:iam::272773485930:role/cleanup_lambda_role\"\n+        ]\n+      }\n+    }\n+  ]\n+}\n+  EOT\n+\n+  server_side_encryption_configuration {\n+    rule {\n+      apply_server_side_encryption_by_default {\n+        sse_algorithm = \"AES256\"\n+      }\n+    }\n+  }\n+\n+  lifecycle_rule {\n+    id = \"temp bucket lifecycle\"\n+    enabled = true\n+    abort_incomplete_multipart_upload_days = 1\n+    \n+    noncurrent_version_expiration {\n+      days = 1\n+    }\n+  }\n+}\n+\n data \"archive_file\" \"lambda\" {\n   type = \"zip\"\n   source_file = \"./modules/collection/collection.py\"\n@@ -111,3 +161,7 @@ output \"output_arn\" {\n output \"output_invoke_arn\" {\n   value = aws_lambda_function.lambda.invoke_arn\n }\n+\n+output \"temp_bucket_arn\" {\n+  value = aws_s3_bucket.shooting_insights_temp_bucket.arn\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/collection/collection_payload.zip",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "modified",
        "patch": null
      },
      {
        "filename": "modules/processing/processing.py",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -2,10 +2,20 @@\n import boto3\n \n def lambda_handler(event, context):\n+    \n+    s3 = boto3.resource(\"s3\")\n+\n+    ### Retrieve the shooting drill file name ###\n+    shooting_insights_temp_bucket = s3.Bucket('shooting-insights-temp')\n+    json_file_prefix = []\n+    \n+    for obj in shooting_insights_temp_bucket.objects.filter(Prefix=\"collection_temp/3point/\"):\n+      json_file_prefix = json.loads(obj.get()['Body'].read().decode('utf-8'))\n+\n+    file_prefix = json_file_prefix['file']    \n \n     ### Retrieve the shooting drill file ###\n-    s3 = boto3.resource(\"s3\")\n-    content_object = s3.Object(event['bucket'],event['path'])\n+    content_object = s3.Object('shooting-insights-data',\"collection/3point/\" + file_prefix + \".json\")\n     file_content = content_object.get()['Body'].read().decode('utf-8')\n     body = json.loads(file_content)\n     \n@@ -70,13 +80,11 @@ def lambda_handler(event, context):\n     )\n \n     # Create new json file with Athena execution IDs, shots made, shots attempted, shooting percentage, and the temperature \n-    path_split = event['path'].split('/')\n-    file_name = path_split[len(path_split) - 1]\n     processed_file_content = json.dumps({'total_made_each_spot_athena_execution_id': total_each_spot_response['QueryExecutionId'],'shots_made': shots_made,'shots_attempted': shots_attempted,'shooting_percentage': shooting_percentage, 'temp': temp})\n-    s3.Object('shooting-insights-data', 'processed/3point/' + file_name ).put(Body=processed_file_content,ContentType=\"application/json\")\n+    s3.Object('shooting-insights-data', 'processed/3point/' + file_prefix + \".json\" ).put(Body=processed_file_content,ContentType=\"application/json\")\n \n     # Make a temp copy\n-    s3.Object('shooting-insights-data', 'temp/3point/' + file_name).copy_from(CopySource='shooting-insights-data/processed/3point/' + file_name)\n+    s3.Object('shooting-insights-temp', 'processed_temp/3point/' + file_prefix + \".json\").copy_from(CopySource='shooting-insights-data/processed/3point/' + file_prefix + \".json\")\n     \n \n     return {"
      },
      {
        "filename": "modules/processing/processing.tf",
        "additions": 170,
        "deletions": 39,
        "changes": 209,
        "status": "modified",
        "patch": "@@ -10,7 +10,7 @@ resource \"aws_s3_bucket\" \"athena_results_bucket\" {\n     {\n       \"Sid\": \"lambda\",\n       \"Action\": [\n-        \"s3:PutObject\"\n+        \"s3:*\"\n       ],\n       \"Effect\": \"Allow\",\n       \"Resource\": [\n@@ -19,7 +19,9 @@ resource \"aws_s3_bucket\" \"athena_results_bucket\" {\n       \"Principal\": {\n         \"AWS\": [\n           \"arn:aws:iam::272773485930:role/collection_lambda_role\",\n-          \"arn:aws:iam::272773485930:role/processing_lambda_role\"\n+          \"arn:aws:iam::272773485930:role/processing_lambda_role\",\n+          \"arn:aws:iam::272773485930:role/response_lambda_role\",\n+          \"arn:aws:iam::272773485930:role/cleanup_lambda_role\"\n         ]\n       }\n     }\n@@ -34,10 +36,98 @@ resource \"aws_s3_bucket\" \"athena_results_bucket\" {\n       }\n     }\n   }\n+\n+  lifecycle_rule {\n+    id = \"athena bucket lifecycle\"\n+    enabled = true\n+    abort_incomplete_multipart_upload_days = 1\n+    \n+    noncurrent_version_expiration {\n+      days = 1\n+    }\n+\n+    transition {\n+      storage_class = \"INTELLIGENT_TIERING\"\n+    }\n+  }\n+}\n+\n+# Build an AWS S3 bucket for setup processing results\n+resource \"aws_s3_bucket\" \"setup_processing_results_bucket\" {\n+  bucket = \"shooting-insights-setup-processing-results\"\n+  acl    = \"private\"\n+  policy = <<EOT\n+{\n+  \"Id\": \"SIDataBucketPolicy\",\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Sid\": \"lambda\",\n+      \"Action\": [\n+        \"s3:*\"\n+      ],\n+      \"Effect\": \"Allow\",\n+      \"Resource\": [\n+        \"arn:aws:s3:::shooting-insights-setup-processing-results/*\"\n+      ],\n+      \"Principal\": {\n+        \"AWS\": [\n+          \"arn:aws:iam::272773485930:role/collection_lambda_role\",\n+          \"arn:aws:iam::272773485930:role/cleanup_lambda_role\"\n+        ]\n+      }\n+    }\n+  ]\n }\n+  EOT\n+\n+  server_side_encryption_configuration {\n+    rule {\n+      apply_server_side_encryption_by_default {\n+        sse_algorithm = \"AES256\"\n+      }\n+    }\n+  }\n+\n+  lifecycle_rule {\n+    id = \"athena bucket lifecycle\"\n+    enabled = true\n+    abort_incomplete_multipart_upload_days = 1\n+    \n+    noncurrent_version_expiration {\n+      days = 1\n+    }\n+\n+    transition {\n+      storage_class = \"INTELLIGENT_TIERING\"\n+    }\n+  }\n+}\n+\n+# Processing Trigger \n+resource \"aws_lambda_permission\" \"processing_trigger_allow_bucket\" {\n+  statement_id  = \"ProcessingAllowExecutionFromS3Bucket\"\n+  action        = \"lambda:InvokeFunction\"\n+  function_name = \"arn:aws:lambda:us-east-1:272773485930:function:processing\"\n+  principal     = \"s3.amazonaws.com\"\n+  source_arn    = aws_s3_bucket.setup_processing_results_bucket.arn\n+}\n+\n+# Notification to invoke processing lambda function, to start once the Setup-Processing Athena Query Exection(s) are complete\n+resource \"aws_s3_bucket_notification\" \"processing_trigger_bucket_notification\" {\n+  bucket = aws_s3_bucket.setup_processing_results_bucket.id\n+\n+  lambda_function {\n+    lambda_function_arn = \"arn:aws:lambda:us-east-1:272773485930:function:processing\"\n+    events              = [\"s3:ObjectCreated:*\"]\n+    filter_prefix       = \"create_table_query/\"\n+    filter_suffix       = \".txt\"\n+  }\n \n-# Allow S3 Trigger of the Response Lambda\n+  depends_on = [aws_lambda_permission.processing_trigger_allow_bucket]\n+}\n \n+# Response Trigger\n resource \"aws_lambda_permission\" \"allow_bucket\" {\n   statement_id  = \"AllowExecutionFromS3Bucket\"\n   action        = \"lambda:InvokeFunction\"\n@@ -46,7 +136,7 @@ resource \"aws_lambda_permission\" \"allow_bucket\" {\n   source_arn    = aws_s3_bucket.athena_results_bucket.arn\n }\n \n-# Trigger for response to be ignited once all processing is complete\n+# Notification to invoke response lambda function, to start once the Processing Athena Query Execution(s) are complete\n resource \"aws_s3_bucket_notification\" \"bucket_notification\" {\n   bucket = aws_s3_bucket.athena_results_bucket.id\n \n@@ -73,34 +163,6 @@ resource \"aws_athena_workgroup\" \"athena_workgroup\" {\n   name = \"shooting_insights\"\n }\n \n-resource \"aws_athena_named_query\" \"athena_query\" {\n-  name      = \"shooting_insights_table\"\n-  database  = aws_athena_database.athena_db.name\n-  workgroup = aws_athena_workgroup.athena_workgroup.name\n-  query     = <<EOT\n-  CREATE EXTERNAL TABLE IF NOT EXISTS ${aws_athena_database.athena_db.name}.shooting_insights (\n-         `spot_1` int,\n-         `spot_2` int,\n-         `spot_3` int,\n-         `spot_4` int,\n-         `spot_5` int,\n-         `spot_6` int,\n-         `spot_7` int,\n-         `spot_8` int,\n-         `spot_9` int,\n-         `spot_10` int,\n-         `spot_11` int,\n-         `temp` int,\n-         `date` date,\n-         `time` string \n-) \n-ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe'\n-WITH SERDEPROPERTIES (\n-         'serialization.format' = '1' ) LOCATION 's3://shooting-insights-data/collection/3point/' TBLPROPERTIES ('has_encrypted_data'='false');\n-\n-  EOT\n-}\n-\n resource \"aws_iam_role\" \"lambda_role\" {\n   name = \"processing_lambda_role\"\n \n@@ -134,11 +196,9 @@ resource \"aws_iam_policy\" \"lambda_policy\" {\n               \"logs:CreateLogGroup\",\n               \"logs:CreateLogStream\",\n               \"logs:PutLogEvents\",\n-              \"ses:SendEmail\",\n-              \"ses:SendRawEmail\",\n-              \"athena:StartQueryExecution\",\n-              \"glue:GetTable\",\n-              \"glue:GetDatabase\"\n+              \"athena:*\",\n+              \"glue:*\",\n+              \"lambda:InvokeFunction\"\n           ],\n           \"Resource\": \"*\"\n       },\n@@ -157,7 +217,9 @@ resource \"aws_iam_policy\" \"lambda_policy\" {\n               \"${var.data_bucket_arn}\",\n               \"${var.data_bucket_arn}/*\",\n               \"${aws_s3_bucket.athena_results_bucket.arn}\",\n-              \"${aws_s3_bucket.athena_results_bucket.arn}/*\"\n+              \"${aws_s3_bucket.athena_results_bucket.arn}/*\",\n+              \"arn:aws:s3:::shooting-insights-temp\",\n+              \"arn:aws:s3:::shooting-insights-temp/*\"\n           ]\n       }\n   ]\n@@ -179,12 +241,77 @@ resource \"aws_lambda_function\" \"lambda\" {\n   source_code_hash = filebase64sha256(\"./modules/processing/processing_payload.zip\")\n }\n \n+### Setup-Processing Lambda\n+resource \"aws_iam_policy\" \"setup_processing_lambda_policy\" {\n+  name = \"${aws_lambda_function.setup_processing_lambda.function_name}_policy\"\n+  description = \"iam policy for ${aws_lambda_function.setup_processing_lambda.function_name}\"\n+  policy = <<EOT\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+      {\n+          \"Effect\": \"Allow\",\n+          \"Action\": [\n+              \"logs:CreateLogGroup\",\n+              \"logs:CreateLogStream\",\n+              \"logs:PutLogEvents\",\n+              \"athena:*\",\n+              \"glue:*\",\n+              \"lambda:InvokeFunction\"\n+          ],\n+          \"Resource\": \"*\"\n+      },\n+      {\n+          \"Effect\": \"Allow\",\n+          \"Action\": [\n+              \"s3:GetBucketLocation\",\n+              \"s3:GetObject\",\n+              \"s3:ListBucket\",\n+              \"s3:ListBucketMultipartUploads\",\n+              \"s3:AbortMultipartUpload\",\n+              \"s3:PutObject\",\n+              \"s3:ListMultipartUploadParts\"\n+          ],\n+          \"Resource\": [\n+            \"${var.data_bucket_arn}\",\n+            \"${var.data_bucket_arn}/*\",\n+            \"arn:aws:s3:::shooting-insights-temp\",\n+            \"arn:aws:s3:::shooting-insights-temp/*\",\n+            \"${aws_s3_bucket.setup_processing_results_bucket.arn}\",\n+            \"${aws_s3_bucket.setup_processing_results_bucket.arn}/*\"\n+          ]\n+      }\n+  ]\n+}\n+EOT\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"setup_processing_lambda_policy_attachment\" {\n+  role       = aws_iam_role.lambda_role.name\n+  policy_arn = aws_iam_policy.setup_processing_lambda_policy.arn\n+}\n+\n+resource \"aws_lambda_function\" \"setup_processing_lambda\" {\n+  filename         = \"./modules/processing/setup_processing_payload.zip\"\n+  function_name    = \"setup_processing\"\n+  role             = aws_iam_role.lambda_role.arn\n+  handler          = \"setup_processing.lambda_handler\"\n+  runtime          = \"python3.8\"\n+  source_code_hash = filebase64sha256(\"./modules/processing/setup_processing_payload.zip\")\n+}\n+\n data \"archive_file\" \"lambda\" {\n   type = \"zip\"\n   source_file = \"./modules/processing/processing.py\"\n   output_path = \"./modules/processing/processing_payload.zip\"\n }\n \n+data \"archive_file\" \"setup_processing_lambda\" {\n+  type = \"zip\"\n+  source_file = \"./modules/processing/setup_processing.py\"\n+  output_path = \"./modules/processing/setup_processing_payload.zip\"\n+}\n+\n output \"output_arn\" {\n   value = aws_lambda_function.lambda.arn\n }\n@@ -193,6 +320,10 @@ output \"output_invoke_arn\" {\n   value = aws_lambda_function.lambda.invoke_arn\n }\n \n-output \"athena_results_bucket_arn\" {\n+output \"athena_bucket_arn\" {\n   value = aws_s3_bucket.athena_results_bucket.arn\n+}\n+\n+output \"processing_bucket_arn\" {\n+  value = aws_s3_bucket.setup_processing_results_bucket.arn\n }\n\\ No newline at end of file"
      },
      {
        "filename": "modules/processing/processing_payload.zip",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "modified",
        "patch": null
      },
      {
        "filename": "modules/processing/setup_processing.py",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "status": "added",
        "patch": "@@ -0,0 +1,51 @@\n+import json\n+import boto3\n+\n+def lambda_handler(event, context):\n+    ### Setup Athena Query\n+\n+    athena_client = boto3.client('athena')\n+\n+    params = {\n+    'region': 'us-east-1',\n+    'database': 'shooting_insights',\n+    'bucket': 'shooting-insights-setup-processing-results',\n+    'create_table_query': \n+    \"\"\"\n+    CREATE EXTERNAL TABLE IF NOT EXISTS shooting_insights.shooting_insights (\n+         `spot_1` int,\n+         `spot_2` int,\n+         `spot_3` int,\n+         `spot_4` int,\n+         `spot_5` int,\n+         `spot_6` int,\n+         `spot_7` int,\n+         `spot_8` int,\n+         `spot_9` int,\n+         `spot_10` int,\n+         `spot_11` int,\n+         `temp` int,\n+         `date` date,\n+         `time` string \n+        ) \n+        ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe'\n+        WITH SERDEPROPERTIES (\n+         'serialization.format' = '1' ) LOCATION 's3://shooting-insights-data/collection/3point/' TBLPROPERTIES ('has_encrypted_data'='false');\n+    \"\"\"\n+    }\n+\n+    create_table_query_response = athena_client.start_query_execution(\n+        QueryString=params[\"create_table_query\"],\n+        QueryExecutionContext={\n+            'Database': params['database']\n+        },\n+        ResultConfiguration={\n+            'OutputLocation': 's3://' + params['bucket'] + '/create_table_query/'\n+        },\n+        WorkGroup='shooting_insights'\n+    )\n+\n+    return {\n+        'statusCode': 200,\n+        'body': 'hi'\n+    }    \n\\ No newline at end of file"
      },
      {
        "filename": "modules/processing/setup_processing_payload.zip",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "modules/response/response.py",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -5,10 +5,10 @@ def lambda_handler(event, context):\n \n     ### Retrieve the shooting drill file ###\n     s3 = boto3.resource(\"s3\")\n-    shooting_insights_data_bucket = s3.Bucket('shooting-insights-data')\n+    temp_bucket = s3.Bucket('shooting-insights-temp')\n     processed_temp_file = []\n     \n-    for obj in shooting_insights_data_bucket.objects.filter(Prefix=\"temp/3point/\"):\n+    for obj in temp_bucket.objects.filter(Prefix=\"processed_temp/3point/\"):\n       processed_temp_file = json.loads(obj.get()['Body'].read().decode('utf-8'))\n \n     shots_made          = str(processed_temp_file['shots_made'])"
      },
      {
        "filename": "modules/response/response.tf",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -43,7 +43,7 @@ resource \"aws_iam_policy\" \"lambda_policy\" {\n         \"Action\": [\n           \"lambda:InvokeFunction\"\n         ],\n-        \"Resource\": \"${var.athena_results_bucket_arn}\"\n+        \"Resource\": \"${var.athena_bucket_arn}\"\n       },\n       {\n           \"Effect\": \"Allow\",\n@@ -59,8 +59,10 @@ resource \"aws_iam_policy\" \"lambda_policy\" {\n           \"Resource\": [\n               \"${var.data_bucket_arn}\",\n               \"${var.data_bucket_arn}/*\",\n-              \"${var.athena_results_bucket_arn}\",\n-              \"${var.athena_results_bucket_arn}/*\"\n+              \"${var.athena_bucket_arn}\",\n+              \"${var.athena_bucket_arn}/*\",\n+              \"${var.temp_bucket_arn}\",\n+              \"${var.temp_bucket_arn}/*\"\n           ]\n       }\n   ]"
      },
      {
        "filename": "modules/response/response_payload.zip",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "modified",
        "patch": null
      },
      {
        "filename": "modules/response/response_variables.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,2 +1,3 @@\n variable \"data_bucket_arn\" {}\n-variable \"athena_results_bucket_arn\" {}\n\\ No newline at end of file\n+variable \"athena_bucket_arn\" {}\n+variable \"temp_bucket_arn\" {}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "add_lifecycle_rule"],
    "notes": "Large commit, but the cost-related change is adding lifecycle rules to S3 buckets"
  },
  {
    "url": "https://github.com/ecsworkshop2018/expertalk-2018-ecs-workshop/commit/034908d914982eacea51b0ac61f2781069387412",
    "files": [
      {
        "filename": "terraform-modules/vpc-subnets-and-network/network.tf",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -7,9 +7,25 @@ resource \"aws_internet_gateway\" \"internet_gateway\" {\n   }\n }\n \n+resource \"aws_route_table\" \"public_route_table\" {\n+  vpc_id = \"${aws_vpc.vpc.id}\"\n+\n+  tags {\n+    Name        = \"${var.name}-public-route-table\"\n+    Environment = \"${var.environment}\"\n+  }\n+}\n+\n+resource \"aws_route\" \"public_route\" {\n+  route_table_id         = \"${aws_route_table.public_route_table.id}\"\n+  destination_cidr_block = \"${var.destination_cidr_block}\"\n+  gateway_id             = \"${aws_internet_gateway.internet_gateway.id}\"\n+}\n+\n resource \"aws_eip\" \"eip\" {\n   depends_on = [\"aws_internet_gateway.internet_gateway\"]\n   vpc        = true\n+  count      = \"${local.private_subnets_required ? 1 : 0}\"\n \n   tags = {\n     Name        = \"${var.name}-nat-eip\"\n@@ -21,39 +37,27 @@ resource \"aws_nat_gateway\" \"nat\" {\n   depends_on    = [\"aws_internet_gateway.internet_gateway\"]\n   allocation_id = \"${aws_eip.eip.id}\"\n   subnet_id     = \"${element(aws_subnet.public_subnet.*.id, 0)}\"\n+  count         = \"${local.private_subnets_required ? 1 : 0}\"\n \n   tags = {\n     Name        = \"${var.name}-nat\"\n     Environment = \"${var.environment}\"\n   }\n }\n \n-resource \"aws_route_table\" \"public_route_table\" {\n-  vpc_id = \"${aws_vpc.vpc.id}\"\n-\n-  tags {\n-    Name        = \"${var.name}-public-route-table\"\n-    Environment = \"${var.environment}\"\n-  }\n-}\n-\n resource \"aws_route_table\" \"private_route_table\" {\n   vpc_id = \"${aws_vpc.vpc.id}\"\n+  count  = \"${local.private_subnets_required ? 1 : 0}\"\n \n   tags {\n     Name        = \"${var.name}-private-route-table\"\n     Environment = \"${var.environment}\"\n   }\n }\n \n-resource \"aws_route\" \"public_route\" {\n-  route_table_id         = \"${aws_route_table.public_route_table.id}\"\n-  destination_cidr_block = \"${var.destination_cidr_block}\"\n-  gateway_id             = \"${aws_internet_gateway.internet_gateway.id}\"\n-}\n-\n resource \"aws_route\" \"private_route\" {\n   route_table_id         = \"${aws_route_table.private_route_table.id}\"\n   destination_cidr_block = \"${var.destination_cidr_block}\"\n   nat_gateway_id         = \"${aws_nat_gateway.nat.id}\"\n+  count                  = \"${local.private_subnets_required ? 1 : 0}\"\n }"
      },
      {
        "filename": "terraform-modules/vpc-subnets-and-network/subnets.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,5 +1,9 @@\n data aws_availability_zones all {}\n \n+locals {\n+  private_subnets_required = \"${length(var.private_subnet_cidrs) > 0 ? true : false}\"\n+}\n+\n resource \"aws_subnet\" \"public_subnet\" {\n   vpc_id                  = \"${aws_vpc.vpc.id}\"\n   cidr_block              = \"${element(var.public_subnet_cidrs, count.index)}\""
      },
      {
        "filename": "terraform/jenkins/main.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -19,6 +19,10 @@ provider \"template\" {\n   version = \"= 1.0\"\n }\n \n+provider \"null\" {\n+  version = \"= 1.0\"\n+}\n+\n data \"aws_vpc\" \"dev_vpc\" {\n   tags {\n     Name = \"dev-ecs-workshop\"\n@@ -127,6 +131,10 @@ resource aws_autoscaling_group \"jenkins_asg\" {\n     value               = \"EC2 ASG for jenkins ECS cluster\"\n     propagate_at_launch = true\n   }\n+\n+  timeouts {\n+    delete = \"20m\"\n+  }\n }\n \n resource \"null_resource\" \"rotate-asg-instances\" {"
      },
      {
        "filename": "terraform/vpc-subnets-and-network/dev/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -26,6 +26,6 @@ module \"vpc\" {\n   environment          = \"${local.environment}\"\n   vpc_cidr             = \"172.29.0.0/20\"\n   public_subnet_cidrs  = [\"172.29.0.0/22\", \"172.29.4.0/22\"]\n-  private_subnet_cidrs = [\"172.29.8.0/22\", \"172.29.12.0/22\"]\n+  private_subnet_cidrs = []\n   region               = \"${local.region}\"\n }"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_eip", "remove_nat_gateway", "remove_route_table", "remove_route"],
    "notes": "The commit essentially makes the EIP, NAT gateway, route table and route for a private subnet configurable to (optionally) save costs"
  },
  {
    "url": "https://github.com/amezousan/serverless-blog-in-aws/commit/c130862a29878f0e483551bc115d2ca5bdc4bf5c",
    "files": [
      {
        "filename": "tf-static-website/22-cloudfront-frontend.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -29,7 +29,7 @@ resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n   aliases = [ var.domain_name ]\n \n   default_cache_behavior {\n-    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n+    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n     cached_methods   = [\"GET\", \"HEAD\"]\n     target_origin_id = local.s3_origin_id\n "
      },
      {
        "filename": "tf-static-website/terraform-template.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -18,7 +18,7 @@ aws_account_id = \"<your-value-of>\"\n # ARN for Terraforming (e.g.,) arn:aws:iam::<aws_accound_id>:role/Administrator\n tf_state_role_arn = \"<your-value-of>\"\n \n-# Bucket name that you created by terraforming the tf-init scripts.\n+# Bucket name that you intend to have a static website which is NOT relevant to the tf-init's one.\n aws_s3_bucketname = \"<your-value-of>\"\n \n # Domain name of your website. (e.g.,) example.com"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["aws", "reduce_cloudfront_cache_allowed_methods"],
    "notes": "The commit message mentions that reducing the number of allowed methods for a cloudfront_distribution's default_cache_behavior reduces cost"
  },
  {
    "url": "https://github.com/alphagov/prometheus-aws-configuration-beta/commit/0edcb1dbd7337eab4155be2f2a7683a77cc3cc6d",
    "files": [
      {
        "filename": "terraform/projects/infra-networking/main.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -84,6 +84,8 @@ module \"vpc\" {\n   database_subnets = [\"10.0.201.0/24\", \"10.0.202.0/24\", \"10.0.203.0/24\"]\n \n   enable_nat_gateway = true\n+  single_nat_gateway = \"${var.dev_environment == \"true\" ? true : false }\"\n+\n \n   enable_dns_hostnames = true\n   enable_dns_support   = true"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit only adds a variable; the actual change likely reduces the number of NAT gateways, but this cannot be derived from just the variable change"
  },
  {
    "url": "https://github.com/hmcts/cnp-module-api-mgmt/commit/038d43dc5f17870bc6681e1d8699e0a0951a859e",
    "files": [
      {
        "filename": "main.tf",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -3,7 +3,8 @@ data \"template_file\" \"apimgmttemplate\" {\n }\n \n locals {\n-  name = \"core-api-mgmt-${var.env}\"\n+  name                  = \"core-api-mgmt-${var.env}\"\n+  platform_api_mgmt_sku = \"${var.env == \"prod\" ? \"Premium\" : \"Developer\"}\"\n }\n \n resource \"azurerm_subnet\" \"api-mgmt-subnet\" {\n@@ -31,5 +32,6 @@ resource \"azurerm_template_deployment\" \"api-managment\" {\n     env                                = \"${var.env}\"\n     platform_api_mgmt_name             = \"${local.name}\"\n     platform_api_mgmt_subnetResourceId = \"${azurerm_subnet.api-mgmt-subnet.id}\"\n+    platform_api_mgmt_sku              = \"${local.platform_api_mgmt_sku}\"\n   }\n }"
      },
      {
        "filename": "templates/api-management.json",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -129,14 +129,18 @@\n         \"platform_api_mgmt_subnetResourceId\": {\n             \"defaultValue\": \"\",\n             \"type\": \"String\"\n+        },\n+        \"platform_api_mgmt_sku\": {\n+            \"defaultValue\": \"Developer\",\n+            \"type\": \"String\"\n         }\n     },\n     \"variables\": {},\n     \"resources\": [\n         {\n             \"type\": \"Microsoft.ApiManagement/service\",\n             \"sku\": {\n-                \"name\": \"Developer\",\n+                \"name\": \"[parameters('platform_api_mgmt_sku')]\",\n                 \"capacity\": 1\n             },\n             \"name\": \"[parameters('platform_api_mgmt_name')]\","
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": ["azure", "not_relevant"],
    "notes": "The change actually increases cost by using Premium tier in production instead of Developer tier"
  },
  {
    "url": "https://github.com/dwp/dataworks-aws-data-egress/commit/14f065e5161fee14c286c34df7db9f5516ef9bb6",
    "files": [
      {
        "filename": "cluster_ecs.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -145,4 +145,16 @@ resource \"aws_launch_template\" \"data_egress_server\" {\n       }\n     )\n   }\n+\n+  tag_specifications {\n+    resource_type = \"volume\"\n+\n+    tags = merge(\n+      local.common_tags,\n+      {\n+        Application  = \"data_egress_server\"\n+        Name         = \"data_egress_server\"\n+      }\n+    )\n+  }\n }"
      },
      {
        "filename": "terraform.tf.j2",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -167,7 +167,7 @@ data \"terraform_remote_state\" \"management_dev\" {\n }\n \n provider \"aws\" {\n-  version = \"~> 3.22.0\"\n+  version = \"~> 3.25.0\"\n   region  = var.region\n \n   assume_role {"
      },
      {
        "filename": "variables.tf",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -22,21 +22,21 @@ variable \"data_egress_server_ec2_instance_type\" {\n variable \"data_egress_server_ebs_volume_size\" {\n   type = map(string)\n   default = {\n-    development = \"15000\"\n-    qa          = \"15000\"\n-    integration = \"15000\"\n-    preprod     = \"15000\"\n+    development = \"1000\"\n+    qa          = \"1000\"\n+    integration = \"1000\"\n+    preprod     = \"1000\"\n     production  = \"15000\"\n   }\n }\n variable \"data_egress_server_ebs_volume_type\" {\n   type = map(string)\n   default = {\n-    development = \"gp2\"\n-    qa          = \"gp2\"\n-    integration = \"gp2\"\n-    preprod     = \"gp2\"\n-    production  = \"gp2\"\n+    development = \"gp3\"\n+    qa          = \"gp3\"\n+    integration = \"gp3\"\n+    preprod     = \"gp3\"\n+    production  = \"gp3\"\n   }\n }\n variable \"ecs_hardened_ami_id\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": ["aws", "cheaper_volume", "new_gen", "smaller_disk"],
    "notes": "Move from gp2 to gp3 and reduce size, except in production"
  },
  {
    "url": "https://github.com/UCDenver-ccp/Translator-TM-Provider-Infrastructure-Modules/commit/ddc29467494ee63c323d0eb6493de6e8440c113e",
    "files": [
      {
        "filename": "services/gke/main.tf",
        "additions": 610,
        "deletions": 549,
        "changes": 1159,
        "status": "modified",
        "patch": "@@ -103,7 +103,7 @@ resource \"google_container_node_pool\" \"node_pool\" {\n   initial_node_count = \"1\"\n \n   autoscaling {\n-    min_node_count = \"1\"\n+    min_node_count = \"0\"\n     max_node_count = \"5\"\n   }\n \n@@ -161,11 +161,11 @@ resource \"google_container_node_pool\" \"node_pool_gpu1\" {\n   location = var.location\n   cluster  = module.gke_cluster.name\n \n-  initial_node_count = \"3\"\n+  initial_node_count = \"1\"\n \n   autoscaling {\n     min_node_count = \"0\"\n-    max_node_count = \"12\"\n+    max_node_count = \"100\"\n   }\n \n   management {\n@@ -252,449 +252,22 @@ resource \"google_container_node_pool\" \"node_pool_gpu1\" {\n \n \n # ----------------------------------------------------\n-# create a node pool for the oger-chebi-ext service\n-# ----------------------------------------------------\n-\n-resource \"google_container_node_pool\" \"node-pool-oger-chebi-ext\" {\n-  provider = google-beta\n-\n-  name     = \"private-oger-pool-chebi-ext\"\n-  project  = var.project\n-  location = var.location\n-  cluster  = module.gke_cluster.name\n-\n-  initial_node_count = \"3\"\n-\n-  autoscaling {\n-    min_node_count = \"0\"\n-    max_node_count = \"10\"\n-  }\n-\n-  management {\n-    auto_repair  = \"true\"\n-    auto_upgrade = \"true\"\n-  }\n-\n-  node_config {\n-    image_type   = \"COS\"\n-    machine_type = \"n1-standard-2\" # 7.5 GB RAM\n-\n-    labels = {\n-      private-oger-pool-chebi-ext = \"true\"\n-    }\n-\n-    # Add a private tag to the instances. See the network access tier table for full details:\n-    # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n-    tags = [\n-      data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-chebi-ext\",\n-    ]\n-\n-    disk_size_gb = \"30\"\n-    disk_type    = \"pd-standard\"\n-    preemptible  = false\n-\n-    service_account = module.gke_service_account.email\n-\n-    oauth_scopes = [\n-      \"https://www.googleapis.com/auth/cloud-platform\",\n-    ]\n-  }\n-\n-  lifecycle {\n-    ignore_changes = [initial_node_count]\n-  }\n-\n-  timeouts {\n-    create = \"30m\"\n-    update = \"30m\"\n-    delete = \"30m\"\n-  }\n-}\n-\n-# ----------------------------------------------------\n-# create a node pool for the oger-cl-ext service\n+# create a node pool for the non-GPU services\n # ----------------------------------------------------\n \n-resource \"google_container_node_pool\" \"node-pool-oger-cl-ext\" {\n+resource \"google_container_node_pool\" \"node-pool-oger\" {\n   provider = google-beta\n \n-  name     = \"private-oger-pool-cl-ext\"\n+  name     = \"private-oger-pool\"\n   project  = var.project\n   location = var.location\n   cluster  = module.gke_cluster.name\n \n-  initial_node_count = \"3\"\n-\n-  autoscaling {\n-    min_node_count = \"0\"\n-    max_node_count = \"10\"\n-  }\n-\n-  management {\n-    auto_repair  = \"true\"\n-    auto_upgrade = \"true\"\n-  }\n-\n-  node_config {\n-    image_type   = \"COS\"\n-    machine_type = \"n1-standard-2\" # 7.5 GB RAM\n-\n-    labels = {\n-      private-oger-pool-cl-ext = \"true\"\n-    }\n-\n-    # Add a private tag to the instances. See the network access tier table for full details:\n-    # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n-    tags = [\n-      data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-cl-ext\",\n-    ]\n-\n-    disk_size_gb = \"30\"\n-    disk_type    = \"pd-standard\"\n-    preemptible  = false\n-\n-    service_account = module.gke_service_account.email\n-\n-    oauth_scopes = [\n-      \"https://www.googleapis.com/auth/cloud-platform\",\n-    ]\n-  }\n-\n-  lifecycle {\n-    ignore_changes = [initial_node_count]\n-  }\n-\n-  timeouts {\n-    create = \"30m\"\n-    update = \"30m\"\n-    delete = \"30m\"\n-  }\n-}\n-\n-# ----------------------------------------------------\n-# create a node pool for the oger-go-bp-ext service\n-# ----------------------------------------------------\n-\n-resource \"google_container_node_pool\" \"node-pool-oger-go-bp-ext\" {\n-  provider = google-beta\n-\n-  name     = \"private-oger-pool-go-bp-ext\"\n-  project  = var.project\n-  location = var.location\n-  cluster  = module.gke_cluster.name\n-\n-  initial_node_count = \"3\"\n-\n-  autoscaling {\n-    min_node_count = \"0\"\n-    max_node_count = \"10\"\n-  }\n-\n-  management {\n-    auto_repair  = \"true\"\n-    auto_upgrade = \"true\"\n-  }\n-\n-  node_config {\n-    image_type   = \"COS\"\n-    machine_type = \"n1-standard-2\" # 7.5 GB RAM\n-\n-    labels = {\n-      private-oger-pool-go-bp-ext = \"true\"\n-    }\n-\n-    # Add a private tag to the instances. See the network access tier table for full details:\n-    # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n-    tags = [\n-      data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-go-bp-ext\",\n-    ]\n-\n-    disk_size_gb = \"30\"\n-    disk_type    = \"pd-standard\"\n-    preemptible  = false\n-\n-    service_account = module.gke_service_account.email\n-\n-    oauth_scopes = [\n-      \"https://www.googleapis.com/auth/cloud-platform\",\n-    ]\n-  }\n-\n-  lifecycle {\n-    ignore_changes = [initial_node_count]\n-  }\n-\n-  timeouts {\n-    create = \"30m\"\n-    update = \"30m\"\n-    delete = \"30m\"\n-  }\n-}\n-\n-# ----------------------------------------------------\n-# create a node pool for the oger-go-cc-ext service\n-# ----------------------------------------------------\n-\n-resource \"google_container_node_pool\" \"node-pool-oger-go-cc-ext\" {\n-  provider = google-beta\n-\n-  name     = \"private-oger-pool-go-cc-ext\"\n-  project  = var.project\n-  location = var.location\n-  cluster  = module.gke_cluster.name\n-\n-  initial_node_count = \"3\"\n-\n-  autoscaling {\n-    min_node_count = \"0\"\n-    max_node_count = \"10\"\n-  }\n-\n-  management {\n-    auto_repair  = \"true\"\n-    auto_upgrade = \"true\"\n-  }\n-\n-  node_config {\n-    image_type   = \"COS\"\n-    machine_type = \"n1-standard-2\" # 7.5 GB RAM\n-\n-    labels = {\n-      private-oger-pool-go-cc-ext = \"true\"\n-    }\n-\n-    # Add a private tag to the instances. See the network access tier table for full details:\n-    # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n-    tags = [\n-      data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-go-cc-ext\",\n-    ]\n-\n-    disk_size_gb = \"30\"\n-    disk_type    = \"pd-standard\"\n-    preemptible  = false\n-\n-    service_account = module.gke_service_account.email\n-\n-    oauth_scopes = [\n-      \"https://www.googleapis.com/auth/cloud-platform\",\n-    ]\n-  }\n-\n-  lifecycle {\n-    ignore_changes = [initial_node_count]\n-  }\n-\n-  timeouts {\n-    create = \"30m\"\n-    update = \"30m\"\n-    delete = \"30m\"\n-  }\n-}\n-\n-# ----------------------------------------------------\n-# create a node pool for the oger-go-mf-ext service\n-# ----------------------------------------------------\n-\n-resource \"google_container_node_pool\" \"node-pool-oger-go-mf-ext\" {\n-  provider = google-beta\n-\n-  name     = \"private-oger-pool-go-mf-ext\"\n-  project  = var.project\n-  location = var.location\n-  cluster  = module.gke_cluster.name\n-\n-  initial_node_count = \"3\"\n-\n-  autoscaling {\n-    min_node_count = \"0\"\n-    max_node_count = \"10\"\n-  }\n-\n-  management {\n-    auto_repair  = \"true\"\n-    auto_upgrade = \"true\"\n-  }\n-\n-  node_config {\n-    image_type   = \"COS\"\n-    machine_type = \"n1-standard-2\" # 7.5 GB RAM\n-\n-    labels = {\n-      private-oger-pool-go-mf-ext = \"true\"\n-    }\n-\n-    # Add a private tag to the instances. See the network access tier table for full details:\n-    # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n-    tags = [\n-      data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-go-mf-ext\",\n-    ]\n-\n-    disk_size_gb = \"30\"\n-    disk_type    = \"pd-standard\"\n-    preemptible  = false\n-\n-    service_account = module.gke_service_account.email\n-\n-    oauth_scopes = [\n-      \"https://www.googleapis.com/auth/cloud-platform\",\n-    ]\n-  }\n-\n-  lifecycle {\n-    ignore_changes = [initial_node_count]\n-  }\n-\n-  timeouts {\n-    create = \"30m\"\n-    update = \"30m\"\n-    delete = \"30m\"\n-  }\n-}\n-\n-# ----------------------------------------------------\n-# create a node pool for the oger-mop-ext service\n-# ----------------------------------------------------\n-\n-resource \"google_container_node_pool\" \"node-pool-oger-mop-ext\" {\n-  provider = google-beta\n-\n-  name     = \"private-oger-pool-mop-ext\"\n-  project  = var.project\n-  location = var.location\n-  cluster  = module.gke_cluster.name\n-\n-  initial_node_count = \"3\"\n-\n-  autoscaling {\n-    min_node_count = \"0\"\n-    max_node_count = \"10\"\n-  }\n-\n-  management {\n-    auto_repair  = \"true\"\n-    auto_upgrade = \"true\"\n-  }\n-\n-  node_config {\n-    image_type   = \"COS\"\n-    machine_type = \"n1-standard-2\" # 7.5 GB RAM\n-\n-    labels = {\n-      private-oger-pool-mop-ext = \"true\"\n-    }\n-\n-    # Add a private tag to the instances. See the network access tier table for full details:\n-    # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n-    tags = [\n-      data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-mop-ext\",\n-    ]\n-\n-    disk_size_gb = \"30\"\n-    disk_type    = \"pd-standard\"\n-    preemptible  = false\n-\n-    service_account = module.gke_service_account.email\n-\n-    oauth_scopes = [\n-      \"https://www.googleapis.com/auth/cloud-platform\",\n-    ]\n-  }\n-\n-  lifecycle {\n-    ignore_changes = [initial_node_count]\n-  }\n-\n-  timeouts {\n-    create = \"30m\"\n-    update = \"30m\"\n-    delete = \"30m\"\n-  }\n-}\n-\n-# ----------------------------------------------------\n-# create a node pool for the oger-ncbitaxon-ext service\n-# ----------------------------------------------------\n-\n-resource \"google_container_node_pool\" \"node-pool-oger-ncbitaxon-ext\" {\n-  provider = google-beta\n-\n-  name     = \"private-oger-pool-ncbitaxon-ext\"\n-  project  = var.project\n-  location = var.location\n-  cluster  = module.gke_cluster.name\n-\n-  initial_node_count = \"3\"\n-\n-  autoscaling {\n-    min_node_count = \"0\"\n-    max_node_count = \"10\"\n-  }\n-\n-  management {\n-    auto_repair  = \"true\"\n-    auto_upgrade = \"true\"\n-  }\n-\n-  node_config {\n-    image_type   = \"COS\"\n-    machine_type = \"n1-standard-4\" # 15 GB RAM\n-\n-    labels = {\n-      private-oger-pool-ncbitaxon-ext = \"true\"\n-    }\n-\n-    # Add a private tag to the instances. See the network access tier table for full details:\n-    # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n-    tags = [\n-      data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-ncbitaxon-ext\",\n-    ]\n-\n-    disk_size_gb = \"30\"\n-    disk_type    = \"pd-standard\"\n-    preemptible  = false\n-\n-    service_account = module.gke_service_account.email\n-\n-    oauth_scopes = [\n-      \"https://www.googleapis.com/auth/cloud-platform\",\n-    ]\n-  }\n-\n-  lifecycle {\n-    ignore_changes = [initial_node_count]\n-  }\n-\n-  timeouts {\n-    create = \"30m\"\n-    update = \"30m\"\n-    delete = \"30m\"\n-  }\n-}\n-\n-# ----------------------------------------------------\n-# create a node pool for the oger-pr-ext service\n-# ----------------------------------------------------\n-\n-resource \"google_container_node_pool\" \"node-pool-oger-pr-ext\" {\n-  provider = google-beta\n-\n-  name     = \"private-oger-pool-pr-ext\"\n-  project  = var.project\n-  location = var.location\n-  cluster  = module.gke_cluster.name\n-\n-  initial_node_count = \"3\"\n+  initial_node_count = \"1\"\n \n   autoscaling {\n     min_node_count = \"0\"\n-    max_node_count = \"10\"\n+    max_node_count = \"125\"\n   }\n \n   management {\n@@ -707,75 +280,14 @@ resource \"google_container_node_pool\" \"node-pool-oger-pr-ext\" {\n     machine_type = \"n1-standard-4\" # 15 GB RAM\n \n     labels = {\n-      private-oger-pool-pr-ext = \"true\"\n-    }\n-\n-    # Add a private tag to the instances. See the network access tier table for full details:\n-    # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n-    tags = [\n-      data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-pr-ext\",\n-    ]\n-\n-    disk_size_gb = \"30\"\n-    disk_type    = \"pd-standard\"\n-    preemptible  = false\n-\n-    service_account = module.gke_service_account.email\n-\n-    oauth_scopes = [\n-      \"https://www.googleapis.com/auth/cloud-platform\",\n-    ]\n-  }\n-\n-  lifecycle {\n-    ignore_changes = [initial_node_count]\n-  }\n-\n-  timeouts {\n-    create = \"30m\"\n-    update = \"30m\"\n-    delete = \"30m\"\n-  }\n-}\n-\n-# ----------------------------------------------------\n-# create a node pool for the oger-so-ext service\n-# ----------------------------------------------------\n-\n-resource \"google_container_node_pool\" \"node-pool-oger-so-ext\" {\n-  provider = google-beta\n-\n-  name     = \"private-oger-pool-so-ext\"\n-  project  = var.project\n-  location = var.location\n-  cluster  = module.gke_cluster.name\n-\n-  initial_node_count = \"3\"\n-\n-  autoscaling {\n-    min_node_count = \"0\"\n-    max_node_count = \"10\"\n-  }\n-\n-  management {\n-    auto_repair  = \"true\"\n-    auto_upgrade = \"true\"\n-  }\n-\n-  node_config {\n-    image_type   = \"COS\"\n-    machine_type = \"n1-standard-2\" # 7.5 GB RAM\n-\n-    labels = {\n-      private-oger-pool-so-ext = \"true\"\n+      private-oger-pool = \"true\"\n     }\n \n     # Add a private tag to the instances. See the network access tier table for full details:\n     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n     tags = [\n       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-so-ext\",\n+      \"private-oger-pool\",\n     ]\n \n     disk_size_gb = \"30\"\n@@ -800,66 +312,615 @@ resource \"google_container_node_pool\" \"node-pool-oger-so-ext\" {\n   }\n }\n \n-# ----------------------------------------------------\n-# create a node pool for the oger-uberon-ext service\n-# ----------------------------------------------------\n-\n-resource \"google_container_node_pool\" \"node-pool-oger-uberon-ext\" {\n-  provider = google-beta\n-\n-  name     = \"private-oger-pool-uberon-ext\"\n-  project  = var.project\n-  location = var.location\n-  cluster  = module.gke_cluster.name\n-\n-  initial_node_count = \"3\"\n-\n-  autoscaling {\n-    min_node_count = \"0\"\n-    max_node_count = \"10\"\n-  }\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-chebi-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-chebi-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-chebi-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-2\" # 7.5 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-chebi-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-chebi-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n-  management {\n-    auto_repair  = \"true\"\n-    auto_upgrade = \"true\"\n-  }\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-cl-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-cl-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-cl-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-2\" # 7.5 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-cl-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-cl-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n-  node_config {\n-    image_type   = \"COS\"\n-    machine_type = \"n1-standard-2\" # 7.5 GB RAM\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-go-bp-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-go-bp-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-go-bp-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-2\" # 7.5 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-go-bp-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-go-bp-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n-    labels = {\n-      private-oger-pool-uberon-ext = \"true\"\n-    }\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-go-cc-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-go-cc-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-go-cc-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-2\" # 7.5 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-go-cc-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-go-cc-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n-    # Add a private tag to the instances. See the network access tier table for full details:\n-    # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n-    tags = [\n-      data.terraform_remote_state.vpc.outputs.vpc_network.private,\n-      \"private-oger-pool-uberon-ext\",\n-    ]\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-go-mf-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-go-mf-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-go-mf-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-2\" # 7.5 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-go-mf-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-go-mf-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n-    disk_size_gb = \"30\"\n-    disk_type    = \"pd-standard\"\n-    preemptible  = false\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-mop-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-mop-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-mop-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-2\" # 7.5 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-mop-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-mop-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n-    service_account = module.gke_service_account.email\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-ncbitaxon-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-ncbitaxon-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-ncbitaxon-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-4\" # 15 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-ncbitaxon-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-ncbitaxon-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n-    oauth_scopes = [\n-      \"https://www.googleapis.com/auth/cloud-platform\",\n-    ]\n-  }\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-pr-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-pr-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-pr-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-4\" # 15 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-pr-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-pr-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n-  lifecycle {\n-    ignore_changes = [initial_node_count]\n-  }\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-so-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-so-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-so-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-2\" # 7.5 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-so-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-so-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n-  timeouts {\n-    create = \"30m\"\n-    update = \"30m\"\n-    delete = \"30m\"\n-  }\n-}\n+# # ----------------------------------------------------\n+# # create a node pool for the oger-uberon-ext service\n+# # ----------------------------------------------------\n+\n+# resource \"google_container_node_pool\" \"node-pool-oger-uberon-ext\" {\n+#   provider = google-beta\n+\n+#   name     = \"private-oger-pool-uberon-ext\"\n+#   project  = var.project\n+#   location = var.location\n+#   cluster  = module.gke_cluster.name\n+\n+#   initial_node_count = \"3\"\n+\n+#   autoscaling {\n+#     min_node_count = \"0\"\n+#     max_node_count = \"10\"\n+#   }\n+\n+#   management {\n+#     auto_repair  = \"true\"\n+#     auto_upgrade = \"true\"\n+#   }\n+\n+#   node_config {\n+#     image_type   = \"COS\"\n+#     machine_type = \"n1-standard-2\" # 7.5 GB RAM\n+\n+#     labels = {\n+#       private-oger-pool-uberon-ext = \"true\"\n+#     }\n+\n+#     # Add a private tag to the instances. See the network access tier table for full details:\n+#     # https://github.com/gruntwork-io/terraform-google-network/tree/master/modules/vpc-network#access-tier\n+#     tags = [\n+#       data.terraform_remote_state.vpc.outputs.vpc_network.private,\n+#       \"private-oger-pool-uberon-ext\",\n+#     ]\n+\n+#     disk_size_gb = \"30\"\n+#     disk_type    = \"pd-standard\"\n+#     preemptible  = false\n+\n+#     service_account = module.gke_service_account.email\n+\n+#     oauth_scopes = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#     ]\n+#   }\n+\n+#   lifecycle {\n+#     ignore_changes = [initial_node_count]\n+#   }\n+\n+#   timeouts {\n+#     create = \"30m\"\n+#     update = \"30m\"\n+#     delete = \"30m\"\n+#   }\n+# }\n \n \n "
      },
      {
        "filename": "services/k8s/oger/oger-chebi-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -75,7 +75,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-chebi-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      },
      {
        "filename": "services/k8s/oger/oger-cl-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-cl-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      },
      {
        "filename": "services/k8s/oger/oger-go-bp-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-go-bp-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      },
      {
        "filename": "services/k8s/oger/oger-go-cc-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-go-cc-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      },
      {
        "filename": "services/k8s/oger/oger-go-mf-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-go-mf-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      },
      {
        "filename": "services/k8s/oger/oger-mop-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-mop-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      },
      {
        "filename": "services/k8s/oger/oger-ncbitaxon-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-ncbitaxon-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      },
      {
        "filename": "services/k8s/oger/oger-pr-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-pr-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      },
      {
        "filename": "services/k8s/oger/oger-so-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-so-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      },
      {
        "filename": "services/k8s/oger/oger-uberon-ext/values.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ resources: {}\n   #   memory: 128Mi\n \n nodeSelector: {\n-  private-oger-pool-uberon-ext: \"true\"\n+  private-oger-pool: \"true\"\n }\n \n tolerations: []"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["gcp", "reduce_node_pools"],
    "notes": "The commit consolidates GKE container node pools into one larger node pool to save cost"
  },
  {
    "url": "https://github.com/emyasa/hashicorp-consul-setup/commit/0c38902905b96c598715a08d5c3880ad01ce5fea",
    "files": [
      {
        "filename": "ec2.tf",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "status": "modified",
        "patch": "@@ -2,8 +2,16 @@ data \"template_file\" \"server_user_data\" {\n   template = file(\"${path.module}/scripts/server.sh\")\n }\n \n-data \"template_file\" \"client_user_data\" {\n-  template = file(\"${path.module}/scripts/client.sh\")\n+data \"template_file\" \"client_api_user_data\" {\n+  template = file(\"${path.module}/scripts/client-api.sh\")\n+  vars = {\n+    project_tag       = \"Project\"\n+    project_tag_value = \"${var.main_project_tag}\"\n+  }\n+}\n+\n+data \"template_file\" \"client_web_user_data\" {\n+  template = file(\"${path.module}/scripts/client-web.sh\")\n   vars = {\n     project_tag       = \"Project\"\n     project_tag_value = \"${var.main_project_tag}\"\n@@ -14,14 +22,17 @@ resource \"aws_instance\" \"bastion\" {\n   ami                         = var.ami_id\n   instance_type               = \"t2.nano\"\n   key_name                    = var.ec2_key_pair_name\n-  vpc_security_group_ids      = [aws_security_group.bastion.id]\n+  vpc_security_group_ids      = [aws_security_group.bastion.id, aws_security_group.consul_client.id]\n   subnet_id                   = aws_subnet.public[0].id\n   associate_public_ip_address = true\n+  iam_instance_profile        = aws_iam_instance_profile.consul_instance_profile.name\n \n   tags = merge(\n     { \"Name\" = \"${var.main_project_tag}-bastion\" },\n     { \"Project\" = var.main_project_tag }\n   )\n+\n+  user_data = data.template_file.client_web_user_data.rendered\n }\n \n resource \"aws_instance\" \"consul_server\" {\n@@ -52,5 +63,5 @@ resource \"aws_instance\" \"consul_client\" {\n     { \"Project\" = var.main_project_tag }\n   )\n \n-  user_data = data.template_file.client_user_data.rendered\n+  user_data = data.template_file.client_api_user_data.rendered\n }\n\\ No newline at end of file"
      },
      {
        "filename": "scripts/client-api.sh",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "status": "added",
        "patch": "@@ -0,0 +1,77 @@\n+#!/bin/bash\n+\n+# Download and Install Consul\n+curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -\n+apt-add-repository \"deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main\"\n+apt-get update && sudo apt-get install consul\n+\n+# Grab instance IP\n+local_ip=`ip -o route get to 169.254.169.254 | sed -n 's/.*src \\([0-9.]\\+\\).*/\\1/p'`\n+\n+# Modify the default consul.hcl file\n+cat > /etc/consul.d/consul.hcl <<- EOF\n+data_dir = \"/opt/consul\"\n+\n+client_addr = \"0.0.0.0\"\n+\n+bind_addr = \"0.0.0.0\"\n+\n+advertise_addr = \"$local_ip\"\n+\n+retry_join = [\"provider=aws tag_key=\\\"${project_tag}\\\" tag_value=\\\"${project_tag_value}\\\"\"]\n+EOF\n+\n+# Start Consul\n+systemctl start consul\n+\n+# Download and install Fake Service\n+curl -LO https://github.com/nicholasjackson/fake-service/releases/download/v0.22.7/fake_service_linux_amd64.zip\n+unzip fake_service_linux_amd64.zip\n+mv fake-service /usr/local/bin\n+chmod +x /usr/local/bin/fake-service\n+\n+# Fake Service Systemd Unit File\n+cat > /etc/systemd/system/api.service <<- EOF\n+[Unit]\n+Description=API\n+After=syslog.target network.target\n+\n+[Service]\n+Environment=\"MESSAGE=api\"\n+Environment=\"NAME=api\"\n+ExecStart=/usr/local/bin/fake-service\n+ExecStop=/bin/sleep 5\n+Restart=always\n+\n+[Install]\n+WantedBy=multi-user.target\n+EOF\n+\n+# Reload unit files and start the API\n+systemctl daemon-reload\n+systemctl start api\n+\n+# Consul Service Definition: \n+# Consul Config file for our fake API service\n+cat > /etc/consul.d/api.hcl <<- EOF\n+service {\n+  name = \"api\"\n+  port = 9090\n+}\n+EOF\n+\n+systemctl restart consul\n+\n+# Point DNS to Consul's DNS \n+cat > /etc/systemd/resolved.conf.d/consul.conf <<- EOF\n+[Resolve]\n+DNS=127.0.0.1\n+Domains=~consul\n+EOF\n+\n+# Redirect the traffic from port 53 to 8600 (Consul's DNS port)\n+iptables --table nat --append OUTPUT --destination localhost --protocol udp --match udp --dport 53 --jump REDIRECT --to-ports 8600\n+iptables --table nat --append OUTPUT --destination localhost --protocol tcp --match tcp --dport 53 --jump REDIRECT --to-ports 8600\n+\n+# Restart systemd-resolved so that above DNS changes take effect\n+systemctl restart systemd-resolved\n\\ No newline at end of file"
      },
      {
        "filename": "scripts/client-web.sh",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "status": "added",
        "patch": "@@ -0,0 +1,77 @@\n+#!/bin/bash\n+\n+# Download and Install Consul\n+curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -\n+apt-add-repository \"deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main\"\n+apt-get update && sudo apt-get install consul\n+\n+# Grab instance IP\n+local_ip=`ip -o route get to 169.254.169.254 | sed -n 's/.*src \\([0-9.]\\+\\).*/\\1/p'`\n+\n+# Modify the default consul.hcl file\n+cat > /etc/consul.d/consul.hcl <<- EOF\n+data_dir = \"/opt/consul\"\n+\n+client_addr = \"0.0.0.0\"\n+\n+bind_addr = \"0.0.0.0\"\n+\n+advertise_addr = \"$local_ip\"\n+\n+retry_join = [\"provider=aws tag_key=\\\"${project_tag}\\\" tag_value=\\\"${project_tag_value}\\\"\"]\n+EOF\n+\n+# Start Consul\n+systemctl start consul\n+\n+# Download and install Fake Service\n+curl -LO https://github.com/nicholasjackson/fake-service/releases/download/v0.22.7/fake_service_linux_amd64.zip\n+unzip fake_service_linux_amd64.zip\n+mv fake-service /usr/local/bin\n+chmod +x /usr/local/bin/fake-service\n+\n+# Fake Service Systemd Unit File\n+cat > /etc/systemd/system/api.service <<- EOF\n+[Unit]\n+Description=Web\n+After=syslog.target network.target\n+\n+[Service]\n+Environment=\"MESSAGE=web\"\n+Environment=\"NAME=web\"\n+ExecStart=/usr/local/bin/fake-service\n+ExecStop=/bin/sleep 5\n+Restart=always\n+\n+[Install]\n+WantedBy=multi-user.target\n+EOF\n+\n+# Reload unit files and start the API\n+systemctl daemon-reload\n+systemctl start api\n+\n+# Consul Service Definition: \n+# Consul Config file for our fake API service\n+cat > /etc/consul.d/api.hcl <<- EOF\n+service {\n+  name = \"web\"\n+  port = 9090\n+}\n+EOF\n+\n+systemctl restart consul\n+\n+# Point DNS to Consul's DNS \n+cat > /etc/systemd/resolved.conf.d/consul.conf <<- EOF\n+[Resolve]\n+DNS=127.0.0.1\n+Domains=~consul\n+EOF\n+\n+# Redirect the traffic from port 53 to 8600 (Consul's DNS port)\n+iptables --table nat --append OUTPUT --destination localhost --protocol udp --match udp --dport 53 --jump REDIRECT --to-ports 8600\n+iptables --table nat --append OUTPUT --destination localhost --protocol tcp --match tcp --dport 53 --jump REDIRECT --to-ports 8600\n+\n+# Restart systemd-resolved so that above DNS changes take effect\n+systemctl restart systemd-resolved\n\\ No newline at end of file"
      },
      {
        "filename": "scripts/client.sh",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "status": "removed",
        "patch": "@@ -1,20 +0,0 @@\n-#!/bin/bash\n-\n-# Download and Install Consul\n-curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -\n-apt-add-repository \"deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main\"\n-apt-get update && sudo apt-get install consul\n-\n-# Modify the default consul.hcl file\n-cat > /etc/consul.d/consul.hcl <<- EOF\n-data_dir = \"/opt/consul\"\n-\n-client_addr = \"0.0.0.0\"\n-\n-bind_addr = \"0.0.0.0\"\n-\n-retry_join = [\"provider=aws tag_key=\\\"${project_tag}\\\" tag_value=\\\"${project_tag_value}\\\"\"]\n-EOF\n-\n-# Start Consul\n-systemctl start consul\n\\ No newline at end of file"
      },
      {
        "filename": "vpc-security-groups.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -148,16 +148,6 @@ resource \"aws_security_group\" \"consul_client\" {\n   )\n }\n \n-resource \"aws_security_group_rule\" \"consul_client_allow_8500\" {\n-  security_group_id        = aws_security_group.consul_client.id\n-  type                     = \"ingress\"\n-  protocol                 = \"tcp\"\n-  from_port                = 8500\n-  to_port                  = 8500\n-  source_security_group_id = aws_security_group.load_balancer.id\n-  description              = \"Allow traffic from Load Balancer.\"\n-}\n-\n resource \"aws_security_group_rule\" \"consul_client_allow_22_bastion\" {\n   security_group_id        = aws_security_group.consul_client.id\n   type                     = \"ingress\""
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/circleci/enterprise-setup/commit/26cc5295c2bb9d8756e450712e0f5f75af440c4a",
    "files": [
      {
        "filename": "terraform.tfvars-dev.template",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -4,9 +4,9 @@ aws_region = \"...\"\n aws_vpc_id = \"...\"\n aws_subnet_id = \"...\"\n aws_ssh_key_name = \"...\"\n-services_instance_type = \"m4.2xlarge\"\n-builder_instance_type = \"t2.2xlarge\"\n-nomad_client_instance_type = \"t2.2xlarge\"\n+services_instance_type = \"t3.2xlarge\"\n+builder_instance_type = \"t3.2xlarge\"\n+nomad_client_instance_type = \"t3.2xlarge\"\n desired_builders_count = \"1\"\n \n # Passphrase used for encryping/decrypting secrets\u2014must not be blank"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from m4.2xlarge to t3.2xlarge, t2.2xlarge to t3.2xlarge"
  },
  {
    "url": "https://github.com/linuxlsr/azureLearning/commit/163a9de084161e21cb62c19033b4bff7d3a5e649",
    "files": [
      {
        "filename": "key-vault.tf",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -1,17 +1,17 @@\n resource \"azurerm_key_vault\" \"key_vault\" {\r\n-  location            = var.location\r\n-  name                = \"firstkvlinuxlsr\"\r\n-  resource_group_name = azurerm_resource_group.first_rg.name\r\n-  tenant_id           = var.tenant_id\r\n-  sku_name            = \"standard\"\r\n+  location                    = var.location\r\n+  name                        = \"firstkvlinuxlsr\"\r\n+  resource_group_name         = azurerm_resource_group.first_rg.name\r\n+  tenant_id                   = var.tenant_id\r\n+  sku_name                    = \"standard\"\r\n   enabled_for_disk_encryption = true\r\n   tags = merge({\r\n     Name = \"test key vault\" },\r\n-    local.common_tags)\r\n+  local.common_tags)\r\n }\r\n \r\n #access policy for key vault\r\n-resource \"azurerm_key_vault_access_policy\" \"local_acess\" {\r\n-  object_id = \"\"\r\n-  tenant_id = var.tenant_id\r\n-}\n\\ No newline at end of file\n+//resource \"azurerm_key_vault_access_policy\" \"local_acess\" {\r\n+//  object_id = \"\"\r\n+//  tenant_id = var.tenant_id\r\n+//}\n\\ No newline at end of file"
      },
      {
        "filename": "monitoring.tf",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "status": "added",
        "patch": "@@ -0,0 +1,69 @@\n+//resource \"azurerm_monitor_action_group\" \"first_action_group\" {\r\n+//  name                = \"first_action_group\"\r\n+//  resource_group_name = azurerm_resource_group.first_rg.name\r\n+//  short_name          = \"1ag\"\r\n+//  enabled             = var.action_group_active\r\n+//}\r\n+//\r\n+////resource \"azurerm_monitor_metric_alert\" \"first_metric_alert\" {\r\n+////  name = \"first_metric_alert\"\r\n+////  resource_group_name = azurerm_resource_group.first_rg.name\r\n+////  scopes = []\r\n+////  criteria {\r\n+////    aggregation = \"\"\r\n+////    metric_name = \"\"\r\n+////    metric_namespace = \"\"\r\n+////    operator = \"\"\r\n+////    threshold = 0\r\n+////  }\r\n+////  action {\r\n+////    action_group_id = azurerm_monitor_action_group.first_action_group.id\r\n+////  }\r\n+////}\r\n+//\r\n+//resource \"azurerm_log_analytics_workspace\" \"first_oms_workspace\" {\r\n+//  location            = var.location\r\n+//  name                = \"linuxlsromsworkspace\"\r\n+//  resource_group_name = azurerm_resource_group.first_rg.name\r\n+//  sku                 = \"Standard\"\r\n+//  retention_in_days   = 30\r\n+//}\r\n+//\r\n+//resource \"azurerm_monitor_action_group\" \"first_mon_action_group\" {\r\n+//  name                = \"f_mag\"\r\n+//  resource_group_name = azurerm_resource_group.tfstate.name\r\n+//  short_name          = \"f_mag\"\r\n+//}\r\n+//\r\n+////resource \"azurerm_monitor_scheduled_query_rules_log\" \"first_query_rule\" {\r\n+////  location            = var.location\r\n+////  name                = \"first_query_rule\"\r\n+////  resource_group_name = azurerm_resource_group.first_rg.name\r\n+////\r\n+////  criteria {\r\n+////    metric_name = \"Average+% Idle Time\"\r\n+////    dimensions {\r\n+////      name     = \"Computer\"\r\n+////      operator = \"Include\"\r\n+////      values   = [azurerm_linux_virtual_machine.testing.name]\r\n+////    }\r\n+////  }\r\n+////\r\n+////  data_source_id = azurerm_log_analytics_workspace.first_oms_workspace.id\r\n+////  description    = \"Scheduled query rule LogToMetric example\"\r\n+////  enabled        = true\r\n+////}\r\n+//\r\n+//resource \"azurerm_monitor_metric_alert\" \"vm_metric_alert\" {\r\n+//  name                = \"${azurerm_linux_virtual_machine.testing.name}_metric_alert\"\r\n+//  resource_group_name = azurerm_resource_group.tfstate.name\r\n+//  scopes              = [azurerm_log_analytics_workspace.first_oms_workspace.id]\r\n+//  criteria {\r\n+//    aggregation      = \"Average\"\r\n+//    metric_name      = \"test_log\"\r\n+//    metric_namespace = \"Microsoft.OperationalInsights/workspaces\"\r\n+//    operator         = \"GreaterThan\"\r\n+//    threshold        = 1\r\n+//  }\r\n+//\r\n+//}\n\\ No newline at end of file"
      },
      {
        "filename": "outputs.tf",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "status": "modified",
        "patch": "@@ -0,0 +1,35 @@\n+//output \"key_vault_name\" {\r\n+//  value = azurerm_key_vault.key_vault.name\r\n+//}\r\n+//\r\n+//output \"first_action_group\" {\r\n+//  value = azurerm_monitor_action_group.first_action_group.name\r\n+//}\r\n+//\r\n+//output \"vpc_name\" {\r\n+//  value = azurerm_virtual_network.virtual_network_1.name\r\n+//}\r\n+//\r\n+//output \"rg\" {\r\n+//  value = azurerm_resource_group.first_rg.name\r\n+//}\r\n+//\r\n+//output \"state_rg\" {\r\n+//  value = azurerm_resource_group.tfstate.name\r\n+//}\r\n+//\r\n+//output \"sec_group\" {\r\n+//  value = azurerm_network_security_group.test_vm_sg.name\r\n+//}\r\n+//\r\n+//output \"vm_name\" {\r\n+//  value = azurerm_linux_virtual_machine.testing.name\r\n+//}\r\n+//\r\n+//output \"vm_public_ip\" {\r\n+//  value = azurerm_public_ip.test_ip.ip_address\r\n+//}\r\n+//\r\n+//output \"oms_workspace_name\" {\r\n+//  value = azurerm_log_analytics_workspace.first_oms_workspace.name\r\n+//}\n\\ No newline at end of file"
      },
      {
        "filename": "variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -56,3 +56,7 @@ variable \"vmsize\" {\n   default     = \"Standard_B1ms\"\r\n }\r\n \r\n+variable \"action_group_active\" {\r\n+  description = \"switch to enable / diable action group alerting\"\r\n+  default     = false\r\n+}\r"
      },
      {
        "filename": "virtual-machine.tf",
        "additions": 54,
        "deletions": 54,
        "changes": 108,
        "status": "modified",
        "patch": "@@ -1,54 +1,54 @@\n-# an EC2 instance\r\n-resource \"azurerm_linux_virtual_machine\" \"testing\" {\r\n-  name                  = \"test\"\r\n-  location              = var.location\r\n-  resource_group_name   = azurerm_resource_group.first_rg.name\r\n-  network_interface_ids = [azurerm_network_interface.test_vm_nic.id]\r\n-  size                  = var.vmsize\r\n-  admin_username        = \"linuxlsr\"\r\n-  os_disk {\r\n-    caching              = \"ReadWrite\"\r\n-    storage_account_type = \"Standard_LRS\"\r\n-  }\r\n-\r\n-  admin_ssh_key {\r\n-    username   = \"linuxlsr\"\r\n-    public_key = file(\"id_rsa.pub\")\r\n-  }\r\n-  source_image_reference {\r\n-    publisher = \"Canonical\"\r\n-    offer     = \"UbuntuServer\"\r\n-    sku       = \"16.04.0-LTS\"\r\n-    version   = \"latest\"\r\n-  }\r\n-\r\n-  tags = merge({\r\n-    Name = \"test vm\" },\r\n-  local.common_tags)\r\n-\r\n-}\r\n-\r\n-resource \"azurerm_public_ip\" \"test_ip\" {\r\n-  location            = var.location\r\n-  name                = \"${var.application}_${var.environment}_test_vm_ip\"\r\n-  resource_group_name = azurerm_resource_group.first_rg.name\r\n-  allocation_method   = \"Static\"\r\n-  tags = merge({\r\n-    Name = \"test ip\" },\r\n-  local.common_tags)\r\n-}\r\n-\r\n-resource \"azurerm_network_interface\" \"test_vm_nic\" {\r\n-  location            = var.location\r\n-  name                = \"${var.application}_${var.environment}_test_nic\"\r\n-  resource_group_name = azurerm_resource_group.first_rg.name\r\n-  ip_configuration {\r\n-    name                          = \"${var.application}_${var.environment}_test_ip\"\r\n-    private_ip_address_allocation = \"Dynamic\"\r\n-    subnet_id                     = azurerm_subnet.subnet_0.id\r\n-    public_ip_address_id          = azurerm_public_ip.test_ip.id\r\n-  }\r\n-  tags = merge({\r\n-    Name = \"test vm nic\" },\r\n-  local.common_tags)\r\n-}\n\\ No newline at end of file\n+//# an EC2 instance\r\n+//resource \"azurerm_linux_virtual_machine\" \"testing\" {\r\n+//  name                  = \"test\"\r\n+//  location              = var.location\r\n+//  resource_group_name   = azurerm_resource_group.first_rg.name\r\n+//  network_interface_ids = [azurerm_network_interface.test_vm_nic.id]\r\n+//  size                  = var.vmsize\r\n+//  admin_username        = \"linuxlsr\"\r\n+//  os_disk {\r\n+//    caching              = \"ReadWrite\"\r\n+//    storage_account_type = \"Standard_LRS\"\r\n+//  }\r\n+//\r\n+//  admin_ssh_key {\r\n+//    username   = \"linuxlsr\"\r\n+//    public_key = file(\"id_rsa.pub\")\r\n+//  }\r\n+//  source_image_reference {\r\n+//    publisher = \"Canonical\"\r\n+//    offer     = \"UbuntuServer\"\r\n+//    sku       = \"16.04.0-LTS\"\r\n+//    version   = \"latest\"\r\n+//  }\r\n+//\r\n+//  tags = merge({\r\n+//    Name = \"test vm\" },\r\n+//  local.common_tags)\r\n+//\r\n+//}\r\n+//\r\n+//resource \"azurerm_public_ip\" \"test_ip\" {\r\n+//  location            = var.location\r\n+//  name                = \"${var.application}_${var.environment}_test_vm_ip\"\r\n+//  resource_group_name = azurerm_resource_group.first_rg.name\r\n+//  allocation_method   = \"Static\"\r\n+//  tags = merge({\r\n+//    Name = \"test ip\" },\r\n+//  local.common_tags)\r\n+//}\r\n+//\r\n+//resource \"azurerm_network_interface\" \"test_vm_nic\" {\r\n+//  location            = var.location\r\n+//  name                = \"${var.application}_${var.environment}_test_nic\"\r\n+//  resource_group_name = azurerm_resource_group.first_rg.name\r\n+//  ip_configuration {\r\n+//    name                          = \"${var.application}_${var.environment}_test_ip\"\r\n+//    private_ip_address_allocation = \"Dynamic\"\r\n+//    subnet_id                     = azurerm_subnet.subnet_0.id\r\n+//    public_ip_address_id          = azurerm_public_ip.test_ip.id\r\n+//  }\r\n+//  tags = merge({\r\n+//    Name = \"test vm nic\" },\r\n+//  local.common_tags)\r\n+//}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["azure", "not_relevant"],
    "notes": "The commit removes resources because they cost money but there is no underlying smell"
  },
  {
    "url": "https://github.com/linuxlsr/azureLearning/commit/e2a2ef243deb0374ccfe3f37e0d1395d4338969c",
    "files": [
      {
        "filename": "ha.tf",
        "additions": 119,
        "deletions": 119,
        "changes": 238,
        "status": "modified",
        "patch": "@@ -1,119 +1,119 @@\n-# the goal is to create a vm based high availability deployment of nginx that uses a load balancer with a public end point and no public IPs on the VMs.\n-\n-#PIP\n-resource \"random_string\" \"fqdn\" {\n-  length  = 6\n-  special = false\n-  upper   = false\n-  number  = false\n-}\n-\n-resource \"azurerm_public_ip\" \"lb_pip\" {\n-  allocation_method   = \"Dynamic\"\n-  location            = var.location\n-  name                = \"lb-pip\"\n-  resource_group_name = azurerm_resource_group.first_rg.name\n-  domain_name_label   = random_string.fqdn.result\n-  tags                = merge({ Name = \"lb pip\" }, local.common_tags)\n-}\n-\n-# load balancer\n-resource \"azurerm_lb\" \"first_lb\" {\n-  name                = \"first-lb\"\n-  location            = var.location\n-  resource_group_name = azurerm_resource_group.first_rg.name\n-  frontend_ip_configuration {\n-    name                 = \"PublicIpAddress\"\n-    public_ip_address_id = azurerm_public_ip.lb_pip.id\n-  }\n-  tags = merge({ Name = \"first lb\" }, local.common_tags)\n-}\n-\n-resource \"azurerm_lb_backend_address_pool\" \"lb_be_pool\" {\n-  loadbalancer_id     = azurerm_lb.first_lb.id\n-  name                = \"lbbackendpool\"\n-  resource_group_name = azurerm_resource_group.first_rg.name\n-}\n-#health check\n-resource \"azurerm_lb_probe\" \"lb_probe\" {\n-  loadbalancer_id     = azurerm_lb.first_lb.id\n-  name                = \"firstlbprobe\"\n-  port                = 80\n-  resource_group_name = azurerm_resource_group.first_rg.name\n-}\n-\n-# listener\n-resource \"azurerm_lb_rule\" \"lb_nat_rule\" {\n-  resource_group_name            = azurerm_resource_group.first_rg.name\n-  loadbalancer_id                = azurerm_lb.first_lb.id\n-  name                           = \"http\"\n-  protocol                       = \"Tcp\"\n-  frontend_port                  = 80\n-  backend_port                   = 80\n-  backend_address_pool_id        = azurerm_lb_backend_address_pool.lb_be_pool.id\n-  frontend_ip_configuration_name = \"PublicIpAddress\"\n-  probe_id                       = azurerm_lb_probe.lb_probe.id\n-}\n-# scaleset\n-resource \"azurerm_virtual_machine_scale_set\" \"lb_scale_set\" {\n-  location            = var.location\n-  name                = \"firstscaleset\"\n-  resource_group_name = azurerm_resource_group.first_rg.name\n-  upgrade_policy_mode = \"Manual\"\n-  network_profile {\n-    name    = \"scalesetnetprofile\"\n-    primary = true\n-    ip_configuration {\n-      name                                   = \"IPConfiguration\"\n-      primary                                = true\n-      subnet_id                              = module.network.vnet_subnets[0]\n-      load_balancer_backend_address_pool_ids = [azurerm_lb_backend_address_pool.lb_be_pool.id]\n-    }\n-  }\n-\n-  os_profile {\n-    admin_username       = var.admin_username\n-    #admin_password       = \"NotUsed\"\n-    computer_name_prefix = \"testhalinuxlsr1\"\n-    custom_data          = base64encode(file(\"scripts/linux_vm_patch.sh\"))\n-  }\n-\n-  storage_profile_image_reference {\n-    publisher = \"Canonical\"\n-    offer     = \"UbuntuServer\"\n-    sku       = \"16.04-LTS\"\n-    version   = \"latest\"\n-  }\n-\n-  os_profile_linux_config {\n-    disable_password_authentication = true\n-\n-    ssh_keys {\n-      path     = \"/home/${var.admin_username}/.ssh/authorized_keys\"\n-      key_data = file(\"/home/azureLearning/id_rsa.pub\")\n-    }\n-  }\n-\n-  sku {\n-    capacity = 2\n-    tier     = \"Standard\"\n-    name     = var.vmsize\n-  }\n-\n-  storage_profile_os_disk {\n-    #name              = \"storageprofileosdisklinuxlsr\"\n-    caching           = \"ReadWrite\"\n-    create_option     = \"FromImage\"\n-    managed_disk_type = \"Standard_LRS\"\n-  }\n-\n-  storage_profile_data_disk {\n-    create_option = \"Empty\"\n-    lun = 0\n-    caching = \"ReadWrite\"\n-    disk_size_gb = 10\n-  }\n-}\n-\n-# availability set. Use from vm module\n-#var = module.linux_vm.availability_set_id\n+//# the goal is to create a vm based high availability deployment of nginx that uses a load balancer with a public end point and no public IPs on the VMs.\n+//\n+//#PIP\n+//resource \"random_string\" \"fqdn\" {\n+//  length  = 6\n+//  special = false\n+//  upper   = false\n+//  number  = false\n+//}\n+//\n+//resource \"azurerm_public_ip\" \"lb_pip\" {\n+//  allocation_method   = \"Dynamic\"\n+//  location            = var.location\n+//  name                = \"lb-pip\"\n+//  resource_group_name = azurerm_resource_group.first_rg.name\n+//  domain_name_label   = random_string.fqdn.result\n+//  tags                = merge({ Name = \"lb pip\" }, local.common_tags)\n+//}\n+//\n+//# load balancer\n+//resource \"azurerm_lb\" \"first_lb\" {\n+//  name                = \"first-lb\"\n+//  location            = var.location\n+//  resource_group_name = azurerm_resource_group.first_rg.name\n+//  frontend_ip_configuration {\n+//    name                 = \"PublicIpAddress\"\n+//    public_ip_address_id = azurerm_public_ip.lb_pip.id\n+//  }\n+//  tags = merge({ Name = \"first lb\" }, local.common_tags)\n+//}\n+//\n+//resource \"azurerm_lb_backend_address_pool\" \"lb_be_pool\" {\n+//  loadbalancer_id     = azurerm_lb.first_lb.id\n+//  name                = \"lbbackendpool\"\n+//  resource_group_name = azurerm_resource_group.first_rg.name\n+//}\n+//#health check\n+//resource \"azurerm_lb_probe\" \"lb_probe\" {\n+//  loadbalancer_id     = azurerm_lb.first_lb.id\n+//  name                = \"firstlbprobe\"\n+//  port                = 80\n+//  resource_group_name = azurerm_resource_group.first_rg.name\n+//}\n+//\n+//# listener\n+//resource \"azurerm_lb_rule\" \"lb_nat_rule\" {\n+//  resource_group_name            = azurerm_resource_group.first_rg.name\n+//  loadbalancer_id                = azurerm_lb.first_lb.id\n+//  name                           = \"http\"\n+//  protocol                       = \"Tcp\"\n+//  frontend_port                  = 80\n+//  backend_port                   = 80\n+//  backend_address_pool_id        = azurerm_lb_backend_address_pool.lb_be_pool.id\n+//  frontend_ip_configuration_name = \"PublicIpAddress\"\n+//  probe_id                       = azurerm_lb_probe.lb_probe.id\n+//}\n+//# scaleset\n+//resource \"azurerm_virtual_machine_scale_set\" \"lb_scale_set\" {\n+//  location            = var.location\n+//  name                = \"firstscaleset\"\n+//  resource_group_name = azurerm_resource_group.first_rg.name\n+//  upgrade_policy_mode = \"Manual\"\n+//  network_profile {\n+//    name    = \"scalesetnetprofile\"\n+//    primary = true\n+//    ip_configuration {\n+//      name                                   = \"IPConfiguration\"\n+//      primary                                = true\n+//      subnet_id                              = module.network.vnet_subnets[0]\n+//      load_balancer_backend_address_pool_ids = [azurerm_lb_backend_address_pool.lb_be_pool.id]\n+//    }\n+//  }\n+//\n+//  os_profile {\n+//    admin_username       = var.admin_username\n+//    #admin_password       = \"NotUsed\"\n+//    computer_name_prefix = \"testhalinuxlsr1\"\n+//    custom_data          = base64encode(file(\"scripts/linux_vm_patch.sh\"))\n+//  }\n+//\n+//  storage_profile_image_reference {\n+//    publisher = \"Canonical\"\n+//    offer     = \"UbuntuServer\"\n+//    sku       = \"16.04-LTS\"\n+//    version   = \"latest\"\n+//  }\n+//\n+//  os_profile_linux_config {\n+//    disable_password_authentication = true\n+//\n+//    ssh_keys {\n+//      path     = \"/home/${var.admin_username}/.ssh/authorized_keys\"\n+//      key_data = file(\"/home/azureLearning/id_rsa.pub\")\n+//    }\n+//  }\n+//\n+//  sku {\n+//    capacity = 2\n+//    tier     = \"Standard\"\n+//    name     = var.vmsize\n+//  }\n+//\n+//  storage_profile_os_disk {\n+//    #name              = \"storageprofileosdisklinuxlsr\"\n+//    caching           = \"ReadWrite\"\n+//    create_option     = \"FromImage\"\n+//    managed_disk_type = \"Standard_LRS\"\n+//  }\n+//\n+//  storage_profile_data_disk {\n+//    create_option = \"Empty\"\n+//    lun = 0\n+//    caching = \"ReadWrite\"\n+//    disk_size_gb = 10\n+//  }\n+//}\n+//\n+//# availability set. Use from vm module\n+//#var = module.linux_vm.availability_set_id"
      },
      {
        "filename": "virtual-machine.tf",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "status": "modified",
        "patch": "@@ -24,26 +24,26 @@\n //  vm_size                       = var.vmsize\n //}\n \n-# bastion host deployment\n-module \"linux_vm\" {\n-  source = \"./custom_modules/vm\"\n-  #version                       = \"3.1.0\"\n-  resource_group_name           = azurerm_resource_group.first_rg.name\n-  vm_os_simple                  = \"UbuntuServer\"\n-  vnet_subnet_id                = module.network.vnet_subnets[0]\n-  admin_username                = var.admin_username\n-  boot_diagnostics              = true\n-  custom_data                   = base64encode(file(\"scripts/linux_vm_patch.sh\"))\n-  data_disk_size_gb             = 10\n-  delete_os_disk_on_termination = true\n-  enable_ssh_key                = true\n-  nb_data_disk                  = 0\n-  nb_instances                  = \"1\"\n-  nb_public_ip                  = \"1\"\n-  public_ip_dns                 = [\"linuxlsrbastion\"] # without this, if public ip NE 0, module will error out.\n-  ssh_key                       = \"/home/azureLearning/id_rsa.pub\"\n-  storage_account_type          = \"StandardSSD_LRS\"\n-  tags                          = merge({ Name = \"test vm\" }, local.common_tags)\n-  vm_hostname                   = \"bastion\"\n-  vm_size                       = var.vmsize\n-}\n\\ No newline at end of file\n+//# bastion host deployment\n+//module \"linux_vm\" {\n+//  source = \"./custom_modules/vm\"\n+//  #version                       = \"3.1.0\"\n+//  resource_group_name           = azurerm_resource_group.first_rg.name\n+//  vm_os_simple                  = \"UbuntuServer\"\n+//  vnet_subnet_id                = module.network.vnet_subnets[0]\n+//  admin_username                = var.admin_username\n+//  boot_diagnostics              = true\n+//  custom_data                   = base64encode(file(\"scripts/linux_vm_patch.sh\"))\n+//  data_disk_size_gb             = 10\n+//  delete_os_disk_on_termination = true\n+//  enable_ssh_key                = true\n+//  nb_data_disk                  = 0\n+//  nb_instances                  = \"1\"\n+//  nb_public_ip                  = \"1\"\n+//  public_ip_dns                 = [\"linuxlsrbastion\"] # without this, if public ip NE 0, module will error out.\n+//  ssh_key                       = \"/home/azureLearning/id_rsa.pub\"\n+//  storage_account_type          = \"StandardSSD_LRS\"\n+//  tags                          = merge({ Name = \"test vm\" }, local.common_tags)\n+//  vm_hostname                   = \"bastion\"\n+//  vm_size                       = var.vmsize\n+//}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["azure", "not_relevant"],
    "notes": "The commit removes resources because they cost money but there is no underlying smell"
  },
  {
    "url": "https://github.com/bh1m2rn/gitlab-environment-toolkit/commit/b9750f0bb88bc22256085b6bc8f060055e90a8c4",
    "files": [
      {
        "filename": "terraform/modules/gitlab_aws_instance/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -9,6 +9,7 @@ resource \"aws_instance\" \"gitlab\" {\n   root_block_device {\n     volume_type = var.disk_type\n     volume_size = var.disk_size\n+    iops = var.disk_iops\n   }\n  \n   tags = {"
      },
      {
        "filename": "terraform/modules/gitlab_aws_instance/variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -39,6 +39,10 @@ variable \"disk_size\" {\n   default = \"100\"\n }\n \n+variable \"disk_iops\" {\n+  default = null\n+}\n+\n variable \"label_secondaries\" {\n   default = false\n }"
      },
      {
        "filename": "terraform/modules/gitlab_ref_arch_aws/gitaly.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -9,6 +9,7 @@ module \"gitaly\" {\n   ami_id = coalesce(var.ami_id, data.aws_ami.ubuntu_18_04.id)\n   disk_size = coalesce(var.gitaly_disk_size, var.default_disk_size)\n   disk_type = coalesce(var.gitaly_disk_type, var.default_disk_type)\n+  disk_iops = 8000\n   iam_instance_profile = aws_iam_instance_profile.gitlab_s3_profile.name\n \n   ssh_key_name = aws_key_pair.ssh_key.key_name"
      },
      {
        "filename": "terraform/modules/gitlab_ref_arch_aws/storage.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n resource \"aws_s3_bucket\" \"gitlab_object_storage_buckets\" {\n   for_each = toset(var.object_storage_buckets)\n   bucket = \"${var.prefix}-${each.value}\"\n-  force_destroy = true\n+  force_destroy = var.object_storage_buckets_force_destroy\n }\n \n resource \"aws_iam_role\" \"gitlab_s3_role\" {"
      },
      {
        "filename": "terraform/modules/gitlab_ref_arch_aws/variables.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -7,11 +7,12 @@ variable \"geo_deployment\" { default = null }\n variable \"ami_id\" { default = null } # https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/ami\n \n variable \"default_disk_size\" { default = \"100\" }\n-variable \"default_disk_type\" { default = \"gp2\" }\n+variable \"default_disk_type\" { default = \"gp3\" }\n \n variable \"ssh_public_key_file\" { default = null }\n \n variable \"object_storage_buckets\" { default = [\"artifacts\", \"backups\", \"dependency-proxy\", \"lfs\", \"mr-diffs\", \"packages\", \"terraform-state\", \"uploads\"] }\n+variable \"object_storage_buckets_force_destroy\" { default = false }\n \n # Machines\n variable \"consul_node_count\" { default = 0 }"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "provider"
    ],
    "codes": ["aws", "cheaper_volume", "new_gen"],
    "notes": "Move from gp2 to gp3"
  },
  {
    "url": "https://github.com/dankline/waapdemo/commit/087f2caeff6ecaa2a18ecc2f20b7313a70d2d191",
    "files": [
      {
        "filename": "JuiceShop.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -11,8 +11,8 @@ resource \"azurerm_app_service_plan\" \"service-plan\" {\n   kind                = \"Linux\"\n   reserved            = true\n   sku {\n-    tier = \"Standard\"\n-    size = \"S1\"\n+    tier = \"Basic\"\n+    size = \"B1\"\n   }\n }\n # Create a Web App"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["azure", "cheaper_service_plan"],
    "notes": "Move from Standard S1 to Basic B1"
  },
  {
    "url": "https://github.com/Katesagay/terraform-repo/commit/9aacfbe12e3e7c1e726b9a3d834211aae01f419c",
    "files": [
      {
        "filename": ".DS_Store",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "terraform/kunbee-aws/cloudwatch/billing/main.tf",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "status": "added",
        "patch": "@@ -0,0 +1,25 @@\n+resource \"aws_cloudwatch_metric_alarm\" \"billing\" {\n+  provider            = aws.sns\n+  alarm_name          = \"Billing-alarm-${lower(var.currency)}\"\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods  = \"1\"\n+  metric_name         = \"EstimatedCharges\"\n+  namespace           = \"AWS/Billing\"\n+  period              = \"21600\"\n+  statistic           = \"Maximum\"\n+  threshold           = var.monthy_billing_threshold\n+  alarm_description   = \"Total AWS charges for the month exceeded the threshold of ${var.currency} ${var.monthy_billing_threshold}\"\n+  actions_enabled     = \"true\"\n+  treat_missing_data  = \"notBreaching\"\n+\n+  alarm_actions = [aws_sns_topic.cloudwatch-alarm-topic.arn]\n+  ok_actions    = [aws_sns_topic.cloudwatch-alarm-topic.arn]\n+  tags = {\n+    createdOn = timestamp()\n+    createdBy = \"terraform\"\n+\n+  }\n+  dimensions = {\n+    Currency = \"${var.currency}\"\n+  }\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/kunbee-aws/cloudwatch/billing/sns.tf",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "status": "added",
        "patch": "@@ -0,0 +1,55 @@\n+\n+resource \"aws_sns_topic\" \"cloudwatch-alarm-topic\" {\n+  provider     = aws.sns\n+  name         = var.sns[\"name\"]\n+  display_name = var.sns[\"display_name\"]\n+  policy       = data.aws_iam_policy_document.sns-topic-policy.json\n+  # type         = var.sns[\"type\"]\n+}\n+resource \"aws_sns_topic_subscription\" \"sns-topic\" {\n+  provider  = aws.sns\n+  topic_arn = aws_sns_topic.cloudwatch-alarm-topic.arn\n+  protocol  = \"email\"\n+  endpoint  = var.email_address_list\n+\n+}\n+\n+data \"aws_iam_policy_document\" \"sns-topic-policy\" {\n+  policy_id = \"__default_policy_ID\"\n+\n+  statement {\n+    actions = [\n+      \"SNS:GetTopicAttributes\",\n+      \"SNS:SetTopicAttributes\",\n+      \"SNS:AddPermission\",\n+      \"SNS:RemovePermission\",\n+      \"SNS:DeleteTopic\",\n+      \"SNS:Subscribe\",\n+      \"SNS:ListSubscriptionsByTopic\",\n+      \"SNS:Publish\",\n+      \"SNS:Receive\"\n+    ]\n+\n+    condition {\n+      test     = \"StringEquals\"\n+      variable = \"AWS:SourceOwner\"\n+\n+      values = [\n+        var.sns[\"account-id\"],\n+      ]\n+    }\n+\n+    effect = \"Allow\"\n+\n+    principals {\n+      type        = \"AWS\"\n+      identifiers = [\"*\"]\n+    }\n+\n+    resources = [\n+      \"arn:aws:sns:${var.sns[\"region\"]}:${var.sns[\"account-id\"]}:${var.sns[\"name\"]}\",\n+    ]\n+\n+    sid = \"__default_statement_ID\"\n+  }\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/kunbee-aws/cloudwatch/billing/variable.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+variable \"monthy_billing_threshold\" {\n+  description = \"Maximum amount of total charges in usd\"\n+  type        = number\n+  default     = 5\n+}\n+variable \"sns\" {\n+  description = \"sns topic for bill\"\n+  type        = map\n+  default     = {}\n+}\n+\n+variable \"email_address_list\" {\n+  description = \"list of emails to send the notification to\"\n+  type        = string\n+  default     = \"\"\n+}\n+\n+variable \"currency\" {\n+  description = \"currency of charge\"\n+  type        = string\n+  default     = \"\"\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/wellcomecollection/loris-infrastructure/commit/77c58fa499829785825e45aa90e1bb6c7058c5a2",
    "files": [
      {
        "filename": "terraform/asg.tf",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -11,11 +11,16 @@ module \"loris_cluster_asg\" {\n   asg_max     = \"4\"\n \n   image_id      = \"${data.aws_ami.stable_coreos.id}\"\n-  instance_type = \"t2.xlarge\"\n+  instance_type = \"c4.xlarge\"\n \n   sns_topic_arn         = \"${local.ec2_terminating_topic_arn}\"\n   publish_to_sns_policy = \"${local.ec2_terminating_topic_publish_policy}\"\n   alarm_topic_arn       = \"${local.ec2_instance_terminating_for_too_long_alarm_arn}\"\n+\n+  ebs_device_name = \"/dev/xvdb\"\n+  ebs_size        = 180\n+  ebs_volume_type = \"io1\"\n+  ebs_iops        = \"2000\"\n }\n \n module \"loris_cluster_asg_ebs\" {\n@@ -31,14 +36,13 @@ module \"loris_cluster_asg_ebs\" {\n   asg_max     = \"4\"\n \n   image_id      = \"${data.aws_ami.stable_coreos.id}\"\n-  instance_type = \"t2.xlarge\"\n+  instance_type = \"c4.xlarge\"\n \n   sns_topic_arn         = \"${local.ec2_terminating_topic_arn}\"\n   publish_to_sns_policy = \"${local.ec2_terminating_topic_publish_policy}\"\n   alarm_topic_arn       = \"${local.ec2_instance_terminating_for_too_long_alarm_arn}\"\n \n   ebs_device_name = \"/dev/xvdb\"\n   ebs_size        = 180\n-  ebs_volume_type = \"io1\"\n-  ebs_iops        = \"2000\"\n+  ebs_volume_type = \"gp2\"\n }"
      },
      {
        "filename": "terraform/efs.tf",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "status": "removed",
        "patch": "@@ -1,8 +0,0 @@\n-module \"loris_efs\" {\n-  name                         = \"loris_cache\"\n-  source                       = \"git::https://github.com/wellcometrust/terraform.git//efs?ref=v1.0.0\"\n-  vpc_id                       = \"${local.vpc_api_id}\"\n-  subnets                      = \"${local.vpc_api_subnets}\"\n-  efs_access_security_group_id = \"${module.loris_cluster_asg.instance_sg_id}\"\n-  performance_mode             = \"maxIO\"\n-}"
      },
      {
        "filename": "terraform/services.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,8 +14,8 @@ module \"loris\" {\n   healthcheck_path   = \"/image/\"\n   alb_priority       = \"100\"\n \n-  cpu    = 1792\n-  memory = 4096\n+  cpu    = 2560\n+  memory = 3276\n \n   desired_count = 4\n \n@@ -47,8 +47,8 @@ module \"loris_ebs\" {\n   healthcheck_path   = \"/image/\"\n   alb_priority       = \"101\"\n \n-  cpu    = 1792\n-  memory = 4096\n+  cpu    = 2560\n+  memory = 3276\n \n   desired_count = 4\n "
      },
      {
        "filename": "terraform/userdata.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,7 +1,10 @@\n module \"loris_userdata\" {\n   source            = \"git::https://github.com/wellcometrust/terraform.git//userdata?ref=v1.0.0\"\n   cluster_name      = \"${aws_ecs_cluster.loris.name}\"\n-  efs_filesystem_id = \"${module.loris_efs.efs_id}\"\n+  ebs_block_device                   = \"/dev/xvdb\"\n+  cache_cleaner_cloudwatch_log_group = \"${aws_cloudwatch_log_group.cache_cleaner_log_group.name}\"\n+  ebs_cache_max_age_days             = \"30\"\n+  ebs_cache_max_size                 = \"160G\"\n }\n \n module \"loris_userdata_ebs\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "cluster"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit moves to a more expensive instance family (t2.xlarge to c4.xlarge)"
  },
  {
    "url": "https://github.com/sastels/learn-AWS-terraform/commit/0816f145a8b709df6af66a7dad229a4ff31619ba",
    "files": [
      {
        "filename": "Labs/7.10: Reduce Storage Costs with EFS/README.md",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+## Usage\n+\n+Create a `terraform.tfvars` file containing:\n+```\n+ssh_public_key = \"ssh-rsa .........\" # from  ~/.ssh/id_rsa.pub \n+```\n+\n+Run\n+```\n+terraform init\n+terraform apply\n+```\n+\n+## Links\n+\n+https://medium.com/@wblakecannon/add-efs-to-an-amazon-linux-2-aws-ec2-instance-with-terraform-bb073b6de7"
      },
      {
        "filename": "Labs/7.10: Reduce Storage Costs with EFS/bootstrap.sh",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+#!/bin/bash\n+sleep 5m\n+sudo su - root\n+yum -y update\n+yum -y install httpd\n+\n+yum install -y amazon-efs-utils\n+mkdir /efs\n+efs_id=\"${efs_id}\"\n+mount -t efs $efs_id:/ /var/www/html\n+echo $efs_id:/ /var/www/html efs defaults,_netdev 0 0 >> /etc/fstab\n+\n+echo \"<h1> My web server!! </h1>\" >> /var/www/html/index.html\n+curl ifconfig.me >> /var/www/html/index.html\n+systemctl enable httpd\n+systemctl start httpd\n+"
      },
      {
        "filename": "Labs/7.10: Reduce Storage Costs with EFS/ec2.tf",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "status": "added",
        "patch": "@@ -0,0 +1,24 @@\n+resource \"aws_instance\" \"web_server\" {\n+  count                       = 2\n+  ami                         = \"ami-0a70476e631caa6d3\"\n+  instance_type               = \"t2.micro\"\n+  security_groups             = [aws_security_group.ec2_efs.name]\n+  associate_public_ip_address = true\n+  key_name                    = \"ssh-key\"\n+  user_data                   = data.template_file.bootstrap.rendered\n+\n+  root_block_device {\n+    encrypted = true\n+  }\n+\n+  tags = {\n+    Name = \"Web server\"\n+  }\n+}\n+\n+output \"curl\" {\n+  value = \"curl ${aws_instance.web_server[0].public_dns}\\ncurl ${aws_instance.web_server[1].public_dns}\"\n+}\n+output \"ssh\" {\n+  value = \"ssh -i ~/.ssh/id_rsa ec2-user@${aws_instance.web_server[0].public_dns}\\nssh -i ~/.ssh/id_rsa ec2-user@${aws_instance.web_server[1].public_dns}\"\n+}"
      },
      {
        "filename": "Labs/7.10: Reduce Storage Costs with EFS/efs.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+resource \"aws_efs_file_system\" \"efs\" {\n+  tags = {\n+    Name = \"EFS shared storage\"\n+  }\n+}\n+\n+resource \"aws_efs_mount_target\" \"efs\" {\n+  file_system_id  = aws_efs_file_system.efs.id\n+  subnet_id       = aws_instance.web_server[0].subnet_id\n+  security_groups = [aws_security_group.ec2_efs.id]\n+}\n+\n+data \"template_file\" \"bootstrap\" {\n+  template = file(\"bootstrap.sh\")\n+  vars = {\n+    efs_id = \"${aws_efs_file_system.efs.id}\"\n+  }\n+}\n+\n+output \"efs_id\" {\n+  value = aws_efs_file_system.efs.id\n+}"
      },
      {
        "filename": "Labs/7.10: Reduce Storage Costs with EFS/main.tf",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "status": "added",
        "patch": "@@ -0,0 +1,24 @@\n+terraform {\n+  required_providers {\n+    aws = {\n+      source  = \"hashicorp/aws\"\n+      version = \"~> 3.0\"\n+    }\n+  }\n+}\n+\n+provider \"aws\" {\n+  profile = \"default\"\n+  region  = var.region\n+}\n+\n+resource \"aws_key_pair\" \"ssh-key\" {\n+  key_name   = \"ssh-key\"\n+  public_key = var.ssh_public_key\n+}\n+\n+resource \"aws_default_vpc\" \"default\" {\n+  tags = {\n+    Name : \"Default VPC\"\n+  }\n+}"
      },
      {
        "filename": "Labs/7.10: Reduce Storage Costs with EFS/security_group.tf",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "status": "added",
        "patch": "@@ -0,0 +1,43 @@\n+resource \"aws_security_group\" \"ec2_efs\" {\n+  name        = \"ec2_efs_security_group\"\n+  description = \"EC2 / EFS security group\"\n+  vpc_id      = aws_default_vpc.default.id\n+  ingress {\n+    description = \"HTTP\"\n+    from_port   = 80\n+    to_port     = 80\n+    protocol    = \"tcp\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+\n+  ingress {\n+    description = \"HTTPS\"\n+    from_port   = 443\n+    to_port     = 443\n+    protocol    = \"tcp\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+\n+  ingress {\n+    description = \"SSH\"\n+    from_port   = 22\n+    to_port     = 22\n+    protocol    = \"tcp\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+\n+  ingress {\n+    description = \"EFS mount target\"\n+    from_port   = 2049\n+    to_port     = 2049\n+    protocol    = \"tcp\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+\n+  egress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = \"-1\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+}"
      },
      {
        "filename": "Labs/7.10: Reduce Storage Costs with EFS/variables.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+variable \"ssh_public_key\" {\n+  type = string\n+}\n+variable \"region\" {\n+  type    = string\n+  default = \"ca-central-1\"\n+}\n+"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit does not contain enough context to determine what costs are saved"
  },
  {
    "url": "https://github.com/schramm-famm/bespin/commit/cff3747c70722eba940317dec58dc9c22b3b4939",
    "files": [
      {
        "filename": "main.tf",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "status": "modified",
        "patch": "@@ -42,3 +42,80 @@ resource \"aws_iam_role_policy_attachment\" \"ecs_agent_cloudwatch_role\" {\n   role = aws_iam_role.ecs_agent.id\n   policy_arn = \"arn:aws:iam::aws:policy/CloudWatchLogsFullAccess\"\n }\n+\n+module \"vpc\" {\n+  source  = \"terraform-aws-modules/vpc/aws\" # 3rd party module\n+  version = \"~> 2.0\"\n+\n+  name = var.name\n+\n+  cidr = \"10.1.0.0/16\"\n+\n+  # TODO: Don't hard code these three arguments\n+  azs             = [\"us-east-2a\", \"us-east-2b\"]\n+  private_subnets = [\"10.1.1.0/24\", \"10.1.2.0/24\"]\n+  public_subnets  = [\"10.1.11.0/24\", \"10.1.12.0/24\"]\n+\n+  enable_nat_gateway = true\n+\n+  tags = {\n+    Name = var.name\n+  }\n+}\n+\n+data \"aws_ami\" \"amazon_linux_ecs\" {\n+  most_recent = true\n+\n+  owners = [\"amazon\"]\n+\n+  filter {\n+    name   = \"name\"\n+    values = [\"amzn-ami-*-amazon-ecs-optimized\"]\n+  }\n+\n+  filter {\n+    name   = \"owner-alias\"\n+    values = [\"amazon\"]\n+  }\n+}\n+\n+module \"autoscaling\" {\n+  source  = \"terraform-aws-modules/autoscaling/aws\" # 3rd party module\n+  version = \"~> 3.0\"\n+\n+  name = var.name\n+\n+  # Launch configuration\n+  lc_name = \"${var.name}_launch_configuration\"\n+\n+  image_id             = data.aws_ami.amazon_linux_ecs.id\n+  instance_type        = \"t2.micro\"\n+  security_groups      = [module.vpc.default_security_group_id]\n+  iam_instance_profile = aws_iam_instance_profile.ecs_agent.id\n+  user_data            = data.template_file.user_data.rendered\n+\n+  # Auto scaling group\n+  asg_name                  = \"${var.name}_asg\"\n+  vpc_zone_identifier       = module.vpc.private_subnets\n+  health_check_type         = \"EC2\"\n+  min_size                  = 0\n+  max_size                  = 1\n+  desired_capacity          = 1\n+  wait_for_capacity_timeout = 0\n+\n+  tags = [\n+    {\n+      key                 = \"Cluster\"\n+      value               = var.name\n+      propagate_at_launch = true\n+    },\n+  ]\n+}\n+\n+data \"template_file\" \"user_data\" {\n+  template = file(\"${path.module}/user_data.sh\")\n+\n+  vars = {\n+    cluster_name = var.name\n+  }\n+}"
      },
      {
        "filename": "user_data.sh",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+#!/bin/bash\n+\n+# ECS config\n+echo \"ECS_CLUSTER=${cluster_name}\" >> /etc/ecs/ecs.config\n+\n+echo \"Done\""
      }
    ],
    "existing_codes": [
      "networking",
      "awareness",
      "increase"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/zoitech/terraform-aws-account/commit/2eb42357d986ad2c3d8693907df99895cee25c63",
    "files": [
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@ Terraform module which setup the most generic aws-accounts settings.\n * Set password policy\n * Add a logging bucket\n * Enable CloudTail\n-\n+* Create IAM_Policy\n \n ## Usage\n ```hcl"
      },
      {
        "filename": "aws_iam_policy_EC2_limit.tf",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "status": "added",
        "patch": "@@ -0,0 +1,26 @@\n+resource \"aws_iam_policy\" \"deny_expensive_EC2_instances\" {\n+  name        = \"${var.EC2_Limit_Name}\"\n+  count       = \"${var.EC2_Limit_Count}\"\n+  description = \"Policy to limit creation of expensive EC2 Instances\"\n+\n+  policy = <<EOF\n+{\n+    \"Version\": \"2012-10-17\",\n+    \"Statement\": [\n+                {\n+            \"Sid\": \"DenyLargeEC2\",\n+            \"Effect\": \"Deny\",\n+            \"Action\": \"ec2:RunInstances\",\n+            \"Resource\": \"*\",\n+            \"Condition\": {\n+                \"StringLike\": {\n+                    \"ec2:InstanceType\": [\n+                        \"${var.EC2_Limit_Type}\"\n+                    ]\n+                }\n+            }\n+        }\n+    ]\n+}\n+EOF\n+}"
      },
      {
        "filename": "aws_iam_policy_RDS_limit.tf",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "status": "added",
        "patch": "@@ -0,0 +1,26 @@\n+resource \"aws_iam_policy\" \"deny_expensive_RDS_instances\" {\n+  name        = \"${var.RDS_Limit_Name}\"\n+  count       = \"${var.RDS_Limit_Count}\"\n+  description = \"Policy to limit creation of expensive RDS Instances\"\n+\n+  policy = <<EOF\n+{\n+    \"Version\": \"2012-10-17\",\n+    \"Statement\": [\n+        {\n+            \"Sid\": \"DenyXlargeRDS\",\n+            \"Effect\": \"Deny\",\n+            \"Action\": \"rds:CreateDBInstance\",\n+            \"Resource\": \"*\",\n+            \"Condition\": {\n+                \"StringLike\": {\n+                    \"rds:DatabaseClass\": [\n+                        \"${var.RDS_Limit_Type}\"\n+                    ]\n+                }\n+            }\n+        }\n+    ]\n+}\n+EOF\n+}"
      },
      {
        "filename": "aws_iam_policy_ReservedInstance_limit.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "added",
        "patch": "@@ -0,0 +1,18 @@\n+resource \"aws_iam_policy\" \"deny_expensive_RI_instances\" {\n+  name        = \"${var.Reserved_Instances_Limit_Name}\"\n+  count       = \"${var.Reserved_Instances_Limit_Count}\"\n+  description = \"Policy to limit Reserved Instances\"\n+\n+  policy = <<EOF\n+{\n+    \"Version\": \"2012-10-17\",\n+    \"Statement\": [\n+          {\n+            \"Effect\": \"Deny\",\n+            \"Action\": [\"${var.Reserved_Instances_Limit_Action}\"],\n+            \"Resource\": \"*\"\n+        }\n+    ]\n+}\n+EOF\n+}"
      },
      {
        "filename": "changelog.md",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+## 0.0.5 (Unreleased)\n+\n+NEW FEATURES:\n+\n+* Added new policies to prevent users causing huge costs\n+* Created Changelog.md\n+\n+\n+BACKWARDS INCOMPATIBILITIES / NOTES:\n+\n+* n.a.\n+\n+\n+IMPROVEMENTS:\n+\n+* formatted tf-files\n+\n+\n+BUG FIXES:\n+\n+* n.a.\n+"
      },
      {
        "filename": "provider.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n provider \"aws\" {\n-  region = \"${var.aws_region}\"\n+  region  = \"${var.aws_region}\"\n   version = \"~> 1.6\"\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "policy"
    ],
    "codes": ["aws", "add_iam_policy"],
    "notes": "Adds IAM policies to deny creation of expensive EC2, RDS and reserved instances"
  },
  {
    "url": "https://github.com/cbChgit/testrepo/commit/803640f6e77857520f69700ccc27c772ee7564e4",
    "files": [
      {
        "filename": "README.md",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -24,6 +24,7 @@ Lots of Terraform recipes for doing things, aimed for copy and pasting into proj\n - [google_cloud](google_cloud)\n   - [google_cloud/camunda](google_cloud/camunda)\n   - [google_cloud/CQRS_bigquery_memorystore](google_cloud/CQRS_bigquery_memorystore)\n+  - [google_cloud/minecraft](google_cloud/minecraft)\n \n \n # [aws](aws)\n@@ -1315,3 +1316,22 @@ Shut down memorystore\n \n \n \n+\n+# [google_cloud/minecraft](google_cloud/minecraft)\n+# Economical Minecraft server\n+\n+A safe Minecraft server that won't break the bank. Game data is preserved across sessions. Server is hosted on a permenant IP address. You need to start the VM each session, but it will shutdown within 24 hours if you forget to turn it off. Process is run in a sandboxed VM, so any server exploits cannot do any serious damage.\n+\n+Features\n+- Runs [itzg/minecraft-server](https://hub.docker.com/r/itzg/minecraft-server/) Docker image\n+- Preemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\n+- Reserves a stable public IP, so the minecraft clients do not need to be reconfigured\n+- Reserves the disk, so game data is remembered across sessions\n+- Restricted service account, VM has no ability to consume GCP resources beyond its instance and disk\n+- 2$ per month\n+  - Reserved IP address costs: $1.46 per month\n+  - Reserved 10Gb disk costs: $0.40\n+  - VM cost: $0.01 per hour, max session cost $0.24\n+\n+\n+"
      },
      {
        "filename": "google_cloud/minecraft/README.md",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "added",
        "patch": "@@ -0,0 +1,15 @@\n+# Economical Minecraft server\n+\n+A safe Minecraft server that won't break the bank. Game data is preserved across sessions. Server is hosted on a permenant IP address. You need to start the VM each session, but it will shutdown within 24 hours if you forget to turn it off. Process is run in a sandboxed VM, so any server exploits cannot do any serious damage.\n+\n+Features\n+- Runs [itzg/minecraft-server](https://hub.docker.com/r/itzg/minecraft-server/) Docker image\n+- Preemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\n+- Reserves a stable public IP, so the minecraft clients do not need to be reconfigured\n+- Reserves the disk, so game data is remembered across sessions\n+- Restricted service account, VM has no ability to consume GCP resources beyond its instance and disk\n+- 2$ per month\n+  - Reserved IP address costs: $1.46 per month\n+  - Reserved 10Gb disk costs: $0.40\n+  - VM cost: $0.01 per hour, max session cost $0.24\n+"
      },
      {
        "filename": "google_cloud/minecraft/main.tf",
        "additions": 98,
        "deletions": 0,
        "changes": 98,
        "status": "added",
        "patch": "@@ -0,0 +1,98 @@\n+# We require a project to be profided upfront\n+# Create a project at https://cloud.google.com/\n+# Make note of the project ID\n+# We need a storage bucket created upfront too to store the terraform state\n+terraform {\n+  backend \"gcs\" {\n+    prefix = \"minecraft/state\"\n+    bucket = \"terraform-larkworthy\"\n+  }\n+}\n+\n+# You need to fill these locals out with the project, region and zone\n+# Then to boot it up, run:-\n+#   gcloud auth application-default login\n+#   terraform init\n+#   terraform apply\n+locals {\n+  # The Google Cloud Project ID that will host and pay for your Minecraft server\n+  project = \"larkworthy-tester\"\n+  region  = \"europe-west1\"\n+  zone    = \"europe-west1-b\"\n+}\n+\n+provider \"google\" {\n+  project = local.project\n+  region  = local.region\n+}\n+\n+# Create service account to run service with no permissions\n+resource \"google_service_account\" \"minecraft\" {\n+  account_id   = \"minecraft\"\n+  display_name = \"minecraft\"\n+}\n+\n+# Permenant Minecraft disk, stays around when VM is off\n+resource \"google_compute_disk\" \"minecraft\" {\n+  name  = \"minecraft\"\n+  type  = \"pd-standard\"\n+  zone  = local.zone\n+  image = \"cos-cloud/cos-stable\"\n+}\n+\n+# Permenant IP address, stays the same\n+resource \"google_compute_address\" \"minecraft\" {\n+  name   = \"minecraft-ip\"\n+  region = local.region\n+}\n+\n+# VM to run Minecraft, we use preemptable which will shutdown within 24 hours\n+resource \"google_compute_instance\" \"minecraft\" {\n+  name         = \"minecraft\"\n+  machine_type = \"n1-standard-1\"\n+  zone         = local.zone\n+  tags         = [\"minecraft\"]\n+\n+  # Run itzg/minecraft-server docker image on startup\n+  # The instructions of https://hub.docker.com/r/itzg/minecraft-server/ are applicable\n+  # For instance, Ssh into the instance and you can run\n+  #  docker logs mc\n+  #  docker exec -i mc rcon-cli\n+  # Once in rcon-cli you can \"op <player_id>\" to make someone an operator (admin)\n+  # Use 'sudo journalctl -u google-startup-scripts.service' to retrieve the startup script output\n+  metadata_startup_script = \"docker run -d -p 25565:25565 -e EULA=TRUE -v /var/minecraft:/data --name mc --rm=true itzg/minecraft-server:latest;\"\n+\n+  boot_disk {\n+    auto_delete = false # Keep disk after shutdown (game data)\n+    source      = google_compute_disk.minecraft.self_link\n+  }\n+\n+  network_interface {\n+    network = \"default\"\n+    access_config {\n+      nat_ip = google_compute_address.minecraft.address\n+    }\n+  }\n+\n+  service_account {\n+    email  = google_service_account.minecraft.email\n+    scopes = [\"userinfo-email\"]\n+  }\n+\n+  scheduling {\n+    preemptible = true # Closes within 24 hours (sometimes sooner)\n+    automatic_restart = false\n+  }\n+}\n+\n+# Open the firewall\n+resource \"google_compute_firewall\" \"minecraft\" {\n+  name    = \"minecraft\"\n+  network = \"default\"\n+  allow {\n+    protocol = \"tcp\"\n+    ports    = [\"25565\"]\n+  }\n+  source_ranges = [\"0.0.0.0/0\"]\n+  target_tags = [\"minecraft\"]\n+}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/EngineerBetter/kf-infra/commit/fa5f7fb35b0b44020fb81dd5c4e3b9ceaca1f967",
    "files": [
      {
        "filename": "terraform/kubernetes/gke.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -19,7 +19,7 @@ resource \"google_container_node_pool\" \"nodes\" {\n \n   node_config {\n     preemptible     = true\n-    machine_type    = \"n1-standard-8\"\n+    machine_type    = \"e2-standard-8\"\n     service_account = google_service_account.default.email\n     oauth_scopes = [\n       \"https://www.googleapis.com/auth/cloud-platform\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["gcp", "cheaper_instance"],
    "notes": "Move from n1-standard-8 to e1-standard-8"
  },
  {
    "url": "https://github.com/travis-ci/terraform-config/commit/4f641b162fa877aef842481631906d5bfe874781",
    "files": [
      {
        "filename": "aws-shared-1/main.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -114,7 +114,7 @@ module \"aws_az_1b\" {\n   github_users = \"${var.github_users}\"\n   index = \"${var.index}\"\n   nat_ami = \"${data.aws_ami.nat.id}\"\n-  nat_instance_type = \"c3.4xlarge\"\n+  nat_instance_type = \"c4.large\"\n   public_subnet_cidr = \"${var.public_subnet_1b_cidr}\"\n   syslog_address = \"${var.syslog_address_com}\"\n   travisci_net_external_zone_id = \"${var.travisci_net_external_zone_id}\"\n@@ -136,7 +136,7 @@ module \"aws_az_1e\" {\n   github_users = \"${var.github_users}\"\n   index = \"${var.index}\"\n   nat_ami = \"${data.aws_ami.nat.id}\"\n-  nat_instance_type = \"c3.4xlarge\"\n+  nat_instance_type = \"c4.large\"\n   public_subnet_cidr = \"${var.public_subnet_1e_cidr}\"\n   syslog_address = \"${var.syslog_address_com}\"\n   travisci_net_external_zone_id = \"${var.travisci_net_external_zone_id}\"\n@@ -222,7 +222,7 @@ module \"registry_1b\" {\n   github_users = \"${var.github_users}\"\n   http_secret = \"${random_id.registry_http_secret.hex}\"\n   index = \"${var.index}\"\n-  instance_type = \"t2.medium\"\n+  instance_type = \"t2.micro\"\n   public_subnet_id = \"${module.aws_az_1b.public_subnet_id}\"\n   s3_access_key_id = \"${aws_iam_access_key.registry.id}\"\n   s3_bucket = \"${aws_s3_bucket.registry_images.id}\"\n@@ -240,7 +240,7 @@ module \"registry_1e\" {\n   github_users = \"${var.github_users}\"\n   http_secret = \"${random_id.registry_http_secret.hex}\"\n   index = \"${var.index}\"\n-  instance_type = \"t2.medium\"\n+  instance_type = \"t2.micro\"\n   public_subnet_id = \"${module.aws_az_1e.public_subnet_id}\"\n   s3_access_key_id = \"${aws_iam_access_key.registry.id}\"\n   s3_bucket = \"${aws_s3_bucket.registry_images.id}\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from c3.4xlarge to c4.large and t2.medium to t2.micro"
  },
  {
    "url": "https://github.com/travis-ci/terraform-config/commit/0e2fc3ca535ca4a1fe3097b336fb145e6c73cde6",
    "files": [
      {
        "filename": "modules/gce_net/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -44,7 +44,7 @@ variable \"nat_count_per_zone\" {\n variable \"nat_image\" {}\n \n variable \"nat_machine_type\" {\n-  default = \"n1-highcpu-2\"\n+  default = \"custom-1-2048\"\n }\n \n variable \"nat_zones\" {"
      }
    ],
    "existing_codes": [
      "networking",
      "saving",
      "awareness"
    ],
    "codes": ["gcp", "nat_host_custom_machine_type"],
    "notes": "Use a custom machine type for NAT hosts 'reducing monthly costs by ~$21/host'"
  },
  {
    "url": "https://github.com/bhavikkumar/terraform-master/commit/8a71bbe9588b78351fe231a4341d07a5e2101ebb",
    "files": [
      {
        "filename": "iam.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -243,6 +243,12 @@ resource \"aws_iam_group_policy\" \"admin_assume_role\" {\n   provider  = \"aws.master\"\n }\n \n+resource \"aws_iam_group_policy_attachment\" \"admin_billing\" {\n+  group       = \"${aws_iam_group.admin.id}\"\n+  policy_arn  = \"${var.billing_default_arn}\"\n+  provider    = \"aws.master\"\n+}\n+\n resource \"aws_iam_group_policy_attachment\" \"admin_read_only\" {\n   group       = \"${aws_iam_group.admin.id}\"\n   policy_arn  = \"${var.read_only_default_arn}\""
      }
    ],
    "existing_codes": [
      "awareness",
      "policy"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/KoutaroNohira/hashicat/commit/81dc1d3f98034672d5f62f440f2cc3abc58ce2a2",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -104,7 +104,7 @@ resource \"aws_instance\" \"hashicat\" {\n   tags = {\n     Name        = \"${var.prefix}-hashicat-instance\",\n     Environment = var.Environment,\n-\t\t#Owner       = var.Owner\n+\t\tOwner       = var.Owner\n   }\n }\n "
      },
      {
        "filename": "variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -37,7 +37,7 @@ variable \"subnet_prefix\" {\n \n variable \"instance_type\" {\n   description = \"Specifies the AWS instance type.\"\n-  default     = \"t2.small\"\n+  default     = \"t2.nano\"\n }\n \n # HashiCat application settings"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from t2.small to t2.nano"
  },
  {
    "url": "https://github.com/robinbryce/iona/commit/e89519dc59655ddbd3ecf56a4d680d7d01128152",
    "files": [
      {
        "filename": "tf/cluster-k8s/iona-traefik.tf",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -7,10 +7,16 @@ resource \"helm_release\" \"traefik\" {\n   values = [\n     \"${file(\"iona-traefik-values.yaml\")}\"\n   ]\n+  # requires redis\n+  #set {\n+  #   name = \"additionalArguments\"\n+  #   value = \"{--api.insecure=true,--providers.file.directory=/etc/traefik/dynamic/default-routes,--providers.redis=true,--providers.redis.endpoints=${local.redis_memcache_endpoint},--certificatesresolvers.letsencrypt.acme.dnschallenge=true,--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=gcloud,--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory,--certificatesresolvers.letsencrypt.acme.email=${var.traefik_acme_email},--certificatesresolvers.letsencrypt.acme.storage=traefik/acme/account}\"\n+  #}\n   set {\n      name = \"additionalArguments\"\n-     value = \"{--api.insecure=true,--providers.file.directory=/etc/traefik/dynamic/default-routes,--providers.redis=true,--providers.redis.endpoints=${local.redis_memcache_endpoint},--certificatesresolvers.letsencrypt.acme.dnschallenge=true,--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=gcloud,--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory,--certificatesresolvers.letsencrypt.acme.email=${var.traefik_acme_email},--certificatesresolvers.letsencrypt.acme.storage=traefik/acme/account}\"\n+     value = \"{--api.insecure=true,--providers.file.directory=/etc/traefik/dynamic/default-routes,--certificatesresolvers.letsencrypt.acme.dnschallenge=true,--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=gcloud,--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory,--certificatesresolvers.letsencrypt.acme.email=${var.traefik_acme_email},--certificatesresolvers.letsencrypt.acme.storage=traefik/acme/account}\"\n   }\n+\n }\n \n resource \"kubernetes_config_map_v1\" \"traefik-env\" {"
      },
      {
        "filename": "tf/cluster-k8s/memorystore-redis.tf",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -1,12 +1,12 @@\n-resource \"google_redis_instance\" \"memcache\" {\n-  project            = \"${local.gcp_project_id}\"\n-  region             = \"${local.gcp_project_region}\"\n-  name               = \"memcache\"\n-  memory_size_gb     = 1\n-  connect_mode       = \"PRIVATE_SERVICE_ACCESS\"\n-  authorized_network = local.vpc_network\n-}\n-\n-locals {\n-  redis_memcache_endpoint = \"${google_redis_instance.memcache.host}:${google_redis_instance.memcache.port}\"\n-}\n+# resource \"google_redis_instance\" \"memcache\" {\n+#   project            = \"${local.gcp_project_id}\"\n+#   region             = \"${local.gcp_project_region}\"\n+#   name               = \"memcache\"\n+#   memory_size_gb     = 1\n+#   connect_mode       = \"PRIVATE_SERVICE_ACCESS\"\n+#   authorized_network = local.vpc_network\n+# }\n+# \n+# locals {\n+#   redis_memcache_endpoint = \"${google_redis_instance.memcache.host}:${google_redis_instance.memcache.port}\"\n+# }"
      }
    ],
    "existing_codes": [
      "saving",
      "awareness",
      "storage"
    ],
    "codes": ["gcp", "not_relevant"],
    "notes": "The commit removes unused resources but there is no underlying cost smell"
  },
  {
    "url": "https://github.com/techservicesillinois/aws-enterprise-vpc/commit/0d21bea79e1936e2bdaee58bd6e328dd08e59b30",
    "files": [
      {
        "filename": "CHANGELOG.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -8,6 +8,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n \n ### Changed\n - requires Terraform 1.x\n+- bootstrap: use on-demand instead of provisioned capacity mode for DynamoDB table\n \n \n "
      },
      {
        "filename": "modules/bootstrap/main.tf",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -90,9 +90,7 @@ resource \"aws_dynamodb_table\" \"lock_table\" {\n   name = var.dynamodb_table\n   tags = var.tags\n \n-  billing_mode   = \"PROVISIONED\"\n-  read_capacity  = 1\n-  write_capacity = 1\n+  billing_mode = \"PAY_PER_REQUEST\"\n \n   hash_key = \"LockID\"\n "
      }
    ],
    "existing_codes": [
      "saving",
      "awareness",
      "storage"
    ],
    "codes": ["aws", "dynamo_on_demand"],
    "notes": "Use PAY_PER_REQUEST billing mode for DynamoDB"
  },
  {
    "url": "https://github.com/wallnerryan/terraform-scaleio/commit/605e74facfa2ff519ba5cda6e57474666901bd8c",
    "files": [
      {
        "filename": "mdm_install.sh",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -1,22 +1,29 @@\n \n #!/bin/bash\n+echo \"Installing Requirements\"\n sudo yum -ytq install wget libaio numactl\n+echo \"Installing MDM\"\n sudo rpm -i https://scaleio-source.s3.amazonaws.com/1.32/EMC-ScaleIO-mdm-1.32-403.2.el7.x86_64.rpm\n \n+echo \"Waiting for SDS list\"\n while [ ! -f  /tmp/all_sds ];\n do\n     echo \"SDS File Not yet Found - Sleeping before continuining\"\n     sleep 10\n done\n+echo \"SDS list found\"\n \n-\n+echo \"Creating install file\"\n cat <<'EOF' > /tmp/install.sh\n #!/bin/bash -i\n \n+echo \"Getting Private IP\"\n MDM=`curl http://169.254.169.254/latest/meta-data/local-ipv4`\n \n+echo \"Accepting License\"\n scli --mdm --add_primary_mdm --primary_mdm_ip $MDM --accept_license\n sleep 5\n+echo \"Setting Up Password to be password123!\"\n scli --login --mdm_ip $MDM --username admin --password admin\n scli --mdm_ip $MDM --set_password --old_password admin --new_password password123!\n scli --login --mdm_ip $MDM --username admin --password password123!"
      },
      {
        "filename": "sas.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -79,7 +79,7 @@ resource \"aws_route_table_association\" \"scaleio_association\" {\n \n resource \"aws_instance\" \"sds\" {\n     ami = \"${var.ami_id}\"\n-    instance_type = \"i2.xlarge\"\n+    instance_type = \"${var.sds_instance_type}\"\n     key_name = \"${var.key_name}\"\n     subnet_id = \"${aws_subnet.scaleio_subnet.id}\"\n     count = \"${var.sds_count}\"\n@@ -103,7 +103,7 @@ resource \"aws_instance\" \"sds\" {\n \n resource \"aws_instance\" \"mdm\" {\n     ami = \"${var.ami_id}\"\n-    instance_type = \"m4.xlarge\"\n+    instance_type = \"${var.mdm_instance_type}\"\n     key_name = \"${var.key_name}\"\n     subnet_id = \"${aws_subnet.scaleio_subnet.id}\"\n     count = 1"
      },
      {
        "filename": "variables.tf",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,7 +1,9 @@\n variable access_key  {}\n variable secret_key  {}\n variable region  { default=\"us-east-1\"}\n-variable ami_id  { default=\"ami-12663b7a\"}\n+variable ami_id  { default=\"ami-a8d369c0\"}\n variable key_name  {}\n variable key_file  {default=\"~/.ssh/id_rsa\"}\n-variable sds_count {default=\"3\"}\n+variable sds_count {default=\"1\"}\n+variable sds_instance_type {default=\"r3.2xlarge\"}\n+variable mdm_instance_type {default=\"m3.medium\"}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cloudposse/terraform-aws-alb/commit/c3c8dd8bebf14f91518253cadadc6d8a88b5ea09",
    "files": [
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -186,6 +186,7 @@ Available targets:\n | delimiter | Delimiter between `namespace`, `stage`, `name` and `attributes` | `string` | `\"-\"` | no |\n | deregistration\\_delay | The amount of time to wait in seconds before changing the state of a deregistering target to unused | `number` | `15` | no |\n | enable\\_glacier\\_transition | Enables the transition of lb logs to AWS Glacier | `bool` | `true` | no |\n+| enabled | Set to false to prevent the module from creating any resources | `bool` | `true` | no |\n | environment | Environment, e.g. 'prod', 'staging', 'dev', 'pre-prod', 'UAT' | `string` | `\"\"` | no |\n | expiration\\_days | Number of days after which to expunge s3 logs | `number` | `90` | no |\n | glacier\\_transition\\_days | Number of days after which to move s3 logs to the glacier storage tier | `number` | `60` | no |"
      },
      {
        "filename": "docs/terraform.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -30,6 +30,7 @@\n | delimiter | Delimiter between `namespace`, `stage`, `name` and `attributes` | `string` | `\"-\"` | no |\n | deregistration\\_delay | The amount of time to wait in seconds before changing the state of a deregistering target to unused | `number` | `15` | no |\n | enable\\_glacier\\_transition | Enables the transition of lb logs to AWS Glacier | `bool` | `true` | no |\n+| enabled | Set to false to prevent the module from creating any resources | `bool` | `true` | no |\n | environment | Environment, e.g. 'prod', 'staging', 'dev', 'pre-prod', 'UAT' | `string` | `\"\"` | no |\n | expiration\\_days | Number of days after which to expunge s3 logs | `number` | `90` | no |\n | glacier\\_transition\\_days | Number of days after which to move s3 logs to the glacier storage tier | `number` | `60` | no |"
      },
      {
        "filename": "main.tf",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -10,46 +10,48 @@ module \"default_label\" {\n }\n \n resource \"aws_security_group\" \"default\" {\n+  count       = var.enabled ? 1 : 0\n   description = \"Controls access to the ALB (HTTP/HTTPS)\"\n   vpc_id      = var.vpc_id\n   name        = module.default_label.id\n   tags        = module.default_label.tags\n }\n \n resource \"aws_security_group_rule\" \"egress\" {\n+  count             = var.enabled ? 1 : 0\n   type              = \"egress\"\n   from_port         = \"0\"\n   to_port           = \"0\"\n   protocol          = \"-1\"\n   cidr_blocks       = [\"0.0.0.0/0\"]\n-  security_group_id = aws_security_group.default.id\n+  security_group_id = join(\"\", aws_security_group.default.*.id)\n }\n \n resource \"aws_security_group_rule\" \"http_ingress\" {\n-  count             = var.http_enabled ? 1 : 0\n+  count             = var.enabled && var.http_enabled ? 1 : 0\n   type              = \"ingress\"\n   from_port         = var.http_port\n   to_port           = var.http_port\n   protocol          = \"tcp\"\n   cidr_blocks       = var.http_ingress_cidr_blocks\n   prefix_list_ids   = var.http_ingress_prefix_list_ids\n-  security_group_id = aws_security_group.default.id\n+  security_group_id = join(\"\", aws_security_group.default.*.id)\n }\n \n resource \"aws_security_group_rule\" \"https_ingress\" {\n-  count             = var.https_enabled ? 1 : 0\n+  count             = var.enabled && var.https_enabled ? 1 : 0\n   type              = \"ingress\"\n   from_port         = var.https_port\n   to_port           = var.https_port\n   protocol          = \"tcp\"\n   cidr_blocks       = var.https_ingress_cidr_blocks\n   prefix_list_ids   = var.https_ingress_prefix_list_ids\n-  security_group_id = aws_security_group.default.id\n+  security_group_id = join(\"\", aws_security_group.default.*.id)\n }\n \n module \"access_logs\" {\n   source                             = \"git::https://github.com/cloudposse/terraform-aws-lb-s3-bucket.git?ref=tags/0.7.0\"\n-  enabled                            = var.access_logs_enabled\n+  enabled                            = var.enabled && var.access_logs_enabled\n   name                               = var.name\n   namespace                          = var.namespace\n   stage                              = var.stage\n@@ -69,13 +71,14 @@ module \"access_logs\" {\n }\n \n resource \"aws_lb\" \"default\" {\n+  count              = var.enabled ? 1 : 0\n   name               = module.default_label.id\n   tags               = module.default_label.tags\n   internal           = var.internal\n   load_balancer_type = \"application\"\n \n   security_groups = compact(\n-    concat(var.security_group_ids, [aws_security_group.default.id]),\n+    concat(var.security_group_ids, [join(\"\", aws_security_group.default.*.id)]),\n   )\n \n   subnets                          = var.subnet_ids\n@@ -104,6 +107,7 @@ module \"default_target_group_label\" {\n }\n \n resource \"aws_lb_target_group\" \"default\" {\n+  count                = var.enabled ? 1 : 0\n   name                 = var.target_group_name == \"\" ? module.default_target_group_label.id : var.target_group_name\n   port                 = var.target_group_port\n   protocol             = var.target_group_protocol\n@@ -142,24 +146,24 @@ resource \"aws_lb_target_group\" \"default\" {\n \n resource \"aws_lb_listener\" \"http_forward\" {\n   count             = var.http_enabled && var.http_redirect != true ? 1 : 0\n-  load_balancer_arn = aws_lb.default.arn\n+  load_balancer_arn = join(\"\", aws_lb.default.*.arn)\n   port              = var.http_port\n   protocol          = \"HTTP\"\n \n   default_action {\n-    target_group_arn = aws_lb_target_group.default.arn\n+    target_group_arn = join(\"\", aws_lb_target_group.default.*.arn)\n     type             = \"forward\"\n   }\n }\n \n resource \"aws_lb_listener\" \"http_redirect\" {\n-  count             = var.http_enabled && var.http_redirect == true ? 1 : 0\n-  load_balancer_arn = aws_lb.default.arn\n+  count             = var.enabled && var.http_enabled && var.http_redirect == true ? 1 : 0\n+  load_balancer_arn = join(\"\", aws_lb.default.*.arn)\n   port              = var.http_port\n   protocol          = \"HTTP\"\n \n   default_action {\n-    target_group_arn = aws_lb_target_group.default.arn\n+    target_group_arn = join(\"\", aws_lb_target_group.default.*.arn)\n     type             = \"redirect\"\n \n     redirect {\n@@ -171,16 +175,16 @@ resource \"aws_lb_listener\" \"http_redirect\" {\n }\n \n resource \"aws_lb_listener\" \"https\" {\n-  count             = var.https_enabled ? 1 : 0\n-  load_balancer_arn = aws_lb.default.arn\n+  count             = var.enabled && var.https_enabled ? 1 : 0\n+  load_balancer_arn = join(\"\", aws_lb.default.*.arn)\n \n   port            = var.https_port\n   protocol        = \"HTTPS\"\n   ssl_policy      = var.https_ssl_policy\n   certificate_arn = var.certificate_arn\n \n   default_action {\n-    target_group_arn = aws_lb_target_group.default.arn\n+    target_group_arn = join(\"\", aws_lb_target_group.default.*.arn)\n     type             = \"forward\"\n   }\n }"
      },
      {
        "filename": "outputs.tf",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -1,36 +1,36 @@\n output \"alb_name\" {\n   description = \"The ARN suffix of the ALB\"\n-  value       = aws_lb.default.name\n+  value       = join(\"\", aws_lb.default.*.name)\n }\n \n output \"alb_arn\" {\n   description = \"The ARN of the ALB\"\n-  value       = aws_lb.default.arn\n+  value       = join(\"\", aws_lb.default.*.arn)\n }\n \n output \"alb_arn_suffix\" {\n   description = \"The ARN suffix of the ALB\"\n-  value       = aws_lb.default.arn_suffix\n+  value       = join(\"\", aws_lb.default.*.arn_suffix)\n }\n \n output \"alb_dns_name\" {\n   description = \"DNS name of ALB\"\n-  value       = aws_lb.default.dns_name\n+  value       = join(\"\", aws_lb.default.*.dns_name)\n }\n \n output \"alb_zone_id\" {\n   description = \"The ID of the zone which ALB is provisioned\"\n-  value       = aws_lb.default.zone_id\n+  value       = join(\"\", aws_lb.default.*.zone_id)\n }\n \n output \"security_group_id\" {\n   description = \"The security group ID of the ALB\"\n-  value       = aws_security_group.default.id\n+  value       = join(\"\", aws_security_group.default.*.id)\n }\n \n output \"default_target_group_arn\" {\n   description = \"The default target group ARN\"\n-  value       = aws_lb_target_group.default.arn\n+  value       = join(\"\", aws_lb_target_group.default.*.arn)\n }\n \n output \"http_listener_arn\" {"
      },
      {
        "filename": "variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,3 +1,9 @@\n+variable \"enabled\" {\n+  type        = bool\n+  default     = true\n+  description = \"Set to false to prevent the module from creating any resources\"\n+}\n+\n variable \"namespace\" {\n   type        = string\n   description = \"Namespace (e.g. `eg` or `cp`)\""
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit makes ALB configurable/optional but there is no underlying cost smell"
  },
  {
    "url": "https://github.com/byu-oit/terraform-aws-rds/commit/86a0795540edb426c3226775d73fcd4ce807d36a",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ variable \"identifier\" {\n variable \"instance_class\" {\n   type        = string\n   description = \"The instance type to use for the database\"\n-  default     = \"db.t2.small\"\n+  default     = \"db.t3.small\"\n }\n variable \"engine\" {\n   type        = string"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from t2.small to t3.small"
  },
  {
    "url": "https://github.com/akaron/kubeadm_aws/commit/2e2092ec94b27a4c3f0b9f4ee4d46a1983a72518",
    "files": [
      {
        "filename": "ansible/25-local-cni-storageClass-ingress.yml",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -70,5 +70,5 @@\n \n     - debug:\n         msg:\n-        - \"Please wait a few minutes for AWS to generate an Network Load Balancer (NLB)\"\n-        - \"before you start using the Ingress resources.\"\n+        - \"* Please wait a few minutes for AWS to generate a Network Load Balancer (NLB)\"\n+        - \"* By default the ingress-nginx controller is deployed in a worker-node\""
      },
      {
        "filename": "terraform/asg-controlplane.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -12,7 +12,7 @@ resource \"aws_launch_configuration\" \"controlplane\" {\n   name_prefix = \"asg-controlplane\"\n   root_block_device {\n     delete_on_termination = true\n-    volume_size           = 11\n+    volume_size           = var.volume_size_controlplane\n     volume_type           = \"gp2\"\n   }\n }\n@@ -21,9 +21,9 @@ resource \"aws_autoscaling_group\" \"controlplane\" {\n   depends_on = [aws_lb_target_group.apiserver]\n   enabled_metrics      = [\"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupMaxSize\", \"GroupMinSize\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]\n   launch_configuration = aws_launch_configuration.controlplane.id\n-  max_size             = 3\n+  max_size             = 1\n   metrics_granularity  = \"1Minute\"\n-  min_size             = 3\n+  min_size             = 1\n   name                 = \"controlplane\"\n   vpc_zone_identifier  = [local.pubsubnet1, local.pubsubnet2, local.pubsubnet3]\n   target_group_arns    = [aws_lb_target_group.apiserver.arn]"
      },
      {
        "filename": "terraform/asg-worker.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -12,7 +12,7 @@ resource \"aws_launch_configuration\" \"worker\" {\n   name_prefix = \"asg-worker\"\n   root_block_device {\n     delete_on_termination = true\n-    volume_size           = 11\n+    volume_size           = var.volume_size_worker\n     volume_type           = \"gp2\"\n   }\n }"
      },
      {
        "filename": "terraform/inventory.tmpl",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -3,8 +3,6 @@\n \n [controlplane]\n cp1  ansible_host=${cp1}\n-cp2  ansible_host=${cp2}\n-cp3  ansible_host=${cp3}\n \n [controlplane:vars]\n ansible_ssh_user=ubuntu"
      },
      {
        "filename": "terraform/local_file.tf",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -2,8 +2,6 @@ resource \"local_file\" \"inventory\" {\n   # depends_on = [aws_autoscaling_group.controlplane, aws_autoscaling_group.worker]\n   content = templatefile(\"inventory.tmpl\", {\n     cp1 = data.aws_instances.controlplane.public_ips[0]\n-    cp2 = data.aws_instances.controlplane.public_ips[1]\n-    cp3 = data.aws_instances.controlplane.public_ips[2]\n     worker1 = data.aws_instances.worker.public_ips[0]\n     worker2 = data.aws_instances.worker.public_ips[1]\n     worker3 = data.aws_instances.worker.public_ips[2]"
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -47,10 +47,16 @@ variable \"instance_type_worker\" {\n   default     = \"t3a.medium\"\n }\n \n-variable \"volume_size\" {\n+variable \"volume_size_controlplane\" {\n   type        = string\n-  description = \"root volume size used for all EC2 instances; at least 8GB\"\n-  default     = \"8\"  # GiB\n+  description = \"root volume size used for all controlplane nodes; at least 8GB\"\n+  default     = \"10\"  # GiB\n+}\n+\n+variable \"volume_size_worker\" {\n+  type        = string\n+  description = \"root volume size used for all worker nodes; at least 8GB\"\n+  default     = \"10\"  # GiB\n }\n \n variable \"route53_hosted_zone\" {"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/PaloAltoNetworks/terraform-azurerm-vmseries-modules/commit/c50fd3b3f25f87a6326684ad44d507d187e24874",
    "files": [
      {
        "filename": "modules/vm-series/main.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -130,4 +130,9 @@ resource \"azurerm_virtual_machine\" \"this\" {\n     enabled     = true\n     storage_uri = var.bootstrap-storage-account.primary_blob_endpoint\n   }\n+\n+  identity {\n+    type         = var.identity_type\n+    identity_ids = var.identity_ids\n+  }\n }"
      },
      {
        "filename": "modules/vm-series/variables.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -118,3 +118,15 @@ variable \"tags\" {\n   default     = {}\n   type        = map\n }\n+\n+variable \"identity_type\" {\n+  description = \"See [provider documentation](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine)\"\n+  default     = \"SystemAssigned\"\n+  type        = string\n+}\n+\n+variable \"identity_ids\" {\n+  description = \"See [provider documentation](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine)\"\n+  default     = null\n+  type        = list(string)\n+}"
      }
    ],
    "existing_codes": [
      "awareness",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/PaloAltoNetworks/terraform-azurerm-vmseries-modules/commit/d9b4b9dcb95b96bdfb09f9631acd91ab34aa7dcf",
    "files": [
      {
        "filename": "modules/vm-series/README.md",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -1,10 +1,9 @@\n-Palo Alto Networks VM-Series Module for Azure\n-===========\n+# Palo Alto Networks VM-Series Module for Azure\n+\n \n A terraform module for deploying a standalone (non-scale-set) VM-Series firewall in Azure.\n \n-Usage\n------\n+## Usage\n \n ```hcl\n module \"vm-series\" {\n@@ -55,6 +54,7 @@ ___NOTE:___ The module only supports Azure regions that have more than one fault\n | lb\\_backend\\_pool\\_id | Identifier of the backend pool of the load balancer to associate with the VM-Series firewalls. | `string` | `null` | no |\n | location | Region where to deploy VM-Series and dependencies. | `string` | n/a | yes |\n | managed\\_disk\\_type | Type of Managed Disk which should be created. Possible values are `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`. The `Premium_LRS` works only for selected `vm_size` values, details in Azure docs. | `string` | `\"StandardSSD_LRS\"` | no |\n+| metrics\\_retention\\_in\\_days | Specifies the retention period in days. Possible values are 0, 30, 60, 90, 120, 180, 270, 365, 550 or 730. Defaults to 90. A special value 0 disables creation of Application Insights altogether. | `number` | `null` | no |\n | name\\_avset | Name of the Availability Set to be created. Can be `null`, in which case a default name is auto-generated. | `string` | `null` | no |\n | name\\_prefix | Prefix to add to all the object names here | `any` | n/a | yes |\n | password | Initial administrative password to use for VM-Series. | `string` | n/a | yes |\n@@ -75,6 +75,18 @@ ___NOTE:___ The module only supports Azure regions that have more than one fault\n | Name | Description |\n |------|-------------|\n | ip\\_addresses | VM-Series management IP addresses. |\n+| metrics\\_instrumentation\\_key | The Instrumentation Key of the created instance of Azure Application Insights. The instance is unused by default, but is ready to receive custom PAN-OS metrics from the firewalls. To use it, paste this Instrumentation Key into PAN-OS -> Device -> VM-Series -> Azure. |\n | principal\\_id | A map of Azure Service Principals for each of the created VM-Series. Map's key is the same as virtual machine key, the value is an oid of a Service Principal. Usable only if `identity_type` contains SystemAssigned. |\n \n <!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+\n+## Custom Metrics\n+\n+**(Optional)** Firewalls can publish custom metrics (for example `panSessionUtilization`) to Azure Application Insights.\n+This however requires a manual initialization: copy the output `metrics_instrumentation_key` and paste it into your\n+PAN-OS webUI -> Device -> VM-Series -> Azure. The module automatically completes the Step 1 of the\n+[official procedure](https://docs.paloaltonetworks.com/vm-series/10-0/vm-series-deployment/set-up-the-vm-series-firewall-on-azure/enable-azure-application-insights-on-the-vm-series-firewall.html).\n+\n+The metrics gathered within a single Azure Application Insights instance provided by the module, cannot be split to obtain\n+back a result for solely a single firewall. Thus for example if three firewalls use the same Instrumentation Key and report\n+their respective session utilizations as 90%, 20%, 10%, it is possible to see in Azure the average of 40%, the sum of 120%, the max of 90%, but it is *not possible* to know which of the firewalls reported the 90% utilization."
      },
      {
        "filename": "modules/vm-series/main.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -136,3 +136,13 @@ resource \"azurerm_virtual_machine\" \"this\" {\n     identity_ids = var.identity_ids\n   }\n }\n+\n+resource \"azurerm_application_insights\" \"this\" {\n+  count = var.metrics_retention_in_days != 0 ? 1 : 0\n+\n+  name                = var.name_prefix\n+  location            = var.location\n+  resource_group_name = var.resource_group_name # same RG, so no RBAC modification is needed\n+  application_type    = \"other\"\n+  retention_in_days   = var.metrics_retention_in_days\n+}"
      },
      {
        "filename": "modules/vm-series/outputs.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -8,3 +8,8 @@ output \"principal_id\" {\n   description = \"A map of Azure Service Principals for each of the created VM-Series. Map's key is the same as virtual machine key, the value is an oid of a Service Principal. Usable only if `identity_type` contains SystemAssigned.\"\n   value       = { for k, v in var.instances : k => azurerm_virtual_machine.this[k].identity[0].principal_id if var.identity_type != null && var.identity_type != \"\" }\n }\n+\n+output \"metrics_instrumentation_key\" {\n+  description = \"The Instrumentation Key of the created instance of Azure Application Insights. The instance is unused by default, but is ready to receive custom PAN-OS metrics from the firewalls. To use it, paste this Instrumentation Key into PAN-OS -> Device -> VM-Series -> Azure.\"\n+  value       = try(azurerm_application_insights.this[0].instrumentation_key, null)\n+}"
      },
      {
        "filename": "modules/vm-series/variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -130,3 +130,9 @@ variable \"identity_ids\" {\n   default     = null\n   type        = list(string)\n }\n+\n+variable \"metrics_retention_in_days\" {\n+  description = \"Specifies the retention period in days. Possible values are 0, 30, 60, 90, 120, 180, 270, 365, 550 or 730. Defaults to 90. A special value 0 disables creation of Application Insights altogether.\"\n+  default     = null\n+  type        = number\n+}"
      }
    ],
    "existing_codes": [
      "awareness",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/PaloAltoNetworks/terraform-azurerm-vmseries-modules/commit/72e7126b0baf6e039f70c12262d11e7ea7562189",
    "files": [
      {
        "filename": "examples/transit_vnet_common/example.tfvars",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -24,3 +24,6 @@ vmseries = {\n   \"fw00\" = { avzone = 1 }\n   \"fw01\" = { avzone = 2 }\n }\n+\n+common_vmseries_version = \"9.1.3\"\n+common_vmseries_sku     = \"bundle1\""
      }
    ],
    "existing_codes": [
      "awareness",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/UrbanOS-Examples/common/commit/206394bcc75866953f64cbf3bd6214e4e6f96e91",
    "files": [
      {
        "filename": "env/kong.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -172,7 +172,7 @@ variable \"kong_instance_profile\" {\n \n variable \"kong_instance_type\" {\n   description = \"Instance type for kong server\"\n-  default     = \"m4.2xlarge\"\n+  default     =  \"t2.small\"\n }\n \n output \"kong_instance_id\" {"
      },
      {
        "filename": "env/variables/sandbox.tfvars",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -50,8 +50,6 @@ ckan_db_storage_encrypted = false\n \n kong_backup_ami = \"ami-0acc9642a39710355\"\n \n-kong_instance_type = \"t2.small\"\n-\n kong_instance_ebs_optimized = false\n \n # Kong database"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from m4.2xlarge to t2.small"
  },
  {
    "url": "https://github.com/darogina/terragrunt-aws-modules/commit/9c84d03bde131e7f349dcd493ba5b7e55bf8ae2c",
    "files": [
      {
        "filename": "organisation/billing-alarm.tf",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "status": "removed",
        "patch": "@@ -1,24 +0,0 @@\n-resource \"aws_sns_topic\" \"consolidated_billing_alarm\" {\n-  name = \"consolidated-billing-alarm\"\n-\n-  provisioner \"local-exec\" {\n-    command = \"aws sns subscribe --topic-arn ${self.arn} --protocol email --notification-endpoint ${var.admin_email}\"\n-  }\n-}\n-\n-resource \"aws_cloudwatch_metric_alarm\" \"consolidated_billing_alarm\" {\n-  alarm_name          = \"consolidated-billing-alarm\"\n-  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods  = \"1\"\n-  metric_name         = \"EstimatedCharges\"\n-  namespace           = \"AWS/Billing\"\n-  period              = \"28800\"\n-  statistic           = \"Maximum\"\n-  threshold           = var.billing_alarm_threshold\n-  alarm_description   = \"Consolidated billing alarm >= ${var.billing_alarm_threshold} ${var.billing_alarm_currency}\"\n-  alarm_actions       = [aws_sns_topic.consolidated_billing_alarm.arn]\n-\n-  dimensions = {\n-    Currency = var.billing_alarm_currency\n-  }\n-}"
      },
      {
        "filename": "organisation/budget.tf",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+resource \"aws_budgets_budget\" \"budget\" {\n+  name              = \"monthly-budget\"\n+  budget_type       = \"COST\"\n+  limit_amount      = var.billing_alarm_threshold\n+  limit_unit        = var.billing_alarm_currency\n+  time_period_start = \"2019-01-01_00:00\"\n+  time_unit         = \"MONTHLY\"\n+\n+  notification {\n+    comparison_operator        = \"GREATER_THAN\"\n+    threshold                  = 50\n+    threshold_type             = \"PERCENTAGE\"\n+    notification_type          = \"FORECASTED\"\n+    subscriber_email_addresses = [var.admin_email]\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cloudspout/Gefjun/commit/665692a86bb65ddfa6c001f296c76c17288e2944",
    "files": [
      {
        "filename": "infra/alb.tf",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -10,31 +10,31 @@ resource \"aws_alb\" \"grafana\" {\n   tags = local.common_tags\n }\n \n-resource \"aws_alb_listener\" \"alb_listener\" {  \n+resource \"aws_alb_listener\" \"alb_listener\" {\n   load_balancer_arn = aws_alb.grafana.arn\n   port              = 443\n   protocol          = \"HTTPS\"\n-  \n+\n   certificate_arn = aws_acm_certificate_validation.grafana.certificate_arn\n \n-  default_action {    \n+  default_action {\n     target_group_arn = aws_alb_target_group.grafana.arn\n-    type             = \"forward\"  \n+    type             = \"forward\"\n   }\n \n-  depends_on = [ aws_alb_target_group.grafana ]\n+  depends_on = [aws_alb_target_group.grafana]\n }\n \n resource \"aws_alb_target_group\" \"grafana\" {\n-  name     = \"Gefjun-${terraform.workspace}-Grafana\"\n-  port     = 3000\n+  name        = \"Gefjun-${terraform.workspace}-Grafana\"\n+  port        = 3000\n   target_type = \"ip\"\n-  protocol = \"HTTP\"\n-  vpc_id   = aws_vpc._.id\n+  protocol    = \"HTTP\"\n+  vpc_id      = aws_vpc._.id\n \n   health_check {\n     matcher = \"200-399\"\n   }\n \n-  depends_on = [ aws_alb.grafana ]\n+  depends_on = [aws_alb.grafana]\n }"
      },
      {
        "filename": "infra/api-greenhouse/endpoint-light/main.tf",
        "additions": 49,
        "deletions": 49,
        "changes": 98,
        "status": "modified",
        "patch": "@@ -1,16 +1,16 @@\n resource \"aws_api_gateway_method\" \"greenhouse_lights\" {\n-  rest_api_id   = var.aws_api_gateway_rest_api.id\n-  resource_id   = var.aws_api_gateway_resource.id\n-  http_method   = \"POST\"\n-  authorization = \"NONE\"\n+  rest_api_id      = var.aws_api_gateway_rest_api.id\n+  resource_id      = var.aws_api_gateway_resource.id\n+  http_method      = \"POST\"\n+  authorization    = \"NONE\"\n   api_key_required = true\n }\n \n resource \"aws_api_gateway_method\" \"greenhouse_lights-cors\" {\n-  rest_api_id   = var.aws_api_gateway_rest_api.id\n-  resource_id   = var.aws_api_gateway_resource.id\n-  http_method   = \"OPTIONS\"\n-  authorization = \"NONE\"\n+  rest_api_id      = var.aws_api_gateway_rest_api.id\n+  resource_id      = var.aws_api_gateway_resource.id\n+  http_method      = \"OPTIONS\"\n+  authorization    = \"NONE\"\n   api_key_required = false\n }\n \n@@ -21,18 +21,18 @@ resource \"aws_api_gateway_integration\" \"integration\" {\n   integration_http_method = \"POST\"\n   type                    = \"AWS\"\n   uri                     = var.aws_lambda_function.invoke_arn\n-  passthrough_behavior = \"NEVER\"\n+  passthrough_behavior    = \"NEVER\"\n   request_templates = {\n     \"application/json\" = \"{\\\"desiredState\\\": ${var.desired_state}}\"\n   }\n }\n \n resource \"aws_api_gateway_integration\" \"integration-cors\" {\n-  rest_api_id             = var.aws_api_gateway_rest_api.id\n-  resource_id             = aws_api_gateway_method.greenhouse_lights.resource_id\n-  http_method             = aws_api_gateway_method.greenhouse_lights-cors.http_method\n-  type = \"MOCK\"\n-  passthrough_behavior    = \"NEVER\"\n+  rest_api_id          = var.aws_api_gateway_rest_api.id\n+  resource_id          = aws_api_gateway_method.greenhouse_lights.resource_id\n+  http_method          = aws_api_gateway_method.greenhouse_lights-cors.http_method\n+  type                 = \"MOCK\"\n+  passthrough_behavior = \"NEVER\"\n \n   request_templates = {\n     \"application/json\" = \"{\\\"statusCode\\\": 200}\"\n@@ -41,75 +41,75 @@ resource \"aws_api_gateway_integration\" \"integration-cors\" {\n \n \n resource \"aws_api_gateway_integration_response\" \"greenhouse_lights\" {\n-  rest_api_id   = var.aws_api_gateway_rest_api.id\n-  resource_id   = aws_api_gateway_method.greenhouse_lights.resource_id\n-  http_method   = aws_api_gateway_method.greenhouse_lights.http_method\n-  \n-  status_code = 200\n+  rest_api_id = var.aws_api_gateway_rest_api.id\n+  resource_id = aws_api_gateway_method.greenhouse_lights.resource_id\n+  http_method = aws_api_gateway_method.greenhouse_lights.http_method\n+\n+  status_code       = 200\n   selection_pattern = \".*\"\n \n   response_templates = {\n     \"application/json\" = jsonencode({\n-      \"statusCode\": 200,\n-      \"headers\": {\n-        \"Content-Type\": \"application/json\"\n+      \"statusCode\" : 200,\n+      \"headers\" : {\n+        \"Content-Type\" : \"application/json\"\n       }\n     })\n   }\n \n-    response_parameters = { \n-    \"method.response.header.Access-Control-Allow-Origin\" = \"'*'\",\n+  response_parameters = {\n+    \"method.response.header.Access-Control-Allow-Origin\"  = \"'*'\",\n     \"method.response.header.Access-Control-Allow-Headers\" = \"'*'\",\n     \"method.response.header.Access-Control-Allow-Methods\" = \"'*'\"\n   }\n }\n \n resource \"aws_api_gateway_integration_response\" \"greenhouse_lights-cors\" {\n-  rest_api_id   = var.aws_api_gateway_rest_api.id\n-  resource_id   = aws_api_gateway_method.greenhouse_lights-cors.resource_id\n-  http_method   = aws_api_gateway_method.greenhouse_lights-cors.http_method\n-  \n-  status_code = 200\n+  rest_api_id = var.aws_api_gateway_rest_api.id\n+  resource_id = aws_api_gateway_method.greenhouse_lights-cors.resource_id\n+  http_method = aws_api_gateway_method.greenhouse_lights-cors.http_method\n+\n+  status_code       = 200\n   selection_pattern = \".*\"\n \n   response_templates = {\n     \"application/json\" = jsonencode({\n-      \"statusCode\": 200,\n-      \"headers\": {\n-        \"Content-Type\": \"application/json\"\n+      \"statusCode\" : 200,\n+      \"headers\" : {\n+        \"Content-Type\" : \"application/json\"\n       }\n-    })  \n+    })\n   }\n-  response_parameters = { \n-    \"method.response.header.Access-Control-Allow-Origin\" = \"'*'\",\n+  response_parameters = {\n+    \"method.response.header.Access-Control-Allow-Origin\"  = \"'*'\",\n     \"method.response.header.Access-Control-Allow-Headers\" = \"'*'\",\n     \"method.response.header.Access-Control-Allow-Methods\" = \"'*'\"\n   }\n }\n \n resource \"aws_api_gateway_method_response\" \"response_200\" {\n-  rest_api_id   = var.aws_api_gateway_rest_api.id\n-  resource_id   = aws_api_gateway_method.greenhouse_lights.resource_id\n-  http_method   = aws_api_gateway_method.greenhouse_lights.http_method\n-  \n-  response_parameters = { \n-    \"method.response.header.Access-Control-Allow-Origin\" = true,\n+  rest_api_id = var.aws_api_gateway_rest_api.id\n+  resource_id = aws_api_gateway_method.greenhouse_lights.resource_id\n+  http_method = aws_api_gateway_method.greenhouse_lights.http_method\n+\n+  response_parameters = {\n+    \"method.response.header.Access-Control-Allow-Origin\"  = true,\n     \"method.response.header.Access-Control-Allow-Headers\" = true,\n-    \"method.response.header.Access-Control-Allow-Methods\" = true \n+    \"method.response.header.Access-Control-Allow-Methods\" = true\n   }\n \n   status_code = 200\n }\n \n resource \"aws_api_gateway_method_response\" \"response_200-cors\" {\n-  rest_api_id   = var.aws_api_gateway_rest_api.id\n-  resource_id   = aws_api_gateway_method.greenhouse_lights-cors.resource_id\n-  http_method   = aws_api_gateway_method.greenhouse_lights-cors.http_method\n-  \n-  response_parameters = { \n-    \"method.response.header.Access-Control-Allow-Origin\" = true,\n+  rest_api_id = var.aws_api_gateway_rest_api.id\n+  resource_id = aws_api_gateway_method.greenhouse_lights-cors.resource_id\n+  http_method = aws_api_gateway_method.greenhouse_lights-cors.http_method\n+\n+  response_parameters = {\n+    \"method.response.header.Access-Control-Allow-Origin\"  = true,\n     \"method.response.header.Access-Control-Allow-Headers\" = true,\n-    \"method.response.header.Access-Control-Allow-Methods\" = true \n+    \"method.response.header.Access-Control-Allow-Methods\" = true\n   }\n \n   status_code = 200"
      },
      {
        "filename": "infra/api-greenhouse/endpoint-light/outputs.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,8 +1,8 @@\n output \"md5sum\" {\n-    value = md5(<<EOT\n+  value = md5(<<EOT\n       ${filemd5(\"${path.module}/main.tf\")}\n       ${filemd5(\"${path.module}/outputs.tf\")}\n       ${filemd5(\"${path.module}/variables.tf\")}\n EOT\n-    )\n+  )\n }\n\\ No newline at end of file"
      },
      {
        "filename": "infra/api-greenhouse/endpoint-light/variables.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,15 +1,15 @@\n variable \"aws_api_gateway_rest_api\" {\n-    type = object({id: string})\n+  type = object({ id : string })\n }\n \n variable \"aws_lambda_function\" {\n-    type = object({invoke_arn: string})\n+  type = object({ invoke_arn : string })\n }\n \n variable \"aws_api_gateway_resource\" {\n-    type = object({id: string})\n+  type = object({ id : string })\n }\n \n variable \"desired_state\" {\n-    type = bool\n+  type = bool\n }\n\\ No newline at end of file"
      },
      {
        "filename": "infra/api-greenhouse/main.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -21,17 +21,17 @@ module \"endponit_light-off\" {\n \n   aws_api_gateway_rest_api = var.aws_api_gateway_rest_api\n   aws_api_gateway_resource = aws_api_gateway_resource.greenhouse_lights_off\n-  aws_lambda_function = var.aws_lambda_function\n-  desired_state = false\n+  aws_lambda_function      = var.aws_lambda_function\n+  desired_state            = false\n }\n \n module \"endponit_light-on\" {\n   source = \"./endpoint-light\"\n \n   aws_api_gateway_rest_api = var.aws_api_gateway_rest_api\n   aws_api_gateway_resource = aws_api_gateway_resource.greenhouse_lights_on\n-  aws_lambda_function = var.aws_lambda_function\n-  desired_state = true\n+  aws_lambda_function      = var.aws_lambda_function\n+  desired_state            = true\n }\n \n "
      },
      {
        "filename": "infra/api-greenhouse/outputs.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,11 +1,11 @@\n output \"md5sum\" {\n-    value = md5(<<EOT\n+  value = md5(<<EOT\n       ${filemd5(\"${path.module}/main.tf\")}\n       ${filemd5(\"${path.module}/outputs.tf\")}\n       ${filemd5(\"${path.module}/variables.tf\")}\n       module.endponit_light-on.md5sum\n       module.endponit_light-off.md5sum\n EOT\n-    )\n+  )\n }\n "
      },
      {
        "filename": "infra/api-greenhouse/variables.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,19 +1,19 @@\n variable \"aws_api_gateway_rest_api\" {\n-    type = object({id: string})\n+  type = object({ id : string })\n }\n \n variable \"aws_api_gateway_resource\" {\n-    type = object({id: string})\n+  type = object({ id : string })\n }\n \n variable \"aws_lambda_function\" {\n-    type = object({invoke_arn: string})\n+  type = object({ invoke_arn : string })\n }\n \n variable \"region\" {\n   type = string\n }\n \n variable \"account\" {\n-    type = object({account_id:string})\n+  type = object({ account_id : string })\n }\n\\ No newline at end of file"
      },
      {
        "filename": "infra/apigateway.tf",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n locals {\n   apigateway_description = \"apigateway.tf${filemd5(\"apigateway.tf\")} greenhouse:${module.api_greenhouse.md5sum}\"\n-  apigateway_md5 = md5(local.apigateway_description)\n+  apigateway_md5         = md5(local.apigateway_description)\n }\n \n resource \"aws_api_gateway_rest_api\" \"api\" {\n@@ -22,7 +22,7 @@ resource \"aws_api_gateway_domain_name\" \"api\" {\n }\n \n resource \"aws_api_gateway_api_key\" \"grafana\" {\n-  name = \"grafana-${terraform.workspace}\"\n+  name        = \"grafana-${terraform.workspace}\"\n   description = \"Made in NYC with \u2764\"\n \n   tags = local.common_tags\n@@ -49,40 +49,40 @@ resource \"aws_api_gateway_deployment\" \"greenhouse\" {\n   rest_api_id = aws_api_gateway_rest_api.api.id\n \n   stage_description = local.apigateway_md5\n-  description = local.apigateway_description\n+  description       = local.apigateway_description\n \n   stage_name = \"\"\n \n   lifecycle {\n     create_before_destroy = \"true\"\n   }\n \n-  depends_on = [ module.api_greenhouse ]\n+  depends_on = [module.api_greenhouse]\n }\n \n resource \"aws_api_gateway_method_settings\" \"greenhouse\" {\n   rest_api_id = aws_api_gateway_rest_api.api.id\n-  stage_name = aws_api_gateway_stage.greenhouse.stage_name\n+  stage_name  = aws_api_gateway_stage.greenhouse.stage_name\n   method_path = \"*/*\"\n \n   settings {\n     metrics_enabled = true\n-  #  logging_level = \"INFO\"\n+    #  logging_level = \"INFO\"\n     data_trace_enabled = false\n   }\n }\n \n resource \"aws_api_gateway_stage\" \"greenhouse\" {\n   rest_api_id = aws_api_gateway_rest_api.api.id\n \n-  stage_name = terraform.workspace\n+  stage_name    = terraform.workspace\n   deployment_id = aws_api_gateway_deployment.greenhouse.id\n   #documentation_version\n \n   xray_tracing_enabled = \"true\"\n \n   tags = merge(local.common_tags, {\n-    md5: local.apigateway_md5\n+    md5 : local.apigateway_md5\n   })\n \n   depends_on = [\n@@ -117,15 +117,15 @@ module \"api_greenhouse\" {\n \n   aws_api_gateway_rest_api = aws_api_gateway_rest_api.api\n   aws_api_gateway_resource = aws_api_gateway_resource.greenhouse\n-  aws_lambda_function = aws_lambda_function.light\n+  aws_lambda_function      = aws_lambda_function.light\n \n-  region = var.aws_region\n+  region  = var.aws_region\n   account = data.aws_caller_identity.current\n }\n \n resource \"aws_api_gateway_base_path_mapping\" \"greenhouse\" {\n-  api_id = aws_api_gateway_rest_api.api.id\n-  stage_name = aws_api_gateway_stage.greenhouse.stage_name\n+  api_id      = aws_api_gateway_rest_api.api.id\n+  stage_name  = aws_api_gateway_stage.greenhouse.stage_name\n   domain_name = aws_api_gateway_domain_name.api.domain_name\n }\n resource \"aws_api_gateway_account\" \"api\" {"
      },
      {
        "filename": "infra/cloudwatch.tf",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "status": "modified",
        "patch": "@@ -1,16 +1,31 @@\n+resource \"aws_cloudwatch_log_group\" \"AWSIotLogs\" {\n+  name              = \"AWSIotLogs\"\n+  retention_in_days = 1\n+}\n+\n resource \"aws_cloudwatch_log_group\" \"light\" {\n-  name              = \"/aws/lambda/Gefjun/${terraform.workspace}/light\"\n-  retention_in_days = 7\n+  name              = \"/aws/lambda/Gefjun-${terraform.workspace}-Light\"\n+  retention_in_days = 1\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"iot2influxdb\" {\n+  name              = \"/aws/lambda/Gefjun-${terraform.workspace}-iot2influxdb\"\n+  retention_in_days = 1\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"sunrise\" {\n+  name              = \"/aws/lambda/Gefjun-${terraform.workspace}-Sunrise\"\n+  retention_in_days = 1\n }\n \n resource \"aws_cloudwatch_log_group\" \"grafana\" {\n   name              = \"/aws/ecs/Gefjun/${terraform.workspace}/grafana\"\n-  retention_in_days = 7\n+  retention_in_days = 1\n }\n \n resource \"aws_cloudwatch_log_group\" \"influxdb\" {\n   name              = \"/aws/ecs/Gefjun/${terraform.workspace}/influxdb\"\n-  retention_in_days = 7\n+  retention_in_days = 1\n }\n \n resource \"aws_cloudwatch_event_rule\" \"light_trigger_on\" {"
      },
      {
        "filename": "infra/ecs-grafana.tf",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -5,10 +5,10 @@ data \"template_file\" \"grafana\" {\n     cpu    = var.grafana_cpu\n     memory = var.grafana_memory\n \n-    admin_username = \"gefjun\"\n+    admin_username     = \"gefjun\"\n     admin_password-arn = aws_secretsmanager_secret.grafana_admin-password.arn\n \n-    region = var.aws_region\n+    region    = var.aws_region\n     log_group = aws_cloudwatch_log_group.grafana.name\n   }\n }\n@@ -37,19 +37,19 @@ resource \"aws_ecs_task_definition\" \"grafana\" {\n }\n \n resource \"aws_ecs_service\" \"grafana\" {\n-  name            = \"grafana\"\n-  cluster         = aws_ecs_cluster.gefjun.id\n-  task_definition = aws_ecs_task_definition.grafana.arn\n-  desired_count   = 1\n-  launch_type = \"FARGATE\"\n+  name             = \"grafana\"\n+  cluster          = aws_ecs_cluster.gefjun.id\n+  task_definition  = aws_ecs_task_definition.grafana.arn\n+  desired_count    = 1\n+  launch_type      = \"FARGATE\"\n   platform_version = \"1.4.0\" #This should be latest but that defaults to 1.3 right now\n \n   network_configuration {\n     security_groups = [aws_security_group.grafana_access.id]\n \n     #subnets = aws_subnet.private.*.id\n     assign_public_ip = true\n-    subnets = aws_subnet.public.*.id\n+    subnets          = aws_subnet.public.*.id\n   }\n \n   load_balancer {\n@@ -58,7 +58,7 @@ resource \"aws_ecs_service\" \"grafana\" {\n     container_port   = 3000\n   }\n \n-  tags = local.common_tags\n+  tags           = local.common_tags\n   propagate_tags = \"TASK_DEFINITION\"\n \n   depends_on = [aws_alb_target_group.grafana, aws_ecs_service.influxdb]\n@@ -73,7 +73,7 @@ resource \"aws_efs_file_system\" \"grafana\" {\n resource \"aws_efs_mount_target\" \"grafana\" {\n   count = length(aws_subnet.public)\n \n-  file_system_id = aws_efs_file_system.grafana.id\n-  subnet_id      = aws_subnet.public[count.index].id\n+  file_system_id  = aws_efs_file_system.grafana.id\n+  subnet_id       = aws_subnet.public[count.index].id\n   security_groups = [aws_security_group.efs_grafana_access.id]\n }\n\\ No newline at end of file"
      },
      {
        "filename": "infra/ecs-influxdb.tf",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "status": "modified",
        "patch": "@@ -5,17 +5,17 @@ data \"template_file\" \"influxdb\" {\n     cpu    = var.influxdb_cpu\n     memory = var.influxdb_memory\n \n-    db_name        = \"gefjun\"\n-    admin_username = \"influxdb\"\n+    db_name            = \"gefjun\"\n+    admin_username     = \"influxdb\"\n     admin_password-arn = aws_secretsmanager_secret.influxdb_admin-password.arn\n \n-    grafana_username = \"grafana\"\n+    grafana_username     = \"grafana\"\n     grafana_password-arn = aws_secretsmanager_secret.influxdb_grafana-password.arn\n \n-    lambda_username = \"lambda\"\n+    lambda_username     = \"lambda\"\n     lambda_password-arn = aws_secretsmanager_secret.influxdb_lambda-password.arn\n \n-    region = var.aws_region\n+    region    = var.aws_region\n     log_group = aws_cloudwatch_log_group.influxdb.name\n   }\n }\n@@ -44,26 +44,26 @@ resource \"aws_ecs_task_definition\" \"influxdb\" {\n }\n \n resource \"aws_ecs_service\" \"influxdb\" {\n-  name            = \"influxdb\"\n-  cluster         = aws_ecs_cluster.gefjun.id\n-  task_definition = aws_ecs_task_definition.influxdb.arn\n-  desired_count   = 1\n-  launch_type = \"FARGATE\"\n+  name             = \"influxdb\"\n+  cluster          = aws_ecs_cluster.gefjun.id\n+  task_definition  = aws_ecs_task_definition.influxdb.arn\n+  desired_count    = 1\n+  launch_type      = \"FARGATE\"\n   platform_version = \"1.4.0\" #This should be latest but that defaults to 1.3 right now\n \n   network_configuration {\n     security_groups = [aws_security_group.influxdb_access.id]\n \n     #subnets = aws_subnet.private.*.id\n     assign_public_ip = true\n-    subnets = aws_subnet.public.*.id\n+    subnets          = aws_subnet.public.*.id\n   }\n \n   service_registries {\n     registry_arn = aws_service_discovery_service.influxdb.arn\n   }\n \n-  tags = local.common_tags\n+  tags           = local.common_tags\n   propagate_tags = \"TASK_DEFINITION\"\n }\n \n@@ -76,7 +76,7 @@ resource \"aws_efs_file_system\" \"influxdb\" {\n resource \"aws_efs_mount_target\" \"influxdb\" {\n   count = length(aws_subnet.public)\n \n-  file_system_id = aws_efs_file_system.influxdb.id\n-  subnet_id      = aws_subnet.public[count.index].id\n+  file_system_id  = aws_efs_file_system.influxdb.id\n+  subnet_id       = aws_subnet.public[count.index].id\n   security_groups = [aws_security_group.efs_influxdb_access.id]\n }"
      },
      {
        "filename": "infra/ecs.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -8,8 +8,8 @@ resource \"aws_ecs_cluster\" \"gefjun\" {\n   }\n \n   setting {\n-    name = \"containerInsights\"\n-    value = \"enabled\"\n+    name  = \"containerInsights\"\n+    value = \"disabled\"\n   }\n \n   tags = local.common_tags"
      },
      {
        "filename": "infra/iam-apigateway.tf",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -24,16 +24,16 @@ data \"aws_iam_policy_document\" \"api_gateway\" {\n \n   statement {\n     actions = [\n-        \"logs:CreateLogGroup\",\n-        \"logs:CreateLogStream\",\n-        \"logs:DescribeLogGroups\",\n-        \"logs:DescribeLogStreams\",\n-        \"logs:PutLogEvents\",\n-        \"logs:GetLogEvents\",\n-        \"logs:FilterLogEvents\"\n+      \"logs:CreateLogGroup\",\n+      \"logs:CreateLogStream\",\n+      \"logs:DescribeLogGroups\",\n+      \"logs:DescribeLogStreams\",\n+      \"logs:PutLogEvents\",\n+      \"logs:GetLogEvents\",\n+      \"logs:FilterLogEvents\"\n     ]\n     resources = [\"*\"]\n-    effect = \"Allow\"\n+    effect    = \"Allow\"\n   }\n }\n "
      },
      {
        "filename": "infra/iam-grafana.tf",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -14,10 +14,10 @@ data \"aws_iam_policy_document\" \"grafana_secrets_access\" {\n \n   statement {\n     actions = [\n-        \"secretsmanager:GetSecretValue\"\n+      \"secretsmanager:GetSecretValue\"\n     ]\n-    resources = [ aws_secretsmanager_secret.grafana_admin-password.arn ]\n-    effect = \"Allow\"\n+    resources = [aws_secretsmanager_secret.grafana_admin-password.arn]\n+    effect    = \"Allow\"\n   }\n }\n \n@@ -44,31 +44,31 @@ data \"aws_iam_policy_document\" \"grafana_cloudwatch_access\" {\n \n   statement {\n     actions = [\n-        \"cloudwatch:DescribeAlarmsForMetric\",\n-        \"cloudwatch:ListMetrics\",\n-        \"cloudwatch:GetMetricStatistics\",\n-        \"cloudwatch:GetMetricData\"\n+      \"cloudwatch:DescribeAlarmsForMetric\",\n+      \"cloudwatch:ListMetrics\",\n+      \"cloudwatch:GetMetricStatistics\",\n+      \"cloudwatch:GetMetricData\"\n     ]\n     resources = [\"*\"]\n-    effect = \"Allow\"\n+    effect    = \"Allow\"\n   }\n \n   statement {\n     actions = [\n-      \"ec2:DescribeTags\", \n+      \"ec2:DescribeTags\",\n       \"ec2:DescribeInstances\",\n       \"ec2:DescribeRegions\"\n     ]\n     resources = [\"*\"]\n-    effect = \"Allow\"\n+    effect    = \"Allow\"\n   }\n \n   statement {\n     actions = [\n       \"tag:GetResources\"\n     ]\n     resources = [\"*\"]\n-    effect = \"Allow\"\n+    effect    = \"Allow\"\n   }\n }\n "
      },
      {
        "filename": "infra/iam-influxdb.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -20,13 +20,13 @@ data \"aws_iam_policy_document\" \"influxdb_secrets_access\" {\n \n   statement {\n     actions = [\n-        \"secretsmanager:GetSecretValue\"\n+      \"secretsmanager:GetSecretValue\"\n     ]\n     resources = [\n       aws_secretsmanager_secret.influxdb_admin-password.arn,\n       aws_secretsmanager_secret.influxdb_grafana-password.arn,\n       aws_secretsmanager_secret.influxdb_lambda-password.arn\n-     ]\n+    ]\n     effect = \"Allow\"\n   }\n }"
      },
      {
        "filename": "infra/lambda_iot2influxdb.tf",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -15,22 +15,25 @@ resource \"aws_lambda_function\" \"iot2influxdb\" {\n \n   vpc_config {\n     subnet_ids         = aws_subnet.public.*.id\n-    security_group_ids = [ aws_security_group.iot2influxdb.id ]\n+    security_group_ids = [aws_security_group.iot2influxdb.id]\n   }\n \n   environment {\n     variables = {\n-        INFLUXDB        = \"gefjun\"\n-        INFLUXDBUSRNAME = \"lambda\"\n-        INFLUXDBPWD     = aws_secretsmanager_secret_version.influxdb_lambda-password.secret_string\n-        INFLUXDBPORT    = \"8086\"\n-        INFLUXDBHOST    = \"influxdb.gefjun.local\"\n+      INFLUXDB        = \"gefjun\"\n+      INFLUXDBUSRNAME = \"lambda\"\n+      INFLUXDBPWD     = aws_secretsmanager_secret_version.influxdb_lambda-password.secret_string\n+      INFLUXDBPORT    = \"8086\"\n+      INFLUXDBHOST    = \"influxdb.gefjun.local\"\n     }\n   }\n \n   tags = local.common_tags\n \n-  depends_on = [aws_iam_role_policy_attachment.lambda_logging-iot2influxdb, aws_cloudwatch_log_group.light]\n+  depends_on = [\n+    aws_iam_role_policy_attachment.lambda_logging-iot2influxdb,\n+    aws_cloudwatch_log_group.iot2influxdb\n+  ]\n }\n \n resource \"aws_lambda_alias\" \"iot2influxdb\" {"
      },
      {
        "filename": "infra/lambda_light.tf",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -22,7 +22,10 @@ resource \"aws_lambda_function\" \"light\" {\n \n   tags = local.common_tags\n \n-  depends_on = [aws_iam_role_policy_attachment.lambda_logging-light, aws_cloudwatch_log_group.light]\n+  depends_on = [\n+    aws_iam_role_policy_attachment.lambda_logging-light,\n+    aws_cloudwatch_log_group.light\n+  ]\n }\n \n resource \"aws_lambda_alias\" \"light\" {\n@@ -75,6 +78,6 @@ resource \"aws_lambda_permission\" \"allow_apigw_on\" {\n \n   source_arn = \"${aws_api_gateway_rest_api.api.execution_arn}/*/*\"\n \n-#  qualifier     = aws_lambda_alias.light.name\n+  #  qualifier     = aws_lambda_alias.light.name\n }\n "
      },
      {
        "filename": "infra/lambda_sunrise.tf",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -15,19 +15,22 @@ resource \"aws_lambda_function\" \"sunrise\" {\n \n   environment {\n     variables = {\n-      LOCATION_LAT = \"40.7603878\"\n-      LOCATION_LNG = \"-74.0006542\"\n-      DURATION     = 6\n-      RULE_ON      = aws_cloudwatch_event_rule.light_trigger_on.name\n-      RULE_OFF     = aws_cloudwatch_event_rule.light_trigger_off.name\n+      LOCATION_LAT           = \"40.7603878\"\n+      LOCATION_LNG           = \"-74.0006542\"\n+      DURATION               = 6\n+      RULE_ON                = aws_cloudwatch_event_rule.light_trigger_on.name\n+      RULE_OFF               = aws_cloudwatch_event_rule.light_trigger_off.name\n       GRAFANA_API_ANNOTATION = var.grafana_api_annotation\n-      GRAFANA_API_SECRET_ID = aws_secretsmanager_secret.grafana_api_key.id\n+      GRAFANA_API_SECRET_ID  = aws_secretsmanager_secret.grafana_api_key.id\n     }\n   }\n \n   tags = local.common_tags\n \n-  depends_on = [aws_iam_role_policy_attachment.lambda_logging-sunrise, aws_cloudwatch_log_group.light]\n+  depends_on = [\n+    aws_iam_role_policy_attachment.lambda_logging-sunrise,\n+    aws_cloudwatch_log_group.sunrise\n+  ]\n }\n \n resource \"aws_lambda_alias\" \"sunrise\" {"
      },
      {
        "filename": "infra/r53.tf",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n data \"aws_route53_zone\" \"cloudspout_io\" {\n-  name         = \"cloudspout.io.\"\n-} \n+  name = \"cloudspout.io.\"\n+}\n \n resource \"aws_route53_record\" \"grafana_validation\" {\n   count = length(aws_acm_certificate.grafana.domain_validation_options)\n@@ -27,8 +27,8 @@ resource \"aws_route53_record\" \"api_validation\" {\n resource \"aws_route53_record\" \"grafana_gefjun_cloudspout_io\" {\n   zone_id = data.aws_route53_zone.cloudspout_io.id\n \n-  name    = \"grafana.gefjun.cloudspout.io\"\n-  type    = \"A\"\n+  name = \"grafana.gefjun.cloudspout.io\"\n+  type = \"A\"\n \n   alias {\n     name                   = aws_alb.grafana.dns_name\n@@ -40,8 +40,8 @@ resource \"aws_route53_record\" \"grafana_gefjun_cloudspout_io\" {\n resource \"aws_route53_record\" \"api_gefjun_cloudspout_io\" {\n   zone_id = data.aws_route53_zone.cloudspout_io.id\n \n-  name    = aws_acm_certificate.api.domain_name\n-  type    = \"A\"\n+  name = aws_acm_certificate.api.domain_name\n+  type = \"A\"\n \n   alias {\n     evaluate_target_health = true"
      },
      {
        "filename": "infra/secrets.tf",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -10,8 +10,8 @@ resource \"aws_secretsmanager_secret_version\" \"grafana_admin-password\" {\n }\n \n resource \"random_password\" \"grafana_admin-password\" {\n-  length = 12\n-  special = true\n+  length           = 12\n+  special          = true\n   override_special = \"_%@\"\n }\n \n@@ -27,8 +27,8 @@ resource \"aws_secretsmanager_secret_version\" \"influxdb_admin-password\" {\n }\n \n resource \"random_password\" \"influxdb_admin-password\" {\n-  length = 12\n-  special = true\n+  length           = 12\n+  special          = true\n   override_special = \"_%@\"\n }\n \n@@ -44,8 +44,8 @@ resource \"aws_secretsmanager_secret_version\" \"influxdb_grafana-password\" {\n }\n \n resource \"random_password\" \"influxdb_grafana-password\" {\n-  length = 12\n-  special = true\n+  length           = 12\n+  special          = true\n   override_special = \"_%@\"\n }\n \n@@ -61,7 +61,7 @@ resource \"aws_secretsmanager_secret_version\" \"influxdb_lambda-password\" {\n }\n \n resource \"random_password\" \"influxdb_lambda-password\" {\n-  length = 12\n-  special = true\n+  length           = 12\n+  special          = true\n   override_special = \"_%@\"\n }"
      },
      {
        "filename": "infra/securitygroups.tf",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -4,9 +4,9 @@ resource \"aws_security_group\" \"grafana_access\" {\n   vpc_id      = aws_vpc._.id\n \n   ingress {\n-    from_port   = 3000\n-    to_port     = 3000\n-    protocol    = \"tcp\"\n+    from_port       = 3000\n+    to_port         = 3000\n+    protocol        = \"tcp\"\n     security_groups = [aws_security_group.alb_access.id]\n   }\n \n@@ -45,9 +45,9 @@ resource \"aws_security_group\" \"influxdb_access\" {\n   vpc_id      = aws_vpc._.id\n \n   ingress {\n-    from_port   = 8086\n-    to_port     = 8086\n-    protocol    = \"tcp\"\n+    from_port = 8086\n+    to_port   = 8086\n+    protocol  = \"tcp\"\n     security_groups = [\n       aws_security_group.grafana_access.id,\n       aws_security_group.iot2influxdb.id\n@@ -96,9 +96,9 @@ resource \"aws_security_group\" \"efs_grafana_access\" {\n   vpc_id      = aws_vpc._.id\n \n   ingress {\n-    from_port   = 2049\n-    to_port     = 2049\n-    protocol    = \"tcp\"\n+    from_port = 2049\n+    to_port   = 2049\n+    protocol  = \"tcp\"\n     security_groups = [\n       aws_security_group.grafana_access.id,\n     ]\n@@ -115,9 +115,9 @@ resource \"aws_security_group\" \"efs_influxdb_access\" {\n   vpc_id      = aws_vpc._.id\n \n   ingress {\n-    from_port   = 2049\n-    to_port     = 2049\n-    protocol    = \"tcp\"\n+    from_port = 2049\n+    to_port   = 2049\n+    protocol  = \"tcp\"\n     security_groups = [\n       aws_security_group.influxdb_access.id,\n     ]"
      },
      {
        "filename": "infra/service-discovery.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n \n resource \"aws_service_discovery_private_dns_namespace\" \"gefjun\" {\n-  name        = \"gefjun.local\"\n-  vpc         = aws_vpc._.id\n+  name = \"gefjun.local\"\n+  vpc  = aws_vpc._.id\n }\n \n resource \"aws_service_discovery_service\" \"influxdb\" {"
      },
      {
        "filename": "infra/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -17,7 +17,7 @@ variable \"grafana_cpu\" {\n }\n \n variable \"grafana_api_annotation\" {\n-  type = string\n+  type    = string\n   default = \"https://grafana.gefjun.cloudspout.io/api/annotations\"\n }\n "
      },
      {
        "filename": "infra/vpc.tf",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -3,7 +3,7 @@ data \"aws_availability_zones\" \"available\" {}\n resource \"aws_vpc\" \"_\" {\n   cidr_block           = \"10.0.0.0/16\"\n   enable_dns_hostnames = true\n-  enable_dns_support   =  true\n+  enable_dns_support   = true\n   tags = merge(local.common_tags, {\n     Name = \"Gefjun-${terraform.workspace}-VPC\"\n   })\n@@ -20,12 +20,12 @@ resource \"aws_subnet\" \"public\" {\n   #count = length(data.aws_availability_zones.available.names)\n   count = 2\n \n-  vpc_id = aws_vpc._.id\n-  cidr_block = \"10.0.${count.index}.0/24\"\n-  availability_zone = data.aws_availability_zones.available.names[count.index]\n+  vpc_id                  = aws_vpc._.id\n+  cidr_block              = \"10.0.${count.index}.0/24\"\n+  availability_zone       = data.aws_availability_zones.available.names[count.index]\n   map_public_ip_on_launch = true\n   tags = merge(local.common_tags, {\n-    Name = \"Gefjun-${terraform.workspace}-Public-${data.aws_availability_zones.available.names[count.index]}\"\n+    Name       = \"Gefjun-${terraform.workspace}-Public-${data.aws_availability_zones.available.names[count.index]}\"\n     Visibility = \"public\"\n   })\n }\n@@ -37,8 +37,8 @@ resource \"aws_route_table\" \"public\" {\n   vpc_id = aws_vpc._.id\n \n   route {\n-      cidr_block = \"0.0.0.0/0\"\n-      gateway_id = aws_internet_gateway._.id\n+    cidr_block = \"0.0.0.0/0\"\n+    gateway_id = aws_internet_gateway._.id\n   }\n \n   tags = merge(local.common_tags, {\n@@ -49,8 +49,8 @@ resource \"aws_route_table\" \"public\" {\n resource \"aws_route_table_association\" \"public\" {\n   #count = length(data.aws_availability_zones.available.names)\n   count = 2\n-  \n-  subnet_id = aws_subnet.public[count.index].id\n+\n+  subnet_id      = aws_subnet.public[count.index].id\n   route_table_id = aws_route_table.public[count.index].id\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/vx-labs/infra/commit/302b243d09b58375efbff31c9e2dfc60c3d7bb7b",
    "files": [
      {
        "filename": "images/agent/config.yaml",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -52,12 +52,13 @@ systemd:\n         [Service]\n         EnvironmentFile=/run/metadata/coreos\n         EnvironmentFile=/etc/userdata.env\n-        ExecStart=/usr/bin/docker run --rm --name vault-auth quay.io/vxlabs/ \\\n+        ExecStart=/usr/bin/touch /etc/vault.env\n+        ExecStart=/usr/bin/docker run --rm --name vault-auth \\\n           -v /etc/vault.env:/etc/vault.env \\\n-          -e VAULT_ADDR=$VAULT_ADDR \\\n-          -e VAULT_ROLE_ID=$VAULT_ROLE_ID \\\n-          -e VAULT_SECRET_ID=$VAULT_SECRET_ID \\\n-          vault-config-extractor \\\n+          -e VAULT_ADDR=${VAULT_ADDR} \\\n+          -e VAULT_ROLE_ID=${VAULT_ROLE_ID} \\\n+          -e VAULT_SECRET_ID=${VAULT_SECRET_ID} \\\n+          quay.io/vxlabs/vault-config-extractor \\\n             --vault-addr-env-var VAULT_ADDR -r VAULT_ROLE_ID -s VAULT_SECRET_ID -o /etc/vault.env\n         Type=oneshot\n         [Install]\n@@ -73,6 +74,7 @@ systemd:\n         EnvironmentFile=/run/metadata/coreos\n         EnvironmentFile=/etc/vault.env\n         EnvironmentFile=/etc/userdata.env\n+        ExecStartPre=/usr/bin/mkdir -p /var/lib/nomad\n         ExecStart=/usr/bin/docker  run --rm --privileged --name nomad-agent \\\n           -e VAULT_TOKEN=${VAULT_TOKEN} \\\n           -v /tmp:/tmp \\"
      },
      {
        "filename": "terraform/1-proxy/dns.tf",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "status": "added",
        "patch": "@@ -0,0 +1,24 @@\n+resource \"cloudflare_record\" \"proxies-discovery\" {\n+  count = \"${length(var.proxy_images)}\"\n+  domain = \"${var.cloudflare_domain}\"\n+  name   = \"http.proxy.discovery.${var.region}\"\n+  value  = \"${element(scaleway_server.proxies.*.private_ip, count.index)}\"\n+  type   = \"A\"\n+  ttl    = 1\n+}\n+resource \"cloudflare_record\" \"proxies\" {\n+  count = \"${length(var.proxy_images)}\"\n+  domain = \"${var.cloudflare_domain}\"\n+  name   = \"http.proxy.${var.region}\"\n+  value  = \"${element(scaleway_server.proxies.*.public_ip, count.index)}\"\n+  type   = \"A\"\n+  ttl    = 1\n+}\n+resource \"cloudflare_record\" \"proxy_direct\" {\n+  count = \"${length(var.proxy_images)}\"\n+  domain = \"${var.cloudflare_domain}\"\n+  name   = \"${count.index}.http.proxy.${var.region}\"\n+  value  = \"${element(scaleway_server.proxies.*.public_ip, count.index)}\"\n+  type   = \"A\"\n+  ttl    = 1\n+}"
      },
      {
        "filename": "terraform/1-proxy/local_var.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+variable \"proxy_images\" {\n+  default = [\n+    \"proxy-5b5332c4-6d05-8623-514f-713160947c6c\",\n+  ]\n+}"
      },
      {
        "filename": "terraform/1-proxy/main.tf",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "status": "added",
        "patch": "@@ -0,0 +1,41 @@\n+data \"scaleway_image\" \"proxies\" {\n+  count = \"${length(var.proxy_images)}\"\n+  architecture = \"x86_64\"\n+  name         = \"${element(var.proxy_images, count.index)}\"\n+}\n+resource \"scaleway_server\" \"proxies\" {\n+  count = \"${length(var.proxy_images)}\"\n+  name  = \"proxy-${count.index}\"\n+  image = \"${element(data.scaleway_image.proxies.*.id, count.index)}\"\n+  dynamic_ip_required = true\n+  enable_ipv6 = false\n+  type  = \"START1-XS\"\n+  boot_type = \"local\"\n+  security_group = \"${scaleway_security_group.proxies.id}\"\n+}\n+\n+resource \"scaleway_security_group\" \"proxies\" {\n+  name        = \"proxy\"\n+  description = \"Nomad servers (proxies)\"\n+}\n+\n+resource \"scaleway_security_group_rule\" \"ssh_accept\" {\n+  security_group = \"${scaleway_security_group.proxies.id}\"\n+\n+  action    = \"accept\"\n+  direction = \"inbound\"\n+  ip_range  = \"${var.management_ip}\"\n+  protocol  = \"TCP\"\n+  port      = 22\n+}\n+resource \"scaleway_security_group_rule\" \"drop_all_ssh\" {\n+  security_group = \"${scaleway_security_group.proxies.id}\"\n+  depends_on = [\"scaleway_security_group_rule.ssh_accept\"]\n+\n+  action    = \"drop\"\n+  direction = \"inbound\"\n+  ip_range  = \"0.0.0.0/0\"\n+  protocol  = \"TCP\"\n+  port = 22\n+}\n+"
      },
      {
        "filename": "terraform/1-proxy/providers.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/1-proxy/variables.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/2-coordinators/dns.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/2-coordinators/local_var.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/2-coordinators/main.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/2-coordinators/providers.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/2-coordinators/variables.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/3-vault/main.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/3-vault/nomad-authenticator-policy.hcl",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/3-vault/nomad-cluster-role.json",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/3-vault/nomad-server-policy.hcl",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/3-vault/nomad-tls-storer-policy.hcl",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/3-vault/providers.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/3-vault/variables.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/4-nomad-agents/local_var.tf",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "status": "removed",
        "patch": "@@ -1,7 +0,0 @@\n-variable \"agent_images\" {\n-  default = [\n-    \"coreos-nomad-agent-5b37e03c-1a4c-6d81-4454-e3623407e405\",\n-    \"coreos-nomad-agent-5b37e03c-1a4c-6d81-4454-e3623407e405\",\n-    \"coreos-nomad-agent-5b37e03c-1a4c-6d81-4454-e3623407e405\"\n-  ]\n-}"
      },
      {
        "filename": "terraform/4-nomad-servers/local_var.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/4-nomad-servers/main.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/4-nomad-servers/modules/nomad-master/main.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/4-nomad-servers/providers.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/4-nomad-servers/variables.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/5-nomad-agents/local_var.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+variable \"agent_images\" {\n+  default = [\n+    \"coreos-nomad-agent-5b534d80-fa5b-0687-b2b0-738310150143\",\n+    \"coreos-nomad-agent-5b534d80-fa5b-0687-b2b0-738310150143\",\n+    \"coreos-nomad-agent-5b534d80-fa5b-0687-b2b0-738310150143\",\n+    \"coreos-nomad-agent-5b534d80-fa5b-0687-b2b0-738310150143\"\n+  ]\n+}"
      },
      {
        "filename": "terraform/5-nomad-agents/main.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "renamed",
        "patch": "@@ -7,6 +7,7 @@ module \"agent-1\" {\n   index = \"1\"\n   region = \"${var.region}\"\n   domain = \"${var.cloudflare_domain}\"\n+  public_ip = false\n }\n \n \n@@ -17,6 +18,7 @@ module \"agent-2\" {\n   index = \"2\"\n   region = \"${var.region}\"\n   domain = \"${var.cloudflare_domain}\"\n+  public_ip = false\n }\n \n \n@@ -27,6 +29,18 @@ module \"agent-3\" {\n   index = \"3\"\n   region = \"${var.region}\"\n   domain = \"${var.cloudflare_domain}\"\n+  public_ip = false\n+}\n+\n+\n+module \"agent-4\" {\n+  source = \"./modules/nomad-agent\"\n+  image = \"${element(var.agent_images, 3)}\"\n+  secgroup = \"${scaleway_security_group.nomad_agent.id}\"\n+  index = \"4\"\n+  region = \"${var.region}\"\n+  domain = \"${var.cloudflare_domain}\"\n+  public_ip = false\n }\n \n "
      },
      {
        "filename": "terraform/5-nomad-agents/modules/nomad-agent/main.tf",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "status": "renamed",
        "patch": "@@ -6,6 +6,10 @@ variable \"secgroup\" {}\n variable \"type\" {\n   default = \"START1-XS\"\n }\n+variable \"public_ip\" {\n+  default = true\n+}\n+\n \n data \"scaleway_image\" \"master\" {\n   architecture = \"x86_64\"\n@@ -20,7 +24,7 @@ data \"vault_approle_auth_backend_role_id\" \"role\" {\n resource \"scaleway_server\" \"nomad-agents\" {\n   name  = \"nomad-agent-${var.index}\"\n   image = \"${data.scaleway_image.master.id}\"\n-  dynamic_ip_required = true\n+  dynamic_ip_required = \"${var.public_ip}\"\n   enable_ipv6 = false\n   type  = \"${var.type}\"\n   boot_type = \"local\"\n@@ -30,9 +34,22 @@ resource \"scaleway_server\" \"nomad-agents\" {\n resource \"scaleway_user_data\" \"count\" {\n   server = \"${scaleway_server.nomad-agents.id}\"\n   key = \"COUNT\"\n-  value = \"5\"\n+  value = \"7\"\n+}\n+\n+resource \"scaleway_user_data\" \"http_proxy\" {\n+  server = \"${scaleway_server.nomad-agents.id}\"\n+  key = \"http_proxy\"\n+  value = \"http://http.proxy.discovery.${var.region}.${var.domain}:3128\"\n }\n \n+resource \"scaleway_user_data\" \"https_proxy\" {\n+  server = \"${scaleway_server.nomad-agents.id}\"\n+  key = \"https_proxy\"\n+  value = \"http://http.proxy.discovery.${var.region}.${var.domain}:3128\"\n+}\n+\n+\n resource \"scaleway_user_data\" \"vault_addr\" {\n   server = \"${scaleway_server.nomad-agents.id}\"\n   key = \"VAULT_ADDR\""
      },
      {
        "filename": "terraform/5-nomad-agents/providers.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/5-nomad-agents/secgroup.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/5-nomad-agents/variables.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/6-lb/dns.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/6-lb/local_var.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/6-lb/main.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/6-lb/providers.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/6-lb/variables.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/7-app-config/main.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "terraform/7-app-config/providers.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+../../providers.tf\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/7-app-config/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+../../variables.tf\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kitchen/personal-terraform/commit/b0660183c95f4b938dbf33c5607381b8e4e2bd68",
    "files": [
      {
        "filename": "gcp-central/terraform.tfstate",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"0.12.13\",\n-  \"serial\": 7,\n+  \"serial\": 9,\n   \"lineage\": \"625e6f23-04fa-5ba0-26e2-e6640c2a1538\",\n   \"outputs\": {\n     \"kitchen-horse-zone-dnsname\": {\n@@ -14,6 +14,22 @@\n     }\n   },\n   \"resources\": [\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_shared_vpc_host_project\",\n+      \"name\": \"central\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"central-259919\",\n+            \"project\": \"central-259919\"\n+          },\n+          \"private\": \"bnVsbA==\"\n+        }\n+      ]\n+    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"google_dns_managed_zone\","
      },
      {
        "filename": "gcp-central/terraform.tfstate.backup",
        "additions": 27,
        "deletions": 1,
        "changes": 28,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"0.12.13\",\n-  \"serial\": 5,\n+  \"serial\": 7,\n   \"lineage\": \"625e6f23-04fa-5ba0-26e2-e6640c2a1538\",\n   \"outputs\": {\n     \"kitchen-horse-zone-dnsname\": {\n@@ -44,6 +44,32 @@\n         }\n       ]\n     },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_dns_record_set\",\n+      \"name\": \"kitchen-horse-keybase\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"kitchen-horse/_keybase.kitchen.horse./TXT\",\n+            \"managed_zone\": \"kitchen-horse\",\n+            \"name\": \"_keybase.kitchen.horse.\",\n+            \"project\": \"central-259919\",\n+            \"rrdatas\": [\n+              \"\\\"keybase-site-verification=2F_g-YHEpFqVYJ7dZD8tzxj3iJ8fJBOcdHy4JYI0emE\\\"\"\n+            ],\n+            \"ttl\": 300,\n+            \"type\": \"TXT\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"depends_on\": [\n+            \"google_dns_managed_zone.kitchen-horse\"\n+          ]\n+        }\n+      ]\n+    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"google_project_service\","
      },
      {
        "filename": "gcp-central/vpc.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+resource \"google_compute_shared_vpc_host_project\" \"central\" {\n+  project = \"central-259919\"\n+}"
      }
    ],
    "existing_codes": [
      "networking",
      "awareness",
      "increase"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kitchen/personal-terraform/commit/e3d337caa558830f8e337d24edaab577ee9d43a2",
    "files": [
      {
        "filename": "vault/lb.tf",
        "additions": 61,
        "deletions": 4,
        "changes": 65,
        "status": "modified",
        "patch": "@@ -22,20 +22,77 @@ resource \"google_compute_backend_service\" \"vault-http\" {\n     group = google_compute_instance_group_manager.vault.instance_group\n   }\n }\n-## target pool\n-## global address\n+\n+# http proxy\n+resource \"google_compute_target_http_proxy\" \"vault\" {\n+  name    = \"vault\"\n+  url_map = google_compute_url_map.vault.self_link\n+}\n+\n+# https proxy\n+resource \"google_compute_target_https_proxy\" \"vault\" {\n+  name             = \"vault\"\n+  url_map          = google_compute_url_map.vault.self_link\n+  ssl_certificates = [google_compute_managed_ssl_certificate.vault-kitchen-horse.self_link]\n+}\n+\n+resource \"google_compute_global_address\" \"vault\" {\n+  name = \"vault\"\n+}\n+\n+resource \"google_compute_global_forwarding_rule\" \"vault-http\" {\n+  name       = \"vault-http\"\n+  target     = google_compute_target_http_proxy.vault.self_link\n+  port_range = \"80\"\n+  ip_address = google_compute_global_address.vault.address\n+}\n+\n+resource \"google_compute_global_forwarding_rule\" \"vault-https\" {\n+  name       = \"vault-https\"\n+  target     = google_compute_target_https_proxy.vault.self_link\n+  port_range = \"443\"\n+  ip_address = google_compute_global_address.vault.address\n+}\n \n \n-# dns record\n+# urlmap\n+resource \"google_compute_url_map\" \"vault\" {\n+  name            = \"vault\"\n+  description     = \"url mapping for vault\"\n+  default_service = google_compute_backend_service.vault-http.self_link\n+\n+  host_rule {\n+    description  = \"vault.kitchen.horse\"\n+    hosts        = [\"vault.kitchen.horse\"]\n+    path_matcher = \"allpaths\"\n+  }\n \n+  path_matcher {\n+    name            = \"allpaths\"\n+    default_service = google_compute_backend_service.vault-http.self_link\n+    description     = \"all paths\"\n+  }\n+}\n \n \n # ssl certificate\n resource \"google_compute_managed_ssl_certificate\" \"vault-kitchen-horse\" {\n   provider = google-beta\n-  name     = \"vault-kitchen-horse\"\n+  name     = \"vault-kitchen-horse-201911400\"\n   managed {\n     domains = [\"vault.kitchen.horse.\"]\n   }\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n+}\n \n+resource \"google_dns_record_set\" \"kitchen-horse-keybase\" {\n+  # TODO: statefile\n+  project      = \"central-259919\"\n+  name         = \"vault.kitchen.horse.\"\n+  type         = \"A\"\n+  ttl          = 300\n+  managed_zone = \"kitchen-horse\"\n+  rrdatas      = [google_compute_global_address.vault.address]\n }"
      },
      {
        "filename": "vault/terraform.tfstate",
        "additions": 224,
        "deletions": 6,
        "changes": 230,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"0.12.13\",\n-  \"serial\": 43,\n+  \"serial\": 90,\n   \"lineage\": \"1742f9f4-bf45-b269-b06e-488fdddd20d1\",\n   \"outputs\": {},\n   \"resources\": [\n@@ -60,6 +60,95 @@\n         }\n       ]\n     },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_global_address\",\n+      \"name\": \"vault\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"address\": \"35.201.68.48\",\n+            \"address_type\": \"EXTERNAL\",\n+            \"creation_timestamp\": \"2019-11-24T15:06:09.327-08:00\",\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/addresses/vault\",\n+            \"ip_version\": \"\",\n+            \"name\": \"vault\",\n+            \"network\": \"\",\n+            \"prefix_length\": 0,\n+            \"project\": \"ssh-ca-vault\",\n+            \"purpose\": \"\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/addresses/vault\",\n+            \"timeouts\": null\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0=\"\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_global_forwarding_rule\",\n+      \"name\": \"vault-http\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/forwardingRules/vault-http\",\n+            \"ip_address\": \"35.201.68.48\",\n+            \"ip_protocol\": \"TCP\",\n+            \"ip_version\": \"\",\n+            \"load_balancing_scheme\": \"EXTERNAL\",\n+            \"metadata_filters\": [],\n+            \"name\": \"vault-http\",\n+            \"port_range\": \"80-80\",\n+            \"project\": \"ssh-ca-vault\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/forwardingRules/vault-http\",\n+            \"target\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/targetHttpProxies/vault\",\n+            \"timeouts\": null\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_global_address.vault\",\n+            \"google_compute_target_http_proxy.vault\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_global_forwarding_rule\",\n+      \"name\": \"vault-https\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/forwardingRules/vault-https\",\n+            \"ip_address\": \"35.201.68.48\",\n+            \"ip_protocol\": \"TCP\",\n+            \"ip_version\": \"\",\n+            \"load_balancing_scheme\": \"EXTERNAL\",\n+            \"metadata_filters\": [],\n+            \"name\": \"vault-https\",\n+            \"port_range\": \"443-443\",\n+            \"project\": \"ssh-ca-vault\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/forwardingRules/vault-https\",\n+            \"target\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/targetHttpsProxies/vault\",\n+            \"timeouts\": null\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_global_address.vault\",\n+            \"google_compute_target_https_proxy.vault\"\n+          ]\n+        }\n+      ]\n+    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"google_compute_health_check\",\n@@ -240,21 +329,21 @@\n         {\n           \"schema_version\": 0,\n           \"attributes\": {\n-            \"certificate_id\": 7039735976292760993,\n-            \"creation_timestamp\": \"2019-11-23T20:13:02.780-08:00\",\n+            \"certificate_id\": 4658469944042106390,\n+            \"creation_timestamp\": \"2019-11-24T15:23:37.354-08:00\",\n             \"description\": \"\",\n             \"expire_time\": \"\",\n-            \"id\": \"projects/ssh-ca-vault/global/sslCertificates/vault-kitchen-horse\",\n+            \"id\": \"projects/ssh-ca-vault/global/sslCertificates/vault-kitchen-horse-201911400\",\n             \"managed\": [\n               {\n                 \"domains\": [\n                   \"vault.kitchen.horse\"\n                 ]\n               }\n             ],\n-            \"name\": \"vault-kitchen-horse\",\n+            \"name\": \"vault-kitchen-horse-201911400\",\n             \"project\": \"ssh-ca-vault\",\n-            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/sslCertificates/vault-kitchen-horse\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/sslCertificates/vault-kitchen-horse-201911400\",\n             \"subject_alternative_names\": [],\n             \"timeouts\": null,\n             \"type\": \"MANAGED\"\n@@ -299,6 +388,135 @@\n         }\n       ]\n     },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_target_http_proxy\",\n+      \"name\": \"vault\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"creation_timestamp\": \"2019-11-24T14:19:34.892-08:00\",\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/targetHttpProxies/vault\",\n+            \"name\": \"vault\",\n+            \"project\": \"ssh-ca-vault\",\n+            \"proxy_id\": 3525235869440458521,\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/targetHttpProxies/vault\",\n+            \"timeouts\": null,\n+            \"url_map\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/urlMaps/vault\"\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_url_map.vault\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_target_https_proxy\",\n+      \"name\": \"vault\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"creation_timestamp\": \"2019-11-24T14:24:10.071-08:00\",\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/targetHttpsProxies/vault\",\n+            \"name\": \"vault\",\n+            \"project\": \"ssh-ca-vault\",\n+            \"proxy_id\": 7368023734297738725,\n+            \"quic_override\": \"NONE\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/targetHttpsProxies/vault\",\n+            \"ssl_certificates\": [\n+              \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/sslCertificates/vault-kitchen-horse-201911400\"\n+            ],\n+            \"ssl_policy\": \"\",\n+            \"timeouts\": null,\n+            \"url_map\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/urlMaps/vault\"\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_managed_ssl_certificate.vault-kitchen-horse\",\n+            \"google_compute_url_map.vault\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_url_map\",\n+      \"name\": \"vault\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"creation_timestamp\": \"2019-11-24T14:19:30.836-08:00\",\n+            \"default_service\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/backendServices/vault-http\",\n+            \"description\": \"url mapping for vault\",\n+            \"fingerprint\": \"sQnD0Ie2Mdw=\",\n+            \"host_rule\": [\n+              {\n+                \"description\": \"vault.kitchen.horse\",\n+                \"hosts\": [\n+                  \"vault.kitchen.horse\"\n+                ],\n+                \"path_matcher\": \"allpaths\"\n+              }\n+            ],\n+            \"id\": \"projects/ssh-ca-vault/global/urlMaps/vault\",\n+            \"map_id\": 7586766783755239197,\n+            \"name\": \"vault\",\n+            \"path_matcher\": [\n+              {\n+                \"default_service\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/backendServices/vault-http\",\n+                \"description\": \"all paths\",\n+                \"name\": \"allpaths\",\n+                \"path_rule\": []\n+              }\n+            ],\n+            \"project\": \"ssh-ca-vault\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/urlMaps/vault\",\n+            \"test\": [],\n+            \"timeouts\": null\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_backend_service.vault-http\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_dns_record_set\",\n+      \"name\": \"kitchen-horse-keybase\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"kitchen-horse/vault.kitchen.horse./A\",\n+            \"managed_zone\": \"kitchen-horse\",\n+            \"name\": \"vault.kitchen.horse.\",\n+            \"project\": \"central-259919\",\n+            \"rrdatas\": [\n+              \"35.201.68.48\"\n+            ],\n+            \"ttl\": 300,\n+            \"type\": \"A\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"depends_on\": [\n+            \"google_compute_global_address.vault\"\n+          ]\n+        }\n+      ]\n+    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"google_project_service\","
      },
      {
        "filename": "vault/terraform.tfstate.backup",
        "additions": 208,
        "deletions": 13,
        "changes": 221,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"0.12.13\",\n-  \"serial\": 41,\n+  \"serial\": 86,\n   \"lineage\": \"1742f9f4-bf45-b269-b06e-488fdddd20d1\",\n   \"outputs\": {},\n   \"resources\": [\n@@ -60,6 +60,95 @@\n         }\n       ]\n     },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_global_address\",\n+      \"name\": \"vault\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"address\": \"35.201.68.48\",\n+            \"address_type\": \"EXTERNAL\",\n+            \"creation_timestamp\": \"2019-11-24T15:06:09.327-08:00\",\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/addresses/vault\",\n+            \"ip_version\": \"\",\n+            \"name\": \"vault\",\n+            \"network\": \"\",\n+            \"prefix_length\": 0,\n+            \"project\": \"ssh-ca-vault\",\n+            \"purpose\": \"\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/addresses/vault\",\n+            \"timeouts\": null\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0=\"\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_global_forwarding_rule\",\n+      \"name\": \"vault-http\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/forwardingRules/vault-http\",\n+            \"ip_address\": \"35.201.68.48\",\n+            \"ip_protocol\": \"TCP\",\n+            \"ip_version\": \"\",\n+            \"load_balancing_scheme\": \"EXTERNAL\",\n+            \"metadata_filters\": [],\n+            \"name\": \"vault-http\",\n+            \"port_range\": \"80-80\",\n+            \"project\": \"ssh-ca-vault\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/forwardingRules/vault-http\",\n+            \"target\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/targetHttpProxies/vault\",\n+            \"timeouts\": null\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_global_address.vault\",\n+            \"google_compute_target_http_proxy.vault\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_global_forwarding_rule\",\n+      \"name\": \"vault-https\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/forwardingRules/vault-https\",\n+            \"ip_address\": \"35.201.68.48\",\n+            \"ip_protocol\": \"TCP\",\n+            \"ip_version\": \"\",\n+            \"load_balancing_scheme\": \"EXTERNAL\",\n+            \"metadata_filters\": [],\n+            \"name\": \"vault-https\",\n+            \"port_range\": \"443-443\",\n+            \"project\": \"ssh-ca-vault\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/forwardingRules/vault-https\",\n+            \"target\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/targetHttpsProxies/vault\",\n+            \"timeouts\": null\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_global_address.vault\",\n+            \"google_compute_target_https_proxy.vault\"\n+          ]\n+        }\n+      ]\n+    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"google_compute_health_check\",\n@@ -238,6 +327,7 @@\n       \"provider\": \"provider.google-beta\",\n       \"instances\": [\n         {\n+          \"status\": \"tainted\",\n           \"schema_version\": 0,\n           \"attributes\": {\n             \"certificate_id\": 7039735976292760993,\n@@ -258,8 +348,7 @@\n             \"subject_alternative_names\": [],\n             \"timeouts\": null,\n             \"type\": \"MANAGED\"\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMH19\"\n+          }\n         }\n       ]\n     },\n@@ -301,24 +390,130 @@\n     },\n     {\n       \"mode\": \"managed\",\n-      \"type\": \"google_compute_subnetwork_iam_binding\",\n-      \"name\": \"vault-instance-central-42\",\n+      \"type\": \"google_compute_target_http_proxy\",\n+      \"name\": \"vault\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"creation_timestamp\": \"2019-11-24T14:19:34.892-08:00\",\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/targetHttpProxies/vault\",\n+            \"name\": \"vault\",\n+            \"project\": \"ssh-ca-vault\",\n+            \"proxy_id\": 3525235869440458521,\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/targetHttpProxies/vault\",\n+            \"timeouts\": null,\n+            \"url_map\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/urlMaps/vault\"\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_url_map.vault\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_target_https_proxy\",\n+      \"name\": \"vault\",\n       \"provider\": \"provider.google\",\n       \"instances\": [\n         {\n           \"schema_version\": 0,\n           \"attributes\": {\n-            \"etag\": \"BwWYHhnv2ys=\",\n-            \"id\": \"projects/central-259919/regions/us-central1/subnetworks/central-42/roles/compute.instanceAdmin\",\n-            \"members\": [\n-              \"serviceAccount:311763859367@cloudservices.gserviceaccount.com\"\n+            \"creation_timestamp\": \"2019-11-24T14:24:10.071-08:00\",\n+            \"description\": \"\",\n+            \"id\": \"projects/ssh-ca-vault/global/targetHttpsProxies/vault\",\n+            \"name\": \"vault\",\n+            \"project\": \"ssh-ca-vault\",\n+            \"proxy_id\": 7368023734297738725,\n+            \"quic_override\": \"NONE\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/targetHttpsProxies/vault\",\n+            \"ssl_certificates\": [\n+              \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/sslCertificates/vault-kitchen-horse\"\n             ],\n+            \"ssl_policy\": \"\",\n+            \"timeouts\": null,\n+            \"url_map\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/urlMaps/vault\"\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_managed_ssl_certificate.vault-kitchen-horse\",\n+            \"google_compute_url_map.vault\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_compute_url_map\",\n+      \"name\": \"vault\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"creation_timestamp\": \"2019-11-24T14:19:30.836-08:00\",\n+            \"default_service\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/backendServices/vault-http\",\n+            \"description\": \"url mapping for vault\",\n+            \"fingerprint\": \"sQnD0Ie2Mdw=\",\n+            \"host_rule\": [\n+              {\n+                \"description\": \"vault.kitchen.horse\",\n+                \"hosts\": [\n+                  \"vault.kitchen.horse\"\n+                ],\n+                \"path_matcher\": \"allpaths\"\n+              }\n+            ],\n+            \"id\": \"projects/ssh-ca-vault/global/urlMaps/vault\",\n+            \"map_id\": 7586766783755239197,\n+            \"name\": \"vault\",\n+            \"path_matcher\": [\n+              {\n+                \"default_service\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/backendServices/vault-http\",\n+                \"description\": \"all paths\",\n+                \"name\": \"allpaths\",\n+                \"path_rule\": []\n+              }\n+            ],\n+            \"project\": \"ssh-ca-vault\",\n+            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ssh-ca-vault/global/urlMaps/vault\",\n+            \"test\": [],\n+            \"timeouts\": null\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19\",\n+          \"depends_on\": [\n+            \"google_compute_backend_service.vault-http\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"google_dns_record_set\",\n+      \"name\": \"kitchen-horse-keybase\",\n+      \"provider\": \"provider.google\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"kitchen-horse/vault.kitchen.horse./A\",\n+            \"managed_zone\": \"kitchen-horse\",\n+            \"name\": \"vault.kitchen.horse.\",\n             \"project\": \"central-259919\",\n-            \"region\": \"us-central1\",\n-            \"role\": \"roles/compute.instanceAdmin\",\n-            \"subnetwork\": \"projects/central-259919/regions/us-central1/subnetworks/central-42\"\n+            \"rrdatas\": [\n+              \"35.201.68.48\"\n+            ],\n+            \"ttl\": 300,\n+            \"type\": \"A\"\n           },\n-          \"private\": \"bnVsbA==\"\n+          \"private\": \"bnVsbA==\",\n+          \"depends_on\": [\n+            \"google_compute_global_address.vault\"\n+          ]\n         }\n       ]\n     },"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kitchen/personal-terraform/commit/bc22c89eabce912e3bb5ced85348d37df351b06d",
    "files": [
      {
        "filename": "vault/kitchen.horse.tf",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -19,15 +19,15 @@ resource \"google_storage_bucket_iam_member\" \"kitchen-horse-web-public\" {\n   member = \"allUsers\"\n }\n \n-resource \"google_dns_record_set\" \"kitchen-horse\" {\n-  # TODO: statefile\n-  project      = \"central-259919\"\n-  name         = \"kitchen.horse.\"\n-  type         = \"A\"\n-  ttl          = 300\n-  managed_zone = \"kitchen-horse\"\n-  rrdatas      = [google_compute_global_address.vault.address]\n-}\n+# resource \"google_dns_record_set\" \"kitchen-horse\" {\n+#   # TODO: statefile\n+#   project      = \"central-259919\"\n+#   name         = \"kitchen.horse.\"\n+#   type         = \"A\"\n+#   ttl          = 300\n+#   managed_zone = \"kitchen-horse\"\n+#   rrdatas      = [google_compute_global_address.vault.address]\n+# }\n \n \n resource \"google_compute_managed_ssl_certificate\" \"kitchen-horse\" {"
      },
      {
        "filename": "vault/lb.tf",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "status": "modified",
        "patch": "@@ -41,23 +41,23 @@ resource \"google_compute_target_https_proxy\" \"vault\" {\n   ]\n }\n \n-resource \"google_compute_global_address\" \"vault\" {\n-  name = \"vault\"\n-}\n+# resource \"google_compute_global_address\" \"vault\" {\n+#   name = \"vault\"\n+# }\n \n-resource \"google_compute_global_forwarding_rule\" \"vault-http\" {\n-  name       = \"vault-http\"\n-  target     = google_compute_target_http_proxy.vault.self_link\n-  port_range = \"80\"\n-  ip_address = google_compute_global_address.vault.address\n-}\n+# resource \"google_compute_global_forwarding_rule\" \"vault-http\" {\n+#   name       = \"vault-http\"\n+#   target     = google_compute_target_http_proxy.vault.self_link\n+#   port_range = \"80\"\n+#   ip_address = google_compute_global_address.vault.address\n+# }\n \n-resource \"google_compute_global_forwarding_rule\" \"vault-https\" {\n-  name       = \"vault-https\"\n-  target     = google_compute_target_https_proxy.vault.self_link\n-  port_range = \"443\"\n-  ip_address = google_compute_global_address.vault.address\n-}\n+# resource \"google_compute_global_forwarding_rule\" \"vault-https\" {\n+#   name       = \"vault-https\"\n+#   target     = google_compute_target_https_proxy.vault.self_link\n+#   port_range = \"443\"\n+#   ip_address = google_compute_global_address.vault.address\n+# }\n \n \n # urlmap\n@@ -97,15 +97,15 @@ resource \"google_compute_managed_ssl_certificate\" \"vault-kitchen-horse\" {\n   }\n }\n \n-resource \"google_dns_record_set\" \"kitchen-horse-vault\" {\n-  # TODO: statefile\n-  project      = \"central-259919\"\n-  name         = \"vault.kitchen.horse.\"\n-  type         = \"A\"\n-  ttl          = 300\n-  managed_zone = \"kitchen-horse\"\n-  rrdatas      = [google_compute_global_address.vault.address]\n-}\n+# resource \"google_dns_record_set\" \"kitchen-horse-vault\" {\n+#   # TODO: statefile\n+#   project      = \"central-259919\"\n+#   name         = \"vault.kitchen.horse.\"\n+#   type         = \"A\"\n+#   ttl          = 300\n+#   managed_zone = \"kitchen-horse\"\n+#   rrdatas      = [google_compute_global_address.vault.address]\n+# }\n \n data \"google_kms_secret\" \"vault-http-client-id\" {\n   # TODO: remote state"
      }
    ],
    "existing_codes": [
      "domain",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kitchen/personal-terraform/commit/fe1f2665b198308a438ec3d46b24843089df1a2a",
    "files": [
      {
        "filename": "gcp-central/vpc.tf",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -19,12 +19,12 @@ resource \"google_compute_router\" \"central\" {\n   network = google_compute_network.central.name\n }\n \n-resource \"google_compute_router_nat\" \"central\" {\n-  name                               = \"central\"\n-  nat_ip_allocate_option             = \"AUTO_ONLY\"\n-  source_subnetwork_ip_ranges_to_nat = \"ALL_SUBNETWORKS_ALL_IP_RANGES\"\n-  router                             = google_compute_router.central.name\n-}\n+# resource \"google_compute_router_nat\" \"central\" {\n+#   name                               = \"central\"\n+#   nat_ip_allocate_option             = \"AUTO_ONLY\"\n+#   source_subnetwork_ip_ranges_to_nat = \"ALL_SUBNETWORKS_ALL_IP_RANGES\"\n+#   router                             = google_compute_router.central.name\n+# }\n \n resource \"google_compute_subnetwork_iam_member\" \"vault-instance-central-42\" {\n   # TODO: statefile"
      }
    ],
    "existing_codes": [
      "networking",
      "awareness",
      "increase"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/glenngillen/terraform-demo-cost-estimation-azure/commit/f29cf1138d21a2eba8aaccec3185e461cb8675bd",
    "files": [
      {
        "filename": "aws-instances.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,11 +1,11 @@\n variable \"instance_type\" {\n   type    = \"string\"\n-  default = \"t3.micro\"\n+  default = \"t3.2xlarge\"\n }\n \n resource \"aws_autoscaling_group\" \"prod-web-servers\" {\n   name                      = \"prod-web-servers\"\n-  max_size                  = 90\n+  max_size                  = 100\n   min_size                  = 0\n   health_check_grace_period = 300\n   health_check_type         = \"ELB\""
      }
    ],
    "existing_codes": [
      "increase"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/glenngillen/terraform-demo-cost-estimation-azure/commit/dfc9a7ea4a62b6e6c14e09b2f08c7fb5c63ca711",
    "files": [
      {
        "filename": "aws-instances.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n variable \"instance_type\" {\n   type    = \"string\"\n-  default = \"t3.micro\"\n+  default = \"t3.2xlarge\"\n }\n \n resource \"aws_autoscaling_group\" \"prod-web-servers\" {"
      }
    ],
    "existing_codes": [
      "increase"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/acmucsd/tech-stack/commit/e78aad174927ca59a43a622d7e82f664e3005790",
    "files": [
      {
        "filename": "README.org",
        "additions": 25,
        "deletions": 8,
        "changes": 33,
        "status": "modified",
        "patch": "@@ -16,6 +16,14 @@ stack.\n \n Deployment and provisioning of instances supported by Ansible and Terraform.\n \n+* TL;DR\n+\n+Update any changes for the infrastructure, configuration files or environment variables, then run:\n+#+BEGIN_SRC sh\n+terraform apply\n+ansible-playbook -i production stack.yml\n+#+END_SRC\n+\n * Tech Stack Layout\n The tech stack has the following main services:\n - Membership Portal UI & API\n@@ -87,11 +95,19 @@ resource \"aws_instance\" \"live\" {\n     Name = \"ACM Live\"\n   }\n }\n-\n #+END_SRC\n \n-Minecraft is too expensive to run on AWS; a third-party provider might be more\n-viable in terms of budget. For now, we'll exclude from AWS provisioning.\n+Minecraft also runs on a beefy instance; we'll keep it simple with\n+an Ubuntu image, though:\n+#+BEGIN_SRC terraform :tangle instances.tf\n+resource \"aws_instance\" \"minecraft\" {\n+  ami           = \"ami-0cd230f950c3de5d8\"\n+  instance_type = \"t3a.medium\"\n+  tags {\n+    Name = \"Minecraft Server\"\n+  }\n+}\n+#+END_SRC\n \n We will also include instances for the membership portal; we will need\n one for the API, and we'll use AWS' RDS in order to host the PostgreSQL\n@@ -100,7 +116,7 @@ database:\n #+BEGIN_SRC terraform :tangle instances.tf\n resource \"aws_instance\" \"membership-portal\" {\n   ami           = \"ami-0a63cd87767e10ed4\"\n-  instance_type = \"t3a.small\"\n+  instance_type = \"t3a.micro\"\n   tags {\n     Name = \"Membership Portal API\"\n   }\n@@ -126,13 +142,14 @@ Using the [[https://calculator.aws][AWS Calculator]], we obtain the cost for all\n | BreadBot            | t3a.nano      |           5.29 |\n | Pass                | t3a.nano      |           5.29 |\n | ACM Live            | m5a.large     |          85.73 |\n-| Portal API          | t3a.small     |          17.48 |\n+| Minecraft           | t3a.medium    |          34.96 |\n+| Portal API          | t3a.micro     |           9.38 |\n | Portal Database     | db.t3.micro   |          16.55 |\n |---------------------+---------------+----------------|\n-| Total Cost / Month: |               |         130.34 |\n-| Total Cost / Year:  |               |        1564.08 |\n+| Total Cost / Month: |               |          157.2 |\n+| Total Cost / Year:  |               |         1886.4 |\n |---------------------+---------------+----------------|\n-#+TBLFM: @7$3=vsum(@I..@II)::@8$3=vsum(@I..@II)*12\n+#+TBLFM: @8$3=vsum(@I..@II)::@9$3=vsum(@I..@II)*12\n \n Assuming all goes well, running Terraform will deploy the stack.\n #+BEGIN_SRC sh"
      },
      {
        "filename": "instances.tf",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -30,9 +30,17 @@ resource \"aws_instance\" \"live\" {\n   }\n }\n \n+resource \"aws_instance\" \"minecraft\" {\n+  ami           = \"ami-0cd230f950c3de5d8\"\n+  instance_type = \"t3a.medium\"\n+  tags {\n+    Name = \"Minecraft Server\"\n+  }\n+}\n+\n resource \"aws_instance\" \"membership-portal\" {\n   ami           = \"ami-0a63cd87767e10ed4\"\n-  instance_type = \"t3a.small\"\n+  instance_type = \"t3a.micro\"\n   tags {\n     Name = \"Membership Portal API\"\n   }"
      }
    ],
    "existing_codes": [
      "awareness",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alstard/terraform/commit/17463f89d0801c30bbca8ad5f0c4ef7f6f15e49f",
    "files": [
      {
        "filename": "DPE-VPC/ec2-instances.tf",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n resource \"aws_instance\" \"atd-app1\" {\n-  ami = \"${lookup(var.ami-ubuntu, var.region)}\"\n+  ami = \"${lookup(var.ami-amazonlinux2, var.region)}\"\n   instance_type = \"t2.micro\"\n   associate_public_ip_address = \"true\"\n   subnet_id = \"${aws_subnet.PublicAZA.id}\"\n@@ -11,7 +11,7 @@ resource \"aws_instance\" \"atd-app1\" {\n   }\n }\n resource \"aws_instance\" \"atd-app2\" {\n-  ami = \"${lookup(var.ami-ubuntu, var.region)}\"\n+  ami = \"${lookup(var.ami-amazonlinux2, var.region)}\"\n   instance_type = \"t2.micro\"\n   associate_public_ip_address = \"true\"\n   subnet_id = \"${aws_subnet.PublicAZA.id}\"\n@@ -23,7 +23,7 @@ resource \"aws_instance\" \"atd-app2\" {\n   }\n }\n resource \"aws_instance\" \"atd-db1\" {\n-  ami = \"${lookup(var.ami-ubuntu, var.region)}\"\n+  ami = \"${lookup(var.ami-amazonlinux2, var.region)}\"\n   instance_type = \"t2.micro\"\n   associate_public_ip_address = \"false\"\n   subnet_id = \"${aws_subnet.PrivateAZA.id}\"\n@@ -35,7 +35,7 @@ resource \"aws_instance\" \"atd-db1\" {\n   }\n }\n resource \"aws_instance\" \"atd-db2\" {\n-  ami = \"${lookup(var.ami-ubuntu, var.region)}\"\n+  ami = \"${lookup(var.ami-amazonlinux2, var.region)}\"\n   instance_type = \"t2.micro\"\n   associate_public_ip_address = \"false\"\n   subnet_id = \"${aws_subnet.PrivateAZA.id}\"\n@@ -46,12 +46,12 @@ resource \"aws_instance\" \"atd-db2\" {\n     Purpose = \"Ansible Testing\"\n   }\n }\n-resource \"aws_instance\" \"jumpbox1\" {\n-  ami = \"${lookup(var.ami-ubuntu, var.region)}\"\n+resource \"aws_instance\" \"atd-jumpbox1\" {\n+  ami = \"${lookup(var.ami-amazonlinux2, var.region)}\"\n   instance_type = \"t2.micro\"\n   associate_public_ip_address = \"true\"\n   subnet_id = \"${aws_subnet.PublicAZA.id}\"\n-  vpc_security_group_ids = [\"${aws_security_group.jumpbox1.id}\"]\n+  vpc_security_group_ids = [\"${aws_security_group.atd-jumpbox1.id}\"]\n   key_name = \"${var.KeyPairName}\"\n   tags {\n     Name = \"${var.jumpbox_name}\""
      },
      {
        "filename": "DPE-VPC/outputs.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -7,11 +7,11 @@\n # }\n \n output \"Jumpbox IP\" {\n-  value = \"${aws_instance.jumpbox1.public_ip}\"\n+  value = \"${aws_instance.atd-jumpbox1.public_ip}\"\n }\n output \"Jumpbox DNS Name\" {\n-  value = \"${aws_instance.jumpbox1.public_dns}\"\n+  value = \"${aws_instance.atd-jumpbox1.public_dns}\"\n }\n output \"Jumpbox User\" {\n-  value = \"ubuntu\"\n+  value = \"ec2-user\"\n }\n\\ No newline at end of file"
      },
      {
        "filename": "DPE-VPC/security-groups.tf",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -25,7 +25,8 @@ resource \"aws_security_group\" \"atd-frontend\" {\n     from_port = \"22\"\n     to_port = \"22\"\n     protocol = \"TCP\"\n-    cidr_blocks = [\"0.0.0.0/0\"]\n+    #cidr_blocks = [\"0.0.0.0/0\"]\n+    cidr_blocks = [\"${var.Subnet-Public-AzA-CIDR}\"]\n   }\n \n   egress {\n@@ -58,7 +59,8 @@ resource \"aws_security_group\" \"atd-db\" {\n     from_port = \"22\"\n     to_port = \"22\"\n     protocol = \"TCP\"\n-    cidr_blocks = [\"0.0.0.0/0\"]\n+    #cidr_blocks = [\"0.0.0.0/0\"]\n+    cidr_blocks = [\"${var.Subnet-Public-AzA-CIDR}\"]\n   }\n   /* END DEBUG */\n   \n@@ -98,7 +100,7 @@ resource \"aws_security_group\" \"atd-db\" {\n #   }\n # }\n \n-resource \"aws_security_group\" \"jumpbox1\" {\n+resource \"aws_security_group\" \"atd-jumpbox1\" {\n   name        = \"${var.jumpbox_name}\"\n   vpc_id      = \"${aws_vpc.atd-dpe-vpc.id}\"\n   description = \"Jumpbox for ATD\""
      },
      {
        "filename": "DPE-VPC/variables.tf",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -12,6 +12,24 @@ variable \"ami-ubuntu\" {\n   description = \"Added Ubuntu AMI ID for all eu-west regions\"\n }\n \n+variable \"ami-amazonlinux\" {\n+  type = \"map\"\n+  default = {\n+    \"eu-west-1\" = \"ami-db1688a2\" # Ireland\n+    \"eu-west-2\" = \"ami-403e2524\" # London\n+    \"eu-west-3\" = \"ami-8ee056f3\" # Paris\n+  }\n+}\n+\n+variable \"ami-amazonlinux2\" {\n+  type = \"map\"\n+  default = {\n+    \"eu-west-1\" = \"ami-db1688a2\" # Ireland\n+    \"eu-west-2\" = \"ami-6d263d09\" # London\n+    \"eu-west-3\" = \"ami-5ce55321\" # Paris\n+  }\n+}\n+\n variable \"ami-bastion\" {\n   type = \"map\"\n   default = {\n@@ -57,7 +75,7 @@ variable \"DNSZoneName\" {\n }\n \n variable jumpbox_name {\n-  default = \"jumpbox1\"\n+  default = \"atd-jumpbox1\"\n   description = \"Name for the jumpbox security group and instance\"\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": ["aws", "cheaper_os"],
    "notes": "Move from ami-ubuntu to ami-amazonlinux2"
  },
  {
    "url": "https://github.com/Terraform-Projects/lead-terraform-Dashboard/commit/71a0250ad3aeed1da2b11734ac22c21831f3595d",
    "files": [
      {
        "filename": "modules/lead/infrastructure/certmanager.tf",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -46,8 +46,6 @@ resource \"helm_release\" \"cert_manager\" {\n     value = \"--issuer-ambient-credentials\"\n   }\n \n-  values = [var.ondemand_toleration_values]\n-\n   depends_on = [\n     helm_release.cert_manager_crds,\n     null_resource.cert_manager_crd_delay,"
      },
      {
        "filename": "modules/lead/infrastructure/downscaler.tf",
        "additions": 14,
        "deletions": 10,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -3,21 +3,25 @@ data \"helm_repository\" \"liatrio\" {\n   url  = \"https://artifactory.liatr.io/artifactory/helm/\"\n }\n \n-resource \"helm_release\" \"kube_downscaler\" {\n-  repository = data.helm_repository.liatrio.metadata[0].name\n-  name       = \"kube-downscaler\"\n-  namespace  = var.namespace\n-  chart      = \"kube-downscaler\"\n-  version    = \"0.1.0\"\n-  timeout    = 900\n-  values     = [var.ondemand_toleration_values, <<EOF\n+locals {\n+  downscaler_values = <<EOF\n rbac:\n   create: true\n image:\n   args: \n-  - --exclude-namespaces=kube-system,${var.namespace}\n+  - --exclude-namespaces=kube-system\n+  - --exclude-deployments=kube-downscaler,metrics-server,cluster-autoscaler-aws-cluster-autoscaler\n   - --default-uptime=${var.uptime}\n   - --include-resources=deployments,statefulsets\n EOF\n-  ]\n+}\n+\n+resource \"helm_release\" \"kube_downscaler\" {\n+  repository = data.helm_repository.liatrio.metadata[0].name\n+  name       = \"kube-downscaler\"\n+  namespace  = var.namespace\n+  chart      = \"kube-downscaler\"\n+  version    = \"0.1.0\"\n+  timeout    = 900\n+  values     = [var.essential_toleration_values, local.downscaler_values] \n }"
      },
      {
        "filename": "modules/lead/infrastructure/external-dns.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"helm_release\" \"external_dns\" {\n   name       = \"external-dns\"\n   timeout    = 600\n \n-  values = [var.external_dns_chart_values, var.ondemand_toleration_values]\n+  values = [var.external_dns_chart_values]\n   set {\n     name  = \"rbac.serviceAccountName\"\n     value = kubernetes_service_account.external_dns_service_account.metadata[0].name"
      },
      {
        "filename": "modules/lead/infrastructure/k8s-spot-termination-handler.tf",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,5 +1,4 @@\n resource \"helm_release\" \"k8s_spot_termination_handler\" {\n-  count      = var.enable_spot_instances ? 1 : 0\n   repository = data.helm_repository.stable.metadata[0].name\n   chart      = \"k8s-spot-termination-handler\"\n   version    = \"1.4.3\"\n@@ -9,7 +8,7 @@ resource \"helm_release\" \"k8s_spot_termination_handler\" {\n \n   values     = [<<EOF\n nodeSelector:\n-  kubernetes.io/lifecycle: spot\n+  kubernetes.io/lifecycle: preemptible\n resources:\n   limits:\n     cpu: 10m"
      },
      {
        "filename": "modules/lead/infrastructure/kube-janitor.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -15,6 +15,8 @@ resource \"helm_release\" \"kube-janitor\" {\n \n   depends_on = [kubernetes_cluster_role_binding.tiller_cluster_role_binding]\n \n+  values     = [var.essential_toleration_values]\n+\n   set {\n     name  = \"kubejanitor.expiration\"\n     value = 15"
      },
      {
        "filename": "modules/lead/infrastructure/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -288,5 +288,5 @@ module \"opa\" {\n   source             = \"../../common/opa\"\n   namespace          = module.system_namespace.name\n   opa_failure_policy = var.opa_failure_policy\n-  external_values    = var.ondemand_toleration_values\n+  external_values    = var.essential_toleration_values\n }"
      },
      {
        "filename": "modules/lead/infrastructure/metrics.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -16,7 +16,7 @@ resource \"helm_release\" \"metrics\" {\n     value = \"--kubelet-preferred-address-types=InternalIP\"\n   }\n \n-  values = [var.ondemand_toleration_values]\n+  values = [var.essential_toleration_values]\n \n   depends_on = [kubernetes_cluster_role_binding.tiller_cluster_role_binding]\n }"
      },
      {
        "filename": "modules/lead/infrastructure/prometheus-values.tpl",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -1,4 +1,11 @@\n+alertmanager:\n+  enabled: false\n+kubeStateMetrics:\n+  deploymentAnnotations:\n+    downscaler/exclude: \"true\"\n server:\n+  deploymentAnnotations:\n+    downscaler/exclude: \"true\"\n   resources:\n     requests:\n       cpu: 200m\n@@ -9,5 +16,5 @@ server:\n nodeExporter:\n   #priorityClassName: system-node-critical\n   tolerations:\n-  - key: ScheduleOndemand\n+  - key: EssentialOnly\n     operator: \"Exists\""
      },
      {
        "filename": "modules/lead/infrastructure/prometheus.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"helm_release\" \"prometheus\" {\n   timeout    = 600\n   wait       = true\n \n-  values = [data.template_file.prometheus_values.rendered, var.ondemand_toleration_values]\n+  values = [data.template_file.prometheus_values.rendered, var.essential_toleration_values]\n \n   depends_on = [kubernetes_cluster_role_binding.tiller_cluster_role_binding]\n }"
      },
      {
        "filename": "modules/lead/infrastructure/variables.tf",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -26,11 +26,7 @@ variable \"issuer_server\" {\n   default = \"https://acme-v02.api.letsencrypt.org/directory\"\n }\n \n-variable \"enable_spot_instances\" {\n-  default = false\n-}\n-\n-variable \"ondemand_toleration_values\" {\n+variable \"essential_toleration_values\" {\n   default = \"\"\n }\n "
      },
      {
        "filename": "stacks/environment-aws/eks.tf",
        "additions": 36,
        "deletions": 59,
        "changes": 95,
        "status": "modified",
        "patch": "@@ -10,100 +10,77 @@ EOF\n \n   worker_groups = [\n     {\n-      instance_type         = var.instance_type\n-      subnets               = [module.vpc.private_subnets[0]]\n-      asg_min_size          = var.asg_min_size\n-      asg_desired_capacity  = var.asg_desired_capacity\n-      asg_max_size          = var.asg_max_size\n+      name                  = \"essential0\"\n+      instance_type         = var.essential_instance_type\n+      subnets               = module.vpc.private_subnets\n+      asg_min_size          = var.essential_asg_min_size\n+      asg_desired_capacity  = var.essential_asg_desired_capacity\n+      asg_max_size          = var.essential_asg_max_size\n       asg_recreate_on_change= true\n       bootstrap_extra_args  = \"--enable-docker-bridge 'true'\"\n       key_name              = var.key_name\n       autoscaling_enabled   = true\n       protect_from_scale_in = true\n       enabled_metrics       = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]\n       pre_userdata          = local.ssm_init\n-      kubelet_extra_args    = var.enable_spot_instances ? \"--node-labels=kubernetes.io/lifecycle=normal --register-with-taints=${var.ondemand_toleration_key}=true:NoSchedule\" : \"\"\n-    },\n-    {\n-      instance_type         = var.instance_type\n-      subnets               = [module.vpc.private_subnets[1]]\n-      asg_min_size          = var.asg_min_size\n-      asg_desired_capacity  = var.asg_desired_capacity\n-      asg_max_size          = var.asg_max_size\n-      asg_recreate_on_change= true\n-      bootstrap_extra_args  = \"--enable-docker-bridge 'true'\"\n-      key_name              = var.key_name\n-      autoscaling_enabled   = true\n-      protect_from_scale_in = true\n-      enabled_metrics       = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]\n-      pre_userdata          = local.ssm_init\n-      kubelet_extra_args    = var.enable_spot_instances ? \"--node-labels=kubernetes.io/lifecycle=normal --register-with-taints=${var.ondemand_toleration_key}=true:NoSchedule\" : \"\"    \n-    },\n-    {\n-      instance_type         = var.instance_type\n-      subnets               = [module.vpc.private_subnets[2]]\n-      asg_min_size          = var.asg_min_size\n-      asg_desired_capacity  = var.asg_desired_capacity\n-      asg_max_size          = var.asg_max_size\n-      asg_recreate_on_change= true\n-      bootstrap_extra_args  = \"--enable-docker-bridge 'true'\"\n-      key_name              = var.key_name\n-      autoscaling_enabled   = true\n-      protect_from_scale_in = true\n-      enabled_metrics       = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]\n-      pre_userdata          = local.ssm_init\n-      kubelet_extra_args    = var.enable_spot_instances ? \"--node-labels=kubernetes.io/lifecycle=normal --register-with-taints=${var.ondemand_toleration_key}=true:NoSchedule\" : \"\"\n-    },   \n+      kubelet_extra_args    = \"--node-labels=kubernetes.io/lifecycle=essential --register-with-taints=${var.essential_taint_key}=true:NoSchedule\"\n+    }\n   ]\n \n   worker_groups_launch_template_mixed = [\n     {\n-      name                    = \"spot0\"\n-      override_instance_types = var.spot_instance_types\n+      name                    = \"preemptible0\"\n+      override_instance_types = var.instance_types\n       subnets                 = [module.vpc.private_subnets[0]]\n-      asg_min_size            = var.spot_asg_min_size\n-      asg_desired_capacity    = var.spot_asg_desired_capacity\n-      asg_max_size            = var.spot_asg_max_size\n+      asg_min_size            = var.asg_min_size\n+      asg_desired_capacity    = var.asg_desired_capacity\n+      asg_max_size            = var.asg_max_size\n       asg_recreate_on_change  = true\n       bootstrap_extra_args    = \"--enable-docker-bridge 'true'\"\n       key_name                = var.key_name\n       autoscaling_enabled     = true\n       protect_from_scale_in   = true\n-      enabled_metrics       = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]      \n+      enabled_metrics         = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]      \n       pre_userdata            = local.ssm_init\n-      kubelet_extra_args      = \"--node-labels=kubernetes.io/lifecycle=spot\"\n+      kubelet_extra_args      = \"--node-labels=kubernetes.io/lifecycle=preemptible\"\n+      on_demand_base_capacity = 0\n+      on_demand_percentage_above_base_capacity = var.on_demand_percentage\n     },\n     {\n-      name                    = \"spot1\"\n-      override_instance_types = var.spot_instance_types\n+      name                    = \"preemptible1\"\n+      override_instance_types = var.instance_types\n       subnets                 = [module.vpc.private_subnets[1]]\n-      asg_min_size            = var.spot_asg_min_size\n-      asg_desired_capacity    = var.spot_asg_desired_capacity\n-      asg_max_size            = var.spot_asg_max_size\n+      asg_min_size            = var.asg_min_size\n+      asg_desired_capacity    = var.asg_desired_capacity\n+      asg_max_size            = var.asg_max_size\n       asg_recreate_on_change  = true\n       bootstrap_extra_args    = \"--enable-docker-bridge 'true'\"\n       key_name                = var.key_name\n       autoscaling_enabled     = true\n       protect_from_scale_in   = true\n-      enabled_metrics       = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]      \n+      enabled_metrics         = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]      \n       pre_userdata            = local.ssm_init\n-      kubelet_extra_args      = \"--node-labels=kubernetes.io/lifecycle=spot\"\n+      kubelet_extra_args      = \"--node-labels=kubernetes.io/lifecycle=preemptible\"\n+      on_demand_base_capacity = 0\n+      on_demand_percentage_above_base_capacity = var.on_demand_percentage\n     },\n     {\n-      name                    = \"spot2\"\n-      override_instance_types = var.spot_instance_types\n+      name                    = \"preemptible2\"\n+      override_instance_types = var.instance_types\n       subnets                 = [module.vpc.private_subnets[2]]\n-      asg_min_size            = var.spot_asg_min_size\n-      asg_desired_capacity    = var.spot_asg_desired_capacity\n-      asg_max_size            = var.spot_asg_max_size\n+      asg_min_size            = var.asg_min_size\n+      asg_desired_capacity    = var.asg_desired_capacity\n+      asg_max_size            = var.asg_max_size\n       asg_recreate_on_change  = true\n       bootstrap_extra_args    = \"--enable-docker-bridge 'true'\"\n       key_name                = var.key_name\n       autoscaling_enabled     = true\n       protect_from_scale_in   = true\n-      enabled_metrics       = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]      \n+      enabled_metrics         = [\"GroupMinSize\", \"GroupMaxSize\", \"GroupDesiredCapacity\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupTerminatingInstances\", \"GroupTotalInstances\"]      \n       pre_userdata            = local.ssm_init\n-      kubelet_extra_args      = \"--node-labels=kubernetes.io/lifecycle=spot\"\n+      kubelet_extra_args      = \"--node-labels=kubernetes.io/lifecycle=preemptible\"\n+      on_demand_base_capacity = 0\n+      on_demand_percentage_above_base_capacity = var.on_demand_percentage\n     },        \n   ]\n \n@@ -210,7 +187,7 @@ module \"eks\" {\n   tags                                 = local.tags\n   vpc_id                               = module.vpc.vpc_id\n   worker_groups                        = local.worker_groups\n-  worker_groups_launch_template_mixed  = var.enable_spot_instances ? local.worker_groups_launch_template_mixed : []\n+  worker_groups_launch_template_mixed  = local.worker_groups_launch_template_mixed\n   worker_additional_security_group_ids = [aws_security_group.worker.id]\n   map_roles                            = local.map_roles\n   write_kubeconfig                     = false"
      },
      {
        "filename": "stacks/environment-aws/essential-toleration.tpl",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "renamed",
        "patch": "@@ -6,7 +6,7 @@ affinity:\n         - key: \"kubernetes.io/lifecycle\"\n           operator: \"NotIn\" \n           values:\n-          - spot\n+          - preemptible\n tolerations:\n-- key: \"${ondemand_toleration_key}\"\n-  operator: \"Exists\"\n\\ No newline at end of file\n+- key: \"${essential_taint_key}\"\n+  operator: \"Exists\""
      },
      {
        "filename": "stacks/environment-aws/lead.tf",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -16,8 +16,7 @@ module \"infrastructure\" {\n   issuer_server      = var.cert_issuer_server\n   uptime             = var.uptime\n \n-  enable_spot_instances      = var.enable_spot_instances\n-  ondemand_toleration_values = data.template_file.ondemand_toleration.rendered\n+  essential_toleration_values = data.template_file.essential_toleration.rendered\n   external_dns_chart_values  = data.template_file.external_dns_values.rendered\n \n   providers = {\n@@ -35,10 +34,10 @@ data \"template_file\" \"cluster_autoscaler\" {\n   }\n }\n \n-data \"template_file\" \"ondemand_toleration\" {\n-  template = file(\"${path.module}/ondemand-toleration.tpl\")\n+data \"template_file\" \"essential_toleration\" {\n+  template = file(\"${path.module}/essential-toleration.tpl\")\n   vars = {\n-    ondemand_toleration_key = var.ondemand_toleration_key\n+    essential_taint_key = var.essential_taint_key\n   }\n }\n \n@@ -56,7 +55,7 @@ resource \"helm_release\" \"cluster_autoscaler\" {\n   wait       = true\n   version    = \"3.1.0\"\n \n-  values = [data.template_file.cluster_autoscaler.rendered, data.template_file.ondemand_toleration.rendered]\n+  values = [data.template_file.cluster_autoscaler.rendered, data.template_file.essential_toleration.rendered]\n \n   provider = helm.system\n }"
      },
      {
        "filename": "stacks/environment-aws/main.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -32,8 +32,8 @@ provider \"helm\" {\n   override = [\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].key=kubernetes.io/lifecycle\",\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].operator=NotIn\",\n-    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=spot\",\n-    \"spec.template.spec.tolerations[0].key=${var.ondemand_toleration_key}\",\n+    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=preemptible\",\n+    \"spec.template.spec.tolerations[0].key=${var.essential_taint_key}\",\n     \"spec.template.spec.tolerations[0].operator=Exists\",\n   ]\n   \n@@ -54,8 +54,8 @@ provider \"helm\" {\n   override = [\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].key=kubernetes.io/lifecycle\",\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].operator=NotIn\",\n-    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=spot\",\n-    \"spec.template.spec.tolerations[0].key=${var.ondemand_toleration_key}\",\n+    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=preemptible\",\n+    \"spec.template.spec.tolerations[0].key=${var.essential_taint_key}\",\n     \"spec.template.spec.tolerations[0].operator=Exists\",\n   ]\n "
      },
      {
        "filename": "stacks/environment-aws/variables.tf",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -21,12 +21,8 @@ variable \"key_name\" {\n   default = \"\"\n }\n \n-variable \"instance_type\" {\n-  default = \"m5.large\"\n-}\n-\n variable \"asg_min_size\" {\n-  default = \"1\"\n+  default = \"0\"\n }\n \n variable \"asg_desired_capacity\" {\n@@ -37,27 +33,31 @@ variable \"asg_max_size\" {\n   default = \"5\"\n }\n \n-variable \"ondemand_toleration_key\" {\n-  default = \"ScheduleOndemand\"\n-}\n-\n-variable \"spot_instance_types\" {\n+variable \"instance_types\" {\n   type    = list\n   default = [\"m5.large\", \"c5.large\", \"m4.large\", \"c4.large\", \"t3.large\", \"r5.large\"]\n }\n \n-variable \"spot_asg_min_size\" {\n-  default = \"0\"\n+variable \"essential_taint_key\" {\n+  default = \"EssentialOnly\"\n }\n \n-variable \"spot_asg_desired_capacity\" {\n+variable \"essential_asg_min_size\" {\n   default = \"1\"\n }\n \n-variable \"spot_asg_max_size\" {\n+variable \"essential_asg_desired_capacity\" {\n+  default = \"1\"\n+}\n+\n+variable \"essential_asg_max_size\" {\n   default = \"5\"\n }\n \n+variable \"essential_instance_type\" {\n+  default = \"t3.small\"\n+}\n+\n variable \"image_whitelist\" {\n   default = \".*\"\n }\n@@ -138,12 +138,12 @@ variable \"enable_autoscaler_scale_down\" {\n   default = true\n }\n \n-variable \"enable_spot_instances\" {\n-  default = false\n+variable \"on_demand_percentage\" {\n+  default = \"0\"\n }\n \n variable \"uptime\" {\n-  default = \"always\"\n+  default = \"Mon-Fri 05:00-19:00 America/Los_Angeles\"\n }\n \n locals {"
      },
      {
        "filename": "stacks/product-aws/main.tf",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -18,8 +18,8 @@ provider \"helm\" {\n   override = [\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].key=kubernetes.io/lifecycle\",\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].operator=NotIn\",\n-    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=spot\",\n-    \"spec.template.spec.tolerations[0].key=${var.ondemand_toleration_key}\",\n+    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=preemptible\",\n+    \"spec.template.spec.tolerations[0].key=${var.essential_taint_key}\",\n     \"spec.template.spec.tolerations[0].operator=Exists\",\n   ]\n \n@@ -44,8 +44,8 @@ provider \"helm\" {\n   override = [\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].key=kubernetes.io/lifecycle\",\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].operator=NotIn\",\n-    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=spot\",\n-    \"spec.template.spec.tolerations[0].key=${var.ondemand_toleration_key}\",\n+    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=preemptible\",\n+    \"spec.template.spec.tolerations[0].key=${var.essential_taint_key}\",\n     \"spec.template.spec.tolerations[0].operator=Exists\",\n   ]\n \n@@ -70,8 +70,8 @@ provider \"helm\" {\n   override = [\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].key=kubernetes.io/lifecycle\",\n     \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].operator=NotIn\",\n-    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=spot\",\n-    \"spec.template.spec.tolerations[0].key=${var.ondemand_toleration_key}\",\n+    \"spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].values[0]=preemptible\",\n+    \"spec.template.spec.tolerations[0].key=${var.essential_taint_key}\",\n     \"spec.template.spec.tolerations[0].operator=Exists\",\n   ]\n "
      },
      {
        "filename": "stacks/product-aws/variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -32,6 +32,6 @@ variable \"load_config_file\" {\n   default = false\n }\n \n-variable \"ondemand_toleration_key\" {\n-  default = \"ScheduleOndemand\"\n+variable \"essential_taint_key\" {\n+  default = \"EssentialOnly\"\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Crown-Commercial-Service/digitalmarketplace-aws/commit/9928d58017829d85789bdf45f467b6d32c6354b2",
    "files": [
      {
        "filename": "terraform/modules/log-streaming/lambda.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -61,7 +61,7 @@ resource \"aws_lambda_function\" \"log_stream_lambda\" {\n   handler = \"main.handler\"\n   runtime = \"nodejs6.10\"\n   memory_size = 128\n-  timeout = 5\n+  timeout = 10\n \n   environment {\n     variables = {"
      }
    ],
    "existing_codes": [
      "awareness",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/vuvuzella/jt-aws-serverless-app/commit/53d023dc22daa7b4181b8ea51ce72c6b857aa553",
    "files": [
      {
        "filename": ".circleci/config.yml",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+version: 2.1\n+jobs:\n+  build:\n+    docker:\n+      - image: alpine3.7\n+    steps:\n+      -run:\n+        name: The First Step\n+        command: |\n+          echo 'Hello World'\n+          echo 'This is the delivery pipeline'"
      },
      {
        "filename": "cicd/.terraform.lock.hcl",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/aws\" {\n+  version     = \"3.74.3\"\n+  constraints = \"~> 3.0\"\n+  hashes = [\n+    \"h1:h4TYqgRKTuuWfZtxJnEGcs/NxGCaxZ4jr0IwTfgZDRM=\",\n+    \"zh:25401cd4667d0496caf7e92e74ecef7c98cf74465570705cda2207770c27ff6c\",\n+    \"zh:2d154527a9b2585f72fc5eceac635257e3f50f68de8a519e71c795d5166a0a22\",\n+    \"zh:499fa5201804a5a33a90d683147fb2f81da91bfcd8ed20293f88f6f39cedbf97\",\n+    \"zh:730284250fd949a59afb6935b3a68a33709d5a78b686fa98f351ad32c919cfc3\",\n+    \"zh:7461ebd6fb35900d620cfa3f42126d988ea1e604ee3828d1c64d5727f908bd26\",\n+    \"zh:7c85743b31c7459f8e74aaa98471ba82c54517eb908603411808a12982d89b1c\",\n+    \"zh:8ed977b7fb97de624f5414b08cab36fd973a624072e0e9082c0c822e0864c7b9\",\n+    \"zh:94ae7313bb0b425d4007a0b70601a337972c4f0f7a323487acf69215e74b4425\",\n+    \"zh:b5a1589672d709da725a72c46d28bf5b2dea71325f6e0b44a0049f644cd09eba\",\n+    \"zh:c7e8e7ce59e4578416557fc2f138137af3c8365ac3e34f0ff5166323c7d641a1\",\n+    \"zh:ccf2e286b207e749fff76bb4075deddb9e7e237936d8654f34828c54e7035455\",\n+  ]\n+}"
      },
      {
        "filename": "cicd/codebuild/artifacts.buildspec.yml",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "cicd/codebuild/deploy.buildspec.yml",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "cicd/codebuild/main.tf",
        "additions": 202,
        "deletions": 0,
        "changes": 202,
        "status": "added",
        "patch": "@@ -0,0 +1,202 @@\n+\n+data \"aws_s3_bucket\" \"artifacts_bucket\" {\n+  bucket = \"global-infrastructure-artifacts\"\n+}\n+\n+data \"aws_ssm_parameter\" \"github_access\" {\n+  name = \"/github/cicd/access-token\"\n+}\n+\n+data \"aws_vpc\" \"main_network\" {\n+  id = \"vpc-089db66b70fffa9df\"\n+}\n+\n+data \"aws_subnets\" \"app_private_2a\" {\n+  filter {\n+    name = \"vpc-id\"\n+    values = [\"vpc-089db66b70fffa9df\"]\n+  }\n+\n+  tags = {\n+    Name = \"app-private-ap-southeast-2a\"\n+  }\n+}\n+\n+data \"aws_subnet\" app_private_2a_arn {\n+  count = length(data.aws_subnets.app_private_2a.ids)\n+  filter {\n+    name = \"subnet-id\"\n+    values = [data.aws_subnets.app_private_2a.ids[count.index]]\n+  }\n+}\n+\n+\n+resource \"aws_iam_role\" \"cicd_role\" {\n+  name = \"cicd_serverless_app_role\"\n+  assume_role_policy = <<EOF\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Effect\": \"Allow\",\n+      \"Principal\": {\n+        \"Service\": \"codebuild.amazonaws.com\"\n+      },\n+      \"Action\": \"sts:AssumeRole\"\n+    }\n+  ]\n+}\n+EOF\n+}\n+\n+// TODO: determine actions for this role\n+resource \"aws_iam_role_policy\" \"cicd_policy\" {\n+  role = aws_iam_role.cicd_role.name\n+  policy = data.aws_iam_policy_document.cicd_policy.json\n+}\n+\n+data \"aws_iam_policy_document\" \"cicd_policy\" {\n+  statement {\n+    effect = \"Allow\"\n+    resources = [\"*\"]\n+    actions = [\n+      \"logs:CreateLogGroup\",\n+      \"logs:CreateLogStream\",\n+      \"logs:PutLogEvents\"\n+    ]\n+  }\n+\n+  statement {\n+    effect = \"Allow\"\n+    resources = [\"*\"]\n+    actions = [\n+      \"ssm:GetParameters\"\n+    ]\n+  }\n+\n+  statement {\n+    effect = \"Allow\"\n+    resources = [\"*\"]\n+    actions = [\n+      \"ec2:CreateNetworkInterface\",\n+      \"ec2:DescribeDhcpOptions\",\n+      \"ec2:DescribeNetworkInterfaces\",\n+      \"ec2:DeleteNetworkInterface\",\n+      \"ec2:DescribeSubnets\",\n+      \"ec2:DescribeSecurityGroups\",\n+      \"ec2:DescribeVpcs\"\n+    ]\n+  }\n+\n+  statement {\n+    effect = \"Allow\"\n+    resources = [\"arn:aws:ec2:ap-southeast-2:536674233911:network-interface/*\"]\n+    actions = [\"ec2:createnetworkinterfacepermission\"]\n+    condition {\n+      test = \"StringEquals\"\n+      variable = \"ec2:Subnet\"\n+      \n+      values = \"${data.aws_subnet.app_private_2a_arn[*].arn}\"\n+    }\n+\n+    condition {\n+      test = \"StringEquals\"\n+      variable = \"ec2:AuthorizedService\"\n+\n+      values = [\"codebuild.amazonaws.com\"]\n+    }\n+  }\n+\n+  statement {\n+    effect = \"Allow\"\n+    resources = [\"${data.aws_s3_bucket.artifacts_bucket.arn}\"]\n+    actions = [\"s3:*\"]\n+  }\n+\n+}\n+\n+resource \"aws_codebuild_project\" \"serverless_app_cicd\" {\n+  name = \"serverless_app\"\n+  description = \"example serverless application\"\n+  build_timeout = 5\n+  service_role = aws_iam_role.cicd_role.arn\n+  artifacts {\n+    type = \"NO_ARTIFACTS\"\n+  }\n+\n+  // cache {\n+  //   // TODO: know what this is for\n+  // }\n+\n+  environment {\n+    compute_type = \"BUILD_GENERAL1_SMALL\"\n+    image = \"aws/codebuild/standard:5.0\"\n+    type = \"LINUX_CONTAINER\"\n+    image_pull_credentials_type = \"CODEBUILD\"\n+    environment_variable {\n+      name = \"SOME_VARIABLE\"\n+      value = \"HELLO WORLD!\"\n+    }\n+  }\n+\n+  logs_config {\n+    cloudwatch_logs {\n+      group_name = \"cicd_serverless_app\"\n+      stream_name = \"cicd_streams\"\n+    }\n+\n+    s3_logs {\n+      status = \"ENABLED\"\n+      location = \"${data.aws_s3_bucket.artifacts_bucket.id}/serverless_app/logs/build\"\n+    }\n+  }\n+\n+  source {\n+    type = \"GITHUB\"\n+    location = \"https://github.com/vuvuzella/jt-aws-serverless-app.git\"\n+    buildspec = \"cicd/deploy.buildspec.yml\"\n+    git_clone_depth = 0\n+    report_build_status = true\n+  }\n+\n+  source_version = \"master\"\n+\n+  vpc_config {\n+    vpc_id = data.aws_vpc.main_network.id\n+    subnets = data.aws_subnets.app_private_2a.ids\n+    security_group_ids = [aws_security_group.cicd_sg.id]\n+  }\n+\n+}\n+\n+resource \"aws_security_group\" \"cicd_sg\" {\n+  name = \"cicd_serverless_sg\"\n+  description = \"sg for cicd that allows egress\"\n+  vpc_id = data.aws_vpc.main_network.id\n+\n+  egress {\n+    from_port = 0\n+    to_port = 0\n+    protocol = -1\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+}\n+\n+resource aws_codebuild_source_credential \"github_access\" {\n+  auth_type = \"PERSONAL_ACCESS_TOKEN\"\n+  server_type = \"GITHUB\"\n+  token = data.aws_ssm_parameter.github_access.value\n+  user_name = \"vuvuzella\"\n+\n+}\n+\n+\n+// resource \"aws_codebuild_webhook\" \"cb_webhook\" {\n+//   // TODO\n+// }\n+\n+// TODO: Create a Codebuild Service Role\n+\n+output \"policy\" {\n+  value = data.aws_iam_policy_document.cicd_policy.json\n+}"
      },
      {
        "filename": "cicd/codebuild/test.buildspec.yml",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+version: 0.2\n+\n+phases:\n+  install:\n+    runtime-versions:\n+      # TODO: set the runtime-versions\n+  pre_build:\n+    commands:\n+      # TODO: set the pre-build commands\n+  build:\n+    commands:\n+      - echo \"Hello Codebuild\" build phase\n+  post-build:\n+    commands:\n+      - echo \"Hello Codebuild post-build phase\"\n+artifacts:\n+  files:\n+    # output directory of the output files\n+  \n\\ No newline at end of file"
      },
      {
        "filename": "cicd/main.tf",
        "additions": 16,
        "deletions": 117,
        "changes": 133,
        "status": "modified",
        "patch": "@@ -1,131 +1,30 @@\n provider \"aws\" {\n   region = \"ap-southeast-2\"\n   profile = \"admin-dev\"\n-}\n-\n-terraform {\n-  backend \"s3\" {\n-    bucket = \"admin-dev-projects-tfstates\"\n-    region = \"ap-southeast-2\"\n-    dynamodb_table = \"admin-dev-projects-locks\"\n-    encrypt = true\n-    profile = \"admin-dev\"\n-    key = \"serverless_app/cicd/terraform.tfstate\"\n-  }\n-}\n-\n-data \"aws_s3_bucket\" \"artifacts_bucket\" {\n-  bucket = \"global-infrastructure-artifacts\"\n-}\n \n-data \"aws_ssm_parameter\" \"github_access\" {\n-  name = \"/github/cicd/access-token\"\n }\n \n-resource \"aws_iam_role\" \"cicd_role\" {\n-  name = \"cicd_serverless_app_role\"\n-  assume_role_policy = <<EOF\n-{\n-  \"Version\": \"2012-10-17\",\n-  \"Statement\": [\n-    {\n-      \"Effect\": \"Allow\",\n-      \"Principal\": {\n-        \"Service\": \"codebuild.amazonaws.com\"\n-      },\n-      \"Action\": \"sts:AssumeRole\"\n-    }\n-  ]\n-}\n-EOF\n-}\n-\n-// TODO: determine actions for this role\n-resource \"aws_iam_role_policy\" \"cicd_policy\" {\n-  role = aws_iam_role.cicd_role.name\n-  policy = <<POLICY\n-{\n-  \"Version\": \"2012-10-17\",\n-  \"Statement\": [\n-    {\n-      \"Effect\": \"Allow\",\n-      \"Resource\": [\"*\"],\n-      \"Action\": [\n-        \"logs:CreateLogGroup\",\n-        \"logs:CreateLogStream\",\n-        \"logs:PutLogEvents\"\n-      ]\n-    },\n-    {\n-      \"Effect\": \"Allow\",\n-      \"Resource\": [\"*\"],\n-      \"Action\": [\n-        \"ssm:GetParameters\"\n-      ]\n-    }\n-\n-  ]\n+provider \"circleci\" {\n+  token = \"\"\n+  organization = \"vuvuzella\"\n+  vcs_type = \"github\"\n+  \n }\n-POLICY\n-}\n-\n-resource \"aws_codebuild_project\" \"serverless_app_cicd\" {\n-  name = \"serverless_app\"\n-  description = \"example serverless application\"\n-  build_timeout = 5\n-  service_role = aws_iam_role.cicd_role.arn\n-  artifacts {\n-    type = \"NO_ARTIFACTS\"\n-  }\n-\n-  // cache {\n-  //   // TODO: know what this is for\n-  // }\n-\n-  environment {\n-    compute_type = \"BUILD_GENERAL1_SMALL\"\n-    image = \"aws/codebuild/standard:5.0\"\n-    type = \"LINUX_CONTAINER\"\n-    image_pull_credentials_type = \"CODEBUILD\"\n-    environment_variable {\n-      name = \"SOME_VARIABLE\"\n-      value = \"HELLO WORLD!\"\n-    }\n+terraform {\n+  backend \"s3\" {\n   }\n \n-  logs_config {\n-    cloudwatch_logs {\n-      group_name = \"cicd_serverless_app\"\n-      stream_name = \"cicd_streams\"\n-    }\n-\n-    s3_logs {\n-      status = \"ENABLED\"\n-      location = \"${data.aws_s3_bucket.artifacts_bucket.id}/serverless_app/logs/build\"\n+  required_providers {\n+    aws = {\n+      source = \"hashicorp/aws\"\n+      version = \"~> 3.0\"\n     }\n   }\n-\n-  source {\n-    type = \"GITHUB\"\n-    location = \"https://github.com/vuvuzella/jt-aws-serverless-app.git\"\n-    buildspec = \"cicd/deploy.buildspec.yml\"\n-    git_clone_depth = 0\n-    report_build_status = true\n-  }\n-\n-}\n-\n-resource aws_codebuild_source_credential \"github_access\" {\n-  auth_type = \"PERSONAL_ACCESS_TOKEN\"\n-  server_type = \"GITHUB\"\n-  token = data.aws_ssm_parameter.github_access.value\n-  user_name = \"vuvuzella\"\n-\n }\n \n-\n-// resource \"aws_codebuild_webhook\" \"cb_webhook\" {\n-//   // TODO\n+#----------------------------------\n+# using codebuild as ci\n+#----------------------------------\n+// module \"codebuild\" {\n+//   source = \"./codebuild\"\n // }\n-\n-// TODO: Create a Codebuild Service Role"
      },
      {
        "filename": "cicd/terragrunt.hcl",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+remote_state {\n+  backend = \"s3\"\n+  config = {\n+    bucket = \"admin-dev-projects-tfstates\"\n+    region = \"ap-southeast-2\"\n+    dynamodb_table = \"admin-dev-projects-locks\"\n+    encrypt = true\n+    profile = \"admin-dev\"\n+    key = \"serverless_app/cicd/terraform.tfstate\"\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/utilitywarehouse/tf_telecom/commit/17007456991c1a8faa26b1f4ac993883f577d124",
    "files": [
      {
        "filename": "aws/bucket/main.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -115,5 +115,17 @@ resource \"aws_s3_bucket\" \"bucket\" {\n     terraform = \"Managed by terraform\"\n     team      = var.team\n   }\n+\n+  lifecycle_rule {\n+    id = \"cold_storage\"\n+    enabled = var.cold_storage_enabled\n+    transition {\n+      storage_class = \"GLACIER\"\n+      days = var.hot_retention\n+    }\n+    tags {\n+      rule: \"cold_storage\"\n+    }\n+  }\n }\n "
      },
      {
        "filename": "aws/bucket/vars.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -25,3 +25,13 @@ variable \"list_access\" {\n   description = \"arns with list content access\"\n }\n \n+variable \"hot_retention\" {\n+  default = 7\n+  description = \"days to retain objects on s3 before being moved to cold storage\"\n+}\n+\n+variable \"cold_storage_enabled\" {\n+  default = true\n+  description = \"flag to indicate if bucket will use cold storage for older objects\"\n+}\n+"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "add_lifecycle_rule"],
    "notes": "Add lifecycle rules for S3 buckets"
  },
  {
    "url": "https://github.com/cds-snc/terraform-modules/commit/75fc899c58848b290a31ff92bab92c27b3f6bf53",
    "files": [
      {
        "filename": "S3/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -84,7 +84,7 @@ resource \"aws_s3_bucket\" \"this\" {\n         content {\n           id                               = lookup(rules.value, \"id\", null)\n           priority                         = lookup(rules.value, \"priority\", null)\n-          delete_marker_replication_status = \"Enabled\"\n+          delete_marker_replication_status = lookup(rules.value, \"delete_marker_replication_status\", null)\n           status                           = \"Enabled\"\n \n           dynamic \"destination\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/rribeiro1/terraform-aws-budget-alarms/commit/cd81824b92fb7205071ca00359ce4bd86412af10",
    "files": [
      {
        "filename": "README.md",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n <p align=\"center\">\n-  <img src=\"https://res.cloudinary.com/hy4kyit2a/f_auto,fl_lossy,q_70/learn/modules/aws-pricing-models-and-support/discover-the-aws-cost-management-tools/images/772fa4bfbbcdfdba154d61ff07845675_6-d-0-bf-664-3-d-02-4-ab-4-acd-4-da-095-d-1-e-1-ffe.png\" width=\"60\" alt=\"accessibility text\">\n+  <img src=\"/assets/cover.png\" width=\"200\">\n </p>\n \n # AWS Budget Alarms\n@@ -58,14 +58,21 @@ Report issues/questions/feature requests on in the [issues](https://github.com/r\n | Name | Version |\n |------|---------|\n | aws | ~> 2.37 |\n+| local | n/a |\n \n ## Inputs\n \n | Name | Description | Type | Default | Required |\n |------|-------------|------|---------|:--------:|\n-| account\\_budget\\_limit | Specifies the budget limit for the account level | `string` | n/a | yes |\n-| account\\_name | Specifies the name of the account | `string` | `\"\"` | no |\n-| services | Map of AWS services to be monitored in terms of costs | <pre>map(object({<br>    budget_limit = string<br>  }))</pre> | n/a | yes |\n+| account\\_budget\\_limit | Specifies the budget limit for the AWS account | `string` | n/a | yes |\n+| account\\_name | Specifies the name of the AWS account | `string` | `\"\"` | no |\n+| budget\\_limit\\_unit | The unit of measurement used for the budget forecast, actual spend, or budget threshold. | `string` | `\"USD\"` | no |\n+| budget\\_time\\_unit | The length of time until a budget resets the actual and forecasted spend. Valid values: `MONTHLY`, `QUARTERLY`, `ANNUALLY`. | `string` | `\"MONTHLY\"` | no |\n+| notifications | Can be used multiple times to configure budget notification | <pre>map(object({<br>    comparison_operator = string<br>    threshold           = number<br>    threshold_type      = string<br>    notification_type   = string<br>  }))</pre> | n/a | yes |\n+| services | Define the list of services and their limit of budget | <pre>map(object({<br>    budget_limit = string<br>  }))</pre> | n/a | yes |\n+| slack\\_channel\\_id | The ID of the Slack channel. To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link. The channel ID is the 9-character string at the end of the URL. For example, ABCBBLZZZ. | `string` | n/a | yes |\n+| slack\\_workspace\\_id | The ID of the Slack workspace authorized with AWS Chatbot. To get the workspace ID, you must perform the initial authorization flow with Slack in the AWS Chatbot console. Then you can copy and paste the workspace ID from the console. For more details, see steps 1-4 in [Setting Up AWS Chatbot with Slack](https://docs.aws.amazon.com/chatbot/latest/adminguide/setting-up.html#Setup_intro) in the AWS Chatbot User Guide. | `string` | n/a | yes |\n+| tags | Additional tags | `map(string)` | `{}` | no |\n \n ## Outputs\n "
      },
      {
        "filename": "assets/cover.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "cloudformation.yml",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "status": "added",
        "patch": "@@ -0,0 +1,34 @@\n+AWSTemplateFormatVersion: \"2010-09-09\"\n+Description: AWS Chatbot Configuration\n+Parameters:\n+  ConfigurationNameParameter:\n+    Type: String\n+    Description: The name of the configuration.\n+  IamRoleArnParameter:\n+    Type: String\n+    Description: The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot.\n+  SlackChannelIdParameter:\n+    Type: String\n+    Description: The ID of the Slack channel. To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link. The channel ID is the 9-character string at the end of the URL. For example, ABCBBLZZZ.\n+  SlackWorkspaceIdParameter:\n+    Type: String\n+    Description: The ID of the Slack workspace authorized with AWS Chatbot. To get the workspace ID, you must perform the initial authorization flow with Slack in the AWS Chatbot console. Then you can copy and paste the workspace ID from the console. For more details, see steps 1-4 in Setting Up AWS Chatbot with Slack in the AWS Chatbot User Guide.\n+  SnsTopicArnsParameter:\n+    Type: CommaDelimitedList\n+    Description: The ARNs of the SNS topics that deliver notifications to AWS Chatbot.\n+\n+Resources:\n+  SlackChannelConfiguration:\n+    Type: AWS::Chatbot::SlackChannelConfiguration\n+    Properties:\n+      ConfigurationName: !Ref ConfigurationNameParameter\n+      IamRoleArn: !Ref IamRoleArnParameter\n+      LoggingLevel: \"NONE\"\n+      SlackChannelId: !Ref SlackChannelIdParameter\n+      SlackWorkspaceId: !Ref SlackWorkspaceIdParameter\n+      SnsTopicArns: !Ref SnsTopicArnsParameter\n+\n+Outputs:\n+  ConfigurationArn:\n+    Description: The ARN of the Chatbot Slack configuration\n+    Value: !Ref SlackChannelConfiguration"
      },
      {
        "filename": "example/main.tf",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "status": "added",
        "patch": "@@ -0,0 +1,48 @@\n+provider \"aws\" {\n+  version = \"~> 2.66\"\n+  region  = \"eu-central-1\"\n+}\n+\n+module \"budget_alerts\" {\n+  source = \"../\"\n+\n+  account_name         = \"Development\"\n+  account_budget_limit = 10.5\n+\n+  services = {\n+    Route53 = {\n+      budget_limit = 0.25\n+    },\n+    EC2 = {\n+      budget_limit = 50.25\n+    },\n+    S3 = {\n+      budget_limit = 12.35\n+    },\n+    ECR = {\n+      budget_limit = 10.4\n+    }\n+  }\n+\n+  notifications = {\n+    warning = {\n+      comparison_operator = \"GREATER_THAN\"\n+      threshold           = 100\n+      threshold_type      = \"PERCENTAGE\"\n+      notification_type   = \"ACTUAL\"\n+    },\n+    critical = {\n+      comparison_operator = \"GREATER_THAN\"\n+      threshold           = 110\n+      threshold_type      = \"PERCENTAGE\"\n+      notification_type   = \"ACTUAL\"\n+    }\n+  }\n+\n+  slack_workspace_id = \"12345678910\"\n+  slack_channel_id   = \"12345678910\"\n+\n+  tags = {\n+    Environment = \"Development\"\n+  }\n+}"
      },
      {
        "filename": "main.tf",
        "additions": 89,
        "deletions": 22,
        "changes": 111,
        "status": "modified",
        "patch": "@@ -45,7 +45,9 @@ locals {\n }\n \n resource \"aws_sns_topic\" \"account_budgets_alarm_topic\" {\n-  name = \"account-budgets-alarm-topic\"\n+  name = \"account-budget-alarms-topic\"\n+\n+  tags = var.tags\n }\n \n resource \"aws_sns_topic_policy\" \"account_budgets_alarm_policy\" {\n@@ -78,18 +80,22 @@ resource \"aws_budgets_budget\" \"budget_account\" {\n   name              = \"${var.account_name} Account Monthly Budget\"\n   budget_type       = \"COST\"\n   limit_amount      = var.account_budget_limit\n-  limit_unit        = \"USD\"\n-  time_unit         = \"MONTHLY\"\n+  limit_unit        = var.budget_limit_unit\n+  time_unit         = var.budget_time_unit\n   time_period_start = \"2020-01-01_00:00\"\n \n-  notification {\n-    comparison_operator = \"GREATER_THAN\"\n-    threshold           = 100\n-    threshold_type      = \"PERCENTAGE\"\n-    notification_type   = \"FORECASTED\"\n-    subscriber_sns_topic_arns = [\n-      aws_sns_topic.account_budgets_alarm_topic.arn\n-    ]\n+  dynamic \"notification\" {\n+    for_each = var.notifications\n+\n+    content {\n+      comparison_operator = notification.value.comparison_operator\n+      threshold           = notification.value.threshold\n+      threshold_type      = notification.value.threshold_type\n+      notification_type   = notification.value.notification_type\n+      subscriber_sns_topic_arns = [\n+        aws_sns_topic.account_budgets_alarm_topic.arn\n+      ]\n+    }\n   }\n \n   depends_on = [\n@@ -100,28 +106,89 @@ resource \"aws_budgets_budget\" \"budget_account\" {\n resource \"aws_budgets_budget\" \"budget_resources\" {\n   for_each = var.services\n \n-  name              = \"${var.account_name} ${each.key} Monthly Budget\"\n+  name              = \"${var.account_name} Account - ${each.key}\"\n   budget_type       = \"COST\"\n   limit_amount      = each.value.budget_limit\n-  limit_unit        = \"USD\"\n-  time_unit         = \"MONTHLY\"\n+  limit_unit        = var.budget_limit_unit\n+  time_unit         = var.budget_time_unit\n   time_period_start = \"2020-01-01_00:00\"\n \n   cost_filters = {\n     Service = lookup(local.aws_services, each.key)\n   }\n \n-  notification {\n-    comparison_operator = \"GREATER_THAN\"\n-    threshold           = 100\n-    threshold_type      = \"PERCENTAGE\"\n-    notification_type   = \"FORECASTED\"\n-    subscriber_sns_topic_arns = [\n-      aws_sns_topic.account_budgets_alarm_topic.arn\n-    ]\n+  dynamic \"notification\" {\n+    for_each = var.notifications\n+\n+    content {\n+      comparison_operator = notification.value.comparison_operator\n+      threshold           = notification.value.threshold\n+      threshold_type      = notification.value.threshold_type\n+      notification_type   = notification.value.notification_type\n+      subscriber_sns_topic_arns = [\n+        aws_sns_topic.account_budgets_alarm_topic.arn\n+      ]\n+    }\n   }\n \n   depends_on = [\n     aws_sns_topic.account_budgets_alarm_topic\n   ]\n }\n+\n+data \"local_file\" \"cloudformation_template\" {\n+  filename = \"${path.module}/cloudformation.yml\"\n+}\n+\n+resource \"aws_iam_role\" \"chatbot_notification\" {\n+  name = \"ChatBotNotificationRole\"\n+\n+  assume_role_policy = jsonencode({\n+    Version : \"2012-10-17\",\n+    Statement : [\n+      {\n+        Effect : \"Allow\",\n+        Principal : {\n+          Service : \"chatbot.amazonaws.com\"\n+        },\n+        Action : \"sts:AssumeRole\"\n+      }\n+    ]\n+  })\n+}\n+\n+resource \"aws_iam_role_policy\" \"chatbot_notification\" {\n+  name = \"ChatBotNotificationPolicy\"\n+  role = aws_iam_role.chatbot_notification.id\n+\n+  policy = jsonencode({\n+    \"Version\" : \"2012-10-17\",\n+    \"Statement\" : [\n+      {\n+        Action : [\n+          \"cloudwatch:Describe*\",\n+          \"cloudwatch:Get*\",\n+          \"cloudwatch:List*\"\n+        ],\n+        Effect : \"Allow\",\n+        Resource : \"*\"\n+      }\n+    ]\n+  })\n+}\n+\n+resource \"aws_cloudformation_stack\" \"chatbot_slack_configuration\" {\n+  name = \"chatbot-slack-budget-alarms\"\n+\n+  template_body = data.local_file.cloudformation_template.content\n+\n+  parameters = {\n+    ConfigurationNameParameter = \"budget-alarms\"\n+    IamRoleArnParameter        = aws_iam_role.chatbot_notification.arn\n+    SlackChannelIdParameter    = var.slack_channel_id\n+    SlackWorkspaceIdParameter  = var.slack_workspace_id\n+    SnsTopicArnsParameter      = aws_sns_topic.account_budgets_alarm_topic.arn\n+  }\n+\n+  tags = var.tags\n+}"
      },
      {
        "filename": "variables.tf",
        "additions": 42,
        "deletions": 4,
        "changes": 46,
        "status": "modified",
        "patch": "@@ -1,17 +1,55 @@\n variable \"account_name\" {\n-  description = \"Specifies the name of the account\"\n+  description = \"Specifies the name of the AWS account\"\n   type        = string\n   default     = \"\"\n }\n \n variable \"account_budget_limit\" {\n-  description = \"Specifies the budget limit for the account level\"\n+  description = \"Specifies the budget limit for the AWS account\"\n   type        = string\n }\n \n+variable \"budget_limit_unit\" {\n+  description = \"The unit of measurement used for the budget forecast, actual spend, or budget threshold.\"\n+  type        = string\n+  default     = \"USD\"\n+}\n+\n+variable \"budget_time_unit\" {\n+  description = \"The length of time until a budget resets the actual and forecasted spend. Valid values: `MONTHLY`, `QUARTERLY`, `ANNUALLY`.\"\n+  type        = string\n+  default     = \"MONTHLY\"\n+}\n+\n variable \"services\" {\n-  description = \"Map of AWS services to be monitored in terms of costs\"\n+  description = \"Define the list of services and their limit of budget\"\n   type = map(object({\n     budget_limit = string\n   }))\n-}\n\\ No newline at end of file\n+}\n+\n+variable \"notifications\" {\n+  description = \"Can be used multiple times to configure budget notification\"\n+  type = map(object({\n+    comparison_operator = string\n+    threshold           = number\n+    threshold_type      = string\n+    notification_type   = string\n+  }))\n+}\n+\n+variable \"slack_channel_id\" {\n+  type        = string\n+  description = \"The ID of the Slack channel. To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link. The channel ID is the 9-character string at the end of the URL. For example, ABCBBLZZZ.\"\n+}\n+\n+variable \"slack_workspace_id\" {\n+  type        = string\n+  description = \"The ID of the Slack workspace authorized with AWS Chatbot. To get the workspace ID, you must perform the initial authorization flow with Slack in the AWS Chatbot console. Then you can copy and paste the workspace ID from the console. For more details, see steps 1-4 in [Setting Up AWS Chatbot with Slack](https://docs.aws.amazon.com/chatbot/latest/adminguide/setting-up.html#Setup_intro) in the AWS Chatbot User Guide.\"\n+}\n+\n+variable \"tags\" {\n+  type        = map(string)\n+  default     = {}\n+  description = \"Additional tags\"\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/willfarrell/terraform-logs-module/commit/545b0bb763a4dbaab6b262c4b9642767e2434d07",
    "files": [
      {
        "filename": "main.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,7 +1,6 @@\n resource \"aws_s3_bucket\" \"main\" {\n   bucket              = \"${var.name}-logs\"\n   acl                 = \"log-delivery-write\"\n-  acceleration_status = \"Enabled\"\n \n   versioning {\n     enabled = false"
      },
      {
        "filename": "variables.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -5,9 +5,12 @@ variable \"tags\" {\n }\n variable \"transition_infrequent_days\" {\n   default = 30\n+  # cost is in multiple of 30d\n+  # cost for min of 128KB\n }\n variable \"transition_glacier_days\" {\n   default = 60\n+  # cost is a min of 90d\n }\n variable \"expiration_days\" {\n   default = 365"
      }
    ],
    "existing_codes": [
      "awareness",
      "policy"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/falldamagestudio/UE4-GHA-BuildSystem/commit/e58083adbf91e7daa8ddb5db6c3b2e5c8c0a906c",
    "files": [
      {
        "filename": "configurations/Kalmalyzer/UE4-GHA-BuildSystem/services/terraform.tfvars",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ engine_storage_bucket_name = \"kalmalyzer-ue4-gha-buildsystem-engine-longtail\"\n \n # engine_builders\n \n-engine_builder_boot_disk_type = \"pd-ssd\"\n+engine_builder_boot_disk_type = \"pd-balanced\"\n engine_builder_boot_disk_size = \"300\"\n engine_builder_github_scope   = \"Kalmalyzer/UE4-GHA-Engine\"\n engine_builder_machine_type   = \"n1-standard-32\"\n@@ -29,7 +29,7 @@ game_storage_bucket_name = \"kalmalyzer-ue4-gha-buildsystem-game-longtail\"\n \n # game_builders\n \n-game_builder_boot_disk_type = \"pd-ssd\"\n+game_builder_boot_disk_type = \"pd-balanced\"\n game_builder_boot_disk_size = \"100\"\n game_builder_github_scope   = \"Kalmalyzer/UE4-GHA-Game\"\n game_builder_machine_type   = \"n1-standard-32\""
      },
      {
        "filename": "configurations/falldamagestudio/UE4-GHA-BuildSystem/services/terraform.tfvars",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ engine_storage_bucket_name = \"fd-ue4-gha-buildsystem-engine-longtail\"\n \n # engine_builders\n \n-engine_builder_boot_disk_type  = \"pd-ssd\"\n+engine_builder_boot_disk_type  = \"pd-balanced\"\n engine_builder_boot_disk_size = \"300\"\n engine_builder_github_scope   = \"falldamagestudio/UE4-GHA-Engine\"\n engine_builder_machine_type   = \"n1-standard-32\"\n@@ -29,7 +29,7 @@ game_storage_bucket_name = \"fd-ue4-gha-buildsystem-game-longtail\"\n \n # game_builders\n \n-game_builder_boot_disk_type  = \"pd-ssd\"\n+game_builder_boot_disk_type  = \"pd-balanced\"\n game_builder_boot_disk_size = \"100\"\n game_builder_github_scope   = \"falldamagestudio/UE4-GHA-Game\"\n game_builder_machine_type   = \"n1-standard-32\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["gcp", "cheaper_disk_type"],
    "notes": "Move from pd-ssd to pd-balanced"
  },
  {
    "url": "https://github.com/cookpad/terraform-aws-eks/commit/59c40286757e1fa5cb5391421c5380e5ad506387",
    "files": [
      {
        "filename": "examples/cluster/gpu_node_group/main.tf",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -12,12 +12,13 @@ module \"gpu_nodes\" {\n   name     = \"gpu-nodes\"\n   key_name = \"development\"\n \n-  gpu             = true\n-  instance_family = \"gpu\"\n-  instance_size   = \"2xlarge\"\n-  instance_types  = [\"p2.xlarge\", \"p3.2xlarge\"]\n-  zone_awareness  = false\n-  min_size        = 1\n+  gpu                = true\n+  instance_family    = \"gpu\"\n+  instance_size      = \"xlarge\"\n+  instance_types     = [\"g4dn.xlarge\"]\n+  zone_awareness     = false\n+  min_size           = 1\n+  instance_lifecycle = \"on_demand\"\n \n   labels = {\n     \"k8s.amazonaws.com/accelerator\" = \"nvidia-tesla-v100\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from p2.xlarge + p3.2xlarge to g4dn.xlarge"
  },
  {
    "url": "https://github.com/robertlupinek/rh-ex407/commit/0c679d7adfa5bf38d5c7846958f3508fc036b3e9",
    "files": [
      {
        "filename": "terraform/main.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -153,6 +153,8 @@ resource \"aws_instance\" \"ansible_host_01\" {\n   instance_type = \"t2.micro\"\n   vpc_security_group_ids = [\"${aws_security_group.devops_hosts.id}\"]\n   subnet_id = aws_subnet.devops.id\n+  associate_public_ip_address = true\n+  private_ip = 10.0.0.80\n   key_name = var.key_name\n   root_block_device {\n     delete_on_termination = true\n@@ -169,6 +171,8 @@ resource \"aws_instance\" \"ansible_host_02\" {\n   instance_type = \"t2.micro\"\n   vpc_security_group_ids = [\"${aws_security_group.devops_hosts.id}\"]\n   subnet_id = aws_subnet.devops.id\n+  associate_public_ip_address = true\n+  private_ip = 10.0.0.232\n   key_name = var.key_name\n   root_block_device {\n     delete_on_termination = true"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-aws-workspaces/commit/e4558e322cd6af610c43a840a59af8dad41f307f",
    "files": [
      {
        "filename": ".github/CODEOWNERS",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+* @JamesWoolfenden"
      },
      {
        "filename": ".github/workflows/compare.yml",
        "additions": 18,
        "deletions": 16,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -7,9 +7,6 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n-  terraform-docs: 0.11.2\n-  tfsec: 0.39.10\n   tf_target_dir: example/examplea\n   branch: master\n jobs:\n@@ -23,9 +20,10 @@ jobs:\n           token: ${{ github.token }}\n       - name: tfsec\n         run: |\n-         wget https://github.com/tfsec/tfsec/releases/download/v${{ env.tfsec }}/tfsec-linux-amd64\n-         chmod +x tfsec-linux-amd64\n-         ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n+          pip3 install lastversion\n+          lastversion tfsec/tfsec --assets -d\n+          chmod +x tfsec-linux-amd64\n+          ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n@@ -67,18 +65,20 @@ jobs:\n       - name: install terrascan\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion accurics/terrascan)\n-          curl --location https://github.com/accurics/terrascan/releases/download/v${now}/terrascan_${now}_Linux_x86_64.tar.gz --output terrascan.tar.gz\n-          tar -xvf terrascan.tar.gz\n+          lastversion accurics/terrascan --assets -d --verbose\n+          tar -xvf terrascan*.tar.gz\n+          chmod +x ./terrascan\n       - name: run terrascan\n-        run: ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json >terrascan.json\n+        run: |\n+          ./terrascan init\n+          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: terrascan\n           path: terrascan.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n   kics:\n     runs-on: ubuntu-latest\n     steps:\n@@ -87,11 +87,13 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: run kics Scan\n-        uses: checkmarx/kics-action@v1.0\n-        with:\n-          path: ${{ env.tf_target_dir }}\n-          output_path: \"kics.json\"\n+      - name: install kics\n+        run: |\n+          pip3 install lastversion\n+          lastversion Checkmarx/kics --assets -d --verbose\n+          tar -xvf kics*.tar.gz\n+      - name: run kics\n+        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2"
      },
      {
        "filename": ".github/workflows/master.yml",
        "additions": 32,
        "deletions": 3,
        "changes": 35,
        "status": "modified",
        "patch": "@@ -9,8 +9,7 @@ on:\n     branches:\n       - master\n env:\n-  terraform: 0.14.8\n-  terraform-docs: 0.11.2\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n   branch: master\n jobs:\n@@ -34,6 +33,15 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -46,8 +54,11 @@ jobs:\n         with:\n           python-version: 3.8\n       - run: |\n+          pip3 install lastversion\n+          now=$(lastversion terraform-docs)\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -Lo $GITHUB_WORKSPACE/bin/terraform-docs https://github.com/terraform-docs/terraform-docs/releases/download/v${{ env.terraform-docs }}/terraform-docs-v${{ env.terraform-docs }}-$(uname)-amd64\n+          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n+          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n@@ -64,3 +75,21 @@ jobs:\n           DEFAULT_BUMP: patch\n           WITH_V: \"true\"\n     needs: [terraform, security]\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          # See the cloud credentials section for the options\n+        with:\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": ".github/workflows/pull_request.yml",
        "additions": 32,
        "deletions": 3,
        "changes": 35,
        "status": "modified",
        "patch": "@@ -6,8 +6,7 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n-  terraform-docs: 0.11.2\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n \n jobs:\n@@ -30,6 +29,15 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Validate\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -41,8 +49,29 @@ jobs:\n         with:\n           python-version: 3.8\n       - run: |\n+          pip3 install lastversion\n+          now=$(lastversion terraform-docs)\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -Lo $GITHUB_WORKSPACE/bin/terraform-docs https://github.com/terraform-docs/terraform-docs/releases/download/v${{ env.terraform-docs }}/terraform-docs-v${{ env.terraform-docs }}-$(uname)-amd64\n+          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n+          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          # See the cloud credentials section for the options\n+        with:\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": ".gitignore",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -27,3 +27,6 @@ tf.plan\n *.log\r\n output/*.json\r\n secrets.auto.tfvars\r\n+checksums.txt\r\n+*.tar.gz\r\n+original/\r"
      },
      {
        "filename": ".markdownlint.json",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -4,7 +4,8 @@\n   \"MD033\": {\n     \"allowed_elements\": [\n       \"br\",\n-      \"pre\"\n+      \"pre\",\n+      \"a\"\n     ]\n   },\n   \"MD034\": false,"
      },
      {
        "filename": ".pre-commit-config.yaml",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -51,13 +51,13 @@ repos:\n       - id: tf2docs\n         language_version: python3.8\n   - repo: git://github.com/bridgecrewio/checkov\n-    rev: 2.0.26\n+    rev: 2.0.58\n     hooks:\n       - id: checkov\n         verbose: true\n         entry: checkov -d example/examplea --external-checks-dir checkov\n   - repo: git://github.com/tfsec/tfsec\n-    rev: v0.39.20\n+    rev: v0.39.21\n     hooks:\n       - id: tfsec\n         entry: tfsec"
      },
      {
        "filename": "README.md",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -38,39 +38,39 @@ No requirements.\n \n | Name | Version |\n |------|---------|\n-| aws | n/a |\n+| <a name=\"provider_aws\"></a> [aws](#provider\\_aws) | n/a |\n \n ## Modules\n \n-No Modules.\n+No modules.\n \n ## Resources\n \n-| Name |\n-|------|\n-| [aws_directory_service_directory](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/directory_service_directory) |\n-| [aws_workspaces_bundle](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/workspaces_bundle) |\n-| [aws_workspaces_directory](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_directory) |\n-| [aws_workspaces_workspace](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace) |\n+| Name | Type |\n+|------|------|\n+| [aws_workspaces_directory.main](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_directory) | resource |\n+| [aws_workspaces_workspace.example](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace) | resource |\n+| [aws_directory_service_directory.example](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/directory_service_directory) | data source |\n+| [aws_workspaces_bundle.bundle](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/workspaces_bundle) | data source |\n \n ## Inputs\n \n | Name | Description | Type | Default | Required |\n |------|-------------|------|---------|:--------:|\n-| bundle\\_id | (optional) describe your variable | `string` | `\"wsb-bh8rsxt14\"` | no |\n-| common\\_tags | This is to help you add tags to your cloud objects | `map(any)` | n/a | yes |\n-| directory\\_id | (optional) describe your variable | `string` | n/a | yes |\n-| root\\_volume\\_encryption\\_enabled | n/a | `bool` | `true` | no |\n-| user\\_name | n/a | `string` | n/a | yes |\n-| user\\_volume\\_encryption\\_enabled | n/a | `bool` | `true` | no |\n-| volume\\_encryption\\_key | (optional) describe your variable | `string` | `\"alias/aws/workspaces\"` | no |\n+| <a name=\"input_bundle_id\"></a> [bundle\\_id](#input\\_bundle\\_id) | (optional) describe your variable | `string` | `\"wsb-bh8rsxt14\"` | no |\n+| <a name=\"input_common_tags\"></a> [common\\_tags](#input\\_common\\_tags) | This is to help you add tags to your cloud objects | `map(any)` | n/a | yes |\n+| <a name=\"input_directory_id\"></a> [directory\\_id](#input\\_directory\\_id) | (optional) describe your variable | `string` | n/a | yes |\n+| <a name=\"input_root_volume_encryption_enabled\"></a> [root\\_volume\\_encryption\\_enabled](#input\\_root\\_volume\\_encryption\\_enabled) | n/a | `bool` | `true` | no |\n+| <a name=\"input_user_name\"></a> [user\\_name](#input\\_user\\_name) | n/a | `string` | n/a | yes |\n+| <a name=\"input_user_volume_encryption_enabled\"></a> [user\\_volume\\_encryption\\_enabled](#input\\_user\\_volume\\_encryption\\_enabled) | n/a | `bool` | `true` | no |\n+| <a name=\"input_volume_encryption_key\"></a> [volume\\_encryption\\_key](#input\\_volume\\_encryption\\_key) | (optional) describe your variable | `string` | `\"alias/aws/workspaces\"` | no |\n \n ## Outputs\n \n | Name | Description |\n |------|-------------|\n-| directory | The directory |\n-| workspace | The workspace |\n+| <a name=\"output_directory\"></a> [directory](#output\\_directory) | The directory |\n+| <a name=\"output_workspace\"></a> [workspace](#output\\_workspace) | The workspace |\n <!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n \n ## Related Projects"
      },
      {
        "filename": "example/examplea/Makefile",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -51,14 +51,14 @@ valid:\n \t-tfsec .\r\n \t-terrascan scan\r\n \tdocker pull checkmarx/kics:latest\r\n-\tdocker run -v $(CURDIR):/path checkmarx/kics:latest -p \"/path\"\r\n+\tdocker run -v $(CURDIR):/path checkmarx/kics:latest scan --path /path\r\n \r\n compare:\r\n \t-checkov -d . --external-checks-dir ../../checkov -o json >../../output/checkov.json\r\n \t-terrascan scan -o json -x json >../../output/terrascan.json\r\n \t-tfsec . --out ../../output/tfsec.json -f json -s\r\n \tdocker pull checkmarx/kics:latest\r\n-\tdocker run -v $(CURDIR):/path -v $(CURDIR)/../../output:/output checkmarx/kics:latest -p \"/path\" -o \"/output/kics.json\"\r\n+\tdocker run -v $(CURDIR):/path -v $(CURDIR)/../../output:/output checkmarx/kics:latest scan --path \"/path\" -o \"/output/kics.json\"\r\n \r\n conftest: plan convert\r\n \tconftest test ./tfplan.json -p ../../policies\r\n@@ -72,3 +72,6 @@ target:\n \r\n purge:\r\n \t$(BLAT)\r\n+\r\n+cost:\r\n+\tinfracost --path ."
      },
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,13 +1,13 @@\n terraform {\n   required_providers {\n     aws = {\n-      version = \"3.32.0\"\n+      version = \"3.39.0\"\n       source  = \"hashicorp/aws\"\n     }\n     random = {\n       version = \"3.1.0\"\n       source  = \"hashicorp/random\"\n     }\n   }\n-  required_version = \"0.14.8\"\n+  required_version = \">=0.14.8\"\n }"
      },
      {
        "filename": "validate.ps1",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -8,4 +8,5 @@ Remove-Item .terraform.lock.hcl -ErrorAction SilentlyContinue\n terraform init -upgrade\n terraform validate\n make valid\n+make cost\n Pop-Location"
      },
      {
        "filename": "validate.sh",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -5,4 +5,5 @@ rm .terraform.lock.hcl 2>/dev/null\n rm .terraform -fr 2>/dev/null\n terraform init -upgrade\n terraform validate\n+make cost\n make valid"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit configures Infracost in CI, there are no relevant changes to Terraform files"
  },
  {
    "url": "https://github.com/ndebuhr/cloud-native-workstation/commit/301244e00d9f359f964242849462704f80e8db13",
    "files": [
      {
        "filename": "helm/templates/jupyter.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -25,7 +25,7 @@ spec:\n         operator: Exists\n         effect: NoSchedule\n       nodeSelector:\n-        cloud.google.com/gke-accelerator: nvidia-tesla-t4\n+        cloud.google.com/gke-accelerator: {{ .Values.components.jupyter.gpu.name }}\n       {{- end }}\n       containers:\n       - image: ndebuhr/cloud-native-workstation-jupyter:{{ .Values.docker.tag }}"
      },
      {
        "filename": "helm/values.yaml",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -90,6 +90,9 @@ components:\n     enabled: false\n     gpu:\n       enabled: false\n+      # If you are using the provided terraform provisioning, this value\n+      # should match the gcp_gpu variable value\n+      name: nvidia-tesla-t4\n     resources:\n       requests:\n         memory: 0"
      },
      {
        "filename": "terraform/gke-with-gpu/gke.tf",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -45,10 +45,6 @@ resource \"google_container_node_pool\" \"primary_ml\" {\n   location   = var.gcp_zone\n   cluster    = google_container_cluster.primary.name\n   node_count = 1\n-  autoscaling {\n-    min_node_count = 0\n-    max_node_count = 4\n-  }\n   node_config {\n     image_type = \"COS_CONTAINERD\"\n     machine_type = \"n1-standard-4\"\n@@ -64,7 +60,7 @@ resource \"google_container_node_pool\" \"primary_ml\" {\n       node_metadata = \"SECURE\"\n     }\n     guest_accelerator {\n-      type  = \"nvidia-tesla-t4\"\n+      type  = var.gcp_gpu\n       count = 1\n     }\n   }"
      },
      {
        "filename": "terraform/gke-with-gpu/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -7,3 +7,8 @@ variable \"gke_cluster_name\" {\n   description = \"Name to give the provisioned Kubernetes cluster containing the devtools\"\n   default = \"cloud-native-workstation\"\n }\n+\n+variable \"gcp_gpu\" {\n+  description = \"GCP name for the GPU to use\"\n+  default = \"nvidia-tesla-t4\"\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "awareness",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/keithnoguchi/do-in-action/commit/2291a1ac7e47009d058a1a448760cd5559e5946e",
    "files": [
      {
        "filename": "vars.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -3,12 +3,12 @@ variable \"DO_FINGERPRINT\" {}\n \n variable \"DO_CLIENT_COUNT\" {\n   description = \"The number of clients\"\n-  default     = 20\n+  default     = 40\n }\n \n variable \"DO_SERVER_COUNT\" {\n   description = \"The number of servers\"\n-  default     = 20\n+  default     = 40\n }\n \n variable \"DO_MONITOR_COUNT\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["digitalocean", "not_relevant"],
    "notes": "The change increases cost by doubling the number of Droplets"
  },
  {
    "url": "https://github.com/ayltai/hknews-infrastructure/commit/68171be117d3997b84253258f41fad6daedbc76a",
    "files": [
      {
        "filename": "terraform/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -35,7 +35,7 @@ variable \"ami_owner\" {\n \n variable \"instance_type\" {\n   description = \"EC2 instance type\"\n-  default     = \"t2.micro\"\n+  default     = \"t3a.micro\"\n }\n \n variable \"instance_count\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from t2.micro to t3a.micro"
  },
  {
    "url": "https://github.com/skehlet/aws-batch-processing/commit/decdbce98d33cf2599aee554779ef5d8b5361d8f",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,6 @@\n+.idea\n .terraform\n .tmp\n plan\n node_modules\n+custom.auto.tfvars"
      },
      {
        "filename": "Batch processing using lambda.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "modified",
        "patch": null
      },
      {
        "filename": "README.md",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -10,15 +10,19 @@ Once inside, I didn't want my lambda POST handler to have to poll S3 for the exp\n * So you need enough free IPs, potentially up to a 1000 (the current lambda max simultaneous execution limit)\n * When run this way, Lambdas no longer have Internet access (which includes reaching any AWS managed service like SQS), so you'll need to put them in a private subnet with its default route set to a NAT Gateway to get out. (I did look into VPC endpoints, and that could work, e.g. for S3, but seems like SQS is not supported, so you still need a NAT gateway).\n \n-I feel like this would be unappealing to some, but in my case, my workers are going to want to access stuff inside my VPC like RDS, Redis, and Elasticsearch, so this would be necessary anyway.\n+My workers are going to want to access stuff inside my VPC like RDS, Redis, and Elasticsearch, so this would be necessary anyway.\n \n-Next, regarding SQS: currently Lambda functions can't natively feed off or be triggered by SQS, but I stumbled across [a clever way from theburningmonk.com](http://theburningmonk.com/2016/04/aws-lambda-use-recursive-function-to-process-sqs-messages-part-1/) to spawn an infinite chain of lambda executions. He calls it recursive lambda, but I think of it as perpetual self-reexecution, because they don't stack up--just before exiting, you asynchronously launch a new instance of yourself. Each execution feeds off SQS using long-polling, up to the max wait time of 20 seconds. He has some math on the costs, and it's dirt cheap, even if you leave it running full time.\n-\n-The next hurdle would be scaling, and [theburningmonk.com also has an article on scaling this automatically](https://medium.com/theburningmonk-com/aws-lambda-use-recursive-function-to-process-sqs-messages-part-2-28b488993d8e). Really cool, I hope to try it out soon.\n+*Update 2018-07-31*: Recently Lambda began [supporting SQS as an event source](https://aws.amazon.com/blogs/aws/aws-lambda-adds-amazon-simple-queue-service-to-supported-event-sources/), so this simplifies the lambda worker greatly! Previously I was using the recursive lambda technique from [theburningmonk.com](http://theburningmonk.com/2016/04/aws-lambda-use-recursive-function-to-process-sqs-messages-part-1/) to spawn an infinite chain of lambda executions.\n \n Final notes:\n-* You have to kick off the recursive lambda function (see `launch-feeder.bat`), after which it'll keep going. For this experiment I have it look on S3 for an object named `keep-feeding`, and it only recurses if it finds it.\n-* All the Terraform is included. See `init.bat` to initialize the state on S3.\n-* You'll need to cd into each of the lamda function directories (`batch-processing-post` and `queue-feeder`) and run `npm install` before running the usual `terraform plan` and `terraform apply`.\n+* All the Terraform is included. Run `init.sh` (or `init.bat`) to initialize the state (stored on S3).\n+* cd into each of the lamda function directories (`batch-processing-post` and `queue-worker`) and run `npm install`.\n+* Run `terraform plan` and `terraform apply`.\n+* At the end of the `terraform apply` run, it will output your API Gateway URL\n+* POST to that URL like:\n+```\n+curl -vv https://abcds2v65i.execute-api.us-west-2.amazonaws.com/dev -d '{\"message\":\"hi\"}'\n+```\n+* I never actually implemented Step 6, writing something to S3.\n \n ![Batch processing using lambda](Batch%20processing%20using%20lambda.png)"
      },
      {
        "filename": "batch-processing-post/index.js",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -12,8 +12,6 @@\n });\n \n const AWS_REGION_NAME = process.env.AWS_REGION_NAME;\n-// const SNS_INCOMING_TOPIC = process.env.SNS_INCOMING_TOPIC;\n-// const SNS_PROCESSED_TOPIC = process.env.SNS_PROCESSED_TOPIC;\n const SQS_QUEUE_URL = process.env.SQS_QUEUE_URL;\n const REDIS_HOST = process.env.REDIS_HOST;\n const REDIS_PORT = process.env.REDIS_PORT;\n@@ -26,7 +24,6 @@ const AWS = require('aws-sdk');\n AWS.config.update({\n     region: AWS_REGION_NAME\n });\n-// const SNS = new AWS.SNS({apiVersion: '2010-03-31'});\n const SQS = new AWS.SQS({apiVersion: '2012-11-05'});\n let s3 = new AWS.S3({\n     signatureVersion: 'v4',"
      },
      {
        "filename": "batch-processing-post/package-lock.json",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -19,9 +19,9 @@\n       \"resolved\": \"https://registry.npmjs.org/redis/-/redis-2.8.0.tgz\",\n       \"integrity\": \"sha512-M1OkonEQwtRmZv4tEWF2VgpG0JWJ8Fv1PhlgT5+B+uNq2cA3Rt1Yt/ryoR+vQNOQcIEgdCdfH0jr3bDpihAw1A==\",\n       \"requires\": {\n-        \"double-ended-queue\": \"2.1.0-0\",\n-        \"redis-commands\": \"1.3.1\",\n-        \"redis-parser\": \"2.6.0\"\n+        \"double-ended-queue\": \"^2.1.0-0\",\n+        \"redis-commands\": \"^1.2.0\",\n+        \"redis-parser\": \"^2.6.0\"\n       }\n     },\n     \"redis-commands\": {"
      },
      {
        "filename": "init.sh",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "added",
        "patch": "@@ -0,0 +1,14 @@\n+#!/bin/bash\n+set -e\n+\n+#\n+# You must create the s3 bucket and dynamodb table before running this.\n+#\n+\n+ACCOUNT_ID=$(aws sts get-caller-identity --output text --query 'Account')\n+REGION=us-west-2\n+\n+terraform init \\\n+\t-backend-config=\"region=${REGION}\" \\\n+\t-backend-config=\"bucket=${ACCOUNT_ID}-terraform-state-${REGION}\" \\\n+\t-backend-config=\"key=aws-batch-processing.tfstate\""
      },
      {
        "filename": "keep-feeding",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "removed",
        "patch": null
      },
      {
        "filename": "launch-feeder.bat",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "removed",
        "patch": "@@ -1 +0,0 @@\n-node launch-feeder.js"
      },
      {
        "filename": "launch-feeder.js",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "status": "removed",
        "patch": "@@ -1,21 +0,0 @@\n-#!/usr/bin/env node\n-\n-var AWS = require('aws-sdk');\n-AWS.config.update({region: 'us-west-2'});\n-var lambda = new AWS.Lambda();\n-\n-var params = {\n-  FunctionName: 'queue-feeder', /* required */\n-  // ClientContext: '{}',\n-  InvocationType: 'RequestResponse', // Event | RequestResponse | DryRun,\n-  LogType: 'Tail', // None | Tail,\n-  Payload: '', // new Buffer('...') || 'STRING_VALUE' /* Strings will be Base-64 encoded on your behalf */,\n-  // Qualifier: 'STRING_VALUE'\n-};\n-lambda.invoke(params, function(err, data) {\n-  if (err) console.log(err, err.stack); // an error occurred\n-  else {\n-    console.log(data);           // successful response\n-    console.log(new Buffer(data.LogResult, 'base64').toString(\"ascii\"))\n-  }\n-});\n\\ No newline at end of file"
      },
      {
        "filename": "main.tf",
        "additions": 33,
        "deletions": 32,
        "changes": 65,
        "status": "modified",
        "patch": "@@ -9,18 +9,11 @@ terraform {\n \n provider \"aws\" {\n   region  = \"us-west-2\"\n-  version = \"~> 1.0\"\n+  version = \"~> 1.26\"\n }\n \n data \"aws_caller_identity\" \"current\" {}\n \n-data \"aws_subnet_ids\" \"private_subnets\" {\n-  vpc_id = \"${aws_vpc.batch.id}\"\n-  tags {\n-    type = \"private\"\n-  }\n-}\n-\n locals {\n   account_id = \"${data.aws_caller_identity.current.account_id}\"\n }\n@@ -79,7 +72,7 @@ resource \"aws_security_group\" \"redis\" {\n \n resource \"aws_elasticache_subnet_group\" \"private_subnets\" {\n   name       = \"private-subnets-for-redis\"\n-  subnet_ids = [\"${data.aws_subnet_ids.private_subnets.ids}\"]\n+  subnet_ids = [\"${aws_subnet.private1.id}\"]\n }\n \n resource \"aws_elasticache_cluster\" \"redis\" {\n@@ -88,7 +81,7 @@ resource \"aws_elasticache_cluster\" \"redis\" {\n   node_type            = \"cache.t2.micro\"\n   port                 = 6379\n   num_cache_nodes      = 1\n-  parameter_group_name = \"default.redis3.2\"\n+  parameter_group_name = \"default.redis4.0\"\n   apply_immediately    = true\n   subnet_group_name    = \"${aws_elasticache_subnet_group.private_subnets.name}\"\n   security_group_ids   = [\"${aws_security_group.redis.id}\"]\n@@ -175,11 +168,11 @@ resource \"aws_lambda_function\" \"batch_processing_post\" {\n   function_name    = \"batch-processing-post\"\n   role             = \"${aws_iam_role.batch_processing_post_role.arn}\"\n   handler          = \"index.handler\"\n-  runtime          = \"nodejs6.10\"\n+  runtime          = \"nodejs8.10\"\n   timeout          = 60\n   publish          = true\n   vpc_config       = {\n-    subnet_ids = [\"${data.aws_subnet_ids.private_subnets.ids}\"]\n+    subnet_ids = [\"${aws_subnet.private1.id}\"]\n     security_group_ids = [\"${aws_security_group.allow_anything.id}\"]\n   }\n   environment {\n@@ -194,8 +187,8 @@ resource \"aws_lambda_function\" \"batch_processing_post\" {\n }\n \n \n-resource \"aws_iam_role\" \"batch_processing_feeder_role\" {\n-  name = \"batch-processing-feeder\"\n+resource \"aws_iam_role\" \"batch_processing_worker_role\" {\n+  name = \"batch-processing-worker\"\n   assume_role_policy = <<EOF\n {\n   \"Version\": \"2012-10-17\",\n@@ -213,9 +206,9 @@ resource \"aws_iam_role\" \"batch_processing_feeder_role\" {\n EOF\n }\n \n-resource \"aws_iam_role_policy\" \"batch_processing_feeder_role_policy1\" {\n-  name = \"batch-processing-feeder-role-policy1\"\n-  role = \"${aws_iam_role.batch_processing_feeder_role.id}\"\n+resource \"aws_iam_role_policy\" \"batch_processing_worker_role_policy1\" {\n+  name = \"batch-processing-worker-role-policy1\"\n+  role = \"${aws_iam_role.batch_processing_worker_role.id}\"\n   policy = <<EOF\n {\n    \"Version\": \"2012-10-17\",\n@@ -250,7 +243,9 @@ resource \"aws_iam_role_policy\" \"batch_processing_feeder_role_policy1\" {\n           \"Effect\": \"Allow\",\n           \"Action\": [\n             \"sqs:ReceiveMessage\",\n-            \"sqs:DeleteMessage\"\n+            \"sqs:DeleteMessage\",\n+            \"sqs:GetQueueAttributes\",\n+            \"sqs:ChangeMessageVisibility\"\n           ],\n           \"Resource\": \"${aws_sqs_queue.batch_processing_queue.arn}\"\n        },\n@@ -259,35 +254,35 @@ resource \"aws_iam_role_policy\" \"batch_processing_feeder_role_policy1\" {\n           \"Action\": [\n             \"lambda:InvokeFunction\"\n           ],\n-          \"Resource\": \"arn:aws:lambda:us-west-2:${local.account_id}:function:queue-feeder\"\n+          \"Resource\": \"arn:aws:lambda:us-west-2:${local.account_id}:function:queue-worker\"\n        }\n    ]\n }\n EOF\n }\n \n-resource \"aws_iam_role_policy_attachment\" \"feeder_attachment\" {\n-  role = \"${aws_iam_role.batch_processing_feeder_role.name}\"\n+resource \"aws_iam_role_policy_attachment\" \"worker_attachment\" {\n+  role = \"${aws_iam_role.batch_processing_worker_role.name}\"\n   policy_arn = \"arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole\"\n }\n \n-data \"archive_file\" \"batch_processing_feeder_zip\" {\n+data \"archive_file\" \"batch_processing_worker_zip\" {\n   type = \"zip\"\n-  source_dir = \"queue-feeder\"\n-  output_path = \".tmp/queue-feeder.zip\"\n+  source_dir = \"queue-worker\"\n+  output_path = \".tmp/queue-worker.zip\"\n }\n \n-resource \"aws_lambda_function\" \"queue_feeder\" {\n-  filename         = \"${data.archive_file.batch_processing_feeder_zip.output_path}\"\n-  source_code_hash = \"${base64sha256(file(\"${data.archive_file.batch_processing_feeder_zip.output_path}\"))}\"\n-  function_name    = \"queue-feeder\"\n-  role             = \"${aws_iam_role.batch_processing_feeder_role.arn}\"\n+resource \"aws_lambda_function\" \"queue_worker\" {\n+  filename         = \"${data.archive_file.batch_processing_worker_zip.output_path}\"\n+  source_code_hash = \"${base64sha256(file(\"${data.archive_file.batch_processing_worker_zip.output_path}\"))}\"\n+  function_name    = \"queue-worker\"\n+  role             = \"${aws_iam_role.batch_processing_worker_role.arn}\"\n   handler          = \"index.handler\"\n-  runtime          = \"nodejs6.10\"\n+  runtime          = \"nodejs8.10\"\n   timeout          = 60\n   publish          = true\n   vpc_config       = {\n-    subnet_ids = [\"${data.aws_subnet_ids.private_subnets.ids}\"]\n+    subnet_ids = [\"${aws_subnet.private1.id}\"]\n     security_group_ids = [\"${aws_security_group.allow_anything.id}\"]\n   }\n   environment {\n@@ -296,9 +291,15 @@ resource \"aws_lambda_function\" \"queue_feeder\" {\n       SQS_QUEUE_URL = \"${aws_sqs_queue.batch_processing_queue.id}\"\n       REDIS_HOST = \"${aws_elasticache_cluster.redis.cache_nodes.0.address}\"\n       REDIS_PORT = \"${aws_elasticache_cluster.redis.port}\"\n-      MY_FUNCTION_NAME = \"queue-feeder\"\n       S3_INCOMING_BUCKET = \"${aws_s3_bucket.batch_processing_incoming.id}\"\n       S3_OUTGOING_BUCKET = \"${aws_s3_bucket.batch_processing_outgoing.id}\"\n     }\n   }\n }\n+\n+resource \"aws_lambda_event_source_mapping\" \"event_source_mapping\" {\n+  batch_size        = 10\n+  event_source_arn  = \"${aws_sqs_queue.batch_processing_queue.arn}\"\n+  enabled           = true\n+  function_name     = \"${aws_lambda_function.queue_worker.arn}\"\n+}"
      },
      {
        "filename": "package-lock.json",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@\n       \"requires\": {\n         \"buffer\": \"4.9.1\",\n         \"crypto-browserify\": \"1.0.9\",\n-        \"events\": \"1.1.1\",\n+        \"events\": \"^1.1.1\",\n         \"jmespath\": \"0.15.0\",\n         \"querystring\": \"0.2.0\",\n         \"sax\": \"1.2.1\",\n@@ -31,9 +31,9 @@\n       \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-4.9.1.tgz\",\n       \"integrity\": \"sha1-bRu2AbB6TvztlwlBMgkwJ8lbwpg=\",\n       \"requires\": {\n-        \"base64-js\": \"1.2.1\",\n-        \"ieee754\": \"1.1.8\",\n-        \"isarray\": \"1.0.0\"\n+        \"base64-js\": \"^1.0.2\",\n+        \"ieee754\": \"^1.1.4\",\n+        \"isarray\": \"^1.0.0\"\n       }\n     },\n     \"crypto-browserify\": {\n@@ -100,16 +100,16 @@\n       \"resolved\": \"https://registry.npmjs.org/xml2js/-/xml2js-0.4.17.tgz\",\n       \"integrity\": \"sha1-F76T6q4/O3eTWceVtBlwWogX6Gg=\",\n       \"requires\": {\n-        \"sax\": \"1.2.1\",\n-        \"xmlbuilder\": \"4.2.1\"\n+        \"sax\": \">=0.6.0\",\n+        \"xmlbuilder\": \"^4.1.0\"\n       }\n     },\n     \"xmlbuilder\": {\n       \"version\": \"4.2.1\",\n       \"resolved\": \"https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-4.2.1.tgz\",\n       \"integrity\": \"sha1-qlijBBoGb5DqoWwvU4n/GfP0YaU=\",\n       \"requires\": {\n-        \"lodash\": \"4.17.4\"\n+        \"lodash\": \"^4.0.0\"\n       }\n     }\n   }"
      },
      {
        "filename": "package.json",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -2,7 +2,7 @@\n   \"name\": \"aws-batch-processing\",\n   \"version\": \"1.0.0\",\n   \"description\": \"Just a test to see if this design works.\",\n-  \"main\": \"launch-feeder.js\",\n+  \"main\": \"launch-worker.js\",\n   \"scripts\": {\n     \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n   },"
      },
      {
        "filename": "queue-feeder/index.js",
        "additions": 0,
        "deletions": 170,
        "changes": 170,
        "status": "removed",
        "patch": "@@ -1,170 +0,0 @@\n-'use strict';\n-\n-[\n-    'AWS_REGION_NAME',\n-    'SQS_QUEUE_URL',\n-    'REDIS_HOST',\n-    'REDIS_PORT',\n-    'S3_INCOMING_BUCKET',\n-    'S3_OUTGOING_BUCKET',\n-    'MY_FUNCTION_NAME'\n-].forEach(function (varName) {\n-    if (!process.env[varName]) {\n-        console.error(`You must set the ${varName} environment variable`);\n-        process.exit(1);\n-    }\n-});\n-\n-const AWS_REGION_NAME = process.env.AWS_REGION_NAME;\n-const SQS_QUEUE_URL = process.env.SQS_QUEUE_URL;\n-const REDIS_HOST = process.env.REDIS_HOST;\n-const REDIS_PORT = process.env.REDIS_PORT;\n-const MY_FUNCTION_NAME = process.env.MY_FUNCTION_NAME;\n-const S3_INCOMING_BUCKET = process.env.S3_INCOMING_BUCKET;\n-const S3_OUTGOING_BUCKET = process.env.S3_OUTGOING_BUCKET;\n-\n-const REDIS_CONNECT_TIMEOUT = 10 * 1000; // fail if we can't connect within 10sec, helps diagnose VPC problems\n-const REDIS_MAX_CONNECT_ATTEMPTS = 1; // helps diagnose VPC problems\n-\n-const S3_RECURSE_FLAG = 'keep-feeding';\n-\n-const AWS = require('aws-sdk');\n-AWS.config.update({\n-    region: AWS_REGION_NAME\n-});\n-const SQS = new AWS.SQS({apiVersion: '2012-11-05'});\n-let s3 = new AWS.S3({\n-    signatureVersion: 'v4',\n-    apiVersion: '2006-03-01'\n-});\n-const Lambda = new AWS.Lambda({apiVersion: '2015-03-31'});\n-const redis = require('redis');\n-const Promise = require('bluebird');\n-Promise.promisifyAll(redis.RedisClient.prototype);\n-Promise.promisifyAll(redis.Multi.prototype);\n-\n-function longPollSqs() {\n-    console.log('now long-polling SQS for messages...');\n-    let params = {\n-        QueueUrl            : SQS_QUEUE_URL,\n-        MaxNumberOfMessages : 10,\n-        VisibilityTimeout   : 6,\n-        WaitTimeSeconds     : 20\n-    };\n-    return SQS.receiveMessage(params).promise();\n-}\n-\n-function handleSqsResponse(response) {\n-    if (!response.Messages) {\n-        console.log(`No messages to process.`);\n-        return;\n-    }        \n-    console.log(`Now processing ${response.Messages.length} messages from SQS`);\n-    return Promise.all(response.Messages.map(processMessage));\n-}\n-\n-function deleteSqsMessage(msg) {\n-    let delParams = {\n-        QueueUrl: SQS_QUEUE_URL,\n-        ReceiptHandle: msg.ReceiptHandle\n-    };\n-    return SQS\n-        .deleteMessage(delParams)\n-        .promise()\n-        .then(() => console.log(`Message ID [${msg.MessageId}] deleted`));\n-}\n-\n-function notifyCallerWeAreDone(msg) {\n-    const uuid = msg.Body;\n-    const publisher = redis.createClient({\n-        host: REDIS_HOST,\n-        port: REDIS_PORT,\n-        connect_timeout: REDIS_CONNECT_TIMEOUT,\n-        max_attempts: REDIS_MAX_CONNECT_ATTEMPTS\n-    });\n-    console.log(`Publishing redis notification for ${uuid}`);\n-    return publisher.publishAsync(uuid, \"ready\").then(function () {\n-        console.log(`published redis notification for ${uuid}`);\n-        return publisher.quitAsync();\n-    }).catch(function (err) { // swallow errors here, don't fail the whole processing\n-        console.log(`Message ID [${msg.MessageId}]`, err, err.stack)\n-    });\n-}\n-\n-function deleteIncomingObject(msg) {\n-    const uuid = msg.Body;\n-    const params = {\n-        Bucket: S3_INCOMING_BUCKET,\n-        Key: uuid\n-    };\n-    return s3.deleteObject(params).promise().catch(function (err) {\n-        console.log('got error trying to delete object from s3:', err, 'params:', JSON.stringify(params, null, 4));\n-        throw err;\n-    });\n-}\n-\n-function processMessage(msg) {\n-    return Promise.try(function () {\n-        // console.log(`Hello, ${msg.Body} of message ID [${msg.MessageId}]`);\n-        console.log('full message:', JSON.stringify(msg, null, 4));\n-        const uuid = msg.Body;\n-\n-        return Promise.try(function () {\n-            // TODO: do some heavy processing here\n-            // e.g. process it text-to-speech and write to S3_OUTGOING_BUCKET\n-            // Or, invoke a new lambda function?\n-            // keep in mind we said we'd do it in 6 seconds, see VisibilityTimeout above\n-        }).then(() => deleteIncomingObject(msg))\n-        .then(() => deleteSqsMessage(msg))\n-        .then(() => notifyCallerWeAreDone(msg));\n-    }).catch(err => console.log(`Message ID [${msg.MessageId}]`, err, err.stack));\n-}\n-\n-function shouldWeRecurse() {\n-    // we should, as long as the flag exists in s3\n-    var params = {\n-        Bucket: S3_INCOMING_BUCKET,\n-        Key: S3_RECURSE_FLAG\n-    };\n-    return s3.headObject(params).promise().then(function () {  \n-        return true;\n-    }).catch(function (err) {\n-        if (err.code === 'NotFound') {  \n-            return false;\n-        }\n-    });\n-}\n-\n-function recurse() {\n-    return shouldWeRecurse()\n-        .then(function (answer) {\n-            if (!answer) {\n-                console.log('Not recursing, flag object not found in s3');\n-            } else {\n-                let params = { \n-                    FunctionName: MY_FUNCTION_NAME,\n-                    InvokeArgs: \"{}\"\n-                };\n-                return Lambda\n-                    .invokeAsync(params)\n-                    .promise()\n-                    .then(() => console.log(\"Recursed.\")); // I'd call it \"self-perpetuating\" instead of recursing\n-            }\n-        });\n-}\n-\n-exports.handler = function(event, context) {\n-    longPollSqs()\n-        .then(handleSqsResponse)\n-        // handle any errors and restore the chain so we always get\n-        // to the next step - which is to recurse\n-        .catch(err => console.log('ERROR :-(', err, err.stack))\n-        .then(() => recurse())\n-        .then(function () {\n-            console.log('All done, now exiting');\n-            context.succeed();\n-        })\n-        // only fail the function if we couldn't recurse, which we\n-        // can then monitor via CloudWatch and trigger \n-        .catch(err => context.fail(err, err.stack));\n-};\n\\ No newline at end of file"
      },
      {
        "filename": "queue-worker/index.js",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "status": "added",
        "patch": "@@ -0,0 +1,100 @@\n+'use strict';\n+\n+[\n+    'AWS_REGION_NAME',\n+    'SQS_QUEUE_URL',\n+    'REDIS_HOST',\n+    'REDIS_PORT',\n+    'S3_INCOMING_BUCKET',\n+    'S3_OUTGOING_BUCKET'\n+].forEach(function (varName) {\n+    if (!process.env[varName]) {\n+        console.error(`You must set the ${varName} environment variable`);\n+        process.exit(1);\n+    }\n+});\n+\n+const AWS_REGION_NAME = process.env.AWS_REGION_NAME;\n+const SQS_QUEUE_URL = process.env.SQS_QUEUE_URL;\n+const REDIS_HOST = process.env.REDIS_HOST;\n+const REDIS_PORT = process.env.REDIS_PORT;\n+const S3_INCOMING_BUCKET = process.env.S3_INCOMING_BUCKET;\n+const S3_OUTGOING_BUCKET = process.env.S3_OUTGOING_BUCKET;\n+\n+const REDIS_CONNECT_TIMEOUT = 10 * 1000; // fail if we can't connect within 10sec, helps diagnose VPC problems\n+const REDIS_MAX_CONNECT_ATTEMPTS = 1; // helps diagnose VPC problems\n+\n+const S3_RECURSE_FLAG = 'keep-feeding';\n+\n+const AWS = require('aws-sdk');\n+AWS.config.update({\n+    region: AWS_REGION_NAME\n+});\n+const SQS = new AWS.SQS({apiVersion: '2012-11-05'});\n+let s3 = new AWS.S3({\n+    signatureVersion: 'v4',\n+    apiVersion: '2006-03-01'\n+});\n+const Lambda = new AWS.Lambda({apiVersion: '2015-03-31'});\n+const redis = require('redis');\n+const Promise = require('bluebird');\n+Promise.promisifyAll(redis.RedisClient.prototype);\n+Promise.promisifyAll(redis.Multi.prototype);\n+\n+function notifyCallerWeAreDone(msg) {\n+    const uuid = msg.body;\n+    const publisher = redis.createClient({\n+        host: REDIS_HOST,\n+        port: REDIS_PORT,\n+        connect_timeout: REDIS_CONNECT_TIMEOUT,\n+        max_attempts: REDIS_MAX_CONNECT_ATTEMPTS\n+    });\n+    console.log(`Publishing redis notification for ${uuid}`);\n+    return publisher.publishAsync(uuid, \"ready\").then(function () {\n+        console.log(`published redis notification for ${uuid}`);\n+        return publisher.quitAsync();\n+    }).catch(function (err) { // swallow errors here, don't fail the whole processing\n+        console.log(`Message ID [${msg.MessageId}]`, err, err.stack)\n+    });\n+}\n+\n+function deleteIncomingObject(msg) {\n+    const uuid = msg.body;\n+    const params = {\n+        Bucket: S3_INCOMING_BUCKET,\n+        Key: uuid\n+    };\n+    return s3.deleteObject(params).promise().catch(function (err) {\n+        console.log('got error trying to delete object from s3:', err, 'params:', JSON.stringify(params, null, 4));\n+        throw err;\n+    });\n+}\n+\n+function processRecord(record) {\n+    return Promise.try(function () {\n+        // console.log(`Hello, ${record.body} of message ID [${record.MessageId}]`);\n+        console.log('record:', JSON.stringify(record, null, 4));\n+        const uuid = record.body;\n+\n+        return Promise.try(function () {\n+            // TODO: do some heavy processing here\n+            // e.g. process it text-to-speech and write to S3_OUTGOING_BUCKET\n+            // Or, invoke a new lambda function?\n+            // keep in mind we said we'd do it in 6 seconds, see VisibilityTimeout above\n+            console.log(`Now doing some heavy processing on object ${uuid}`);\n+        }).then(function () {\n+            return deleteIncomingObject(record);\n+        }).then(function () {\n+            return notifyCallerWeAreDone(record);\n+        });\n+    }).catch(err => console.log(`Message ID [${record.MessageId}]`, err, err.stack));\n+}\n+\n+exports.handler = function(event) {\n+    const records = event.Records;\n+    console.log(`Now processing ${records.length} records from SQS`);\n+    return Promise.map(records, processRecord).catch(function (err) {\n+        console.log('ERROR:', err);\n+        throw err;\n+    });\n+};"
      },
      {
        "filename": "queue-worker/package-lock.json",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "renamed",
        "patch": "@@ -1,5 +1,5 @@\n {\n-  \"name\": \"queue-feeder\",\n+  \"name\": \"queue-worker\",\n   \"version\": \"1.0.0\",\n   \"lockfileVersion\": 1,\n   \"requires\": true,\n@@ -19,9 +19,9 @@\n       \"resolved\": \"https://registry.npmjs.org/redis/-/redis-2.8.0.tgz\",\n       \"integrity\": \"sha512-M1OkonEQwtRmZv4tEWF2VgpG0JWJ8Fv1PhlgT5+B+uNq2cA3Rt1Yt/ryoR+vQNOQcIEgdCdfH0jr3bDpihAw1A==\",\n       \"requires\": {\n-        \"double-ended-queue\": \"2.1.0-0\",\n-        \"redis-commands\": \"1.3.1\",\n-        \"redis-parser\": \"2.6.0\"\n+        \"double-ended-queue\": \"^2.1.0-0\",\n+        \"redis-commands\": \"^1.2.0\",\n+        \"redis-parser\": \"^2.6.0\"\n       }\n     },\n     \"redis-commands\": {"
      },
      {
        "filename": "queue-worker/package.json",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "renamed",
        "patch": "@@ -1,5 +1,5 @@\n {\n-  \"name\": \"queue-feeder\",\n+  \"name\": \"queue-worker\",\n   \"version\": \"1.0.0\",\n   \"main\": \"index.js\",\n   \"scripts\": {"
      },
      {
        "filename": "variables.tf",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -25,3 +25,19 @@ variable \"private1_subnet_cidr\" {\n variable \"private1_subnet_az\" {\n   default = \"us-west-2a\"\n }\n+\n+variable \"use_nat_gateway\" {\n+  description = \"If set to true, use a NAT Gateway; else use a NAT instance (cheaper for non-performance-related testing)\"\n+  default = false\n+}\n+\n+variable \"nat_instance_type\" {\n+  description = \"The instance type to use for the NAT instance (only used if use_nat_gateway is false)\"\n+  default = \"t2.micro\"\n+}\n+\n+variable \"nat_instance_ami\" {\n+  default = \"ami-35d6664d\" # amzn-ami-vpc-nat-hvm-2017.09.1.20180115-x86_64-ebs\n+}\n+\n+variable \"ssh_key_name\" {}"
      },
      {
        "filename": "vpc.tf",
        "additions": 100,
        "deletions": 15,
        "changes": 115,
        "status": "modified",
        "patch": "@@ -1,23 +1,24 @@\n resource \"aws_vpc\" \"batch\" {\n     cidr_block = \"${var.vpc_cidr}\"\n     tags {\n-      Name = \"batch\"\n+        Name = \"batch\"\n     }    \n }\n \n resource \"aws_internet_gateway\" \"gw\" {\n     vpc_id = \"${aws_vpc.batch.id}\"\n+    tags {\n+        Name = \"batch-igw\"\n+    }\n }\n \n-/*\n-  Public Subnet\n-*/\n resource \"aws_subnet\" \"public1\" {\n     vpc_id = \"${aws_vpc.batch.id}\"\n     cidr_block = \"${var.public1_subnet_cidr}\"\n     availability_zone = \"${var.public1_subnet_az}\"\n     map_public_ip_on_launch = true\n     tags {\n+        Name = \"batch-${var.public1_subnet_az}-public-subnet\"\n         type = \"public\"\n     }\n }\n@@ -28,47 +29,131 @@ resource \"aws_route_table\" \"public1\" {\n         cidr_block = \"0.0.0.0/0\"\n         gateway_id = \"${aws_internet_gateway.gw.id}\"\n     }\n+    tags {\n+        Name = \"batch-public-route-table\"\n+    }\n }\n \n resource \"aws_route_table_association\" \"public1\" {\n     subnet_id = \"${aws_subnet.public1.id}\"\n     route_table_id = \"${aws_route_table.public1.id}\"\n }\n \n-/*\n-  Private Subnet\n-*/\n resource \"aws_subnet\" \"private1\" {\n     vpc_id = \"${aws_vpc.batch.id}\"\n     cidr_block = \"${var.private1_subnet_cidr}\"\n     availability_zone = \"${var.private1_subnet_az}\"\n     tags {\n+        Name = \"batch-${var.private1_subnet_az}-private-subnet\"\n         type = \"private\"\n     }\n }\n \n-resource \"aws_route_table\" \"private1\" {\n+resource \"aws_security_group\" \"nat_instance\" {\n+    count = \"${var.use_nat_gateway ? 0 : 1}\"\n+    name        = \"batch-nat-instance-sg\"\n+    vpc_id      = \"${aws_vpc.batch.id}\"\n+    egress {\n+        from_port       = 0\n+        to_port         = 0\n+        protocol        = \"-1\"\n+        cidr_blocks     = [\"0.0.0.0/0\"]\n+    }\n+    ingress {\n+        from_port = 0\n+        to_port = 0\n+        protocol = \"-1\"\n+        cidr_blocks = [\"${aws_subnet.private1.cidr_block}\"]\n+    }\n+    tags {\n+        Name = \"batch-nat-instance-sg\"\n+    }\n+}\n+\n+resource \"aws_instance\" \"nat_instance\" {\n+    count = \"${var.use_nat_gateway ? 0 : 1}\"\n+    ami = \"${var.nat_instance_ami}\"\n+    availability_zone = \"${var.public1_subnet_az}\"\n+    instance_type = \"${var.nat_instance_type}\"\n+    key_name = \"${var.ssh_key_name}\"\n+    vpc_security_group_ids = [\"${aws_security_group.nat_instance.id}\"]\n+    subnet_id = \"${aws_subnet.public1.id}\"\n+    associate_public_ip_address = true\n+    source_dest_check = false\n+    tags {\n+        Name = \"batch-nat-instance\"\n+    }\n+}\n+\n+resource \"aws_route_table\" \"private_nat_instance\" {\n+    count = \"${var.use_nat_gateway ? 0 : 1}\"\n     vpc_id = \"${aws_vpc.batch.id}\"\n     route {\n         cidr_block = \"0.0.0.0/0\"\n-        nat_gateway_id = \"${aws_nat_gateway.gw1.id}\"\n+        instance_id = \"${aws_instance.nat_instance.id}\"\n+    }\n+    tags {\n+        Name = \"batch-private-route-table\"\n     }\n-    depends_on = [\"aws_nat_gateway.gw1\"] // workaround for terraform consistency\n }\n \n-resource \"aws_route_table_association\" \"private1\" {\n+resource \"aws_route_table_association\" \"private_nat_instance\" {\n+    count = \"${var.use_nat_gateway ? 0 : 1}\"\n     subnet_id = \"${aws_subnet.private1.id}\"\n-    route_table_id = \"${aws_route_table.private1.id}\"\n+    route_table_id = \"${aws_route_table.private_nat_instance.id}\"\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"nat_recover\" {\n+    count = \"${var.use_nat_gateway ? 0 : 1}\"\n+    alarm_name = \"batch-nat-instance-recover\"\n+    comparison_operator = \"GreaterThanThreshold\"\n+    evaluation_periods = \"1\"\n+    metric_name = \"StatusCheckFailed_System\"\n+    namespace = \"AWS/EC2\"\n+    period = \"60\"\n+    statistic = \"Minimum\"\n+    threshold = \"0\"\n+    alarm_actions = [\"arn:aws:automate:${var.aws_region}:ec2:recover\"]\n+    dimensions = {\n+        InstanceId = \"${aws_instance.nat_instance.id}\"\n+    }\n+    depends_on = [\"aws_instance.nat_instance\"]\n }\n \n resource \"aws_eip\" \"eip1\" {\n+    count = \"${var.use_nat_gateway ? 1 : 0}\"\n     vpc = \"true\"\n+    tags {\n+        Name = \"batch-nat-gw-eip\"\n+    }\n     depends_on = [\"aws_internet_gateway.gw\"]\n }\n \n resource \"aws_nat_gateway\" \"gw1\" {\n-  allocation_id = \"${aws_eip.eip1.id}\"\n-  subnet_id     = \"${aws_subnet.public1.id}\"\n-  depends_on = [\"aws_internet_gateway.gw\"]\n+    count = \"${var.use_nat_gateway ? 1 : 0}\"\n+    allocation_id = \"${aws_eip.eip1.id}\"\n+    subnet_id     = \"${aws_subnet.public1.id}\"\n+    tags {\n+        Name = \"batch-nat-gw\"\n+    }\n+    depends_on = [\"aws_internet_gateway.gw\"]\n+}\n+\n+resource \"aws_route_table\" \"private_nat_gw\" {\n+    count = \"${var.use_nat_gateway ? 1 : 0}\"\n+    vpc_id = \"${aws_vpc.batch.id}\"\n+    route {\n+        cidr_block = \"0.0.0.0/0\"\n+        nat_gateway_id = \"${aws_nat_gateway.gw1.id}\"\n+    }\n+    tags {\n+        Name = \"batch-private-route-table\"\n+    }\n+    depends_on = [\"aws_nat_gateway.gw1\"] // workaround for terraform consistency\n }\n \n+resource \"aws_route_table_association\" \"private_nat_gw\" {\n+    count = \"${var.use_nat_gateway ? 1 : 0}\"\n+    subnet_id = \"${aws_subnet.private1.id}\"\n+    route_table_id = \"${aws_route_table.private_nat_gw.id}\"\n+}"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-azurerm-mysql/commit/ab28ba331929475431fe695036d0863d329cdac2",
    "files": [
      {
        "filename": ".github/workflows/compare.yml",
        "additions": 16,
        "deletions": 14,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -7,7 +7,6 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n   tf_target_dir: example/examplea\n   branch: main\n jobs:\n@@ -22,8 +21,7 @@ jobs:\n       - name: tfsec\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion tfsec/tfsec)\n-          wget https://github.com/tfsec/tfsec/releases/download/v${now}/tfsec-linux-amd64\n+          lastversion tfsec/tfsec --assets -d\n           chmod +x tfsec-linux-amd64\n           ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n         continue-on-error: true\n@@ -67,18 +65,20 @@ jobs:\n       - name: install terrascan\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion accurics/terrascan)\n-          curl --location https://github.com/accurics/terrascan/releases/download/v${now}/terrascan_${now}_Linux_x86_64.tar.gz --output terrascan.tar.gz\n-          tar -xvf terrascan.tar.gz\n+          lastversion accurics/terrascan --assets -d --verbose\n+          tar -xvf terrascan*.tar.gz\n+          chmod +x ./terrascan\n       - name: run terrascan\n-        run: ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json >terrascan.json\n+        run: |\n+          ./terrascan init\n+          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: terrascan\n           path: terrascan.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n   kics:\n     runs-on: ubuntu-latest\n     steps:\n@@ -87,18 +87,20 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: run kics Scan\n-        uses: checkmarx/kics-action@v1.0\n-        with:\n-          path: ${{ env.tf_target_dir }}\n-          output_path: \"kics.json\"\n+      - name: install kics\n+        run: |\n+          pip3 install lastversion\n+          lastversion Checkmarx/kics --assets -d --verbose\n+          tar -xvf kics*.tar.gz\n+      - name: run kics\n+        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: kics\n           path: kics.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n \n   upload:\n     needs: [kics, terrascan, checkov, tfsec]"
      },
      {
        "filename": ".github/workflows/main.yml",
        "additions": 31,
        "deletions": 15,
        "changes": 46,
        "status": "modified",
        "patch": "@@ -9,11 +9,19 @@ on:\n     branches:\n       - main\n env:\n-  terraform: 0.14.8\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n   branch: main\n jobs:\n   terraform:\n+    env:\n+      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}\n+      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}\n+      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}\n+      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout\n@@ -22,17 +30,27 @@ jobs:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n       - name: Terraform Init\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: init\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform init\n+        working-directory: ${{ env.tf_target_dir }}\n       - name: Terraform Validate\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: validate\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform validate\n+        working-directory: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        run: terraform plan\n+        working-directory: ${{ env.tf_target_dir }}\n+        env:\n+          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}\n+          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}\n+          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}\n+      - name: Bills\n+        run: |\n+          pip3 install lastversion\n+          lastversion infracost --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf infracost*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/infracost-linux-amd64\n+          $GITHUB_WORKSPACE/bin/infracost-linux-amd64 breakdown --path ${{ env.tf_target_dir }} --usage-file ${{ env.tf_target_dir }}/infracost-usage.yml --show-skipped\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -46,10 +64,9 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n@@ -59,7 +76,6 @@ jobs:\n     steps:\n       - uses: actions/checkout@master\n       - name: Bump version and push tag\n-        if: ${{ !env.ACT }}\n         uses: anothrNick/github-tag-action@master\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "filename": ".github/workflows/pull_request.yml",
        "additions": 44,
        "deletions": 14,
        "changes": 58,
        "status": "modified",
        "patch": "@@ -6,29 +6,39 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n \n jobs:\n   terraform:\n+    env:\n+      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}\n+      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}\n+      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}\n+      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout\n         uses: actions/checkout@v2\n         with:\n           token: ${{ github.token }}\n       - name: Terraform Init\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: init\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform init\n+        working-directory: ${{ env.tf_target_dir }}\n       - name: Terraform Validate\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: validate\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform validate\n+        working-directory: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        run: terraform plan\n+        working-directory: ${{ env.tf_target_dir }}\n+        env:\n+          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}\n+          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}\n+          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -41,10 +51,30 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}\n+          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}\n+          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}\n+          # See the cloud credentials section for the options\n+        with:\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          usage_file: ${{ env.tf_target_dir }}/infracost-usage.yml\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": "example/examplea/Makefile",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,4 +74,4 @@ purge:\n \t$(BLAT)\r\n \r\n cost:\r\n-\tinfracost breakdown --path . --usage-file infracost-usage.yml  --sync-usage-file\n\\ No newline at end of file\n+\tinfracost breakdown --path . --usage-file infracost-usage.yml  --sync-usage-file --show-skipped\r"
      },
      {
        "filename": "example/examplea/infracost-usage.yml",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+version: 0.1\n+resource_usage:\n+  module.mysql.azurerm_mysql_server.examplea:\n+    additional_backup_storage_gb: 0"
      },
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n terraform {\n   required_providers {\n     azurerm = {\n-      version = \"2.56.0\"\n+      version = \"2.59.0\"\n       source  = \"hashicorp/azurerm\"\n     }\n   }"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["azure", "not_relevant"],
    "notes": "The commit does not make cost-related changes, only enables Infracost in CI"
  },
  {
    "url": "https://github.com/ae-lexs/terraform_modules/commit/84628710c900b2d1db058aa0e339134f24e6d20c",
    "files": [
      {
        "filename": "README.md",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -20,6 +20,10 @@ terraform init\n terraform get\n ```\n \n+## Module Documentation\n+\n+- [billing_cloudwatch_alarm](./modules/billing_cloudwatch_alarm/README.md)\n+\n ## Inputs\n \n | Name           | Description       | Type   | Default | Required |\n@@ -30,4 +34,4 @@ terraform get\n \n ## License\n \n-**terraform_modules** is licensed under [Apache License, Version 2.0](https://github.com/AlexisNava/terraform_modules/blob/master/LICENSE).\n\\ No newline at end of file\n+**terraform_modules** is licensed under [Apache License, Version 2.0](./LICENSE).\n\\ No newline at end of file"
      },
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -4,8 +4,8 @@ provider \"aws\" {\n   region     = \"us-east-1\"\n }\n \n-module \"cloudwatch_alarm\" {\n-  source      = \"./modules/cloudwatch_alarm\"\n+module \"billing_cloudwatch_alarm\" {\n+  source      = \"./modules/billing_cloudwatch_alarm\"\n   alarm_name  = \"Resources Expenses Metrict\"\n   threshold   = \"1\"\n   sms_enpoint = var.sms_enpoint"
      },
      {
        "filename": "modules/billing_cloudwatch_alarm/.gitignore",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+# Folders\n+.terraform\n+\n+# Files\n+terraform.tfstate\n+terraform.tfstate.backup"
      },
      {
        "filename": "modules/billing_cloudwatch_alarm/README.md",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "status": "added",
        "patch": "@@ -0,0 +1,40 @@\n+# billing_cloudwatch_alarm\n+\n+**billing_cloudwatch_alarm** is a Terraform module that creates Billing alarms in AWS CloudWatch and sends an SMS message when the defined threshold is rebased \n+\n+## Requirements\n+\n+- [Terraform >= v0.12.28](https://www.terraform.io/downloads.html)\n+\n+## Installation\n+\n+### Initialize the project\n+\n+```sh\n+terraform init\n+```\n+\n+### Install the local modules\n+\n+```sh\n+terraform get\n+```\n+\n+## Inputs\n+\n+| Name           | Description       | Type   | Default | Required |\n+| :---:          | :---:             | :---:  | :---:   | :---:    |\n+| alarm_name | CloudWatch Alarm Name | string | -       | :heavy_check_mark: |\n+| usd_amount_threshold | The USD amount threshold | string | -       | :heavy_check_mark: |\n+| sms_enpoint | Phone number to subscribe to the SMS alert | string | -       | :heavy_check_mark: |\n+\n+## Outputs\n+\n+| Name                            | Description           |\n+| :---:                           | :---:                 |\n+| cloudwatch_alarm_alarm_name     | The alarm name for the billing_cloudwatch_alarm module   |\n+| cloudwatch_alarm_period     | Period of time in seconds (6 hrs)   |\n+\n+## License\n+\n+**billing_cloudwatch_alarm** is licensed under [Apache License, Version 2.0](https://github.com/AlexisNava/terraform_modules/blob/master/LICENSE).\n\\ No newline at end of file"
      },
      {
        "filename": "modules/billing_cloudwatch_alarm/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "renamed",
        "patch": "@@ -6,7 +6,7 @@ resource \"aws_sns_topic\" \"sms_cloudwatch_metrict_alert\" {\n   }\n }\n \n-resource \"aws_cloudwatch_metric_alarm\" \"cloudwatch_alarm\" {\n+resource \"aws_cloudwatch_metric_alarm\" \"billing_cloudwatch_alarm\" {\n   alarm_name          = var.alarm_name\n   comparison_operator = \"GreaterThanOrEqualToThreshold\"\n   evaluation_periods  = \"1\""
      },
      {
        "filename": "modules/billing_cloudwatch_alarm/outputs.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+output \"cloudwatch_alarm_alarm_name\" {\n+  description = \"The alarm name for the billing_cloudwatch_alarm module\"\n+  value       = aws_cloudwatch_metric_alarm.billing_cloudwatch_alarm.alarm_name\n+}\n+\n+output \"cloudwatch_alarm_period\" {\n+  description = \"Period of time in seconds (6 hrs)\"\n+  value       = aws_cloudwatch_metric_alarm.billing_cloudwatch_alarm.period\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/billing_cloudwatch_alarm/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "renamed",
        "patch": "@@ -9,6 +9,6 @@ variable \"usd_amount_threshold\" {\n }\n \n variable \"sms_enpoint\" {\n-  description = \"Phone number to subscribe to the sms_cloudwatch_metrict_alert SNS Topic\"\n+  description = \"Phone number to subscribe to the SMS alert\"\n   type        = string\n }\n\\ No newline at end of file"
      },
      {
        "filename": "modules/cloudwatch_alarm/outputs.tf",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "status": "removed",
        "patch": "@@ -1,9 +0,0 @@\n-output \"cloudwatch_alarm_alarm_name\" {\n-  description = \"The alarm name for the cloudwatch_alarm module\"\n-  value       = aws_cloudwatch_metric_alarm.cloudwatch_alarm.alarm_name\n-}\n-\n-output \"cloudwatch_alarm_period\" {\n-  description = \"Period of time in seconds (6 hrs)\"\n-  value       = aws_cloudwatch_metric_alarm.cloudwatch_alarm.period\n-}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ae-lexs/terraform_modules/commit/8cd62acc20ce3418eaf4cdd9d8b472091101cdbd",
    "files": [
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n # Terraform Modules\n \n-This projects is a collection of personal Terrafom Modules\n+This project is a collection of personal Terrafom Modules\n \n ## Requirements\n "
      },
      {
        "filename": "modules/billing_cloudwatch_alarm/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -3,7 +3,7 @@ variable \"alarm_name\" {\n   type        = string\n }\n \n-variable \"usd_amount_threshold\" {\n+variable \"threshold\" {\n   description = \"The USD amount threshold\"\n   type        = string\n }"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/reschouw-homelab/terraform-homelab/commit/e19dd7497737376a07e62042ed9fb3e8ad9739a9",
    "files": [
      {
        "filename": "aws/archive/eks/cluster-iam.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "aws/archive/eks/cluster.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "aws/archive/eks/data.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "aws/archive/eks/nodes-iam.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "aws/archive/eks/nodes.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "aws/archive/eks/provider.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "aws/archive/eks/terraform.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "aws/archive/eks/versions.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/austin1237/gifbot/commit/c11dabf1ea02c0e044c62448986bb3f9abdf3967",
    "files": [
      {
        "filename": "terraform/dev/remote-state/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -16,8 +16,8 @@ resource \"aws_s3_bucket\" \"terraform_state\" {\n \n resource \"aws_dynamodb_table\" \"terraform_state_lock\" {\n   name           = \"gifbot-state-lock-${var.ENVIRONMENT}\"\n-  read_capacity  = 20\n-  write_capacity = 20\n+  read_capacity  = 1\n+  write_capacity = 1\n   hash_key       = \"LockID\"\n \n   attribute {"
      },
      {
        "filename": "terraform/prod/remote-state/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -16,8 +16,8 @@ resource \"aws_s3_bucket\" \"terraform_state\" {\n \n resource \"aws_dynamodb_table\" \"terraform_state_lock\" {\n   name           = \"gifbot-state-lock-${var.ENVIRONMENT}\"\n-  read_capacity  = 20\n-  write_capacity = 20\n+  read_capacity  = 1\n+  write_capacity = 1\n   hash_key       = \"LockID\"\n \n   attribute {"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["aws", "dynamo_reduce_rw_capacity"],
    "notes": "Reduce the read and write capacity for DynamoDB from 20 to 1"
  },
  {
    "url": "https://github.com/joelchrist/terraform/commit/bbf18d695bd7597977ea7a97d5434ca7f1a37d57",
    "files": [
      {
        "filename": "modules/vps/main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ provider \"google\" {\n \n resource \"google_compute_instance\" \"server\" {\n   name         = \"joelchristnl\"\n-  machine_type = \"n1-standard-1\"\n+  machine_type = \"g1-small\"\n   zone = \"${var.gcp_zone}\"\n \n   boot_disk {\n@@ -15,6 +15,7 @@ resource \"google_compute_instance\" \"server\" {\n     }\n   }\n \n+\tallow_stopping_for_update = true\n   can_ip_forward = true\n \n   network_interface {\n@@ -32,4 +33,4 @@ resource \"google_compute_instance\" \"server\" {\n   service_account {\n     scopes = [\"userinfo-email\", \"compute-ro\", \"storage-ro\"]\n   }\n-}\n\\ No newline at end of file\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["gcp", "cheaper_instance"],
    "notes": "Move from n1-standard-1 to g1-small"
  },
  {
    "url": "https://github.com/ToruMakabe/aks-anti-dry-iac/commit/4ba7a9dc3085ab701c85737a4f36dd57fcd7596f",
    "files": [
      {
        "filename": "flux/apps/blue-dev-test/demoapp/deployment-values.yaml",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: session-checker\n+spec:\n+  template:\n+    spec:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule"
      },
      {
        "filename": "flux/apps/blue-dev-test/demoapp/kustomization.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+namespace: demoapp\n+resources:\n+  - ../../base/demoapp\n+patchesStrategicMerge:\n+  - deployment-values.yaml"
      },
      {
        "filename": "flux/apps/blue-dev-test/kustomization.yaml",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ./demoapp"
      },
      {
        "filename": "flux/apps/blue/demoapp/kustomization.yaml",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ../../base/demoapp"
      },
      {
        "filename": "flux/apps/blue/kustomization.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n apiVersion: kustomize.config.k8s.io/v1beta1\n kind: Kustomization\n resources:\n-  - ../base/demoapp\n+  - ./demoapp"
      },
      {
        "filename": "flux/apps/green-dev-test/demoapp/deployment-values.yaml",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: session-checker\n+spec:\n+  template:\n+    spec:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule"
      },
      {
        "filename": "flux/apps/green-dev-test/demoapp/kustomization.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+namespace: demoapp\n+resources:\n+  - ../../base/demoapp\n+patchesStrategicMerge:\n+  - deployment-values.yaml"
      },
      {
        "filename": "flux/apps/green-dev-test/kustomization.yaml",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ./demoapp"
      },
      {
        "filename": "flux/apps/green/demoapp/kustomization.yaml",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ../../base/demoapp"
      },
      {
        "filename": "flux/apps/green/kustomization.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n apiVersion: kustomize.config.k8s.io/v1beta1\n kind: Kustomization\n resources:\n-  - ../base/demoapp\n+  - ./demoapp"
      },
      {
        "filename": "flux/clusters/base/apps.yaml",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "status": "renamed",
        "patch": "@@ -2,15 +2,13 @@ apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n kind: Kustomization\n metadata:\n   name: apps\n-  namespace: flux-system\n spec:\n   interval: 10m0s\n   dependsOn:\n     - name: infrastructure\n   sourceRef:\n     kind: GitRepository\n     name: flux-system\n-  path: ./flux/apps/blue\n   prune: true\n   validation: client\n   healthChecks:"
      },
      {
        "filename": "flux/clusters/base/infrastructure.yaml",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "status": "renamed",
        "patch": "@@ -2,13 +2,11 @@ apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n kind: Kustomization\n metadata:\n   name: infrastructure\n-  namespace: flux-system\n spec:\n   interval: 10m0s\n   sourceRef:\n     kind: GitRepository\n     name: flux-system\n-  path: ./flux/infrastructure/blue\n   prune: true\n   validation: client\n   healthChecks:"
      },
      {
        "filename": "flux/clusters/base/kustomization.yaml",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+namespace: flux-system\n+resources:\n+  - apps.yaml\n+  - infrastructure.yaml"
      },
      {
        "filename": "flux/clusters/blue-dev-test/apps-values.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n+kind: Kustomization\n+metadata:\n+  name: apps\n+  namespace: flux-system\n+spec:\n+  path: ./flux/apps/blue-dev-test"
      },
      {
        "filename": "flux/clusters/blue-dev-test/infrastructure-values.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n+kind: Kustomization\n+metadata:\n+  name: infrastructure\n+  namespace: flux-system\n+spec:\n+  path: ./flux/infrastructure/blue-dev-test"
      },
      {
        "filename": "flux/clusters/blue-dev-test/kustomization.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ../base\n+patchesStrategicMerge:\n+  - apps-values.yaml\n+  - infrastructure-values.yaml"
      },
      {
        "filename": "flux/clusters/blue/apps-values.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n+kind: Kustomization\n+metadata:\n+  name: apps\n+  namespace: flux-system\n+spec:\n+  path: ./flux/apps/blue"
      },
      {
        "filename": "flux/clusters/blue/infrastructure-values.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n+kind: Kustomization\n+metadata:\n+  name: infrastructure\n+  namespace: flux-system\n+spec:\n+  path: ./flux/infrastructure/blue"
      },
      {
        "filename": "flux/clusters/blue/kustomization.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ../base\n+patchesStrategicMerge:\n+  - apps-values.yaml\n+  - infrastructure-values.yaml"
      },
      {
        "filename": "flux/clusters/green-dev-test/apps-values.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n+kind: Kustomization\n+metadata:\n+  name: apps\n+  namespace: flux-system\n+spec:\n+  path: ./flux/apps/green-dev-test"
      },
      {
        "filename": "flux/clusters/green-dev-test/infrastructure-values.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n+kind: Kustomization\n+metadata:\n+  name: infrastructure\n+  namespace: flux-system\n+spec:\n+  path: ./flux/infrastructure/green-dev-test"
      },
      {
        "filename": "flux/clusters/green-dev-test/kustomization.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ../base\n+patchesStrategicMerge:\n+  - apps-values.yaml\n+  - infrastructure-values.yaml"
      },
      {
        "filename": "flux/clusters/green/apps-values.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n+kind: Kustomization\n+metadata:\n+  name: apps\n+  namespace: flux-system\n+spec:\n+  path: ./flux/apps/green"
      },
      {
        "filename": "flux/clusters/green/apps.yaml",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "status": "removed",
        "patch": "@@ -1,23 +0,0 @@\n-apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n-kind: Kustomization\n-metadata:\n-  name: apps\n-  namespace: flux-system\n-spec:\n-  interval: 10m0s\n-  dependsOn:\n-    - name: infrastructure\n-  sourceRef:\n-    kind: GitRepository\n-    name: flux-system\n-  path: ./flux/apps/green\n-  prune: true\n-  validation: client\n-  healthChecks:\n-    - kind: Deployment\n-      name: session-checker\n-      namespace: demoapp\n-  postBuild:\n-    substituteFrom:\n-      - kind: ConfigMap\n-        name: flux-configs"
      },
      {
        "filename": "flux/clusters/green/infrastructure-values.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n+kind: Kustomization\n+metadata:\n+  name: infrastructure\n+  namespace: flux-system\n+spec:\n+  path: ./flux/infrastructure/green"
      },
      {
        "filename": "flux/clusters/green/infrastructure.yaml",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "status": "removed",
        "patch": "@@ -1,26 +0,0 @@\n-apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n-kind: Kustomization\n-metadata:\n-  name: infrastructure\n-  namespace: flux-system\n-spec:\n-  interval: 10m0s\n-  sourceRef:\n-    kind: GitRepository\n-    name: flux-system\n-  path: ./flux/infrastructure/green\n-  prune: true\n-  validation: client\n-  healthChecks:\n-    - apiVersion: helm.toolkit.fluxcd.io/v2beta1\n-      kind: HelmRelease\n-      name: nginx\n-      namespace: nginx\n-    - apiVersion: helm.toolkit.fluxcd.io/v2beta1\n-      kind: HelmRelease\n-      name: chaos-mesh\n-      namespace: chaos-testing\n-  postBuild:\n-    substituteFrom:\n-      - kind: ConfigMap\n-        name: flux-configs"
      },
      {
        "filename": "flux/clusters/green/kustomization.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ../base\n+patchesStrategicMerge:\n+  - apps-values.yaml\n+  - infrastructure-values.yaml"
      },
      {
        "filename": "flux/infrastructure/base/chaos-mesh/release.yaml",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -11,6 +11,7 @@ spec:\n         kind: HelmRepository\n         name: chaos-mesh\n         namespace: flux-system\n+      version: \"2.1.3\"\n   interval: 5m\n   install:\n     remediation:\n@@ -21,6 +22,10 @@ spec:\n   # Default values\n   # https://github.com/chaos-mesh/chaos-mesh/blob/master/helm/chaos-mesh/values.yaml\n   values:\n+    controllerManager:\n+      tolerations:\n+      - key: CriticalAddonsOnly\n+        operator: Exists\n     chaosDaemon:\n       runtime: containerd\n       socketPath: /run/containerd/containerd.sock"
      },
      {
        "filename": "flux/infrastructure/base/nginx/release.yaml",
        "additions": 20,
        "deletions": 1,
        "changes": 21,
        "status": "modified",
        "patch": "@@ -11,6 +11,7 @@ spec:\n         kind: HelmRepository\n         name: ingress-nginx\n         namespace: flux-system\n+      version: \"4.0.17\"\n   interval: 5m\n   install:\n     remediation:\n@@ -22,8 +23,26 @@ spec:\n   # https://github.com/kubernetes/ingress-nginx/blob/master/charts/ingress-nginx/values.yaml\n   values:\n     controller:\n+      replicaCount: 2\n       service:\n+        annotations:\n+          service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n+          service.beta.kubernetes.io/azure-load-balancer-internal-subnet: ${demoapp_ingress_svc_subnet}\n         type: LoadBalancer\n-      replicaCount: 2\n+        loadBalancerIP: ${demoapp_ingress_svc_ip}\n+        externalTrafficPolicy: Local\n+      config:\n+        use-forwarded-headers: \"true\"\n+      tolerations:\n+      - key: CriticalAddonsOnly\n+        operator: Exists\n+      admissionWebhooks:\n+        patch:\n+          tolerations:\n+          - key: CriticalAddonsOnly\n+            operator: Exists\n     defaultBackend:\n       enabled: \"true\"\n+      tolerations:\n+      - key: CriticalAddonsOnly\n+        operator: Exists"
      },
      {
        "filename": "flux/infrastructure/blue-dev-test/chaos-mesh-values.yaml",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+apiVersion: helm.toolkit.fluxcd.io/v2beta1\n+kind: HelmRelease\n+metadata:\n+  name: chaos-mesh\n+spec:\n+  # Default values\n+  # https://github.com/chaos-mesh/chaos-mesh/blob/master/helm/chaos-mesh/values.yaml\n+  values:\n+    chaosDaemon:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule\n+    dashboard:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule"
      },
      {
        "filename": "flux/infrastructure/blue-dev-test/kustomization.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ../base\n+patchesStrategicMerge:\n+  - chaos-mesh-values.yaml\n+  - nginx-values.yaml"
      },
      {
        "filename": "flux/infrastructure/blue-dev-test/nginx-values.yaml",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+apiVersion: helm.toolkit.fluxcd.io/v2beta1\n+kind: HelmRelease\n+metadata:\n+  name: nginx\n+spec:\n+  # Default values\n+  # https://github.com/chaos-mesh/chaos-mesh/blob/master/helm/chaos-mesh/values.yaml\n+  values:\n+    controller:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule\n+    defaultBackend:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule"
      },
      {
        "filename": "flux/infrastructure/blue/chaos-mesh-values.yaml",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "status": "removed",
        "patch": "@@ -1,11 +0,0 @@\n-apiVersion: helm.toolkit.fluxcd.io/v2beta1\n-kind: HelmRelease\n-metadata:\n-  name: chaos-mesh\n-spec:\n-  chart:\n-    spec:\n-      chart: chaos-mesh\n-      version: \"2.1.3\"\n-  # Default values\n-  # https://github.com/chaos-mesh/chaos-mesh/blob/master/helm/chaos-mesh/values.yaml"
      },
      {
        "filename": "flux/infrastructure/blue/kustomization.yaml",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -2,6 +2,3 @@ apiVersion: kustomize.config.k8s.io/v1beta1\n kind: Kustomization\n resources:\n   - ../base\n-patchesStrategicMerge:\n-  - nginx-values.yaml\n-  - chaos-mesh-values.yaml"
      },
      {
        "filename": "flux/infrastructure/blue/nginx-values.yaml",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "status": "removed",
        "patch": "@@ -1,22 +0,0 @@\n-apiVersion: helm.toolkit.fluxcd.io/v2beta1\n-kind: HelmRelease\n-metadata:\n-  name: nginx\n-spec:\n-  chart:\n-    spec:\n-      chart: ingress-nginx\n-      version: \"4.0.17\"\n-  # Default values\n-  # https://github.com/kubernetes/ingress-nginx/blob/master/charts/ingress-nginx/values.yaml\n-  values:\n-    controller:\n-      service:\n-        annotations:\n-          service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n-          service.beta.kubernetes.io/azure-load-balancer-internal-subnet: ${demoapp_ingress_svc_subnet}\n-        type: LoadBalancer\n-        loadBalancerIP: ${demoapp_ingress_svc_ip}\n-        externalTrafficPolicy: Local\n-      config:\n-        use-forwarded-headers: \"true\""
      },
      {
        "filename": "flux/infrastructure/green-dev-test/chaos-mesh-values.yaml",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+apiVersion: helm.toolkit.fluxcd.io/v2beta1\n+kind: HelmRelease\n+metadata:\n+  name: chaos-mesh\n+spec:\n+  # Default values\n+  # https://github.com/chaos-mesh/chaos-mesh/blob/master/helm/chaos-mesh/values.yaml\n+  values:\n+    chaosDaemon:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule\n+    dashboard:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule"
      },
      {
        "filename": "flux/infrastructure/green-dev-test/kustomization.yaml",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+apiVersion: kustomize.config.k8s.io/v1beta1\n+kind: Kustomization\n+resources:\n+  - ../base\n+patchesStrategicMerge:\n+  - chaos-mesh-values.yaml\n+  - nginx-values.yaml"
      },
      {
        "filename": "flux/infrastructure/green-dev-test/nginx-values.yaml",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+apiVersion: helm.toolkit.fluxcd.io/v2beta1\n+kind: HelmRelease\n+metadata:\n+  name: nginx\n+spec:\n+  # Default values\n+  # https://github.com/chaos-mesh/chaos-mesh/blob/master/helm/chaos-mesh/values.yaml\n+  values:\n+    controller:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule\n+    defaultBackend:\n+      tolerations:\n+      - key: kubernetes.azure.com/scalesetpriority\n+        operator: Equal\n+        value: spot\n+        effect: NoSchedule"
      },
      {
        "filename": "flux/infrastructure/green/chaos-mesh-values.yaml",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "status": "removed",
        "patch": "@@ -1,11 +0,0 @@\n-apiVersion: helm.toolkit.fluxcd.io/v2beta1\n-kind: HelmRelease\n-metadata:\n-  name: chaos-mesh\n-spec:\n-  chart:\n-    spec:\n-      chart: chaos-mesh\n-      version: \"2.1.3\"\n-  # Default values\n-  # https://github.com/chaos-mesh/chaos-mesh/blob/master/helm/chaos-mesh/values.yaml"
      },
      {
        "filename": "flux/infrastructure/green/kustomization.yaml",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -2,6 +2,3 @@ apiVersion: kustomize.config.k8s.io/v1beta1\n kind: Kustomization\n resources:\n   - ../base\n-patchesStrategicMerge:\n-  - nginx-values.yaml\n-  - chaos-mesh-values.yaml"
      },
      {
        "filename": "flux/infrastructure/green/nginx-values.yaml",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "status": "removed",
        "patch": "@@ -1,22 +0,0 @@\n-apiVersion: helm.toolkit.fluxcd.io/v2beta1\n-kind: HelmRelease\n-metadata:\n-  name: nginx\n-spec:\n-  chart:\n-    spec:\n-      chart: ingress-nginx\n-      version: \"4.0.17\"\n-  # Default values\n-  # https://github.com/kubernetes/ingress-nginx/blob/master/charts/ingress-nginx/values.yaml\n-  values:\n-    controller:\n-      service:\n-        annotations:\n-          service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n-          service.beta.kubernetes.io/azure-load-balancer-internal-subnet: ${demoapp_ingress_svc_subnet}\n-        type: LoadBalancer\n-        loadBalancerIP: ${demoapp_ingress_svc_ip}\n-        externalTrafficPolicy: Local\n-      config:\n-        use-forwarded-headers: \"true\""
      },
      {
        "filename": "flux/scripts/bootstrap.sh",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -33,4 +33,5 @@ flux bootstrap github \\\n   --repository=aks-anti-dry-iac \\\n   --branch=\"${FLUX_BRANCH}\" \\\n   --path=\"./flux/clusters/${CLUSTER_SWITCH}\" \\\n-  --personal\n+  --personal \\\n+  --toleration-keys=CriticalAddonsOnly"
      },
      {
        "filename": "flux/scripts/setup-dev-test.sh",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "renamed",
        "patch": "@@ -7,13 +7,13 @@ set -eo pipefail\n \n if [ $# -lt 4 ] && [ $# -gt 5 ]\n then\n-  echo \"[Error] Usage: setup-flux.sh <blue/green> <cluster resource group name> <cluster name> <flux repo url> <flux branch(defaut: main)>\"\n+  echo \"[Error] Usage: setup-dev-test.sh <blue/green> <cluster resource group name> <cluster name> <flux repo url> <flux branch(defaut: main)>\"\n   exit 1\n fi\n \n if [ \"$1\" != \"blue\" ] && [ \"$1\" != \"green\" ]\n then\n-  echo \"[Error] Usage: setup-flux.sh <blue/green> <cluster resource group name> <cluster name> <flux repo url> <flux branch(defaut: main)>\"\n+  echo \"[Error] Usage: setup-dev-test.sh <blue/green> <cluster resource group name> <cluster name>  <flux repo url> <flux branch(defaut: main)\"\n   exit 1\n fi\n \n@@ -29,7 +29,7 @@ az aks get-credentials -g \"${AKS_RESOURCE_GROUP_NAME}\" -n \"${AKS_CLUSTER_NAME}\"\n \n kubelogin convert-kubeconfig -l azurecli\n \n-flux install --log-level debug\n+flux install --toleration-keys=CriticalAddonsOnly --log-level debug\n \n flux create secret git github-credentials \\\n   --url=\"${FLUX_REPO_URL}\" \\\n@@ -56,4 +56,4 @@ EOF\n flux create kustomization flux-system \\\n   --interval=15m \\\n   --source=flux-system \\\n-  --path=\"./flux/clusters/${CLUSTER_SWITCH}\"\n+  --path=\"./flux/clusters/${CLUSTER_SWITCH}-dev-test\""
      },
      {
        "filename": "flux/scripts/setup-dev.sh",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "status": "removed",
        "patch": "@@ -1,59 +0,0 @@\n-#!/usr/bin/env bash\n-set -eo pipefail\n-\n-# Before running this script, you must:\n-# export GITHUB_TOKEN=your-token\n-# export GITHUB_USER=your-username\n-\n-if [ $# -lt 4 ] && [ $# -gt 5 ]\n-then\n-  echo \"[Error] Usage: setup-dev.sh <blue/green> <cluster resource group name> <cluster name> <flux repo url> <flux branch(defaut: dev)>\"\n-  exit 1\n-fi\n-\n-if [ \"$1\" != \"blue\" ] && [ \"$1\" != \"green\" ]\n-then\n-  echo \"[Error] Usage: setup-dev.sh <blue/green> <cluster resource group name> <cluster name>  <flux repo url> <flux branch(defaut: dev)\"\n-  exit 1\n-fi\n-\n-CLUSTER_SWITCH=$1\n-AKS_RESOURCE_GROUP_NAME=$2\n-AKS_CLUSTER_NAME=$3\n-FLUX_REPO_URL=$4\n-FLUX_BRANCH=${5:-dev}\n-\n-export KUBECONFIG=${HOME}/.kube/config-flux-${AKS_CLUSTER_NAME}\n-\n-az aks get-credentials -g \"${AKS_RESOURCE_GROUP_NAME}\" -n \"${AKS_CLUSTER_NAME}\" -f \"${KUBECONFIG}\" --overwrite-existing\n-\n-kubelogin convert-kubeconfig -l azurecli\n-\n-flux install --log-level debug\n-\n-flux create secret git github-credentials \\\n-  --url=\"${FLUX_REPO_URL}\" \\\n-  --username=\"${GITHUB_USER}\" \\\n-  --password=\"${GITHUB_TOKEN}\"\n-\n-kubectl apply -f - <<EOF\n-apiVersion: source.toolkit.fluxcd.io/v1beta1\n-kind: GitRepository\n-metadata:\n-  name: flux-system\n-  namespace: flux-system\n-spec:\n-  interval: 15m\n-  ref:\n-    branch: ${FLUX_BRANCH}\n-  url: ${FLUX_REPO_URL}\n-  secretRef:\n-    name: github-credentials\n-  ignore: |\n-    /flux/clusters/${CLUSTER_SWITCH}/flux-system/\n-EOF\n-\n-flux create kustomization flux-system \\\n-  --interval=15m \\\n-  --source=flux-system \\\n-  --path=\"./flux/clusters/${CLUSTER_SWITCH}\""
      },
      {
        "filename": "terraform/blue/aks/main.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -167,9 +167,17 @@ resource \"azurerm_kubernetes_cluster_node_pool\" \"user\" {\n   vm_size               = local.aks.default.vm_size\n   availability_zones    = [each.key]\n   node_count            = var.aks.node_pool.user.node_count\n+  priority              = var.aks.node_pool.user.priority\n   os_disk_size_gb       = local.aks.default.os_disk_size_gb\n   os_disk_type          = local.aks.default.os_disk_type\n   os_sku                = local.aks.default.os_sku\n+\n+  lifecycle {\n+    ignore_changes = [\n+      eviction_policy,\n+      node_taints,\n+    ]\n+  }\n }\n \n resource \"azurerm_role_assignment\" \"aks_metrics\" {"
      },
      {
        "filename": "terraform/blue/aks/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -18,6 +18,7 @@ variable \"aks\" {\n       })\n       user = object({\n         node_count = number\n+        priority   = string\n       })\n     })\n     aad = object({"
      },
      {
        "filename": "terraform/blue/dev.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -17,6 +17,7 @@ aks = {\n       // one pool per zone\n       // total nodes = node_count * 3 AZ\n       node_count = 1\n+      priority   = \"Spot\"\n     }\n   }\n   aad = {"
      },
      {
        "filename": "terraform/blue/prod.tfvars",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -11,12 +11,13 @@ aks = {\n   }\n   node_pool = {\n     system = {\n-      node_count = 2\n+      node_count = 3\n     }\n     user = {\n       // one pool per zone\n       // total nodes = node_count * 3 AZ\n       node_count = 3\n+      priority   = \"Regular\"\n     }\n   }\n   aad = {"
      },
      {
        "filename": "terraform/blue/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -18,6 +18,7 @@ variable \"aks\" {\n       })\n       user = object({\n         node_count = number\n+        priority   = string\n       })\n     })\n     aad = object({"
      },
      {
        "filename": "terraform/green/aks/main.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -167,9 +167,17 @@ resource \"azurerm_kubernetes_cluster_node_pool\" \"user\" {\n   vm_size               = local.aks.default.vm_size\n   availability_zones    = [each.key]\n   node_count            = var.aks.node_pool.user.node_count\n+  priority              = var.aks.node_pool.user.priority\n   os_disk_size_gb       = local.aks.default.os_disk_size_gb\n   os_disk_type          = local.aks.default.os_disk_type\n   os_sku                = local.aks.default.os_sku\n+\n+  lifecycle {\n+    ignore_changes = [\n+      eviction_policy,\n+      node_taints,\n+    ]\n+  }\n }\n \n resource \"azurerm_role_assignment\" \"aks_metrics\" {"
      },
      {
        "filename": "terraform/green/aks/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -18,6 +18,7 @@ variable \"aks\" {\n       })\n       user = object({\n         node_count = number\n+        priority   = string\n       })\n     })\n     aad = object({"
      },
      {
        "filename": "terraform/green/dev.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -17,6 +17,7 @@ aks = {\n       // one pool per zone\n       // total nodes = node_count * 3 AZ\n       node_count = 1\n+      priority   = \"Spot\"\n     }\n   }\n   aad = {"
      },
      {
        "filename": "terraform/green/prod.tfvars",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -11,12 +11,13 @@ aks = {\n   }\n   node_pool = {\n     system = {\n-      node_count = 2\n+      node_count = 3\n     }\n     user = {\n       // one pool per zone\n       // total nodes = node_count * 3 AZ\n       node_count = 3\n+      priority   = \"Regular\"\n     }\n   }\n   aad = {"
      },
      {
        "filename": "terraform/green/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -18,6 +18,7 @@ variable \"aks\" {\n       })\n       user = object({\n         node_count = number\n+        priority   = string\n       })\n     })\n     aad = object({"
      },
      {
        "filename": "test/e2e/Makefile",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -3,7 +3,7 @@ SHELL=/bin/bash\n TF_VERSION := 1.1.7\n FLUX_REPO_URL := https://github.com/ToruMakabe/aks-anti-dry-iac.git\n # Make sure you pushed the branch under development if you modified /flux\n-FLUX_BRANCH := dev\n+FLUX_BRANCH := main\n \n # Before running this test, you must:\n # export GITHUB_TOKEN=your-token"
      },
      {
        "filename": "test/e2e/e2e_test.go",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -238,7 +238,7 @@ func setupAKS(t *testing.T, workingDir, execPath, varFile string) error {\n \trgName := state.Values.Outputs[\"resource_group_name\"].Value.(string)\n \tclusterName := state.Values.Outputs[\"aks_cluster_name\"].Value.(string)\n \n-\tbsScriptPath := \"../scripts/setup-flux.sh\"\n+\tbsScriptPath := \"../../flux/scripts/setup-dev-test.sh\"\n \tcmd := exec.Command(bsScriptPath, clusterSwitch, rgName, clusterName, *fluxURL, *fluxBranch)\n \tcmd.Env = os.Environ()\n \tvar outb, errb bytes.Buffer"
      },
      {
        "filename": "test/fixtures/blue/e2e.tfvars",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n # If you don't want to manage with files, choose other means such as environment variables.\n # https://www.terraform.io/docs/language/values/variables.html\n \n-prefix = \"yours\"\n+prefix = \"tomakabe\"\n suffix = \"e2e\"\n \n aks = {\n@@ -11,12 +11,13 @@ aks = {\n   }\n   node_pool = {\n     system = {\n-      node_count = 2\n+      node_count = 1\n     }\n     user = {\n       // one pool per zone\n       // total nodes = node_count * 3 AZ\n       node_count = 1\n+      priority   = \"Spot\"\n     }\n   }\n   aad = {"
      },
      {
        "filename": "test/fixtures/blue/integration.tfvars",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -11,12 +11,13 @@ aks = {\n   }\n   node_pool = {\n     system = {\n-      // one pool per zone\n-      // total nodes = node_count * 3 AZ\n-      node_count = 2\n+      node_count = 3\n     }\n     user = {\n+      // one pool per zone\n+      // total nodes = node_count * 3 AZ\n       node_count = 1\n+      priority   = \"Spot\"\n     }\n   }\n   aad = {"
      },
      {
        "filename": "test/fixtures/blue/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -18,6 +18,7 @@ variable \"aks\" {\n       })\n       user = object({\n         node_count = number\n+        priority   = string\n       })\n     })\n     aad = object({"
      },
      {
        "filename": "test/fixtures/green/e2e.tfvars",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n # If you don't want to manage with files, choose other means such as environment variables.\n # https://www.terraform.io/docs/language/values/variables.html\n \n-prefix = \"yours\"\n+prefix = \"tomakabe\"\n suffix = \"e2e\"\n \n aks = {\n@@ -11,12 +11,13 @@ aks = {\n   }\n   node_pool = {\n     system = {\n-      node_count = 2\n+      node_count = 1\n     }\n     user = {\n       // one pool per zone\n       // total nodes = node_count * 3 AZ\n       node_count = 1\n+      priority   = \"Spot\"\n     }\n   }\n   aad = {"
      },
      {
        "filename": "test/fixtures/green/integration.tfvars",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -11,12 +11,13 @@ aks = {\n   }\n   node_pool = {\n     system = {\n-      node_count = 2\n+      node_count = 3\n     }\n     user = {\n       // one pool per zone\n       // total nodes = node_count * 3 AZ\n       node_count = 1\n+      priority   = \"Spot\"\n     }\n   }\n   aad = {"
      },
      {
        "filename": "test/fixtures/green/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -18,6 +18,7 @@ variable \"aks\" {\n       })\n       user = object({\n         node_count = number\n+        priority   = string\n       })\n     })\n     aad = object({"
      },
      {
        "filename": "test/scripts/diff-flux.sh",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,5 +1,8 @@\n #!/usr/bin/env bash\n \n diff -ru ../../flux/apps/blue ../../flux/apps/green\n+diff -ru ../../flux/apps/blue-dev-test ../../flux/apps/green-dev-test\n diff -ru ../../flux/clusters/blue ../../flux/clusters/green --exclude=\"flux-system\"\n+diff -ru ../../flux/clusters/blue-dev-test ../../flux/clusters/green-dev-test --exclude=\"flux-system\"\n diff -ru ../../flux/infrastructure/blue ../../flux/infrastructure/green\n+diff -ru ../../flux/infrastructure/blue-dev-test ../../flux/infrastructure/green-dev-test"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/servers-tf/infrastructure/commit/cc9e50a3864511f9fb9f871293e6a6e7e2719d2c",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -29,8 +29,8 @@ module \"network\" {\n resource \"aws_dynamodb_table\" \"tf2_competitive_auth\" {\n     name = \"tf2_competitive_auth\"\n     hash_key = \"steam_id\"\n-    read_capacity  = 5\n-    write_capacity = 5\n+    read_capacity  = 1\n+    write_capacity = 1\n \n     attribute {\n         name = \"steam_id\""
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "dynamo_reduce_rw_capacity"],
    "notes": "Reduce the read and write capacity for DynamoDB from 5 to 1"
  },
  {
    "url": "https://github.com/chetanbothra/Terraform_AWS_Billing_Alert/commit/43b0d3b4cef0d3f57d4f5d4f1c7aeb9bfc3e362a",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "added",
        "patch": "@@ -0,0 +1,2 @@\n+# Created by .ignore support plugin (hsz.mobi)\n+.idea\n\\ No newline at end of file"
      },
      {
        "filename": "README.md",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "added",
        "patch": "@@ -0,0 +1,14 @@\n+Prerequisite\n+You would need\n+1. Make sure terraform is installed on your machine (https://learn.hashicorp.com/terraform/getting-started/install.html)\n+2. AWS Access Key ,Secret Key And region\n+3. Apply that to variable.tf file \n+\n+\n+We can create our account level alarm by first initializing our template.\n+\n+`terraform init . `\n+\n+Once our template is initialized we can apply our template to our AWS account.\n+\n+`terraform apply , `\n\\ No newline at end of file"
      },
      {
        "filename": "provider.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+provider \"aws\" {\n+  access_key = \"${var.accesskey}\"\n+  secret_key = \"${var.secretkey}\"\n+  region = \"${var.region}\"\n+}"
      },
      {
        "filename": "servicebudgets.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+resource \"aws_budgets_budget\" \"budget\" {\n+  name              = \"${var.name}\"\n+  budget_type       = \"COST\"\n+  limit_amount      = \"${var.limitamount}\"\n+  limit_unit        = \"USD\"\n+  cost_types{\n+    include_recurring = true\n+  }\n+  time_period_start = \"2020-01-01_00:00\"\n+  time_unit         = \"MONTHLY\"\n+  notification {\n+    comparison_operator        = \"GREATER_THAN\"\n+    threshold                  = \"${var.threshold}\"\n+    threshold_type             = \"PERCENTAGE\"\n+    notification_type          = \"ACTUAL\"\n+    subscriber_email_addresses = [\"${var.email}\"]\n+  }\n+}\n+\n+\n+\n+"
      },
      {
        "filename": "variable.tf",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "status": "added",
        "patch": "@@ -0,0 +1,50 @@\n+variable \"accesskey\" {\n+    type = \"string\"\n+    default = \"<AWS_ACCESS_KEY_HERE>\"\n+}\n+\n+variable \"secretkey\" {\n+   type = \"string\"\n+   default =\"<AWS_SECRET_KEY_HERE>\"\n+}\n+\n+variable \"region\" {\n+    type = \"string\"\n+    default = \"<AWS_REGION_HERE>\"\n+}\n+\n+variable \"name\" {\n+    type = \"string\"\n+    description = \"Enter name of your account\"  \n+}\n+variable \"threshold\" {\n+    type = \"string\"\n+    description = \"pass the percentage threshold to get alarms\"  \n+}\n+\n+variable \"email\" {\n+    type = \"string\"\n+    description = \"Enter email to get notification\"\n+  \n+}\n+\n+variable \"limitamount\" {\n+    escription = \"enter value of limit amount USD (eg. 1 , 2 , 50 ,100) \"\n+\n+}\n+/*\n+variable \"timeunit\" {\n+    type = \"string\"\n+    description = \"Enter time_unit (eg .  MONTHLY, QUARTERLY, ANNUALLY ) \"\n+  \n+}\n+*/\n+\n+\n+\n+\n+\n+\n+\n+\n+"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/poseidon/terraform-azure-kubernetes/commit/633eb938742a43be09612b944c29aaaf70dac119",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -36,13 +36,13 @@ variable \"worker_count\" {\n \n variable \"controller_type\" {\n   type        = string\n-  default     = \"Standard_DS1_v2\"\n+  default     = \"Standard_B2s\"\n   description = \"Machine type for controllers (see `az vm list-skus --location centralus`)\"\n }\n \n variable \"worker_type\" {\n   type        = string\n-  default     = \"Standard_F1\"\n+  default     = \"Standard_DS1_v2\"\n   description = \"Machine type for workers (see `az vm list-skus --location centralus`)\"\n }\n "
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/mozilla-platform-ops/devservices-aws/commit/ebb4040f6ad47d3e41c5ddf2cdceac3b3a8abead",
    "files": [
      {
        "filename": "hgmo/iam-roles.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -321,3 +321,25 @@ data \"aws_iam_policy_document\" \"s3_hg_events_usw2\" {\n         }\n     }\n }\n+\n+data \"aws_iam_policy_document\" \"s3_hg_backups\" {\n+    # Grant bundler user access to upload objects.\n+    statement = {\n+        effect = \"Allow\"\n+        actions = [\n+            \"s3:GetObject\",\n+            \"s3:ListBucket\",\n+            \"s3:PutObject\",\n+        ]\n+        resources = [\n+            \"${aws_s3_bucket.hg_backups.arn}\",\n+            \"${aws_s3_bucket.hg_backups.arn}/*\",\n+        ]\n+        principals {\n+            type = \"AWS\"\n+            identifiers = [\n+                \"${aws_iam_user.hgbundler.arn}\",\n+            ]\n+        }\n+    }\n+}"
      },
      {
        "filename": "hgmo/s3.tf",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -238,3 +238,29 @@ resource \"aws_s3_bucket_policy\" \"hg_events_usw2\" {\n     bucket = \"${aws_s3_bucket.hg_events_usw2.bucket}\"\n     policy = \"${data.aws_iam_policy_document.s3_hg_events_usw2.json}\"\n }\n+\n+# Bucket to hold backups of Mercurial repositories.\n+\n+resource \"aws_s3_bucket\" \"hg_backups\" {\n+    provider = \"aws.usw2\"\n+    bucket = \"moz-hg-backups\"\n+    acl = \"private\"\n+\n+    tags {\n+        App = \"hgmo\"\n+        Env = \"prod\"\n+        Owner = \"gps@mozilla.com\"\n+        Bugid = \"1435904\"\n+    }\n+\n+    logging = {\n+        target_bucket = \"moz-devservices-logging-us-west-2\"\n+        target_prefix = \"s3/hg-backups\"\n+    }\n+}\n+\n+resource \"aws_s3_bucket_policy\" \"hg_backups\" {\n+    provider = \"aws.usw2\"\n+    bucket = \"${aws_s3_bucket.hg_backups.bucket}\"\n+    policy = \"${data.aws_iam_policy_document.s3_hg_backups.json}\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "awareness",
      "storage"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit moves data into S3 buckets which are cheaper than the previous solution, but there is no underlying cost smell"
  },
  {
    "url": "https://github.com/poseidon/terraform-aws-kubernetes/commit/12f8972a912d97427fe0ef1b84becdc8a2993022",
    "files": [
      {
        "filename": "apiserver.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -28,7 +28,7 @@ resource \"aws_lb\" \"apiserver\" {\n resource \"aws_lb_listener\" \"apiserver-https\" {\n   load_balancer_arn = \"${aws_lb.apiserver.arn}\"\n   protocol          = \"TCP\"\n-  port              = \"443\"\n+  port              = \"6443\"\n \n   default_action {\n     type             = \"forward\"\n@@ -43,12 +43,12 @@ resource \"aws_lb_target_group\" \"controllers\" {\n   target_type = \"instance\"\n \n   protocol = \"TCP\"\n-  port     = 443\n+  port     = 6443\n \n   # TCP health check for apiserver\n   health_check {\n     protocol = \"TCP\"\n-    port     = 443\n+    port     = 6443\n \n     # NLBs required to use same healthy and unhealthy thresholds\n     healthy_threshold   = 3\n@@ -65,5 +65,5 @@ resource \"aws_lb_target_group_attachment\" \"controllers\" {\n \n   target_group_arn = \"${aws_lb_target_group.controllers.arn}\"\n   target_id        = \"${element(aws_instance.controllers.*.id, count.index)}\"\n-  port             = 443\n+  port             = 6443\n }"
      },
      {
        "filename": "bootkube.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n # Self-hosted Kubernetes assets (kubeconfig, manifests)\n module \"bootkube\" {\n-  source = \"git::https://github.com/poseidon/terraform-render-bootkube.git?ref=0e98e89e14a074768db13c4e050ed0c13319a0c1\"\n+  source = \"git::https://github.com/poseidon/terraform-render-bootkube.git?ref=2bcf61b2b5f6268fcf99e6b803165b08fd0b73c0\"\n \n   cluster_name          = \"${var.cluster_name}\"\n   api_servers           = [\"${format(\"%s.%s\", var.cluster_name, var.dns_zone)}\"]"
      },
      {
        "filename": "security.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -36,8 +36,8 @@ resource \"aws_security_group_rule\" \"controller-apiserver\" {\n \n   type        = \"ingress\"\n   protocol    = \"tcp\"\n-  from_port   = 443\n-  to_port     = 443\n+  from_port   = 6443\n+  to_port     = 6443\n   cidr_blocks = [\"0.0.0.0/0\"]\n }\n "
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/poseidon/terraform-aws-kubernetes/commit/ef0372d2684ef920c6e54cf8b9f80d87db90e636",
    "files": [
      {
        "filename": "nlb.tf",
        "additions": 31,
        "deletions": 7,
        "changes": 38,
        "status": "renamed",
        "patch": "@@ -7,15 +7,15 @@ resource \"aws_route53_record\" \"apiserver\" {\n \n   # AWS recommends their special \"alias\" records for ELBs\n   alias {\n-    name                   = \"${aws_lb.apiserver.dns_name}\"\n-    zone_id                = \"${aws_lb.apiserver.zone_id}\"\n+    name                   = \"${aws_lb.nlb.dns_name}\"\n+    zone_id                = \"${aws_lb.nlb.zone_id}\"\n     evaluate_target_health = true\n   }\n }\n \n-# Network Load Balancer for apiservers\n-resource \"aws_lb\" \"apiserver\" {\n-  name               = \"${var.cluster_name}-apiserver\"\n+# Network Load Balancer for apiservers and ingress\n+resource \"aws_lb\" \"nlb\" {\n+  name               = \"${var.cluster_name}-nlb\"\n   load_balancer_type = \"network\"\n   internal           = false\n \n@@ -24,9 +24,9 @@ resource \"aws_lb\" \"apiserver\" {\n   enable_cross_zone_load_balancing = true\n }\n \n-# Forward TCP traffic to controllers\n+# Forward TCP apiserver traffic to controllers\n resource \"aws_lb_listener\" \"apiserver-https\" {\n-  load_balancer_arn = \"${aws_lb.apiserver.arn}\"\n+  load_balancer_arn = \"${aws_lb.nlb.arn}\"\n   protocol          = \"TCP\"\n   port              = \"6443\"\n \n@@ -36,6 +36,30 @@ resource \"aws_lb_listener\" \"apiserver-https\" {\n   }\n }\n \n+# Forward HTTP ingress traffic to workers\n+resource \"aws_lb_listener\" \"ingress-http\" {\n+  load_balancer_arn = \"${aws_lb.nlb.arn}\"\n+  protocol          = \"TCP\"\n+  port              = 80\n+\n+  default_action {\n+    type             = \"forward\"\n+    target_group_arn = \"${module.workers.target_group_http_arn}\"\n+  }\n+}\n+\n+# Forward HTTPS ingress traffic to workers\n+resource \"aws_lb_listener\" \"ingress-https\" {\n+  load_balancer_arn = \"${aws_lb.nlb.arn}\"\n+  protocol          = \"TCP\"\n+  port              = 443\n+\n+  default_action {\n+    type             = \"forward\"\n+    target_group_arn = \"${module.workers.target_group_https_arn}\"\n+  }\n+}\n+\n # Target group of controllers\n resource \"aws_lb_target_group\" \"controllers\" {\n   name        = \"${var.cluster_name}-controllers\""
      },
      {
        "filename": "outputs.tf",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -1,8 +1,18 @@\n output \"ingress_dns_name\" {\n-  value       = \"${module.workers.ingress_dns_name}\"\n+  value       = \"${aws_lb.nlb.dns_name}\"\n   description = \"DNS name of the network load balancer for distributing traffic to Ingress controllers\"\n }\n \n+output \"target_group_http_arn\" {\n+  description = \"ARN of a target group of workers for HTTP traffic\"\n+  value = \"${module.workers.target_group_http_arn}\"\n+}\n+\n+output \"target_group_https_arn\" {\n+  description = \"ARN of a target group of workers for HTTPS traffic\"\n+  value = \"${module.workers.target_group_https_arn}\"\n+}\n+\n # Outputs for worker pools\n \n output \"vpc_id\" {"
      },
      {
        "filename": "workers/ingress.tf",
        "additions": 1,
        "deletions": 36,
        "changes": 37,
        "status": "modified",
        "patch": "@@ -1,39 +1,4 @@\n-# Network Load Balancer for Ingress\n-resource \"aws_lb\" \"ingress\" {\n-  name               = \"${var.name}-ingress\"\n-  load_balancer_type = \"network\"\n-  internal           = false\n-\n-  subnets = [\"${var.subnet_ids}\"]\n-\n-  enable_cross_zone_load_balancing = true\n-}\n-\n-# Forward HTTP traffic to workers\n-resource \"aws_lb_listener\" \"ingress-http\" {\n-  load_balancer_arn = \"${aws_lb.ingress.arn}\"\n-  protocol          = \"TCP\"\n-  port              = 80\n-\n-  default_action {\n-    type             = \"forward\"\n-    target_group_arn = \"${aws_lb_target_group.workers-http.arn}\"\n-  }\n-}\n-\n-# Forward HTTPS traffic to workers\n-resource \"aws_lb_listener\" \"ingress-https\" {\n-  load_balancer_arn = \"${aws_lb.ingress.arn}\"\n-  protocol          = \"TCP\"\n-  port              = 443\n-\n-  default_action {\n-    type             = \"forward\"\n-    target_group_arn = \"${aws_lb_target_group.workers-https.arn}\"\n-  }\n-}\n-\n-# Network Load Balancer target groups of instances\n+# Target groups of instances for use with load balancers\n \n resource \"aws_lb_target_group\" \"workers-http\" {\n   name        = \"${var.name}-workers-http\""
      },
      {
        "filename": "workers/outputs.tf",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -1,4 +1,9 @@\n-output \"ingress_dns_name\" {\n-  value       = \"${aws_lb.ingress.dns_name}\"\n-  description = \"DNS name of the network load balancer for distributing traffic to Ingress controllers\"\n+output \"target_group_http_arn\" {\n+  description = \"ARN of a target group of workers for HTTP traffic\"\n+  value = \"${aws_lb_target_group.workers-http.arn}\"\n+}\n+\n+output \"target_group_https_arn\" {\n+  description = \"ARN of a target group of workers for HTTPS traffic\"\n+  value = \"${aws_lb_target_group.workers-https.arn}\"\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "cluster"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/poseidon/terraform-aws-kubernetes/commit/e09126b45746f1c967d1990fa04ce781a0478c6d",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -31,13 +31,13 @@ variable \"worker_count\" {\n \n variable \"controller_type\" {\n   type        = \"string\"\n-  default     = \"t2.small\"\n+  default     = \"t3.small\"\n   description = \"EC2 instance type for controllers\"\n }\n \n variable \"worker_type\" {\n   type        = \"string\"\n-  default     = \"t2.small\"\n+  default     = \"t3.small\"\n   description = \"EC2 instance type for workers\"\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from t2.small to t3.small"
  },
  {
    "url": "https://github.com/paperphyte/terraform-drone/commit/79f4b7c2cf3ad2d1a6d2646eaf27a08fd2611d07",
    "files": [
      {
        "filename": "main.tf",
        "additions": 26,
        "deletions": 1,
        "changes": 27,
        "status": "modified",
        "patch": "@@ -5,7 +5,9 @@ locals {\n   subnet_id_2                        = \"${module.network.subnet_id_2}\"\n   vpc_id                             = \"${module.network.vpc_id}\"\n   ci_server_app_security_group_id    = \"${module.ci_server.ci_server_security_group_id}\"\n-  cluster_instance_security_group_id = \"${module.ci_ecs_cluster.cluster_instance_security_group_id}\"\n+  cluster_instance_security_group_id = \"${module.ci_ecs_cluster.instance_security_group_id}\"\n+  cluster_ami_image_id               = \"${module.ci_ecs_cluster.ami_image_id}\"\n+  cluster_iam_instance_profile       = \"${module.ci_ecs_cluster.iam_instance_profile}\"\n   load_balancer_security_group_id    = \"${module.load_balancer.load_balancer_security_group_id}\"\n   server_log_group_arn               = \"${module.ci_server.drone_server_log_group_arn}\"\n   agent_log_group_arn                = \"${module.build_agent.drone_agent_log_group_arn}\"\n@@ -71,6 +73,29 @@ module \"ci_ecs_cluster\" {\n   ip_access_whitelist  = \"${var.ip_access_whitelist}\"\n }\n \n+module \"ci_ecs_cluster_spotfleet\" {\n+  source                             = \"./modules/spotfleet\"\n+  cluster_spot_instance_enabled      = \"${var.cluster_spot_instance_enabled}\"\n+  server_log_group_arn               = \"${local.server_log_group_arn}\"\n+  agent_log_group_arn                = \"${local.agent_log_group_arn}\"\n+  subnet_id_1                        = \"${local.subnet_id_1}\"\n+  subnet_id_2                        = \"${local.subnet_id_2}\"\n+  keypair_name                       = \"${local.keypair_name}\"\n+  cluster_instance_security_group_id = \"${local.cluster_instance_security_group_id}\"\n+  cluster_ami_image_id               = \"${local.cluster_ami_image_id}\"\n+  cluster_name                       = \"${local.cluster_name}\"\n+  cluster_iam_instance_profile       = \"${local.cluster_iam_instance_profile}\"\n+  ci_sub_domain                      = \"${var.ci_sub_domain}\"\n+  root_domain                        = \"${var.root_domain}\"\n+  instance_type                      = \"${var.ecs_cluster_instance_type}\"\n+  ec2_volume_size                    = \"${var.ec2_volume_size}\"\n+\n+  target_capacity     = \"${var.spot_fleet_target_capacity}\"\n+  bid_price           = \"${var.spot_fleet_bid_price}\"\n+  allocation_strategy = \"${var.spot_fleet_allocation_strategy}\"\n+  valid_until         = \"${var.spot_fleet_valid_until}\"\n+}\n+\n module \"load_balancer\" {\n   source              = \"./modules/lb\"\n   vpc_id              = \"${local.vpc_id}\""
      },
      {
        "filename": "modules/cluster/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -62,7 +62,7 @@ resource \"aws_launch_configuration\" \"ci_server_app\" {\n   }\n \n   root_block_device {\n-    volume_size = \"100\"\n+    volume_size = \"${var.ec2_volume_size}\"\n   }\n }\n "
      },
      {
        "filename": "modules/cluster/outputs.tf",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n-output \"cluster_instance_security_group_id\" {\n+output \"instance_security_group_id\" {\n   value       = \"${aws_security_group.ci_server_ecs_instance.id}\"\n   description = \"Security Group ID of cluster instances\"\n }\n@@ -12,3 +12,13 @@ output \"name\" {\n   value       = \"${aws_ecs_cluster.ci_server.name}\"\n   description = \"Name for cluster\"\n }\n+\n+output \"ami_image_id\" {\n+  value       = \"${data.aws_ami.amazon_linux_2.image_id}\"\n+  description = \"Image ID for ec2 cluster instances\"\n+}\n+\n+output \"iam_instance_profile\" {\n+  value       = \"${aws_iam_instance_profile.ci_server.name}\"\n+  description = \"Instance Profile name of cluster ec2 instances\"\n+}"
      },
      {
        "filename": "modules/cluster/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -60,3 +60,8 @@ variable \"ip_access_whitelist\" {\n   description = \"White-list of who can access the ci server\"\n   type        = \"list\"\n }\n+\n+variable \"ec2_volume_size\" {\n+  default     = \"100\"\n+  description = \"Size of ec2 disk in GB\"\n+}"
      },
      {
        "filename": "modules/spotfleet/main.tf",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "status": "added",
        "patch": "@@ -0,0 +1,91 @@\n+locals {\n+  sub_domain                         = \"${var.ci_sub_domain}\"\n+  root_domain                        = \"${var.root_domain}\"\n+  subnet_id_1                        = \"${var.subnet_id_1}\"\n+  subnet_id_2                        = \"${var.subnet_id_2}\"\n+  server_log_group_arn               = \"${var.server_log_group_arn}\"\n+  agent_log_group_arn                = \"${var.agent_log_group_arn}\"\n+  keypair_name                       = \"${var.keypair_name}\"\n+  cluster_ami_image_id               = \"${var.cluster_ami_image_id}\"\n+  cluster_iam_instance_profile       = \"${var.cluster_iam_instance_profile}\"\n+  cluster_instance_security_group_id = \"${var.cluster_instance_security_group_id}\"\n+  cluster_name                       = \"${var.cluster_name}\"\n+}\n+\n+data \"template_file\" \"spotfleet_profile\" {\n+  count    = \"${var.cluster_spot_instance_enabled}\"\n+  template = \"${file(\"${path.module}/templates/spot-fleet.json\")}\"\n+\n+  vars {\n+    server_log_group_arn = \"${local.server_log_group_arn}\"\n+    agent_log_group_arn  = \"${local.agent_log_group_arn}\"\n+  }\n+}\n+\n+resource \"aws_iam_role\" \"spotfleet\" {\n+  count = \"${var.cluster_spot_instance_enabled}\"\n+  name  = \"ecs-ec2-spotfleet-role\"\n+  tags  = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+\n+  assume_role_policy = <<EOF\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Sid\": \"\",\n+      \"Effect\": \"Allow\",\n+      \"Principal\": {\n+        \"Service\": [\"ec2.amazonaws.com\", \"spotfleet.amazonaws.com\"]\n+      },\n+      \"Action\": \"sts:AssumeRole\"\n+    }\n+  ]\n+}\n+EOF\n+}\n+\n+resource \"aws_iam_role_policy\" \"spotfleet\" {\n+  count  = \"${var.cluster_spot_instance_enabled}\"\n+  name   = \"drone-fleet-role\"\n+  role   = \"${aws_iam_role.spotfleet.name}\"\n+  policy = \"${data.template_file.spotfleet_profile.rendered}\"\n+}\n+\n+data \"template_file\" \"cloud_config\" {\n+  count    = \"${var.cluster_spot_instance_enabled}\"\n+  template = \"${file(\"${path.module}/templates/cloud-config.yml\")}\"\n+\n+  vars {\n+    ecs_cluster_name = \"${local.cluster_name}\"\n+  }\n+}\n+\n+resource \"aws_spot_fleet_request\" \"main\" {\n+  count                               = \"${var.cluster_spot_instance_enabled}\"\n+  iam_fleet_role                      = \"${aws_iam_role.spotfleet.arn}\"\n+  spot_price                          = \"${var.bid_price}\"\n+  allocation_strategy                 = \"${var.allocation_strategy}\"\n+  target_capacity                     = \"${var.target_capacity}\"\n+  terminate_instances_with_expiration = true\n+  valid_until                         = \"${var.valid_until}\"\n+\n+  launch_specification {\n+    tags                 = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+    key_name             = \"${local.keypair_name}\"\n+    ami                  = \"${local.cluster_ami_image_id}\"\n+    iam_instance_profile = \"${local.cluster_iam_instance_profile}\"\n+    subnet_id            = \"${local.subnet_id_1},${local.subnet_id_2}\"\n+\n+    instance_type = \"${var.instance_type}\"\n+\n+    root_block_device {\n+      volume_size = \"${var.ec2_volume_size}\"\n+    }\n+\n+    vpc_security_group_ids = [\n+      \"${local.cluster_instance_security_group_id}\",\n+    ]\n+\n+    user_data = \"${data.template_file.cloud_config.rendered}\"\n+  }\n+}"
      },
      {
        "filename": "modules/spotfleet/output.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+"
      },
      {
        "filename": "modules/spotfleet/templates/cloud-config.yml",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+#cloud-config\n+\n+bootcmd:\n+  - mkdir -p /etc/ecs\n+  - echo 'ECS_CLUSTER=${ecs_cluster_name}' >> /etc/ecs/ecs.config"
      },
      {
        "filename": "modules/spotfleet/templates/spot-fleet.json",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+{\n+    \"Version\": \"2012-10-17\",\n+    \"Statement\": [\n+        {\n+            \"Effect\": \"Allow\",\n+            \"Action\": [\n+                \"ec2:DescribeImages\",\n+                \"ec2:DescribeSubnets\",\n+                \"ec2:RequestSpotInstances\",\n+                \"ec2:TerminateInstances\",\n+                \"ec2:DescribeInstanceStatus\",\n+                \"iam:PassRole\"\n+            ],\n+            \"Resource\": [\n+                \"*\"\n+            ]\n+        }\n+    ]\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/spotfleet/variables.tf",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "status": "added",
        "patch": "@@ -0,0 +1,72 @@\n+variable \"ec2_volume_size\" {\n+  default     = \"100\"\n+  description = \"Size of ec2 disk in GB\"\n+}\n+\n+variable \"target_capacity\" {\n+  description = \"Target number of spot instances to seed the cluster with\"\n+}\n+\n+variable \"bid_price\" {\n+  description = \"Bid price for cluster resources\"\n+}\n+\n+variable \"allocation_strategy\" {\n+  description = \"Strategy for seeding instances cross pools. Config only support one pool for now.\"\n+}\n+\n+variable \"valid_until\" {\n+  description = \"Amount of time a spot fleet bid should stay active\"\n+}\n+\n+variable \"cluster_ami_image_id\" {\n+  description = \"Image ID for ec2 cluster instances\"\n+}\n+\n+variable \"cluster_iam_instance_profile\" {\n+  description = \"Size of ec2 disk in GB\"\n+}\n+\n+variable \"cluster_instance_security_group_id\" {\n+  description = \"Security group of cluster instances\"\n+}\n+\n+variable \"server_log_group_arn\" {\n+  description = \"Log group for server\"\n+}\n+\n+variable \"agent_log_group_arn\" {\n+  description = \"Log Group for Agent\"\n+}\n+\n+variable \"subnet_id_1\" {\n+  description = \"id for subnet\"\n+}\n+\n+variable \"subnet_id_2\" {\n+  description = \"id for subnet\"\n+}\n+\n+variable \"keypair_name\" {\n+  description = \"Name of A pre-existing keypair\"\n+}\n+\n+variable \"root_domain\" {\n+  description = \"Pre-existing Route53 Hosted Zone domain\"\n+}\n+\n+variable \"ci_sub_domain\" {\n+  description = \"Sub part of domain for ci\"\n+}\n+\n+variable \"instance_type\" {\n+  description = \"EC2 Instance Type.\"\n+}\n+\n+variable \"cluster_name\" {\n+  description = \"Name of the cluster\"\n+}\n+\n+variable \"cluster_spot_instance_enabled\" {\n+  description = \"Seeding using spot instances enabled\"\n+}"
      },
      {
        "filename": "variables.tf",
        "additions": 33,
        "deletions": 3,
        "changes": 36,
        "status": "modified",
        "patch": "@@ -63,12 +63,12 @@ variable \"ecs_cluster_instance_type\" {\n \n variable \"ecs_min_instances_count\" {\n   description = \"Min container instances running\"\n-  default     = \"2\"\n+  default     = \"1\"\n }\n \n variable \"ecs_max_instances_count\" {\n   description = \"Max container instances running.\"\n-  default     = \"2\"\n+  default     = \"1\"\n }\n \n variable \"ecs_optimized_ami\" {\n@@ -132,7 +132,7 @@ variable \"drone_agent_port\" {\n \n variable \"drone_agent_min_count\" {\n   description = \"Min drone agens running.\"\n-  default     = \"2\"\n+  default     = \"1\"\n }\n \n variable \"drone_agent_max_count\" {\n@@ -174,3 +174,33 @@ variable \"env_drone_logs_debug\" {\n variable \"env_drone_repo_filter\" {\n   description = \"whitliest repositories\"\n }\n+\n+variable \"ec2_volume_size\" {\n+  default     = \"100\"\n+  description = \"Size of ec2 disk in GB\"\n+}\n+\n+variable \"cluster_spot_instance_enabled\" {\n+  default     = \"1\"\n+  description = \"Seed Cluster with spot priced ec2 instances 0/1 true/false\"\n+}\n+\n+variable \"spot_fleet_target_capacity\" {\n+  default     = \"1\"\n+  description = \"Target number of spot instances to seed the cluster with\"\n+}\n+\n+variable \"spot_fleet_bid_price\" {\n+  default     = \"0.007\"\n+  description = \"Bid price for cluster resources\"\n+}\n+\n+variable \"spot_fleet_allocation_strategy\" {\n+  default     = \"diversified\"\n+  description = \"Strategy for seeding instances cross pools. Config only support one pool for now.\"\n+}\n+\n+variable \"spot_fleet_valid_until\" {\n+  description = \"Amount of time a spot fleet bid should stay active\"\n+  default     = \"2022-02-22T02:02:02Z\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "storage"
    ],
    "codes": ["aws", "use_spot_fleet"],
    "notes": "Use AWS Spot Fleet"
  },
  {
    "url": "https://github.com/paperphyte/terraform-drone/commit/f62bfebb54530c9466cfdb21336794f24bcd63a7",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -8,3 +8,4 @@\n # .tfvars files\n *.tfvars\n *.tfvars.json\n+*.zip"
      },
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -5,7 +5,6 @@ required to run Drone CI/CD on AWS, including:\n \n  * Virtual Private Cloud (VPC)\n  * SSL certificate using Amazon Certificate Manager (ACM)\n- * Application Load Balancer (ALB)\n  * Domain name using AWS Route53 which points to ALB\n  * AWS Elastic Cloud Service (ECS) and AWS Fargate running Drone Server\n  * AWS Spot Fleet for EC2 instances in ECS\n@@ -66,10 +65,7 @@ WHEN imported remember to add _public_key_ to terraform.tfstate.\n | default\\_ttl | Default ttl for domain records | string | `\"300\"` | no |\n | drone\\_agent\\_max\\_count | Max drone agents running. | string | `\"2\"` | no |\n | drone\\_agent\\_min\\_count | Min drone agens running. | string | `\"1\"` | no |\n-| drone\\_agent\\_port | Port of drone agent. | string | `\"80\"` | no |\n-| drone\\_server\\_port | Port of Drone Server | string | `\"80\"` | no |\n | drone\\_version | Ci Drone version. | string | `\"1.0.0-rc.5\"` | no |\n-| ec2\\_volume\\_size | Size of ec2 disk in GB | string | `\"100\"` | no |\n | ecs\\_cluster\\_instance\\_type | EC2 Instance Type. | string | `\"t3.micro\"` | no |\n | ecs\\_container\\_cpu | Requested ecs container CPU | string | `\"2000\"` | no |\n | ecs\\_container\\_memory | Requested ecs container memory | string | `\"768\"` | no |\n@@ -94,6 +90,7 @@ WHEN imported remember to add _public_key_ to terraform.tfstate.\n | spot\\_fleet\\_target\\_capacity | Target number of spot instances to seed the cluster with | string | `\"1\"` | no |\n | spot\\_fleet\\_valid\\_until | Amount of time a spot fleet bid should stay active | string | `\"2022-02-22T02:02:02Z\"` | no |\n \n+\n ## Outputs\n \n | Name | Description |"
      },
      {
        "filename": "main.tf",
        "additions": 125,
        "deletions": 127,
        "changes": 252,
        "status": "modified",
        "patch": "@@ -1,26 +1,27 @@\n locals {\n-  keypair_name                       = \"${aws_key_pair.ci_tool.key_name}\"\n-  rpc_secret                         = \"${random_string.drone_rpc_secret.result}\"\n-  subnet_id_1                        = \"${module.network.subnet_id_1}\"\n-  subnet_id_2                        = \"${module.network.subnet_id_2}\"\n-  vpc_id                             = \"${module.network.vpc_id}\"\n-  ci_server_app_security_group_id    = \"${module.ci_server.ci_server_security_group_id}\"\n-  cluster_instance_security_group_id = \"${module.ci_ecs_cluster.instance_security_group_id}\"\n-  cluster_ami_image_id               = \"${module.ci_ecs_cluster.ami_image_id}\"\n-  cluster_iam_instance_profile       = \"${module.ci_ecs_cluster.iam_instance_profile}\"\n-  load_balancer_security_group_id    = \"${module.load_balancer.load_balancer_security_group_id}\"\n-  server_log_group_arn               = \"${module.ci_server.drone_server_log_group_arn}\"\n-  agent_log_group_arn                = \"${module.build_agent.drone_agent_log_group_arn}\"\n-  rpc_server_url                     = \"${module.ci_server.rpc_server_url}\"\n-  cluster_id                         = \"${module.ci_ecs_cluster.id}\"\n-  cluster_name                       = \"${module.ci_ecs_cluster.name}\"\n-  target_group_arn                   = \"${module.load_balancer.target_group_arn}\"\n-  db_host_name                       = \"${module.ci_db.address}\"\n-  db_user                            = \"${module.ci_db.user}\"\n-  db_password                        = \"${module.ci_db.root_password}\"\n-  db_engine                          = \"${module.ci_db.engine}\"\n-  db_port                            = \"${module.ci_db.port}\"\n-  cluster_instance_user_data         = \"${module.ci_ecs_cluster.instance_user_data}\"\n+  keypair_name                       = aws_key_pair.ci_tool.key_name\n+  rpc_secret                         = random_string.drone_rpc_secret.result\n+  subnet_id_1                        = module.network.subnet_id_1\n+  subnet_id_2                        = module.network.subnet_id_2\n+  vpc_id                             = module.network.vpc_id\n+  vpc_arn                            = module.network.vpc_arn\n+  ci_server_app_security_group_id    = module.ci_server.ci_server_security_group_id\n+  cluster_instance_security_group_id = module.ci_ecs_cluster.instance_security_group_id\n+  cluster_ami_image_id               = module.ci_ecs_cluster.ami_image_id\n+  cluster_iam_instance_profile       = module.ci_ecs_cluster.iam_instance_profile\n+  server_log_group_arn               = module.ci_server.drone_server_log_group_arn\n+  agent_log_group_arn                = module.build_agent.drone_agent_log_group_arn\n+  rpc_server_url                     = module.ci_server.rpc_server_url\n+  cluster_id                         = module.ci_ecs_cluster.id\n+  cluster_name                       = module.ci_ecs_cluster.name\n+  cluster_arn                        = module.ci_ecs_cluster.arn\n+  db_host_name                       = module.ci_db.address\n+  db_user                            = module.ci_db.user\n+  db_password                        = module.ci_db.root_password\n+  db_engine                          = module.ci_db.engine\n+  db_port                            = module.ci_db.port\n+  cluster_instance_user_data         = module.ci_ecs_cluster.instance_user_data\n+  ci_server_service_name             = module.ci_server.service_name\n }\n \n resource \"random_string\" \"drone_rpc_secret\" {\n@@ -30,134 +31,131 @@ resource \"random_string\" \"drone_rpc_secret\" {\n \n resource \"aws_key_pair\" \"ci_tool\" {\n   key_name   = \"ci-tools\"\n-  public_key = \"${var.keypair_public_key}\"\n+  public_key = var.keypair_public_key\n }\n \n module \"network\" {\n   source        = \"./modules/network\"\n-  aws_region    = \"${var.aws_region}\"\n-  ci_sub_domain = \"${var.ci_sub_domain}\"\n-  root_domain   = \"${var.root_domain}\"\n+  aws_region    = var.aws_region\n+  ci_sub_domain = var.ci_sub_domain\n+  root_domain   = var.root_domain\n }\n \n module \"ci_db\" {\n   source                          = \"./modules/database\"\n-  vpc_id                          = \"${local.vpc_id}\"\n-  subnet_id_1                     = \"${local.subnet_id_1}\"\n-  subnet_id_2                     = \"${local.subnet_id_2}\"\n-  ci_server_app_security_group_id = \"${local.ci_server_app_security_group_id}\"\n-  db_identifier                   = \"${var.db_identifier}\"\n-  db_storage                      = \"${var.db_storage_size}\"\n-  db_instance_class               = \"${var.db_instance_type}\"\n-  db_name                         = \"${var.db_name}\"\n-  db_username                     = \"${var.db_user}\"\n-  ci_sub_domain                   = \"${var.ci_sub_domain}\"\n-  root_domain                     = \"${var.root_domain}\"\n+  vpc_id                          = local.vpc_id\n+  subnet_id_1                     = local.subnet_id_1\n+  subnet_id_2                     = local.subnet_id_2\n+  ci_server_app_security_group_id = local.ci_server_app_security_group_id\n+  db_identifier                   = var.db_identifier\n+  db_storage                      = var.db_storage_size\n+  db_instance_class               = var.db_instance_type\n+  db_name                         = var.db_name\n+  db_username                     = var.db_user\n+  ci_sub_domain                   = var.ci_sub_domain\n+  root_domain                     = var.root_domain\n }\n \n module \"ci_ecs_cluster\" {\n   source               = \"./modules/cluster\"\n-  server_log_group_arn = \"${local.server_log_group_arn}\"\n-  agent_log_group_arn  = \"${local.agent_log_group_arn}\"\n-  vpc_id               = \"${local.vpc_id}\"\n-  subnet_id_1          = \"${local.subnet_id_1}\"\n-  subnet_id_2          = \"${local.subnet_id_2}\"\n-  keypair_name         = \"${local.keypair_name}\"\n-  ci_sub_domain        = \"${var.ci_sub_domain}\"\n-  root_domain          = \"${var.root_domain}\"\n-  min_instances_count  = \"${var.ecs_min_instances_count}\"\n-  max_instances_count  = \"${var.ecs_max_instances_count}\"\n-  ecs_optimized_ami    = \"${var.ecs_optimized_ami}\"\n-  aws_region           = \"${var.aws_region}\"\n-  instance_type        = \"${var.ecs_cluster_instance_type}\"\n-  ecs_optimized_ami    = \"${var.ecs_optimized_ami}\"\n-  ip_access_whitelist  = \"${var.ip_access_whitelist}\"\n+  server_log_group_arn = local.server_log_group_arn\n+  agent_log_group_arn  = local.agent_log_group_arn\n+  vpc_id               = local.vpc_id\n+  subnet_id_1          = local.subnet_id_1\n+  subnet_id_2          = local.subnet_id_2\n+  keypair_name         = local.keypair_name\n+  ci_sub_domain        = var.ci_sub_domain\n+  root_domain          = var.root_domain\n+  min_instances_count  = var.ecs_min_instances_count\n+  max_instances_count  = var.ecs_max_instances_count\n+  ecs_optimized_ami    = var.ecs_optimized_ami\n+  aws_region           = var.aws_region\n+  instance_type        = var.ecs_cluster_instance_type\n+  ip_access_whitelist  = var.ip_access_whitelist\n }\n \n module \"ci_ecs_cluster_spotfleet\" {\n   source                             = \"./modules/spotfleet\"\n-  cluster_spot_instance_enabled      = \"${var.cluster_spot_instance_enabled}\"\n-  server_log_group_arn               = \"${local.server_log_group_arn}\"\n-  agent_log_group_arn                = \"${local.agent_log_group_arn}\"\n-  subnet_id_1                        = \"${local.subnet_id_1}\"\n-  subnet_id_2                        = \"${local.subnet_id_2}\"\n-  keypair_name                       = \"${local.keypair_name}\"\n-  cluster_instance_security_group_id = \"${local.cluster_instance_security_group_id}\"\n-  cluster_ami_image_id               = \"${local.cluster_ami_image_id}\"\n-  cluster_name                       = \"${local.cluster_name}\"\n-  cluster_iam_instance_profile       = \"${local.cluster_iam_instance_profile}\"\n-  cluster_instance_user_data         = \"${local.cluster_instance_user_data}\"\n-  ci_sub_domain                      = \"${var.ci_sub_domain}\"\n-  root_domain                        = \"${var.root_domain}\"\n-  instance_type                      = \"${var.ecs_cluster_instance_type}\"\n-  ec2_volume_size                    = \"${var.ec2_volume_size}\"\n+  cluster_spot_instance_enabled      = var.cluster_spot_instance_enabled\n+  server_log_group_arn               = local.server_log_group_arn\n+  agent_log_group_arn                = local.agent_log_group_arn\n+  subnet_id_1                        = local.subnet_id_1\n+  subnet_id_2                        = local.subnet_id_2\n+  keypair_name                       = local.keypair_name\n+  cluster_instance_security_group_id = local.cluster_instance_security_group_id\n+  cluster_ami_image_id               = local.cluster_ami_image_id\n+  cluster_name                       = local.cluster_name\n+  cluster_iam_instance_profile       = local.cluster_iam_instance_profile\n+  cluster_instance_user_data         = local.cluster_instance_user_data\n+  ci_sub_domain                      = var.ci_sub_domain\n+  root_domain                        = var.root_domain\n+  instance_type                      = var.ecs_cluster_instance_type\n+  ec2_volume_size                    = var.ec2_volume_size\n \n-  target_capacity     = \"${var.spot_fleet_target_capacity}\"\n-  bid_price           = \"${var.spot_fleet_bid_price}\"\n-  allocation_strategy = \"${var.spot_fleet_allocation_strategy}\"\n-  valid_until         = \"${var.spot_fleet_valid_until}\"\n-}\n-\n-module \"load_balancer\" {\n-  source              = \"./modules/lb\"\n-  vpc_id              = \"${local.vpc_id}\"\n-  subnet_id_1         = \"${local.subnet_id_1}\"\n-  subnet_id_2         = \"${local.subnet_id_2}\"\n-  ci_sub_domain       = \"${var.ci_sub_domain}\"\n-  root_domain         = \"${var.root_domain}\"\n-  root_domain_zone_id = \"${var.root_domain_zone_id}\"\n-  target_port         = \"${var.drone_server_port}\"\n-  ip_access_whitelist = \"${var.ip_access_whitelist}\"\n+  target_capacity     = var.spot_fleet_target_capacity\n+  bid_price           = var.spot_fleet_bid_price\n+  allocation_strategy = var.spot_fleet_allocation_strategy\n+  valid_until         = var.spot_fleet_valid_until\n }\n \n module \"build_agent\" {\n   source              = \"./modules/drone-agent\"\n-  rpc_server          = \"${local.rpc_server_url}\"\n-  rpc_secret          = \"${local.rpc_secret}\"\n-  cluster_id          = \"${local.cluster_id}\"\n-  cluster_name        = \"${local.cluster_name}\"\n-  ci_sub_domain       = \"${var.ci_sub_domain}\"\n-  root_domain         = \"${var.root_domain}\"\n-  aws_region          = \"${var.aws_region}\"\n-  app_version         = \"${var.drone_version}\"\n-  app_debug           = \"${var.env_drone_logs_debug}\"\n-  container_cpu       = \"${var.ecs_container_cpu}\"\n-  container_memory    = \"${var.ecs_container_memory}\"\n-  min_container_count = \"${var.drone_agent_min_count}\"\n-  max_container_count = \"${var.drone_agent_max_count}\"\n+  rpc_server          = local.rpc_server_url\n+  rpc_secret          = local.rpc_secret\n+  cluster_id          = local.cluster_id\n+  cluster_name        = local.cluster_name\n+  ci_sub_domain       = var.ci_sub_domain\n+  root_domain         = var.root_domain\n+  aws_region          = var.aws_region\n+  app_version         = var.drone_version\n+  app_debug           = var.env_drone_logs_debug\n+  container_cpu       = var.ecs_container_cpu\n+  container_memory    = var.ecs_container_memory\n+  min_container_count = var.drone_agent_min_count\n+  max_container_count = var.drone_agent_max_count\n }\n \n module \"ci_server\" {\n   source                             = \"./modules/drone-server\"\n-  db_host_name                       = \"${local.db_host_name}\"\n-  db_user                            = \"${local.db_user}\"\n-  db_password                        = \"${local.db_password}\"\n-  db_engine                          = \"${local.db_engine}\"\n-  db_port                            = \"${local.db_port}\"\n-  rpc_secret                         = \"${local.rpc_secret}\"\n-  agent_log_group_arn                = \"${local.agent_log_group_arn}\"\n-  cluster_name                       = \"${local.cluster_name}\"\n-  cluster_id                         = \"${local.cluster_id}\"\n-  target_group_arn                   = \"${local.target_group_arn}\"\n-  subnet_id_1                        = \"${local.subnet_id_1}\"\n-  subnet_id_2                        = \"${local.subnet_id_2}\"\n-  vpc_id                             = \"${local.vpc_id}\"\n-  cluster_instance_security_group_id = \"${local.cluster_instance_security_group_id}\"\n-  load_balancer_security_group_id    = \"${local.load_balancer_security_group_id}\"\n-  env_github_client                  = \"${var.env_github_client}\"\n-  env_github_secret                  = \"${var.env_github_secret}\"\n-  env_drone_admin                    = \"${var.env_drone_admin}\"\n-  env_drone_github_organization      = \"${var.env_drone_github_organization}\"\n-  env_drone_webhook_list             = \"${var.env_drone_webhook_list}\"\n-  env_drone_logs_debug               = \"${var.env_drone_logs_debug}\"\n-  env_drone_repo_filter              = \"${var.env_drone_repo_filter}\"\n-  fargate_task_cpu                   = \"${var.fargate_task_cpu}\"\n-  fargate_task_memory                = \"${var.fargate_task_memory}\"\n-  ci_sub_domain                      = \"${var.ci_sub_domain}\"\n-  root_domain                        = \"${var.root_domain}\"\n-  aws_region                         = \"${var.aws_region}\"\n-  app_version                        = \"${var.drone_version}\"\n-  app_debug                          = \"${var.env_drone_logs_debug}\"\n-  app_port                           = \"${var.drone_server_port}\"\n-  build_agent_port                   = \"${var.drone_agent_port}\"\n+  db_host_name                       = local.db_host_name\n+  db_user                            = local.db_user\n+  db_password                        = local.db_password\n+  db_engine                          = local.db_engine\n+  db_port                            = local.db_port\n+  rpc_secret                         = local.rpc_secret\n+  agent_log_group_arn                = local.agent_log_group_arn\n+  cluster_name                       = local.cluster_name\n+  cluster_id                         = local.cluster_id\n+  subnet_id_1                        = local.subnet_id_1\n+  subnet_id_2                        = local.subnet_id_2\n+  vpc_id                             = local.vpc_id\n+  cluster_instance_security_group_id = local.cluster_instance_security_group_id\n+  env_github_client                  = var.env_github_client\n+  env_github_secret                  = var.env_github_secret\n+  env_drone_admin                    = var.env_drone_admin\n+  env_drone_github_organization      = var.env_drone_github_organization\n+  env_drone_webhook_list             = var.env_drone_webhook_list\n+  env_drone_logs_debug               = var.env_drone_logs_debug\n+  env_drone_repo_filter              = var.env_drone_repo_filter\n+  fargate_task_cpu                   = var.fargate_task_cpu\n+  fargate_task_memory                = var.fargate_task_memory\n+  ci_sub_domain                      = var.ci_sub_domain\n+  root_domain                        = var.root_domain\n+  aws_region                         = var.aws_region\n+  app_version                        = var.drone_version\n+  app_debug                          = var.env_drone_logs_debug\n+  app_port                           = var.drone_server_port\n+  build_agent_port                   = var.drone_agent_port\n+  ip_access_whitelist                = var.ip_access_whitelist\n }\n+\n+module \"dns_update\" {\n+  source                 = \"./modules/dns-update\"\n+  cluster_arn            = local.cluster_arn\n+  ecs_service_name       = local.ci_server_service_name\n+  vpc_arn                = local.vpc_arn\n+  task_domain_name       = \"${var.ci_sub_domain}.${var.root_domain}\"\n+  route53_hosted_zone_id = var.root_domain_zone_id\n+  function_name          = var.update_dns_lambda_name\n+}\n+"
      },
      {
        "filename": "modules/cluster/main.tf",
        "additions": 49,
        "deletions": 61,
        "changes": 110,
        "status": "modified",
        "patch": "@@ -1,25 +1,25 @@\n locals {\n-  sub_domain           = \"${var.ci_sub_domain}\"\n-  root_domain          = \"${var.root_domain}\"\n-  subnet_id_1          = \"${var.subnet_id_1}\"\n-  subnet_id_2          = \"${var.subnet_id_2}\"\n-  server_log_group_arn = \"${var.server_log_group_arn}\"\n-  agent_log_group_arn  = \"${var.agent_log_group_arn}\"\n-  vpc_id               = \"${var.vpc_id}\"\n-  keypair_name         = \"${var.keypair_name}\"\n+  sub_domain           = var.ci_sub_domain\n+  root_domain          = var.root_domain\n+  subnet_id_1          = var.subnet_id_1\n+  subnet_id_2          = var.subnet_id_2\n+  server_log_group_arn = var.server_log_group_arn\n+  agent_log_group_arn  = var.agent_log_group_arn\n+  vpc_id               = var.vpc_id\n+  keypair_name         = var.keypair_name\n }\n \n resource \"aws_ecs_cluster\" \"ci_server\" {\n-  name = \"${var.cluster_name}\"\n+  name = var.cluster_name\n }\n \n resource \"aws_autoscaling_group\" \"ci_server_drone_agent\" {\n   name                 = \"ci-server-drone-agent\"\n-  vpc_zone_identifier  = [\"${local.subnet_id_1}\", \"${local.subnet_id_2}\"]\n-  min_size             = \"${var.min_instances_count}\"\n-  max_size             = \"${var.max_instances_count}\"\n-  desired_capacity     = \"${var.min_instances_count}\"\n-  launch_configuration = \"${aws_launch_configuration.ci_server_app.name}\"\n+  vpc_zone_identifier  = [local.subnet_id_1, local.subnet_id_2]\n+  min_size             = var.min_instances_count\n+  max_size             = var.max_instances_count\n+  desired_capacity     = var.min_instances_count\n+  launch_configuration = aws_launch_configuration.ci_server_app.name\n \n   tags = [\n     {\n@@ -30,50 +30,46 @@ resource \"aws_autoscaling_group\" \"ci_server_drone_agent\" {\n   ]\n }\n \n-data \"template_file\" \"cloud_config\" {\n-  template = \"${file(\"${path.module}/templates/cloud-config.yml\")}\"\n-\n-  vars {\n-    ecs_cluster_name = \"${aws_ecs_cluster.ci_server.name}\"\n-  }\n-}\n-\n data \"aws_ami\" \"amazon_linux_2\" {\n+  most_recent = true\n+  owners      = [\"amazon\"]\n+\n   filter {\n-    name   = \"image-id\"\n-    values = [\"${lookup(var.ecs_optimized_ami, var.aws_region)}\"]\n+    name   = \"name\"\n+    values = [\"amzn2-ami-ecs-hvm-2.0.*-x86_64-ebs\"]\n   }\n }\n \n resource \"aws_launch_configuration\" \"ci_server_app\" {\n   security_groups = [\n-    \"${aws_security_group.ci_server_ecs_instance.id}\",\n+    aws_security_group.ci_server_ecs_instance.id,\n   ]\n \n-  key_name                    = \"${local.keypair_name}\"\n-  image_id                    = \"${data.aws_ami.amazon_linux_2.id}\"\n-  instance_type               = \"${var.instance_type}\"\n-  iam_instance_profile        = \"${aws_iam_instance_profile.ci_server.name}\"\n-  user_data                   = \"${data.template_file.cloud_config.rendered}\"\n+  key_name             = local.keypair_name\n+  image_id             = data.aws_ami.amazon_linux_2.id\n+  instance_type        = var.instance_type\n+  iam_instance_profile = aws_iam_instance_profile.ci_server.name\n+  user_data            = templatefile(\"${path.module}/templates/cloud-config.yml\", { ecs_cluster_name = aws_ecs_cluster.ci_server.name })\n+\n   associate_public_ip_address = true\n \n   lifecycle {\n     create_before_destroy = true\n   }\n \n   root_block_device {\n-    volume_size = \"${var.ec2_volume_size}\"\n+    volume_size = var.ec2_volume_size\n   }\n }\n \n resource \"aws_iam_instance_profile\" \"ci_server\" {\n-  name = \"ecs-ec2-instprofile\"\n-  role = \"${aws_iam_role.drone_agent.name}\"\n+  role = aws_iam_role.drone_agent.name\n }\n \n resource \"aws_iam_role\" \"drone_agent\" {\n-  name = \"ecs-ec2-role\"\n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n \n   assume_role_policy = <<EOF\n {\n@@ -90,50 +86,42 @@ resource \"aws_iam_role\" \"drone_agent\" {\n   ]\n }\n EOF\n-}\n-\n-data \"template_file\" \"ec2_profile\" {\n-  template = \"${file(\"${path.module}/templates/cluster-instance.json\")}\"\n \n-  vars {\n-    server_log_group_arn = \"${local.server_log_group_arn}\"\n-    agent_log_group_arn  = \"${local.agent_log_group_arn}\"\n-  }\n }\n \n+\n resource \"aws_iam_role_policy\" \"ec2\" {\n-  name   = \"drone-ec2-role\"\n-  role   = \"${aws_iam_role.drone_agent.name}\"\n-  policy = \"${data.template_file.ec2_profile.rendered}\"\n+  role = aws_iam_role.drone_agent.name\n+  policy = templatefile(\"${path.module}/templates/cluster-instance.json\", { server_log_group_arn = local.server_log_group_arn, agent_log_group_arn = local.agent_log_group_arn })\n }\n \n resource \"aws_security_group\" \"ci_server_ecs_instance\" {\n   description = \"Restrict access to application instances\"\n-  vpc_id      = \"${local.vpc_id}\"\n-  name        = \"ci-server-ecs-instance-sg\"\n+  vpc_id = local.vpc_id\n+  name = \"ci-server-ecs-instance-sg\"\n }\n \n resource \"aws_security_group_rule\" \"ci_server_ecs_instance_egress\" {\n-  type        = \"egress\"\n+  type = \"egress\"\n   description = \"RDP a\"\n-  depends_on  = [\"aws_security_group.ci_server_ecs_instance\"]\n-  from_port   = 0\n-  to_port     = 0\n-  protocol    = \"-1\"\n+  depends_on = [aws_security_group.ci_server_ecs_instance]\n+  from_port = 0\n+  to_port = 0\n+  protocol = \"-1\"\n   cidr_blocks = [\"0.0.0.0/0\"]\n \n-  security_group_id = \"${aws_security_group.ci_server_ecs_instance.id}\"\n+  security_group_id = aws_security_group.ci_server_ecs_instance.id\n }\n \n resource \"aws_security_group_rule\" \"ci_server_ecs_instance_ingress\" {\n-  type        = \"ingress\"\n+  type = \"ingress\"\n   description = \"RDP b\"\n-  depends_on  = [\"aws_security_group.ci_server_ecs_instance\"]\n-  protocol    = \"tcp\"\n-  from_port   = 22\n-  to_port     = 22\n+  depends_on = [aws_security_group.ci_server_ecs_instance]\n+  protocol = \"tcp\"\n+  from_port = 22\n+  to_port = 22\n \n-  cidr_blocks = \"${var.ip_access_whitelist}\"\n+  cidr_blocks = var.ip_access_whitelist\n \n-  security_group_id = \"${aws_security_group.ci_server_ecs_instance.id}\"\n+  security_group_id = aws_security_group.ci_server_ecs_instance.id\n }"
      },
      {
        "filename": "modules/cluster/outputs.tf",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -1,29 +1,35 @@\n output \"instance_security_group_id\" {\n-  value       = \"${aws_security_group.ci_server_ecs_instance.id}\"\n+  value       = aws_security_group.ci_server_ecs_instance.id\n   description = \"Security Group ID of cluster instances\"\n }\n \n output \"id\" {\n-  value       = \"${aws_ecs_cluster.ci_server.id}\"\n+  value       = aws_ecs_cluster.ci_server.id\n   description = \"Identifier for cluster\"\n }\n \n output \"name\" {\n-  value       = \"${aws_ecs_cluster.ci_server.name}\"\n+  value       = aws_ecs_cluster.ci_server.name\n+  description = \"Name for cluster\"\n+}\n+\n+output \"arn\" {\n+  value       = aws_ecs_cluster.ci_server.arn\n   description = \"Name for cluster\"\n }\n \n output \"ami_image_id\" {\n-  value       = \"${data.aws_ami.amazon_linux_2.image_id}\"\n+  value       = data.aws_ami.amazon_linux_2.image_id\n   description = \"Image ID for ec2 cluster instances\"\n }\n \n output \"iam_instance_profile\" {\n-  value       = \"${aws_iam_instance_profile.ci_server.name}\"\n+  value       = aws_iam_instance_profile.ci_server.name\n   description = \"Instance Profile name of cluster ec2 instances\"\n }\n \n output \"instance_user_data\" {\n-  value       = \"${data.template_file.cloud_config.rendered}\"\n+  value       = templatefile(\"${path.module}/templates/cloud-config.yml\", { ecs_cluster_name = aws_ecs_cluster.ci_server.name })\n   description = \"User data for launching new spot instance\"\n }\n+"
      },
      {
        "filename": "modules/cluster/templates/cloud-config.yml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -6,4 +6,4 @@ runcmd:\n \n bootcmd:\n   - mkdir -p /etc/ecs\n-  - echo 'ECS_CLUSTER=${ecs_cluster_name}' >> /etc/ecs/ecs.config\n+  - echo \"ECS_CLUSTER=${ecs_cluster_name}\" >> /etc/ecs/ecs.config"
      },
      {
        "filename": "modules/cluster/variables.tf",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ variable \"min_instances_count\" {\n }\n \n variable \"ecs_optimized_ami\" {\n-  type        = \"map\"\n+  type        = map(string)\n   description = \"map of optimized amis\"\n }\n \n@@ -58,10 +58,11 @@ variable \"cluster_name\" {\n \n variable \"ip_access_whitelist\" {\n   description = \"White-list of who can access the ci server\"\n-  type        = \"list\"\n+  type        = list(string)\n }\n \n variable \"ec2_volume_size\" {\n-  default     = \"100\"\n+  default     = 100\n   description = \"Size of ec2 disk in GB\"\n }\n+"
      },
      {
        "filename": "modules/database/main.tf",
        "additions": 32,
        "deletions": 26,
        "changes": 58,
        "status": "modified",
        "patch": "@@ -1,32 +1,35 @@\n locals {\n-  sub_domain                      = \"${var.ci_sub_domain}\"\n-  root_domain                     = \"${var.root_domain}\"\n-  vpc_id                          = \"${var.vpc_id}\"\n-  subnet_id_1                     = \"${var.subnet_id_1}\"\n-  subnet_id_2                     = \"${var.subnet_id_2}\"\n-  ci_server_app_security_group_id = \"${var.ci_server_app_security_group_id}\"\n+  sub_domain                      = var.ci_sub_domain\n+  root_domain                     = var.root_domain\n+  vpc_id                          = var.vpc_id\n+  subnet_id_1                     = var.subnet_id_1\n+  subnet_id_2                     = var.subnet_id_2\n+  ci_server_app_security_group_id = var.ci_server_app_security_group_id\n }\n \n resource \"aws_db_subnet_group\" \"ci_db\" {\n   name       = \"ci_db_subnet_group\"\n-  subnet_ids = [\"${local.subnet_id_1}\", \"${local.subnet_id_2}\"]\n+  subnet_ids = [local.subnet_id_1, local.subnet_id_2]\n \n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n resource \"aws_security_group\" \"ci_db\" {\n   name        = \"ci-db-sg\"\n   description = \"Allow all inbound traffic\"\n-  vpc_id      = \"${local.vpc_id}\"\n-  tags        = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  vpc_id      = local.vpc_id\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n \n   ingress {\n-    from_port = \"${lookup(var.db_engine_port, var.db_engine)}\"\n-    to_port   = \"${lookup(var.db_engine_port, var.db_engine)}\"\n+    from_port = var.db_engine_port[var.db_engine]\n+    to_port   = var.db_engine_port[var.db_engine]\n     protocol  = \"TCP\"\n-\n     security_groups = [\n-      \"${local.ci_server_app_security_group_id}\",\n+      local.ci_server_app_security_group_id,\n     ]\n   }\n \n@@ -44,20 +47,23 @@ resource \"random_string\" \"db_password\" {\n }\n \n resource \"aws_db_instance\" \"ci_db\" {\n-  depends_on                = [\"aws_security_group.ci_db\"]\n-  identifier                = \"${var.db_identifier}\"\n-  allocated_storage         = \"${var.db_storage}\"\n-  engine                    = \"${var.db_engine}\"\n-  engine_version            = \"${lookup(var.db_engine_version, var.db_engine)}\"\n-  instance_class            = \"${var.db_instance_class}\"\n-  name                      = \"${var.db_name}\"\n-  username                  = \"${var.db_username}\"\n-  password                  = \"${random_string.db_password.result}\"\n-  vpc_security_group_ids    = [\"${aws_security_group.ci_db.id}\"]\n-  db_subnet_group_name      = \"${aws_db_subnet_group.ci_db.id}\"\n+  depends_on                = [aws_security_group.ci_db]\n+  identifier                = var.db_identifier\n+  allocated_storage         = var.db_storage\n+  engine                    = var.db_engine\n+  engine_version            = var.db_engine_version[var.db_engine]\n+  instance_class            = var.db_instance_class\n+  name                      = var.db_name\n+  username                  = var.db_username\n+  password                  = random_string.db_password.result\n+  vpc_security_group_ids    = [aws_security_group.ci_db.id]\n+  db_subnet_group_name      = aws_db_subnet_group.ci_db.id\n   skip_final_snapshot       = false\n   final_snapshot_identifier = \"${local.sub_domain}-${md5(timestamp())}\"\n   deletion_protection       = false\n   copy_tags_to_snapshot     = true\n-  tags                      = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n+"
      },
      {
        "filename": "modules/database/outputs.tf",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -1,30 +1,31 @@\n output \"root_password\" {\n-  value       = \"${random_string.db_password.result}\"\n+  value       = random_string.db_password.result\n   sensitive   = true\n   description = \"RDS database root user password\"\n }\n \n output \"address\" {\n-  value       = \"${aws_db_instance.ci_db.address}\"\n+  value       = aws_db_instance.ci_db.address\n   description = \"Address to RDS DB instance\"\n }\n \n output \"user\" {\n-  value       = \"${aws_db_instance.ci_db.username}\"\n+  value       = aws_db_instance.ci_db.username\n   description = \"Database username\"\n }\n \n output \"name\" {\n-  value       = \"${aws_db_instance.ci_db.name}\"\n+  value       = aws_db_instance.ci_db.name\n   description = \"Database name\"\n }\n \n output \"port\" {\n-  value       = \"${aws_db_instance.ci_db.port}\"\n+  value       = aws_db_instance.ci_db.port\n   description = \"Database Port\"\n }\n \n output \"engine\" {\n-  value       = \"${aws_db_instance.ci_db.engine}\"\n+  value       = aws_db_instance.ci_db.engine\n   description = \"Engine type\"\n }\n+"
      },
      {
        "filename": "modules/database/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -62,3 +62,4 @@ variable \"subnet_id_2\" {\n variable \"ci_server_app_security_group_id\" {\n   description = \"Security group id of application\"\n }\n+"
      },
      {
        "filename": "modules/dns-update/main.tf",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "status": "added",
        "patch": "@@ -0,0 +1,100 @@\n+locals {\n+  cluster_arn            = var.cluster_arn\n+  task_domain_name       = var.task_domain_name\n+  route53_hosted_zone_id = var.route53_hosted_zone_id\n+  function_name          = var.function_name\n+  ecs_service_name       = var.ecs_service_name\n+  vpc_arn                = var.vpc_arn\n+}\n+\n+resource \"aws_lambda_function\" \"update_dns_on_state_change\" {\n+  filename         = \"${local.function_name}.zip\"\n+  function_name    = local.function_name\n+  handler          = \"update-dns.handler\"\n+  runtime          = \"nodejs8.10\"\n+  publish          = true\n+  role             = aws_iam_role.update_dns_state_changer.arn\n+  source_code_hash = data.archive_file.update_dns_zip.output_base64sha256\n+}\n+\n+data \"archive_file\" \"update_dns_zip\" {\n+\n+  type        = \"zip\"\n+  output_path = \"${local.function_name}.zip\"\n+\n+  source {\n+    filename = \"update-dns.js\"\n+    content = templatefile(\"${path.module}/templates/update-dns.js\", {\n+      cluster_arn            = local.cluster_arn,\n+      task_domain_name       = local.task_domain_name,\n+      route53_hosted_zone_id = local.route53_hosted_zone_id,\n+      ecs_service_name       = local.ecs_service_name,\n+      function_name          = local.function_name,\n+      domain_ttl             = var.domain_ttl\n+    })\n+  }\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"update_dns_log_group\" {\n+\n+  name              = \"/aws/lambda/${aws_lambda_function.update_dns_on_state_change.function_name}\"\n+  retention_in_days = var.log_retention\n+}\n+\n+resource \"aws_iam_role\" \"update_dns_state_changer\" {\n+\n+  assume_role_policy = <<EOF\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Sid\": \"\",\n+      \"Effect\": \"Allow\",\n+      \"Principal\": {\n+        \"Service\": \"lambda.amazonaws.com\"\n+      },\n+      \"Action\": \"sts:AssumeRole\"\n+    }\n+  ]\n+}\n+EOF\n+\n+}\n+\n+resource \"aws_iam_role_policy\" \"update_dns_policy\" {\n+\n+  role = aws_iam_role.update_dns_state_changer.name\n+  policy = templatefile(\"${path.module}/templates/update-dns-policy.json\", { log_group_arn = aws_cloudwatch_log_group.update_dns_log_group.arn, hosted_zone_id = local.route53_hosted_zone_id, vpc_arn = local.vpc_arn })\n+}\n+\n+resource \"aws_cloudwatch_event_rule\" \"update_dns_on_state_change\" {\n+\n+  name = \"update-dns-${local.ecs_service_name}\"\n+  description = \"Update dns for: ${local.ecs_service_name}\"\n+  event_pattern = templatefile(\"${path.module}/templates/event-pattern.json\", { cluster_arn = local.cluster_arn })\n+}\n+\n+resource \"aws_cloudwatch_event_target\" \"lambda_function\" {\n+\n+  rule = aws_cloudwatch_event_rule.update_dns_on_state_change.name\n+  target_id = aws_lambda_function.update_dns_on_state_change.function_name\n+  arn = aws_lambda_alias.update_dns_on_state_change_alias.arn\n+}\n+\n+resource \"aws_lambda_permission\" \"allow_cloudwatch\" {\n+\n+  statement_id = \"AllowExecutionFromCloudWatch\"\n+  action = \"lambda:InvokeFunction\"\n+  principal = \"events.amazonaws.com\"\n+  function_name = aws_lambda_function.update_dns_on_state_change.function_name\n+  source_arn = aws_cloudwatch_event_rule.update_dns_on_state_change.arn\n+  qualifier = aws_lambda_alias.update_dns_on_state_change_alias.name\n+}\n+\n+resource \"aws_lambda_alias\" \"update_dns_on_state_change_alias\" {\n+\n+  name = \"${var.function_name}-prod\"\n+  description = \"${var.function_name} description\"\n+  function_name = aws_lambda_function.update_dns_on_state_change.function_name\n+  function_version = \"$LATEST\"\n+}"
      },
      {
        "filename": "modules/dns-update/outputs.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+output \"deployed_version\" {\n+  value = join(\"\", aws_lambda_function.update_dns_on_state_change.*.version)\n+}\n+"
      },
      {
        "filename": "modules/dns-update/templates/event-pattern.json",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+{\n+  \"source\": [\n+    \"aws.ecs\"\n+  ],\n+  \"detail-type\": [\n+    \"ECS Task State Change\"\n+  ],\n+  \"detail\": {\n+    \"clusterArn\": [\n+      \"${cluster_arn}\"\n+    ]\n+  }\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/dns-update/templates/update-dns-policy.json",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "status": "added",
        "patch": "@@ -0,0 +1,44 @@\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Action\": [\n+        \"ec2:DescribeNetworkInterfaces\"\n+      ],\n+      \"Effect\": \"Allow\",\n+      \"Resource\": \"*\",\n+      \"Condition\": {\n+        \"ArnEquals\": {\n+          \"ec2:Vpc\": \"${vpc_arn}\"\n+        }\n+      }\n+    },\n+    {\n+      \"Action\": [\n+        \"route53:ChangeResourceRecordSets\",\n+        \"route53:GetHostedZone\",\n+        \"route53:ListResourceRecordSets\"\n+      ],\n+      \"Effect\": \"Allow\",\n+      \"Resource\": \"arn:aws:route53:::hostedzone/${hosted_zone_id}\"\n+    },\n+    {\n+      \"Effect\": \"Allow\",\n+      \"Action\": [\n+        \"route53:ListHostedZones\"\n+      ],\n+      \"Resource\": \"*\"\n+    },\n+    {\n+      \"Sid\": \"allowLoggingToCloudWatch\",\n+      \"Effect\": \"Allow\",\n+      \"Action\": [\n+        \"logs:CreateLogStream\",\n+        \"logs:PutLogEvents\"\n+      ],\n+      \"Resource\": [\n+        \"${log_group_arn}\"\n+      ]\n+    }\n+  ]\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/dns-update/templates/update-dns.js",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "status": "added",
        "patch": "@@ -0,0 +1,94 @@\n+'use strict';\n+\n+const AWS = require('aws-sdk')\n+const ec2 = new AWS.EC2()\n+const route53 = new AWS.Route53();\n+\n+exports.handler = async (event, context, callback) => {\n+  const clusterArn = '${cluster_arn}'\n+  const serviceName = '${ecs_service_name}'\n+  const payload = event.detail\n+  const target_status = 'RUNNING'\n+\n+  if (\n+    payload.desiredStatus !== target_status ||\n+    payload.lastStatus !== target_status\n+  ) {\n+    return\n+  }\n+\n+  if (\n+    payload.clusterArn !== clusterArn ||\n+    !payload.group.includes(serviceName)\n+  ) {\n+    const message = ['Warning: service:', serviceName, 'cluster:', clusterArn]\n+    return callback(message.join(' '), {})\n+  }\n+\n+  const eni = getEniAttachmentDetail(payload.attachments)\n+\n+  if (!eni.length) {\n+    return callback('Fatal: unable to retrieve network interface', {})\n+  }\n+\n+  const data = await ec2\n+    .describeNetworkInterfaces({\n+      NetworkInterfaceIds: [eni[0].value]\n+    })\n+    .promise()\n+\n+  const networks = data.NetworkInterfaces.pop()\n+\n+  if (!networks.Association.PublicIp) {\n+    return callback('Fatal: unable to retrieve public IP')\n+  }\n+\n+  const result = await applyIpChange(networks.Association.PublicIp)\n+  \n+  if (!result.ChangeInfo.Status) {\n+    return callback('Fatal: '+JSON.stringify(result), {})\n+  }\n+  \n+  console.log(result)\n+  return;\n+}\n+\n+const getEniAttachmentDetail = function (attachments) {\n+  const network = attachments.filter(function (attachment) {\n+    return attachment.type === 'eni'\n+  })\n+\n+  if (network.length) {\n+    return network[0].details.filter(function (detail) {\n+      return detail.name === 'networkInterfaceId'\n+    })\n+  }\n+\n+  return []\n+}\n+\n+const applyIpChange = async function (ipAddress) {\n+  const domain = '${task_domain_name}'\n+  const hostedZoneId = '${route53_hosted_zone_id}'\n+\n+  const changes = {\n+    HostedZoneId: hostedZoneId,\n+    ChangeBatch: {\n+      Changes: [\n+        {\n+          Action: 'UPSERT',\n+          ResourceRecordSet: {\n+            Name: domain,\n+            Type: 'A',\n+            TTL: ${domain_ttl},\n+            ResourceRecords: [{ Value: ipAddress }]\n+          }\n+        }\n+      ],\n+      Comment: 'Triggered by: ${function_name}'\n+    }\n+  }\n+\n+  const result = await route53.changeResourceRecordSets(changes).promise()\n+  return result\n+}"
      },
      {
        "filename": "modules/dns-update/variables.tf",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "status": "added",
        "patch": "@@ -0,0 +1,34 @@\n+variable \"cluster_arn\" {\n+  description = \"Arn of an ecs cluster\"\n+}\n+\n+variable \"task_domain_name\" {\n+  description = \"Public Domain name of target task\"\n+}\n+\n+variable \"route53_hosted_zone_id\" {\n+  description = \"Route53 Hosted Zone ID\"\n+}\n+\n+variable \"function_name\" {\n+  description = \"The function name of the created lambda\"\n+}\n+\n+variable \"ecs_service_name\" {\n+  description = \"The Service name of the ECS task\"\n+}\n+\n+variable \"domain_ttl\" {\n+  description = \"TTL for domain records\"\n+  default     = 300\n+}\n+\n+variable \"log_retention\" {\n+  description = \"Retention in days to keep logs\"\n+  default     = 3\n+}\n+\n+variable \"vpc_arn\" {\n+  description = \"arn of vpc\"\n+}\n+"
      },
      {
        "filename": "modules/drone-agent/main.tf",
        "additions": 30,
        "deletions": 27,
        "changes": 57,
        "status": "modified",
        "patch": "@@ -1,63 +1,66 @@\n locals {\n-  sub_domain  = \"${var.ci_sub_domain}\"\n-  root_domain = \"${var.root_domain}\"\n-  rpc_server  = \"${var.rpc_server}\"\n-  rpc_secret  = \"${var.rpc_secret}\"\n+  sub_domain  = var.ci_sub_domain\n+  root_domain = var.root_domain\n+  rpc_server  = var.rpc_server\n+  rpc_secret  = var.rpc_secret\n }\n \n resource \"aws_cloudwatch_log_group\" \"drone_agent\" {\n   name = \"drone/agent\"\n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n resource \"random_pet\" \"drone_task_runnner_name\" {\n   separator = \".\"\n }\n \n data \"template_file\" \"drone_agent_task_definition\" {\n-  template = \"${file(\"${path.module}/templates/task-definition.json\")}\"\n-\n-  vars {\n-    log_group_region      = \"${var.aws_region}\"\n-    log_group_drone_agent = \"${aws_cloudwatch_log_group.drone_agent.name}\"\n-    runner_name           = \"${random_pet.drone_task_runnner_name.id}\"\n-    drone_rpc_server      = \"${local.rpc_server}\"\n-    drone_rpc_secret      = \"${local.rpc_secret}\"\n-    drone_version         = \"${var.app_version}\"\n-    container_cpu         = \"${var.container_cpu}\"\n-    container_memory      = \"${var.container_memory}\"\n-    drone_logs_debug      = \"${var.app_debug}\"\n+  template = file(\"${path.module}/templates/task-definition.json\")\n+\n+  vars = {\n+    log_group_region      = var.aws_region\n+    log_group_drone_agent = aws_cloudwatch_log_group.drone_agent.name\n+    runner_name           = random_pet.drone_task_runnner_name.id\n+    drone_rpc_server      = local.rpc_server\n+    drone_rpc_secret      = local.rpc_secret\n+    drone_version         = var.app_version\n+    container_cpu         = var.container_cpu\n+    container_memory      = var.container_memory\n+    drone_logs_debug      = var.app_debug\n   }\n }\n \n resource \"aws_ecs_task_definition\" \"drone_agent\" {\n   family                = \"drone-agent\"\n-  container_definitions = \"${data.template_file.drone_agent_task_definition.rendered}\"\n+  container_definitions = data.template_file.drone_agent_task_definition.rendered\n \n   volume {\n     name      = \"dockersock\"\n     host_path = \"/var/run/docker.sock\"\n   }\n \n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n resource \"aws_ecs_service\" \"drone_agent\" {\n   name = \"drone-agent\"\n \n-  depends_on = [\n-    \"aws_ecs_task_definition.drone_agent\",\n-  ]\n+  depends_on = [aws_ecs_task_definition.drone_agent]\n \n-  cluster         = \"${var.cluster_id}\"\n-  desired_count   = \"${var.max_container_count}\"\n-  task_definition = \"${aws_ecs_task_definition.drone_agent.arn}\"\n+  cluster         = var.cluster_id\n+  desired_count   = var.max_container_count\n+  task_definition = aws_ecs_task_definition.drone_agent.arn\n }\n \n resource \"aws_appautoscaling_target\" \"drone_agent\" {\n-  max_capacity       = \"${var.max_container_count}\"\n-  min_capacity       = \"${var.min_container_count}\"\n+  max_capacity       = var.max_container_count\n+  min_capacity       = var.min_container_count\n   resource_id        = \"service/${var.cluster_name}/${aws_ecs_service.drone_agent.name}\"\n   scalable_dimension = \"ecs:service:DesiredCount\"\n   service_namespace  = \"ecs\"\n }\n+"
      },
      {
        "filename": "modules/drone-agent/outputs.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n output \"drone_agent_log_group_arn\" {\n-  value = \"${aws_cloudwatch_log_group.drone_agent.arn}\"\n+  value = aws_cloudwatch_log_group.drone_agent.arn\n }\n+"
      },
      {
        "filename": "modules/drone-agent/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -49,3 +49,4 @@ variable \"root_domain\" {\n variable \"ci_sub_domain\" {\n   description = \"Sub part of domain for ci\"\n }\n+"
      },
      {
        "filename": "modules/drone-server/main.tf",
        "additions": 109,
        "deletions": 104,
        "changes": 213,
        "status": "modified",
        "patch": "@@ -1,101 +1,97 @@\n locals {\n-  sub_domain  = \"${var.ci_sub_domain}\"\n-  root_domain = \"${var.root_domain}\"\n+  sub_domain  = var.ci_sub_domain\n+  root_domain = var.root_domain\n \n-  db_host_name = \"${var.db_host_name}\"\n-  db_user      = \"${var.db_user}\"\n-  db_password  = \"${var.db_password}\"\n-  db_engine    = \"${var.db_engine}\"\n-  db_port      = \"${var.db_port}\"\n+  db_host_name = var.db_host_name\n+  db_user      = var.db_user\n+  db_password  = var.db_password\n+  db_engine    = var.db_engine\n+  db_port      = var.db_port\n \n-  cluster_name = \"${var.cluster_name}\"\n-  cluster_id   = \"${var.cluster_id}\"\n-  vpc_id       = \"${var.vpc_id}\"\n+  cluster_name = var.cluster_name\n+  cluster_id   = var.cluster_id\n+  vpc_id       = var.vpc_id\n \n-  target_group_arn                   = \"${var.target_group_arn}\"\n-  subnet_id_1                        = \"${var.subnet_id_1}\"\n-  subnet_id_2                        = \"${var.subnet_id_2}\"\n-  rpc_secret                         = \"${var.rpc_secret}\"\n-  cluster_instance_security_group_id = \"${var.cluster_instance_security_group_id}\"\n-  load_balancer_security_group_id    = \"${var.load_balancer_security_group_id}\"\n+  subnet_id_1                        = var.subnet_id_1\n+  subnet_id_2                        = var.subnet_id_2\n+  rpc_secret                         = var.rpc_secret\n+  cluster_instance_security_group_id = var.cluster_instance_security_group_id\n+  ip_access_whitelist                = var.ip_access_whitelist\n }\n \n resource \"aws_cloudwatch_log_group\" \"drone_server\" {\n   name = \"drone/server\"\n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n data \"template_file\" \"drone_server_task_definition\" {\n-  template = \"${file(\"${path.module}/templates/task-definition.json\")}\"\n-\n-  vars {\n-    log_group_region       = \"${var.aws_region}\"\n-    drone_rpc_server       = \"${var.ci_sub_domain}.${var.root_domain}\"\n-    log_group_drone_server = \"${aws_cloudwatch_log_group.drone_server.name}\"\n-    drone_rpc_secret       = \"${local.rpc_secret}\"\n-\n-    db_host_name = \"${local.db_host_name}\"\n-    db_user      = \"${local.db_user}\"\n-    db_password  = \"${local.db_password}\"\n-    db_engine    = \"${local.db_engine}\"\n-    db_port      = \"${local.db_port}\"\n-\n-    drone_version             = \"${var.app_version}\"\n-    drone_logs_debug          = \"${var.app_debug}\"\n-    drone_server_port         = \"${var.app_port}\"\n-    container_cpu             = \"${var.fargate_task_cpu}\"\n-    container_memory          = \"${var.fargate_task_memory}\"\n-    drone_github_client       = \"${var.env_github_client}\"\n-    drone_github_secret       = \"${var.env_github_secret}\"\n-    drone_admin               = \"${var.env_drone_admin}\"\n-    drone_github_organization = \"${var.env_drone_github_organization}\"\n-    drone_webhook_list        = \"${var.env_drone_webhook_list}\"\n-    drone_repository_filter   = \"${var.env_drone_repo_filter}\"\n-    drone_agents_enabled      = \"${var.env_drone_agents_enabled}\"\n+  template = file(\"${path.module}/templates/task-definition.json\")\n+\n+  vars = {\n+    log_group_region          = var.aws_region\n+    drone_rpc_server          = \"${var.ci_sub_domain}.${var.root_domain}\"\n+    log_group_drone_server    = aws_cloudwatch_log_group.drone_server.name\n+    drone_rpc_secret          = local.rpc_secret\n+    db_host_name              = local.db_host_name\n+    db_user                   = local.db_user\n+    db_password               = local.db_password\n+    db_engine                 = local.db_engine\n+    db_port                   = local.db_port\n+    drone_version             = var.app_version\n+    drone_logs_debug          = var.app_debug\n+    drone_server_port         = var.app_port\n+    container_cpu             = var.fargate_task_cpu\n+    container_memory          = var.fargate_task_memory\n+    drone_github_client       = var.env_github_client\n+    drone_github_secret       = var.env_github_secret\n+    drone_admin               = var.env_drone_admin\n+    drone_github_organization = var.env_drone_github_organization\n+    drone_webhook_list        = var.env_drone_webhook_list\n+    drone_repository_filter   = var.env_drone_repo_filter\n+    drone_agents_enabled      = var.env_drone_agents_enabled\n+    drone_auto_cert           = var.env_drone_auto_cert\n+    drone_server_proto        = var.env_drone_server_proto\n+    drone_auto_cert_port      = var.drone_auto_cert_port\n+    drone_http_ssl_redirect   = var.env_drone_http_ssl_redirect\n   }\n }\n \n resource \"aws_ecs_task_definition\" \"drone_server\" {\n   family                   = \"drone-server\"\n-  container_definitions    = \"${data.template_file.drone_server_task_definition.rendered}\"\n+  container_definitions    = data.template_file.drone_server_task_definition.rendered\n   requires_compatibilities = [\"FARGATE\"]\n   network_mode             = \"awsvpc\"\n \n-  task_role_arn      = \"${aws_iam_role.ci_server_ecs_task.arn}\"\n-  execution_role_arn = \"${aws_iam_role.ci_server_ecs_task.arn}\"\n+  task_role_arn      = aws_iam_role.ci_server_ecs_task.arn\n+  execution_role_arn = aws_iam_role.ci_server_ecs_task.arn\n \n-  cpu    = \"${var.fargate_task_cpu}\"\n-  memory = \"${var.fargate_task_memory}\"\n-  tags   = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  cpu    = var.fargate_task_cpu\n+  memory = var.fargate_task_memory\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n resource \"aws_ecs_service\" \"drone_server\" {\n   name            = \"ci-server-drone-server\"\n-  cluster         = \"${local.cluster_id}\"\n-  task_definition = \"${aws_ecs_task_definition.drone_server.arn}\"\n+  cluster         = local.cluster_id\n+  task_definition = aws_ecs_task_definition.drone_server.arn\n   desired_count   = 1\n   launch_type     = \"FARGATE\"\n-  depends_on      = [\"aws_ecs_task_definition.drone_server\"]\n+  depends_on      = [aws_ecs_task_definition.drone_server]\n \n   network_configuration {\n-    security_groups  = [\"${aws_security_group.ci_server_app.id}\"]\n-    subnets          = [\"${local.subnet_id_1}\", \"${local.subnet_id_2}\"]\n+    security_groups  = [aws_security_group.ci_server_app.id]\n+    subnets          = [local.subnet_id_1, local.subnet_id_2]\n     assign_public_ip = true\n   }\n \n-  load_balancer {\n-    target_group_arn = \"${local.target_group_arn}\"\n-    container_name   = \"ci-server-drone-server\"\n-    container_port   = \"${var.app_port}\"\n-  }\n-\n   service_registries {\n-    registry_arn = \"${aws_service_discovery_service.ci_server.arn}\"\n+    registry_arn = aws_service_discovery_service.ci_server.arn\n   }\n \n-  depends_on = [\n-    \"aws_alb_listener.front_end\",\n-  ]\n }\n \n resource \"aws_appautoscaling_target\" \"ecs_drone_server\" {\n@@ -107,16 +103,16 @@ resource \"aws_appautoscaling_target\" \"ecs_drone_server\" {\n }\n \n resource \"aws_service_discovery_private_dns_namespace\" \"ci\" {\n-  name        = \"${var.service_discovery_private_namespace}\"\n+  name        = \"${local.sub_domain}${var.service_discovery_private_namespace}\"\n   description = \"Private DNS ci-server\"\n-  vpc         = \"${local.vpc_id}\"\n+  vpc         = local.vpc_id\n }\n \n resource \"aws_service_discovery_service\" \"ci_server\" {\n   name = \"drone\"\n \n   dns_config {\n-    namespace_id = \"${aws_service_discovery_private_dns_namespace.ci.id}\"\n+    namespace_id = aws_service_discovery_private_dns_namespace.ci.id\n \n     dns_records {\n       ttl  = 10\n@@ -131,18 +127,8 @@ resource \"aws_service_discovery_service\" \"ci_server\" {\n   }\n }\n \n-data \"template_file\" \"ci_server_ecs_profile\" {\n-  template = \"${file(\"${path.module}/templates/drone-ecs.json\")}\"\n-\n-  vars {\n-    server_log_group_arn = \"${var.agent_log_group_arn}\"\n-    agent_log_group_arn  = \"${aws_cloudwatch_log_group.drone_server.arn}\"\n-  }\n-}\n \n resource \"aws_iam_role\" \"ci_server_ecs_task\" {\n-  name = \"ci_server_ecs_task_role\"\n-\n   assume_role_policy = <<EOF\n {\n   \"Version\": \"2012-10-17\",\n@@ -158,55 +144,74 @@ resource \"aws_iam_role\" \"ci_server_ecs_task\" {\n   ]\n }\n EOF\n+\n }\n \n resource \"aws_iam_role_policy\" \"ci_server_ecs\" {\n-  name   = \"ci-server-ecs-policy\"\n-  role   = \"${aws_iam_role.ci_server_ecs_task.name}\"\n-  policy = \"${data.template_file.ci_server_ecs_profile.rendered}\"\n+  role = aws_iam_role.ci_server_ecs_task.name\n+  policy = templatefile(\"${path.module}/templates/drone-ecs.json\", { server_log_group_arn = var.agent_log_group_arn, agent_log_group_arn = aws_cloudwatch_log_group.drone_server.arn, })\n+\n }\n \n resource \"aws_security_group\" \"ci_server_app\" {\n   description = \"Restrict access to application server.\"\n-  vpc_id      = \"${local.vpc_id}\"\n-  name        = \"ci-server-task-sg\"\n+  vpc_id = local.vpc_id\n+  name = \"ci-server-task-sg\"\n }\n \n resource \"aws_security_group_rule\" \"ci_server_app_egress\" {\n-  type        = \"egress\"\n+  type = \"egress\"\n   description = \"RDP c\"\n-  depends_on  = [\"aws_security_group.ci_server_app\"]\n-  from_port   = 0\n-  to_port     = 0\n-  protocol    = \"-1\"\n+  depends_on = [aws_security_group.ci_server_app]\n+  from_port = 0\n+  to_port = 0\n+  protocol = \"-1\"\n \n   cidr_blocks = [\n     \"0.0.0.0/0\",\n   ]\n \n-  security_group_id = \"${aws_security_group.ci_server_app.id}\"\n+  security_group_id = aws_security_group.ci_server_app.id\n }\n \n resource \"aws_security_group_rule\" \"ci_server_app_ingress\" {\n-  type        = \"ingress\"\n-  description = \"RDP n\"\n-  depends_on  = [\"aws_security_group.ci_server_app\"]\n-  protocol    = \"tcp\"\n-  from_port   = \"${var.build_agent_port}\"\n-  to_port     = \"${var.build_agent_port}\"\n+  type = \"ingress\"\n+  description = \"Drone CI/CD build agents to access\"\n+  depends_on = [aws_security_group.ci_server_app]\n+  protocol = \"tcp\"\n+  from_port = var.build_agent_port\n+  to_port = var.build_agent_port\n \n-  source_security_group_id = \"${local.cluster_instance_security_group_id}\"\n-  security_group_id        = \"${aws_security_group.ci_server_app.id}\"\n+  source_security_group_id = local.cluster_instance_security_group_id\n+  security_group_id = aws_security_group.ci_server_app.id\n }\n \n resource \"aws_security_group_rule\" \"ci_server_app_ingress2\" {\n-  type        = \"ingress\"\n-  description = \"RDP v\"\n-  depends_on  = [\"aws_security_group.ci_server_app\"]\n-  protocol    = \"tcp\"\n-  from_port   = \"${var.app_port}\"\n-  to_port     = \"${var.app_port}\"\n \n-  source_security_group_id = \"${local.load_balancer_security_group_id}\"\n-  security_group_id        = \"${aws_security_group.ci_server_app.id}\"\n+  type = \"ingress\"\n+  description = \"Drone CI/CD User inteface access\"\n+  depends_on = [aws_security_group.ci_server_app]\n+  protocol = \"tcp\"\n+  from_port = var.app_port\n+  to_port = var.app_port\n+\n+  cidr_blocks = var.ip_access_whitelist\n+\n+  security_group_id = aws_security_group.ci_server_app.id\n+}\n+\n+resource \"aws_security_group_rule\" \"ci_server_app_ingress3\" {\n+  type = \"ingress\"\n+  description = \"Drone CI/CD used during autocert\"\n+  depends_on = [aws_security_group.ci_server_app]\n+  protocol = \"tcp\"\n+  from_port = var.drone_auto_cert_port\n+  to_port = var.drone_auto_cert_port\n+\n+  cidr_blocks = [\n+    \"0.0.0.0/0\",\n+  ]\n+\n+  security_group_id = aws_security_group.ci_server_app.id\n }\n+"
      },
      {
        "filename": "modules/drone-server/outputs.tf",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -4,9 +4,14 @@ output \"rpc_server_url\" {\n }\n \n output \"drone_server_log_group_arn\" {\n-  value = \"${aws_cloudwatch_log_group.drone_server.arn}\"\n+  value = aws_cloudwatch_log_group.drone_server.arn\n }\n \n output \"ci_server_security_group_id\" {\n-  value = \"${aws_security_group.ci_server_app.id}\"\n+  value = aws_security_group.ci_server_app.id\n }\n+\n+output \"service_name\" {\n+  value = \"ci-server-drone-server\"\n+}\n+"
      },
      {
        "filename": "modules/drone-server/templates/task-definition.json",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -8,23 +8,29 @@\n       {\n         \"containerPort\": ${drone_server_port},\n         \"protocol\": \"tcp\"\n+      },\n+      {\n+        \"containerPort\": ${drone_auto_cert_port},\n+        \"protocol\": \"tcp\"\n       }\n     ],\n     \"environment\": [\n       { \"name\": \"DRONE_GITHUB_SERVER\", \"value\": \"https://github.com\" },\n       { \"name\": \"DRONE_GITHUB_CLIENT_ID\", \"value\": \"${drone_github_client}\" },\n       { \"name\": \"DRONE_GITHUB_CLIENT_SECRET\", \"value\": \"${drone_github_secret}\" },\n       { \"name\": \"DRONE_RPC_SECRET\", \"value\": \"${drone_rpc_secret}\" },\n-      { \"name\": \"DRONE_RPC_SERVER\", \"value\": \"https://${drone_rpc_server}\" },\n-      { \"name\": \"DRONE_SERVER_PROTO\", \"value\": \"https\" },\n+      { \"name\": \"DRONE_RPC_SERVER\", \"value\": \"${drone_server_proto}://${drone_rpc_server}\" },\n+      { \"name\": \"DRONE_SERVER_PROTO\", \"value\": \"${drone_server_proto}\" },\n       { \"name\": \"DRONE_SERVER_HOST\", \"value\": \"${drone_rpc_server}\" },\n       { \"name\": \"DRONE_USER_CREATE\", \"value\": \"username:${drone_admin},machine:false,admin:true\" },\n       { \"name\": \"DRONE_USER_FILTER\", \"value\": \"username:${drone_github_organization}\" },\n       { \"name\": \"DRONE_DATABASE_DRIVER\", \"value\": \"${db_engine}\" },\n       { \"name\": \"DRONE_LOGS_DEBUG\", \"value\": \"${drone_logs_debug}\" },\n       { \"name\": \"DRONE_REPOSITORY_FILTER\", \"value\": \"${drone_repository_filter}\" },\n       { \"name\": \"DRONE_DATABASE_DATASOURCE\", \"value\": \"postgres://${db_user}:${db_password}@${db_host_name}:${db_port}/postgres?sslmode=disable\" },\n-      { \"name\": \"DRONE_AGENTS_ENABLED\", \"value\": \"${drone_agents_enabled}\" }\n+      { \"name\": \"DRONE_AGENTS_ENABLED\", \"value\": \"${drone_agents_enabled}\" },\n+      { \"name\": \"DRONE_TLS_AUTOCERT\", \"value\": \"${drone_auto_cert}\" },\n+      { \"name\": \"DRONE_HTTP_SSL_REDIRECT\", \"value\": \"${drone_http_ssl_redirect}\" }\n     ],\n     \"logConfiguration\": {\n       \"logDriver\": \"awslogs\","
      },
      {
        "filename": "modules/drone-server/variables.tf",
        "additions": 47,
        "deletions": 17,
        "changes": 64,
        "status": "modified",
        "patch": "@@ -6,14 +6,26 @@ variable \"ci_sub_domain\" {\n   description = \"Sub part of domain for ci\"\n }\n \n-variable \"db_host_name\" {}\n-variable \"db_user\" {}\n-variable \"db_password\" {}\n-variable \"db_engine\" {}\n-variable \"db_port\" {}\n+variable \"db_host_name\" {\n+}\n+\n+variable \"db_user\" {\n+}\n+\n+variable \"db_password\" {\n+}\n+\n+variable \"db_engine\" {\n+}\n \n-variable \"subnet_id_1\" {}\n-variable \"subnet_id_2\" {}\n+variable \"db_port\" {\n+}\n+\n+variable \"subnet_id_1\" {\n+}\n+\n+variable \"subnet_id_2\" {\n+}\n \n variable \"app_version\" {\n   description = \"Current Drone Agent Version\"\n@@ -63,13 +75,34 @@ variable \"env_drone_logs_debug\" {\n   description = \"String literal for verboser output from logs \"\n }\n \n-variable \"env_drone_repo_filter\" {}\n+variable \"env_drone_repo_filter\" {\n+}\n \n variable \"env_drone_agents_enabled\" {\n   default     = \"true\"\n   description = \"supported values are [true] one must set explicit since 1-0-0-rc-6 \"\n }\n \n+variable \"env_drone_http_ssl_redirect\" {\n+  default     = \"true\"\n+  description = \"If is set to true, then only allow HTTPS requests.\"\n+}\n+\n+variable \"env_drone_auto_cert\" {\n+  default     = \"true\"\n+  description = \"auto cert drone supported [true]\"\n+}\n+\n+variable \"env_drone_server_proto\" {\n+  default     = \"https\"\n+  description = \"server protocol\"\n+}\n+\n+variable \"drone_auto_cert_port\" {\n+  default     = 80\n+  description = \"port used during auto cert\"\n+}\n+\n variable \"vpc_id\" {\n   description = \"Id for vpc\"\n }\n@@ -87,14 +120,10 @@ variable \"agent_log_group_arn\" {\n }\n \n variable \"service_discovery_private_namespace\" {\n-  default     = \"ci-tool.local\"\n+  default     = \"-tool.local\"\n   description = \"private dns namepace\"\n }\n \n-variable \"target_group_arn\" {\n-  description = \"Target group resource arn\"\n-}\n-\n variable \"rpc_secret\" {\n   description = \"RPC secret\"\n }\n@@ -103,10 +132,11 @@ variable \"cluster_instance_security_group_id\" {\n   description = \"Security group of cluster instances\"\n }\n \n-variable \"load_balancer_security_group_id\" {\n-  description = \"Security group of load balancer\"\n-}\n-\n variable \"build_agent_port\" {\n   description = \"port for build agents\"\n }\n+\n+variable \"ip_access_whitelist\" {\n+  description = \"White-listed cidr IP to access user interface. Allow from [Github Hook IP](https://api.github.com/meta)   \"\n+  default     = [\"0.0.0.0/0\"]\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/lb/main.tf",
        "additions": 0,
        "deletions": 116,
        "changes": 116,
        "status": "removed",
        "patch": "@@ -1,116 +0,0 @@\n-locals {\n-  sub_domain  = \"${var.ci_sub_domain}\"\n-  root_domain = \"${var.root_domain}\"\n-  subnet_id_1 = \"${var.subnet_id_1}\"\n-  subnet_id_2 = \"${var.subnet_id_2}\"\n-  vpc_id      = \"${var.vpc_id}\"\n-}\n-\n-resource \"aws_alb_target_group\" \"ci_server\" {\n-  name        = \"ci-server-ecs\"\n-  port        = \"${var.target_port}\"\n-  protocol    = \"HTTP\"\n-  vpc_id      = \"${local.vpc_id}\"\n-  target_type = \"ip\"\n-\n-  health_check {\n-    path                = \"${var.target_health_check_endpoint}\"\n-    matcher             = \"200\"\n-    timeout             = \"5\"\n-    healthy_threshold   = \"3\"\n-    unhealthy_threshold = \"2\"\n-  }\n-}\n-\n-resource \"aws_alb\" \"front\" {\n-  name            = \"drone-front-alb\"\n-  internal        = false\n-  security_groups = [\"${aws_security_group.ci_server_web.id}\"]\n-  subnets         = [\"${local.subnet_id_1}\", \"${local.subnet_id_2}\"]\n-\n-  enable_deletion_protection = false\n-  tags                       = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n-}\n-\n-resource \"aws_alb_listener\" \"front_end\" {\n-  load_balancer_arn = \"${aws_alb.front.id}\"\n-  port              = 443\n-  protocol          = \"HTTPS\"\n-  ssl_policy        = \"ELBSecurityPolicy-2015-05\"\n-  certificate_arn   = \"${aws_acm_certificate.cert.arn}\"\n-\n-  default_action {\n-    target_group_arn = \"${aws_alb_target_group.ci_server.id}\"\n-    type             = \"forward\"\n-  }\n-}\n-\n-resource \"aws_route53_record\" \"ci_public_url\" {\n-  zone_id = \"${var.root_domain_zone_id}\"\n-  name    = \"${local.sub_domain}.${local.root_domain}\"\n-  type    = \"A\"\n-\n-  alias {\n-    name                   = \"${aws_alb.front.dns_name}\"\n-    zone_id                = \"${aws_alb.front.zone_id}\"\n-    evaluate_target_health = false\n-  }\n-}\n-\n-resource \"aws_acm_certificate\" \"cert\" {\n-  domain_name       = \"${local.sub_domain}.${local.root_domain}\"\n-  validation_method = \"DNS\"\n-  tags              = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n-  provider          = \"aws\"\n-}\n-\n-resource \"aws_acm_certificate_validation\" \"cert_validation\" {\n-  certificate_arn = \"${aws_acm_certificate.cert.arn}\"\n-  provider        = \"aws\"\n-\n-  validation_record_fqdns = [\n-    \"${aws_route53_record.cert_validation.*.fqdn}\",\n-  ]\n-}\n-\n-resource \"aws_route53_record\" \"cert_validation\" {\n-  name    = \"${aws_acm_certificate.cert.domain_validation_options.0.resource_record_name}\"\n-  type    = \"${aws_acm_certificate.cert.domain_validation_options.0.resource_record_type}\"\n-  zone_id = \"${var.root_domain_zone_id}\"\n-  records = [\"${aws_acm_certificate.cert.domain_validation_options.0.resource_record_value}\"]\n-  ttl     = \"${var.default_ttl}\"\n-}\n-\n-resource \"aws_security_group\" \"ci_server_web\" {\n-  description = \"Restrict access to ALB\"\n-\n-  vpc_id = \"${local.vpc_id}\"\n-  name   = \"ci-server-alb-sg\"\n-}\n-\n-resource \"aws_security_group_rule\" \"ci_server_web_egress\" {\n-  type        = \"egress\"\n-  description = \"RDP s\"\n-  depends_on  = [\"aws_security_group.ci_server_web\"]\n-  from_port   = 0\n-  to_port     = 0\n-  protocol    = \"-1\"\n-\n-  cidr_blocks = [\n-    \"0.0.0.0/0\",\n-  ]\n-\n-  security_group_id = \"${aws_security_group.ci_server_web.id}\"\n-}\n-\n-resource \"aws_security_group_rule\" \"ci_server_web_ingress\" {\n-  type        = \"ingress\"\n-  description = \"RDP p\"\n-  depends_on  = [\"aws_security_group.ci_server_web\"]\n-  protocol    = \"tcp\"\n-  from_port   = 443\n-  to_port     = 443\n-  cidr_blocks = \"${var.ip_access_whitelist}\"\n-\n-  security_group_id = \"${aws_security_group.ci_server_web.id}\"\n-}"
      },
      {
        "filename": "modules/lb/outputs.tf",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "status": "removed",
        "patch": "@@ -1,11 +0,0 @@\n-output \"target_group_arn\" {\n-  value = \"${aws_alb_target_group.ci_server.id}\"\n-}\n-\n-output \"url_443\" {\n-  value = \"https://${aws_acm_certificate.cert.domain_name}\"\n-}\n-\n-output \"load_balancer_security_group_id\" {\n-  value = \"${aws_security_group.ci_server_web.id}\"\n-}"
      },
      {
        "filename": "modules/lb/variables.tf",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "status": "removed",
        "patch": "@@ -1,42 +0,0 @@\n-variable \"root_domain\" {\n-  description = \"Pre-existing Route53 Hosted Zone domain\"\n-}\n-\n-variable \"ci_sub_domain\" {\n-  description = \"Sub part of domain for ci\"\n-}\n-\n-variable \"vpc_id\" {\n-  description = \"Id for vpc\"\n-}\n-\n-variable \"subnet_id_1\" {\n-  description = \"id for subnet\"\n-}\n-\n-variable \"subnet_id_2\" {\n-  description = \"id for subnet\"\n-}\n-\n-variable \"default_ttl\" {\n-  default     = \"300\"\n-  description = \"Default ttl for domain records\"\n-}\n-\n-variable \"root_domain_zone_id\" {\n-  description = \"Pre-existing Route53 Hosted Zone ID\"\n-}\n-\n-variable \"target_health_check_endpoint\" {\n-  default     = \"/healthz\"\n-  description = \"endpoint for healthcheck target\"\n-}\n-\n-variable \"target_port\" {\n-  description = \"target port\"\n-}\n-\n-variable \"ip_access_whitelist\" {\n-  description = \"White-list of who can access the ci server\"\n-  type        = \"list\"\n-}"
      },
      {
        "filename": "modules/network/main.tf",
        "additions": 27,
        "deletions": 16,
        "changes": 43,
        "status": "modified",
        "patch": "@@ -1,57 +1,68 @@\n locals {\n-  sub_domain  = \"${var.ci_sub_domain}\"\n-  root_domain = \"${var.root_domain}\"\n+  sub_domain  = var.ci_sub_domain\n+  root_domain = var.root_domain\n }\n \n resource \"aws_vpc\" \"ci\" {\n   cidr_block           = \"172.35.0.0/16\"\n   enable_dns_hostnames = true\n   enable_dns_support   = true\n \n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n resource \"aws_subnet\" \"ci_subnet_a\" {\n-  vpc_id                  = \"${aws_vpc.ci.id}\"\n+  vpc_id                  = aws_vpc.ci.id\n   cidr_block              = \"172.35.16.0/20\"\n   map_public_ip_on_launch = true\n   availability_zone       = \"${var.aws_region}a\"\n \n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n resource \"aws_subnet\" \"ci_subnet_c\" {\n-  vpc_id                  = \"${aws_vpc.ci.id}\"\n+  vpc_id                  = aws_vpc.ci.id\n   cidr_block              = \"172.35.32.0/20\"\n   map_public_ip_on_launch = true\n   availability_zone       = \"${var.aws_region}c\"\n \n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n resource \"aws_internet_gateway\" \"ci\" {\n-  vpc_id = \"${aws_vpc.ci.id}\"\n+  vpc_id = aws_vpc.ci.id\n \n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n resource \"aws_route_table\" \"ci\" {\n-  vpc_id = \"${aws_vpc.ci.id}\"\n+  vpc_id = aws_vpc.ci.id\n \n   route {\n     cidr_block = \"0.0.0.0/0\"\n-    gateway_id = \"${aws_internet_gateway.ci.id}\"\n+    gateway_id = aws_internet_gateway.ci.id\n   }\n \n-  tags = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n }\n \n resource \"aws_route_table_association\" \"a\" {\n-  subnet_id      = \"${aws_subnet.ci_subnet_a.id}\"\n-  route_table_id = \"${aws_route_table.ci.id}\"\n+  subnet_id      = aws_subnet.ci_subnet_a.id\n+  route_table_id = aws_route_table.ci.id\n }\n \n resource \"aws_route_table_association\" \"c\" {\n-  subnet_id      = \"${aws_subnet.ci_subnet_c.id}\"\n-  route_table_id = \"${aws_route_table.ci.id}\"\n+  subnet_id      = aws_subnet.ci_subnet_c.id\n+  route_table_id = aws_route_table.ci.id\n }\n+"
      },
      {
        "filename": "modules/network/outputs.tf",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -1,11 +1,16 @@\n output \"subnet_id_1\" {\n-  value = \"${aws_subnet.ci_subnet_a.id}\"\n+  value = aws_subnet.ci_subnet_a.id\n }\n \n output \"subnet_id_2\" {\n-  value = \"${aws_subnet.ci_subnet_c.id}\"\n+  value = aws_subnet.ci_subnet_c.id\n }\n \n output \"vpc_id\" {\n-  value = \"${aws_vpc.ci.id}\"\n+  value = aws_vpc.ci.id\n }\n+\n+output \"vpc_arn\" {\n+  value = aws_vpc.ci.arn\n+}\n+"
      },
      {
        "filename": "modules/network/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -9,3 +9,4 @@ variable \"ci_sub_domain\" {\n variable \"aws_region\" {\n   description = \"The AWS Region\"\n }\n+"
      },
      {
        "filename": "modules/spotfleet/main.tf",
        "additions": 44,
        "deletions": 40,
        "changes": 84,
        "status": "modified",
        "patch": "@@ -1,32 +1,33 @@\n locals {\n-  sub_domain                         = \"${var.ci_sub_domain}\"\n-  root_domain                        = \"${var.root_domain}\"\n-  subnet_id_1                        = \"${var.subnet_id_1}\"\n-  subnet_id_2                        = \"${var.subnet_id_2}\"\n-  server_log_group_arn               = \"${var.server_log_group_arn}\"\n-  agent_log_group_arn                = \"${var.agent_log_group_arn}\"\n-  keypair_name                       = \"${var.keypair_name}\"\n-  cluster_ami_image_id               = \"${var.cluster_ami_image_id}\"\n-  cluster_iam_instance_profile       = \"${var.cluster_iam_instance_profile}\"\n-  cluster_instance_security_group_id = \"${var.cluster_instance_security_group_id}\"\n-  cluster_name                       = \"${var.cluster_name}\"\n-  user_data                          = \"${var.cluster_instance_user_data}\"\n+  sub_domain                         = var.ci_sub_domain\n+  root_domain                        = var.root_domain\n+  subnet_id_1                        = var.subnet_id_1\n+  subnet_id_2                        = var.subnet_id_2\n+  server_log_group_arn               = var.server_log_group_arn\n+  agent_log_group_arn                = var.agent_log_group_arn\n+  keypair_name                       = var.keypair_name\n+  cluster_ami_image_id               = var.cluster_ami_image_id\n+  cluster_iam_instance_profile       = var.cluster_iam_instance_profile\n+  cluster_instance_security_group_id = var.cluster_instance_security_group_id\n+  cluster_name                       = var.cluster_name\n+  user_data                          = var.cluster_instance_user_data\n }\n \n data \"template_file\" \"spotfleet_profile\" {\n-  count    = \"${var.cluster_spot_instance_enabled}\"\n-  template = \"${file(\"${path.module}/templates/spot-fleet.json\")}\"\n+  count    = var.cluster_spot_instance_enabled\n+  template = file(\"${path.module}/templates/spot-fleet.json\")\n \n-  vars {\n-    server_log_group_arn = \"${local.server_log_group_arn}\"\n-    agent_log_group_arn  = \"${local.agent_log_group_arn}\"\n+  vars = {\n+    server_log_group_arn = local.server_log_group_arn\n+    agent_log_group_arn  = local.agent_log_group_arn\n   }\n }\n \n resource \"aws_iam_role\" \"spotfleet\" {\n-  count = \"${var.cluster_spot_instance_enabled}\"\n-  name  = \"ecs-ec2-spotfleet-role\"\n-  tags  = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n+  count = var.cluster_spot_instance_enabled\n+  tags = {\n+    \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+  }\n \n   assume_role_policy = <<EOF\n {\n@@ -43,43 +44,46 @@ resource \"aws_iam_role\" \"spotfleet\" {\n   ]\n }\n EOF\n+\n }\n \n resource \"aws_iam_role_policy\" \"spotfleet\" {\n-  count  = \"${var.cluster_spot_instance_enabled}\"\n-  name   = \"drone-fleet-role\"\n-  role   = \"${aws_iam_role.spotfleet.name}\"\n-  policy = \"${data.template_file.spotfleet_profile.rendered}\"\n+  count = var.cluster_spot_instance_enabled\n+  role = aws_iam_role.spotfleet[0].name\n+  policy = data.template_file.spotfleet_profile[0].rendered\n }\n \n resource \"aws_spot_fleet_request\" \"main\" {\n-  count                               = \"${var.cluster_spot_instance_enabled}\"\n-  iam_fleet_role                      = \"${aws_iam_role.spotfleet.arn}\"\n-  spot_price                          = \"${var.bid_price}\"\n-  allocation_strategy                 = \"${var.allocation_strategy}\"\n-  target_capacity                     = \"${var.target_capacity}\"\n+  count = var.cluster_spot_instance_enabled\n+  iam_fleet_role = aws_iam_role.spotfleet[0].arn\n+  spot_price = var.bid_price\n+  allocation_strategy = var.allocation_strategy\n+  target_capacity = var.target_capacity\n   terminate_instances_with_expiration = true\n-  valid_until                         = \"${var.valid_until}\"\n-  replace_unhealthy_instances         = true\n+  valid_until = var.valid_until\n+  replace_unhealthy_instances = true\n \n   launch_specification {\n-    tags                 = \"${map(\"Name\", \"${local.sub_domain}.${local.root_domain}\")}\"\n-    key_name             = \"${local.keypair_name}\"\n-    ami                  = \"${local.cluster_ami_image_id}\"\n-    iam_instance_profile = \"${local.cluster_iam_instance_profile}\"\n-    subnet_id            = \"${local.subnet_id_1},${local.subnet_id_2}\"\n+    tags = {\n+      \"Name\" = \"${local.sub_domain}.${local.root_domain}\"\n+    }\n+    key_name = local.keypair_name\n+    ami = local.cluster_ami_image_id\n+    iam_instance_profile = local.cluster_iam_instance_profile\n+    subnet_id = \"${local.subnet_id_1},${local.subnet_id_2}\"\n \n-    instance_type = \"${var.instance_type}\"\n+    instance_type = var.instance_type\n \n     root_block_device {\n       volume_type = \"gp2\"\n-      volume_size = \"${var.ec2_volume_size}\"\n+      volume_size = var.ec2_volume_size\n     }\n \n     vpc_security_group_ids = [\n-      \"${local.cluster_instance_security_group_id}\",\n+      local.cluster_instance_security_group_id,\n     ]\n \n-    user_data = \"${local.user_data}\"\n+    user_data = local.user_data\n   }\n }\n+"
      },
      {
        "filename": "modules/spotfleet/output.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "removed",
        "patch": "@@ -1 +0,0 @@\n-"
      },
      {
        "filename": "modules/spotfleet/variables.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n variable \"ec2_volume_size\" {\n-  default     = \"100\"\n+  default     = 100\n   description = \"Size of ec2 disk in GB\"\n }\n \n@@ -74,3 +74,4 @@ variable \"cluster_spot_instance_enabled\" {\n variable \"cluster_instance_user_data\" {\n   description = \"User data for launching new spot instance\"\n }\n+"
      },
      {
        "filename": "outputs.tf",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -1,16 +1,16 @@\n-output \"ci_server_url\" {\n-  description = \"public accessible url of the ci\"\n-  value       = \"${module.load_balancer.url_443}\"\n-}\n-\n output \"ci_db_root_password\" {\n-  value       = \"${module.ci_db.root_password}\"\n+  value       = module.ci_db.root_password\n   sensitive   = true\n   description = \"RDS database root user password\"\n }\n \n+output \"ci_server_url\" {\n+  value = \"https://${var.ci_sub_domain}.${var.root_domain}\"\n+}\n+\n output \"ci_drone_rpc_secret\" {\n-  value       = \"${random_string.drone_rpc_secret.result}\"\n+  value       = random_string.drone_rpc_secret.result\n   sensitive   = true\n   description = \"The RPC secret for drone server\"\n }\n+"
      },
      {
        "filename": "provider.tf",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -1,12 +1,17 @@\n provider \"aws\" {\n-  version = \"~> 1.59.0\"\n-  region  = \"${var.aws_region}\"\n+  version = \"~> 2.19.0\"\n+  region  = var.aws_region\n }\n \n provider \"random\" {\n-  version = \"~> 2.0.0\"\n+  version = \"~> 2.1.2\"\n }\n \n provider \"template\" {\n-  version = \"~> 2.0\"\n+  version = \"~> 2.1.2\"\n }\n+\n+provider \"archive\" {\n+  version = \"~> 1.2.2\"\n+}\n+"
      },
      {
        "filename": "variables.tf",
        "additions": 27,
        "deletions": 18,
        "changes": 45,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@ variable \"db_identifier\" {\n }\n \n variable \"db_storage_size\" {\n-  default     = \"10\"\n+  default     = 10\n   description = \"Storage size of RDS instance in GB\"\n }\n \n@@ -52,7 +52,7 @@ variable \"keypair_public_key\" {\n }\n \n variable \"default_ttl\" {\n-  default     = \"300\"\n+  default     = 300\n   description = \"Default ttl for domain records\"\n }\n \n@@ -63,16 +63,16 @@ variable \"ecs_cluster_instance_type\" {\n \n variable \"ecs_min_instances_count\" {\n   description = \"Min container instances running\"\n-  default     = \"1\"\n+  default     = 1\n }\n \n variable \"ecs_max_instances_count\" {\n   description = \"Max container instances running.\"\n-  default     = \"1\"\n+  default     = 1\n }\n \n variable \"ecs_optimized_ami\" {\n-  type = \"map\"\n+  type = map(string)\n \n   #\n   # Launching an Amazon ECS Container Instance\n@@ -102,42 +102,42 @@ variable \"ecs_optimized_ami\" {\n \n variable \"ecs_container_cpu\" {\n   description = \"Requested ecs container CPU\"\n-  default     = \"2000\"\n+  default     = 2000\n }\n \n variable \"ecs_container_memory\" {\n   description = \"Requested ecs container memory\"\n-  default     = \"768\"\n+  default     = 768\n }\n \n variable \"fargate_task_cpu\" {\n-  default     = \"256\"\n+  default     = 256\n   description = \" [Fargate task CPU and memory at the task level](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-cpu-memory-error.html)\"\n }\n \n variable \"fargate_task_memory\" {\n   description = \" [Fargate task CPU and memory at the task level](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-cpu-memory-error.html)\"\n-  default     = \"512\"\n+  default     = 512\n }\n \n variable \"drone_server_port\" {\n   description = \"Port of Drone Server\"\n-  default     = \"80\"\n+  default     = 443\n }\n \n variable \"drone_agent_port\" {\n   description = \"Port of drone agent.\"\n-  default     = \"80\"\n+  default     = 80\n }\n \n variable \"drone_agent_min_count\" {\n   description = \"Min drone agens running.\"\n-  default     = \"1\"\n+  default     = 1\n }\n \n variable \"drone_agent_max_count\" {\n   description = \"Max drone agents running.\"\n-  default     = \"2\"\n+  default     = 2\n }\n \n variable \"drone_version\" {\n@@ -168,30 +168,30 @@ variable \"env_drone_webhook_list\" {\n \n variable \"env_drone_logs_debug\" {\n   description = \"String literal for verboser output from logs \"\n-  default     = \"false\"\n+  default     = false\n }\n \n variable \"env_drone_repo_filter\" {\n   description = \"whitliest repositories\"\n }\n \n variable \"ec2_volume_size\" {\n-  default     = \"25\"\n+  default     = 30\n   description = \"Size of ec2 disk in GB\"\n }\n \n variable \"cluster_spot_instance_enabled\" {\n-  default     = \"1\"\n+  default     = 1\n   description = \"Seed Cluster with spot priced ec2 instances 0/1 true/false\"\n }\n \n variable \"spot_fleet_target_capacity\" {\n-  default     = \"1\"\n+  default     = 1\n   description = \"Target number of spot instances to seed the cluster with\"\n }\n \n variable \"spot_fleet_bid_price\" {\n-  default     = \"0.007\"\n+  default     = 0.007\n   description = \"Bid price for cluster resources\"\n }\n \n@@ -204,3 +204,12 @@ variable \"spot_fleet_valid_until\" {\n   description = \"Amount of time a spot fleet bid should stay active\"\n   default     = \"2022-02-22T02:02:02Z\"\n }\n+\n+variable \"update_dns_lambda_name\" {\n+  description = \"Function name for lambda used to update DNS of drone server\"\n+  default     = \"update_drone_ci_domain\"\n+}\n+\n+variable \"env_drone_secret\" {\n+  description = \"A string containing GitHub oauth Client Secret.\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "versions.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+\n+terraform {\n+  required_version = \">= 0.12\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "policy"
    ],
    "codes": ["aws", "remove_loadbalancer"],
    "notes": "The commit contains many changes but the cost-related one is removing ALB"
  },
  {
    "url": "https://github.com/eutambem/eutambem-serverless/commit/43182470f02a463a4b9ee5ed3ec899f5d7de9653",
    "files": [
      {
        "filename": "api/database/main.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -18,4 +18,7 @@ resource \"aws_rds_cluster\" \"eutambem_cluster\" {\n   engine_mode             = \"serverless\"\n   skip_final_snapshot     = true\n   db_subnet_group_name    = \"${aws_db_subnet_group.eutambem_db_subnet.name}\"\n+  scaling_configuration {\n+    max_capacity          = 4\n+  }\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "cluster"
    ],
    "codes": ["aws", "reduce_rds_capacity"],
    "notes": "Explicitly configure the RDS cluster scaling_configuration max_capacity to limit it to 4"
  },
  {
    "url": "https://github.com/openfun/jitsi-meet-torture-rocket/commit/349c94aeffffb4eef513107d281d59ef6dd33962",
    "files": [
      {
        "filename": "terraform/cloud-init.sh",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -1,7 +1,12 @@\n #!/bin/sh\n \n-# Launch Jitsi-Meet-Torture\n+# Move into the Docker working directory\n cd /root/docker\n+\n+# Configure env variables at runtime\n+sed -i -e \"s/MALLEUS_ROOM_NAME_PREFIX=.*/MALLEUS_ROOM_NAME_PREFIX=${room_prefix}${stack}-/\" .env\n+\n+# Launch Jitsi-Meet-Torture\n docker-compose up -d selenium-hub\n docker-compose up -d selenium-node --scale selenium-node=3\n docker-compose up jitsi-torture"
      },
      {
        "filename": "terraform/instance.tf",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -6,12 +6,12 @@ data \"scaleway_instance_image\" \"jmt_image\" {\n # We create one IP address for each instance that we will\n # deploy on Scaleway\n resource \"scaleway_instance_ip\" \"jmt_ip\" {\n-  count = var.jmt_replicas\n+  count = var.jmt_replicas_per_stack * var.jmt_stacks\n }\n \n # We create the JMT Scaleway instances\n resource \"scaleway_instance_server\" \"jmt_instance\" {\n-  count = var.jmt_replicas\n+  count = var.jmt_replicas_per_stack * var.jmt_stacks\n \n   name  = \"jmt-${count.index}\"\n   type  = var.jmt_instance_size\n@@ -21,7 +21,10 @@ resource \"scaleway_instance_server\" \"jmt_instance\" {\n   # Configuration options of the instance with cloud-init\n   # are described on https://cloudinit.readthedocs.io/en/latest\n   user_data = {\n-    cloud-init = file(\"${path.module}/cloud-init.sh\")\n+    cloud-init = templatefile(\"${path.module}/cloud-init.sh\", { \n+        stack = count.index % var.jmt_stacks\n+        room_prefix = var.jmt_room_prefix\n+    })\n   }\n }\n "
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -7,9 +7,23 @@ variable \"jmt_instance_size\" {\n   default = \"DEV1-M\"\n }\n \n-variable \"jmt_replicas\" {\n+variable \"jmt_replicas_per_stack\" {\n   type        = number\n-  description = \"The number of JMT instances to deploy\"\n+  description = \"The number of JMT instances per stack to deploy\"\n \n   default = 2\n }\n+\n+variable \"jmt_stacks\" {\n+  type        = number\n+  description = \"The number of stacks of JMT instances to deploy\"\n+\n+  default = 2\n+}\n+\n+variable \"jmt_room_prefix\" {\n+  type        = string\n+  description = \"The prefix of the rooms for the JMT tests\"\n+\n+  default = \"scalingteam\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["scaleway", "not_relevant"],
    "notes": "'Cheap' mentioned in the commit message only refers to using cheap instances, there is no underlying cost smell"
  },
  {
    "url": "https://github.com/bculberson/btc2snowflake/commit/9f8227bf53ebc2b1bb0b99d0697f9f66eed7ab6d",
    "files": [
      {
        "filename": "core/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -196,7 +196,7 @@ resource \"aws_instance\" \"daemon\" {\n \n resource \"aws_ebs_volume\" \"empty_ebs_volume\" {\n   availability_zone = aws_instance.daemon.availability_zone\n-  type              = \"gp3\"\n+  type              = \"st1\"\n   size              = 512\n \n   tags = {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_volume"],
    "notes": "Move from gp3 to st1"
  },
  {
    "url": "https://github.com/HumanCellAtlas/dcp-monitoring/commit/4fd89da7e37ce7f22d920e3584761f702383a8ba",
    "files": [
      {
        "filename": "terraform/modules/account-alerts/lambda.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"lambda_errors\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"dcp-ops\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"Account-wide AWS Lambda Errors\"\n }\n EOF\n \n@@ -33,7 +33,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"lambda_throttles\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"dcp-ops\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"Account-wide AWS Lambda Throttles\"\n }\n EOF\n "
      },
      {
        "filename": "terraform/modules/account-alerts/logs.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"logs_health\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"dcp-security\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"Logs Proxy and Elasticsearch availability healthcheck\"\n }\n EOF\n \n@@ -37,7 +37,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"logs_free_space\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"dcp-security\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"Logs Elasticsearch cluster free space\"\n }\n EOF\n "
      },
      {
        "filename": "terraform/modules/account-alerts/rds.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"rds_low_disk\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"dcp-ops\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"AWS Relational Database Service node low on disk\"\n }\n EOF\n \n@@ -33,7 +33,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"rds_cpu_high\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"dcp-ops\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"AWS Relational Database Service node CPU utilization high\"\n }\n EOF\n "
      },
      {
        "filename": "terraform/modules/env-alerts/analysis.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"analysis\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"mintteam\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"DCP Analysis service availability healthcheck\"\n }\n EOF\n "
      },
      {
        "filename": "terraform/modules/env-alerts/dcp.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"dcp\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"dcp-ops\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"Status of aggregated DCP availability healthchecks\"\n }\n EOF\n "
      },
      {
        "filename": "terraform/modules/env-alerts/dss.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -12,6 +12,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"dss\" {\n {\n   \"slack_channel\": \"data-store-eng\",\n   \"environment\": \"${var.env}\"\n+  \"description\": \"DCP Data Storage Service availability healthcheck\"\n }\n EOF\n "
      },
      {
        "filename": "terraform/modules/env-alerts/ingest.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"ingest\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"ingestion-service\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"DCP Ingest Service availability healthcheck\"\n }\n EOF\n "
      },
      {
        "filename": "terraform/modules/env-alerts/upload.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"upload\" {\n   alarm_description = <<EOF\n {\n   \"slack_channel\": \"upload-service\",\n-  \"environment\": \"${var.env}\"\n+  \"description\": \"DCP Upload Service availability healthcheck\"\n }\n EOF\n "
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/NDPH-ARTS/mts-trial-deployment-config/commit/0cb5e776b8695da57892560c89010a8abd817afc",
    "files": [
      {
        "filename": ".github/workflows/terraform-plan-apply.yml",
        "additions": 54,
        "deletions": 35,
        "changes": 89,
        "status": "modified",
        "patch": "@@ -19,6 +19,9 @@ jobs:\n       - name: Check changed files\n         id: calc_files_diff\n         run: |\n+          set -o errexit\n+          set -o nounset\n+\n           git fetch origin main:localmain\n \n           # Gets changed json files excluding the json schema\n@@ -34,6 +37,9 @@ jobs:\n       - name: Set matrix for TF plan and apply\n         id: set-matrix\n         run: |\n+          set -o errexit\n+          set -o nounset\n+\n           FILES=\"${{ steps.calc_files_diff.outputs.diff }}\"\n           JSON=\"{\\\"include\\\":[\"\n \n@@ -64,6 +70,9 @@ jobs:\n             practitionerImage=`echo $(jq -r '.practitioner_service.image_name' ./$path)`\n             practitionerImageTag=`echo $(jq -r '.practitioner_service.image_tag' ./$path)`\n \n+            roleImage=`echo $(jq -r '.role_service.image_name' ./$path)`\n+            roleImageTag=`echo $(jq -r '.role_service.image_tag' ./$path)`\n+\n             initServiceImage=`echo $(jq -r '.init_service.image_name' ./$path)`\n             initServiceImageTag=`echo $(jq -r '.init_service.image_tag' ./$path)`\n \n@@ -89,6 +98,7 @@ jobs:\n             # Apps\n             MatrixItem=\"$MatrixItem \\\"site_image_name\\\": \\\"$siteImage\\\",\\\"site_image_tag\\\": \\\"$siteImageTag\\\",\"\n             MatrixItem=\"$MatrixItem \\\"practitioner_image_name\\\": \\\"$practitionerImage\\\",\\\"practitioner_image_tag\\\": \\\"$practitionerImageTag\\\",\"\n+            MatrixItem=\"$MatrixItem \\\"role_image_name\\\": \\\"$roleImage\\\",\\\"role_image_tag\\\": \\\"$roleImageTag\\\",\"\n             MatrixItem=\"$MatrixItem \\\"init_service_image_name\\\": \\\"$initServiceImage\\\",\\\"init_service_image_tag\\\": \\\"$initServiceImageTag\\\",\"\n \n             # Spring cloud properties\n@@ -147,51 +157,51 @@ jobs:\n       - name: Terraform Format\n         run: terraform fmt -check\n \n+      - name: Prepare tfvars file\n+        run: |\n+          set -o errexit\n+          set -o nounset\n+\n+          echo \"trial_name=\\\"${{ matrix.trial_name }}\\\"\n+          site_image_name=\\\"${{ matrix.site_image_name }}\\\"\n+          practitioner_image_name=\\\"${{ matrix.practitioner_image_name }}\\\"\n+          role_image_name=\\\"${{ matrix.role_image_name }}\\\"\n+          init_service_image_name=\\\"${{ matrix.init_service_image_name }}\\\"\n+          sc_gateway_image_name=\\\"${{ matrix.sc_gateway_image_name }}\\\"\n+          sc_discovery_image_name=\\\"${{ matrix.sc_discovery_image_name }}\\\"\n+          sc_config_image_name=\\\"${{ matrix.sc_config_image_name }}\\\"\n+          site_image_tag=\\\"${{ matrix.site_image_tag }}\\\"\n+          practitioner_image_tag=\\\"${{ matrix.practitioner_image_tag }}\\\"\n+          role_image_tag=\\\"${{ matrix.role_image_tag }}\\\"\n+          init_service_image_tag=\\\"${{ matrix.init_service_image_tag }}\\\"\n+          sc_gateway_image_tag=\\\"${{ matrix.sc_gateway_image_tag }}\\\"\n+          sc_discovery_image_tag=\\\"${{ matrix.sc_discovery_image_tag }}\\\"\n+          sc_config_image_tag=\\\"${{ matrix.sc_config_image_tag }}\\\"\n+          sc_config_git_uri=\\\"${{ matrix.sc_config_git_uri }}\\\"\n+          sc_config_search_paths=\\\"${{ matrix.sc_config_search_paths }}\\\"\n+          spring_profile=\\\"${{ matrix.spring_profile }}\\\"\n+          spring_config_label=\\\"${{ matrix.spring_config_label }}\\\"\n+          \" >> ${{ matrix.trial_name }}.tfvars\n+\n+          cat ${{ matrix.trial_name }}.tfvars\n+\n       # Plan TF\n       - name: Plan TF for \"${{ matrix.trial_name }}\"\n         run: |\n-          terraform plan -var=\"trial_name=${{ matrix.trial_name }}\" \\\n-                         -var=\"site_image_name=${{ matrix.site_image_name }}\" \\\n-                         -var=\"practitioner_image_name=${{ matrix.practitioner_image_name }}\" \\\n-                         -var=\"init_service_image_name=${{ matrix.init_service_image_name }}\" \\\n-                         -var=\"sc_gateway_image_name=${{ matrix.sc_gateway_image_name }}\" \\\n-                         -var=\"sc_discovery_image_name=${{ matrix.sc_discovery_image_name }}\" \\\n-                         -var=\"sc_config_image_name=${{ matrix.sc_config_image_name }}\" \\\n-                         -var=\"site_image_tag=${{ matrix.site_image_tag }}\" \\\n-                         -var=\"practitioner_image_tag=${{ matrix.practitioner_image_tag }}\" \\\n-                         -var=\"init_service_image_tag=${{ matrix.init_service_image_tag }}\" \\\n-                         -var=\"sc_gateway_image_tag=${{ matrix.sc_gateway_image_tag }}\" \\\n-                         -var=\"sc_discovery_image_tag=${{ matrix.sc_discovery_image_tag }}\" \\\n-                         -var=\"sc_config_image_tag=${{ matrix.sc_config_image_tag }}\" \\\n-                         -var=\"sc_config_git_uri=${{ matrix.sc_config_git_uri }}\" \\\n-                         -var=\"sc_config_search_paths=${{ matrix.sc_config_search_paths }}\" \\\n-                         -var=\"spring_profile=${{ matrix.spring_profile }}\" \\\n-                         -var=\"spring_config_label=${{ matrix.spring_config_label }}\" \\\n+          set -o errexit\n+          set -o nounset\n \n+          terraform plan -var-file=${{ matrix.trial_name }}.tfvars\n \n       # Apply, only on merge to main\n       - name: Apply TF for \"${{ matrix.trial_name }}\"\n         # if: github.ref == 'refs/heads/main'\n         run: |\n+          set -o errexit\n+          set -o nounset\n+\n           echo \"Merged to main. applying trial's RG\"\n-          terraform apply -var=\"trial_name=${{ matrix.trial_name }}\" \\\n-                          -var=\"site_image_name=${{ matrix.site_image_name }}\" \\\n-                          -var=\"practitioner_image_name=${{ matrix.practitioner_image_name }}\" \\\n-                          -var=\"init_service_image_name=${{ matrix.init_service_image_name }}\" \\\n-                          -var=\"sc_gateway_image_name=${{ matrix.sc_gateway_image_name }}\" \\\n-                          -var=\"sc_discovery_image_name=${{ matrix.sc_discovery_image_name }}\" \\\n-                          -var=\"sc_config_image_name=${{ matrix.sc_config_image_name }}\" \\\n-                          -var=\"site_image_tag=${{ matrix.site_image_tag }}\" \\\n-                          -var=\"practitioner_image_tag=${{ matrix.practitioner_image_tag }}\" \\\n-                          -var=\"init_service_image_tag=${{ matrix.init_service_image_tag }}\" \\\n-                          -var=\"sc_gateway_image_tag=${{ matrix.sc_gateway_image_tag }}\" \\\n-                          -var=\"sc_discovery_image_tag=${{ matrix.sc_discovery_image_tag }}\" \\\n-                          -var=\"sc_config_image_tag=${{ matrix.sc_config_image_tag }}\" \\\n-                          -var=\"sc_config_git_uri=${{ matrix.sc_config_git_uri }}\" \\\n-                          -var=\"sc_config_search_paths=${{ matrix.sc_config_search_paths }}\" \\\n-                          -var=\"spring_profile=${{ matrix.spring_profile }}\" \\\n-                          -var=\"spring_config_label=${{ matrix.spring_config_label }}\" \\\n-                          -auto-approve\n+          terraform apply -var-file=${{ matrix.trial_name }}.tfvars -auto-approve\n \n           # '-raw' is important so no other characters will be added\n           ui_storage_conn_string=$(terraform output -raw ui_conn_string)\n@@ -208,11 +218,17 @@ jobs:\n       # Get release zip file\n       - name: UI component -  Get assets zip\n         run: |\n+          set -o errexit\n+          set -o nounset\n+\n           wget https://github.com/NDPH-ARTS/mts-trial-ui/releases/download/latest/mts-trial-ui.zip\n \n       # Unzip & Customzie (replace values)\n       - name: UI component - Unzip and modify\n         run: |\n+          set -o errexit\n+          set -o nounset\n+\n           unzip mts-trial-ui.zip\n \n           sed -i 's/{{clientId}}/${{ env.ui_client_id }}/' mts-trial-ui/index.html\n@@ -222,4 +238,7 @@ jobs:\n       # Upload to storage account (to $web container)\n       - name: UI component - Upload to storage\n         run: |\n+          set -o errexit\n+          set -o nounset\n+\n           az storage blob upload-batch --connection-string ${ui_storage_conn_string} --source mts-trial-ui --destination '$web'"
      },
      {
        "filename": "sample_trial/definition.json",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n {\n     \"name\": \"trial0\",\n-    \"id\": \"t01\",\n+    \"id\": \"t02\",\n     \"version\": 1,\n     \"rootUser\": \"jondoe1@contoso.com\",\n     \"tenant_id\": \"5d23383f-2acb-448e-8353-4b4573b82276\","
      },
      {
        "filename": "terraform/main.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -7,6 +7,8 @@ module \"trial_rg\" {\n   site_image_tag          = var.site_image_tag\n   practitioner_image_name = var.practitioner_image_name\n   practitioner_image_tag  = var.practitioner_image_tag\n+  role_image_name         = var.role_image_name\n+  role_image_tag          = var.role_image_tag\n \n   init_service_image_name = var.init_service_image_name\n   init_service_image_tag  = var.init_service_image_tag"
      },
      {
        "filename": "terraform/trial_rg/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -17,8 +17,8 @@ resource \"azurerm_app_service_plan\" \"apps_service_plan\" {\n   reserved            = true\n \n   sku {\n-    tier = \"Standard\"\n-    size = \"S1\"\n+    tier = \"PremiumV2\"\n+    size = \"P1v2\"\n   }\n \n   depends_on = ["
      },
      {
        "filename": "terraform/trial_rg/modules/fhir/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -44,6 +44,7 @@ resource \"azurerm_app_service\" \"fhir_server\" {\n \n   app_settings = {\n     FHIRServer__Security__Enabled                     = \"false\"\n+    # TODO: replace with KeyVault reference\n     SqlServer__ConnectionString                       = \"Server=tcp:${module.fhir_sql_server.sqlserver_name}.database.windows.net,1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=${module.fhir_sql_server.db_user};Password=${module.fhir_sql_server.db_password};MultipleActiveResultSets=False;Connection Timeout=30;\"\n     SqlServer__AllowDatabaseCreation                  = \"true\"\n     SqlServer__Initialize                             = \"true\""
      },
      {
        "filename": "terraform/trial_rg/modules/kv/main.tf",
        "additions": 16,
        "deletions": 14,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -15,19 +15,21 @@ resource \"azurerm_key_vault\" \"trial_keyvault\" {\n   }\n }\n \n+# TODO: correct this and uncomment\n+\n # Connect KV to a new private endpoint\n-module \"private_endpoint\" {\n-  source                = \"../privateendpoint\"\n-  trial_name            = var.trial_name\n-  rg_name               = var.rg_name\n-  resource_name         = azurerm_key_vault.trial_keyvault.name\n-  resource_id           = azurerm_key_vault.trial_keyvault.id\n-  vnet_id               = var.vnet_id\n-  subnet_id             = var.subnet_id\n-  kv                    = true\n-  application           = \"kv\"\n+# module \"private_endpoint\" {\n+#   source                = \"../privateendpoint\"\n+#   trial_name            = var.trial_name\n+#   rg_name               = var.rg_name\n+#   resource_name         = azurerm_key_vault.trial_keyvault.name\n+#   resource_id           = azurerm_key_vault.trial_keyvault.id\n+#   vnet_id               = var.vnet_id\n+#   subnet_id             = var.subnet_id\n+#   kv                    = true\n+#   application           = \"kv\"\n \n-  depends_on = [\n-    azurerm_key_vault.trial_keyvault,\n-  ]\n-}\n\\ No newline at end of file\n+#   depends_on = [\n+#     azurerm_key_vault.trial_keyvault,\n+#   ]\n+# }"
      },
      {
        "filename": "terraform/trial_rg/modules/privateendpoint/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n # Create a Resource's Private DNS Zone\n resource \"azurerm_private_dns_zone\" \"endpoint-dns-private-zone\" {\n-  name                = var.sql ? \"${var.resource_name}.database.windows.net\" : \"${var.resource_name}.vault.azure.net\"\n-  # name                = \"privatelink.database.windows.net\"\n+  # name                = var.sql ? \"${var.resource_name}.database.windows.net\" : \"${var.resource_name}.vault.azure.net\"\n+  name                = var.sql ? \"privatelink.database.windows.net\" : \"privatelink.vaultcore.azure.net\"\n   resource_group_name = var.rg_name\n }\n "
      },
      {
        "filename": "terraform/trial_rg/modules/privateendpoint/outputs.tf",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,4 +1,6 @@\n-output \"private_link_endpoint_ip\" {\n-  description = \"Private Link Endpoint IP\"\n-  value = data.azurerm_private_endpoint_connection.endpoint-connection.private_service_connection.0.private_ip_address\n-}\n\\ No newline at end of file\n+# TODO: currect this and uncomment\n+\n+# output \"private_link_endpoint_ip\" {\n+#   description = \"Private Link Endpoint IP\"\n+#   value = data.azurerm_private_endpoint_connection.endpoint-connection.private_service_connection.0.private_ip_address\n+# }\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/trial_rg/modules/sql/main.tf",
        "additions": 33,
        "deletions": 16,
        "changes": 49,
        "status": "modified",
        "patch": "@@ -7,30 +7,47 @@ resource \"azurerm_mssql_server\" \"sql_server\" {\n   version                       = \"12.0\"\n   administrator_login           = var.sql_user\n   administrator_login_password  = var.sql_pass\n-  public_network_access_enabled = false\n+  public_network_access_enabled = true # TODO: set to false when private link works\n+  \n }\n \n # DB\n-resource \"azurerm_sql_database\" \"sqldb\" {\n-  name                = var.db_name\n-  resource_group_name = var.rg_name\n-  location            = var.location\n-  server_name         = azurerm_mssql_server.sql_server.name\n+resource \"azurerm_mssql_database\" \"sqldb\" {\n+  name = var.db_name\n+  server_id = azurerm_mssql_server.sql_server.id\n+  sku_name = \"GP_S_Gen5_2\" # serverless\n+  max_size_gb = 4\n+  auto_pause_delay_in_minutes = -1\n+  min_capacity = 1\n+  # max_capacity = 2\n \n   depends_on = [\n     azurerm_mssql_server.sql_server,\n   ]\n }\n \n+# TODO: currect this and uncomment\n+\n # After the SQL server is deployed, connect it to a new private endpoint\n-module \"private_endpoint\" {\n-  source        = \"../privateendpoint\"\n-  trial_name    = var.trial_name\n-  rg_name       = var.rg_name\n-  resource_name = azurerm_mssql_server.sql_server.name\n-  resource_id   = azurerm_mssql_server.sql_server.id\n-  vnet_id       = var.vnet_id\n-  subnet_id     = var.subnet_id\n-  sql           = true\n-  application   = var.application\n+# module \"private_endpoint\" {\n+#   source        = \"../privateendpoint\"\n+#   trial_name    = var.trial_name\n+#   rg_name       = var.rg_name\n+#   resource_name = azurerm_mssql_server.sql_server.name\n+#   resource_id   = azurerm_mssql_server.sql_server.id\n+#   vnet_id       = var.vnet_id\n+#   subnet_id     = var.subnet_id\n+#   sql           = true\n+#   application   = var.application\n+# }\n+\n+\n+# TODO: delete this when private endpoints work.\n+# Allow access for azure services\n+resource \"azurerm_sql_firewall_rule\" \"example\" {\n+  name                = \"FirewallRule1\"\n+  resource_group_name = azurerm_mssql_server.sql_server.resource_group_name\n+  server_name         = azurerm_mssql_server.sql_server.name\n+  start_ip_address    = \"0.0.0.0\"\n+  end_ip_address      = \"0.0.0.0\"\n }\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/trial_rg/modules/sql/outputs.tf",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -3,10 +3,12 @@ output \"sqlserver_name\" {\n   description = \"The generated sql server name.\"\n }\n \n-output \"private_link_endpoint_ip\" {\n-  description = \"Private Link Endpoint IP\"\n-  value = module.private_endpoint.private_link_endpoint_ip\n-}\n+# TODO: currect this and uncomment\n+\n+# output \"private_link_endpoint_ip\" {\n+#   description = \"Private Link Endpoint IP\"\n+#   value = module.private_endpoint.private_link_endpoint_ip\n+# }\n \n output \"db_user\" {\n   value       = azurerm_mssql_server.sql_server.administrator_login"
      },
      {
        "filename": "terraform/trial_rg/services.tf",
        "additions": 46,
        "deletions": 9,
        "changes": 55,
        "status": "modified",
        "patch": "@@ -11,6 +11,10 @@ module \"trial_app_service_site\" {\n   docker_image        = var.site_image_name\n   docker_image_tag    = var.site_image_tag\n \n+  settings = {\n+    \"WEBSITES_PORT\"               = \"8080\" # The container is listening on 8080\n+  }\n+\n   depends_on = [\n     azurerm_app_service_plan.apps_service_plan,\n   ]\n@@ -29,11 +33,11 @@ module \"trial_app_service_practitioner\" {\n \n   # todo use private endpoint\n   settings = {\n-    \"SPRING_APPLICATION_NAME\"     = \"practitioner-service\",\n-    \"SPRING_PROFILES_ACTIVE\"      = var.spring_profile,\n-    \"SPRING_CLOUD_CONFIG_LABEL\"   = var.spring_config_label,\n+    \"SPRING_APPLICATION_NAME\"     = \"practitioner-service\"\n+    \"SPRING_PROFILES_ACTIVE\"      = var.spring_profile\n+    \"SPRING_CLOUD_CONFIG_LABEL\"   = var.spring_config_label\n     \"SPRING_CLOUD_CONFIG_URI\"     = \"https://${module.trial_sc_config.name}.azurewebsites.net\"\n-    \"WEBSITES_PORT\"               = \"8080\"\n+    \"WEBSITES_PORT\"               = \"8080\" # The container is listening on 8080\n   }\n \n   depends_on = [\n@@ -42,6 +46,31 @@ module \"trial_app_service_practitioner\" {\n   ]\n }\n \n+# Role service\n+module \"trial_app_service_role\" {\n+  source              = \"./modules/genericservice\"\n+  app_name            = \"role\"\n+  rg_name             = azurerm_resource_group.trial_rg.name\n+  app_service_plan_id = azurerm_app_service_plan.apps_service_plan.id\n+  trial_name          = var.trial_name\n+  environment         = var.environment\n+  docker_image        = var.role_image_name\n+  docker_image_tag    = var.role_image_tag\n+\n+  settings = {\n+    \"always_on\"   = \"true\"\n+    \"JDBC_DRIVER\" = \"com.microsoft.sqlserver.jdbc.SQLServerDriver\"\n+    # TODO: replace with KeyVault reference\n+    \"JDBC_URL\"    = \"jdbc:sqlserver://${module.roles_sql_server.sqlserver_name}.database.windows.net:1433;databaseName=ROLES;user=${module.roles_sql_server.db_user};password=${module.roles_sql_server.db_password}\"\n+    \"WEBSITES_PORT\"               = \"8080\" # The container is listening on 8080\n+  }\n+\n+  depends_on = [\n+    azurerm_app_service_plan.apps_service_plan,\n+    module.roles_sql_server,\n+  ]\n+}\n+\n # init service\n # todo: make 1-time service: ARTS-362\n module \"trial_app_service_init\" {\n@@ -55,14 +84,12 @@ module \"trial_app_service_init\" {\n   docker_image_tag    = var.init_service_image_tag\n \n   settings = {\n-    \"always_on\"   = \"true\",\n-    \"JDBC_DRIVER\" = \"com.microsoft.sqlserver.jdbc.SQLServerDriver\",\n-    \"JDBC_URL\"    = \"jdbc:sqlserver://${module.roles_sql_server.sqlserver_name}.database.windows.net:1433;databaseName=ROLES;user=${module.roles_sql_server.db_user};password=${module.roles_sql_server.db_password}\"\n+    \"always_on\"   = \"true\"\n+    \"WEBSITES_PORT\"               = \"8080\" # The container is listening on 8080\n   }\n \n   depends_on = [\n     azurerm_app_service_plan.apps_service_plan,\n-    module.roles_sql_server,\n   ]\n }\n \n@@ -81,6 +108,11 @@ module \"trial_sc_gateway\" {\n   docker_image        = var.sc_gateway_image_name\n   docker_image_tag    = var.sc_gateway_image_tag\n \n+  settings = {\n+    \"SERVER_PORT\"                                = 8080\n+    \"WEBSITES_PORT\"                              = 8080\n+  }\n+\n   depends_on = [\n     azurerm_app_service_plan.apps_service_plan,\n   ]\n@@ -96,6 +128,11 @@ module \"trial_sc_discovery\" {\n   docker_image        = var.sc_discovery_image_name\n   docker_image_tag    = var.sc_discovery_image_tag\n \n+  settings = {\n+    \"SERVER_PORT\"                                = 8080\n+    \"WEBSITES_PORT\"                              = 8080\n+  }\n+\n   depends_on = [\n     azurerm_app_service_plan.apps_service_plan,\n   ]\n@@ -112,7 +149,7 @@ module \"trial_sc_config\" {\n   docker_image_tag    = var.sc_config_image_tag\n \n   settings = {\n-    \"SPRING_CLOUD_CONFIG_SERVER_GIT_URI\"         = var.sc_config_git_uri,\n+    \"SPRING_CLOUD_CONFIG_SERVER_GIT_URI\"         = var.sc_config_git_uri\n     \"SPRING_CLOUD_CONFIG_SERVER_GIT_SEARCHPATHS\" = var.sc_config_search_paths\n     \"SERVER_PORT\"                                = 8080\n     \"WEBSITES_PORT\"                              = 8080"
      },
      {
        "filename": "terraform/trial_rg/variables.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -42,6 +42,17 @@ variable \"practitioner_image_tag\" {\n   default     = \"latest\"\n }\n \n+variable \"role_image_name\" {\n+  type        = string\n+  description = \"role image name (fqdn).\"\n+}\n+\n+variable \"role_image_tag\" {\n+  type        = string\n+  description = \"role image tag.\"\n+  default     = \"latest\"\n+}\n+\n variable \"init_service_image_name\" {\n   type        = string\n   description = \"configuration server image name (fqdn).\""
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -38,6 +38,17 @@ variable \"practitioner_image_tag\" {\n   default     = \"latest\"\n }\n \n+variable \"role_image_name\" {\n+  type        = string\n+  description = \"role image name (fqdn).\"\n+}\n+\n+variable \"role_image_tag\" {\n+  type        = string\n+  description = \"role image tag.\"\n+  default     = \"latest\"\n+}\n+\n variable \"init_service_image_name\" {\n   type        = string\n   description = \"trial configuration service image name (fqdn).\""
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/picatz/terraform-google-nomad/commit/3c48151cd75447f7fbd3e6ce14c491cd28e2442c",
    "files": [
      {
        "filename": "vars.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -47,7 +47,7 @@ variable \"client_instances\" {\n \n variable \"client_machine_type\" {\n   type        = string\n-  default     = \"n1-standard-1\"\n+  default     = \"c2-standard-4\"\n   description = \"The VM machine type for Nomad clients.\"\n }\n "
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/terraform-google-modules/terraform-example-foundation/commit/8391f1bd4322fec04fda7509b537c5f66cddbbd9",
    "files": [
      {
        "filename": "1-org/envs/shared/README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -12,7 +12,7 @@\n | billing\\_account | The ID of the billing account to associate this project with | `string` | n/a | yes |\n | billing\\_data\\_users | Google Workspace or Cloud Identity group that have access to billing data set. | `string` | n/a | yes |\n | create\\_access\\_context\\_manager\\_access\\_policy | Whether to create access context manager access policy | `bool` | `true` | no |\n-| data\\_access\\_logs\\_enabled | Enable Data Access logs of types DATA\\_READ, DATA\\_WRITE and ADMIN\\_READ for all GCP services. Enabling Data Access logs might result in your organization being charged for the additional logs usage. See https://cloud.google.com/logging/docs/audit#data-access | `bool` | `true` | no |\n+| data\\_access\\_logs\\_enabled | Enable Data Access logs of types DATA\\_READ, DATA\\_WRITE for all GCP services. Enabling Data Access logs might result in your organization being charged for the additional logs usage. See https://cloud.google.com/logging/docs/audit#data-access The ADMIN\\_READ logs are enabled by default. | `bool` | `false` | no |\n | default\\_region | Default region for BigQuery resources. | `string` | n/a | yes |\n | dns\\_hub\\_project\\_alert\\_pubsub\\_topic | The name of the Cloud Pub/Sub topic where budget related messages will be published, in the form of `projects/{project_id}/topics/{topic_id}` for the DNS hub project. | `string` | `null` | no |\n | dns\\_hub\\_project\\_alert\\_spent\\_percents | A list of percentages of the budget to alert on when threshold is exceeded for the DNS hub project. | `list(number)` | <pre>[<br>  0.5,<br>  0.75,<br>  0.9,<br>  0.95<br>]</pre> | no |"
      },
      {
        "filename": "1-org/envs/shared/iam.tf",
        "additions": 32,
        "deletions": 18,
        "changes": 50,
        "status": "modified",
        "patch": "@@ -18,35 +18,49 @@\n   Audit Logs - IAM\n *****************************************/\n \n+locals {\n+  enabling_data_logs = var.data_access_logs_enabled ? [\"DATA_WRITE\", \"DATA_READ\"] : []\n+}\n+\n resource \"google_organization_iam_audit_config\" \"org_config\" {\n-  count   = var.data_access_logs_enabled && var.parent_folder == \"\" ? 1 : 0\n+  count   = var.parent_folder == \"\" ? 1 : 0\n   org_id  = var.org_id\n   service = \"allServices\"\n \n-  audit_log_config {\n-    log_type = \"DATA_READ\"\n-  }\n-  audit_log_config {\n-    log_type = \"DATA_WRITE\"\n-  }\n-  audit_log_config {\n-    log_type = \"ADMIN_READ\"\n+  ###################################################################################################\n+  ### Audit logs can generate costs, to know more about it,\n+  ### check the official documentation: https://cloud.google.com/stackdriver/pricing#logging-costs\n+  ### To know more about audit logs, you can find more infos\n+  ### here https://cloud.google.com/logging/docs/audit/configure-data-access\n+  ### To enable DATA_READ and DATA_WRITE audit logs, set `data_access_logs_enabled` to true\n+  ### ADMIN_READ logs are enabled by default.\n+  ####################################################################################################\n+  dynamic \"audit_log_config\" {\n+    for_each = setunion(local.enabling_data_logs, [\"ADMIN_READ\"])\n+    content {\n+      log_type = audit_log_config.key\n+    }\n   }\n }\n \n resource \"google_folder_iam_audit_config\" \"folder_config\" {\n-  count   = var.data_access_logs_enabled && var.parent_folder != \"\" ? 1 : 0\n+  count   = var.parent_folder != \"\" ? 1 : 0\n   folder  = \"folders/${var.parent_folder}\"\n   service = \"allServices\"\n \n-  audit_log_config {\n-    log_type = \"DATA_READ\"\n-  }\n-  audit_log_config {\n-    log_type = \"DATA_WRITE\"\n-  }\n-  audit_log_config {\n-    log_type = \"ADMIN_READ\"\n+  ###################################################################################################\n+  ### Audit logs can generate costs, to know more about it,\n+  ### check the official documentation: https://cloud.google.com/stackdriver/pricing#logging-costs\n+  ### To know more about audit logs, you can find more infos\n+  ### here https://cloud.google.com/logging/docs/audit/configure-data-access\n+  ### To enable DATA_READ and DATA_WRITE audit logs, set `data_access_logs_enabled` to true\n+  ### ADMIN_READ logs are enabled by default.\n+  ####################################################################################################\n+  dynamic \"audit_log_config\" {\n+    for_each = setunion(local.enabling_data_logs, [\"ADMIN_READ\"])\n+    content {\n+      log_type = audit_log_config.key\n+    }\n   }\n }\n "
      },
      {
        "filename": "1-org/envs/shared/variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -97,9 +97,9 @@ variable \"create_access_context_manager_access_policy\" {\n }\n \n variable \"data_access_logs_enabled\" {\n-  description = \"Enable Data Access logs of types DATA_READ, DATA_WRITE and ADMIN_READ for all GCP services. Enabling Data Access logs might result in your organization being charged for the additional logs usage. See https://cloud.google.com/logging/docs/audit#data-access\"\n+  description = \"Enable Data Access logs of types DATA_READ, DATA_WRITE for all GCP services. Enabling Data Access logs might result in your organization being charged for the additional logs usage. See https://cloud.google.com/logging/docs/audit#data-access The ADMIN_READ logs are enabled by default.\"\n   type        = bool\n-  default     = true\n+  default     = false\n }\n \n variable \"log_export_storage_location\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["gcp", "remove_audit_logs"],
    "notes": "Make audit logs configurable, since using more logs may cost more"
  },
  {
    "url": "https://github.com/filhodanuvem/from-dev-to-ops/commit/998be8119321e8812884075b078a1d5fb36cfa69",
    "files": [
      {
        "filename": "2-kubernetes-cluster/tf/eks.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -29,6 +29,7 @@ module \"eks\" {\n      {\n       name                          = \"worker-group-1\"\n       instance_type                 = \"t2.small\"\n+      spot_price                    = \"0.0078\"\n       additional_userdata           = \"echo foo bar\"\n       asg_desired_capacity          = 2\n       additional_security_group_ids = [aws_security_group.worker_group_mgmt_one.id]"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "use_spot_instance"],
    "notes": "Set spot_price to use Spot instances and reduce cost"
  },
  {
    "url": "https://github.com/sivaganesan23/EKS-Terraform/commit/c82a19d98673c1aeeb1fa26afb983acbfbea272f",
    "files": [
      {
        "filename": "aws/ec2-cost-optimization-using-tags/lambda.js",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "status": "added",
        "patch": "@@ -0,0 +1,78 @@\n+const AWS = require('aws-sdk');\n+\n+function getEc2Regions() {\n+    const ec2 = new AWS.EC2({ region: 'ap-south-1' });\n+    return ec2.describeRegions().promise();\n+}\n+\n+function getEc2Instances(regionName, stateName, tagKey, tagValue) {\n+    const ec2 = new AWS.EC2({ region: regionName });\n+    const filters = [];\n+    if (stateName) {\n+        filters.push({\n+            Name: 'instance-state-name',\n+            Values: [\n+                stateName\n+            ]\n+        });\n+    }\n+    if (tagKey && tagValue) {\n+        filters.push({\n+            Name: 'tag:' + tagKey,\n+            Values: [\n+                tagValue\n+            ]\n+        });\n+    }\n+    return ec2.describeInstances({\n+        Filters: filters\n+    }).promise();\n+}\n+\n+function filterStoppableEc2InstanceIds(ec2Reservations) {\n+    return ec2Reservations.map((reservation) => {\n+        return reservation.Instances;\n+    }).reduce((allInstances, instancesInReservation) => {\n+        if (instancesInReservation) {\n+            allInstances = allInstances.concat(instancesInReservation);\n+        }\n+        return allInstances;\n+    }, []).filter((instance) => {\n+        return !instance.Tags || !instance.Tags.find((tag) => {\n+            return tag.Key.toLowerCase() === 'donotstop'\n+        });\n+    }).map((instance) => {\n+        return instance.InstanceId;\n+    })\n+}\n+\n+function stopRunningEc2Instances(instanceIds, regionName) {\n+    const ec2 = new AWS.EC2({ region: regionName });\n+    return ec2.stopInstances({\n+        InstanceIds: instanceIds\n+    }).promise();\n+}\n+\n+\n+exports.handler = async (event) => {\n+    // console.log(JSON.stringify(AWS.config));\n+    try {\n+        let ec2Regions = await getEc2Regions();\n+        for (let i = 0; i < ec2Regions.Regions.length; i++) {\n+            console.log(ec2Regions.Regions[i].RegionName);\n+            let ec2Instances = await getEc2Instances(ec2Regions.Regions[i].RegionName, 'running');\n+            if (!ec2Instances.Reservations || ec2Instances.Reservations === 0) {\n+                continue;\n+            }\n+            let filteredRunningEc2InstanceIds = filterStoppableEc2InstanceIds(ec2Instances.Reservations);\n+            console.log(filteredRunningEc2InstanceIds)\n+            if (filteredRunningEc2InstanceIds && filteredRunningEc2InstanceIds.length) {\n+                let doStopRunningEc2Instances = await stopRunningEc2Instances(filteredRunningEc2InstanceIds, ec2Regions.Regions[i].RegionName);\n+                console.log(doStopRunningEc2Instances);\n+            }\n+        }\n+        return;\n+    } catch (err) {\n+        throw err;\n+    }\n+};\n\\ No newline at end of file"
      },
      {
        "filename": "aws/ec2-cost-optimization-using-tags/main.tf",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "status": "added",
        "patch": "@@ -0,0 +1,83 @@\n+\n+provider \"aws\" {\n+  profile = \"${var.profile}\"\n+  region  = \"${var.region}\"\n+}\n+resource \"aws_iam_role\" \"lambda_role\" {\n+  name = \"EC2-Tag-Checker-Lambda\"\n+\n+  assume_role_policy = <<EOF\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Action\": \"sts:AssumeRole\",\n+      \"Principal\": {\n+        \"Service\": \"lambda.amazonaws.com\"\n+      },\n+      \"Effect\": \"Allow\",\n+      \"Sid\": \"\"\n+    }\n+  ]\n+}\n+EOF\n+}\n+\n+resource \"aws_iam_policy\" \"lambda_policy\" {\n+  name = \"EC2-Tags-Checker\"\n+\n+  policy = <<EOF\n+{\n+   \"Version\": \"2012-10-17\",\n+   \"Statement\": [\n+       {\n+           \"Effect\": \"Allow\",\n+           \"Action\": [\n+               \"ec2:DescribeInstances\",\n+               \"ec2:DescribeRegions\",\n+               \"ec2:StopInstances\"\n+           ],\n+           \"Resource\": \"*\"\n+       }\n+   ]\n+}\n+EOF\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"lambda_basic_policy_attachment\" {\n+    role       = \"${aws_iam_role.lambda_role.name}\"\n+    policy_arn = \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"lambda_main_policy_attachment\" {\n+    role       = \"${aws_iam_role.lambda_role.name}\"\n+    policy_arn = \"${aws_iam_policy.lambda_policy.arn}\"\n+}\n+\n+data \"archive_file\" \"lambda_code\" {\n+  type        = \"zip\"\n+  source_file = \"lambda.js\"\n+  output_path = \"lambda.zip\"\n+}\n+\n+resource \"aws_lambda_function\" \"lambda_function\" {\n+  filename         = \"${data.archive_file.lambda_code.output_path}\"\n+  function_name    = \"EC2-Tags-Checker\"\n+  role             = \"${aws_iam_role.lambda_role.arn}\"\n+  handler          = \"lambda.handler\"\n+  source_code_hash = \"${base64sha256(file(\"${data.archive_file.lambda_code.output_path}\"))}\"\n+  runtime          = \"nodejs8.10\"\n+  timeout          = \"300\"\n+}\n+\n+resource \"aws_cloudwatch_event_rule\" \"daily_check_ec2\" {\n+  name        = \"Daily-Check-EC2-instance-tags\"\n+  description = \"Checks the tags of the EC2 instances and takes action based on expiry\"\n+  schedule_expression = \"cron(0 0 * * ? *)\"\n+}\n+\n+resource \"aws_cloudwatch_event_target\" \"lambda_trigger\" {\n+  rule      = \"${aws_cloudwatch_event_rule.daily_check_ec2.name}\"\n+  target_id = \"TriggerLambda\"\n+  arn       = \"${aws_lambda_function.lambda_function.arn}\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "aws/ec2-cost-optimization-using-tags/variables.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+variable \"profile\" {\n+  description = \"AWS Profile\"\n+  default     = \"default\"\n+}\n+variable \"region\" {\n+  description = \"AWS region\"\n+  default     = \"ap-south-1\"\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "Introduces a Terraform module but there is no underlying cost smell"
  },
  {
    "url": "https://github.com/andreishappy/clouduru-infra/commit/991915ce492e074d8df658aa54c902b52f9c4cc5",
    "files": [
      {
        "filename": "environments/sandbox/main.tf",
        "additions": 18,
        "deletions": 6,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -9,16 +9,28 @@ provider \"aws\" {\n \n terraform {\n   backend \"s3\" {\n-    bucket = \"clouduru-sandbox-terraform-state\"\n+    bucket         = \"clouduru-sandbox-terraform-state\"\n     dynamodb_table = \"clouduru-sandbox-terraform-state\"\n-    key = \"root/terraform.tfstate\"\n-    region = \"eu-west-1\"\n-    role_arn = \"arn:aws:iam::541742792673:role/OrganizationAccountAccessRole\"\n+    key            = \"root/terraform.tfstate\"\n+    region         = \"eu-west-1\"\n+    role_arn       = \"arn:aws:iam::541742792673:role/OrganizationAccountAccessRole\"\n   }\n }\n \n module \"terraform_state\" {\n-  bucket_name = \"clouduru-sandbox-terraform-state\"\n+  bucket_name     = \"clouduru-sandbox-terraform-state\"\n   lock_table_name = \"clouduru-sandbox-terraform-state\"\n-  source = \"../../modules/terraform-state\"\n+  source          = \"../../modules/terraform-state\"\n+}\n+\n+module \"nest_js_poc\" {\n+  source = \"../../modules/nest-js-poc\"\n+}\n+\n+output \"ecr_repository_url\" {\n+  value = module.nest_js_poc.ecr_repository_url\n+}\n+\n+output \"public_url\" {\n+  value = module.nest_js_poc.public_url\n }\n\\ No newline at end of file"
      },
      {
        "filename": "modules/nest-js-poc/ecr-access-policy.json",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "status": "added",
        "patch": "@@ -0,0 +1,33 @@\n+{\n+  \"Version\": \"2008-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Effect\": \"Allow\",\n+      \"Principal\": {\n+        \"AWS\": \"arn:aws:iam::925969095079:user/andrei\"\n+      },\n+      \"Action\": [\n+        \"ecr:BatchCheckLayerAvailability\",\n+        \"ecr:BatchDeleteImage\",\n+        \"ecr:BatchGetImage\",\n+        \"ecr:CompleteLayerUpload\",\n+        \"ecr:DeleteLifecyclePolicy\",\n+        \"ecr:DeleteRepository\",\n+        \"ecr:DeleteRepositoryPolicy\",\n+        \"ecr:DescribeImages\",\n+        \"ecr:DescribeRepositories\",\n+        \"ecr:GetDownloadUrlForLayer\",\n+        \"ecr:GetLifecyclePolicy\",\n+        \"ecr:GetLifecyclePolicyPreview\",\n+        \"ecr:GetRepositoryPolicy\",\n+        \"ecr:InitiateLayerUpload\",\n+        \"ecr:ListImages\",\n+        \"ecr:PutImage\",\n+        \"ecr:PutLifecyclePolicy\",\n+        \"ecr:SetRepositoryPolicy\",\n+        \"ecr:StartLifecyclePolicyPreview\",\n+        \"ecr:UploadLayerPart\"\n+      ]\n+    }\n+  ]\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/nest-js-poc/ecr-lifecycle-policy.json",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "status": "added",
        "patch": "@@ -0,0 +1,29 @@\n+{\n+  \"rules\": [\n+    {\n+      \"rulePriority\": 1,\n+      \"description\": \"Keep image deployed with tag latest\",\n+      \"selection\": {\n+        \"tagStatus\": \"tagged\",\n+        \"tagPrefixList\": [\"latest\"],\n+        \"countType\": \"imageCountMoreThan\",\n+        \"countNumber\": 1\n+      },\n+      \"action\": {\n+        \"type\": \"expire\"\n+      }\n+    },\n+    {\n+      \"rulePriority\": 2,\n+      \"description\": \"Keep last 2 any images\",\n+      \"selection\": {\n+        \"tagStatus\": \"any\",\n+        \"countType\": \"imageCountMoreThan\",\n+        \"countNumber\": 2\n+      },\n+      \"action\": {\n+        \"type\": \"expire\"\n+      }\n+    }\n+  ]\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/nest-js-poc/main.tf",
        "additions": 211,
        "deletions": 0,
        "changes": 211,
        "status": "added",
        "patch": "@@ -0,0 +1,211 @@\n+# ----------\n+# Networking\n+# ----------\n+\n+data \"aws_vpc\" \"default\" {\n+  default = true\n+}\n+\n+data \"aws_subnet_ids\" \"default\" {\n+  vpc_id = data.aws_vpc.default.id\n+}\n+\n+# ---------------\n+# Security Groups\n+# ---------------\n+\n+resource \"aws_security_group\" \"load_balancer\" {\n+  name        = \"load-balancer-sg\"\n+  description = \"controls access to the Application Load Balancer (ALB)\"\n+\n+  ingress {\n+    protocol    = \"tcp\"\n+    from_port   = 80\n+    to_port     = 80\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+\n+  egress {\n+    protocol    = \"-1\"\n+    from_port   = 0\n+    to_port     = 0\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+}\n+\n+resource \"aws_security_group\" \"ecs_tasks\" {\n+  name        = \"ecs-tasks-sg\"\n+  description = \"allow inbound access from the ALB only\"\n+\n+  ingress {\n+    protocol        = \"tcp\"\n+    from_port       = 3000\n+    to_port         = 3000\n+    cidr_blocks     = [\"0.0.0.0/0\"]\n+    security_groups = [aws_security_group.load_balancer.id]\n+  }\n+\n+  egress {\n+    protocol    = \"-1\"\n+    from_port   = 0\n+    to_port     = 0\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+}\n+\n+# -------------\n+# Load Balancer\n+# -------------\n+\n+resource \"aws_lb\" \"nest_js_poc\" {\n+  name               = \"alb\"\n+  subnets            = data.aws_subnet_ids.default.ids\n+  load_balancer_type = \"application\"\n+  security_groups    = [aws_security_group.load_balancer.id]\n+}\n+\n+resource \"aws_lb_listener\" \"nest_js_poc\" {\n+  load_balancer_arn = aws_lb.nest_js_poc.arn\n+  port              = 80\n+  protocol          = \"HTTP\"\n+\n+  default_action {\n+    type             = \"forward\"\n+    target_group_arn = aws_lb_target_group.nest_js_poc.arn\n+  }\n+}\n+\n+resource \"aws_lb_target_group\" \"nest_js_poc\" {\n+  name        = \"nest-js-poc\"\n+  port        = 80\n+  protocol    = \"HTTP\"\n+  vpc_id      = data.aws_vpc.default.id\n+  target_type = \"ip\"\n+\n+  health_check {\n+    healthy_threshold   = \"3\"\n+    interval            = \"90\"\n+    protocol            = \"HTTP\"\n+    matcher             = \"200-299\"\n+    timeout             = \"20\"\n+    path                = \"/\"\n+    unhealthy_threshold = \"2\"\n+  }\n+}\n+\n+# ---\n+# ECR\n+# ---\n+\n+resource \"aws_ecr_repository\" \"repo\" {\n+  name = \"nest-js-poc\"\n+}\n+\n+resource \"aws_ecr_lifecycle_policy\" \"repo-policy\" {\n+  repository = aws_ecr_repository.repo.name\n+  # Keep latest 2 images\n+  policy = file(\"${path.module}/ecr-lifecycle-policy.json\")\n+}\n+\n+# TODO: at the moment this policy allows andrei to access, but no one else\n+resource \"aws_ecr_repository_policy\" \"access-policy\" {\n+  repository = aws_ecr_repository.repo.name\n+  policy = file(\"${path.module}/ecr-access-policy.json\")\n+}\n+# ---\n+# IAM\n+# ---\n+\n+data \"aws_iam_policy_document\" \"ecs_task_execution_role\" {\n+  version = \"2012-10-17\"\n+  statement {\n+    sid     = \"\"\n+    effect  = \"Allow\"\n+    actions = [\"sts:AssumeRole\"]\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"ecs-tasks.amazonaws.com\"]\n+    }\n+  }\n+}\n+\n+resource \"aws_iam_role\" \"ecs_task_execution_role\" {\n+  name               = \"ecs-execution-role\"\n+  assume_role_policy = data.aws_iam_policy_document.ecs_task_execution_role.json\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"ecs_task_execution_role\" {\n+  role       = aws_iam_role.ecs_task_execution_role.name\n+  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\"\n+}\n+\n+# -------\n+# Fargate\n+# -------\n+\n+//data \"template_file\" \"nest-js-app\" {\n+//  template = file(\"${path.module}/task-definition.json\")\n+//  vars = {\n+//    aws_ecr_repository = aws_ecr_repository.repo.repository_url\n+//    tag                = \"latest\"\n+//    app_port           = 80\n+//  }\n+//}\n+//\n+//resource \"aws_ecs_task_definition\" \"service\" {\n+//  family                   = \"nest-js-poc\"\n+//  network_mode             = \"awsvpc\"\n+//  execution_role_arn       = aws_iam_role.ecs_task_execution_role.arn\n+//  cpu                      = 256\n+//  memory                   = 2048\n+//  requires_compatibilities = [\"FARGATE\"]\n+//  container_definitions    = data.template_file.nest-js-app.rendered\n+//}\n+//\n+//resource \"aws_ecs_cluster\" \"nest_js_poc\" {\n+//  name = \"nest-js-pos-cluster\"\n+//}\n+//\n+//resource \"aws_ecs_service\" \"nest_js_poc\" {\n+//  name            = \"nest-js-poc\"\n+//  cluster         = aws_ecs_cluster.nest_js_poc.id\n+//  task_definition = aws_ecs_task_definition.service.arn\n+//  desired_count   = 1\n+//  launch_type     = \"FARGATE\"\n+//\n+//  network_configuration {\n+//    security_groups  = [aws_security_group.ecs_tasks.id]\n+//    subnets          = data.aws_subnet_ids.default.ids\n+//    assign_public_ip = true\n+//  }\n+//\n+//  load_balancer {\n+//    target_group_arn = aws_lb_target_group.nest_js_poc.arn\n+//    container_name   = \"nest-js-poc\"\n+//    container_port   = 3000\n+//  }\n+//\n+//  depends_on = [aws_lb_listener.nest_js_poc, aws_iam_role_policy_attachment.ecs_task_execution_role]\n+//}\n+\n+# ----------\n+# Cloudwatch\n+# ----------\n+\n+resource \"aws_cloudwatch_log_group\" \"nest_js_poc\" {\n+  name = \"awslogs-nest-js-poc\"\n+}\n+\n+\n+# -------\n+# Outputs\n+# -------\n+\n+output \"ecr_repository_url\" {\n+  value = aws_ecr_repository.repo.repository_url\n+}\n+\n+output \"public_url\" {\n+  value = aws_lb.nest_js_poc.dns_name\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/nest-js-poc/task-definition.json",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "status": "added",
        "patch": "@@ -0,0 +1,35 @@\n+[\n+  {\n+    \"name\": \"nest-js-poc\",\n+    \"image\": \"${aws_ecr_repository}:${tag}\",\n+    \"essential\": true,\n+    \"logConfiguration\": {\n+      \"logDriver\": \"awslogs\",\n+      \"options\": {\n+        \"awslogs-region\": \"eu-west-1\",\n+        \"awslogs-stream-prefix\": \"nest-js-service\",\n+        \"awslogs-group\": \"awslogs-nest-js-poc\"\n+      }\n+    },\n+    \"portMappings\": [\n+      {\n+        \"containerPort\": 3000,\n+        \"hostPort\": 3000,\n+        \"protocol\": \"tcp\"\n+      }\n+    ],\n+    \"cpu\": 1,\n+    \"environment\": [\n+    ],\n+    \"ulimits\": [\n+      {\n+        \"name\": \"nofile\",\n+        \"softLimit\": 65536,\n+        \"hardLimit\": 65536\n+      }\n+    ],\n+    \"mountPoints\": [],\n+    \"memory\": 512,\n+    \"volumesFrom\": []\n+  }\n+]\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "cluster"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit does not make cost-related changes"
  },
  {
    "url": "https://github.com/andyfangdz/aws-crawler/commit/7f2ffcc3cbb8538f82cb14377edb08b49105baf7",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n+.dephash\n .terraform\n tmp\n infra/build"
      },
      {
        "filename": ".vscode/settings.json",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n {\n-    \"python.formatting.provider\": \"yapf\"\n+    \"python.formatting.provider\": \"yapf\",\n+    \"python.pythonPath\": \"/usr/local/opt/python3/bin/python3.6\"\n }\n\\ No newline at end of file"
      },
      {
        "filename": "infra/dynamo.tf",
        "additions": 2,
        "deletions": 56,
        "changes": 58,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n resource \"aws_dynamodb_table\" \"crawlexa_last_crawled\" {\n   name           = \"${var.project_name}_last_crawled\"\n-  read_capacity  = 1\n-  write_capacity = 1\n+  read_capacity  = 1000\n+  write_capacity = 25\n   hash_key       = \"url_hash\"\n \n   attribute {\n@@ -13,59 +13,5 @@ resource \"aws_dynamodb_table\" \"crawlexa_last_crawled\" {\n     project     = \"${var.project_name}\"\n     environment = \"production\"\n   }\n-\n-  lifecycle {\n-    ignore_changes = [\n-      \"read_capacity\",\n-      \"write_capacity\",\n-    ]\n-  }\n-}\n-\n-resource \"aws_appautoscaling_target\" \"dynamodb_table_read_target\" {\n-  max_capacity       = 100\n-  min_capacity       = 1\n-  resource_id        = \"table/crawlexa_last_crawled\"\n-  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n }\n \n-resource \"aws_appautoscaling_policy\" \"dynamodb_table_read_policy\" {\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.dynamodb_table_read_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.dynamodb_table_read_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBReadCapacityUtilization\"\n-    }\n-\n-    target_value = 70\n-  }\n-}\n-\n-resource \"aws_appautoscaling_target\" \"dynamodb_table_write_target\" {\n-  max_capacity       = 100\n-  min_capacity       = 1\n-  resource_id        = \"table/crawlexa_last_crawled\"\n-  scalable_dimension = \"dynamodb:table:WriteCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"dynamodb_table_write_policy\" {\n-  name               = \"DynamoDBWriteCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_write_target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.dynamodb_table_write_target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.dynamodb_table_write_target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.dynamodb_table_write_target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBWriteCapacityUtilization\"\n-    }\n-\n-    target_value = 70\n-  }\n-}"
      },
      {
        "filename": "infra/lambda.tf",
        "additions": 40,
        "deletions": 15,
        "changes": 55,
        "status": "modified",
        "patch": "@@ -23,15 +23,16 @@ EOF\n \n # Attach role to Managed Policy\n resource \"aws_iam_policy_attachment\" \"indexer_basicexec\" {\n-  name = \"${var.project_name}_indexer_LambdaExecPolicy\"\n-  roles = [\"${aws_iam_role.lambda_indexer.id}\"]\n+  name       = \"${var.project_name}_indexer_LambdaExecPolicy\"\n+  roles      = [\"${aws_iam_role.lambda_indexer.id}\"]\n   policy_arn = \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n }\n \n resource \"aws_iam_role_policy\" \"dynamo-lambda\" {\n-    name = \"${var.project_name}-dynamo-policy\"\n-    role = \"${aws_iam_role.lambda_indexer.id}\"\n-    policy = <<EOF\n+  name = \"${var.project_name}-dynamo-policy\"\n+  role = \"${aws_iam_role.lambda_indexer.id}\"\n+\n+  policy = <<EOF\n {\n     \"Version\": \"2008-10-17\",\n     \"Statement\": [\n@@ -47,9 +48,10 @@ EOF\n }\n \n resource \"aws_iam_role_policy\" \"s3-lambda\" {\n-    name = \"${var.project_name}-s3-policy\"\n-    role = \"${aws_iam_role.lambda_indexer.id}\"\n-    policy = <<EOF\n+  name = \"${var.project_name}-s3-policy\"\n+  role = \"${aws_iam_role.lambda_indexer.id}\"\n+\n+  policy = <<EOF\n {\n     \"Version\": \"2008-10-17\",\n     \"Statement\": [\n@@ -67,23 +69,46 @@ resource \"aws_iam_role_policy\" \"s3-lambda\" {\n EOF\n }\n \n+resource \"aws_iam_role_policy\" \"sns-lambda\" {\n+  name = \"${var.project_name}-sns-policy\"\n+  role = \"${aws_iam_role.lambda_indexer.id}\"\n+\n+  policy = <<EOF\n+{\n+    \"Version\": \"2008-10-17\",\n+    \"Statement\": [\n+        {\n+            \"Action\": \"SNS:*\",\n+            \"Effect\": \"Allow\",\n+            \"Resource\": \"arn:aws:sns:*:*\",\n+            \"Sid\": \"\"\n+        }\n+    ]\n+}\n+EOF\n+}\n+\n data \"archive_file\" \"src_zip\" {\n   type        = \"zip\"\n   source_dir  = \"../build\"\n   output_path = \"build/lambda-src.zip\"\n }\n \n resource \"aws_lambda_function\" \"indexer\" {\n-  filename         = \"${data.archive_file.src_zip.output_path}\"\n-  function_name    = \"${var.project_name}_indexer\"\n-  role             = \"${aws_iam_role.lambda_indexer.arn}\"\n-  handler          = \"indexer.handler\"\n-  source_code_hash = \"${base64sha256(file(\"${data.archive_file.src_zip.output_path}\"))}\"\n-  runtime          = \"python3.6\"\n+  filename                       = \"${data.archive_file.src_zip.output_path}\"\n+  function_name                  = \"${var.project_name}_indexer\"\n+  role                           = \"${aws_iam_role.lambda_indexer.arn}\"\n+  handler                        = \"indexer.handler\"\n+  source_code_hash               = \"${base64sha256(file(\"${data.archive_file.src_zip.output_path}\"))}\"\n+  runtime                        = \"python3.6\"\n+  reserved_concurrent_executions = 100\n+  timeout                        = 300\n+\n   environment {\n     variables = {\n       LAST_CRAWLED_TABLE = \"${aws_dynamodb_table.crawlexa_last_crawled.name}\"\n-      RAW_BUCKET = \"${aws_s3_bucket.raw_html_files.bucket}\"\n+      RAW_BUCKET         = \"${aws_s3_bucket.raw_html_files.bucket}\"\n+      SNS_TOPIC          = \"${aws_sns_topic.to_crawl.arn}\"\n     }\n   }\n }"
      },
      {
        "filename": "infra/sns.tf",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+resource \"aws_sns_topic\" \"to_crawl\" {\n+  name = \"${var.project_name}-to_crawl\"\n+}\n+\n+resource \"aws_sns_topic_subscription\" \"topic_lambda\" {\n+  topic_arn = \"${aws_sns_topic.to_crawl.arn}\"\n+  protocol  = \"lambda\"\n+  endpoint  = \"${aws_lambda_function.indexer.arn}\"\n+}\n+\n+resource \"aws_lambda_permission\" \"with_sns\" {\n+    statement_id = \"AllowExecutionFromSNS\"\n+    action = \"lambda:InvokeFunction\"\n+    function_name = \"${aws_lambda_function.indexer.arn}\"\n+    principal = \"sns.amazonaws.com\"\n+    source_arn = \"${aws_sns_topic.to_crawl.arn}\"\n+}"
      },
      {
        "filename": "src/indexer.py",
        "additions": 72,
        "deletions": 15,
        "changes": 87,
        "status": "modified",
        "patch": "@@ -8,13 +8,35 @@\n import io\n import re\n from datetime import timezone, datetime\n+from itertools import islice, chain\n+\n+\n+# https://stackoverflow.com/a/24527424/4944625\n+def chunks(iterable, size=10):\n+    iterator = iter(iterable)\n+    for first in iterator:\n+        yield chain([first], islice(iterator, size - 1))\n+\n+\n+ONE_DAY = 24 * 3600 * 1000\n \n s3 = boto3.resource('s3')\n raw_html_bucket = s3.Bucket(os.environ['RAW_BUCKET'])\n \n dynamodb = boto3.resource('dynamodb')\n last_crawled_table = dynamodb.Table(os.environ['LAST_CRAWLED_TABLE'])\n \n+sns = boto3.resource('sns')\n+to_crawl_topic = sns.Topic(os.environ['SNS_TOPIC'])\n+\n+\n+def get_now_utc():\n+    return int(datetime.now(tz=timezone.utc).timestamp() * 1000)\n+\n+\n+def get_url_hash(url):\n+    return hashlib.sha256(url.encode('utf-8')).hexdigest()\n+\n \n def upload_to_s3(url_hash, html):\n     file_obj = io.BytesIO(html.encode('utf-8'))\n@@ -23,31 +45,66 @@ def upload_to_s3(url_hash, html):\n \n def handler(event, context):\n     is_lambda_proxy = False\n+    records = event.get('Records')\n     if event.get('httpMethod') == \"POST\":\n         body = json.loads(event['body'])\n         is_lambda_proxy = True\n+    elif records and 'Sns' in records[0]:\n+        body = json.loads(records[0]['Sns']['Message'])\n     else:\n         body = event\n     url = body['url']\n     url_filter = body['url_filter']\n+    depth_left = body.get('depth_left', 0)\n     r = requests.get(url)\n-    url_hash = hashlib.sha256(url.encode('utf-8')).hexdigest()\n+    url_hash = get_url_hash(url)\n     html = r.text\n     upload_to_s3(url_hash, html)\n-    last_crawled_table.put_item(\n-        Item={\n-            'url_hash': url_hash,\n-            'last_crawled': int(\n-                datetime.now(tz=timezone.utc).timestamp() * 1000)\n-        })\n-    soup = BeautifulSoup(html, 'html.parser')\n-    exp = re.compile(url_filter)\n-    links = list(\n-        u for u in set(\n-            urljoin(url, a.get('href')) for a in soup.find_all('a'))\n-        if exp.match(u))\n-\n-    ret = {'success': True, 'urls': list(links)}\n+    last_crawled_table.put_item(Item={\n+        'url_hash': url_hash,\n+        'last_crawled': get_now_utc()\n+    })\n+    if depth_left > 0:\n+        soup = BeautifulSoup(html, 'html.parser')\n+        exp = re.compile(url_filter)\n+        links = list(\n+            u for u in set(\n+                urljoin(url, a.get('href')) for a in soup.find_all('a'))\n+            if exp.match(u))\n+\n+        should_crawl = []\n+        for chunk in chunks(links):\n+            urls_in_chunk = list(chunk)\n+            response = dynamodb.batch_get_item(\n+                RequestItems={\n+                    os.environ['LAST_CRAWLED_TABLE']: {\n+                        'Keys': [{\n+                            'url_hash': get_url_hash(url)\n+                        } for url in urls_in_chunk],\n+                        'ConsistentRead':\n+                        False\n+                    }\n+                })\n+            last_crawled = {\n+                obj['url_hash']: int(obj['last_crawled'])\n+                for obj in response['Responses'][os.environ[\n+                    'LAST_CRAWLED_TABLE']]\n+            }\n+            for url in urls_in_chunk:\n+                url_hash = get_url_hash(url)\n+                if url_hash not in last_crawled or last_crawled[url_hash] <= get_now_utc(\n+                ) - ONE_DAY:\n+                    should_crawl.append(url)\n+        for url in should_crawl:\n+            to_crawl_topic.publish(\n+                Message=json.dumps({\n+                    'url': url,\n+                    'url_filter': url_filter,\n+                    'depth_left': depth_left - 1\n+                }))\n+        ret = {'success': True, 'new_crawled': len(should_crawl)}\n+    else:\n+        ret = {'success': True}\n     if is_lambda_proxy:\n         return {'statusCode': 200, 'body': json.dumps(ret)}\n     return ret"
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": ["azure", "not_relevant"],
    "notes": "The commit does not contain enough context to determine what costs are saved"
  },
  {
    "url": "https://github.com/mudathirlawal/azure-terraform-packer-iac/commit/587d3a91c12aae8f0dd4b34a46d03f919ea385c6",
    "files": [
      {
        "filename": "infrastructure-desc/main.tf",
        "additions": 134,
        "deletions": 0,
        "changes": 134,
        "status": "modified",
        "patch": "@@ -0,0 +1,134 @@\n+provider \"azurerm\" {\n+  features {}\n+}\n+\n+resource \"azurerm_resource_group\" \"main\" {\n+  name     = \"${var.prefix}-resources\"\n+  location = var.location\n+}\n+\n+resource \"azurerm_virtual_network\" \"main\" {\n+  name                = \"${var.prefix}-network\"\n+  address_space       = [\"10.0.0.0/16\"]\n+  location            = azurerm_resource_group.main.location\n+  resource_group_name = azurerm_resource_group.main.name\n+}\n+\n+resource \"azurerm_subnet\" \"internal\" {\n+  name                 = \"${var.prefix}-sbn\"\n+  resource_group_name  = azurerm_resource_group.main.name\n+  virtual_network_name = azurerm_virtual_network.main.name\n+  address_prefixes     = [\"10.0.1.0/24\"]\n+}\n+\n+resource \"azurerm_network_security_group\" \"main\" {\n+  name                = \"${var.prefix}-nsg\"\n+  location            = azurerm_resource_group.main.location\n+  resource_group_name = azurerm_resource_group.main.name\n+\n+  security_rule {\n+    name                       = \"public-inbound-rule\"\n+    priority                   = 100\n+    direction                  = \"Inbound\"\n+    access                     = \"Deny\"\n+    protocol                   = \"Tcp\"\n+    source_port_range          = \"*\"\n+    destination_port_range     = \"*\"\n+    source_address_prefix      = \"*\"\n+    destination_address_prefix = \"*\"\n+  }\n+\n+  tags = {\n+    environment = \"Production\"\n+  }\n+}\n+\n+resource \"azurerm_network_interface\" \"main\" {\n+  count               = var.vmCount\n+  name                = \"${var.prefix}-nic-${count.index}\"\n+  resource_group_name = azurerm_resource_group.main.name\n+  location            = azurerm_resource_group.main.location\n+\n+  ip_configuration {\n+    name                          = \"${var.prefix}-sbn\"\n+    subnet_id                     = azurerm_subnet.internal.id\n+    private_ip_address_allocation = \"Dynamic\"\n+  }\n+}\n+\n+resource \"azurerm_public_ip\" \"main\" {\n+  name                = \"${var.prefix}PublicIp1\"\n+  resource_group_name = azurerm_resource_group.main.name\n+  location            = azurerm_resource_group.main.location\n+  allocation_method   = \"Static\"\n+\n+  tags = {\n+    environment = \"Production\"\n+  }\n+}\n+\n+resource \"azurerm_lb\" \"main\" {\n+  name                = \"${var.prefix}LoadBalancer\"\n+  location            = var.location\n+  resource_group_name = azurerm_resource_group.main.name\n+\n+  frontend_ip_configuration {\n+    name                 = \"${var.prefix}FrontendPublicIP\"\n+    public_ip_address_id = azurerm_public_ip.main.id\n+  }\n+}\n+\n+resource \"azurerm_lb_backend_address_pool\" \"main\" {\n+  resource_group_name = azurerm_resource_group.main.name\n+  loadbalancer_id     = azurerm_lb.main.id\n+  name                = \"${var.prefix}BackEndAddressPool\"\n+}\n+\n+resource \"azurerm_availability_set\" \"main\" {\n+  name                         = \"${var.prefix}-aset\"\n+  location                     = azurerm_resource_group.main.location\n+  resource_group_name          = azurerm_resource_group.main.name\n+  \n+  tags = {\n+    environment = \"Production\"\n+  }\n+}\n+\n+resource \"azurerm_linux_virtual_machine\" \"main\" {\n+  count                           = var.vmCount \n+  name                            = \"${var.prefix}-vm-${count.index}\"\n+  resource_group_name             = azurerm_resource_group.main.name\n+  location                        = azurerm_resource_group.main.location\n+  size                            = \"var.vmSize\"\n+  admin_username                  = \"var.adminUserName\"\n+  admin_password                  = \"var.adminPassword\"\n+  disable_password_authentication = false\n+  network_interface_ids           = [\n+    azurerm_network_interface.main.id,\n+  ]\n+\n+  source_image_reference {\n+    publisher = \"Canonical\"\n+    offer     = \"UbuntuServer\"\n+    sku       = \"18.04-LTS\"\n+    version   = \"latest\"\n+  }\n+\n+  os_disk {\n+    storage_account_type = \"var.storageAccType\"\n+    caching              = \"ReadWrite\"\n+  }\n+}\n+\n+resource \"azurerm_managed_disk\" \"main\" {\n+  name                 = \"${var.prefix}-mdisk\"\n+  location             = var.location\n+  resource_group_name  = azurerm_resource_group.main.name\n+  storage_account_type = \"var.storageAccType\"\n+  create_option        = \"Empty\"\n+  disk_size_gb         = var.diskSizeGB\n+\n+  tags = {\n+    environment = \"Production\"\n+  }\n+}"
      },
      {
        "filename": "infrastructure-desc/vars.tf",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "status": "modified",
        "patch": "@@ -0,0 +1,40 @@\n+variable \"prefix\" {\n+    description = \"The text that is prefixed to this resource.\"\n+}\n+\n+variable \"location\" {\n+    description = \"Azure Region wherein this resource is deployed.\"\n+    default = \"West US 2\"\n+}\n+\n+variable \"vmSize\" {\n+    description = \"This specifies the desired type of VM.\"\n+    default = \"Standard_B1s\"\n+}\n+\n+variable \"vmCount\" {\n+    description = \"This is the total number of deployed VMs.\"\n+    default = 1\n+}\n+\n+variable \"resourceGrp\" {\n+    description = \"Represents the resource group accommodating the service.\"\n+}\n+\n+variable \"storageAccType\" {\n+    description = \"Specifies the type of disk storage account used.\"\n+    default = \"Standard_LRS\"\n+}\n+\n+variable \"adminUserName\" {\n+    description = \"Admin username for this VM.\"\n+}\n+\n+variable \"adminPassword\" {\n+    description = \"Admin password for this VM.\"\n+}\n+\n+variable \"diskSizeGB\" {\n+    description = \"Specifies the disk size of the managed disk.\"\n+    default = 1\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "domain",
      "saving",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ntk1000/aws-terraform-template/commit/d016b96d89370b8039817fabdfa055576cf6b4cc",
    "files": [
      {
        "filename": "common/all/main.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -7,13 +7,19 @@ module \"audit-trail\" {\n     gip_3 = \"${var.gip_3}\"\n }\n \n+module \"billing-alert\" {\n+    source = \"../../modules/billing-alert\"\n+    email_sns_subscription_arn_us = \"${var.email_sns_subscription_arn_us}\"\n+}\n+\n module \"common\" {\n     source = \"../../\"\n     team = \"${var.team}\"\n     email_sns_subscription_arn = \"${var.email_sns_subscription_arn}\"\n     gip_1 = \"${var.gip_1}\"\n     gip_2 = \"${var.gip_2}\"\n     gip_3 = \"${var.gip_3}\"\n+    email_sns_subscription_arn_us = \"${var.email_sns_subscription_arn_us}\"\n     project = \"${var.project}\"\n     env = \"${var.env}\"\n }"
      },
      {
        "filename": "common/all/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,4 +5,4 @@ variable \"env\" {}\n variable \"gip_1\" {}\n variable \"gip_2\" {}\n variable \"gip_3\" {}\n-\n+variable \"email_sns_subscription_arn_us\" {}"
      },
      {
        "filename": "modules/billing-alert/cloudwatch.tf",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+provider \"aws\" {\n+    alias = \"us\"\n+    region = \"us-east-1\"\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"billing\" {\n+    provider = \"aws.us\"\n+    alarm_name = \"billing alarm lv.${count.index + 1} (${lookup(var.billing-threshold,count.index)} USD)\"\n+    namespace = \"AWS/Billing\"\n+    metric_name = \"EstimatedCharges\"\n+    statistic = \"Maximum\"\n+    evaluation_periods = \"1\"\n+    comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+    period = \"21600\"\n+    threshold = \"${lookup(var.billing-threshold,count.index)}\"\n+    alarm_description = \"Total Charge ${lookup(var.billing-threshold, count.index)} USD\"\n+    alarm_actions = [\"${var.email_sns_subscription_arn_us}\"]\n+    count = \"${var.billing-count}\"\n+}\n+"
      },
      {
        "filename": "modules/billing-alert/variables.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+variable \"billing-count\" {\n+    default = 3\n+}\n+variable \"billing-threshold\" {\n+    default = {\n+        \"0\" = 1\n+        \"1\" = 10\n+        \"2\" = 30\n+    }\n+}\n+variable \"email_sns_subscription_arn_us\" {}"
      },
      {
        "filename": "variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -4,6 +4,7 @@ variable \"email_sns_subscription_arn\" {}\n variable \"gip_1\" {}\n variable \"gip_2\" {}\n variable \"gip_3\" {}\n+variable \"email_sns_subscription_arn_us\" {}\n \n # these variables are defined via Makefile Args(environment variables)\n variable \"project\" {}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/bishoybassem/aws-jenkins/commit/3f27fe4cb4b75bffb7c1cf754f3f22a61cad9bfd",
    "files": [
      {
        "filename": "1_network.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -36,8 +36,9 @@ resource \"aws_route_table_association\" \"main_public_route_table_association\" {\n }\n \n resource \"aws_subnet\" \"main_private\" {\n-  vpc_id     = \"${aws_vpc.main.id}\"\n-  cidr_block = \"10.0.1.128/25\"\n+  vpc_id            = \"${aws_vpc.main.id}\"\n+  cidr_block        = \"10.0.1.128/25\"\n+  availability_zone = \"${aws_subnet.main_public.availability_zone}\"\n }\n \n resource \"aws_route_table\" \"main_private_route_table\" {"
      },
      {
        "filename": "2_master.tf",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -61,13 +61,15 @@ resource \"aws_iam_instance_profile\" \"cloud_watch_ec2_role_instance_profile\" {\n \n data \"template_file\" \"jenkins_master_nginx_config\" {\n   template = \"${file(\"scripts/master-nginx.conf.tpl\")}\"\n+\n   vars {\n     auth_header = \"${base64encode(\"slave:${random_string.slave_pass.result}\")}\"\n   }\n }\n \n data \"template_file\" \"jenkins_master_cloud_init_part_1\" {\n   template = \"${file(\"scripts/master-cloud-config.yml.tpl\")}\"\n+\n   vars {\n     jenkins_version = \"${var.jenkins_version}\"\n     admin_pass_hash = \"admin_salt:${sha256(\"${random_string.admin_pass.result}{admin_salt}\")}\"\n@@ -80,6 +82,7 @@ data \"template_file\" \"jenkins_master_cloud_init_part_1\" {\n \n data \"template_file\" \"jenkins_master_cloud_init_part_2\" {\n   template = \"${file(\"scripts/master-setup.sh.tpl\")}\"\n+\n   vars {\n     jenkins_version      = \"${var.jenkins_version}\"\n     swarm_plugin_version = \"${var.swarm_plugin_version}\"\n@@ -110,9 +113,10 @@ resource \"aws_instance\" \"jenkins_master\" {\n   // Disable source_dest_check as the master node acts as NAT server for the slaves to access the internet.\n   source_dest_check           = false\n   iam_instance_profile        = \"${aws_iam_instance_profile.cloud_watch_ec2_role_instance_profile.name}\"\n-  tags = {\n+  tags                        = {\n     Name = \"jenkins_master\"\n   }\n+\n   // Wait until the master node starts.\n   provisioner \"local-exec\" {\n     command = \" while ! nc -zv -w 2 ${aws_instance.jenkins_master.public_dns} 443; do sleep 5s; done\"\n@@ -129,10 +133,11 @@ resource \"aws_cloudwatch_metric_alarm\" \"jenkins_recover_master\" {\n   comparison_operator = \"GreaterThanThreshold\"\n   threshold           = 0\n   evaluation_periods  = 2\n+  alarm_actions       = [\"arn:aws:automate:${var.region}:ec2:recover\"]\n+\n   dimensions {\n     InstanceId = \"${aws_instance.jenkins_master.id}\"\n   }\n-  alarm_actions = [\"arn:aws:automate:${var.region}:ec2:recover\"]\n }\n \n resource \"aws_cloudwatch_metric_alarm\" \"jenkins_restart_master\" {\n@@ -145,11 +150,12 @@ resource \"aws_cloudwatch_metric_alarm\" \"jenkins_restart_master\" {\n   comparison_operator = \"LessThanThreshold\"\n   threshold           = 1\n   evaluation_periods  = 3\n+  alarm_actions       = [\"arn:aws:automate:${var.region}:ec2:reboot\"]\n+\n   dimensions {\n     InstanceId  = \"${aws_instance.jenkins_master.id}\"\n     metric_type = \"gauge\"\n   }\n-  alarm_actions = [\"arn:aws:automate:${var.region}:ec2:reboot\"]\n }\n \n output \"jenkins_master_public_dns\" {"
      },
      {
        "filename": "3_slaves.tf",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -8,13 +8,15 @@ variable \"slave_max_count\" {\n \n data \"template_file\" \"jenkins_slave_service\" {\n   template = \"${file(\"scripts/slave-jenkins.service.tpl\")}\"\n+\n   vars {\n     master_url = \"http://${aws_instance.jenkins_master.private_ip}:8082\"\n   }\n }\n \n data \"template_file\" \"jenkins_slave_cloud_init\" {\n   template = \"${file(\"scripts/slave-cloud-config.yml.tpl\")}\"\n+\n   vars {\n     swarm_plugin_version = \"${var.swarm_plugin_version}\"\n     slave_service        = \"${data.template_file.jenkins_slave_service.rendered}\"\n@@ -27,9 +29,10 @@ resource \"aws_launch_template\" \"jenkins_slave_launch_template\" {\n   key_name                    = \"${var.key_pair_name}\"\n   vpc_security_group_ids      = [\"${aws_security_group.jenkins_slave.id}\"]\n   user_data                   = \"${base64encode(data.template_file.jenkins_slave_cloud_init.rendered)}\"\n+\n   tag_specifications {\n     resource_type = \"instance\"\n-    tags = {\n+    tags          = {\n       Name = \"jenkins_slave\"\n     }\n   }\n@@ -41,6 +44,7 @@ resource \"aws_autoscaling_group\" \"jenkins_slave_autoscaling_group\" {\n   min_size            = \"${var.slave_count}\"\n   max_size            = \"${var.slave_max_count}\"\n   vpc_zone_identifier = [\"${aws_subnet.main_private.id}\"]\n+  health_check_type   = \"EC2\"\n \n   launch_template {\n     id      = \"${aws_launch_template.jenkins_slave_launch_template.id}\""
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "use_same_az_public_private_subnet"],
    "notes": "Using the same availability zone for public and private subnets avoids data transfer costs"
  },
  {
    "url": "https://github.com/StratusGrid/terraform-aws-single-account-starter/commit/c291c0954c89e1bfbdb76d4c8990baf9db986343",
    "files": [
      {
        "filename": "-inputs.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -42,3 +42,14 @@ variable \"source_repo\" {\n   type        = string\n }\n \n+\n+variable \"monthly_billing_threshold\" {\n+  description = \"The maximum amount that can be billed after which a cloudwatch alarm triggers\"\n+  default = \"10000\"\n+}\n+\n+variable \"currency\" {\n+  description = \"This defines the currency in the monthly_billing_threshold\"\n+  default = \"USD\"\n+}\n+"
      },
      {
        "filename": "-outputs.tf",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -20,12 +20,11 @@ output \"common_tags\" {\n \n output \"log_bucket_ids\" {\n   description = \"ID of logging bucket\"\n-\n-  value       = [\n-  module.s3_bucket_logging_us_east_1.bucket_id,\n-//  module.s3_bucket_logging_us_east_2.bucket_id,\n-//  module.s3_bucket_logging_us_west_1.bucket_id,\n-//  module.s3_bucket_logging_us_west_2.bucket_id\n+  value = [\n+    module.s3_bucket_logging_us_east_1.bucket_id,\n+    //  module.s3_bucket_logging_us_east_2.bucket_id,\n+    //  module.s3_bucket_logging_us_west_1.bucket_id,\n+    //  module.s3_bucket_logging_us_west_2.bucket_id\n   ]\n }\n "
      },
      {
        "filename": "-provider.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n provider \"aws\" {\n- // allowed_account_ids = var.account_numbers\n-  region              = var.region\n+  // allowed_account_ids = var.account_numbers\n+  region = var.region\n }\n \n #Extra Providers for Config and other Multi-Region configurations like AWS Config"
      },
      {
        "filename": "billng-alerts.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+module \"cost-billing-alarm\" {\n+  source  = \"binbashar/cost-billing-alarm/aws\"\n+  version = \"1.0.12\"\n+  monthly_billing_threshold = var.monthly_billing_threshold\n+  currency = var.currency\n+  aws_env = var.env_name\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jg210/aws-experiments/commit/5ff37f12a421fdd902d8eb1e6d7491ee181fd179",
    "files": [
      {
        "filename": "TODO",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,6 +1,3 @@\n-* Is it possible to use t2.nano not t2.micro?\n-  - https://spring.io/blog/2015/12/10/spring-boot-memory-performance \n-\n * EBS snapshots were building up.\n   - what was creating them?\n   - create snapshot lifecycle policy?"
      },
      {
        "filename": "packer.json",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -3,7 +3,7 @@\n \t\"aws_access_key\": \"\",\n \t\"aws_secret_key\": \"\",\n \t\"aws_region\": \"eu-west-1\",\n-\t\"aws_instance_type\": \"t2.micro\",\n+\t\"aws_instance_type\": \"t2.nano\",\n \t\"aws_ami_name\": \"packer-aws-experiments\"\n     },\n     \"builders\": ["
      },
      {
        "filename": "resources/bin/provision",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -70,7 +70,7 @@ After=syslog.target\n \n [Service]\n User=${springExperimentsUser}\n-ExecStart=/usr/bin/java -jar \"${jar}\"\n+ExecStart=/usr/bin/java -jar \"${jar}\" -Xms80m -Xmx80m\n \n [Install]\n WantedBy=multi-user.target"
      },
      {
        "filename": "terraform/ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -16,7 +16,7 @@ resource \"aws_instance\" \"server\" {\n     user = \"ubuntu\"\n     host = self.public_ip\n   }\n-  instance_type = \"t2.micro\"\n+  instance_type = \"t2.nano\"\n   ami = data.aws_ami.server.image_id\n   key_name = aws_key_pair.auth.id\n   vpc_security_group_ids = [aws_security_group.default.id]"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from t2.micro to t2.nano"
  },
  {
    "url": "https://github.com/robertdebock/terraform-azurerm-container-group/commit/c0d6578f1ebbdcc9cab091017259e4d596bfe8c9",
    "files": [
      {
        "filename": "main.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,8 +14,8 @@ resource \"azurerm_container_group\" \"example\" {\n   container {\n     name   = \"hello-world\"\n     image  = \"microsoft/aci-helloworld:latest\"\n-    cpu    = \"0.5\"\n-    memory = \"1.5\"\n+    cpu    = \"0.1\"\n+    memory = \"0.1\"\n \n     ports {\n       port     = 80\n@@ -26,8 +26,8 @@ resource \"azurerm_container_group\" \"example\" {\n   container {\n     name   = \"sidecar\"\n     image  = \"microsoft/aci-tutorial-sidecar\"\n-    cpu    = \"0.5\"\n-    memory = \"1.5\"\n+    cpu    = \"0.1\"\n+    memory = \"0.1\"\n   }\n \n   tags = {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["azure", "less_cpu", "less_memory"],
    "notes": "Reduce CPU from 0.5 to 0.1 and memory from 1.5 to 0.1"
  },
  {
    "url": "https://github.com/nsbno/terraform-aws-cost-alarm/commit/7e135499d33f0a5c51602a506fefe258cac072c6",
    "files": [
      {
        "filename": "main.tf",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "status": "added",
        "patch": "@@ -0,0 +1,39 @@\n+data \"aws_caller_identity\" \"this\" {}\n+\n+locals {\n+  current_account_id = data.aws_caller_identity.this.account_id\n+}\n+\n+\n+###################################################\n+#                                                 #\n+# Account Budget                                  #\n+#                                                 #\n+###################################################\n+resource \"aws_budgets_budget\" \"this\" {\n+  name              = \"${var.name_prefix}-monthly-budget\"\n+  budget_type       = \"COST\"\n+  limit_amount      = var.account_budget_limit_in_usd\n+  limit_unit        = \"USD\"\n+  time_period_end   = \"2087-06-15_00:00\"\n+  time_period_start = \"2017-07-01_00:00\"\n+  time_unit         = \"MONTHLY\"\n+  notification {\n+    comparison_operator        = \"GREATER_THAN\"\n+    threshold                  = 100\n+    threshold_type             = \"PERCENTAGE\"\n+    notification_type          = \"FORECASTED\"\n+    subscriber_sns_topic_arns  = [aws_sns_topic.budget.arn]\n+    subscriber_email_addresses = var.notification_emails\n+  }\n+}\n+\n+resource \"aws_sns_topic\" \"budget\" {\n+  name = \"${var.name_prefix}-monthly-budget\"\n+  tags = var.tags\n+}\n+\n+resource \"aws_sns_topic_policy\" \"allow_budgets\" {\n+  arn    = aws_sns_topic.budget.arn\n+  policy = data.aws_iam_policy_document.sns.json\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "policies.tf",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "status": "added",
        "patch": "@@ -0,0 +1,44 @@\n+data \"aws_iam_policy_document\" \"sns\" {\n+  policy_id = \"__default_policy_ID\"\n+  statement {\n+    effect = \"Allow\"\n+    sid    = \"__default_statement_ID\"\n+    principals {\n+      type        = \"AWS\"\n+      identifiers = [\"*\"]\n+    }\n+    actions = [\n+      \"SNS:Subscribe\",\n+      \"SNS:SetTopicAttributes\",\n+      \"SNS:RemovePermission\",\n+      \"SNS:Receive\",\n+      \"SNS:Publish\",\n+      \"SNS:ListSubscriptionsByTopic\",\n+      \"SNS:GetTopicAttributes\",\n+      \"SNS:DeleteTopic\",\n+      \"SNS:AddPermission\",\n+    ]\n+    condition {\n+      test     = \"StringEquals\"\n+      variable = \"AWS:SourceOwner\"\n+\n+      values = [\n+        local.current_account_id,\n+      ]\n+    }\n+    resources = [\n+      aws_sns_topic.budget.arn,\n+    ]\n+  }\n+\n+  statement {\n+    effect = \"Allow\"\n+    sid    = \"AllowAWSBudgets\"\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"budgets.amazonaws.com\"]\n+    }\n+    actions   = [\"SNS:Publish\"]\n+    resources = [aws_sns_topic.budget.arn]\n+  }\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "variables.tf",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+variable \"name_prefix\" {\n+  description = \"A prefix used for naming resources.\"\n+  type        = string\n+}\n+\n+variable \"notification_emails\" {\n+  description = \"A list of email addresses to send AWS Budgets notifications to.\"\n+  type        = list(string)\n+  default     = []\n+}\n+\n+variable \"account_budget_limit_in_usd\" {\n+  description = \"If the account spending is forecasted to exceed this limit, a message will be sent to SNS.\"\n+  default     = \"200.0\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A map of tags (key-value pairs) passed to resources.\"\n+  type        = map(string)\n+  default     = {}\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/wushin/ttrpg-tools/commit/9604c14a781530129e47e7a7684a90db86a7f7a0",
    "files": [
      {
        "filename": "terraform/ecr/main.tf",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "modified",
        "patch": "@@ -89,3 +89,24 @@ resource \"aws_ecr_repository\" \"ttrpg-pa\" {\n     command = \"sudo docker push ${aws_ecr_repository.ttrpg-pa.repository_url}:latest\"\n   }\n }\n+\n+resource \"aws_ecr_repository\" \"ttrpg-mongo\" {\n+  name                 = \"mongo\"\n+  image_tag_mutability = \"MUTABLE\"\n+\n+  image_scanning_configuration {\n+    scan_on_push = true\n+  }\n+  provisioner \"local-exec\" {\n+    when = create\n+    command = \"sudo docker tag mongo ${aws_ecr_repository.ttrpg-mongo.repository_url}:latest\"\n+  }\n+  provisioner \"local-exec\" {\n+    when = create\n+    command = \"aws --profile ttrpg ecr get-login-password --region ${var.aws_region} | sudo docker login --username AWS --password-stdin ${aws_ecr_repository.ttrpg-pa.repository_url}\"\n+  }\n+  provisioner \"local-exec\" {\n+    when = create\n+    command = \"sudo docker push ${aws_ecr_repository.ttrpg-mongo.repository_url}:latest\"\n+  }\n+}"
      },
      {
        "filename": "terraform/ecr/outputs.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -10,3 +10,6 @@ output \"ii_repo_url\" {\n output \"pa_repo_url\" {\n   value = aws_ecr_repository.ttrpg-pa.repository_url\n }\n+output \"mongo_repo_url\" {\n+  value = aws_ecr_repository.ttrpg-mongo.repository_url\n+}"
      },
      {
        "filename": "terraform/ecs/main.tf",
        "additions": 106,
        "deletions": 23,
        "changes": 129,
        "status": "modified",
        "patch": "@@ -206,8 +206,8 @@ resource \"aws_autoscaling_group\" \"failure_analysis_ecs_asg\" {\n   vpc_zone_identifier       = [var.aws_subnet_one_id]\n   launch_configuration      = aws_launch_configuration.ecs_launch_config.name\n \n-  desired_capacity          = 4\n-  min_size                  = 4\n+  desired_capacity          = 5\n+  min_size                  = 5\n   max_size                  = 8\n   health_check_grace_period = 300\n   health_check_type         = \"EC2\"\n@@ -280,6 +280,21 @@ resource \"aws_service_discovery_service\" \"paragon\" {\n   }\n }\n \n+resource \"aws_service_discovery_service\" \"mongo\" {\n+  name = aws_ecs_task_definition.ttrpg-mongo-ecs-task-definition.family\n+  dns_config {\n+    namespace_id = aws_service_discovery_private_dns_namespace.ttrpg.id\n+    dns_records {\n+      ttl  = 10\n+      type = \"A\"\n+    }\n+    routing_policy = \"MULTIVALUE\"\n+  }\n+  health_check_custom_config {\n+    failure_threshold = 1\n+  }\n+}\n+\n resource \"aws_ecs_cluster\" \"ttrpg-cluster\" {\n   name = \"ttrpg-cluster\"\n }\n@@ -623,7 +638,7 @@ resource \"aws_ecs_task_definition\" \"ttrpg-ii-ecs-task-definition\" {\n       },\n       {\n         \"name\": \"DB_CONNECTION_STRING\",\n-        \"value\": \"mongodb://${aws_docdb_cluster.ttrpg-mongo.endpoint}:27017/?ssl=true&ssl_ca_certs=rds-combined-ca-bundle.pem&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false\"\n+        \"value\": \"mongodb://mongo.ttrpg.terraform.internal:27017/\"\n       }\n     ]\n   }\n@@ -705,28 +720,96 @@ resource \"aws_ecs_task_definition\" \"ttrpg-pa-ecs-task-definition\" {\n EOF\n }\n \n-resource \"aws_docdb_subnet_group\" \"ttrpg\" {\n-  name       = \"ttrpg-group\"\n-  subnet_ids = [var.aws_subnet_one_id,var.aws_subnet_two_id]\n+resource \"aws_cloudwatch_log_group\" \"mongo\" {\n+  name = \"mongo\"\n }\n \n-resource \"aws_docdb_cluster\" \"ttrpg-mongo\" {\n-  cluster_identifier              = \"ttrpg-mongo\"\n-  engine                          = \"docdb\"\n-  master_username                 = data.aws_ssm_parameter.mongo_user.value\n-  master_password                 = data.aws_ssm_parameter.mongo_pass.value\n-  vpc_security_group_ids          = [var.aws_sg_ec2_id]\n-  port                            = \"27017\"\n-  db_subnet_group_name            = aws_docdb_subnet_group.ttrpg.name\n-  skip_final_snapshot             = true\n-  backup_retention_period         = 1\n-  apply_immediately               = true\n-  enabled_cloudwatch_logs_exports = [\"audit\",\"profiler\"]\n+resource \"aws_ecs_service\" \"ttrpg-mongo-ecs-service\" {\n+  name            = \"mongo\"\n+  cluster         = aws_ecs_cluster.ttrpg-cluster.id\n+  task_definition = aws_ecs_task_definition.ttrpg-mongo-ecs-task-definition.arn\n+  launch_type     = \"EC2\"\n+\n+  desired_count = 1\n+\n+  network_configuration {\n+    subnets          = [var.aws_subnet_one_id]\n+    security_groups  = [var.aws_sg_ec2_id]\n+  }\n+\n+  service_registries {\n+    registry_arn = aws_service_discovery_service.mongo.arn\n+    container_name = \"mongo\"\n+  }\n }\n \n-resource \"aws_docdb_cluster_instance\" \"ttrpg-mongo-instances\" {\n-  count              = 1\n-  identifier         = \"docdb-cluster-ttrpg-${count.index}\"\n-  cluster_identifier = aws_docdb_cluster.ttrpg-mongo.id\n- instance_class     = \"db.t3.medium\"\n+resource \"aws_ecs_task_definition\" \"ttrpg-mongo-ecs-task-definition\" {\n+  family                   = \"mongo\"\n+  network_mode             = \"awsvpc\"\n+  requires_compatibilities = [\"EC2\"]\n+  memory                   = \"900\"\n+  cpu                      = \"900\"\n+\n+  container_definitions    = <<EOF\n+[\n+  {\n+    \"name\": \"mongo\",\n+    \"image\": \"${var.mongo_repo_url}:latest\",\n+    \"memory\": 512,\n+    \"cpu\": 512,\n+    \"essential\": true,\n+    \"portMappings\": [\n+      {\n+        \"containerPort\": 27017,\n+        \"hostPort\": 27017,\n+        \"protocol\": \"tcp\"\n+      }\n+    ],\n+    \"logConfiguration\": {\n+        \"logDriver\": \"awslogs\",\n+        \"options\": {\n+            \"awslogs-group\": \"mongo\",\n+            \"awslogs-region\": \"us-east-2\",\n+            \"awslogs-stream-prefix\": \"mongo\"\n+        }\n+    },\n+    \"environment\": [\n+      {\n+        \"name\": \"MONGO_INITDB_ROOT_USERNAME\",\n+        \"value\": \"${data.aws_ssm_parameter.mongo_user.value}\"\n+      },\n+      {\n+        \"name\": \"MONGO_INITDB_ROOT_PASSWORD\",\n+        \"value\": \"${data.aws_ssm_parameter.mongo_pass.value}\"\n+      }\n+    ]\n+  }\n+]\n+EOF\n }\n+\n+#resource \"aws_docdb_subnet_group\" \"ttrpg\" {\n+#  name       = \"ttrpg-group\"\n+#  subnet_ids = [var.aws_subnet_one_id,var.aws_subnet_two_id]\n+#}\n+#\n+#resource \"aws_docdb_cluster\" \"ttrpg-mongo\" {\n+#  cluster_identifier              = \"ttrpg-mongo\"\n+#  engine                          = \"docdb\"\n+#  master_username                 = data.aws_ssm_parameter.mongo_user.value\n+#  master_password                 = data.aws_ssm_parameter.mongo_pass.value\n+#  vpc_security_group_ids          = [var.aws_sg_ec2_id]\n+#  port                            = \"27017\"\n+#  db_subnet_group_name            = aws_docdb_subnet_group.ttrpg.name\n+#  skip_final_snapshot             = true\n+#  backup_retention_period         = 1\n+#  apply_immediately               = true\n+#  enabled_cloudwatch_logs_exports = [\"audit\",\"profiler\"]\n+#}\n+\n+#resource \"aws_docdb_cluster_instance\" \"ttrpg-mongo-instances\" {\n+#  count              = 1\n+#  identifier         = \"docdb-cluster-ttrpg-${count.index}\"\n+#  cluster_identifier = aws_docdb_cluster.ttrpg-mongo.id\n+# instance_class     = \"db.t3.medium\"\n+#}"
      },
      {
        "filename": "terraform/ecs/variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -78,6 +78,10 @@ variable \"pa_repo_url\" {\n   description = \"ECR pa repo\"\n   type        = string\n }\n+variable \"mongo_repo_url\" {\n+  description = \"ECR mongo repo\"\n+  type        = string\n+}\n variable \"aws_dns_zone_id\" {\n   description = \"DNS zone id\"\n   type        = string"
      },
      {
        "filename": "terraform/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -81,6 +81,7 @@ module \"create_ecs\" {\n   dr_repo_url              = module.create_ecr.dr_repo_url\n   ii_repo_url              = module.create_ecr.ii_repo_url\n   pa_repo_url              = module.create_ecr.pa_repo_url\n+  mongo_repo_url           = module.create_ecr.mongo_repo_url\n   aws_dns_zone_id          = var.aws_dns_zone_id\n   aws_lb_dns_name          = module.create_network.aws_lb_dns_name\n   s3_bucket_dr_task        = module.create_s3_backup.s3_bucket_dr_task"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit does not contain enough context to determine what costs are saved"
  },
  {
    "url": "https://github.com/stephaneclavel/terraform/commit/74b4ba406b9ea761d27298165d0e0de45c9d8491",
    "files": [
      {
        "filename": "azure/vNET+VM/main.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -151,6 +151,8 @@ resource \"azurerm_linux_virtual_machine\" \"vm-demo-test-westeurope-001\" {\n   size                  = \"Standard_DS1_v2\"\n   admin_username        = \"steph\"\n   custom_data           = base64encode(data.template_file.linux-vm-cloud-init.rendered)\n+  priority              = \"Spot\"\n+  eviction_policy       = \"Deallocate\"\n \n   source_image_reference {\n     publisher = \"Canonical\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["azure", "use_spot_instance"],
    "notes": "Use Spot instances"
  },
  {
    "url": "https://github.com/64kramsystem/ultimate_aws_certified_cloud_practitioner_course_terraform_configuration/commit/2f36b8a5f2f818138da72d218c1f3c9666ed54aa",
    "files": [
      {
        "filename": "terraform/cloudwatch_alarms.tf",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -59,3 +59,37 @@ resource \"aws_cloudwatch_metric_alarm\" \"ec2_first_instance_system_status_check_f\n \n   alarm_description = \"Created from EC2 Console\"\n }\n+\n+# Special billing alarms - needs to be in `us-east-1`.\n+#\n+resource \"aws_cloudwatch_metric_alarm\" \"billing_alarm\" {\n+  alarm_name = \"BillingAlarm\"\n+  provider   = aws.us-east-1\n+\n+  metric_name = \"EstimatedCharges\"\n+\n+  namespace = \"AWS/Billing\"\n+\n+  dimensions = {\n+    \"Currency\" = \"USD\"\n+  }\n+\n+  comparison_operator = \"GreaterThanThreshold\"\n+\n+  threshold = 10\n+\n+  alarm_actions = [\n+    aws_sns_topic.billing_alarms.arn,\n+  ]\n+\n+  evaluation_periods = 1\n+  period             = 21600\n+  statistic          = \"Maximum\"\n+  treat_missing_data = \"missing\"\n+\n+  # Interestingly, 0 is the default when created via Monitoring tab, which is invalid for TF, which\n+  # requires at least 1.\n+  #\n+  datapoints_to_alarm = 1\n+}\n+"
      },
      {
        "filename": "terraform/terraform.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -15,6 +15,13 @@ provider \"aws\" {\n   secret_key = var.aws_secret_access_key\n }\n \n+provider \"aws\" {\n+  alias      = \"us-east-1\"\n+  region     = \"us-east-1\" # N.Virginia\n+  access_key = var.aws_access_key_id\n+  secret_key = var.aws_secret_access_key\n+}\n+\n # Conveniences for referencing the region.\n \n data \"aws_region\" \"eu-central-1\" {"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-aws-lex-lambda/commit/a39ed520b0048d54886d16c10c988ca905f64c58",
    "files": [
      {
        "filename": ".github/CODEOWNERS",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+* @JamesWoolfenden"
      },
      {
        "filename": ".github/workflows/compare.yml",
        "additions": 19,
        "deletions": 17,
        "changes": 36,
        "status": "modified",
        "patch": "@@ -7,7 +7,6 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.15.0\n   tf_target_dir: example/examplea\n   branch: master\n jobs:\n@@ -21,11 +20,10 @@ jobs:\n           token: ${{ github.token }}\n       - name: tfsec\n         run: |\n-         pip3 install lastversion\n-         now=$(lastversion tfsec/tfsec)\n-         wget https://github.com/tfsec/tfsec/releases/download/v${now}/tfsec-linux-amd64\n-         chmod +x tfsec-linux-amd64\n-         ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n+          pip3 install lastversion\n+          lastversion tfsec/tfsec --assets -d\n+          chmod +x tfsec-linux-amd64\n+          ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n@@ -67,18 +65,20 @@ jobs:\n       - name: install terrascan\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion accurics/terrascan)\n-          curl --location https://github.com/accurics/terrascan/releases/download/v${now}/terrascan_${now}_Linux_x86_64.tar.gz --output terrascan.tar.gz\n-          tar -xvf terrascan.tar.gz\n+          lastversion accurics/terrascan --assets -d --verbose\n+          tar -xvf terrascan*.tar.gz\n+          chmod +x ./terrascan\n       - name: run terrascan\n-        run: ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json >terrascan.json\n+        run: |\n+          ./terrascan init\n+          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: terrascan\n           path: terrascan.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n   kics:\n     runs-on: ubuntu-latest\n     steps:\n@@ -87,18 +87,20 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: run kics Scan\n-        uses: checkmarx/kics-action@v1.0\n-        with:\n-          path: ${{ env.tf_target_dir }}\n-          output_path: \"kics.json\"\n+      - name: install kics\n+        run: |\n+          pip3 install lastversion\n+          lastversion Checkmarx/kics --assets -d --verbose\n+          tar -xvf kics*.tar.gz\n+      - name: run kics\n+        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: kics\n           path: kics.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n \n   upload:\n     needs: [kics, terrascan, checkov, tfsec]"
      },
      {
        "filename": ".github/workflows/master.yml",
        "additions": 24,
        "deletions": 4,
        "changes": 28,
        "status": "modified",
        "patch": "@@ -33,6 +33,28 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+      - name: Bills\n+        run: |\n+          pip3 install lastversion\n+          lastversion infracost --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf infracost*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/infracost-linux-amd64\n+          $GITHUB_WORKSPACE/bin/infracost-linux-amd64 breakdown --path ${{ env.tf_target_dir }} --usage-file ${{ env.tf_target_dir }}/infracost-usage.yml\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -46,10 +68,9 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n@@ -59,7 +80,6 @@ jobs:\n     steps:\n       - uses: actions/checkout@master\n       - name: Bump version and push tag\n-        if: ${{ !env.ACT }}\n         uses: anothrNick/github-tag-action@master\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "filename": ".github/workflows/pull_request.yml",
        "additions": 30,
        "deletions": 3,
        "changes": 33,
        "status": "modified",
        "patch": "@@ -29,6 +29,15 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -41,10 +50,28 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          # See the cloud credentials section for the options\n+        with:\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          usage_file: ${{ env.tf_target_dir }}/infracost-usage.yml\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": "example/examplea/infracost-usage.yml",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+version: 0.1\n+resource_usage:\n+  module.lexlambda.aws_cloudwatch_log_group.lambda:\n+    monthly_data_ingested_gb: 0\n+    monthly_data_scanned_gb: 0\n+    storage_gb: 0\n+  module.lexlambda.aws_lambda_function.withintent:\n+    monthly_requests: 0\n+    request_duration_ms: 0\n+  module.lexlambda.aws_sns_topic.lambda[0]:\n+    monthly_requests: 0\n+    request_size_kb: 0"
      },
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n terraform {\n   required_providers {\n     aws = {\n-      version = \"3.35.0\"\n+      version = \"3.39.0\"\n       source  = \"hashicorp/aws\"\n     }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit configures Infracost in CI, there are no relevant changes to Terraform files"
  },
  {
    "url": "https://github.com/kelledge/idkfa/commit/25cda0b77ff329a89551cc6f14fe8c62820fd424",
    "files": [
      {
        "filename": "terraform/global/alarms/billing.tf",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "status": "added",
        "patch": "@@ -0,0 +1,27 @@\n+resource \"aws_cloudwatch_metric_alarm\" \"billing_critical\" {\n+  alarm_name          = \"billing_critical\"\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods  = \"3\"\n+  metric_name         = \"EstimatedCharges\"\n+  namespace           = \"AWS/Billing\"\n+  period              = \"3600\"\n+  statistic           = \"Maximum\"\n+  threshold           = 10.00\n+\n+  alarm_description = \"This metric monitors estimated charges for critical levels\"\n+  alarm_actions     = [\"${data.terraform_remote_state.topics.critical_arn}\"]\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"billing_warn\" {\n+  alarm_name          = \"billing_warn\"\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods  = \"3\"\n+  metric_name         = \"EstimatedCharges\"\n+  namespace           = \"AWS/Billing\"\n+  period              = \"3600\"\n+  statistic           = \"Maximum\"\n+  threshold           = 3.00\n+\n+  alarm_description = \"This metric monitors estimated charges for warning levels\"\n+  alarm_actions     = [\"${data.terraform_remote_state.topics.warn_arn}\"]\n+}"
      },
      {
        "filename": "terraform/global/alarms/main.tf",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+provider \"aws\" {\n+  region = \"us-east-1\"\n+}\n+\n+terraform {\n+  backend \"s3\" {\n+    bucket = \"state.kaak.us\"\n+    key    = \"terraform/global/alarms.tfstate\"\n+    region = \"us-east-1\"\n+  }\n+}\n+\n+data \"terraform_remote_state\" \"topics\" {\n+  backend = \"s3\"\n+\n+  config {\n+    bucket = \"state.kaak.us\"\n+    key    = \"terraform/global/topics.tfstate\"\n+    region = \"us-east-1\"\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/scott45/vof-deployment-scripts/commit/c6b2c1bee4c1e53e87fd3d94fc8c07cf64342d7b",
    "files": [
      {
        "filename": "vof/jumpbox.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n resource \"google_compute_instance\" \"vof-jumpbox\" {\n   name         = \"${var.env_name}-jumpbox\"\n-  machine_type = \"${var.machine_type}\"\n+  machine_type = \"${var.small_machine_type}\"\n   zone = \"${var.zone}\"\n \n   tags = [\"${var.env_name}-jumpbox\"]"
      },
      {
        "filename": "vof/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -27,6 +27,11 @@ variable \"machine_type\" {\n   default = \"n1-standard-1\"\n }\n \n+variable \"small_machine-type\" {\n+  type = \"string\"\n+  default = \"g1-small\"\n+}\n+\n variable \"credential_file\" {\n   type = \"string\"\n   default = \"../shared/account.json\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["gcp", "cheaper_instance"],
    "notes": "Move from n1-standard-1 to g1-small"
  },
  {
    "url": "https://github.com/jsoconno/aws-terraform-remote-state-infrastructure/commit/fed8be2748bc2286a6f9888d282d66763ba612ed",
    "files": [
      {
        "filename": "modules/dynamodb/main.tf",
        "additions": 1,
        "deletions": 169,
        "changes": 170,
        "status": "modified",
        "patch": "@@ -14,93 +14,8 @@ resource \"aws_kms_key\" \"table\" {\n \n # Docs: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table\n resource \"aws_dynamodb_table\" \"standard\" {\n-  count = var.billing_mode != \"AUTOSCALED\" ? 1 : 0\n-\n-  name           = var.name\n-  billing_mode   = var.billing_mode\n-  read_capacity  = var.billing_mode == \"PROVISIONED\" ? var.read_capacity : null\n-  write_capacity = var.billing_mode == \"PROVISIONED\" ? var.write_capacity : null\n-  hash_key       = var.hash_key.name\n-  range_key      = var.range_key == null ? null : var.range_key.name\n-  stream_enabled = true\n-  stream_view_type = var.stream_view_type\n-\n-  dynamic \"attribute\" {\n-    for_each = local.attributes\n-    content {\n-      name = attribute.value.name\n-      type = upper(attribute.value.type)\n-    }\n-  }\n-\n-  dynamic \"ttl\" {\n-    for_each = var.ttl_attribute_name != null ? [1] : []\n-    content {\n-      attribute_name = var.ttl_attribute_name\n-      enabled        = var.ttl_enabled\n-    }\n-  }\n-\n-  dynamic \"local_secondary_index\" {\n-    for_each = var.local_secondary_index_map\n-    content {\n-      name               = local_secondary_index.value.name\n-      range_key          = local_secondary_index.value.range_key\n-      projection_type    = local_secondary_index.value.protection_type\n-      non_key_attributes = lookup(local_secondary_index.value, \"non_key_attributes\", null)\n-    }\n-  }\n-\n-  dynamic \"global_secondary_index\" {\n-    for_each = var.global_secondary_index_map\n-    content {\n-      name               = global_secondary_index.value.name\n-      write_capacity     = lookup(global_secondary_index.value, \"write_capacity\", null)\n-      read_capacity      = lookup(global_secondary_index.value, \"read_capacity\", null)\n-      hash_key           = global_secondary_index.value.hash_key\n-      range_key          = lookup(global_secondary_index.value, \"range_key\", null)\n-      projection_type    = global_secondary_index.value.projection_type\n-      non_key_attributes = lookup(global_secondary_index.value, \"non_key_attributes\", null)\n-    }\n-  }\n-\n-  point_in_time_recovery {\n-    enabled = var.point_in_time_recovery\n-  }\n-\n-  dynamic \"replica\" {\n-    for_each = var.replica\n-    content {\n-      region_name = replica.value.region\n-      kms_key_arn = replica.value.kms_key_arn\n-    }\n-  }\n-\n-  server_side_encryption {\n-    enabled = true\n-    kms_key_arn = var.encryption_key_arn == null ? aws_kms_key.table[0].arn : var.encryption_key_arn\n-  }\n-\n-  timeouts {\n-    create = \"60m\"\n-    update = \"60m\"\n-    delete = \"60m\"\n-  }\n-\n-  tags = var.tags\n-}\n-\n-# Terraform recommends using a lifecycle block to ignore read and write capacty when autoscaled.\n-# Because lifecycle blocks are not allowed to have dynamic expressions, the resource must be duplicated.\n-\n-# Docs: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table\n-resource \"aws_dynamodb_table\" \"autoscaled\" {\n-  count = var.billing_mode == \"AUTOSCALED\" ? 1 : 0\n-\n   name           = var.name\n-  billing_mode   = \"PROVISIONED\"\n-  read_capacity  = var.autoscaling_min_read_capacity\n-  write_capacity = var.autoscaling_min_write_capacity\n+  billing_mode   = \"PAY_PER_REQUEST\"\n   hash_key       = var.hash_key.name\n   range_key      = var.range_key == null ? null : var.range_key.name\n   stream_enabled = true\n@@ -169,87 +84,4 @@ resource \"aws_dynamodb_table\" \"autoscaled\" {\n   }\n \n   tags = var.tags\n-\n-  lifecycle {\n-    ignore_changes = [read_capacity, write_capacity]\n-  }\n-}\n-\n-# Enable table read and write autoscaling\n-# Docs: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_target\n-resource \"aws_appautoscaling_target\" \"dynamodb_table_read_target\" {\n-  count = var.billing_mode == \"AUTOSCALED\" ? 1 : 0\n-\n-  max_capacity       = var.autoscaling_max_read_capacity\n-  min_capacity       = var.autoscaling_min_read_capacity\n-  resource_id        = \"table/${aws_dynamodb_table.autoscaled[0].name}\"\n-  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-# Docs: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_policy\n-resource \"aws_appautoscaling_policy\" \"dynamodb_table_read_policy\" {\n-  count = var.billing_mode == \"AUTOSCALED\" ? 1 : 0\n-\n-  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_read_target[0].resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = aws_appautoscaling_target.dynamodb_table_read_target[0].resource_id\n-  scalable_dimension = aws_appautoscaling_target.dynamodb_table_read_target[0].scalable_dimension\n-  service_namespace  = aws_appautoscaling_target.dynamodb_table_read_target[0].service_namespace\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBReadCapacityUtilization\"\n-    }\n-\n-    target_value = var.autoscaling_policy_target_value\n-    scale_in_cooldown = var.autoscaling_policy_scale_in_cooldown\n-    scale_out_cooldown = var.autoscaling_policy_scale_out_cooldown\n-  }\n-}\n-\n-# Docs: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_target\n-resource \"aws_appautoscaling_target\" \"dynamodb_table_write_target\" {\n-  count = var.billing_mode == \"AUTOSCALED\" ? 1 : 0\n-\n-  max_capacity       = var.autoscaling_max_write_capacity\n-  min_capacity       = var.autoscaling_min_write_capacity\n-  resource_id        = \"table/${aws_dynamodb_table.autoscaled[0].name}\"\n-  scalable_dimension = \"dynamodb:table:WriteCapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-# Docs: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appautoscaling_policy\n-resource \"aws_appautoscaling_policy\" \"dynamodb_table_write_policy\" {\n-  count = var.billing_mode == \"AUTOSCALED\" ? 1 : 0\n-\n-  name               = \"DynamoDBWriteCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_write_target[0].resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = aws_appautoscaling_target.dynamodb_table_write_target[0].resource_id\n-  scalable_dimension = aws_appautoscaling_target.dynamodb_table_write_target[0].scalable_dimension\n-  service_namespace  = aws_appautoscaling_target.dynamodb_table_write_target[0].service_namespace\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDBWriteCapacityUtilization\"\n-    }\n-\n-    target_value = var.autoscaling_policy_target_value\n-    scale_in_cooldown = var.autoscaling_policy_scale_in_cooldown\n-    scale_out_cooldown = var.autoscaling_policy_scale_out_cooldown\n-  }\n-}\n-\n-# Docs: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy\n-resource \"aws_iam_policy\" \"allow_access_dynamodb\" {\n-  name   = \"DynamoDbAccess-${upper(var.name)}\"\n-  policy = data.aws_iam_policy_document.allow_access_dynamodb.json\n-}\n-\n-# Docs: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy_attachment\n-resource \"aws_iam_role_policy_attachment\" \"allow_access_dynamodb\" {\n-  count = length(var.dynamodb_access_iam_role_names)\n-\n-  role       = var.dynamodb_access_iam_role_names[count.index]\n-  policy_arn = aws_iam_policy.allow_access_dynamodb.arn\n }\n\\ No newline at end of file"
      },
      {
        "filename": "modules/dynamodb/variables.tf",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "status": "modified",
        "patch": "@@ -10,31 +10,6 @@ variable \"name\" {\n   }\n }\n \n-variable \"billing_mode\" {\n-  type = string\n-  description = \"Controls how you are charged for read and write throughput and how you manage capacity.  Valid values include 'PAY_PER_REQUEST', 'PROVISIONED', and 'AUTOSCALED'.\"\n-  default     = \"PAY_PER_REQUEST\"\n-\n-  validation {\n-    condition = (\n-      contains([\"PAY_PER_REQUEST\", \"PROVISIONED\", \"AUTOSCALED\"], var.billing_mode)\n-    )\n-    error_message = \"Must be one of: PAY_PER_REQUEST, PROVISIONED, or AUTOSCALED. Defaults to PAY_PER_REQUEST.\"\n-  }\n-}\n-\n-variable \"read_capacity\" {\n-  type = number\n-  description = \"The number of read units for this table. If the billing_mode is PROVISIONED, this field is required.\"\n-  default = 20\n-}\n-\n-variable \"write_capacity\" {\n-  type = number\n-  description = \"The number of write units for this table. If the billing_mode is PROVISIONED, this field is required.\"\n-  default = 20\n-}\n-\n variable \"hash_key\" {\n   type = object({\n     name = string\n@@ -104,26 +79,12 @@ variable \"local_secondary_index_map\" {\n   type = any\n   description = \"Describe an LSI on the table; these can only be allocated at creation so you cannot change this definition after you have created the resource.\"\n   default = []\n-\n-  # validation {\n-  #   condition = (\n-\n-  #   )\n-  #   error_message = \"\"\n-  # }\n }\n \n variable \"global_secondary_index_map\" {\n   type = any\n   description = \"Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc.\"\n   default = []\n-\n-  # validation {\n-  #   condition = (\n-\n-  #   )\n-  #   error_message = \"\"\n-  # }\n }\n \n variable \"point_in_time_recovery\" {"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/digitalronin/digitalocean-build-machine/commit/edbb68b29f7e055a50c16f62a71ee7be8c019407",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -28,7 +28,8 @@ resource \"digitalocean_droplet\" \"buildvm\" {\n   image      = \"ubuntu-20-04-x64\"\n   name       = \"buildvm\"\n   region     = \"sgp1\"\n-  size       = \"s-1vcpu-1gb\"\n+  # size       = \"s-1vcpu-1gb\" # minimum - $5/month\n+  size       = \"s-2vcpu-2gb\" # $15/month\n   monitoring = true\n   ssh_keys   = [digitalocean_ssh_key.buildvm.fingerprint]\n   # user_data  = file(\"setup_vm.sh\")"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness",
      "increase"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/nisunisu/AWS_Blue_Green_Deployment/commit/d0741cddb32ed7970904693e3a697603fa21bbbb",
    "files": [
      {
        "filename": "aws/example.tf",
        "additions": 14,
        "deletions": 10,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -6,21 +6,25 @@ provider \"aws\" {\n resource \"aws_instance\" \"example\" {\n   ami           = \"ami-0a1c2ec61571737db\" # amazon linux\n   instance_type = \"t2.micro\"\n+  vpc_security_group_ids = [\n+    var.my_sgid # my default security group id\n+  ]\n+  associate_public_ip_address = true # NOTICE: Even if this is set as \"false\", it will be ALWAYS set as \"true\" when \"auto-assign public ipv4 address\" with SUBNET is set as \"TRUE\".\n   provisioner \"local-exec\" {\n-    command = \"echo ${aws_instance.example.public_ip} > my_public_ip.txt\"\n+    command = \"echo ${aws_instance.example.public_ip} > ./output/my_public_ip.txt\"\n   }\n   tags = {\n     Name  = \"terraform-test\"\n     Owner = \"nisunisu\"\n   }\n }\n \n-resource \"aws_eip\" \"ip\" {\n-  vpc      = true\n-  instance = aws_instance.example.id\n-  tags = {\n-    Name  = \"EIP_terraform_test\"\n-    Owner = \"nisunisu\"\n-  }\n-  depends_on = [aws_instance.example]\n-}\n\\ No newline at end of file\n+# resource \"aws_eip\" \"ip\" {\n+#   vpc      = true\n+#   instance = aws_instance.example.id\n+#   tags = {\n+#     Name  = \"EIP_terraform_test\"\n+#     Owner = \"nisunisu\"\n+#   }\n+#   depends_on = [aws_instance.example]\n+# }\n\\ No newline at end of file"
      },
      {
        "filename": "aws/variables.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+variable \"my_sgid\" {\n+  # None\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": ["aws", "remove_eip"],
    "notes": "Comment out the EIP"
  },
  {
    "url": "https://github.com/fdns/terraform-k8s/commit/f106917bb7b2d8d4428022bb119585bf9f35769c",
    "files": [
      {
        "filename": "modules/instances/main.tf",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n resource \"aws_spot_fleet_request\" \"cheap_compute\" {\r\n   iam_fleet_role                      = \"arn:aws:iam::345025288683:role/aws-ec2-spot-fleet-tagging-role\"\r\n-  spot_price                          = 0.0199\r\n+  spot_price                          = 0.0114\r\n   allocation_strategy                 = \"lowestPrice\"\r\n   target_capacity                     = 1\r\n   valid_until                         = timeadd(timestamp(), \"2h\")\r\n@@ -9,7 +9,7 @@ resource \"aws_spot_fleet_request\" \"cheap_compute\" {\n   launch_specification {\r\n     availability_zone           = var.availability_zone\r\n     ami                         = var.default_ami\r\n-    instance_type               = \"c5a.large\"\r\n+    instance_type               = \"t3a.medium\"\r\n     subnet_id                   = var.subnet_cloud\r\n     associate_public_ip_address = true\r\n     vpc_security_group_ids      = [\"${var.security_group}\"]\r\n@@ -18,21 +18,22 @@ resource \"aws_spot_fleet_request\" \"cheap_compute\" {\n \r\n     root_block_device {\r\n       volume_type           = \"standard\"\r\n-      volume_size           = 32\r\n+      volume_size           = 16\r\n       delete_on_termination = true\r\n     }\r\n \r\n     tags = {\r\n       project      = var.project\r\n       protected    = \"false\"\r\n-      ansible-role  = \"master\"\r\n+      ansible-role = \"master\"\r\n     }\r\n   }\r\n }\r\n \r\n resource \"aws_spot_fleet_request\" \"cheap_compute2\" {\r\n+  count                               = 2\r\n   iam_fleet_role                      = \"arn:aws:iam::345025288683:role/aws-ec2-spot-fleet-tagging-role\"\r\n-  spot_price                          = 0.0199\r\n+  spot_price                          = 0.0114\r\n   allocation_strategy                 = \"lowestPrice\"\r\n   target_capacity                     = 1\r\n   valid_until                         = timeadd(timestamp(), \"4h\")\r\n@@ -41,7 +42,7 @@ resource \"aws_spot_fleet_request\" \"cheap_compute2\" {\n   launch_specification {\r\n     availability_zone           = var.availability_zone\r\n     ami                         = var.default_ami\r\n-    instance_type               = \"c5a.large\"\r\n+    instance_type               = \"t3a.medium\"\r\n     subnet_id                   = var.subnet_cloud\r\n     associate_public_ip_address = true\r\n     vpc_security_group_ids      = [\"${var.security_group}\"]\r\n@@ -57,7 +58,8 @@ resource \"aws_spot_fleet_request\" \"cheap_compute2\" {\n     tags = {\r\n       project      = var.project\r\n       protected    = \"false\"\r\n-      ansible-role  = \"worker\"\r\n+      ansible-role = \"worker\"\r\n     }\r\n   }\r\n }\r\n+\r"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/tale-toul/SingleNodeOpenshiftOnLibvirt/commit/638430604158044fcf123adaf8dfdcc91b1a873e",
    "files": [
      {
        "filename": "Ansible/support_setup.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -33,7 +33,7 @@\n         marker: \"# {mark} Ansible block for support variables\"\n         insertafter: \"^\\\\[support:vars\\\\]$\"\n         block: |\n-           ansible_ssh_common_args='-o ProxyJump=\"ec2-user@{{ baremetal_public_ip }}\"' \n+           ansible_ssh_common_args='-o ProxyJump=\"ec2-user@{{ baremetal_public_ip }}\"'\n     - name: Reload inventory\n       meta: refresh_inventory\n "
      },
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -8,7 +8,7 @@ This repository contains terraform templates and ansible playbooks to deploy a [\n \n There are two main parts to complete the installation of the SNO host: \n * The creation of the infrastructure resources such as the AWS metal instance, the VPC, subnets, the libvirt virtual network, the support VM, the sno empty VM, etc.\n-* The Openshift installation in the sno VM.\n+* The Openshift installation in the SNO host.\n \n ### Creating the infrastructure resources\n "
      },
      {
        "filename": "Terraform/main.tf",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -60,7 +60,7 @@ resource \"aws_internet_gateway\" \"intergw\" {\n #EIPS\n resource \"aws_eip\" \"baremetal_eip\" {\n   vpc = true\n-  instance = aws_instance.baremetal.id\n+  instance = aws_spot_instance_request.baremetal.spot_instance_id\n   depends_on = [aws_internet_gateway.intergw]\n   tags = {\n       Name = \"metaleip-${local.suffix}\"\n@@ -206,18 +206,26 @@ data \"aws_ami\" \"rhel8\" {\n \n   filter {\n     name = \"name\"\n-    values = [\"RHEL*8.5*\"]\n+    values = [\"RHEL*8.4*\"]\n   }\n }\n \n #Baremetal host\n-resource \"aws_instance\" \"baremetal\" {\n+resource \"aws_spot_instance_request\" \"baremetal\" {\n   ami = data.aws_ami.rhel8.id\n   instance_type = var.instance_type\n   subnet_id = aws_subnet.subnet_pub.id\n   vpc_security_group_ids = [aws_security_group.sg-ssh-in.id,aws_security_group.sg-web-in.id,aws_security_group.sg-vnc-in.id,aws_security_group.sg-all-out.id,aws_security_group.sg-api-in.id]\n   key_name= aws_key_pair.ssh-key.key_name\n \n+  spot_type = \"one-time\"\n+  spot_price = \"5.00\"\n+  wait_for_fulfillment = true\n+  timeouts {\n+    create = \"5m\"\n+    delete = \"11m\"\n+  }\n+\n   root_block_device {\n       volume_size = 40\n       delete_on_termination = true\n@@ -236,5 +244,5 @@ resource \"aws_instance\" \"baremetal\" {\n \n #Used to extract the public IP address in the output vars\n data \"aws_instance\" \"baremetal-actual\" {\n-  instance_id = aws_instance.baremetal.id\n+  instance_id = aws_spot_instance_request.baremetal.spot_instance_id\n }"
      },
      {
        "filename": "Terraform/output-vars.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@ output \"baremetal_public_ip\" {\n  description = \"The public IP address of EC2 metal instance\"\n }\n output \"bastion_private_ip\" {\n-  value     = aws_instance.baremetal.private_ip\n+  value     = aws_spot_instance_request.baremetal.private_ip\n   description = \"The private IP address of the EC2 metal instance\"\n }\n output \"region_name\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "use_spot_instance"],
    "notes": "Use aws_spot_instance_request instead of aws_instance to use Spot instances and save cost"
  },
  {
    "url": "https://github.com/oke-py/aws-tf/commit/ec2982c8742cc7bc294f8a3cc07ae9ba5ffcaced",
    "files": [
      {
        "filename": "budget.tf",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+resource \"aws_budgets_budget\" \"cost\" {\n+  name              = \"monthly-budget\"\n+  budget_type       = \"COST\"\n+  limit_amount      = \"30\"\n+  limit_unit        = \"USD\"\n+  time_period_start = \"2020-05-01_00:00\"\n+  time_unit         = \"MONTHLY\"\n+\n+  notification {\n+    comparison_operator        = \"GREATER_THAN\"\n+    notification_type          = \"ACTUAL\"\n+    subscriber_email_addresses = [\"okepy.naoki@gmail.com\"]\n+    threshold                  = 80\n+    threshold_type             = \"PERCENTAGE\"\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/wellcomecollection/platform-infrastructure/commit/cc8cb3ab5e257109ea9f6c19f4d034b1ac7ca4ca",
    "files": [
      {
        "filename": "README.md",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -17,4 +17,16 @@ This includes:\n     We cannot regenerate this easily (IDs are assigned randomly), so we want\n     to protect this from accidental changes.\n \n-*   Shared infrastructure used by other projects.\n\\ No newline at end of file\n+*   Shared infrastructure used by other projects.\n+\n+## Elastic Cloud Snapshots\n+\n+This repo includes the S3 bucket where snapshots from our cloud hosted Elasticsearch provider (Elastic Cloud) are stored for the Catalogue API.\n+\n+This repository needs to be registered with any new cluster that is created.\n+\n+See: https://www.elastic.co/guide/en/cloud/current/ec-aws-custom-repository.html\n+\n+The access key id and (encrypted) secret are available from the terraform outputs for the shared stack.\n+\n+To decrypt the secret for use you will need to base64 decode the secret output and decode it using the `wellcomedigitalplatform` secret key available via Keybase.\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/critical/iam.tf",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+# elasticcloud\n+\n+module \"elasticcloud-catalogue\" {\n+  source = \"../modules/elasticcloud\"\n+\n+  bucket_name = \"${aws_s3_bucket.elasticsearch-snapshots-catalogue.id}\"\n+  namespace   = \"catalogue\"\n+  pgp_pub_key = \"${local.wellcomedigitalplatform_pgp_pub_key}\"\n+\n+  principals = [\n+    \"${local.aws_platform_principal}\"\n+  ]\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/critical/locals.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+locals {\n+  account_id    = \"${data.aws_caller_identity.current.account_id}\"\n+  aws_platform_principal = \"arn:aws:iam::${local.account_id}:root\"\n+  wellcomedigitalplatform_pgp_pub_key = \"${data.template_file.pgp_pub_key.rendered}\"\n+}\n+\n+data \"template_file\" \"pgp_pub_key\" {\n+  template = \"${file(\"${path.module}/wellcomedigitalplatform.pub\")}\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/critical/outputs.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -17,3 +17,21 @@ output \"cognito_stacks_api_identifier\" {\n output \"admin_cidr_ingress\" {\n   value = \"${local.admin_cidr_ingress}\"\n }\n+\n+# Elasticcloud\n+\n+output \"elasticcloud_access_id\" {\n+  value = \"${module.elasticcloud-catalogue.elasticcloud_access_id}\"\n+}\n+\n+output \"elasticcloud_access_secret\" {\n+  value = \"${module.elasticcloud-catalogue.elasticcloud_access_secret}\"\n+}\n+\n+output \"elasticcloud_readonly_role_arn\" {\n+  value = \"${module.elasticcloud-catalogue.elasticcloud_readonly_role_arn}\"\n+}\n+\n+output \"elasticcloud_readonly_role_name\" {\n+  value = \"${module.elasticcloud-catalogue.elasticcloud_readonly_role_name}\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/critical/s3_elasticsearch.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+resource \"aws_s3_bucket\" \"elasticsearch-snapshots-catalogue\" {\n+  bucket = \"wellcomecollection-elasticsearch-snapshots-catalogue\"\n+  acl    = \"private\"\n+\n+  lifecycle {\n+    prevent_destroy = true\n+  }\n+}"
      },
      {
        "filename": "terraform/critical/wellcomedigitalplatform.pub",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+mQENBFwY66EBCADF3hClr8RWaH8vdobyzxkYf/Ec1p/9l9MDP6rEjh6AGoSoFggn79CyHp5o0EWx5CvaOcXQpf0tsfuXy7XfBVzDAOiyrYSnu5yS+UwUA8DGzqoM+gVAbm7i10EZo+uC6N9H09l48R48VmgSVVoAjNK0+N9RU0pnQxBESCV4/PJQRLyP3aLeZMrAaZtTHk2q9z9PGJQsUwIylhSXHWjb89aKRLeDuNNtxBgdIPd3SeMn2CfHCAMMQNgLCZJ1btTa5vCq76jyaauo8xqVncvzY3uH7dVBVR29DqCvgAa9F5g0kby/bMa1Q0x/SKqjNrGweFaRqtpAdzeA/vzSQ4uyQ3qFABEBAAG0QldlbGxjb21lIERpZ2l0YWwgUGxhdGZvcm0gPHdlbGxjb21lZGlnaXRhbHBsYXRmb3JtQHdlbGxjb21lLmFjLnVrPokBTgQTAQgAOBYhBCQdv/B+/mvembp4YmSNkd1aj8LDBQJcGOuhAhsDBQsJCAcCBhUICQoLAgQWAgMBAh4BAheAAAoJEGSNkd1aj8LDoysIAI1UjqUEvLykSeS+N2FfY3zvxAT0jM3pWVvn4A9pHUQsCrnXderzw+bmZAgFUdtx9CKjV5gNdpPVRovSrWPOmcaDrVVqa4KLSBeX24OK5J423sE8Isym4cRN+RO3ofuTDGBxorYS/VHYHood89eI2jXTgZz0iXwXuWXLZP0fYwnn6alYS/sHSf24ZImdfDPCpVql/tjBnx4FCqUDp6HDzOkbeysIihSqLwVy67xvVdR9LmqxsVv3lNb5bv3txRwALLKJphmMrUERSSTiYIs5FVWrjDLv7dtg4x4EFMHvWxJjYsIOnseM2vZm7CUOWMWoE3BrrUjc3P+7XQ6uBLQ46vC5AQ0EXBjroQEIALwIcvDve0R4xmzGf0r2YvWsXApfWC46ykwTKKOtrTOnkmOOkgZai8EIFuzHT9fI954AVIHsdZjmkBXHylBtzk8jcizhxgOKlTexQD1alWvXA7SjSrTGfxbuW/7m6RDGKU4O6K8qvSRH7dt4D37pnDeTuSZuEt+cfkIJIeH4sYWDaouIyydqUCq9Kd5e2glABrszCKgVsScT5dwYB3GavoIOtplc3MBkmMhnvcLnUqaiQV0MoFvtf5Q4vgYYhfPZcvIT3ITjlv/5HeVZG+IXkfPsIeY1qhOB+Ev1sw82baVZxJFohg0hd40lk2KJhZ4P8lW1xyhzsbVNg1tJzLw2bm0AEQEAAYkBNgQYAQgAIBYhBCQdv/B+/mvembp4YmSNkd1aj8LDBQJcGOuhAhsMAAoJEGSNkd1aj8LDWC8H/3G+4u77IAZ7+3liZSaE/zqwLh6MqOVKHsutSgvp0O9oLyIUitnVknOTob3yDOr+eaiVX3J7CXWxGFQ9nTvIvVZfiXavPAoEyW0xHWrPWLTvY+VJQIEO8bbH9z9vqS/+Fh6jrUMZNGkYIco8vIBf6iFkgs7+tVMH3YX2ybCs87CIrIZwRCXgrGCOXXgVq1IaUG0rjkIk+JrWyVAW2unp2SUhcbcjJhiIs6WQEUQE3UX83IxTK7fXOF1W2MuX43/MlsHoo6OWqSejM8cra7zZdrsjHxrZMQAwslXVAXuCw4ky0dgRKPrsu3po2v5+tObEo9n9ybRoyH21AGInUlXKtmM=\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/modules/elasticcloud/main.tf",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "status": "added",
        "patch": "@@ -0,0 +1,64 @@\n+# elasticcloud snapshot reader\n+\n+resource \"aws_iam_role\" \"elasticcloud-snapshot-readonly\" {\n+  assume_role_policy = \"${data.aws_iam_policy_document.assume-elasticcloud-snapshot-readonly.json}\"\n+}\n+\n+resource \"aws_iam_role_policy\" \"elasticcloud-snapshot-readonly\" {\n+  policy = \"${data.aws_iam_policy_document.elasticcloud-snapshot-readonly.json}\"\n+  role = \"${aws_iam_role.elasticcloud-snapshot-readonly.id}\"\n+}\n+\n+data \"aws_iam_policy_document\" \"elasticcloud-snapshot-readonly\" {\n+  statement {\n+    actions = [\n+      \"s3:List*\",\n+      \"s3:Get*\"\n+    ]\n+    resources = [\n+      \"${data.aws_s3_bucket.elasticcloud-snapshots.arn}\",\n+      \"${data.aws_s3_bucket.elasticcloud-snapshots.arn}/*\"\n+    ]\n+  }\n+}\n+\n+data \"aws_iam_policy_document\" \"assume-elasticcloud-snapshot-readonly\" {\n+  statement {\n+    actions = [\"sts:AssumeRole\"]\n+    principals {\n+      identifiers = [\"${var.principals}\"]\n+      type = \"AWS\"\n+    }\n+  }\n+}\n+\n+# elasticcloud service\n+\n+resource \"aws_iam_user\" \"elasticcloud\" {\n+  name = \"${var.namespace}-elasticcloud\"\n+}\n+\n+resource \"aws_iam_access_key\" \"elasticcloud\" {\n+  user = \"${aws_iam_user.elasticcloud.name}\"\n+  pgp_key = \"${var.pgp_pub_key}\"\n+}\n+\n+resource \"aws_iam_user_policy\" \"elasticcloud\" {\n+  user = \"${aws_iam_user.elasticcloud.name}\"\n+\n+  policy = \"${data.aws_iam_policy_document.elasticcloud.json}\"\n+}\n+\n+data \"aws_s3_bucket\" \"elasticcloud-snapshots\" {\n+  bucket = \"${var.bucket_name}\"\n+}\n+\n+data \"aws_iam_policy_document\" \"elasticcloud\" {\n+  statement {\n+    actions = [\"s3:*\"]\n+    resources = [\n+      \"${data.aws_s3_bucket.elasticcloud-snapshots.arn}\",\n+      \"${data.aws_s3_bucket.elasticcloud-snapshots.arn}/*\"\n+    ]\n+  }\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/modules/elasticcloud/outputs.tf",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "added",
        "patch": "@@ -0,0 +1,15 @@\n+output \"elasticcloud_access_id\" {\n+  value = \"${aws_iam_access_key.elasticcloud.id}\"\n+}\n+\n+output \"elasticcloud_access_secret\" {\n+  value = \"${aws_iam_access_key.elasticcloud.encrypted_secret}\"\n+}\n+\n+output \"elasticcloud_readonly_role_arn\" {\n+  value = \"${aws_iam_role.elasticcloud-snapshot-readonly.arn}\"\n+}\n+\n+output \"elasticcloud_readonly_role_name\" {\n+  value = \"${aws_iam_role.elasticcloud-snapshot-readonly.name}\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/modules/elasticcloud/variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+variable \"namespace\" {}\n+variable \"bucket_name\" {}\n+variable \"pgp_pub_key\" {}\n+variable \"principals\" {\n+  type = \"list\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/shared/iam.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,3 +1,5 @@\n+# cloudhealth\n+\n module \"cloudhealth-catalogue\" {\n   source = \"../modules/cloudhealth\"\n "
      },
      {
        "filename": "terraform/shared/locals.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,3 +1,5 @@\n locals {\n   aws_region = \"eu-west-1\"\n }\n+\n+"
      }
    ],
    "existing_codes": [
      "instance",
      "increase"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/combinator-ml/terraform-google-kubernetes/commit/703ef359dbe7d4d2f2bbf9c0bbd31f5b4bc30e68",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -27,3 +27,6 @@ override.tf.json\n \n # Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan\n # example: *tfplan*\n+\n+*.tfvars\n+*.hcl"
      },
      {
        "filename": "component.tf",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "status": "removed",
        "patch": "@@ -1,7 +0,0 @@\n-# Try to avoid hard coding any variables. They should be vars or locals.\n-\n-resource \"kubernetes_namespace\" \"namespace\" {\n-  metadata {\n-    name = var.namespace\n-  }\n-}"
      },
      {
        "filename": "examples/basic/main.tf",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -1,3 +1,6 @@\n-module \"combinator-module\" {\n-  source = \"../../\"\n+variable \"gcp_project_id\" {}\n+\n+module \"kubernetes\" {\n+  source         = \"../../\"\n+  gcp_project_id = var.gcp_project_id\n }"
      },
      {
        "filename": "iam.tf",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "status": "added",
        "patch": "@@ -0,0 +1,33 @@\n+# https://www.terraform.io/docs/providers/random/r/id.html\n+resource \"random_id\" \"entropy\" {\n+  byte_length = 6\n+}\n+\n+# https://www.terraform.io/docs/providers/google/r/google_service_account.html\n+resource \"google_service_account\" \"default\" {\n+  account_id   = \"cluster-minimal-${random_id.entropy.hex}\"\n+  display_name = \"Minimal service account for GKE cluster ${var.cluster_name}\"\n+  project      = var.gcp_project_id\n+}\n+\n+# https://www.terraform.io/docs/providers/google/r/google_project_iam.html\n+resource \"google_project_iam_member\" \"logging-log-writer\" {\n+  role   = \"roles/logging.logWriter\"\n+  member = \"serviceAccount:${google_service_account.default.email}\"\n+}\n+\n+resource \"google_project_iam_member\" \"monitoring-metric-writer\" {\n+  role   = \"roles/monitoring.metricWriter\"\n+  member = \"serviceAccount:${google_service_account.default.email}\"\n+}\n+\n+resource \"google_project_iam_member\" \"monitoring-viewer\" {\n+  role   = \"roles/monitoring.viewer\"\n+  member = \"serviceAccount:${google_service_account.default.email}\"\n+}\n+\n+resource \"google_project_iam_member\" \"storage-object-viewer\" {\n+  count  = var.access_private_images == \"true\" ? 1 : 0\n+  role   = \"roles/storage.objectViewer\"\n+  member = \"serviceAccount:${google_service_account.default.email}\"\n+}"
      },
      {
        "filename": "kubernetes.tf",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "status": "added",
        "patch": "@@ -0,0 +1,87 @@\n+terraform {\n+  required_version = \"~> 0.15\"\n+}\n+\n+# https://www.terraform.io/docs/providers/google/index.html\n+provider \"google\" {\n+  project = var.gcp_project_id\n+  region  = var.gcp_region\n+}\n+\n+module \"vpc\" {\n+  source       = \"terraform-google-modules/network/google\"\n+  project_id   = var.gcp_project_id\n+  network_name = var.vpc_network_name\n+\n+  subnets = [\n+    {\n+      subnet_name           = var.vpc_subnetwork_name\n+      subnet_ip             = var.vpc_subnetwork_cidr_range\n+      subnet_region         = var.gcp_region\n+      subnet_private_access = true\n+    }\n+  ]\n+\n+  secondary_ranges = {\n+    \"${var.vpc_subnetwork_name}\" = [\n+      {\n+        range_name    = var.cluster_secondary_range_name\n+        ip_cidr_range = var.cluster_secondary_range_cidr\n+      },\n+      {\n+        range_name    = var.services_secondary_range_name\n+        ip_cidr_range = var.services_secondary_range_cidr\n+      },\n+    ]\n+  }\n+\n+\n+  routes = [\n+    {\n+      name              = \"egress-internet\"\n+      description       = \"route through IGW to access internet\"\n+      destination_range = \"0.0.0.0/0\"\n+      tags              = \"egress-inet\"\n+      next_hop_internet = \"true\"\n+    }\n+  ]\n+}\n+\n+module \"gke\" {\n+  source                     = \"terraform-google-modules/kubernetes-engine/google//modules/private-cluster\"\n+  project_id                 = var.gcp_project_id\n+  name                       = var.cluster_name\n+  regional                   = var.regional\n+  region                     = var.gcp_region\n+  zones                      = var.gcp_zones\n+  network                    = var.vpc_network_name\n+  subnetwork                 = var.vpc_subnetwork_name\n+  ip_range_pods              = var.cluster_secondary_range_name\n+  ip_range_services          = var.services_secondary_range_name\n+  http_load_balancing        = false\n+  horizontal_pod_autoscaling = false\n+  network_policy             = false\n+  remove_default_node_pool   = true\n+  node_pools                 = var.node_pools\n+  issue_client_certificate   = var.client_certificate_enabled\n+  enable_private_nodes       = true\n+  enable_private_endpoint    = false\n+}\n+\n+module \"router\" {\n+  source  = \"terraform-google-modules/cloud-router/google\"\n+  version = \"~> 0.1\"\n+\n+  name    = \"prod-router\"\n+  project = var.gcp_project_id\n+  region  = var.gcp_region\n+  network = module.vpc.network_self_link\n+}\n+\n+module \"nat\" {\n+  source     = \"terraform-google-modules/cloud-nat/google\"\n+  version    = \"~> 1.2\"\n+  project_id = var.gcp_project_id\n+  region     = var.gcp_region\n+  router     = module.router.router.name\n+}"
      },
      {
        "filename": "locals.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,3 +1,2 @@\n locals {\n-  # Attempt to place all strings or generated fields here, rather than in the files\n }"
      },
      {
        "filename": "variables.tf",
        "additions": 207,
        "deletions": 5,
        "changes": 212,
        "status": "modified",
        "patch": "@@ -1,8 +1,210 @@\n-# Create variables for anything you think might be used.\n-# Ensure all vars have defaults where possible\n+variable \"gcp_project_id\" {\n+  type        = string\n+  description = <<EOF\n+The ID of the project in which the resources belong.\n+EOF\n+}\n+\n+variable \"cluster_name\" {\n+  type        = string\n+  default     = \"combinator\"\n+  description = <<EOF\n+The name of the cluster, unique within the project and zone.\n+EOF\n+}\n+\n+variable \"gcp_region\" {\n+  type        = string\n+  default     = \"europe-west1\"\n+  description = \"GCP region\"\n+}\n+\n+variable \"gcp_zones\" {\n+  type        = list(string)\n+  default     = [\"europe-west1-d\"]\n+  description = \"GCP zone\"\n+}\n+\n+variable \"daily_maintenance_window_start_time\" {\n+  type        = string\n+  default     = \"03:00\"\n+  description = <<EOF\n+The start time of the 4 hour window for daily maintenance operations RFC3339\n+format HH:MM, where HH : [00-23] and MM : [00-59] GMT.\n+EOF\n+}\n+\n+variable \"node_pools\" {\n+  type = list(map(string))\n+  default = [\n+    {\n+      name            = \"default\"\n+      machine_type    = \"e2-medium\"\n+      min_count       = 1 # Nodes per zone! Must be at least 1 to host system pods\n+      max_count       = 1\n+      local_ssd_count = 0\n+      disk_size_gb    = 30\n+      disk_type       = \"pd-standard\"\n+      image_type      = \"COS\"\n+      auto_repair     = true\n+      preemptible     = true\n+    }\n+  ]\n+  description = <<EOF\n+The list of node pool configurations, each should include:\n+name - The name of the node pool, which will be suffixed with '-pool'.\n+Defaults to pool number in the Terraform list, starting from 1.\n+initial_node_count - The initial node count for the pool. Changing this will\n+force recreation of the resource. Defaults to 1.\n+autoscaling_min_node_count - Minimum number of nodes in the NodePool. Must be\n+>=0 and <= max_node_count. Defaults to 2.\n+autoscaling_max_node_count - Maximum number of nodes in the NodePool. Must be\n+>= min_node_count. Defaults to 3.\n+management_auto_repair - Whether the nodes will be automatically repaired.\n+Defaults to 'true'.\n+management_auto_upgrade - Whether the nodes will be automatically upgraded.\n+Defaults to 'true'.\n+node_config_machine_type - The name of a Google Compute Engine machine type.\n+Defaults to n1-standard-1. To create a custom machine type, value should be\n+set as specified here:\n+https://cloud.google.com/compute/docs/reference/rest/v1/instances#machineType\n+node_config_disk_type - Type of the disk attached to each node (e.g.\n+'pd-standard' or 'pd-ssd'). Defaults to 'pd-standard'\n+node_config_disk_size_gb - Size of the disk attached to each node, specified\n+in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.\n+node_config_preemptible - Whether or not the underlying node VMs are\n+preemptible. See the official documentation for more information. Defaults to\n+false. https://cloud.google.com/kubernetes-engine/docs/how-to/preemptible-vms\n+EOF\n+}\n+\n+variable \"vpc_network_name\" {\n+  type        = string\n+  default     = \"combinator-network\"\n+  description = <<EOF\n+The name of the Google Compute Engine network to which the cluster is\n+connected.\n+EOF\n+}\n+\n+variable \"vpc_subnetwork_name\" {\n+  type        = string\n+  default     = \"combinator-subnetwork\"\n+  description = <<EOF\n+The name of the Google Compute Engine subnetwork in which the cluster's\n+instances are launched.\n+EOF\n+}\n+\n+variable \"vpc_subnetwork_cidr_range\" {\n+  type        = string\n+  default     = \"10.0.16.0/20\"\n+  description = \"CIDR range for node subnet\"\n+}\n+\n+variable \"cluster_secondary_range_name\" {\n+  type        = string\n+  default     = \"combinator-pod-cidr\"\n+  description = <<EOF\n+The name of the secondary range to be used as for the cluster CIDR block.\n+The secondary range will be used for pod IP addresses. This must be an\n+existing secondary range associated with the cluster subnetwork.\n+EOF\n+}\n+\n+variable \"cluster_secondary_range_cidr\" {\n+  type        = string\n+  default     = \"10.16.0.0/12\"\n+  description = \"CIDR range for pods\"\n+}\n+\n+variable \"services_secondary_range_name\" {\n+  type        = string\n+  default     = \"combinator-services-cidr\"\n+  description = <<EOF\n+The name of the secondary range to be used as for the services CIDR block.\n+The secondary range will be used for service ClusterIPs. This must be an\n+existing secondary range associated with the cluster subnetwork.\n+EOF\n+}\n+\n+variable \"services_secondary_range_cidr\" {\n+  type        = string\n+  default     = \"10.1.0.0/20\"\n+  description = \"CIDR range for services\"\n+}\n+\n+variable \"master_ipv4_cidr_block\" {\n+  type        = string\n+  default     = \"172.16.0.0/28\"\n+  description = <<EOF\n+The IP range in CIDR notation to use for the hosted master network. This\n+range will be used for assigning internal IP addresses to the master or set\n+of masters, as well as the ILB VIP. This range must not overlap with any\n+other ranges in use within the cluster's network.\n+EOF\n+}\n \n-variable \"namespace\" {\n-  description = \"The namespace to install into.\"\n+variable \"access_private_images\" {\n   type        = string\n-  default     = \"default\"\n+  default     = \"false\"\n+  description = <<EOF\n+Whether to create the IAM role for storage.objectViewer, required to access\n+GCR for private container images.\n+EOF\n+}\n+\n+variable \"http_load_balancing_disabled\" {\n+  type        = string\n+  default     = \"false\"\n+  description = <<EOF\n+The status of the HTTP (L7) load balancing controller addon, which makes it\n+easy to set up HTTP load balancers for services in a cluster. It is enabled\n+by default; set disabled = true to disable.\n+EOF\n+}\n+\n+variable \"master_authorized_networks_cidr_blocks\" {\n+  type = list(map(string))\n+  default = [\n+    {\n+      # External network that can access Kubernetes master through HTTPS. Must\n+      # be specified in CIDR notation. This block should allow access from any\n+      # address, but is given explicitly to prevernt Google's defaults from\n+      # fighting with Terraform.\n+      cidr_block = \"0.0.0.0/0\"\n+      # Field for users to identify CIDR blocks.\n+      display_name = \"default\"\n+    },\n+  ]\n+  description = <<EOF\n+Defines up to 20 external networks that can access Kubernetes master\n+through HTTPS.\n+EOF\n+}\n+\n+variable \"network_policy_enabled\" {\n+  type        = string\n+  default     = \"false\"\n+  description = <<EOF\n+Enables the NetworkPolicy feature.\n+EOF\n+}\n+\n+variable \"client_certificate_enabled\" {\n+  type        = string\n+  default     = \"true\"\n+  description = <<EOF\n+Enables the creation of a client certificate.\n+This is required if you want to connect from Gitlab.\n+EOF\n+}\n+\n+variable \"regional\" {\n+  type        = bool\n+  default     = false\n+  description = <<EOF\n+Regional clusters (set true) have masters in multiple regions but are more expensive.\n+Zonal clusters (set false) are cheaper (free for your first one) but are not redundant.\n+EOF\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["gcp", "not_relevant"],
    "notes": "The commit does not make cost-related changes"
  },
  {
    "url": "https://github.com/combinator-ml/terraform-google-kubernetes/commit/27deaade65fd58e978b0a604c6c3fcd6683306bb",
    "files": [
      {
        "filename": ".header.md",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -13,8 +13,10 @@ module \"terraform-google-kubernetes\" {\n }\n ```\n \n+There are several examples that provide different functionality. For example there are minimal low-cost and cheap(est) cpu-autoscaling versions. See the [examples directory](examples) for more information.\n+\n See the full configuration options below.\n \n ### Costs\n \n-This runs in a single zone, which means it falls under GCP's free management tier and you don't have to pay for management nodes, only worker nodes. After the first zone you pay, and that's when it gets expensive. See the [GCP pricing pages](https://cloud.google.com/kubernetes-engine/pricing#cluster_management_fee_and_free_tier) for more information.\n+By default, this runs in a single zone, which means it falls under GCP's free management tier and you don't have to pay for management nodes, only worker nodes. After the first zone you pay, and that's when it gets expensive. See the [GCP pricing pages](https://cloud.google.com/kubernetes-engine/pricing#cluster_management_fee_and_free_tier) for more information."
      },
      {
        "filename": "examples/autoscaling-cpu/main.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+variable \"gcp_project_id\" {\n+  default = \"your-gcp-project-id\"\n+}\n+\n+module \"kubernetes\" {\n+  source         = \"combinator-ml/kubernetes/google\"\n+  gcp_project_id = var.gcp_project_id\n+  node_pools = [\n+    {\n+      name            = \"default\"\n+      machine_type    = \"e2-medium\"\n+      min_count       = 1 # Nodes per zone! Must be at least 1 to host system pods\n+      max_count       = 10\n+      local_ssd_count = 0\n+      disk_size_gb    = 30\n+      disk_type       = \"pd-standard\"\n+      image_type      = \"COS\"\n+      auto_repair     = true\n+      preemptible     = true\n+    }\n+  ]\n+}"
      },
      {
        "filename": "kubernetes.tf",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -54,8 +54,8 @@ module \"gke\" {\n   regional                   = var.regional\n   region                     = var.gcp_region\n   zones                      = var.gcp_zones\n-  network                    = var.vpc_network_name\n-  subnetwork                 = var.vpc_subnetwork_name\n+  network                    = module.vpc.network_name\n+  subnetwork                 = module.vpc.subnets_names[0]\n   ip_range_pods              = var.cluster_secondary_range_name\n   ip_range_services          = var.services_secondary_range_name\n   http_load_balancing        = false\n@@ -66,6 +66,9 @@ module \"gke\" {\n   issue_client_certificate   = var.client_certificate_enabled\n   enable_private_nodes       = true\n   enable_private_endpoint    = false\n+  depends_on = [\n+    module.vpc\n+  ]\n }\n \n module \"router\" {\n@@ -76,6 +79,9 @@ module \"router\" {\n   project = var.gcp_project_id\n   region  = var.gcp_region\n   network = module.vpc.network_self_link\n+  depends_on = [\n+    module.vpc\n+  ]\n }\n \n module \"nat\" {\n@@ -84,4 +90,7 @@ module \"nat\" {\n   project_id = var.gcp_project_id\n   region     = var.gcp_region\n   router     = module.router.router.name\n+  depends_on = [\n+    module.router\n+  ]\n }"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cob16/aws_static_website/commit/0d4fbd0a7b296a5c9377a835dff89d1499716082",
    "files": [
      {
        "filename": "README.md",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -1,4 +1,6 @@\n # A static website\n+On a AWS free account this will cost around $0.60 per month (not including domain registration)\n+\n A cloudfront hosted website that uses a private s3 backend\n ```\n                     +------+       +--------------+      +------+\n@@ -8,11 +10,20 @@ A cloudfront hosted website that uses a private s3 backend\n                     +------+       +--------------+      +------+\n ```\n \n-On a AWS free account this will cost arround $0.60 per month (not including domain registration)\n+## And some monitoring \n+Cloudwatch billing and usage alerts to pager duty based of customisable thresholds\n+```\n+                    +------------+       +-------+      +-------------+\n+                    |            |       |       |      |             |\n+                    | Cloudwatch | +---> |  SNS  | +--> |  Pagerduty  |\n+                    |            |       |       |      |             |\n+                    +------------+       +-------+      +-------------+\n+```\n \n # Prerequisities\n - Terraform (+v0.12)\n-- An AWS account\n+- An AWS account (free tier)\n+- Pagerduty account (free tier)\n \n # Setup\n - Remove line 8 in `main.tf` `backend.s3` "
      },
      {
        "filename": "example.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -16,3 +16,4 @@ extra_a_records = {\n extra_aaaa_records = {\n   \"subdomain\" : [\"2001:0db8::0001:0000\"]\n }\n+pagerduty_token = \"API KEY FOR PAGERDUTY https://support.pagerduty.com/docs/generating-api-keys#section-generating-a-general-access-rest-api-key\""
      },
      {
        "filename": "main.tf",
        "additions": 48,
        "deletions": 2,
        "changes": 50,
        "status": "modified",
        "patch": "@@ -15,6 +15,11 @@ provider \"aws\" {\n   alias  = \"us_east_1\"\n }\n \n+provider \"pagerduty\" {\n+  version = \"1.7.9\"\n+  token   = var.pagerduty_token\n+}\n+\n module \"label\" {\n   source  = \"cloudposse/label/null\"\n   version = \"0.16.0\"\n@@ -33,8 +38,8 @@ module \"static_website\" {\n   source = \"./modules/static_website\"\n \n   providers = {\n-    aws     = aws\n-    aws.foo = aws.us_east_1\n+    aws           = aws\n+    aws.us_east_1 = aws.us_east_1\n   }\n \n   prefix = module.label.id\n@@ -45,3 +50,44 @@ module \"static_website\" {\n   namespace        = var.namespace\n   website_name     = var.website_name\n }\n+\n+data \"aws_caller_identity\" \"current\" {}\n+\n+module \"general_alarms_sns\" {\n+  source = \"./modules/sns_topic\"\n+\n+  providers = {\n+    aws = aws.us_east_1\n+  }\n+\n+  name       = \"${module.label.id}-general-alarms\"\n+  account_id = data.aws_caller_identity.current.account_id\n+  tags       = module.label.tags\n+}\n+\n+module \"website_monitoring\" {\n+  source = \"./modules/website_monitoring\"\n+\n+  providers = {\n+    aws = aws.us_east_1\n+  }\n+\n+  prefix = module.label.id\n+  tags   = module.label.tags\n+\n+  account_id                       = data.aws_caller_identity.current.account_id\n+  distribution_id                  = module.static_website.distribution_id\n+  cloudwatch_general_alarm_sns_arn = module.general_alarms_sns.arn\n+}\n+\n+module \"pagerduty\" {\n+  source = \"./modules/pagerduty\"\n+\n+  providers = {\n+    aws       = aws.us_east_1\n+    pagerduty = pagerduty\n+  }\n+\n+  website_name = var.website_name\n+  sns_topic    = module.general_alarms_sns.arn\n+}"
      },
      {
        "filename": "modules/pagerduty/service.tf",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "status": "added",
        "patch": "@@ -0,0 +1,23 @@\n+data \"pagerduty_escalation_policy\" \"default\" {\n+  name = \"Default\"\n+}\n+\n+resource \"pagerduty_service\" \"website\" {\n+  name              = var.website_name\n+  description       = \"cloudwatch alerts for ${var.website_name}\"\n+  escalation_policy = data.pagerduty_escalation_policy.default.id\n+  alert_creation    = \"create_alerts_and_incidents\"\n+\n+  acknowledgement_timeout = \"null\"\n+  auto_resolve_timeout    = \"null\"\n+}\n+\n+data \"pagerduty_vendor\" \"cloudwatch\" {\n+  name = \"Cloudwatch\"\n+}\n+\n+resource \"pagerduty_service_integration\" \"aws-cw\" {\n+  name    = data.pagerduty_vendor.cloudwatch.name\n+  vendor  = data.pagerduty_vendor.cloudwatch.id\n+  service = pagerduty_service.website.id\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/pagerduty/sns-subscription.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+resource \"aws_sns_topic_subscription\" \"this\" {\n+  protocol               = \"https\"\n+  topic_arn              = var.sns_topic\n+  endpoint               = \"https://events.pagerduty.com/integration/${pagerduty_service_integration.aws-cw.integration_key}/enqueue\"\n+  endpoint_auto_confirms = true\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/pagerduty/variables.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+variable \"website_name\" {\n+  type = string\n+}\n+\n+variable \"sns_topic\" {\n+  type = string\n+}"
      },
      {
        "filename": "modules/sns_topic/outputs.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+output \"arn\" {\n+  value = aws_sns_topic.this.arn\n+}"
      },
      {
        "filename": "modules/sns_topic/sns.tf",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "status": "added",
        "patch": "@@ -0,0 +1,54 @@\n+resource \"aws_sns_topic\" \"this\" {\n+  name = var.name\n+  tags = var.tags\n+}\n+\n+resource \"aws_sns_topic_policy\" \"default\" {\n+  arn    = aws_sns_topic.this.arn\n+  policy = data.aws_iam_policy_document.allow-sws-service-sns.json\n+}\n+\n+data \"aws_iam_policy_document\" \"allow-sws-service-sns\" {\n+  statement {\n+    sid = \"__default_policy_ID\"\n+    principals {\n+      type        = \"AWS\"\n+      identifiers = [\"*\"]\n+    }\n+    actions = [\n+      \"SNS:GetTopicAttributes\",\n+      \"SNS:SetTopicAttributes\",\n+      \"SNS:AddPermission\",\n+      \"SNS:RemovePermission\",\n+      \"SNS:DeleteTopic\",\n+      \"SNS:Subscribe\",\n+      \"SNS:ListSubscriptionsByTopic\",\n+      \"SNS:Publish\",\n+      \"SNS:Receive\"\n+    ]\n+    condition {\n+      test     = \"StringEquals\"\n+      variable = \"AWS:SourceOwner\"\n+\n+      values = [\n+        \"arn:aws:iam::${var.account_id}:root\",\n+      ]\n+    }\n+    resources = [\n+      aws_sns_topic.this.arn\n+    ]\n+  }\n+  statement {\n+    sid = \"Allow_Publish_Alarms\"\n+    actions = [\n+      \"sns:Publish\"\n+    ]\n+    principals {\n+      identifiers = [\"cloudwatch.amazonaws.com\"]\n+      type        = \"Service\"\n+    }\n+    resources = [\n+      aws_sns_topic.this.arn\n+    ]\n+  }\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/sns_topic/variables.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+variable \"name\" {\n+  type = string\n+}\n+\n+variable \"tags\" {\n+  type = map(string)\n+}\n+\n+variable \"account_id\" {\n+  type = string\n+}"
      },
      {
        "filename": "modules/static_website/outputs.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -3,4 +3,7 @@ output \"aws_cloudfront_distribution\" {\n }\n output \"s3_bucket_name\" {\n   value = aws_s3_bucket.website.bucket\n-}\n\\ No newline at end of file\n+}\n+output \"distribution_id\" {\n+  value = aws_cloudfront_distribution.www_distribution.id\n+}"
      },
      {
        "filename": "modules/website_monitoring/alarms.tf",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "status": "added",
        "patch": "@@ -0,0 +1,62 @@\n+variable \"estimated_billing_threshold\" {\n+  description = \"the cost in $ of when to fire an alert\"\n+  type        = number\n+  default     = 2\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"six-hour-billing-warning\" {\n+  alarm_name          = \"High Billing Estimate\"\n+  comparison_operator = \"GreaterThanThreshold\"\n+  threshold           = var.estimated_billing_threshold\n+\n+  datapoints_to_alarm = 1\n+  evaluation_periods  = 1\n+  period              = 21600 //billing metrics are only calculated every 6 hours, reducing this number will have no effect\n+  statistic           = \"Maximum\"\n+  treat_missing_data  = \"breaching\"\n+\n+  namespace   = \"AWS/Billing\"\n+  metric_name = \"EstimatedCharges\"\n+  dimensions = {\n+    Currency = \"USD\"\n+  }\n+\n+\n+  alarm_actions = [\n+    var.cloudwatch_general_alarm_sns_arn\n+  ]\n+  ok_actions = [\n+    var.cloudwatch_general_alarm_sns_arn\n+  ]\n+\n+  tags = var.tags\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"cloudfront-free-tier-limit\" {\n+  alarm_name          = \"Cloudfront free requests limit\"\n+  comparison_operator = \"GreaterThanThreshold\"\n+  threshold           = 66000 //2 million requests per month on the free tear, devided over 30 days\n+\n+  datapoints_to_alarm = 1\n+  evaluation_periods  = 1\n+  period              = 86400\n+  statistic           = \"Sum\"\n+  treat_missing_data  = \"missing\"\n+\n+  namespace   = \"AWS/CloudFront\"\n+  metric_name = \"Requests\"\n+  dimensions = {\n+    DistributionId = var.distribution_id\n+    Region         = \"Global\"\n+  }\n+\n+\n+  alarm_actions = [\n+    var.cloudwatch_general_alarm_sns_arn\n+  ]\n+  ok_actions = [\n+    var.cloudwatch_general_alarm_sns_arn\n+  ]\n+\n+  tags = var.tags\n+}"
      },
      {
        "filename": "modules/website_monitoring/variables.tf",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+variable \"prefix\" {\n+  type = string\n+}\n+\n+variable \"tags\" {\n+  type = map(string)\n+}\n+\n+variable \"account_id\" {\n+  type = string\n+}\n+\n+variable \"distribution_id\" {\n+  type = string\n+}\n+\n+variable \"cloudwatch_general_alarm_sns_arn\" {\n+  type = string\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -38,3 +38,7 @@ variable \"extra_txt_records\" {\n   type    = map(list(string))\n   default = {}\n }\n+\n+variable \"pagerduty_token\" {\n+  type = string\n+}"
      }
    ],
    "existing_codes": [
      "awareness",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/deadlysyn/terraform-keycloak-aws/commit/1c982ac4120ae3ed5a88c38f2a4d568ad9a83d22",
    "files": [
      {
        "filename": "environments/template/terraform.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -60,6 +60,6 @@ desired_count                      = 2 # ECS tasks\n log_retention_days                 = 5\n \n # https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html\n-db_instance_type         = \"db.r5.large\"\n+db_instance_type         = \"db.r6g.large\"\n db_backup_retention_days = 5\n db_cluster_size          = 2"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from db.r5.large to db.r6g.large"
  },
  {
    "url": "https://github.com/JaredStufftGD/grok-airflow/commit/7ac9544b0c651fd8193eb063079514d0aa41e290",
    "files": [
      {
        "filename": "terraform/modules/containers/main.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -385,10 +385,13 @@ resource \"aws_ecs_service\" \"worker_service\" {\n   cluster = aws_ecs_cluster.cluster.id\n   task_definition = aws_ecs_task_definition.worker_task.arn\n   desired_count = var.worker_desired_count\n-  launch_type = \"FARGATE\"\n   force_new_deployment = true\n   network_configuration {\n     subnets = var.worker_subnets\n     security_groups = [var.vpc_default_security_group_id]\n   }\n+  capacity_provider_strategy {\n+    capacity_provider = \"FARGATE_SPOT\"\n+    weight = 1\n+  }\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["aws", "use_fargate_spot_capacity_provider"],
    "notes": "Use Fargate Spot capacity provider for ECS instead of regular Fargate using capacity_provider_strategy capacity_provider = 'FARGATE_SPOT'"
  },
  {
    "url": "https://github.com/rajesh-nitc/gcp-foundation/commit/fc054a7183757d1e51e371e7329c5cf848cc6dd8",
    "files": [
      {
        "filename": "1-org/envs/shared/log_sinks.tf",
        "additions": 41,
        "deletions": 41,
        "changes": 82,
        "status": "modified",
        "patch": "@@ -1,51 +1,51 @@\n-locals {\n-  parent_resource_id   = var.parent_folder != \"\" ? var.parent_folder : var.org_id\n-  parent_resource_type = var.parent_folder != \"\" ? \"folder\" : \"organization\"\n-  main_logs_filter     = <<EOF\n-    logName: /logs/cloudaudit.googleapis.com%2Factivity OR\n-    logName: /logs/cloudaudit.googleapis.com%2Fsystem_event OR\n-    logName: /logs/cloudaudit.googleapis.com%2Fdata_access OR\n-    logName: /logs/compute.googleapis.com%2Fvpc_flows OR\n-    logName: /logs/compute.googleapis.com%2Ffirewall OR\n-    logName: /logs/cloudaudit.googleapis.com%2Faccess_transparency\n-EOF\n-  all_logs_filter      = \"\"\n-}\n+# locals {\n+#   parent_resource_id   = var.parent_folder != \"\" ? var.parent_folder : var.org_id\n+#   parent_resource_type = var.parent_folder != \"\" ? \"folder\" : \"organization\"\n+#   main_logs_filter     = <<EOF\n+#     logName: /logs/cloudaudit.googleapis.com%2Factivity OR\n+#     logName: /logs/cloudaudit.googleapis.com%2Fsystem_event OR\n+#     logName: /logs/cloudaudit.googleapis.com%2Fdata_access OR\n+#     logName: /logs/compute.googleapis.com%2Fvpc_flows OR\n+#     logName: /logs/compute.googleapis.com%2Ffirewall OR\n+#     logName: /logs/cloudaudit.googleapis.com%2Faccess_transparency\n+# EOF\n+#   all_logs_filter      = \"\"\n+# }\n \n-resource \"random_string\" \"suffix\" {\n-  length  = 4\n-  upper   = false\n-  special = false\n-}\n+# resource \"random_string\" \"suffix\" {\n+#   length  = 4\n+#   upper   = false\n+#   special = false\n+# }\n \n /******************************************\n   Send logs to BigQuery\n *****************************************/\n \n-module \"log_export_to_biqquery\" {\n-  source                 = \"terraform-google-modules/log-export/google\"\n-  version                = \"~> 7.0.0\"\n-  destination_uri        = module.bigquery_destination.destination_uri\n-  filter                 = local.main_logs_filter\n-  log_sink_name          = \"sk-c-logging-bq\"\n-  parent_resource_id     = local.parent_resource_id\n-  parent_resource_type   = local.parent_resource_type\n-  include_children       = true\n-  unique_writer_identity = true\n-  bigquery_options = {\n-    use_partitioned_tables = true\n-  }\n-}\n+# module \"log_export_to_biqquery\" {\n+#   source                 = \"terraform-google-modules/log-export/google\"\n+#   version                = \"~> 7.0.0\"\n+#   destination_uri        = module.bigquery_destination.destination_uri\n+#   filter                 = local.main_logs_filter\n+#   log_sink_name          = \"sk-c-logging-bq\"\n+#   parent_resource_id     = local.parent_resource_id\n+#   parent_resource_type   = local.parent_resource_type\n+#   include_children       = true\n+#   unique_writer_identity = true\n+#   bigquery_options = {\n+#     use_partitioned_tables = true\n+#   }\n+# }\n \n-module \"bigquery_destination\" {\n-  source                     = \"terraform-google-modules/log-export/google//modules/bigquery\"\n-  version                    = \"~> 5.1.0\"\n-  project_id                 = module.org_audit_logs.project_id\n-  dataset_name               = \"audit_logs\"\n-  log_sink_writer_identity   = module.log_export_to_biqquery.writer_identity\n-  expiration_days            = var.audit_logs_table_expiration_days\n-  delete_contents_on_destroy = var.audit_logs_table_delete_contents_on_destroy\n-}\n+# module \"bigquery_destination\" {\n+#   source                     = \"terraform-google-modules/log-export/google//modules/bigquery\"\n+#   version                    = \"~> 5.1.0\"\n+#   project_id                 = module.org_audit_logs.project_id\n+#   dataset_name               = \"audit_logs\"\n+#   log_sink_writer_identity   = module.log_export_to_biqquery.writer_identity\n+#   expiration_days            = var.audit_logs_table_expiration_days\n+#   delete_contents_on_destroy = var.audit_logs_table_delete_contents_on_destroy\n+# }\n \n /******************************************\n   Send logs to Storage"
      },
      {
        "filename": "1-org/envs/shared/outputs.tf",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -8,15 +8,15 @@ output \"org_id\" {\n #   description = \"Name of SCC Notification\"\n # }\n \n-output \"parent_resource_id\" {\n-  value       = local.parent_resource_id\n-  description = \"The parent resource id\"\n-}\n+# output \"parent_resource_id\" {\n+#   value       = local.parent_resource_id\n+#   description = \"The parent resource id\"\n+# }\n \n-output \"parent_resource_type\" {\n-  value       = local.parent_resource_type\n-  description = \"The parent resource type\"\n-}\n+# output \"parent_resource_type\" {\n+#   value       = local.parent_resource_type\n+#   description = \"The parent resource type\"\n+# }\n \n output \"common_folder_name\" {\n   value       = google_folder.common.name"
      },
      {
        "filename": "3-networks/envs/shared/dns-hub.tf",
        "additions": 64,
        "deletions": 62,
        "changes": 126,
        "status": "modified",
        "patch": "@@ -86,73 +86,75 @@ resource \"google_dns_policy\" \"default_policy\" {\n  DNS Forwarding\n *****************************************/\n \n-module \"dns-forwarding-zone\" {\n-  source  = \"terraform-google-modules/cloud-dns/google\"\n-  version = \"3.1.0\"\n-\n-  project_id = local.dns_hub_project_id\n-  type       = \"forwarding\"\n-  name       = \"fz-dns-hub\"\n-  domain     = var.domain\n-\n-  private_visibility_config_networks = [\n-    module.dns_hub_vpc.network_self_link\n-  ]\n-  target_name_server_addresses = var.target_name_server_addresses\n-}\n+# To save cost\n+\n+# module \"dns-forwarding-zone\" {\n+#   source  = \"terraform-google-modules/cloud-dns/google\"\n+#   version = \"3.1.0\"\n+\n+#   project_id = local.dns_hub_project_id\n+#   type       = \"forwarding\"\n+#   name       = \"fz-dns-hub\"\n+#   domain     = var.domain\n+\n+#   private_visibility_config_networks = [\n+#     module.dns_hub_vpc.network_self_link\n+#   ]\n+#   target_name_server_addresses = var.target_name_server_addresses\n+# }\n \n /*********************************************************\n   Routers to advertise DNS proxy range \"35.199.192.0/19\"\n *********************************************************/\n \n-module \"dns_hub_region1_router1\" {\n-  source  = \"terraform-google-modules/cloud-router/google\"\n-  version = \"~> 1.2.0\"\n-  name    = \"cr-c-dns-hub-${var.default_region1}-cr1\"\n-  project = local.dns_hub_project_id\n-  network = module.dns_hub_vpc.network_name\n-  region  = var.default_region1\n-  bgp = {\n-    asn                  = var.bgp_asn_dns\n-    advertised_ip_ranges = [{ range = \"35.199.192.0/19\" }]\n-  }\n-}\n+# module \"dns_hub_region1_router1\" {\n+#   source  = \"terraform-google-modules/cloud-router/google\"\n+#   version = \"~> 1.2.0\"\n+#   name    = \"cr-c-dns-hub-${var.default_region1}-cr1\"\n+#   project = local.dns_hub_project_id\n+#   network = module.dns_hub_vpc.network_name\n+#   region  = var.default_region1\n+#   bgp = {\n+#     asn                  = var.bgp_asn_dns\n+#     advertised_ip_ranges = [{ range = \"35.199.192.0/19\" }]\n+#   }\n+# }\n \n-module \"dns_hub_region1_router2\" {\n-  source  = \"terraform-google-modules/cloud-router/google\"\n-  version = \"~> 0.3.0\"\n-  name    = \"cr-c-dns-hub-${var.default_region1}-cr2\"\n-  project = local.dns_hub_project_id\n-  network = module.dns_hub_vpc.network_name\n-  region  = var.default_region1\n-  bgp = {\n-    asn                  = var.bgp_asn_dns\n-    advertised_ip_ranges = [{ range = \"35.199.192.0/19\" }]\n-  }\n-}\n+# module \"dns_hub_region1_router2\" {\n+#   source  = \"terraform-google-modules/cloud-router/google\"\n+#   version = \"~> 0.3.0\"\n+#   name    = \"cr-c-dns-hub-${var.default_region1}-cr2\"\n+#   project = local.dns_hub_project_id\n+#   network = module.dns_hub_vpc.network_name\n+#   region  = var.default_region1\n+#   bgp = {\n+#     asn                  = var.bgp_asn_dns\n+#     advertised_ip_ranges = [{ range = \"35.199.192.0/19\" }]\n+#   }\n+# }\n \n-module \"dns_hub_region2_router1\" {\n-  source  = \"terraform-google-modules/cloud-router/google\"\n-  version = \"~> 0.3.0\"\n-  name    = \"cr-c-dns-hub-${var.default_region2}-cr3\"\n-  project = local.dns_hub_project_id\n-  network = module.dns_hub_vpc.network_name\n-  region  = var.default_region2\n-  bgp = {\n-    asn                  = var.bgp_asn_dns\n-    advertised_ip_ranges = [{ range = \"35.199.192.0/19\" }]\n-  }\n-}\n+# module \"dns_hub_region2_router1\" {\n+#   source  = \"terraform-google-modules/cloud-router/google\"\n+#   version = \"~> 0.3.0\"\n+#   name    = \"cr-c-dns-hub-${var.default_region2}-cr3\"\n+#   project = local.dns_hub_project_id\n+#   network = module.dns_hub_vpc.network_name\n+#   region  = var.default_region2\n+#   bgp = {\n+#     asn                  = var.bgp_asn_dns\n+#     advertised_ip_ranges = [{ range = \"35.199.192.0/19\" }]\n+#   }\n+# }\n \n-module \"dns_hub_region2_router2\" {\n-  source  = \"terraform-google-modules/cloud-router/google\"\n-  version = \"~> 0.3.0\"\n-  name    = \"cr-c-dns-hub-${var.default_region2}-cr4\"\n-  project = local.dns_hub_project_id\n-  network = module.dns_hub_vpc.network_name\n-  region  = var.default_region2\n-  bgp = {\n-    asn                  = var.bgp_asn_dns\n-    advertised_ip_ranges = [{ range = \"35.199.192.0/19\" }]\n-  }\n-}\n+# module \"dns_hub_region2_router2\" {\n+#   source  = \"terraform-google-modules/cloud-router/google\"\n+#   version = \"~> 0.3.0\"\n+#   name    = \"cr-c-dns-hub-${var.default_region2}-cr4\"\n+#   project = local.dns_hub_project_id\n+#   network = module.dns_hub_vpc.network_name\n+#   region  = var.default_region2\n+#   bgp = {\n+#     asn                  = var.bgp_asn_dns\n+#     advertised_ip_ranges = [{ range = \"35.199.192.0/19\" }]\n+#   }\n+# }"
      },
      {
        "filename": "3-networks/envs/shared/hierarchical_firewall.tf",
        "additions": 90,
        "deletions": 88,
        "changes": 178,
        "status": "modified",
        "patch": "@@ -1,88 +1,90 @@\n-module \"hierarchical_firewall_policy\" {\n-  source = \"../../modules/hierarchical_firewall_policy/\"\n-  parent = data.google_active_folder.common.name\n-  name   = \"common-firewall-rules\"\n-  associations = [\n-    data.google_active_folder.common.name,\n-    data.google_active_folder.bootstrap.name,\n-    data.google_active_folder.development.name,\n-    # data.google_active_folder.production.name,\n-    # data.google_active_folder.non-production.name,\n-  ]\n-  rules = {\n-    delegate-rfc1918-ingress = {\n-      description = \"Delegate RFC1918 ingress\"\n-      direction   = \"INGRESS\"\n-      action      = \"goto_next\"\n-      priority    = 500\n-      ranges = [\n-        \"192.168.0.0/16\",\n-        \"10.0.0.0/8\",\n-        \"172.16.0.0/12\"\n-      ]\n-      ports                   = { \"all\" = [] }\n-      target_service_accounts = null\n-      target_resources        = null\n-      logging                 = false\n-    }\n-    delegate-rfc1918-egress = {\n-      description = \"Delegate RFC1918 egress\"\n-      direction   = \"EGRESS\"\n-      action      = \"goto_next\"\n-      priority    = 510\n-      ranges = [\n-        \"192.168.0.0/16\",\n-        \"10.0.0.0/8\",\n-        \"172.16.0.0/12\"\n-      ]\n-      ports                   = { \"all\" = [] }\n-      target_service_accounts = null\n-      target_resources        = null\n-      logging                 = false\n-    }\n-    allow-iap-ssh-rdp = {\n-      description = \"Always allow SSH and RDP from IAP\"\n-      direction   = \"INGRESS\"\n-      action      = \"allow\"\n-      priority    = 5000\n-      ranges      = [\"35.235.240.0/20\"]\n-      ports = {\n-        tcp = [\"22\", \"3389\"]\n-      }\n-      target_service_accounts = null\n-      target_resources        = null\n-      logging                 = var.firewall_policies_enable_logging\n-    }\n-    allow-windows-activation = {\n-      description = \"Always outgoing Windows KMS traffic (required to validate Windows licenses)\"\n-      direction   = \"EGRESS\"\n-      action      = \"allow\"\n-      priority    = 5100\n-      ranges      = [\"35.190.247.13/32\"]\n-      ports = {\n-        tcp = [\"1688\"]\n-      }\n-      target_service_accounts = null\n-      target_resources        = null\n-      logging                 = var.firewall_policies_enable_logging\n-    }\n-    allow-google-hbs-and-hcs = {\n-      description = \"Always allow connections from Google load balancer and health check ranges\"\n-      direction   = \"INGRESS\"\n-      action      = \"allow\"\n-      priority    = 5200\n-      ranges = [\n-        \"35.191.0.0/16\",\n-        \"130.211.0.0/22\",\n-        \"209.85.152.0/22\",\n-        \"209.85.204.0/22\"\n-      ]\n-      ports = {\n-        tcp = [\"80\", \"443\"]\n-      }\n-      target_service_accounts = null\n-      target_resources        = null\n-      logging                 = var.firewall_policies_enable_logging\n-    }\n-  }\n-}\n+# To save cost\n+\n+# module \"hierarchical_firewall_policy\" {\n+#   source = \"../../modules/hierarchical_firewall_policy/\"\n+#   parent = data.google_active_folder.common.name\n+#   name   = \"common-firewall-rules\"\n+#   associations = [\n+#     data.google_active_folder.common.name,\n+#     data.google_active_folder.bootstrap.name,\n+#     data.google_active_folder.development.name,\n+#     # data.google_active_folder.production.name,\n+#     # data.google_active_folder.non-production.name,\n+#   ]\n+#   rules = {\n+#     delegate-rfc1918-ingress = {\n+#       description = \"Delegate RFC1918 ingress\"\n+#       direction   = \"INGRESS\"\n+#       action      = \"goto_next\"\n+#       priority    = 500\n+#       ranges = [\n+#         \"192.168.0.0/16\",\n+#         \"10.0.0.0/8\",\n+#         \"172.16.0.0/12\"\n+#       ]\n+#       ports                   = { \"all\" = [] }\n+#       target_service_accounts = null\n+#       target_resources        = null\n+#       logging                 = false\n+#     }\n+#     delegate-rfc1918-egress = {\n+#       description = \"Delegate RFC1918 egress\"\n+#       direction   = \"EGRESS\"\n+#       action      = \"goto_next\"\n+#       priority    = 510\n+#       ranges = [\n+#         \"192.168.0.0/16\",\n+#         \"10.0.0.0/8\",\n+#         \"172.16.0.0/12\"\n+#       ]\n+#       ports                   = { \"all\" = [] }\n+#       target_service_accounts = null\n+#       target_resources        = null\n+#       logging                 = false\n+#     }\n+#     allow-iap-ssh-rdp = {\n+#       description = \"Always allow SSH and RDP from IAP\"\n+#       direction   = \"INGRESS\"\n+#       action      = \"allow\"\n+#       priority    = 5000\n+#       ranges      = [\"35.235.240.0/20\"]\n+#       ports = {\n+#         tcp = [\"22\", \"3389\"]\n+#       }\n+#       target_service_accounts = null\n+#       target_resources        = null\n+#       logging                 = var.firewall_policies_enable_logging\n+#     }\n+#     allow-windows-activation = {\n+#       description = \"Always outgoing Windows KMS traffic (required to validate Windows licenses)\"\n+#       direction   = \"EGRESS\"\n+#       action      = \"allow\"\n+#       priority    = 5100\n+#       ranges      = [\"35.190.247.13/32\"]\n+#       ports = {\n+#         tcp = [\"1688\"]\n+#       }\n+#       target_service_accounts = null\n+#       target_resources        = null\n+#       logging                 = var.firewall_policies_enable_logging\n+#     }\n+#     allow-google-hbs-and-hcs = {\n+#       description = \"Always allow connections from Google load balancer and health check ranges\"\n+#       direction   = \"INGRESS\"\n+#       action      = \"allow\"\n+#       priority    = 5200\n+#       ranges = [\n+#         \"35.191.0.0/16\",\n+#         \"130.211.0.0/22\",\n+#         \"209.85.152.0/22\",\n+#         \"209.85.204.0/22\"\n+#       ]\n+#       ports = {\n+#         tcp = [\"80\", \"443\"]\n+#       }\n+#       target_service_accounts = null\n+#       target_resources        = null\n+#       logging                 = var.firewall_policies_enable_logging\n+#     }\n+#   }\n+# }"
      },
      {
        "filename": "3-networks/envs/shared/net-hubs.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -53,12 +53,13 @@ data \"google_projects\" \"base_net_hub\" {\n # }\n \n /******************************************\n-  Base Network VPC\n+  Base Network Hub VPC\n *****************************************/\n \n module \"base_shared_vpc\" {\n   source                        = \"../../modules/base_shared_vpc\"\n   count                         = var.enable_hub_and_spoke ? 1 : 0\n+  create_dns_zones              = false\n   project_id                    = local.base_net_hub_project_id\n   environment_code              = local.environment_code\n   org_id                        = var.org_id"
      },
      {
        "filename": "3-networks/modules/base_shared_vpc/dns.tf",
        "additions": 17,
        "deletions": 14,
        "changes": 31,
        "status": "modified",
        "patch": "@@ -55,6 +55,7 @@ resource \"google_dns_policy\" \"default_policy\" {\n  *****************************************/\n \n module \"private_googleapis\" {\n+  count       = var.create_dns_zones ? 1 : 0 # to save cost, so that we can destroy dns zones for hub network\n   source      = \"terraform-google-modules/cloud-dns/google\"\n   version     = \"~> 3.1\"\n   project_id  = var.project_id\n@@ -88,6 +89,7 @@ module \"private_googleapis\" {\n  *****************************************/\n \n module \"base_gcr\" {\n+  count       = var.create_dns_zones ? 1 : 0 # to save cost, so that we can destroy dns zones for hub network\n   source      = \"terraform-google-modules/cloud-dns/google\"\n   version     = \"~> 3.1\"\n   project_id  = var.project_id\n@@ -121,6 +123,7 @@ module \"base_gcr\" {\n  ***********************************************/\n \n module \"base_pkg_dev\" {\n+  count       = var.create_dns_zones ? 1 : 0 # to save cost, so that we can destroy dns zones for hub network\n   source      = \"terraform-google-modules/cloud-dns/google\"\n   version     = \"~> 3.1\"\n   project_id  = var.project_id\n@@ -152,17 +155,17 @@ module \"base_pkg_dev\" {\n /******************************************\n  Creates DNS Peering to DNS HUB\n *****************************************/\n-module \"peering_zone\" {\n-  source      = \"terraform-google-modules/cloud-dns/google\"\n-  version     = \"~> 3.1\"\n-  project_id  = var.project_id\n-  type        = \"peering\"\n-  name        = \"dz-${var.environment_code}-shared-base-to-dns-hub\"\n-  domain      = var.domain\n-  description = \"Private DNS peering zone.\"\n-\n-  private_visibility_config_networks = [\n-    module.main.network_self_link\n-  ]\n-  target_network = data.google_compute_network.vpc_dns_hub.self_link\n-}\n+# module \"peering_zone\" {\n+#   source      = \"terraform-google-modules/cloud-dns/google\"\n+#   version     = \"~> 3.1\"\n+#   project_id  = var.project_id\n+#   type        = \"peering\"\n+#   name        = \"dz-${var.environment_code}-shared-base-to-dns-hub\"\n+#   domain      = var.domain\n+#   description = \"Private DNS peering zone.\"\n+\n+#   private_visibility_config_networks = [\n+#     module.main.network_self_link\n+#   ]\n+#   target_network = data.google_compute_network.vpc_dns_hub.self_link\n+# }"
      },
      {
        "filename": "3-networks/modules/base_shared_vpc/main.tf",
        "additions": 59,
        "deletions": 59,
        "changes": 118,
        "status": "modified",
        "patch": "@@ -129,62 +129,62 @@ resource \"google_service_networking_connection\" \"private_vpc_connection\" {\n   subnetworks and Google Private API\n ************************************/\n \n-module \"region1_router1\" {\n-  source  = \"terraform-google-modules/cloud-router/google\"\n-  version = \"~> 1.2.0\"\n-  count   = var.mode != \"spoke\" ? 1 : 0\n-  name    = \"cr-${local.vpc_name}-${var.default_region1}-cr1\"\n-  project = var.project_id\n-  network = module.main.network_name\n-  region  = var.default_region1\n-  bgp = {\n-    asn                  = var.bgp_asn_subnet\n-    advertised_groups    = [\"ALL_SUBNETS\"]\n-    advertised_ip_ranges = [{ range = local.private_googleapis_cidr }]\n-  }\n-}\n-\n-module \"region1_router2\" {\n-  source  = \"terraform-google-modules/cloud-router/google\"\n-  version = \"~> 0.3.0\"\n-  count   = var.mode != \"spoke\" ? 1 : 0\n-  name    = \"cr-${local.vpc_name}-${var.default_region1}-cr2\"\n-  project = var.project_id\n-  network = module.main.network_name\n-  region  = var.default_region1\n-  bgp = {\n-    asn                  = var.bgp_asn_subnet\n-    advertised_groups    = [\"ALL_SUBNETS\"]\n-    advertised_ip_ranges = [{ range = local.private_googleapis_cidr }]\n-  }\n-}\n-\n-module \"region2_router1\" {\n-  source  = \"terraform-google-modules/cloud-router/google\"\n-  version = \"~> 0.3.0\"\n-  count   = var.mode != \"spoke\" ? 1 : 0\n-  name    = \"cr-${local.vpc_name}-${var.default_region2}-cr3\"\n-  project = var.project_id\n-  network = module.main.network_name\n-  region  = var.default_region2\n-  bgp = {\n-    asn                  = var.bgp_asn_subnet\n-    advertised_groups    = [\"ALL_SUBNETS\"]\n-    advertised_ip_ranges = [{ range = local.private_googleapis_cidr }]\n-  }\n-}\n-\n-module \"region2_router2\" {\n-  source  = \"terraform-google-modules/cloud-router/google\"\n-  version = \"~> 0.3.0\"\n-  count   = var.mode != \"spoke\" ? 1 : 0\n-  name    = \"cr-${local.vpc_name}-${var.default_region2}-cr4\"\n-  project = var.project_id\n-  network = module.main.network_name\n-  region  = var.default_region2\n-  bgp = {\n-    asn                  = var.bgp_asn_subnet\n-    advertised_groups    = [\"ALL_SUBNETS\"]\n-    advertised_ip_ranges = [{ range = local.private_googleapis_cidr }]\n-  }\n-}\n+# module \"region1_router1\" {\n+#   source  = \"terraform-google-modules/cloud-router/google\"\n+#   version = \"~> 1.2.0\"\n+#   count   = var.mode != \"spoke\" ? 1 : 0\n+#   name    = \"cr-${local.vpc_name}-${var.default_region1}-cr1\"\n+#   project = var.project_id\n+#   network = module.main.network_name\n+#   region  = var.default_region1\n+#   bgp = {\n+#     asn                  = var.bgp_asn_subnet\n+#     advertised_groups    = [\"ALL_SUBNETS\"]\n+#     advertised_ip_ranges = [{ range = local.private_googleapis_cidr }]\n+#   }\n+# }\n+\n+# module \"region1_router2\" {\n+#   source  = \"terraform-google-modules/cloud-router/google\"\n+#   version = \"~> 0.3.0\"\n+#   count   = var.mode != \"spoke\" ? 1 : 0\n+#   name    = \"cr-${local.vpc_name}-${var.default_region1}-cr2\"\n+#   project = var.project_id\n+#   network = module.main.network_name\n+#   region  = var.default_region1\n+#   bgp = {\n+#     asn                  = var.bgp_asn_subnet\n+#     advertised_groups    = [\"ALL_SUBNETS\"]\n+#     advertised_ip_ranges = [{ range = local.private_googleapis_cidr }]\n+#   }\n+# }\n+\n+# module \"region2_router1\" {\n+#   source  = \"terraform-google-modules/cloud-router/google\"\n+#   version = \"~> 0.3.0\"\n+#   count   = var.mode != \"spoke\" ? 1 : 0\n+#   name    = \"cr-${local.vpc_name}-${var.default_region2}-cr3\"\n+#   project = var.project_id\n+#   network = module.main.network_name\n+#   region  = var.default_region2\n+#   bgp = {\n+#     asn                  = var.bgp_asn_subnet\n+#     advertised_groups    = [\"ALL_SUBNETS\"]\n+#     advertised_ip_ranges = [{ range = local.private_googleapis_cidr }]\n+#   }\n+# }\n+\n+# module \"region2_router2\" {\n+#   source  = \"terraform-google-modules/cloud-router/google\"\n+#   version = \"~> 0.3.0\"\n+#   count   = var.mode != \"spoke\" ? 1 : 0\n+#   name    = \"cr-${local.vpc_name}-${var.default_region2}-cr4\"\n+#   project = var.project_id\n+#   network = module.main.network_name\n+#   region  = var.default_region2\n+#   bgp = {\n+#     asn                  = var.bgp_asn_subnet\n+#     advertised_groups    = [\"ALL_SUBNETS\"]\n+#     advertised_ip_ranges = [{ range = local.private_googleapis_cidr }]\n+#   }\n+# }"
      },
      {
        "filename": "3-networks/modules/base_shared_vpc/outputs.tf",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "status": "modified",
        "patch": "@@ -59,22 +59,22 @@ output \"subnets_secondary_ranges\" {\n   description = \"The secondary ranges associated with these subnets\"\n }\n \n-output \"region1_router1\" {\n-  value       = try(module.region1_router1[0], null)\n-  description = \"Router 1 for Region 1\"\n-}\n+# output \"region1_router1\" {\n+#   value       = try(module.region1_router1[0], null)\n+#   description = \"Router 1 for Region 1\"\n+# }\n \n-output \"region1_router2\" {\n-  value       = try(module.region1_router2[0], null)\n-  description = \"Router 2 for Region 1\"\n-}\n+# output \"region1_router2\" {\n+#   value       = try(module.region1_router2[0], null)\n+#   description = \"Router 2 for Region 1\"\n+# }\n \n-output \"region2_router1\" {\n-  value       = try(module.region2_router1[0], null)\n-  description = \"Router 1 for Region 2\"\n-}\n+# output \"region2_router1\" {\n+#   value       = try(module.region2_router1[0], null)\n+#   description = \"Router 1 for Region 2\"\n+# }\n \n-output \"region2_router2\" {\n-  value       = try(module.region2_router2[0], null)\n-  description = \"Router 2 for Region 2\"\n-}\n+# output \"region2_router2\" {\n+#   value       = try(module.region2_router2[0], null)\n+#   description = \"Router 2 for Region 2\"\n+# }"
      },
      {
        "filename": "3-networks/modules/base_shared_vpc/variables.tf",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -181,5 +181,8 @@ variable \"gke_fw_rules_enabled\" {\n   default = false\n }\n \n-\n-\n+# dns zones\n+variable \"create_dns_zones\" {\n+  type    = bool\n+  default = true\n+}"
      },
      {
        "filename": "50-gke-projects/envs/shared/cicd_pipeline.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -15,7 +15,7 @@ module \"app_cicd_project\" {\n     \"sourcerepo.googleapis.com\",\n     \"artifactregistry.googleapis.com\",\n     \"containeranalysis.googleapis.com\",\n-    \"containerscanning.googleapis.com\",\n+    # \"containerscanning.googleapis.com\", # To save cost\n     \"binaryauthorization.googleapis.com\",\n     \"secretmanager.googleapis.com\",\n     \"compute.googleapis.com\","
      },
      {
        "filename": "README.md",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -8,6 +8,8 @@ Example repo for creating a reasonably secure foundation on gcp via terraform. I\n \n and for each part, this repo closely follow [terraform-example-foundation](https://github.com/terraform-google-modules/terraform-example-foundation), [terraform-example-foundation-app](https://github.com/GoogleCloudPlatform/terraform-example-foundation-app), [fabric/data-platform-foundations](https://github.com/terraform-google-modules/cloud-foundation-fabric/tree/master/data-solutions/data-platform-foundations).\n \n+For maintaining your own personal organization, there are few tips to save cost at the bottom of this README.\n+\n ## Final view\n via [gcp-org-hierarchy-viewer](https://github.com/GoogleCloudPlatform/professional-services/tree/main/tools/gcp-org-hierarchy-viewer):\n \n@@ -58,3 +60,19 @@ via [gcp-org-hierarchy-viewer](https://github.com/GoogleCloudPlatform/profession\n \u2502\u00a0\u00a0         \u2514\u2500\u2500 service.yaml\n \u2514\u2500\u2500 README.md\n ```\n+## Save Costs for Personal Organization\n+We have disabled the services that we are not using yet for e.g. DNS zones for hub network vpc and hub dns vpc.  \n+\n+```\n+| Project ID                   | Service description    | SKU description                        | Usage unit          | Pricing                    | Cost saving action             |\n+| ---------------------------- | ---------------------- | -------------------------------------- | ------------------- | -------------------------- | ------------------------------ |\n+| prj-gke-c-cicd-pipeline-7989 | Vulnerability Scanning | Container Images Scanned               | count               |                            | disable container scanning api |\n+| prj-c-dns-hub-c4a2           | Cloud DNS              | ManagedZone                            | month               | no free tier               | destroy                        |\n+| prj-c-base-net-hub-74f5      | Cloud DNS              | ManagedZone                            | month               | no free tier               | destroy                        |\n+| prj-d-shared-base-21a3       | Cloud DNS              | ManagedZone                            | month               | no free tier               | keep                           |\n+| prj-d-shared-base-21a3       | Networking             | Firewall Policy coverage               | month               |                            | destroy                        |\n+| prj-c-logging-8083           | BigQuery               | Streaming Insert                       | mebibyte            |                            | destroy                        |\n+| prj-b-cicd-98fa              | Cloud KMS              | Active software symmetric key versions | active key versions |                            | manual destroy                 |\n+| prj-gke-c-cicd-pipeline-7989 | Artifact Registry      | Artifact Registry Storage              | gibibyte month      | Up to 0.5 GB is free       | clean                          |\n+| prj-b-cicd-98fa              | Artifact Registry      | Artifact Registry Storage              | gibibyte month      | terraform image is ~900 mb | keep                           |\n+```\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": ["gcp", "not_relevant"],
    "notes": "The commit comments out code, but there is no underlying cost smell"
  },
  {
    "url": "https://github.com/rajesh-nitc/gcp-foundation/commit/eaf81b5f5ca1dbdd8951d4179a631818139566a5",
    "files": [
      {
        "filename": "3-networks/development_env.auto.tfvars",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -52,7 +52,11 @@ subnets = [\n   },\n ]\n \n-nat_enabled = false # nat is required by acm git-sync container in git-importer pod\n+# Enable nat if acm is used\n+nat_enabled = false\n \n budita_cluster_uscentral1_cluster_endpoint_for_nodes = \"100.64.80.0/28\"\n-budita_cluster_uscentral1_cluster_network_tag        = \"gke-budita-d-us-central1\"\n\\ No newline at end of file\n+budita_cluster_uscentral1_cluster_network_tag        = \"gke-budita-d-us-central1\"\n+\n+# Destroy dns zones when not in use to save cost\n+create_dns_zones = false\n\\ No newline at end of file"
      },
      {
        "filename": "3-networks/envs/development/main.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -80,4 +80,6 @@ module \"base_shared_vpc\" {\n   budita_cluster_uscentral1_cluster_subnet_cidr        = local.budita_cluster_uscentral1_subnet_cidr[0]\n   budita_cluster_uscentral1_cluster_ip_range_pods      = local.budita_cluster_uscentral1_cluster_ip_range_pods[0]\n \n+  # Destroy dns zones when not in use to save cost\n+  create_dns_zones = var.create_dns_zones\n }"
      },
      {
        "filename": "3-networks/envs/development/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -156,4 +156,9 @@ variable \"budita_cluster_uscentral1_cluster_network_tag\" {\n \n variable \"budita_cluster_uscentral1_cluster_endpoint_for_nodes\" {\n   type = string\n+}\n+\n+variable \"create_dns_zones\" {\n+  type    = bool\n+  default = true\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "domain",
      "saving"
    ],
    "codes": ["gcp", "remove_dns_zones"],
    "notes": "Made DNS zones configurable/optional"
  },
  {
    "url": "https://github.com/rajesh-nitc/gcp-foundation/commit/0db462f5528100ece08d85366fc777cd59fad473",
    "files": [
      {
        "filename": "3-networks/envs/development/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -81,5 +81,5 @@ module \"base_shared_vpc\" {\n   budita_cluster_uscentral1_cluster_ip_range_pods      = local.budita_cluster_uscentral1_cluster_ip_range_pods[0]\n \n   # Destroy dns zones when not in use to save cost\n-  create_dns_zones = var.create_dns_zones\n+  create_spoke_dns_zones = var.create_spoke_dns_zones\n }"
      },
      {
        "filename": "3-networks/envs/development/terraform.tfvars",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -61,11 +61,11 @@ subnets = [\n   },\n ]\n \n-# Enable nat if acm is used\n-nat_enabled = false\n-\n budita_cluster_uscentral1_cluster_endpoint_for_nodes = \"100.64.80.0/28\"\n budita_cluster_uscentral1_cluster_network_tag        = \"gke-budita-d-us-central1\"\n \n+# Enable nat if acm is used\n+nat_enabled = false\n+\n # Destroy dns zones when not in use to save cost\n-create_dns_zones = false\n\\ No newline at end of file\n+create_spoke_dns_zones = false\n\\ No newline at end of file"
      },
      {
        "filename": "3-networks/envs/development/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -158,7 +158,7 @@ variable \"budita_cluster_uscentral1_cluster_endpoint_for_nodes\" {\n   type = string\n }\n \n-variable \"create_dns_zones\" {\n+variable \"create_spoke_dns_zones\" {\n   type    = bool\n   default = true\n }\n\\ No newline at end of file"
      },
      {
        "filename": "3-networks/envs/shared/dns-hub.tf",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -86,8 +86,6 @@ resource \"google_dns_policy\" \"default_policy\" {\n  DNS Forwarding\n *****************************************/\n \n-# To save cost\n-\n # module \"dns-forwarding-zone\" {\n #   source  = \"terraform-google-modules/cloud-dns/google\"\n #   version = \"3.1.0\""
      },
      {
        "filename": "3-networks/envs/shared/net-hubs-transitivity.tf",
        "additions": 78,
        "deletions": 78,
        "changes": 156,
        "status": "modified",
        "patch": "@@ -1,80 +1,80 @@\n-/**\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-locals {\n-  enable_transitivity = var.enable_hub_and_spoke && var.enable_hub_and_spoke_transitivity\n-  base_regional_aggregates = {\n-    (var.default_region1) = [\n-      \"10.0.0.0/16\",\n-      \"100.64.0.0/16\"\n-    ]\n-    (var.default_region2) = [\n-      \"10.1.0.0/16\",\n-      \"100.65.0.0/16\"\n-    ]\n-  }\n-  restricted_regional_aggregates = {\n-    (var.default_region1) = [\n-      \"10.8.0.0/16\",\n-      \"100.72.0.0/16\"\n-    ]\n-    (var.default_region2) = [\n-      \"10.9.0.0/16\",\n-      \"100.73.0.0/16\"\n-    ]\n-  }\n-}\n-\n-/*\n- * Base Network Transitivity\n- */\n-\n-module \"base_transitivity\" {\n-  count               = local.enable_transitivity ? 1 : 0\n-  source              = \"../../modules/transitivity\"\n-  project_id          = local.base_net_hub_project_id\n-  regions             = keys(local.base_subnet_primary_ranges)\n-  vpc_name            = module.base_shared_vpc[0].network_name\n-  gw_subnets          = { for region in keys(local.base_subnet_primary_ranges) : region => \"sb-c-shared-base-hub-${region}\" }\n-  regional_aggregates = local.base_regional_aggregates\n-  commands = [\n-    # Accept all ICMP (troubleshooting)\n-    \"iptables -A INPUT -p icmp -j ACCEPT\",\n-    # Accept SSH local traffic to the eth0 interface (health checking)\n-    \"iptables -A INPUT -p tcp --dport 22 -d $(curl -H \\\"Metadata-Flavor: Google\\\" http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip) -j ACCEPT\",\n-    # Drop everything else\n-    \"iptables -A INPUT -j DROP\",\n-    # Accept all return transit traffic for established flows\n-    \"iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\",\n-    # Accept all transit traffic from internal ranges\n-    # Replace by actual multiple source/destination/proto/ports rules for fine-grained ACLs.\n-    \"iptables -A FORWARD -s ${join(\",\", flatten(values(local.base_regional_aggregates)))} -d ${join(\",\", flatten(values(local.base_regional_aggregates)))} -j ACCEPT\",\n-    # Drop everything else\n-    \"iptables -A FORWARD -j DROP\",\n-    # SNAT traffic not to the local eth0 interface\n-    \"iptables -t nat -A POSTROUTING ! -d $(curl -H \\\"Metadata-Flavor: Google\\\" http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip) -j MASQUERADE\",\n-  ]\n-\n-  depends_on = [module.base_shared_vpc]\n-}\n-\n-/*\n- * Restricted Network Transitivity\n- */\n-\n+#/**\n+# * Copyright 2020 Google LLC\n+# *\n+# * Licensed under the Apache License, Version 2.0 (the \"License\");\n+# * you may not use this file except in compliance with the License.\n+# * You may obtain a copy of the License at\n+# *\n+# *      http://www.apache.org/licenses/LICENSE-2.0\n+# *\n+# * Unless required by applicable law or agreed to in writing, software\n+# * distributed under the License is distributed on an \"AS IS\" BASIS,\n+# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# * See the License for the specific language governing permissions and\n+# * limitations under the License.\n+# */\n+#\n+#locals {\n+#  enable_transitivity = var.enable_hub_and_spoke && var.enable_hub_and_spoke_transitivity\n+#  base_regional_aggregates = {\n+#    (var.default_region1) = [\n+#      \"10.0.0.0/16\",\n+#      \"100.64.0.0/16\"\n+#    ]\n+#    (var.default_region2) = [\n+#      \"10.1.0.0/16\",\n+#      \"100.65.0.0/16\"\n+#    ]\n+#  }\n+#  restricted_regional_aggregates = {\n+#    (var.default_region1) = [\n+#      \"10.8.0.0/16\",\n+#      \"100.72.0.0/16\"\n+#    ]\n+#    (var.default_region2) = [\n+#      \"10.9.0.0/16\",\n+#      \"100.73.0.0/16\"\n+#    ]\n+#  }\n+#}\n+#\n+#/*\n+# * Base Network Transitivity\n+# */\n+#\n+#module \"base_transitivity\" {\n+#  count               = local.enable_transitivity ? 1 : 0\n+#  source              = \"../../modules/transitivity\"\n+#  project_id          = local.base_net_hub_project_id\n+#  regions             = keys(local.base_subnet_primary_ranges)\n+#  vpc_name            = module.base_shared_vpc[0].network_name\n+#  gw_subnets          = { for region in keys(local.base_subnet_primary_ranges) : region => \"sb-c-shared-base-hub-${region}\" }\n+#  regional_aggregates = local.base_regional_aggregates\n+#  commands = [\n+#    # Accept all ICMP (troubleshooting)\n+#    \"iptables -A INPUT -p icmp -j ACCEPT\",\n+#    # Accept SSH local traffic to the eth0 interface (health checking)\n+#    \"iptables -A INPUT -p tcp --dport 22 -d $(curl -H \\\"Metadata-Flavor: Google\\\" http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip) -j ACCEPT\",\n+#    # Drop everything else\n+#    \"iptables -A INPUT -j DROP\",\n+#    # Accept all return transit traffic for established flows\n+#    \"iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\",\n+#    # Accept all transit traffic from internal ranges\n+#    # Replace by actual multiple source/destination/proto/ports rules for fine-grained ACLs.\n+#    \"iptables -A FORWARD -s ${join(\",\", flatten(values(local.base_regional_aggregates)))} -d ${join(\",\", flatten(values(local.base_regional_aggregates)))} -j ACCEPT\",\n+#    # Drop everything else\n+#    \"iptables -A FORWARD -j DROP\",\n+#    # SNAT traffic not to the local eth0 interface\n+#    \"iptables -t nat -A POSTROUTING ! -d $(curl -H \\\"Metadata-Flavor: Google\\\" http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip) -j MASQUERADE\",\n+#  ]\n+#\n+#  depends_on = [module.base_shared_vpc]\n+#}\n+#\n+#/*\n+# * Restricted Network Transitivity\n+# */\n+#\n # module \"restricted_transitivity\" {\n #   count               = local.enable_transitivity ? 1 : 0\n #   source              = \"../../modules/transitivity\"\n@@ -100,6 +100,6 @@ module \"base_transitivity\" {\n #     # SNAT traffic not to the local eth0 interface\n #     \"iptables -t nat -A POSTROUTING ! -d $(curl -H \\\"Metadata-Flavor: Google\\\" http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip) -j MASQUERADE\",\n #   ]\n-\n+#\n #   depends_on = [module.restricted_shared_vpc]\n # }"
      },
      {
        "filename": "3-networks/envs/shared/net-hubs.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -59,7 +59,6 @@ data \"google_projects\" \"base_net_hub\" {\n module \"base_shared_vpc\" {\n   source                        = \"../../modules/base_shared_vpc\"\n   count                         = var.enable_hub_and_spoke ? 1 : 0\n-  create_dns_zones              = false\n   project_id                    = local.base_net_hub_project_id\n   environment_code              = local.environment_code\n   org_id                        = var.org_id"
      },
      {
        "filename": "3-networks/modules/base_shared_vpc/dns.tf",
        "additions": 7,
        "deletions": 19,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -1,21 +1,9 @@\n-/**\n- * Copyright 2021 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n+# To save costs, we don't create dns zones for the hub network vpc\n+# we create dns zones for spoke base shared vpc when we need it\n \n locals {\n-  parent_id = var.parent_folder != \"\" ? \"folders/${var.parent_folder}\" : \"organizations/${var.org_id}\"\n+  parent_id         = var.parent_folder != \"\" ? \"folders/${var.parent_folder}\" : \"organizations/${var.org_id}\"\n+  dns_zones_enabled = var.mode == \"hub\" ? 0 : (var.create_spoke_dns_zones ? 1 : 0)\n }\n \n data \"google_active_folder\" \"common\" {\n@@ -55,7 +43,7 @@ resource \"google_dns_policy\" \"default_policy\" {\n  *****************************************/\n \n module \"private_googleapis\" {\n-  count       = var.create_dns_zones ? 1 : 0 # to save cost, so that we can destroy dns zones for hub network\n+  count       = local.dns_zones_enabled\n   source      = \"terraform-google-modules/cloud-dns/google\"\n   version     = \"~> 3.1\"\n   project_id  = var.project_id\n@@ -89,7 +77,7 @@ module \"private_googleapis\" {\n  *****************************************/\n \n module \"base_gcr\" {\n-  count       = var.create_dns_zones ? 1 : 0 # to save cost, so that we can destroy dns zones for hub network\n+  count       = local.dns_zones_enabled\n   source      = \"terraform-google-modules/cloud-dns/google\"\n   version     = \"~> 3.1\"\n   project_id  = var.project_id\n@@ -123,7 +111,7 @@ module \"base_gcr\" {\n  ***********************************************/\n \n module \"base_pkg_dev\" {\n-  count       = var.create_dns_zones ? 1 : 0 # to save cost, so that we can destroy dns zones for hub network\n+  count       = local.dns_zones_enabled\n   source      = \"terraform-google-modules/cloud-dns/google\"\n   version     = \"~> 3.1\"\n   project_id  = var.project_id"
      },
      {
        "filename": "3-networks/modules/base_shared_vpc/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -182,7 +182,7 @@ variable \"gke_fw_rules_enabled\" {\n }\n \n # dns zones\n-variable \"create_dns_zones\" {\n+variable \"create_spoke_dns_zones\" {\n   type    = bool\n   default = true\n }"
      }
    ],
    "existing_codes": [
      "domain",
      "saving"
    ],
    "codes": ["gcp", "remove_dns_zones"],
    "notes": "Made DNS zones configurable/optional"
  },
  {
    "url": "https://github.com/datarootsio/terraform-module-azure-datalake/commit/4907fd7598d0083705494182d985c6b3b58db2c0",
    "files": [
      {
        "filename": "databricks.tf",
        "additions": 14,
        "deletions": 18,
        "changes": 32,
        "status": "modified",
        "patch": "@@ -7,27 +7,23 @@ resource \"azurerm_databricks_workspace\" \"dbks\" {\n   tags                        = azurerm_resource_group.rg.tags\n }\n \n-resource \"null_resource\" \"databricks_token\" {\n-  triggers = {\n-    build_number = timestamp()\n-  }\n+provider \"databricks\" {\n+  host = format(\"https://%s.azuredatabricks.net\", azurerm_databricks_workspace.dbks.location)\n \n-  provisioner \"local-exec\" {\n-    command = \"${path.module}/files/generate_databricks_token.sh > /tmp/databricks_token.txt\"\n-    environment = {\n-      DATABRICKS_WORKSPACE_RESOURCE_ID = azurerm_databricks_workspace.dbks.id\n-      DATABRICKS_ENDPOINT              = \"https://${var.region}.azuredatabricks.net\"\n-    }\n+  azure {\n+    workspace_id = azurerm_databricks_workspace.dbks.id\n   }\n }\n \n-data \"local_file\" \"databricks_token\" {\n-  depends_on = [null_resource.databricks_token]\n-  filename   = \"/tmp/databricks_token.txt\"\n-}\n+resource \"databricks_cluster\" \"dbkscluster\" {\n+  cluster_name  = \"cluster${var.data_lake_name}\"\n+  spark_version = var.databricks_cluster_version\n+  node_type_id  = var.databricks_cluster_node_type\n+\n+  autoscale {\n+    min_workers = 2\n+    max_workers = 4\n+  }\n \n-module \"databricks_sample_data\" {\n-  source = \"./databricks_sample_data\"\n-  host   = \"https://${lower(replace(var.region, \" \", \"\"))}.azuredatabricks.net\"\n-  token  = trimspace(data.local_file.databricks_token.content)\n+  autotermination_minutes = 30\n }\n\\ No newline at end of file"
      },
      {
        "filename": "databricks_sample_data/main.tf",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "status": "removed",
        "patch": "@@ -1,17 +0,0 @@\n-provider \"databricks\" {\n-  host  = var.host\n-  token = var.token\n-}\n-\n-resource \"databricks_cluster\" \"example\" {\n-  cluster_name  = \"example\"\n-  spark_version = \"6.3.x-scala2.11\"\n-  node_type_id  = \"Standard_DS3_v2\"\n-\n-  autoscale {\n-    min_workers = 2\n-    max_workers = 8\n-  }\n-\n-  autotermination_minutes = 120\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "databricks_sample_data/variables.tf",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "status": "removed",
        "patch": "@@ -1,3 +0,0 @@\n-variable \"host\" {}\n-\n-variable \"token\" {}\n\\ No newline at end of file"
      },
      {
        "filename": "defaults.tfvars",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,4 +1,6 @@\n-region                     = \"eastus\"\n-data_lake_name             = \"tfazuredatalake\"\n-storage_replication        = \"LRS\"\n-service_principal_end_date = \"2030-01-01T00:00:00Z\"\n\\ No newline at end of file\n+region                       = \"eastus2\"\n+data_lake_name               = \"tfazuredatalake\"\n+storage_replication          = \"LRS\"\n+service_principal_end_date   = \"2030-01-01T00:00:00Z\"\n+databricks_cluster_node_type = \"Standard_DS3_v2\"\n+databricks_cluster_version   = \"6.5.x-scala2.11\"\n\\ No newline at end of file"
      },
      {
        "filename": "files/generate_databricks_token.sh",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "status": "removed",
        "patch": "@@ -1,48 +0,0 @@\n-#!/bin/sh\n-\n-set -e\n-\n-function parse_input() {\n-  test -n \"$DATABRICKS_WORKSPACE_RESOURCE_ID\"\n-  test -n \"$DATABRICKS_ENDPOINT\"\n-}\n-\n-function produce_output() {\n-  # Get a token for the global Databricks application.\n-  # The resource name is fixed and never changes.\n-  token_response=$(az account get-access-token --resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d)\n-  token=$(jq .accessToken -r <<< \"$token_response\")\n-\n-  # Get a token for the Azure management API\n-  token_response=$(az account get-access-token --resource https://management.core.windows.net/)\n-  azToken=$(jq .accessToken -r <<< \"$token_response\")\n-\n-  get_existing_token=$(curl -sf $DATABRICKS_ENDPOINT/api/2.0/token/list \\\n-      -H \"Authorization: Bearer $token\" \\\n-      -H \"X-Databricks-Azure-SP-Management-Token:$azToken\" \\\n-      -H \"X-Databricks-Azure-Workspace-Resource-Id:$DATABRICKS_WORKSPACE_RESOURCE_ID\")\n-\n-  if [[ ! -z \"$get_existing_token\"  ]] && [ \"${get_existing_token}\" != \"{}\" ]; then\n-    existing_token=$(jq '.token_infos[]  | select(.comment == \"Default Terraform Token\") | .token_id' -r <<< \"$get_existing_token\")\n-  fi\n-\n-  if [[ -n \"$existing_token\" ]]; then\n-      get_existing_token=$(curl -sf $DATABRICKS_ENDPOINT/api/2.0/token/delete \\\n-      -H \"Authorization: Bearer $token\" \\\n-      -H \"X-Databricks-Azure-SP-Management-Token:$azToken\" \\\n-      -H \"X-Databricks-Azure-Workspace-Resource-Id:$DATABRICKS_WORKSPACE_RESOURCE_ID\" \\\n-      -d '{\"token_id\":\"'\"$existing_token\"'\"}')\n-  fi\n-\n-  # You can also generate a PAT token. Note the quota limit of 600 tokens.\n-  api_response=$(curl -sf $DATABRICKS_ENDPOINT/api/2.0/token/create \\\n-    -H \"Authorization: Bearer $token\" \\\n-    -H \"X-Databricks-Azure-SP-Management-Token:$azToken\" \\\n-    -H \"X-Databricks-Azure-Workspace-Resource-Id:$DATABRICKS_WORKSPACE_RESOURCE_ID\" \\\n-    -d '{ \"lifetime_seconds\": 3600, \"comment\": \"Default Terraform Token\" }')\n-  pat_token=$(jq .token_value -r <<< \"$api_response\")\n-  echo $pat_token\n-}\n-\n-parse_input\n-produce_output\n\\ No newline at end of file"
      },
      {
        "filename": "variables.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -62,3 +62,13 @@ variable \"sql_server_admin_password\" {\n   type        = string\n   description = \"Password of the administrator of the SQL server\"\n }\n+\n+variable \"databricks_cluster_version\" {\n+  type        = string\n+  description = \"Runtime version of the Databricks cluster\"\n+}\n+\n+variable \"databricks_cluster_node_type\" {\n+  type        = string\n+  description = \"Node type of the Databricks cluster machines\"\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": ["azure", "cheaper_area"],
    "notes": "Move from eastus to eastus2"
  },
  {
    "url": "https://github.com/mintak21/terraform-old/commit/c10b476d869282ed6cf55def47445b9c703788fe",
    "files": [
      {
        "filename": "Makefile",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,4 +1,12 @@\n-.PHONY: setup_mac fmt\n+.PHONY: setup_aws alert setup_mac fmt\n+\n+setup_aws: setup_mac alert ci\n+\n+alert:\n+\tcd alert; make\n+\n+ci:\n+\tcd cicd; make\n \n fmt:\n \tterraform fmt -recursive"
      },
      {
        "filename": "alert/Makefile",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "status": "added",
        "patch": "@@ -0,0 +1,28 @@\n+.PHONY: sequence clean\n+\n+SOURCE_PATH=function\n+DEST_PATH=archive\n+DEST_NAME=notifier\n+\n+sequence: deploy\n+\trm -rf ${DEST_PATH}\n+\n+deploy: build fmt init\n+\tterraform apply\n+\n+dep:\n+\tGO111MODULE=on go mod download\n+\n+build:\n+\tcd ./${SOURCE_PATH}; \\\n+\tGO111MODULE=on go mod download; \\\n+\tGOOS=linux go build -o ../${DEST_PATH}/${DEST_NAME}\n+\n+fmt:\n+\tterraform fmt -recursive\n+\n+init:\n+\tterraform init\n+\n+clean:\n+\tterraform destroy"
      },
      {
        "filename": "alert/backend.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+terraform {\n+  # use Terraform Cloud\n+  backend remote {\n+    hostname     = \"app.terraform.io\"\n+    organization = \"mintak21\"\n+\n+    workspaces {\n+      name = \"aws-billing-alerm\"\n+    }\n+  }\n+}"
      },
      {
        "filename": "alert/function/go.mod",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+module github.com/mintak21/terraform/package\n+\n+go 1.13\n+\n+require (\n+\tgithub.com/aws/aws-lambda-go v1.17.0\n+\tgithub.com/aws/aws-sdk-go v1.33.5\n+\tgithub.com/kelseyhightower/envconfig v1.4.0\n+\tgithub.com/sirupsen/logrus v1.6.0\n+\tgithub.com/slack-go/slack v0.6.5\n+)"
      },
      {
        "filename": "alert/function/go.sum",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "status": "added",
        "patch": "@@ -0,0 +1,49 @@\n+github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\n+github.com/aws/aws-lambda-go v1.17.0 h1:Ogihmi8BnpmCNktKAGpNwSiILNNING1MiosnKUfU8m0=\n+github.com/aws/aws-lambda-go v1.17.0/go.mod h1:FEwgPLE6+8wcGBTe5cJN3JWurd1Ztm9zN4jsXsjzKKw=\n+github.com/aws/aws-sdk-go v1.33.5 h1:p2fr1ryvNTU6avUWLI+/H7FGv0TBIjzVM5WDgXBBv4U=\n+github.com/aws/aws-sdk-go v1.33.5/go.mod h1:5zCpMtNQVjRREroY7sYe8lOMRSxkhG6MZveU8YkpAk0=\n+github.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\n+github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n+github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n+github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n+github.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\n+github.com/go-test/deep v1.0.4 h1:u2CU3YKy9I2pmu9pX0eq50wCgjfGIt539SqR7FbHiho=\n+github.com/go-test/deep v1.0.4/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=\n+github.com/gorilla/websocket v1.4.2 h1:+/TMaTYc4QFitKJxsQ7Yye35DkWvkdLcvGKqM+x0Ufc=\n+github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\n+github.com/jmespath/go-jmespath v0.3.0 h1:OS12ieG61fsCg5+qLJ+SsW9NicxNkg3b25OyT2yCeUc=\n+github.com/jmespath/go-jmespath v0.3.0/go.mod h1:9QtRXoHjLGCJ5IBSaohpXITPlowMeeYCZ7fLUTSywik=\n+github.com/kelseyhightower/envconfig v1.4.0 h1:Im6hONhd3pLkfDFsbRgu68RDNkGF1r3dvMUtDTo2cv8=\n+github.com/kelseyhightower/envconfig v1.4.0/go.mod h1:cccZRl6mQpaq41TPp5QxidR+Sa3axMbJDNb//FQX6Gg=\n+github.com/konsorten/go-windows-terminal-sequences v1.0.3 h1:CE8S1cTafDpPvMhIxNJKvHsGVBgn1xWYf1NbHQhywc8=\n+github.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\n+github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n+github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\n+github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n+github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n+github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n+github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n+github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\n+github.com/sirupsen/logrus v1.6.0 h1:UBcNElsrwanuuMsnGSlYmtmgbb23qDR5dG+6X6Oo89I=\n+github.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=\n+github.com/slack-go/slack v0.6.5 h1:IkDKtJ2IROJNoe3d6mW870/NRKvq2fhLB/Q5XmzWk00=\n+github.com/slack-go/slack v0.6.5/go.mod h1:FGqNzJBmxIsZURAxh2a8D21AnOVvvXZvGligs4npPUM=\n+github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n+github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\n+github.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\n+github.com/stretchr/testify v1.5.1 h1:nOGnQDM7FYENwehXlg/kFVnos3rEvtKTjRvOWSzb6H4=\n+github.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\n+github.com/urfave/cli/v2 v2.1.1/go.mod h1:SE9GqnLQmjVa0iPEY0f1w3ygNIYcIJ0OKPMoW2caLfQ=\n+golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n+golang.org/x/net v0.0.0-20200202094626-16171245cfb2 h1:CCH4IOTTfewWjGOlSp+zGcjutRKlBEZQ6wTn8ozI/nI=\n+golang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n+golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n+golang.org/x/sys v0.0.0-20190422165155-953cdadca894 h1:Cz4ceDQGXuKRnVBDTS23GTn/pU5OE2C0WrNTOYK1Uuc=\n+golang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/text v0.3.0 h1:g61tztE5qeGQ89tm6NTjjM9VPIm088od1l6aSorWRWg=\n+golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n+gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\n+gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n+gopkg.in/yaml.v2 v2.2.2 h1:ZCJp+EgiOT7lHqUV2J862kp8Qj64Jo6az82+3Td9dZw=\n+gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI="
      },
      {
        "filename": "alert/function/main.go",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "status": "added",
        "patch": "@@ -0,0 +1,94 @@\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"os\"\n+\n+\t\"github.com/aws/aws-lambda-go/events\"\n+\t\"github.com/aws/aws-lambda-go/lambda\"\n+\t\"github.com/aws/aws-sdk-go/aws\"\n+\t\"github.com/aws/aws-sdk-go/aws/session\"\n+\t\"github.com/aws/aws-sdk-go/service/ssm\"\n+\t\"github.com/kelseyhightower/envconfig\"\n+\tlog \"github.com/sirupsen/logrus\"\n+\t\"github.com/slack-go/slack\"\n+)\n+\n+// \u4e8b\u524d\u6e96\u5099\n+// 1. https://api.slack.com/apps/ \u3088\u308a\u3001chat.write/chat.write.customize\u30b9\u30b3\u30fc\u30d7\u3067\u30a2\u30d7\u30ea\u4f5c\u6210&OAuth\u30c8\u30fc\u30af\u30f3\u3092\u767a\u884c\n+// 2. 1\u306e\u30c8\u30fc\u30af\u30f3\u3092SSM\u306b\u683c\u7d0d\n+// 3. \u901a\u77e5\u5148\u30c1\u30e3\u30f3\u30cd\u30eb\u30781\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u3092\u62db\u5f85\n+// 4. \u901a\u77e5\u5148\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u74b0\u5883\u5909\u6570\u306b\u8a2d\u5b9a\n+\n+var conf config\n+\n+type config struct {\n+\tTokenSsmParameterName string `envconfig:\"token_parameter_name\" required:\"true\" default:\"alert_notify_slack_token\"`\n+\tNotificationChannel   string `envconfig:\"notification_channel\" required:\"true\"`\n+\tNotifyUserName        string `default:\"AWS Billing Alert Bot\"`\n+\tNotifyIcon            string `default:\":lightning_cloud:\"`\n+\tRegion                string `default:\"ap-northeast-1\"`\n+}\n+\n+// handleRequest handle SNSEvent Request\n+func handleRequest(ctx context.Context, event events.SNSEvent) (string, error) {\n+\tlog.Info(\"start handle request\")\n+\tlog.WithFields(log.Fields{\n+\t\t\"topicArn\": event.Records[0].SNS.TopicArn,\n+\t\t\"subscArn\": event.Records[0].EventSubscriptionArn,\n+\t\t\"type\":     event.Records[0].SNS.Type,\n+\t}).Info(\"Recieved Event\")\n+\terr := postSlack(event.Records[0].SNS.Message)\n+\treturn \"end handle request\", err\n+}\n+\n+func postSlack(message string) error {\n+\ttoken, err := slackToken()\n+\tif err != nil {\n+\t\tlog.WithError(err)\n+\t\treturn err\n+\t}\n+\tclient := slack.New(token)\n+\t_, _, err = client.PostMessage(conf.NotificationChannel,\n+\t\tslack.MsgOptionText(message, false),\n+\t\tslack.MsgOptionUsername(conf.NotifyUserName),\n+\t\tslack.MsgOptionIconEmoji(conf.NotifyIcon))\n+\tlog.Info(\"send messages:\", message)\n+\treturn err\n+}\n+\n+func slackToken() (string, error) {\n+\tsvc := ssm.New(session.New(), &aws.Config{\n+\t\tRegion: aws.String(conf.Region),\n+\t})\n+\tparam, err := svc.GetParameter(&ssm.GetParameterInput{\n+\t\tName:           aws.String(conf.TokenSsmParameterName),\n+\t\tWithDecryption: aws.Bool(true),\n+\t})\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\tlog.WithFields(log.Fields{\n+\t\t\"parameterName\": conf.TokenSsmParameterName,\n+\t\t\"region\":        conf.Region,\n+\t}).Info(\"succeeded to get ssm parameter\")\n+\treturn *param.Parameter.Value, nil\n+}\n+\n+func init() {\n+\t// logging settings\n+\tlog.SetFormatter(&log.JSONFormatter{})\n+\tlog.SetOutput(os.Stdout)\n+\tlog.SetLevel(log.InfoLevel)\n+\t// load configuration\n+\tif err := envconfig.Process(\"\", &conf); err != nil {\n+\t\tlog.WithFields(log.Fields{\n+\t\t\t\"err\": err.Error(),\n+\t\t}).Fatal(\"Failed to process env\")\n+\t}\n+\tlog.Println(\"config : \", conf)\n+}\n+\n+func main() {\n+\tlambda.Start(handleRequest)\n+}"
      },
      {
        "filename": "alert/main.tf",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "status": "added",
        "patch": "@@ -0,0 +1,44 @@\n+# module bill_alert {\n+#   source = \"./../module/aws/cloudWatch/alerm/estimatedCharges\"\n+\n+#   alarm_name     = \"Total Usage\"\n+#   namespace      = \"AWS/Billing\"\n+#   maximum_amount = 1.25\n+#   currency       = \"USD\"\n+#   email_address  = var.email_address\n+# }\n+\n+data archive_file func_zip {\n+  type        = \"zip\"\n+  source_file = var.lambda_file\n+  output_path = \"${var.lambda_file}.zip\"\n+}\n+\n+module aws_cost_budgets {\n+  source                            = \"./../module/aws/budget/cost\"\n+  budget_limit_usd                  = 1.25\n+  budget_notification_email_address = var.email_address\n+}\n+\n+module notifier {\n+  source              = \"./../module/aws/lambda/go\"\n+  name                = \"budget-alert-to-slack\"\n+  handler             = \"notifier\"\n+  archive_file        = data.archive_file.func_zip.output_path\n+  sns_trigger_enabled = true\n+  sns_topic_arn       = module.aws_cost_budgets.this_aws_sns_topic_arn\n+  slack_channel       = var.slack_notification_channel\n+\n+  #depends_on = [data.archive_file.func_zip]\n+}\n+\n+resource aws_ssm_parameter slack_token {\n+  name        = \"alert_notify_slack_token\"\n+  description = \"Token For Use Slack API\"\n+  type        = \"SecureString\"\n+  value       = var.slack_token\n+\n+  tags = {\n+    parameter_type = \"token\"\n+  }\n+}"
      },
      {
        "filename": "alert/output.tf",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+# output bill_alert_arn {\n+#   value       = module.bill_alert.this_aws_cloudwatch_metric_alarm_arn\n+#   description = \"\u8acb\u6c42\u30a2\u30e9\u30fc\u30e0\u306eARN\u5024\"\n+# }\n+\n+output cost_budget_id {\n+  value       = module.aws_cost_budgets.this_aws_budgets_budget_id\n+  description = \"\u4e88\u7b97ID\"\n+}\n+\n+output lambda_arn {\n+  value       = module.notifier.this_aws_lambda_function_arn\n+  description = \"\u901a\u77e5LambdaARN\u5024\"\n+}\n+\n+output slack_token_aws_ssm_parameter_arn {\n+  value       = aws_ssm_parameter.slack_token.arn\n+  description = \"Slack\u30c8\u30fc\u30af\u30f3\u30d1\u30e9\u30e1\u30fc\u30bf\u306eARN\u5024\"\n+}"
      },
      {
        "filename": "alert/providers.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+provider aws {\n+  version = \"~> 2.67\"\n+  region  = \"ap-northeast-1\" # required\n+  profile = \"mintak-terraform\"\n+}"
      },
      {
        "filename": "alert/variables.tf",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+variable email_address {\n+  type        = string\n+  description = \"\u901a\u77e5\u5148\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\" # set by tfvars\n+}\n+\n+variable slack_token {\n+  type        = string\n+  description = \"\u9023\u643a\u5148Slack\u30c8\u30fc\u30af\u30f3\" # set by tfvars\n+}\n+\n+variable slack_notification_channel {\n+  type        = string\n+  description = \"\u901a\u77e5\u5148Slack Channel\"\n+  default     = \"#notifications\"\n+}\n+\n+variable lambda_file {\n+  type        = string\n+  description = \"\u901a\u77e5\u7528Lambda\u306e\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\"\n+  default     = \"archive/notifier\"\n+}"
      },
      {
        "filename": "cicd/Makefile",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+.PHONY: apply clean\n+\n+apply: init\n+\tterraform apply\n+\n+init:\n+\tterraform init\n+\n+clean:\n+\tterraform destroy"
      },
      {
        "filename": "module/aws/budget/cost/main.tf",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "status": "added",
        "patch": "@@ -0,0 +1,67 @@\n+resource aws_budgets_budget this {\n+  name              = var.budget_name\n+  budget_type       = \"COST\"\n+  limit_amount      = var.budget_limit_usd\n+  limit_unit        = \"USD\"\n+  time_period_start = \"2019-10-01_00:00\"\n+  # time_period_end\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u671f\u9650\u5207\u308c\u4e88\u7b97\u3001\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u5b9a\u671f\u4e88\u7b97\u306e\u6271\u3044\n+  time_unit = \"MONTHLY\" # \u9593\u9694\uff08\u6708\u5225\uff09\n+\n+  # \u8a73\u7d30\u30aa\u30d7\u30b7\u30e7\u30f3 / \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u4f5c\u6210\u3059\u308b\u969b\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u3042\u308f\u305b\u3066\u3044\u308b\n+  cost_types {\n+    use_blended                = false # \u975e\u30d6\u30ec\u30f3\u30c9\u30b3\u30b9\u30c8\n+    use_amortized              = false # \u975e\u511f\u5374\u30b3\u30b9\u30c8\n+    include_refund             = false # \u8fd4\u91d1\n+    include_credit             = false # \u30af\u30ec\u30b8\u30c3\u30c8\n+    include_upfront            = true  # \u524d\u6255\u3044\u306e\u4e88\u7d04\u6599\u91d1\n+    include_recurring          = true  # \u5b9a\u671f\u7684\u306a\u4e88\u7d04\u6599\u91d1\n+    include_subscription       = true  # \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30b3\u30b9\u30c8\n+    include_other_subscription = true  # \u305d\u306e\u307b\u304b\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30b3\u30b9\u30c8\n+    include_tax                = true  # \u7a0e\u91d1\n+    include_support            = true  # \u30b5\u30dd\u30fc\u30c8\u306e\u6599\u91d1\n+    include_discount           = true  # \u5272\u5f15\n+  }\n+\n+  notification {\n+    # \u5b9f\u969b\u306e\u30b3\u30b9\u30c8\u304c\u4e88\u7b97\u306e80%\u3092\u8d85\u3048\u305f\u3068\u304d\u306b\u901a\u77e5\n+    notification_type          = \"ACTUAL\"\n+    comparison_operator        = \"GREATER_THAN\"\n+    threshold                  = 80\n+    threshold_type             = \"PERCENTAGE\"\n+    subscriber_email_addresses = [\"${var.budget_notification_email_address}\"]\n+    subscriber_sns_topic_arns  = [\"${aws_sns_topic.this.arn}\"]\n+  }\n+}\n+\n+resource aws_sns_topic this {\n+  name         = \"${var.budget_name}-notify-topic\"\n+  display_name = \"${var.budget_name}-notify-topic\"\n+}\n+\n+resource aws_sns_topic_policy this {\n+  arn    = aws_sns_topic.this.arn\n+  policy = data.aws_iam_policy_document.notify_sns_topic_policy.json\n+}\n+\n+data aws_iam_policy_document notify_sns_topic_policy {\n+  policy_id = \"__default_policy_ID\"\n+  statement {\n+    sid    = \"__default_statement_ID\"\n+    effect = \"Allow\"\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"budgets.amazonaws.com\"]\n+    }\n+    actions = [\n+      \"SNS:Publish\",\n+    ]\n+    resources = [\"${aws_sns_topic.this.arn}\"]\n+    condition {\n+      test     = \"StringEquals\"\n+      variable = \"AWS:SourceOwner\"\n+      values   = [\"${data.aws_caller_identity.current.account_id}\"]\n+    }\n+  }\n+}\n+\n+data aws_caller_identity current {}"
      },
      {
        "filename": "module/aws/budget/cost/output.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+output this_aws_budgets_budget_id {\n+  value       = aws_budgets_budget.this.id\n+  description = \"\u4f5c\u6210\u3057\u305f\u4e88\u7b97\u306eID\"\n+}\n+\n+output this_aws_sns_topic_arn {\n+  value       = aws_sns_topic.this.arn\n+  description = \"\u4e88\u7b97\u901a\u77e5\u3059\u308bSNS\u30c8\u30d4\u30c3\u30af\u306eARN\u5024\"\n+}"
      },
      {
        "filename": "module/aws/budget/cost/variables.tf",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+variable budget_limit_usd {\n+  type        = number\n+  description = \"(Required)\u4e88\u7b97\u5024(USD)\"\n+}\n+\n+variable budget_name {\n+  type        = string\n+  description = \"\u4e88\u7b97\u540d\u79f0\"\n+  default     = \"mintak-cost-budget\"\n+}\n+\n+variable budget_notification_email_address {\n+  type        = string\n+  description = \"\u901a\u77e5\u5148\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\"\n+  default     = \"\"\n+}\n+"
      },
      {
        "filename": "module/aws/cloudWatch/alerm/estimatedCharges/main.tf",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "status": "added",
        "patch": "@@ -0,0 +1,68 @@\n+resource aws_cloudwatch_metric_alarm this {\n+  alarm_name        = \"Billing Alert For ${var.alarm_name} ${var.currency}\"\n+  alarm_description = \"This alarm is issued when the continuous usage fee on AWS exceeds ${var.maximum_amount} ${var.currency}\"\n+\n+  # \u3057\u304d\u3044\u5024\u8a2d\u5b9a\n+  namespace = var.namespace\n+  dimensions = {\n+    Currency = \"${var.currency}\"\n+  }\n+  threshold           = var.maximum_amount\n+  comparison_operator = \"GreaterThanThreshold\"\n+  metric_name         = \"EstimatedCharges\"\n+\n+  # \u4ee5\u4e0b\u306e\u5236\u7d04\u3042\u308a\n+  ## Ref. \u8acb\u6c42\u30a2\u30e9\u30fc\u30e0\u3092\u9069\u5207\u306b\u52d5\u4f5c\u3055\u305b\u308b\u306b\u306f\u3001\u300c\u671f\u9593\u300d\u3092 6 \u6642\u9593\u306b\u3001\u300c\u7d71\u8a08\u300d\u3092\u6700\u5927\u306b\u8a2d\u5b9a\u3057\u3001\u30a2\u30e9\u30fc\u30e0\u304c 1 \u3064\u306e\u9023\u7d9a\u3057\u305f\u671f\u9593\u3067\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n+  statistic          = \"Maximum\"\n+  evaluation_periods = 1\n+  period             = 6 * 60 * 60\n+\n+  treat_missing_data = \"missing\"\n+\n+  actions_enabled = \"true\"\n+  alarm_actions   = [\"${aws_sns_topic.this.arn}\"]\n+}\n+\n+resource aws_sns_topic this {\n+  name         = \"CloudWatch_Alarms_Topics_For_${var.alarm_name}\"\n+  display_name = \"CloudWatch_Alarms_Topics_For_${var.alarm_name}\"\n+}\n+\n+resource aws_sns_topic_policy this {\n+  arn    = aws_sns_topic.this.arn\n+  policy = data.aws_iam_policy_document.sns_topic_policy.json\n+}\n+\n+resource aws_sns_topic_subscription this {\n+  topic_arn = aws_sns_topic.this.arn\n+  # E\u30e1\u30fc\u30eb\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u306f\u6307\u5b9a\u53ef\u80fd\u3060\u304c\u3001Terraform\u3067\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\n+  protocol = \"email\"\n+  endpoint = var.email_address\n+}\n+\n+data aws_iam_policy_document sns_topic_policy {\n+  # \u30b3\u30f3\u30bd\u30fc\u30eb\u3067CloudWatch\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u8a2d\u5b9a\u3067\u4f5c\u6210\u3057\u305f\u3068\u304d\u306b\u3067\u304d\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u30dd\u30ea\u30b7\u30fc\u306e\u8a2d\u5b9a\n+  policy_id = \"__default_policy_ID\"\n+  statement {\n+    sid    = \"__default_statement_ID\"\n+    effect = \"Allow\"\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"cloudwatch.amazonaws.com\"]\n+    }\n+    actions = [\n+      \"SNS:Subscribe\",\n+      \"SNS:Publish\",\n+      \"SNS:Receive\",\n+    ]\n+    resources = [\"${aws_sns_topic.this.arn}\"]\n+    condition {\n+      test     = \"StringEquals\"\n+      variable = \"AWS:SourceOwner\"\n+\n+      values = [\"${data.aws_caller_identity.current.account_id}\"]\n+    }\n+  }\n+}\n+\n+data aws_caller_identity current {}"
      },
      {
        "filename": "module/aws/cloudWatch/alerm/estimatedCharges/output.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+output this_aws_cloudwatch_metric_alarm_arn {\n+  value       = aws_cloudwatch_metric_alarm.this.arn\n+  description = \"\u8acb\u6c42\u30a2\u30e9\u30fc\u30e0\u306eARN\u5024\"\n+}\n+\n+output this_aws_sns_topic_arn {\n+  value       = aws_sns_topic.this.arn\n+  description = \"\u30c8\u30d4\u30c3\u30af\u306eARN\u5024\"\n+}"
      },
      {
        "filename": "module/aws/cloudWatch/alerm/estimatedCharges/variables.tf",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "status": "added",
        "patch": "@@ -0,0 +1,27 @@\n+variable alarm_name {\n+  type        = string\n+  description = \"\u30a2\u30e9\u30fc\u30e0\u540d\u79f0\"\n+}\n+\n+variable namespace {\n+  type        = string\n+  description = \"\u8acb\u6c42\u984d\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044AWS\u30b5\u30fc\u30d3\u30b9\u540d\u79f0\"\n+  # refs. https://docs.aws.amazon.com/ja_jp/AmazonCloudWatch/latest/monitoring/appinsights-logs-and-metrics.html\n+}\n+\n+variable maximum_amount {\n+  type        = number\n+  description = \"\u91d1\u984d\u3057\u304d\u3044\u5024\"\n+  default     = 1\n+}\n+\n+variable currency {\n+  type        = string\n+  description = \"\u91d1\u984d\u306e\u8868\u3059\u901a\u8ca8\u5358\u4f4d\"\n+  default     = \"USD\"\n+}\n+\n+variable email_address {\n+  type        = string\n+  description = \"\u901a\u77e5\u5148\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\"\n+}"
      },
      {
        "filename": "module/aws/lambda/go/main.tf",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "status": "added",
        "patch": "@@ -0,0 +1,89 @@\n+resource random_string suffix {\n+  length  = 6\n+  lower   = true\n+  number  = true\n+  special = false\n+}\n+\n+resource aws_lambda_function this {\n+  runtime          = \"go1.x\"\n+  memory_size      = var.memory\n+  timeout          = 30\n+  function_name    = \"${var.name}-${random_string.suffix.result}\"\n+  description      = \"${var.name} : ${var.handler}\"\n+  handler          = var.handler\n+  filename         = var.archive_file\n+  role             = aws_iam_role.lambda_role.arn\n+  source_code_hash = filebase64sha256(\"${var.archive_file}\")\n+  #source_code_hash = var.archive_file.output_base64sha256\n+\n+  environment {\n+    variables = {\n+      NOTIFICATION_CHANNEL = var.slack_channel\n+    }\n+  }\n+}\n+\n+// SNS\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 & \u30c8\u30ea\u30ac\u30fc\n+resource aws_sns_topic_subscription this {\n+  count = var.sns_trigger_enabled && length(var.sns_topic_arn) > 0 ? 1 : 0\n+\n+  topic_arn = var.sns_topic_arn\n+  protocol  = \"lambda\"\n+  endpoint  = aws_lambda_function.this.arn\n+}\n+\n+resource aws_lambda_permission this {\n+  count = var.sns_trigger_enabled && length(var.sns_topic_arn) > 0 ? 1 : 0\n+\n+  statement_id  = \"AllowExecutionFromSNS\"\n+  action        = \"lambda:InvokeFunction\"\n+  function_name = aws_lambda_function.this.function_name\n+  principal     = \"sns.amazonaws.com\"\n+  source_arn    = var.sns_topic_arn\n+}\n+\n+// Role / Policy\n+resource aws_iam_role lambda_role {\n+  name               = \"RoleForAWSLambda${var.name}\"\n+  assume_role_policy = data.aws_iam_policy_document.assume_role_policy.json\n+}\n+\n+resource aws_iam_policy lambda_logging {\n+  name        = \"PolicyForAWSLambda${var.name}\"\n+  description = \"IAM policy for logging from a lambda\"\n+  policy      = data.aws_iam_policy_document.logging_policy.json\n+}\n+\n+resource aws_iam_role_policy_attachment logging {\n+  role       = aws_iam_role.lambda_role.name\n+  policy_arn = aws_iam_policy.lambda_logging.arn\n+}\n+\n+resource aws_iam_role_policy_attachment ssm_read {\n+  role       = aws_iam_role.lambda_role.name\n+  policy_arn = \"arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess\"\n+}\n+\n+data aws_iam_policy_document logging_policy {\n+  statement {\n+    effect = \"Allow\"\n+    actions = [\n+      \"logs:CreateLogStream\",\n+      \"logs:CreateLogGroup\",\n+      \"logs:PutLogEvents\"\n+    ]\n+    resources = [\"arn:aws:logs:*:*:*\"]\n+  }\n+}\n+\n+data aws_iam_policy_document assume_role_policy {\n+  statement {\n+    actions = [\"sts:AssumeRole\"]\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"lambda.amazonaws.com\"]\n+    }\n+    effect = \"Allow\"\n+  }\n+}"
      },
      {
        "filename": "module/aws/lambda/go/output.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "added",
        "patch": "@@ -0,0 +1,14 @@\n+output this_aws_lambda_function_arn {\n+  value       = aws_lambda_function.this.arn\n+  description = \"\u4f5c\u6210\u3057\u305fLambda\u306eARN\u5024\"\n+}\n+\n+output this_aws_lambda_function_version {\n+  value       = aws_lambda_function.this.version\n+  description = \"\u4f5c\u6210\u3057\u305fLambda\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\"\n+}\n+\n+output this_aws_lambda_function_last_modified {\n+  value       = aws_lambda_function.this.last_modified\n+  description = \"\u4f5c\u6210\u3057\u305fLambda\u306e\u6700\u7d42\u66f4\u65b0\u65e5\u6642\"\n+}"
      },
      {
        "filename": "module/aws/lambda/go/variables.tf",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "status": "added",
        "patch": "@@ -0,0 +1,40 @@\n+variable name {\n+  type        = string\n+  description = \"\u95a2\u6570\u540d\"\n+  default     = \"mintak-lambda-function-go\"\n+}\n+\n+variable handler {\n+  type        = string\n+  description = \"\u30cf\u30f3\u30c9\u30e9\"\n+  default     = \"main\"\n+}\n+\n+variable archive_file {\n+  type        = string\n+  description = \"upload\u7528\u30a2\u30fc\u30ab\u30a4\u30d6\u30d5\u30a1\u30a4\u30eb\"\n+}\n+\n+variable memory {\n+  type        = number\n+  description = \"\u30e1\u30e2\u30ea\u8a2d\u5b9a\u5024\"\n+  default     = 256\n+}\n+\n+variable sns_trigger_enabled {\n+  type        = bool\n+  description = \"SNS\u901a\u77e5\u3092\u30c8\u30ea\u30ac\u30fc\u3068\u3059\u308b\u304b\"\n+  default     = false\n+}\n+\n+variable sns_topic_arn {\n+  type        = string\n+  description = \"\u30c8\u30ea\u30ac\u30fc\u3068\u3057\u3066Lambda\u3078\u306e\u901a\u77e5\u3092\u884c\u3046SNS\u30c8\u30d4\u30c3\u30af\u306eARN\u5024\"\n+  default     = \"\"\n+}\n+\n+variable slack_channel {\n+  type        = string\n+  description = \"\u901a\u77e5\u5148Slack Channelno\"\n+  default     = \"\"\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ministryofjustice/hmpps-env-configs/commit/0328838420ac0d3754cf772a7d2f5bb1612193ed",
    "files": [
      {
        "filename": "common-prod/common.tfvars",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -432,11 +432,13 @@ default_ldap_config = {\n   backup_retention_days = 7\n   # Performance/tuning\n   query_time_limit = 30            # seconds\n-  db_max_size      = \"53687091200\" # bytes (=50GB)\n-  # Disk\n-  disk_volume_type = \"io1\"\n-  disk_volume_size = 100 # GB\n-  disk_iops        = 5000\n+  db_max_size      = \"53687091200\" # bytes, stored on EFS (=50GB)\n+  # Disk (system data + logs)\n+  disk_volume_type = \"gp2\"\n+  disk_volume_size = 50 # GB\n+  # EFS (ldap data)\n+  efs_throughput_mode        = \"provisioned\"\n+  efs_provisioned_throughput = 64 # MiB/s\n }\n ldap_config = {}\n "
      },
      {
        "filename": "common/common.tfvars",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -386,11 +386,12 @@ default_ldap_config = {\n   backup_retention_days = 7\n   # Performance/tuning\n   query_time_limit = 30            # seconds\n-  db_max_size      = \"16106127360\" # bytes (=15GB)\n-  # Disk\n-  disk_volume_type = \"io1\"\n+  db_max_size      = \"16106127360\" # bytes, stored on EFS (=15GB)\n+  # Disk (system data + logs)\n+  disk_volume_type = \"gp2\"\n   disk_volume_size = 30 # GB\n-  disk_iops        = 1000\n+  # EFS (ldap data)\n+  efs_throughput_mode = \"bursting\"\n }\n ldap_config = {}\n "
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "cheaper_disk_type", "remove_iops"],
    "notes": "Remove provisioned IOPS for EBS cost reduction and move from io1 to gp2 disk type"
  },
  {
    "url": "https://github.com/ministryofjustice/hmpps-env-configs/commit/28e80387490ac5303782b4762f1d42cac394464c",
    "files": [
      {
        "filename": "common-prod/common.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -508,7 +508,7 @@ default_ansible_vars = {\n # Delius ActiveMQ\n default_activemq_config = {\n   efs_throughput_mode        = \"provisioned\"\n-  efs_provisioned_throughput = 10 # MiB/s\n+  efs_provisioned_throughput = 16 # MiB/s\n }\n activemq_config = {}\n "
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit increases ActiveMQ throughput following a risk/cost evaluation that is not publicly accessible"
  },
  {
    "url": "https://github.com/ministryofjustice/hmpps-env-configs/commit/670c006bad288d0360c3811aa63b3c323753c385",
    "files": [
      {
        "filename": "common-prod/common.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -453,7 +453,7 @@ snapshot_retention_days = 30\n # Default values for LDAP\n default_ldap_config = {\n   # ASG\n-  instance_type  = \"c5.9xlarge\"\n+  instance_type  = \"m5.8xlarge\"\n   instance_count = 3\n   # Connection\n   protocol  = \"ldap\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from c5.9xlarge to m5.8xlarge"
  },
  {
    "url": "https://github.com/ministryofjustice/hmpps-env-configs/commit/954dda617d47007a8a1ff5780d3174e900e95be1",
    "files": [
      {
        "filename": "delius-prod/sub-projects/mis.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -65,7 +65,7 @@ dis_ebs_optimized = true\n dis_hibernation = false\n \n #Instance size for dfi\n-dfi_instance_type  = \"m5.8xlarge\"\n+dfi_instance_type  = \"m5.xlarge\"\n dfi_root_size = 75\n dfi_server_count = 1\n dfi_server_resources = 1"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from m5.8xlarge to m5.xlarge"
  },
  {
    "url": "https://github.com/nephosolutions/terraform-google-gcp-project/commit/908c3fd85a60090cdd06f6f4b46893ceeeaf99fb",
    "files": [
      {
        "filename": "CHANGELOG.md",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -4,6 +4,10 @@ All notable changes to this project will be documented in this file.\n \n ## [Unreleased]\n \n+## [4.0.1] - 2019-09-17\n+\n+- Enable `cloudbilling.googleapis.com` by default - required to attach a billing account\n+\n ## [4.0.0] - 2019-09-17\n \n - Enable additionally required service APIs and depend on them\n@@ -42,7 +46,8 @@ __Attention:__ If you upgrade from version 0.x.y you have to clean your Terrafor\n terraform state rm module.gcp_project.google_project_services.project\n ```\n \n-[Unreleased]: https://github.com/nephosolutions/terraform-google-gcp-project/compare/v4.0.0...HEAD\n+[Unreleased]: https://github.com/nephosolutions/terraform-google-gcp-project/compare/v4.0.1...HEAD\n+[4.0.1]: https://github.com/nephosolutions/terraform-google-gcp-project/compare/v3.0.0...v4.0.1\n [4.0.0]: https://github.com/nephosolutions/terraform-google-gcp-project/compare/v3.0.0...v4.0.0\n [3.0.0]: https://github.com/nephosolutions/terraform-google-gcp-project/compare/v2.0.0...v3.0.0\n [2.0.0]: https://github.com/nephosolutions/terraform-google-gcp-project/compare/v1.1.0...v2.0.0"
      },
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -38,6 +38,7 @@ data \"google_project_services\" \"enabled\" {\n \n locals {\n   required_api_services = [\n+    \"cloudbilling.googleapis.com\",\n     \"cloudresourcemanager.googleapis.com\",\n     \"compute.googleapis.com\",\n     \"serviceusage.googleapis.com\","
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jackofallops/terraform-aws-mysql-cluster/commit/7b2a446b0915a3ad26093f8234f7493ff152138a",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -15,12 +15,12 @@ variable \"cluster_instance_type\" {\n \n variable \"data_volume_size\" {\n   description = \"Size, in GB, for the EBS Data Disk for the node(s)\"\n-  default     = 150\n+  default     = 10\n }\n \n variable \"data_volume_iops\" {\n   description = \"IOPS for the Data volume (default 3000)\"\n-  default     = 3000\n+  default     = 2000\n }\n \n variable \"data_volume_delete\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "smaller_disk", "reduce_iops"],
    "notes": "Reduce volume disk size from 150GB to 10GB and IOPS from 3000 to 2000"
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-aws-config/commit/9df6f6e72cd4fa33003fa5498c796bd129c99d0f",
    "files": [
      {
        "filename": ".github/workflows/compare.yml",
        "additions": 16,
        "deletions": 14,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -7,7 +7,6 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.15.0\n   tf_target_dir: example/examplea\n   branch: master\n jobs:\n@@ -22,8 +21,7 @@ jobs:\n       - name: tfsec\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion tfsec/tfsec)\n-          wget \"https://github.com/tfsec/tfsec/releases/download/v${now}/tfsec-linux-amd64\"\n+          lastversion tfsec/tfsec --assets -d\n           chmod +x tfsec-linux-amd64\n           ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n         continue-on-error: true\n@@ -67,18 +65,20 @@ jobs:\n       - name: install terrascan\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion accurics/terrascan)\n-          curl --location https://github.com/accurics/terrascan/releases/download/v${now}/terrascan_${now}_Linux_x86_64.tar.gz --output terrascan.tar.gz\n-          tar -xvf terrascan.tar.gz\n+          lastversion accurics/terrascan --assets -d --verbose\n+          tar -xvf terrascan*.tar.gz\n+          chmod +x ./terrascan\n       - name: run terrascan\n-        run: ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json >terrascan.json\n+        run: |\n+          ./terrascan init\n+          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: terrascan\n           path: terrascan.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n   kics:\n     runs-on: ubuntu-latest\n     steps:\n@@ -87,18 +87,20 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: run kics Scan\n-        uses: checkmarx/kics-action@v1.0\n-        with:\n-          path: ${{ env.tf_target_dir }}\n-          output_path: \"kics.json\"\n+      - name: install kics\n+        run: |\n+          pip3 install lastversion\n+          lastversion Checkmarx/kics --assets -d --verbose\n+          tar -xvf kics*.tar.gz\n+      - name: run kics\n+        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: kics\n           path: kics.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n \n   upload:\n     needs: [kics, terrascan, checkov, tfsec]"
      },
      {
        "filename": ".github/workflows/master.yml",
        "additions": 24,
        "deletions": 4,
        "changes": 28,
        "status": "modified",
        "patch": "@@ -33,6 +33,28 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+      - name: Bills\n+        run: |\n+          pip3 install lastversion\n+          lastversion infracost --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf infracost*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/infracost-linux-amd64\n+          $GITHUB_WORKSPACE/bin/infracost-linux-amd64 breakdown --path ${{ env.tf_target_dir }} --usage-file ${{ env.tf_target_dir }}/infracost-usage.yml\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -46,10 +68,9 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n@@ -59,7 +80,6 @@ jobs:\n     steps:\n       - uses: actions/checkout@master\n       - name: Bump version and push tag\n-        if: ${{ !env.ACT }}\n         uses: anothrNick/github-tag-action@master\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "filename": ".github/workflows/pull_request.yml",
        "additions": 30,
        "deletions": 3,
        "changes": 33,
        "status": "modified",
        "patch": "@@ -29,6 +29,15 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -41,10 +50,28 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          # See the cloud credentials section for the options\n+        with:\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          usage_file: ${{ env.tf_target_dir }}/infracost-usage.yml\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": "README.md",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "status": "modified",
        "patch": "@@ -26,6 +26,80 @@ module \"config\" {\n }\n ```\n \n+## Costs\n+\n+```text\n+monthly cost estimate\n+\n+Project: .\n+\n+ Name                                                        Monthly Qty  Unit                Monthly Cost\n+\n+ module.config.aws_config_config_rule.rule[0]\n+ \u2514\u2500 Rule evaluations (first 100K)                        Cost depends on usage: $0.001 per evaluations\n+\n+ module.config.aws_config_config_rule.rule[1]\n+ \u2514\u2500 Rule evaluations (first 100K)                        Cost depends on usage: $0.001 per evaluations\n+\n+ module.config.aws_config_config_rule.rule[2]\n+ \u2514\u2500 Rule evaluations (first 100K)                        Cost depends on usage: $0.001 per evaluations\n+\n+ module.config.aws_config_config_rule.rule[3]\n+ \u2514\u2500 Rule evaluations (first 100K)                        Cost depends on usage: $0.001 per evaluations\n+\n+ module.config.aws_config_config_rule.rule[4]\n+ \u2514\u2500 Rule evaluations (first 100K)                        Cost depends on usage: $0.001 per evaluations\n+\n+ module.config.aws_config_config_rule.rule[5]\n+ \u2514\u2500 Rule evaluations (first 100K)                        Cost depends on usage: $0.001 per evaluations\n+\n+ module.config.aws_config_config_rule.rule[6]\n+ \u2514\u2500 Rule evaluations (first 100K)                        Cost depends on usage: $0.001 per evaluations\n+\n+ module.config.aws_config_config_rule.rule[7]\n+ \u2514\u2500 Rule evaluations (first 100K)                        Cost depends on usage: $0.001 per evaluations\n+\n+ module.config.aws_config_configuration_recorder.config\n+ \u251c\u2500 Config items                                         Cost depends on usage: $0.003 per records\n+ \u2514\u2500 Custom config items                                  Cost depends on usage: $0.003 per records\n+\n+ module.config.aws_kms_key.s3\n+ \u251c\u2500 Customer master key                                                1  months                     $1.00\n+ \u251c\u2500 Requests                                             Cost depends on usage: $0.03 per 10k requests\n+ \u251c\u2500 ECC GenerateDataKeyPair requests                     Cost depends on usage: $0.10 per 10k requests\n+ \u2514\u2500 RSA GenerateDataKeyPair requests                     Cost depends on usage: $0.10 per 10k requests\n+\n+ module.config.aws_s3_bucket.config\n+ \u251c\u2500 Glacier\n+ \u2502  \u251c\u2500 Storage                                           Cost depends on usage: $0.0045 per GB-months\n+ \u2502  \u251c\u2500 PUT, COPY, POST, LIST requests                    Cost depends on usage: $0.03 per 1k requests\n+ \u2502  \u251c\u2500 GET, SELECT, and all other requests               Cost depends on usage: $0.00042 per 1k requests\n+ \u2502  \u251c\u2500 Lifecycle transition                              Cost depends on usage: $0.03 per 1k requests\n+ \u2502  \u251c\u2500 Retrieval requests (standard)                     Cost depends on usage: $0.03 per 1k requests\n+ \u2502  \u251c\u2500 Retrievals (standard)                             Cost depends on usage: $0.01 per GB-months\n+ \u2502  \u251c\u2500 Select data scanned (standard)                    Cost depends on usage: $0.0084 per GB-months\n+ \u2502  \u251c\u2500 Select data returned (standard)                   Cost depends on usage: $0.01 per GB-months\n+ \u2502  \u251c\u2500 Retrieval requests (expedited)                    Cost depends on usage: $10.50 per 1k requests\n+ \u2502  \u251c\u2500 Retrievals (expedited)                            Cost depends on usage: $0.03 per GB-months\n+ \u2502  \u251c\u2500 Select data scanned (expedited)                   Cost depends on usage: $0.02 per GB-months\n+ \u2502  \u251c\u2500 Select data returned (expedited)                  Cost depends on usage: $0.03 per GB-months\n+ \u2502  \u251c\u2500 Retrieval requests (bulk)                         Cost depends on usage: $0.03 per 1k requests\n+ \u2502  \u251c\u2500 Retrievals (bulk)                                 Cost depends on usage: $0.0026 per GB-months\n+ \u2502  \u251c\u2500 Select data scanned (bulk)                        Cost depends on usage: $0.00104 per GB-months\n+ \u2502  \u251c\u2500 Select data returned (bulk)                       Cost depends on usage: $0.0026 per GB-months\n+ \u2502  \u2514\u2500 Early delete (within 90 days)                     Cost depends on usage: $0.0045 per GB-months\n+ \u2514\u2500 Standard\n+    \u251c\u2500 Storage                                           Cost depends on usage: $0.02 per GB-months\n+    \u251c\u2500 PUT, COPY, POST, LIST requests                    Cost depends on usage: $0.0053 per 1k requests\n+    \u251c\u2500 GET, SELECT, and all other requests               Cost depends on usage: $0.00042 per 1k requests\n+    \u251c\u2500 Select data scanned                               Cost depends on usage: $0.00225 per GB-months\n+    \u2514\u2500 Select data returned                              Cost depends on usage: $0.0008 per GB-months\n+\n+ module.config.aws_sns_topic.config\n+ \u2514\u2500 Requests                                             Cost depends on usage: $0.50 per 1M requests\n+\n+ PROJECT TOTAL                                                                                       $1.00\n+```\n <!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n ## Requirements\n \n@@ -55,6 +129,7 @@ No modules.\n | [aws_kms_key.s3](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key) | resource |\n | [aws_s3_bucket.config](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket) | resource |\n | [aws_s3_bucket_policy.config](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy) | resource |\n+| [aws_s3_bucket_public_access_block.config](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block) | resource |\n | [aws_sns_topic.config](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic) | resource |\n | [aws_caller_identity.current](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/caller_identity) | data source |\n | [aws_iam_policy_document.assume_role](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |"
      },
      {
        "filename": "aws_s3_bucket.config.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -31,15 +31,15 @@ resource \"aws_s3_bucket\" \"config\" {\n     target_prefix = \"s3/${local.config_name}/\"\n   }\n \n-/*\n+\n   server_side_encryption_configuration {\n     rule {\n       apply_server_side_encryption_by_default {\n         kms_master_key_id = aws_kms_key.s3.arn\n         sse_algorithm     = \"aws:kms\"\n       }\n     }\n-  }*/\n+  }\n \n \n   tags = var.common_tags"
      },
      {
        "filename": "aws_s3_bucket_public_access_block.config.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+resource \"aws_s3_bucket_public_access_block\" \"config\" {\n+  bucket                  = aws_s3_bucket.config.id\n+  restrict_public_buckets = true\n+  block_public_acls       = true\n+  block_public_policy     = true\n+  ignore_public_acls      = true\n+}"
      },
      {
        "filename": "example/examplea/infracost-usage.yml",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "status": "added",
        "patch": "@@ -0,0 +1,86 @@\n+version: 0.1\n+resource_usage:\n+  module.config.aws_config_config_rule.rule[0]:\n+    monthly_rule_evaluations: 0\n+  module.config.aws_config_config_rule.rule[1]:\n+    monthly_rule_evaluations: 0\n+  module.config.aws_config_config_rule.rule[2]:\n+    monthly_rule_evaluations: 0\n+  module.config.aws_config_config_rule.rule[3]:\n+    monthly_rule_evaluations: 0\n+  module.config.aws_config_config_rule.rule[4]:\n+    monthly_rule_evaluations: 0\n+  module.config.aws_config_config_rule.rule[5]:\n+    monthly_rule_evaluations: 0\n+  module.config.aws_config_config_rule.rule[6]:\n+    monthly_rule_evaluations: 0\n+  module.config.aws_config_config_rule.rule[7]:\n+    monthly_rule_evaluations: 0\n+  module.config.aws_config_configuration_recorder.config:\n+    monthly_config_items: 0\n+    monthly_custom_config_items: 0\n+  module.config.aws_s3_bucket.config:\n+    glacier:\n+      early_delete_gb: 0\n+      monthly_bulk_data_retrieval_gb: 0\n+      monthly_bulk_data_retrieval_requests: 0\n+      monthly_bulk_select_data_returned_gb: 0\n+      monthly_bulk_select_data_scanned_gb: 0\n+      monthly_expedited_data_retrieval_gb: 0\n+      monthly_expedited_data_retrieval_requests: 0\n+      monthly_expedited_select_data_returned_gb: 0\n+      monthly_expedited_select_data_scanned_gb: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_standard_data_retrieval_gb: 0\n+      monthly_standard_data_retrieval_requests: 0\n+      monthly_standard_select_data_returned_gb: 0\n+      monthly_standard_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    glacier_deep_archive:\n+      early_delete_gb: 0\n+      monthly_bulk_data_retrieval_gb: 0\n+      monthly_bulk_data_retrieval_requests: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_standard_data_retrieval_gb: 0\n+      monthly_standard_data_retrieval_requests: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    intelligent_tiering:\n+      early_delete_gb: 0\n+      frequent_access_storage_gb: 0\n+      infrequent_access_storage_gb: 0\n+      monitored_objects: 0\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+    object_tags: 0\n+    one_zone_infrequent_access:\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_retrieval_gb: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    standard:\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+    standard_infrequent_access:\n+      monthly_lifecycle_transition_requests: 0\n+      monthly_retrieval_gb: 0\n+      monthly_select_data_returned_gb: 0\n+      monthly_select_data_scanned_gb: 0\n+      monthly_tier_1_requests: 0\n+      monthly_tier_2_requests: 0\n+      storage_gb: 0\n+  module.config.aws_sns_topic.config:\n+    monthly_requests: 0\n+    request_size_kb: 0"
      },
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n terraform {\n   required_providers {\n     aws = {\n-      version = \"3.35.0\"\n+      version = \"3.39.0\"\n       source  = \"hashicorp/aws\"\n     }\n   }"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit configures Infracost in CI, there are no relevant changes to Terraform files"
  },
  {
    "url": "https://github.com/tlc-pack/ci-terraform/commit/b93d225cc274dba55027a4a3db2475e78c77018f",
    "files": [
      {
        "filename": "vars/tvm-ci-prod.auto.tfvars",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -44,6 +44,13 @@ autoscaler_types = {\n     on_demand_percentage_above_base_capacity = 50\n     on_demand_base_capacity = 8\n   }\n+  \"Prod-Autoscaler-Jenkins-GPU-4x\" = {\n+    image_family        = \"jenkins-gpu-agent\"\n+    agent_instance_type = \"g4dn.4xlarge\"\n+    labels              = \"GPU\"\n+    min_size            = 2\n+    max_size            = 2\n+  }\n   \"Prod-Autoscaler-Jenkins-ARM\" = {\n     image_family        = \"jenkins-stock-agent-arm\"\n     agent_instance_type = \"m6g.4xlarge\""
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/tlc-pack/ci-terraform/commit/aae09ea0dc9f394bd83e640ae003ba336a28a2b5",
    "files": [
      {
        "filename": "vars/tvm-ci-prod.auto.tfvars",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -35,6 +35,13 @@ autoscaler_types = {\n     on_demand_percentage_above_base_capacity = 50\n     on_demand_base_capacity = 6\n   }\n+  \"Prod-Autoscaler-Jenkins-CPU-Small\" = {\n+    image_family        = \"jenkins-stock-agent\"\n+    agent_instance_type = \"r5.large\"\n+    labels              = \"CPU-SMALL\"\n+    min_size            = 0\n+    max_size            = 45\n+  }\n   \"Prod-Autoscaler-Jenkins-GPU\" = {\n     image_family        = \"jenkins-gpu-agent\"\n     agent_instance_type = \"g4dn.xlarge\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit adds a set of variables to be able to use cheaper instances for certain tasks, so this could be coded that way, but it is not used elsewhere"
  },
  {
    "url": "https://github.com/tlc-pack/ci-terraform/commit/9a51a8ae697b9f9df1c05c8276a871b614be2da9",
    "files": [
      {
        "filename": "vars/tvm-ci-prod.auto.tfvars",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -25,12 +25,15 @@ global_access_pub_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCPEfKqi1qHT6P3oTM\n \n jenkins_pub_key = \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBZvGmyspz5yaZ2n0H2U2XG8xULm2GYoT8Fo3qebI34v\"\n \n+# For min_size, this should be set to the number of reserved instances on the\n+# AWS account since they're being paid for either way we can avoid node spin-up\n+# time by always keeping at least the reserved instance capacity around\n autoscaler_types = {\n   \"Prod-Autoscaler-Jenkins-CPU\" = {\n     image_family        = \"jenkins-stock-agent\"\n     agent_instance_type = \"c4.4xlarge\"\n     labels              = \"CPU\"\n-    min_size            = 0\n+    min_size            = 6\n     max_size            = 90\n     on_demand_percentage_above_base_capacity = 100\n     on_demand_base_capacity = 0\n@@ -46,7 +49,7 @@ autoscaler_types = {\n     image_family        = \"jenkins-gpu-agent\"\n     agent_instance_type = \"g4dn.xlarge\"\n     labels              = \"GPU\"\n-    min_size            = 0\n+    min_size            = 8\n     max_size            = 90\n     on_demand_percentage_above_base_capacity = 100\n     on_demand_base_capacity = 0\n@@ -55,7 +58,7 @@ autoscaler_types = {\n     image_family        = \"jenkins-stock-agent-arm\"\n     agent_instance_type = \"m6g.4xlarge\"\n     labels              = \"ARM\"\n-    min_size            = 0\n+    min_size            = 2\n     max_size            = 90\n     on_demand_percentage_above_base_capacity = 100\n     on_demand_base_capacity = 0"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ryanlg/ryhino-public/commit/e51b9583b2df3154b5c82da361d411d65ed23bab",
    "files": [
      {
        "filename": "modules/bedrock/eip.tf",
        "additions": 14,
        "deletions": 12,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -1,15 +1,17 @@\n-resource \"aws_eip\" \"ngw_bedrock_private_1a\" {\n-  vpc = true\n+// @disabled: Expensive\n+# resource \"aws_eip\" \"ngw_bedrock_private_1a\" {\n+#   vpc = true\n \n-  tags = merge(var.global_tags, {\n-    \"Name\" = \"ryan-eip-ngw-bedrock-private-1a\"\n-  })\n-}\n+#   tags = merge(var.global_tags, {\n+#     \"Name\" = \"ryan-eip-ngw-bedrock-private-1a\"\n+#   })\n+# }\n \n-resource \"aws_eip\" \"ngw_bedrock_private_1b\" {\n-  vpc = true\n+// @disabled: Expensive\n+# resource \"aws_eip\" \"ngw_bedrock_private_1b\" {\n+#   vpc = true\n \n-  tags = merge(var.global_tags, {\n-    \"Name\" = \"ryan-eip-ngw-bedrock-private-1b\"\n-  })\n-}\n+#   tags = merge(var.global_tags, {\n+#     \"Name\" = \"ryan-eip-ngw-bedrock-private-1b\"\n+#   })\n+# }"
      },
      {
        "filename": "modules/bedrock/ngw.tf",
        "additions": 22,
        "deletions": 20,
        "changes": 42,
        "status": "modified",
        "patch": "@@ -1,27 +1,29 @@\n-resource \"aws_nat_gateway\" \"bedrock_private_1a\" {\n+// @disabled: Expensive\n+# resource \"aws_nat_gateway\" \"bedrock_private_1a\" {\n \n-  allocation_id = \"${aws_eip.ngw_bedrock_private_1a.id}\"\n-  subnet_id     = \"${aws_subnet.bedrock_private_1a.id}\"\n+#   allocation_id = \"${aws_eip.ngw_bedrock_private_1a.id}\"\n+#   subnet_id     = \"${aws_subnet.bedrock_private_1a.id}\"\n \n-  depends_on = [\n-    \"aws_internet_gateway.bedrock\"\n-  ]\n+#   depends_on = [\n+#     \"aws_internet_gateway.bedrock\"\n+#   ]\n \n-  tags = merge(var.global_tags, {\n-    \"Name\" = \"ryan-ngw-bedrock-private-1a\"\n-  })\n-}\n+#   tags = merge(var.global_tags, {\n+#     \"Name\" = \"ryan-ngw-bedrock-private-1a\",\n+#   })\n+# }\n \n-resource \"aws_nat_gateway\" \"bedrock_private_1b\" {\n+// @disabled: Expensive\n+# resource \"aws_nat_gateway\" \"bedrock_private_1b\" {\n \n-  allocation_id = \"${aws_eip.ngw_bedrock_private_1b.id}\"\n-  subnet_id     = \"${aws_subnet.bedrock_private_1b.id}\"\n+#   allocation_id = \"${aws_eip.ngw_bedrock_private_1b.id}\"\n+#   subnet_id     = \"${aws_subnet.bedrock_private_1b.id}\"\n \n-  depends_on = [\n-    \"aws_internet_gateway.bedrock\"\n-  ]\n+#   depends_on = [\n+#     \"aws_internet_gateway.bedrock\"\n+#   ]\n \n-  tags = merge(var.global_tags, {\n-    \"Name\" = \"ryan-ngw-bedrock-private-1b\"\n-  })\n-}\n+#   tags = merge(var.global_tags, {\n+#     \"Name\" = \"ryan-ngw-bedrock-private-1b\",\n+#   })\n+# }"
      },
      {
        "filename": "modules/bedrock/rt.tf",
        "additions": 27,
        "deletions": 25,
        "changes": 52,
        "status": "modified",
        "patch": "@@ -6,31 +6,33 @@ resource \"aws_default_route_table\" \"this\" {\n   })\n }\n \n-resource \"aws_route_table\" \"bedrock_private_1a\" {\n-  vpc_id = \"${aws_vpc.bedrock.id}\"\n-\n-  route {\n-    cidr_block = \"0.0.0.0/0\"\n-    nat_gateway_id = \"${aws_nat_gateway.bedrock_private_1a.id}\"\n-  }\n-\n-  tags = merge(var.global_tags, {\n-    \"Name\" = \"ryanl-rt-bedrock-private-1a\"\n-  })\n-}\n-\n-resource \"aws_route_table\" \"bedrock_private_1b\" {\n-  vpc_id = \"${aws_vpc.bedrock.id}\"\n-\n-  route {\n-    cidr_block = \"0.0.0.0/0\"\n-    nat_gateway_id = \"${aws_nat_gateway.bedrock_private_1b.id}\"\n-  }\n-\n-  tags = merge(var.global_tags, {\n-    \"Name\" = \"ryanl-rt-bedrock-private-1b\"\n-  })\n-}\n+// @disabled: Expensive\n+# resource \"aws_route_table\" \"bedrock_private_1a\" {\n+  # vpc_id = \"${aws_vpc.bedrock.id}\"\n+\n+  # route {\n+  #   cidr_block = \"0.0.0.0/0\"\n+  #   nat_gateway_id = \"${aws_nat_gateway.bedrock_private_1a.id}\"\n+  # }\n+\n+  # tags = merge(var.global_tags, {\n+  #   \"Name\" = \"ryanl-rt-bedrock-private-1a\"\n+  # })\n+# }\n+\n+// @disabled: Expensive\n+# resource \"aws_route_table\" \"bedrock_private_1b\" {\n+#   vpc_id = \"${aws_vpc.bedrock.id}\"\n+\n+#   route {\n+#     cidr_block = \"0.0.0.0/0\"\n+#     nat_gateway_id = \"${aws_nat_gateway.bedrock_private_1b.id}\"\n+#   }\n+\n+#   tags = merge(var.global_tags, {\n+#     \"Name\" = \"ryanl-rt-bedrock-private-1b\"\n+#   })\n+# }\n \n resource \"aws_route_table\" \"bedrock_public_1a\" {\n   vpc_id = \"${aws_vpc.bedrock.id}\""
      },
      {
        "filename": "modules/bedrock/rta.tf",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -1,14 +1,16 @@\n-resource \"aws_route_table_association\" \"bedrock_private_1a\" {\n+// @disabled: Expensive\n+# resource \"aws_route_table_association\" \"bedrock_private_1a\" {\n \n-  subnet_id      = \"${aws_subnet.bedrock_private_1a.id}\"\n-  route_table_id = \"${aws_route_table.bedrock_private_1a.id}\"\n-}\n+#   subnet_id      = \"${aws_subnet.bedrock_private_1a.id}\"\n+#   route_table_id = \"${aws_route_table.bedrock_private_1a.id}\"\n+# }\n \n-resource \"aws_route_table_association\" \"bedrock_private_1b\" {\n+// @disabled: Expensive\n+# resource \"aws_route_table_association\" \"bedrock_private_1b\" {\n \n-  subnet_id      = \"${aws_subnet.bedrock_private_1b.id}\"\n-  route_table_id = \"${aws_route_table.bedrock_private_1b.id}\"\n-}\n+#   subnet_id      = \"${aws_subnet.bedrock_private_1b.id}\"\n+#   route_table_id = \"${aws_route_table.bedrock_private_1b.id}\"\n+# }\n \n resource \"aws_route_table_association\" \"bedrock_public_1a\" {\n "
      },
      {
        "filename": "modules/bedrock/subnets.tf",
        "additions": 24,
        "deletions": 21,
        "changes": 45,
        "status": "modified",
        "patch": "@@ -1,24 +1,27 @@\n-resource \"aws_subnet\" \"bedrock_private_1a\" {\n-\n-  vpc_id            = \"${aws_vpc.bedrock.id}\"\n-  cidr_block        = \"10.0.1.0/24\"\n-  availability_zone = \"us-east-1a\"\n-\n-  tags = merge(var.global_tags, {\n-    \"Name\" = \"ryanl-subnet-bedrock-private-1a\"\n-  })\n-}\n-\n-resource \"aws_subnet\" \"bedrock_private_1b\" {\n-\n-  vpc_id            = \"${aws_vpc.bedrock.id}\"\n-  cidr_block        = \"10.0.2.0/24\"\n-  availability_zone = \"us-east-1b\"\n-\n-  tags = merge(var.global_tags, {\n-    \"Name\" = \"ryanl-subnet-bedrock-private-1b\"\n-  })\n-}\n+// @disabled: Expensive\n+# resource \"aws_subnet\" \"bedrock_private_1a\" {\n+\n+#   vpc_id            = \"${aws_vpc.bedrock.id}\"\n+#   cidr_block        = \"10.0.1.0/24\"\n+#   availability_zone = \"us-east-1a\"\n+\n+#   tags = merge(var.global_tags, {\n+#     \"Name\" = \"ryanl-subnet-bedrock-private-1a\"\n+#   })\n+# }\n+\n+// @disabled: Expensive\n+# resource \"aws_subnet\" \"bedrock_private_1b\" {\n+#   count = 0\n+\n+#   vpc_id            = \"${aws_vpc.bedrock.id}\"\n+#   cidr_block        = \"10.0.2.0/24\"\n+#   availability_zone = \"us-east-1b\"\n+\n+#   tags = merge(var.global_tags, {\n+#     \"Name\" = \"ryanl-subnet-bedrock-private-1b\"\n+#   })\n+# }\n \n resource \"aws_subnet\" \"bedrock_public_1a\" {\n "
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_private_subnet"],
    "notes": "'Remove private subnet cuz expensive' by commenting out related code"
  },
  {
    "url": "https://github.com/masterpointio/terraform-aws-nuke-bomber/commit/33fbb76715ce6e35565b5f83f7ece0f9df37d282",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,7 +74,7 @@ variable \"vpc_cidr_block\" {\n }\n \n variable \"nat_gateway_enabled\" {\n-  default     = true\n+  default     = false\n   type        = bool\n   description = \"Whether to enable NAT Gateways. If false, then the application uses NAT Instances, which are much cheaper.\"\n }"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_nat_gateway"],
    "notes": "Sets a variable 'nat_gateway_enabled' to false by default, presumably used to determine whether to create a NAT gateway"
  },
  {
    "url": "https://github.com/ONSdigital/eq-terraform/commit/a252266af60f5ab828ad9b81b17bb7b16a2fc52f",
    "files": [
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -16,7 +16,7 @@ You may also need to explicitly tell Ansible to perform non-host key checking:\n \n Make sure you've installed all the roles from eq-messaging\n \n- `sudo ansible-galaxy install alexeymedvedchikov.rabbitmq,v0.0.2`\n+ `sudo ansible-galaxy install git+https://github.com/alexey-medvedchikov/ansible-rabbitmq.git,3e3531c0a12e2d5c597f2f45d1fdf8e449730574`\n \n  `sudo ansible-galaxy install jnv.unattended-upgrades`\n "
      },
      {
        "filename": "developer_defaults.tf",
        "additions": 74,
        "deletions": 15,
        "changes": 89,
        "status": "modified",
        "patch": "@@ -45,7 +45,7 @@ variable \"ecs_application_cidrs\" {\n variable \"database_cidrs\" {\n   type        = \"list\"\n   description = \"CIDR blocks for database subnets\"\n-  default = [\"10.30.20.96/28\",\"10.30.20.112/28\"]\n+  default = [\"10.30.20.96/28\",\"10.30.20.112/28\", \"10.30.20.128/28\"]\n }\n \n variable \"public_cidrs\" {\n@@ -81,15 +81,26 @@ variable \"audit_cidr\" {\n   default = \"10.99.0.4/32\"\n }\n \n-\n+// Alerting\n variable \"slack_webhook_path\" {\n   description = \"Slack Webhook path for the alert. Obtained via, https://api.slack.com/incoming-webhooks\"\n }\n \n \n-variable \"application_secret_key\" {\n-  description = \"The Flask secret key for secure cookie storage\"\n-  default = \"you'll never guess it\"\n+// Survey Runner Application\n+variable \"eb_instance_type\" {\n+  description = \"Elastic Beanstalk Instance Type\"\n+  default     = \"t2.nano\"\n+}\n+\n+variable \"eb_min_size\" {\n+  description = \"Elastic Beanstalk Minimum number of instances\"\n+  default     = \"1\"\n+}\n+\n+variable \"use_internal_elb\" {\n+  description = \"Set to true to use an internal load balancer\"\n+  default     = false\n }\n \n variable \"ons_access_ips\" {\n@@ -105,6 +116,22 @@ variable \"certificate_arn\" {\n   description = \"ARN of the IAM loaded TLS certificate for public ELB\"\n }\n \n+variable \"eb_deployment_policy\" {\n+  description = \"Elastic Beanstalk DeploymentPolicy\"\n+  default     = \"AllAtOnce\"\n+}\n+\n+variable \"eb_rolling_update_enabled\" {\n+  description = \"Elastic Beanstalk RollingUpdateEnabled\"\n+  default     = \"false\"\n+}\n+\n+// RabbitMQ\n+variable \"rabbitmq_instance_type\" {\n+  description = \"Rabbit MQ Instance type\"\n+  default     = \"t2.nano\"\n+}\n+\n variable \"rabbitmq_admin_user\" {\n   description = \"The admin user to create for rabbitmq\"\n   default = \"admin\"\n@@ -135,6 +162,47 @@ variable \"rabbitmq_read_password\" {\n   default = \"test3\"\n }\n \n+variable \"rabbitmq_delete_volume_on_termination\" {\n+  description = \"Delete RabbitMQ EC2 volumes on termination of EC2 instance.\"\n+  default     = true\n+}\n+\n+// RDS\n+variable \"database_instance_class\" {\n+  description = \"The size of the DB instance\"\n+  default     = \"db.t2.micro\"\n+}\n+\n+variable \"database_allocated_storage\" {\n+  description = \"The allocated storage for the database (in GB)\"\n+  default     = 10\n+}\n+\n+variable \"database_free_memory_alert_level\" {\n+  description = \"The level at which to alert about lack of freeable memory (MB)\"\n+  default     = 128\n+}\n+\n+variable \"database_apply_immediately\" {\n+  description = \"Apply changes to the database immediately and not during next maintenance window\"\n+  default     = true\n+}\n+\n+variable \"database_name\" {\n+  description = \"The name of the database\"\n+  default     = \"digitaleqrds\"\n+}\n+\n+variable \"database_user\" {\n+  description = \"The master username for the database\"\n+  default     = \"digitaleq12345\"\n+}\n+\n+variable \"database_password\" {\n+  description = \"The password for the master username of the database\"\n+  default     = \"digitaleq12345\"\n+}\n+\n variable \"multi_az\" {\n   description = \"Distribute database across multiple availability zones\"\n   default     = false\n@@ -145,16 +213,7 @@ variable \"backup_retention_period\" {\n   default     = 0\n }\n \n-variable \"eb_deployment_policy\" {\n-  description = \"Elastic Beanstalk DeploymentPolicy\"\n-  default     = \"AllAtOnce\"\n-}\n-\n-variable \"eb_rolling_update_enabled\" {\n-  description = \"Elastic Beanstalk RollingUpdateEnabled\"\n-  default     = \"false\"\n-}\n-\n+// ECS Launcher\n variable \"survey_launcher_s3_secrets_bucket\" {\n   description = \"The S3 bucket that contains the secrets\"\n   default = \"\""
      },
      {
        "filename": "survey-runner-application/global_vars.tf",
        "additions": 6,
        "deletions": 68,
        "changes": 74,
        "status": "modified",
        "patch": "@@ -40,7 +40,7 @@ variable \"application_cidrs\" {\n \n variable \"use_internal_elb\" {\n   description = \"Set to true to use an internal load balancer\"\n-  default     = false\n+  default     = true\n }\n \n variable \"availability_zones\" {\n@@ -77,22 +77,22 @@ variable \"eb_instance_type\" {\n \n variable \"eb_min_size\" {\n   description = \"Elastic Beanstalk Minimum number of instances\"\n-  default     = \"2\"\n+  default     = \"3\"\n }\n \n variable \"eb_max_size\" {\n   description = \"Elastic Beanstalk Maximum number of instances\"\n-  default     = \"2\"\n+  default     = \"24\"\n }\n \n variable \"wsgi_number_of_processes\" {\n   description = \"The number of daemon processes that should be started for the process group when running WSGI applications\"\n-  default     = 1\n+  default     = 15\n }\n \n variable \"wsgi_number_of_threads\" {\n   description = \"The number of threads to be created to handle requests in each daemon process within the process group when running WSGI applications\"\n-  default     = 15\n+  default     = 10\n }\n \n variable \"elastic_beanstalk_aws_key_pair\" {\n@@ -115,32 +115,10 @@ variable \"eq_log_level\" {\n   default     = \"INFO\"\n }\n \n-variable \"survey_runner_env\" {\n-  description = \"The name of the survey runner environment, which is set as a environment variable.\"\n-  default     = \"development\"\n-}\n-\n-variable \"eq_server_side_storage_encryption\" {\n-  default = \"True\"\n-}\n-\n-variable \"eq_server_side_storage_type\" {\n-  default = \"DATABASE\"\n-}\n-\n variable \"google_analytics_code\" {\n   description = \"The google analytics UA Code\"\n }\n \n-variable \"application_secret_key\" {\n-  description = \"The Flask secret key for secure cookie storage\"\n-}\n-\n-variable \"dev_mode\" {\n-  description = \"Flag to enabled DEV Mode defaulted to False\"\n-  default     = \"False\"\n-}\n-\n variable \"deployment_policy\" {\n   description = \"Elastic Beanstalk DeploymentPolicy\"\n   default     = \"Immutable\"\n@@ -162,17 +140,6 @@ variable \"database_port\" {\n \n variable \"database_name\" {\n   description = \"The name of the database\"\n-  default     = \"digitaleqrds\"\n-}\n-\n-variable \"database_user\" {\n-  description = \"The master username for the database\"\n-  default     = \"digitaleq12345\"\n-}\n-\n-variable \"database_password\" {\n-  description = \"The password for the master username of the database\"\n-  default     = \"digitaleq12345\"\n }\n \n # RabbitMQ\n@@ -184,36 +151,7 @@ variable \"rabbitmq_ip_failover\" {\n   description = \"Static IP of secondary failover rabbitmq server\"\n }\n \n-variable \"rabbitmq_admin_user\" {\n-  description = \"The admin user to create for rabbitmq\"\n-}\n-\n-variable \"rabbitmq_admin_password\" {\n-  description = \"The admin user password for rabbitmq\"\n-}\n-\n-variable \"rabbitmq_read_user\" {\n-  description = \"The 'read-only' user to create for rabbitmq\"\n-}\n-\n-variable \"rabbitmq_read_password\" {\n-  description = \"The 'read-only' user password for rabbitmq\"\n-}\n-\n-variable \"rabbitmq_write_user\" {\n-  description = \"The 'write-only' user to create for rabbitmq\"\n-}\n-\n-variable \"rabbitmq_write_password\" {\n-  description = \"The 'write-only' user password for rabbitmq\"\n-}\n-\n variable \"message_queue_name\" {\n   description = \"RabbitMQ submission queue name\"\n   default     = \"submit_q\"\n-}\n-\n-variable \"message_test_queue_name\" {\n-  description = \"RabbitMQ health check queue name\"\n-  default     = \"test_q\"\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "survey-runner-application/survey_runner.tf",
        "additions": 9,
        "deletions": 40,
        "changes": 49,
        "status": "modified",
        "patch": "@@ -172,37 +172,6 @@ resource \"aws_elastic_beanstalk_environment\" \"survey_runner_prime\" {\n     value     = \"true\"\n   }\n   # Survey Runner Application Specific Environment variables\n-  setting {\n-    namespace = \"aws:elasticbeanstalk:application:environment\"\n-    name      = \"EQ_SECRET_KEY\"\n-    value     = \"${var.application_secret_key}\"\n-  }\n-  setting {\n-    namespace = \"aws:elasticbeanstalk:application:environment\"\n-    name      = \"EQ_RABBITMQ_URL\"\n-    value     = \"amqp://${var.rabbitmq_write_user}:${var.rabbitmq_write_password}@${var.rabbitmq_ip_prime}:5672/%2F\"\n-  }\n-  setting {\n-    namespace = \"aws:elasticbeanstalk:application:environment\"\n-    name      = \"EQ_RABBITMQ_URL_SECONDARY\"\n-    value     = \"amqp://${var.rabbitmq_write_user}:${var.rabbitmq_write_password}@${var.rabbitmq_ip_failover}:5672/%2F\"\n-  }\n-  setting {\n-    namespace = \"aws:elasticbeanstalk:application:environment\"\n-    name      = \"EQ_SERVER_SIDE_STORAGE_ENCRYPTION\"\n-    value     = \"${var.eq_server_side_storage_encryption}\"\n-  }\n-  setting {\n-    namespace = \"aws:elasticbeanstalk:application:environment\"\n-    name      = \"EQ_SERVER_SIDE_STORAGE_TYPE\"\n-    value     = \"${var.eq_server_side_storage_type}\"\n-  }\n-  setting {\n-    namespace = \"aws:elasticbeanstalk:application:environment\"\n-    name      = \"EQ_SERVER_SIDE_STORAGE_DATABASE_URL\"\n-    value     = \"postgresql://${var.database_user}:${var.database_password}@${var.database_address}:${var.database_port}/${var.database_name}\"\n-  }\n-\n   setting {\n     namespace = \"aws:elasticbeanstalk:application:environment\"\n     name      = \"EQ_RABBITMQ_HOST\"\n@@ -220,13 +189,18 @@ resource \"aws_elastic_beanstalk_environment\" \"survey_runner_prime\" {\n   }\n   setting {\n     namespace = \"aws:elasticbeanstalk:application:environment\"\n-    name      = \"EQ_RABBITMQ_TEST_QUEUE_NAME\"\n-    value     = \"${var.message_test_queue_name}\"\n+    name      = \"EQ_SERVER_SIDE_STORAGE_DATABASE_HOST\"\n+    value     = \"${var.database_address}\"\n   }\n   setting {\n     namespace = \"aws:elasticbeanstalk:application:environment\"\n-    name      = \"EQ_SERVER_SIDE_STORAGE_DATABASE_HOST\"\n-    value     = \"${var.database_address}\"\n+    name      = \"EQ_SERVER_SIDE_STORAGE_DATABASE_PORT\"\n+    value     = \"${var.database_port}\"\n+  }\n+  setting {\n+    namespace = \"aws:elasticbeanstalk:application:environment\"\n+    name      = \"EQ_SERVER_SIDE_STORAGE_DATABASE_NAME\"\n+    value     = \"${var.database_name}\"\n   }\n   setting {\n     namespace = \"aws:elasticbeanstalk:application:environment\"\n@@ -243,11 +217,6 @@ resource \"aws_elastic_beanstalk_environment\" \"survey_runner_prime\" {\n     name      = \"EQ_UA_ID\"\n     value     = \"${var.google_analytics_code}\"\n   }\n-  setting {\n-    namespace = \"aws:elasticbeanstalk:application:environment\"\n-    name      = \"EQ_DEV_MODE\"\n-    value     = \"${var.dev_mode}\"\n-  }\n   setting {\n     namespace = \"aws:elasticbeanstalk:container:python\"\n     name      = \"NumProcesses\""
      },
      {
        "filename": "survey-runner-database/global_vars.tf",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -37,12 +37,12 @@ variable \"database_cidrs\" {\n \n variable \"database_allocated_storage\" {\n   description = \"The allocated storage for the database (in GB)\"\n-  default     = 100\n+  default     = 640\n }\n \n variable \"database_engine_version\" {\n   description = \"The Postgres database engine version\"\n-  default     = \"9.4.9\"\n+  default     = \"9.4.7\"\n }\n \n variable \"allow_major_version_upgrade\" {\n@@ -52,7 +52,7 @@ variable \"allow_major_version_upgrade\" {\n \n variable \"database_instance_class\" {\n   description = \"The size of the DB instance\"\n-  default     = \"db.m1.small\"\n+  default     = \"db.r3.4xlarge\"\n }\n \n variable \"multi_az\" {\n@@ -67,17 +67,14 @@ variable \"backup_retention_period\" {\n \n variable \"database_name\" {\n   description = \"The name of the database\"\n-  default     = \"digitaleqrds\"\n }\n \n variable \"database_user\" {\n   description = \"The master username for the database\"\n-  default     = \"digitaleq12345\"\n }\n \n variable \"database_password\" {\n   description = \"The password for the master username of the database\"\n-  default     = \"digitaleq12345\"\n }\n \n variable \"database_apply_immediately\" {"
      },
      {
        "filename": "survey-runner-queue/global_vars.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -44,8 +44,9 @@ variable \"internet_gateway_id\" {\n }\n \n variable \"virtual_private_gateway_id\" {\n-    description = \"An existing Virtual Private Gateway ID\"\n-    default = []\n+  type = \"list\"\n+  description = \"An existing Virtual Private Gateway ID\"\n+  default = []\n }\n \n # DNS\n@@ -62,7 +63,7 @@ variable \"dns_zone_name\" {\n # RabbitMQ\n variable \"rabbitmq_instance_type\" {\n   description = \"Rabbit MQ Instance type\"\n-  default     = \"t2.small\"\n+  default     = \"t2.medium\"\n }\n \n variable \"rabbitmq_ips\" {\n@@ -73,7 +74,6 @@ variable \"rabbitmq_ips\" {\n \n variable \"aws_key_pair\" {\n   description = \"AWS key pair for queue servers\"\n-  default     = \"pre-prod\"\n }\n \n variable \"rabbitmq_admin_user\" {"
      },
      {
        "filename": "survey-runner-queue/message_queue.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -15,6 +15,7 @@ resource \"aws_instance\" \"rabbitmq\" {\n   ]\n \n   root_block_device {\n+    volume_type = \"gp2\"\n     delete_on_termination = \"${var.delete_volume_on_termination}\"\n   }\n "
      },
      {
        "filename": "survey-runner.tf",
        "additions": 13,
        "deletions": 7,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -12,8 +12,12 @@ module \"survey-runner-application\" {\n   aws_access_key = \"${var.aws_access_key}\"\n   aws_secret_key = \"${var.aws_secret_key}\"\n   vpc_id = \"${module.survey-runner-vpc.vpc_id}\"\n+  use_internal_elb = \"${var.use_internal_elb}\"\n+  eb_instance_type = \"${var.eb_instance_type}\"\n+  eb_min_size = \"${var.eb_min_size}\"\n   database_address = \"${module.survey-runner-database.database_address}\"\n   database_port = \"${module.survey-runner-database.database_port}\"\n+  database_name = \"${var.database_name}\"\n   vpc_cidr_block = \"${var.vpc_cidr_block}\"\n   application_cidrs = \"${var.application_cidrs}\"\n   rabbitmq_ip_prime = \"${module.survey-runner-queue.rabbitmq_ip_prime}\"\n@@ -23,13 +27,6 @@ module \"survey-runner-application\" {\n   ons_access_ips = \"${var.ons_access_ips}\"\n   google_analytics_code = \"${var.google_analytics_code}\"\n   certificate_arn = \"${var.certificate_arn}\"\n-  application_secret_key = \"${var.application_secret_key}\"\n-  rabbitmq_admin_user = \"${var.rabbitmq_admin_user}\"\n-  rabbitmq_admin_password = \"${var.rabbitmq_admin_password}\"\n-  rabbitmq_write_user = \"${var.rabbitmq_write_user}\"\n-  rabbitmq_write_password = \"${var.rabbitmq_write_password}\"\n-  rabbitmq_read_user = \"${var.rabbitmq_read_user}\"\n-  rabbitmq_read_password = \"${var.rabbitmq_read_password}\"\n   dns_zone_id = \"${var.dns_zone_id}\"\n   dns_zone_name = \"${var.dns_zone_name}\"\n   deployment_policy = \"${var.eb_deployment_policy}\"\n@@ -65,6 +62,13 @@ module \"survey-runner-database\" {\n   private_route_table_ids = \"${module.survey-runner-routing.private_route_table_ids}\"\n   multi_az = \"${var.multi_az}\"\n   backup_retention_period = \"${var.backup_retention_period}\"\n+  database_apply_immediately = \"${var.database_apply_immediately}\"\n+  database_instance_class = \"${var.database_instance_class}\"\n+  database_allocated_storage = \"${var.database_allocated_storage}\"\n+  database_free_memory_alert_level = \"${var.database_free_memory_alert_level}\"\n+  database_name = \"${var.database_name}\"\n+  database_user = \"${var.database_user}\"\n+  database_password = \"${var.database_password}\"\n }\n \n module \"survey-runner-queue\" {\n@@ -80,6 +84,7 @@ module \"survey-runner-queue\" {\n   audit_cidr = \"${var.audit_cidr}\"\n   rsyslogd_server_ip = \"${var.rsyslogd_server_ip}\"\n   logserver_cidr = \"${var.logserver_cidr}\"\n+  rabbitmq_instance_type = \"${var.rabbitmq_instance_type}\"\n   rabbitmq_admin_user = \"${var.rabbitmq_admin_user}\"\n   rabbitmq_admin_password = \"${var.rabbitmq_admin_password}\"\n   rabbitmq_write_user = \"${var.rabbitmq_write_user}\"\n@@ -90,6 +95,7 @@ module \"survey-runner-queue\" {\n   dns_zone_name = \"${var.dns_zone_name}\"\n   aws_key_pair = \"${var.aws_key_pair}\"\n   internet_gateway_id = \"${module.survey-runner-vpc.internet_gateway_id}\"\n+  delete_volume_on_termination = \"${var.rabbitmq_delete_volume_on_termination}\"\n }\n \n module \"survey-runner-routing\" {"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ONSdigital/eq-terraform/commit/79845fe095cd87287346f40d2adce9b28a32ef35",
    "files": [
      {
        "filename": "developer_defaults.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -84,7 +84,7 @@ variable \"slack_webhook_path\" {\n // ECS\n variable \"ecs_instance_type\" {\n   description = \"ECS Instance Type\"\n-  default     = \"t2.medium\"\n+  default     = \"t3.medium\"\n }\n \n variable \"ecs_cluster_min_size\" {"
      },
      {
        "filename": "survey-runner.tf",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -666,21 +666,14 @@ module \"survey-runner-dynamodb\" {\n   aws_assume_role_arn                    = \"${var.aws_assume_role_arn}\"\n   slack_alert_sns_arn                    = \"${module.survey-runner-alerting.slack_alert_sns_arn}\"\n   submitted_responses_min_read_capacity  = 1\n-  submitted_responses_max_read_capacity  = 100\n+  submitted_responses_min_read_capacity  = 1\n   submitted_responses_min_write_capacity = 1\n-  submitted_responses_max_write_capacity = 100\n   questionnaire_state_min_read_capacity  = 5\n-  questionnaire_state_max_read_capacity  = 100\n   questionnaire_state_min_write_capacity = 5\n-  questionnaire_state_max_write_capacity = 100\n   eq_session_min_read_capacity           = 5\n-  eq_session_max_read_capacity           = 100\n   eq_session_min_write_capacity          = 5\n-  eq_session_max_write_capacity          = 100\n   used_jti_claim_min_read_capacity       = 1\n-  used_jti_claim_max_read_capacity       = 100\n   used_jti_claim_min_write_capacity      = 1\n-  used_jti_claim_max_write_capacity      = 100\n }\n \n output \"survey_runner_beanstalk\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from t2.medium to t3.medium"
  },
  {
    "url": "https://github.com/ONSdigital/eq-terraform/commit/6eaf697bf9f111214a6d74ee3094e5784a57d1bb",
    "files": [
      {
        "filename": "survey-runner.tf",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -513,19 +513,11 @@ module \"survey-runner-vpc\" {\n }\n \n module \"survey-runner-dynamodb\" {\n-  source                                 = \"github.com/ONSdigital/eq-terraform-dynamodb?ref=v2.0\"\n+  source                                 = \"github.com/ONSdigital/eq-terraform-dynamodb?ref=v2.2\"\n   env                                    = \"${var.env}\"\n   aws_account_id                         = \"${var.aws_account_id}\"\n   aws_assume_role_arn                    = \"${var.aws_assume_role_arn}\"\n   slack_alert_sns_arn                    = \"${module.eq-alerting.slack_alert_sns_arn}\"\n-  submitted_responses_min_read_capacity  = 1\n-  submitted_responses_min_write_capacity = 1\n-  questionnaire_state_min_read_capacity  = 5\n-  questionnaire_state_min_write_capacity = 5\n-  eq_session_min_read_capacity           = 5\n-  eq_session_min_write_capacity          = 5\n-  used_jti_claim_min_read_capacity       = 1\n-  used_jti_claim_min_write_capacity      = 1\n }\n \n output \"survey_runner_beanstalk\" {"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/travis-infrastructure/terraform-stuff/commit/1e208af4c83d093c900f4cccedbca6183142a07f",
    "files": [
      {
        "filename": "gce.tf",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "status": "modified",
        "patch": "@@ -31,3 +31,26 @@ module \"gce_com_staging_workers\" {\n   environment = \"staging\"\n   image = \"${var.travis_worker_image}\"\n }\n+\n+resource \"google_compute_instance\" \"ubuntu_trusty_micro_playground\" {\n+  count = 1\n+  name = \"ubuntu-trusty-micro-playground\"\n+  machine_type = \"f1-micro\"\n+  zone = \"us-central1-f\"\n+  tags = [\"playground\"]\n+\n+  can_ip_forward = false\n+\n+  disk {\n+    auto_delete = true\n+    image = \"ubuntu-1404-trusty-v20150805\"\n+    type = \"pd-standard\"\n+  }\n+\n+  network_interface {\n+    network = \"default\"\n+    access_config {\n+      # Ephemeral IP\n+    }\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": ["gcp", "cheaper_disk_type"],
    "notes": "Move from PD_SSD to PD_HDD"
  },
  {
    "url": "https://github.com/sdcote/cloudsql/commit/dfe44fcf8f5a477e1fbc354f1b1d87af28895c0f",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -44,7 +44,7 @@ variable db_collation {\n \n variable user_name {\n   description = \"The name of the default user\"\n-  default     = \"root\"\n+  default     = \"default\"\n }\n \n variable user_host {\n@@ -80,7 +80,7 @@ variable disk_size {\n \n variable disk_type {\n   description = \"Second generation only. The type of data disk: `PD_SSD` or `PD_HDD`.\"\n-  default     = \"PD_SSD\"\n+  default     = \"PD_HDD\"\n }\n \n variable pricing_plan {"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Wieschie/personal-infra/commit/bfa7b3ae90f1d64d957700976080f9b1921dba30",
    "files": [
      {
        "filename": "terraform/stage/vpc/main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -28,8 +28,9 @@ module \"vpc\" {\n   enable_vpn_gateway = false\n \n   enable_s3_endpoint              = true\n-  enable_ssm_endpoint             = true\n-  ssm_endpoint_security_group_ids = [data.aws_security_group.default.id]\n+\n+  # this is an interface endpoint and has an hourly cost. \n+  enable_ssm_endpoint             = false\n \n   public_dedicated_network_acl = true\n   public_inbound_acl_rules = concat("
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["aws", "remove_ssm_endpoint"],
    "notes": "Disable SSM endpoint (enable_ssm_endpoint = false in VPC module) since it has an hourly cost"
  },
  {
    "url": "https://github.com/Linaro/qa-reports.linaro.org/commit/76c8d1ee35046912b6da4f1cc23e8b1dcc12abe9",
    "files": [
      {
        "filename": "terraform/staging.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n environment = \"staging\"\n canonical_dns_name = \"staging-qa-reports.linaro.org\"\n dns_name = \"staging-qa-reports.ctt.linaro.org\"\n-mq_node_type = \"t3.nano\"\n+mq_node_type = \"t3a.nano\"\n db_node_type = \"t2.medium\"\n db_storage = 500\n db_max_storage = 750"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from t3.nano to t3a.nano"
  },
  {
    "url": "https://github.com/Linaro/qa-reports.linaro.org/commit/77116ea84b2e8d088c644723e787ad5d6d9677fd",
    "files": [
      {
        "filename": "terraform/roles.tf",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "status": "modified",
        "patch": "@@ -31,3 +31,67 @@ data \"template_file\" \"qareports_role_policy_s3\" {\n         environment = \"${var.environment}\"\n     }\n }\n+\n+#\n+#   Role needed so S3 can replicate objects in backup bucket\n+#\n+resource \"aws_iam_role\" \"qareports_s3_replication_role\" {\n+    name = \"QAREPORTS_${title(var.environment)}S3ReplicationRole\"\n+\n+    assume_role_policy = <<POLICY\n+{\n+    \"Version\": \"2012-10-17\",\n+    \"Statement\": [{\n+        \"Action\": \"sts:AssumeRole\",\n+        \"Principal\": {\n+            \"Service\": \"s3.amazonaws.com\"\n+        },\n+        \"Effect\": \"Allow\",\n+        \"Sid\": \"\"\n+    }]\n+}\n+    POLICY\n+}\n+\n+resource \"aws_iam_policy\" \"qareports_s3_replication_role_policy\" {\n+    name = \"QAREPORTS_${title(var.environment)}S3ReplicationRolePolicy\"\n+\n+    policy = <<POLICY\n+{\n+    \"Version\": \"2012-10-17\",\n+    \"Statement\": [{\n+        \"Action\": [\n+            \"s3:GetReplicationConfiguration\",\n+            \"s3:ListBucket\"\n+        ],\n+        \"Effect\": \"Allow\",\n+        \"Resource\": [\n+            \"${aws_s3_bucket.qareports_s3_bucket.arn}\"\n+        ]\n+    },\n+    {\n+        \"Action\": [\n+            \"s3:GetObjectVersion\",\n+            \"s3:GetObjectVersionAcl\"\n+        ],\n+        \"Effect\": \"Allow\",\n+        \"Resource\": [\n+            \"${aws_s3_bucket.qareports_s3_bucket.arn}/*\"\n+        ]\n+    },\n+    {\n+        \"Action\": [\n+            \"s3:ReplicateObject\",\n+            \"s3:ReplicateDelete\"\n+        ],\n+        \"Effect\": \"Allow\",\n+        \"Resource\": \"${aws_s3_bucket.qareports_s3_bucket_backup.arn}/*\"\n+    }]\n+}\n+    POLICY\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"qareports_s3_replication_role_policy_attachment\" {\n+    role       = \"${aws_iam_role.qareports_s3_replication_role.name}\"\n+    policy_arn = \"${aws_iam_policy.qareports_s3_replication_role_policy.arn}\"\n+}"
      },
      {
        "filename": "terraform/s3.tf",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "status": "modified",
        "patch": "@@ -3,4 +3,33 @@ resource \"aws_s3_bucket\" \"qareports_s3_bucket\" {\n     tags = {\n         Name = \"${var.environment}-qareports-storage\"\n     }\n+\n+    versioning {\n+        enabled = true\n+    }\n+\n+    replication_configuration {\n+        role = \"${aws_iam_role.qareports_s3_replication_role.arn}\"\n+\n+        rules {\n+            id     = \"${var.environment}-qareports-s3-replication-rule\"\n+            status = \"Enabled\"\n+\n+            destination {\n+                bucket = \"${aws_s3_bucket.qareports_s3_bucket_backup.arn}\"\n+\n+                # DEEP_ARCHIVE means using AWS S3 Glacier Deep Archive\n+                # ref: https://aws.amazon.com/blogs/aws/new-amazon-s3-storage-class-glacier-deep-archive/\n+                storage_class = \"DEEP_ARCHIVE\"\n+            }\n+        }\n+    }\n+}\n+\n+resource \"aws_s3_bucket\" \"qareports_s3_bucket_backup\" {\n+    bucket = \"${var.environment}-qareports-storage-backup\"\n+\n+    versioning {\n+        enabled = true\n+    }\n }"
      },
      {
        "filename": "terraform/templates/role_policy.json.tpl",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -14,7 +14,9 @@\n             ],\n             \"Resource\": [\n                 \"arn:aws:s3:::${environment}-qareports-storage\",\n-                \"arn:aws:s3:::${environment}-qareports-storage/*\"\n+                \"arn:aws:s3:::${environment}-qareports-storage/*\",\n+                \"arn:aws:s3:::${environment}-qareports-storage-backup\",\n+                \"arn:aws:s3:::${environment}-qareports-storage-backup/*\"\n             ]\n         }\n     ]"
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kinvolk-archives/lokomotive-kubernetes/commit/0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4",
    "files": [
      {
        "filename": "CHANGES.md",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -11,12 +11,10 @@ Notable changes between versions.\n \n * Switch `kube-apiserver` port from 443 to 6443 ([#248](https://github.com/poseidon/typhoon/pull/248))\n * Combine apiserver and ingress NLBs ([#249](https://github.com/poseidon/typhoon/pull/249))\n-  * Simplify clusters to come with one NLB. Reduce cost by ~$18/month per cluster.\n+  * Reduce cost by ~$18/month per cluster. Typhoon AWS clusters now use one network load balancer\n   * Users may keep using CNAME records to `ingress_dns_name` and the `nginx-ingress` addon for Ingress (up to a few million RPS)\n   * Users with heavy traffic (many million RPS) should create a separate NLB(s) for Ingress instead\n-  * Listen for apiserver traffic on port 6443 and forward to controllers (with healthy apiserver)\n-  * Listen for ingress traffic on ports 80/443 and forward to workers (with healthy ingress controller)\n-* Worker pools (advanced) no longer include an extraneous load balancer\n+* Worker pools no longer include an extraneous load balancer\n * Disable detailed (paid) monitoring on worker nodes ([#251](https://github.com/poseidon/typhoon/pull/251))\n   * Favor Prometheus for cloud-agnostic metrics, aggregation, alerting, and visualization\n \n@@ -31,6 +29,18 @@ Notable changes between versions.\n * Switch `kube-apiserver` port from 443 to 6443 ([#248](https://github.com/poseidon/typhoon/pull/248))\n   * Update firewall rules and generated kubeconfig's\n \n+#### Google Cloud\n+\n+* Use global HTTP and TCP proxy load balancing for Kubernetes Ingress ([#252](https://github.com/poseidon/typhoon/pull/252))\n+  * Switch Ingress from regional network load balancers to global HTTP/TCP Proxy load balancing\n+  * Reduce cost by ~$19/month per cluster. Google bills the first 5 global and regional forwarding rules separately. Typhoon clusters now use 3 global and 0 regional forwarding rules.\n+* Worker pools no longer include an extraneous load balancer. Remove worker module's `ingress_static_ip` output\n+* Allow using nginx-ingress addon on Typhoon for Fedora Atomic ([#200](https://github.com/poseidon/typhoon/issues/200))\n+* Add `ingress_static_ipv4` module output\n+* Add `worker_instance_group` module output to allow custom global load balancing\n+* Deprecate `controllers_ipv4_public` module output\n+* Deprecate `ingress_static_ip` module output. Use `ingress_static_ipv4`\n+\n #### Addons\n \n * Update CLUO from v0.6.0 to v0.7.0 ([#242](https://github.com/poseidon/typhoon/pull/242))"
      },
      {
        "filename": "google-cloud/container-linux/kubernetes/ingress.tf",
        "additions": 96,
        "deletions": 0,
        "changes": 96,
        "status": "added",
        "patch": "@@ -0,0 +1,96 @@\n+# Static IPv4 address for the TCP Proxy Load Balancer\n+resource \"google_compute_global_address\" \"ingress-ipv4\" {\n+  name       = \"${var.cluster_name}-ingress-ip\"\n+  ip_version = \"IPV4\"\n+}\n+\n+# Forward IPv4 TCP traffic to the HTTP proxy load balancer\n+# Google Cloud does not allow TCP proxies for port 80. Must use HTTP proxy.\n+resource \"google_compute_global_forwarding_rule\" \"ingress-http\" {\n+  name        = \"${var.cluster_name}-ingress-http\"\n+  ip_address  = \"${google_compute_global_address.ingress-ipv4.address}\"\n+  ip_protocol = \"TCP\"\n+  port_range  = \"80\"\n+  target      = \"${google_compute_target_http_proxy.ingress-http.self_link}\"\n+}\n+\n+# Forward IPv4 TCP traffic to the TCP proxy load balancer\n+resource \"google_compute_global_forwarding_rule\" \"ingress-https\" {\n+  name        = \"${var.cluster_name}-ingress-https\"\n+  ip_address  = \"${google_compute_global_address.ingress-ipv4.address}\"\n+  ip_protocol = \"TCP\"\n+  port_range  = \"443\"\n+  target      = \"${google_compute_target_tcp_proxy.ingress-https.self_link}\"\n+}\n+\n+# HTTP proxy load balancer for ingress controllers\n+resource \"google_compute_target_http_proxy\" \"ingress-http\" {\n+  name = \"${var.cluster_name}-ingress-http\"\n+  description = \"Distribute HTTP load across ${var.cluster_name} workers\"\n+  url_map = \"${google_compute_url_map.ingress-http.self_link}\"\n+}\n+\n+# TCP proxy load balancer for ingress controllers\n+resource \"google_compute_target_tcp_proxy\" \"ingress-https\" {\n+  name = \"${var.cluster_name}-ingress-https\"\n+  description = \"Distribute HTTPS load across ${var.cluster_name} workers\"\n+  backend_service = \"${google_compute_backend_service.ingress-https.self_link}\"\n+}\n+\n+# HTTP URL Map (required)\n+resource \"google_compute_url_map\" \"ingress-http\" {\n+  name = \"${var.cluster_name}-ingress-http\"\n+  # Do not add host/path rules for applications here. Use Ingress resources.\n+  default_service = \"${google_compute_backend_service.ingress-http.self_link}\"\n+}\n+\n+# Backend service backed by managed instance group of workers\n+resource \"google_compute_backend_service\" \"ingress-http\" {\n+  name        = \"${var.cluster_name}-ingress-http\"\n+  description = \"${var.cluster_name} ingress service\"\n+\n+  protocol         = \"HTTP\"\n+  port_name        = \"http\"\n+  session_affinity = \"NONE\"\n+  timeout_sec      = \"60\"\n+\n+  backend {\n+    group = \"${module.workers.instance_group}\"\n+  }\n+\n+  health_checks = [\"${google_compute_health_check.ingress.self_link}\"]\n+}\n+\n+# Backend service backed by managed instance group of workers\n+resource \"google_compute_backend_service\" \"ingress-https\" {\n+  name        = \"${var.cluster_name}-ingress-https\"\n+  description = \"${var.cluster_name} ingress service\"\n+\n+  protocol         = \"TCP\"\n+  port_name        = \"https\"\n+  session_affinity = \"NONE\"\n+  timeout_sec      = \"60\"\n+\n+  backend {\n+    group = \"${module.workers.instance_group}\"\n+  }\n+\n+  health_checks = [\"${google_compute_health_check.ingress.self_link}\"]\n+}\n+\n+# Ingress HTTP Health Check\n+resource \"google_compute_health_check\" \"ingress\" {\n+  name        = \"${var.cluster_name}-ingress-health\"\n+  description = \"Health check for Ingress controller\"\n+\n+  timeout_sec        = 5\n+  check_interval_sec = 5\n+\n+  healthy_threshold   = 2\n+  unhealthy_threshold = 4\n+\n+  http_health_check {\n+    port = 10254\n+    request_path = \"/healthz\"\n+  }\n+}"
      },
      {
        "filename": "google-cloud/container-linux/kubernetes/network.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -161,3 +161,17 @@ resource \"google_compute_firewall\" \"internal-kubelet-readonly\" {\n   source_tags = [\"${var.cluster_name}-controller\", \"${var.cluster_name}-worker\"]\n   target_tags = [\"${var.cluster_name}-controller\", \"${var.cluster_name}-worker\"]\n }\n+\n+resource \"google_compute_firewall\" \"google-health-checks\" {\n+  name = \"${var.cluster_name}-google-health-checks\"\n+  network = \"${google_compute_network.network.name}\"\n+\n+  allow {\n+    protocol = \"tcp\"\n+    ports    = [10254]\n+  }\n+\n+  # https://cloud.google.com/compute/docs/load-balancing/tcp-ssl/tcp-proxy#health-checking\n+  source_ranges = [\"130.211.0.0/22\", \"35.191.0.0/16\"]\n+  target_tags = [\"${var.cluster_name}-worker\"]\n+}"
      },
      {
        "filename": "google-cloud/container-linux/kubernetes/outputs.tf",
        "additions": 22,
        "deletions": 4,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -3,12 +3,17 @@ output \"controllers_ipv4_public\" {\n   value = [\"${google_compute_instance.controllers.*.network_interface.0.access_config.0.assigned_nat_ip}\"]\n }\n \n-output \"ingress_static_ip\" {\n-  value = \"${module.workers.ingress_static_ip}\"\n+# Outputs for Kubernetes Ingress\n+\n+output \"ingress_static_ipv4\" {\n+  description = \"Global IPv4 address for proxy load balancing to the nearest Ingress controller\"\n+  value = \"${google_compute_global_address.ingress-ipv4.address}\"\n }\n \n-output \"network_self_link\" {\n-  value = \"${google_compute_network.network.self_link}\"\n+# Deprecated, use ingress_static_ipv4\n+output \"ingress_static_ip\" {\n+  description = \"Global IPv4 address for proxy load balancing to the nearest Ingress controller\"\n+  value = \"${google_compute_global_address.ingress-ipv4.address}\"\n }\n \n # Outputs for worker pools\n@@ -20,3 +25,16 @@ output \"network_name\" {\n output \"kubeconfig\" {\n   value = \"${module.bootkube.kubeconfig}\"\n }\n+\n+# Outputs for custom firewalling\n+\n+output \"network_self_link\" {\n+  value = \"${google_compute_network.network.self_link}\"\n+}\n+\n+# Outputs for custom load balancing\n+\n+output \"worker_instance_group\" {\n+  description = \"Full URL of the worker managed instance group\"\n+  value = \"${module.workers.instance_group}\"\n+}"
      },
      {
        "filename": "google-cloud/container-linux/kubernetes/workers/ingress.tf",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "status": "removed",
        "patch": "@@ -1,45 +0,0 @@\n-# Static IPv4 address for the Network Load Balancer\n-resource \"google_compute_address\" \"ingress-ip\" {\n-  name = \"${var.name}-ingress-ip\"\n-}\n-\n-# Network Load Balancer (i.e. forwarding rules)\n-resource \"google_compute_forwarding_rule\" \"worker-http-lb\" {\n-  name       = \"${var.name}-worker-http-rule\"\n-  ip_address = \"${google_compute_address.ingress-ip.address}\"\n-  port_range = \"80\"\n-  target     = \"${google_compute_target_pool.workers.self_link}\"\n-}\n-\n-resource \"google_compute_forwarding_rule\" \"worker-https-lb\" {\n-  name       = \"${var.name}-worker-https-rule\"\n-  ip_address = \"${google_compute_address.ingress-ip.address}\"\n-  port_range = \"443\"\n-  target     = \"${google_compute_target_pool.workers.self_link}\"\n-}\n-\n-# Network Load Balancer target pool of instances.\n-resource \"google_compute_target_pool\" \"workers\" {\n-  name = \"${var.name}-worker-pool\"\n-\n-  health_checks = [\n-    \"${google_compute_http_health_check.ingress.name}\",\n-  ]\n-\n-  session_affinity = \"NONE\"\n-}\n-\n-# Ingress HTTP Health Check\n-resource \"google_compute_http_health_check\" \"ingress\" {\n-  name        = \"${var.name}-ingress-health\"\n-  description = \"Health check Ingress controller health host port\"\n-\n-  timeout_sec        = 5\n-  check_interval_sec = 5\n-\n-  healthy_threshold   = 2\n-  unhealthy_threshold = 4\n-\n-  port         = 10254\n-  request_path = \"/healthz\"\n-}"
      },
      {
        "filename": "google-cloud/container-linux/kubernetes/workers/outputs.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n-output \"ingress_static_ip\" {\n-  value = \"${google_compute_address.ingress-ip.address}\"\n+output \"instance_group\" {\n+  description = \"Full URL of the worker managed instance group\"\n+  value = \"${google_compute_region_instance_group_manager.workers.instance_group}\"\n }"
      },
      {
        "filename": "google-cloud/container-linux/kubernetes/workers/workers.tf",
        "additions": 27,
        "deletions": 22,
        "changes": 49,
        "status": "modified",
        "patch": "@@ -1,5 +1,4 @@\n-# Regional managed instance group maintains a homogeneous set of workers that\n-# span the zones in the region.\n+# Regional managed instance group of workers\n resource \"google_compute_region_instance_group_manager\" \"workers\" {\n   name        = \"${var.name}-worker-group\"\n   description = \"Compute instance group of ${var.name} workers\"\n@@ -11,30 +10,18 @@ resource \"google_compute_region_instance_group_manager\" \"workers\" {\n \n   target_size = \"${var.count}\"\n \n-  # target pool to which instances in the group should be added\n-  target_pools = [\n-    \"${google_compute_target_pool.workers.self_link}\",\n-  ]\n-}\n-\n-# Worker Container Linux Config\n-data \"template_file\" \"worker_config\" {\n-  template = \"${file(\"${path.module}/cl/worker.yaml.tmpl\")}\"\n-\n-  vars = {\n-    kubeconfig            = \"${indent(10, var.kubeconfig)}\"\n-    ssh_authorized_key    = \"${var.ssh_authorized_key}\"\n-    k8s_dns_service_ip    = \"${cidrhost(var.service_cidr, 10)}\"\n-    cluster_domain_suffix = \"${var.cluster_domain_suffix}\"\n+  named_port {\n+    name = \"http\"\n+    port = \"80\"\n   }\n-}\n \n-data \"ct_config\" \"worker_ign\" {\n-  content      = \"${data.template_file.worker_config.rendered}\"\n-  pretty_print = false\n-  snippets     = [\"${var.clc_snippets}\"]\n+  named_port {\n+    name = \"https\"\n+    port = \"443\"\n+  }\n }\n \n+# Worker instance template\n resource \"google_compute_instance_template\" \"worker\" {\n   name_prefix  = \"${var.name}-worker-\"\n   description  = \"Worker Instance template\"\n@@ -76,3 +63,21 @@ resource \"google_compute_instance_template\" \"worker\" {\n     create_before_destroy = true\n   }\n }\n+\n+# Worker Container Linux Config\n+data \"template_file\" \"worker_config\" {\n+  template = \"${file(\"${path.module}/cl/worker.yaml.tmpl\")}\"\n+\n+  vars = {\n+    kubeconfig            = \"${indent(10, var.kubeconfig)}\"\n+    ssh_authorized_key    = \"${var.ssh_authorized_key}\"\n+    k8s_dns_service_ip    = \"${cidrhost(var.service_cidr, 10)}\"\n+    cluster_domain_suffix = \"${var.cluster_domain_suffix}\"\n+  }\n+}\n+\n+data \"ct_config\" \"worker_ign\" {\n+  content      = \"${data.template_file.worker_config.rendered}\"\n+  pretty_print = false\n+  snippets     = [\"${var.clc_snippets}\"]\n+}"
      },
      {
        "filename": "google-cloud/fedora-atomic/kubernetes/ingress.tf",
        "additions": 96,
        "deletions": 0,
        "changes": 96,
        "status": "added",
        "patch": "@@ -0,0 +1,96 @@\n+# Static IPv4 address for the TCP Proxy Load Balancer\n+resource \"google_compute_global_address\" \"ingress-ipv4\" {\n+  name       = \"${var.cluster_name}-ingress-ip\"\n+  ip_version = \"IPV4\"\n+}\n+\n+# Forward IPv4 TCP traffic to the HTTP proxy load balancer\n+# Google Cloud does not allow TCP proxies for port 80. Must use HTTP proxy.\n+resource \"google_compute_global_forwarding_rule\" \"ingress-http\" {\n+  name        = \"${var.cluster_name}-ingress-http\"\n+  ip_address  = \"${google_compute_global_address.ingress-ipv4.address}\"\n+  ip_protocol = \"TCP\"\n+  port_range  = \"80\"\n+  target      = \"${google_compute_target_http_proxy.ingress-http.self_link}\"\n+}\n+\n+# Forward IPv4 TCP traffic to the TCP proxy load balancer\n+resource \"google_compute_global_forwarding_rule\" \"ingress-https\" {\n+  name        = \"${var.cluster_name}-ingress-https\"\n+  ip_address  = \"${google_compute_global_address.ingress-ipv4.address}\"\n+  ip_protocol = \"TCP\"\n+  port_range  = \"443\"\n+  target      = \"${google_compute_target_tcp_proxy.ingress-https.self_link}\"\n+}\n+\n+# HTTP proxy load balancer for ingress controllers\n+resource \"google_compute_target_http_proxy\" \"ingress-http\" {\n+  name = \"${var.cluster_name}-ingress-http\"\n+  description = \"Distribute HTTP load across ${var.cluster_name} workers\"\n+  url_map = \"${google_compute_url_map.ingress-http.self_link}\"\n+}\n+\n+# TCP proxy load balancer for ingress controllers\n+resource \"google_compute_target_tcp_proxy\" \"ingress-https\" {\n+  name = \"${var.cluster_name}-ingress-https\"\n+  description = \"Distribute HTTPS load across ${var.cluster_name} workers\"\n+  backend_service = \"${google_compute_backend_service.ingress-https.self_link}\"\n+}\n+\n+# HTTP URL Map (required)\n+resource \"google_compute_url_map\" \"ingress-http\" {\n+  name = \"${var.cluster_name}-ingress-http\"\n+  # Do not add host/path rules for applications here. Use Ingress resources.\n+  default_service = \"${google_compute_backend_service.ingress-http.self_link}\"\n+}\n+\n+# Backend service backed by managed instance group of workers\n+resource \"google_compute_backend_service\" \"ingress-http\" {\n+  name        = \"${var.cluster_name}-ingress-http\"\n+  description = \"${var.cluster_name} ingress service\"\n+\n+  protocol         = \"HTTP\"\n+  port_name        = \"http\"\n+  session_affinity = \"NONE\"\n+  timeout_sec      = \"60\"\n+\n+  backend {\n+    group = \"${module.workers.instance_group}\"\n+  }\n+\n+  health_checks = [\"${google_compute_health_check.ingress.self_link}\"]\n+}\n+\n+# Backend service backed by managed instance group of workers\n+resource \"google_compute_backend_service\" \"ingress-https\" {\n+  name        = \"${var.cluster_name}-ingress-https\"\n+  description = \"${var.cluster_name} ingress service\"\n+\n+  protocol         = \"TCP\"\n+  port_name        = \"https\"\n+  session_affinity = \"NONE\"\n+  timeout_sec      = \"60\"\n+\n+  backend {\n+    group = \"${module.workers.instance_group}\"\n+  }\n+\n+  health_checks = [\"${google_compute_health_check.ingress.self_link}\"]\n+}\n+\n+# Ingress HTTP Health Check\n+resource \"google_compute_health_check\" \"ingress\" {\n+  name        = \"${var.cluster_name}-ingress-health\"\n+  description = \"Health check for Ingress controller\"\n+\n+  timeout_sec        = 5\n+  check_interval_sec = 5\n+\n+  healthy_threshold   = 2\n+  unhealthy_threshold = 4\n+\n+  http_health_check {\n+    port = 10254\n+    request_path = \"/healthz\"\n+  }\n+}"
      },
      {
        "filename": "google-cloud/fedora-atomic/kubernetes/network.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -161,3 +161,17 @@ resource \"google_compute_firewall\" \"internal-kubelet-readonly\" {\n   source_tags = [\"${var.cluster_name}-controller\", \"${var.cluster_name}-worker\"]\n   target_tags = [\"${var.cluster_name}-controller\", \"${var.cluster_name}-worker\"]\n }\n+\n+resource \"google_compute_firewall\" \"google-health-checks\" {\n+  name = \"${var.cluster_name}-google-health-checks\"\n+  network = \"${google_compute_network.network.name}\"\n+\n+  allow {\n+    protocol = \"tcp\"\n+    ports    = [10254]\n+  }\n+\n+  # https://cloud.google.com/compute/docs/load-balancing/tcp-ssl/tcp-proxy#health-checking\n+  source_ranges = [\"130.211.0.0/22\", \"35.191.0.0/16\"]\n+  target_tags = [\"${var.cluster_name}-worker\"]\n+}"
      },
      {
        "filename": "google-cloud/fedora-atomic/kubernetes/outputs.tf",
        "additions": 22,
        "deletions": 4,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -1,9 +1,14 @@\n-output \"ingress_static_ip\" {\n-  value = \"${module.workers.ingress_static_ip}\"\n+# Outputs for Kubernetes Ingress\n+\n+output \"ingress_static_ipv4\" {\n+  description = \"Global IPv4 address for proxy load balancing to the nearest Ingress controller\"\n+  value = \"${google_compute_global_address.ingress-ipv4.address}\"\n }\n \n-output \"network_self_link\" {\n-  value = \"${google_compute_network.network.self_link}\"\n+# Deprecated, use ingress_static_ipv4\n+output \"ingress_static_ip\" {\n+  description = \"Global IPv4 address for proxy load balancing to the nearest Ingress controller\"\n+  value = \"${google_compute_global_address.ingress-ipv4.address}\"\n }\n \n # Outputs for worker pools\n@@ -15,3 +20,16 @@ output \"network_name\" {\n output \"kubeconfig\" {\n   value = \"${module.bootkube.kubeconfig}\"\n }\n+\n+# Outputs for custom firewalling\n+\n+output \"network_self_link\" {\n+  value = \"${google_compute_network.network.self_link}\"\n+}\n+\n+# Outputs for custom load balancing\n+\n+output \"worker_instance_group\" {\n+  description = \"Full URL of the worker managed instance group\"\n+  value = \"${module.workers.instance_group}\"\n+}"
      },
      {
        "filename": "google-cloud/fedora-atomic/kubernetes/workers/ingress.tf",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "status": "removed",
        "patch": "@@ -1,45 +0,0 @@\n-# Static IPv4 address for the Network Load Balancer\n-resource \"google_compute_address\" \"ingress-ip\" {\n-  name = \"${var.name}-ingress-ip\"\n-}\n-\n-# Network Load Balancer (i.e. forwarding rules)\n-resource \"google_compute_forwarding_rule\" \"worker-http-lb\" {\n-  name       = \"${var.name}-worker-http-rule\"\n-  ip_address = \"${google_compute_address.ingress-ip.address}\"\n-  port_range = \"80\"\n-  target     = \"${google_compute_target_pool.workers.self_link}\"\n-}\n-\n-resource \"google_compute_forwarding_rule\" \"worker-https-lb\" {\n-  name       = \"${var.name}-worker-https-rule\"\n-  ip_address = \"${google_compute_address.ingress-ip.address}\"\n-  port_range = \"443\"\n-  target     = \"${google_compute_target_pool.workers.self_link}\"\n-}\n-\n-# Network Load Balancer target pool of instances.\n-resource \"google_compute_target_pool\" \"workers\" {\n-  name = \"${var.name}-worker-pool\"\n-\n-  health_checks = [\n-    \"${google_compute_http_health_check.ingress.name}\",\n-  ]\n-\n-  session_affinity = \"NONE\"\n-}\n-\n-# Ingress HTTP Health Check\n-resource \"google_compute_http_health_check\" \"ingress\" {\n-  name        = \"${var.name}-ingress-health\"\n-  description = \"Health check Ingress controller health host port\"\n-\n-  timeout_sec        = 5\n-  check_interval_sec = 5\n-\n-  healthy_threshold   = 2\n-  unhealthy_threshold = 4\n-\n-  port         = 10254\n-  request_path = \"/healthz\"\n-}"
      },
      {
        "filename": "google-cloud/fedora-atomic/kubernetes/workers/outputs.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n-output \"ingress_static_ip\" {\n-  value = \"${google_compute_address.ingress-ip.address}\"\n+output \"instance_group\" {\n+  description = \"Full URL of the worker managed instance group\"\n+  value = \"${google_compute_region_instance_group_manager.workers.instance_group}\"\n }"
      },
      {
        "filename": "google-cloud/fedora-atomic/kubernetes/workers/workers.tf",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -1,5 +1,4 @@\n-# Regional managed instance group maintains a homogeneous set of workers that\n-# span the zones in the region.\n+# Regional managed instance group of workers\n resource \"google_compute_region_instance_group_manager\" \"workers\" {\n   name        = \"${var.name}-worker-group\"\n   description = \"Compute instance group of ${var.name} workers\"\n@@ -11,12 +10,18 @@ resource \"google_compute_region_instance_group_manager\" \"workers\" {\n \n   target_size = \"${var.count}\"\n \n-  # target pool to which instances in the group should be added\n-  target_pools = [\n-    \"${google_compute_target_pool.workers.self_link}\",\n-  ]\n+  named_port {\n+    name = \"http\"\n+    port = \"80\"\n+  }\n+\n+  named_port {\n+    name = \"https\"\n+    port = \"443\"\n+  }\n }\n \n+# Worker instance template\n resource \"google_compute_instance_template\" \"worker\" {\n   name_prefix  = \"${var.name}-worker-\"\n   description  = \"Worker Instance template\""
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["gcp", "use_global_loadbalancing", "remove_loadbalancer"],
    "notes": "Use global load balancing instead of regional network load balancers, and remove load balancers from worker pools"
  },
  {
    "url": "https://github.com/kinvolk-archives/lokomotive-kubernetes/commit/f2f4deb8bb44988eeb0b64b919e51fb556aef4fb",
    "files": [
      {
        "filename": "CHANGES.md",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -4,6 +4,11 @@ Notable changes between versions.\n \n ## Latest\n \n+#### AWS\n+\n+* Change `controller_type` and `worker_type` default from t2.small to t3.small\n+  * t3.small is cheaper, provides 2 vCPU (instead of 1), and 5 Gbps of pod-to-pod bandwidth!\n+\n ## v1.13.1\n \n * Kubernetes [v1.13.1](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.13.md#v1131)"
      },
      {
        "filename": "aws/container-linux/kubernetes/variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -31,13 +31,13 @@ variable \"worker_count\" {\n \n variable \"controller_type\" {\n   type        = \"string\"\n-  default     = \"t2.small\"\n+  default     = \"t3.small\"\n   description = \"EC2 instance type for controllers\"\n }\n \n variable \"worker_type\" {\n   type        = \"string\"\n-  default     = \"t2.small\"\n+  default     = \"t3.small\"\n   description = \"EC2 instance type for workers\"\n }\n "
      },
      {
        "filename": "aws/fedora-atomic/kubernetes/variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -31,13 +31,13 @@ variable \"worker_count\" {\n \n variable \"controller_type\" {\n   type        = \"string\"\n-  default     = \"t2.small\"\n+  default     = \"t3.small\"\n   description = \"EC2 instance type for controllers\"\n }\n \n variable \"worker_type\" {\n   type        = \"string\"\n-  default     = \"t2.small\"\n+  default     = \"t3.small\"\n   description = \"EC2 instance type for workers\"\n }\n "
      },
      {
        "filename": "docs/atomic/aws.md",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -224,8 +224,8 @@ Reference the DNS zone id with `\"${aws_route53_zone.zone-for-clusters.zone_id}\"`\n |:-----|:------------|:--------|:--------|\n | controller_count | Number of controllers (i.e. masters) | 1 | 1 |\n | worker_count | Number of workers | 1 | 3 |\n-| controller_type | EC2 instance type for controllers | \"t2.small\" | See below |\n-| worker_type | EC2 instance type for workers | \"t2.small\" | See below |\n+| controller_type | EC2 instance type for controllers | \"t3.small\" | See below |\n+| worker_type | EC2 instance type for workers | \"t3.small\" | See below |\n | disk_size | Size of the EBS volume in GB | \"40\" | \"100\" |\n | disk_type | Type of the EBS volume | \"gp2\" | standard, gp2, io1 |\n | disk_iops | IOPS of the EBS volume | \"0\" (i.e. auto) | \"400\" |"
      },
      {
        "filename": "docs/cl/aws.md",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -236,8 +236,8 @@ Reference the DNS zone id with `\"${aws_route53_zone.zone-for-clusters.zone_id}\"`\n |:-----|:------------|:--------|:--------|\n | controller_count | Number of controllers (i.e. masters) | 1 | 1 |\n | worker_count | Number of workers | 1 | 3 |\n-| controller_type | EC2 instance type for controllers | \"t2.small\" | See below |\n-| worker_type | EC2 instance type for workers | \"t2.small\" | See below |\n+| controller_type | EC2 instance type for controllers | \"t3.small\" | See below |\n+| worker_type | EC2 instance type for workers | \"t3.small\" | See below |\n | os_image | AMI channel for a Container Linux derivative | coreos-stable | coreos-stable, coreos-beta, coreos-alpha, flatcar-stable, flatcar-beta, flatcar-alpha |\n | disk_size | Size of the EBS volume in GB | \"40\" | \"100\" |\n | disk_type | Type of the EBS volume | \"gp2\" | standard, gp2, io1 |"
      },
      {
        "filename": "docs/topics/performance.md",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ Provisioning times vary based on the operating system and platform. Sampling the\n \n | Platform      | Apply | Destroy |\n |---------------|-------|---------|\n-| AWS           | 6 min | 5 min   |\n+| AWS           | 6 min | 4 min   |\n | Azure         | 7 min | 7 min   |\n | Bare-Metal    | 10-15 min | NA  |\n | Digital Ocean | 3 min 30 sec | 20 sec |\n@@ -24,12 +24,12 @@ Network performance varies based on the platform and CNI plugin. `iperf` was use\n \n | Platform / Plugin          | Theory | Host to Host | Pod to Pod   |\n |----------------------------|-------:|-------------:|-------------:|\n-| AWS (flannel)              | Varies | 976 Mb/s     | 900-999 Mb/s |\n-| AWS (calico, MTU 1480)     | Varies | 976 Mb/s     | 100-350 Mb/s |\n-| AWS (calico, MTU 8981)     | Varies | 976 Mb/s     | 900-999 Mb/s |\n-| Azure (flannel)            | Varies | 749 Mb/s     | 680 Mb/s     |\n-| Bare-Metal (flannel)       | 1 Gb/s | ~940 Mb/s    | 903 Mb/s     |\n-| Bare-Metal (calico)        | 1 Gb/s | ~940 Mb/s    | 931 Mb/s     |\n+| AWS (flannel)              | 5 Gb/s | 4.94 Gb/s    | 4.89 Gb/s    |\n+| AWS (calico, MTU 1480)     | 5 Gb/s | 4.94 Gb/s    | 4.42 Gb/s    |\n+| AWS (calico, MTU 8981)     | 5 Gb/s | 4.94 Gb/s    | 4.75 Gb/s    |\n+| Azure (flannel)            | Varies |  749 Mb/s    | 680 Mb/s     |\n+| Bare-Metal (flannel)       | 1 Gb/s |  940 Mb/s    | 903 Mb/s     |\n+| Bare-Metal (calico)        | 1 Gb/s |  940 Mb/s    | 931 Mb/s     |\n | Bare-Metal (flannel, bond) | 3 Gb/s |  2.3 Gb/s    | 1.17 Gb/s    |\n | Bare-Metal (calico, bond)  | 3 Gb/s |  2.3 Gb/s    | 1.17 Gb/s    |\n | Digital Ocean              | 2 Gb/s | 1.97 Gb/s    | 1.64 Gb/s    |"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from t2.small to t3.small"
  },
  {
    "url": "https://github.com/dvdhrm/imagebuilder-terraform/commit/9e3285b91b2a95271c3b4d0c8777f5363bfdfd40",
    "files": [
      {
        "filename": "vpc.tf",
        "additions": 1,
        "deletions": 60,
        "changes": 61,
        "status": "modified",
        "patch": "@@ -20,7 +20,7 @@ resource \"aws_vpc_endpoint\" \"external_vpc_s3\" {\n }\n \n # CloudWatch Logs endpoint enables us to access CloudWatch Logs from\n-# the internal network and to avoid bandwidth charges.\n+# the internal network.\n resource \"aws_vpc_endpoint\" \"internal_vpc_cloudwatch_logs\" {\n   vpc_id            = data.aws_vpc.internal_vpc.id\n   service_name      = \"com.amazonaws.us-east-1.logs\"\n@@ -37,21 +37,6 @@ resource \"aws_vpc_endpoint\" \"internal_vpc_cloudwatch_logs\" {\n     var.imagebuilder_tags, { Name = \"\ud83d\udcdc CloudWatch Logs VPC endpoint (internal)\" },\n   )\n }\n-resource \"aws_vpc_endpoint\" \"external_vpc_cloudwatch_logs\" {\n-  vpc_id            = data.aws_vpc.external_vpc.id\n-  service_name      = \"com.amazonaws.us-east-1.logs\"\n-  vpc_endpoint_type = \"Interface\"\n-\n-  security_group_ids = [\n-    aws_security_group.external_vpc_endpoints.id\n-  ]\n-\n-  subnet_ids = data.aws_subnet_ids.external_subnets.ids\n-\n-  tags = merge(\n-    var.imagebuilder_tags, { Name = \"\ud83d\udcdc CloudWatch Logs VPC endpoint (external)\" },\n-  )\n-}\n \n # Endpoint to reach AWS Secrets Manager.\n resource \"aws_vpc_endpoint\" \"internal_vpc_secretsmanager\" {\n@@ -70,53 +55,9 @@ resource \"aws_vpc_endpoint\" \"internal_vpc_secretsmanager\" {\n     var.imagebuilder_tags, { Name = \"\ud83e\udd2b Secrets Manager VPC endpoint (internal)\" },\n   )\n }\n-resource \"aws_vpc_endpoint\" \"external_vpc_secretsmanager\" {\n-  vpc_id            = data.aws_vpc.external_vpc.id\n-  service_name      = \"com.amazonaws.us-east-1.secretsmanager\"\n-  vpc_endpoint_type = \"Interface\"\n-\n-  security_group_ids = [\n-    aws_security_group.external_vpc_endpoints.id\n-  ]\n-\n-  subnet_ids = data.aws_subnet_ids.external_subnets.ids\n-\n-  tags = merge(\n-    var.imagebuilder_tags, { Name = \"\ud83e\udd2b Secrets Manager VPC endpoint (external)\" },\n-  )\n-}\n \n ##############################################################################\n ## PUBLIC SECURITY GROUPS\n-# Set up a security group for VPC endpoints which require an interface.\n-resource \"aws_security_group\" \"external_vpc_endpoints\" {\n-  name        = \"external_vpc_endpoints_${local.workspace_name}\"\n-  description = \"Allow ingress traffic\"\n-  vpc_id      = data.aws_vpc.external_vpc.id\n-\n-  ingress {\n-    from_port   = 0\n-    to_port     = 0\n-    protocol    = \"-1\"\n-    cidr_blocks = [\"0.0.0.0/0\"]\n-  }\n-\n-  egress {\n-    from_port   = 0\n-    to_port     = 0\n-    protocol    = \"-1\"\n-    cidr_blocks = [\"0.0.0.0/0\"]\n-  }\n-\n-  lifecycle {\n-    create_before_destroy = true\n-  }\n-\n-  tags = merge(\n-    var.imagebuilder_tags, { Name = \"external_vpc_endpoints_${local.workspace_name}\" },\n-  )\n-}\n-\n # Security group for composer instances.\n resource \"aws_security_group\" \"external_composer\" {\n   name        = \"external_composer_${local.workspace_name}\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": ["aws", "remove_external_vpc_endpoint"],
    "notes": "External VPC endpoints are unnecessary in this specific case and increase the AWS bill by a large amount"
  },
  {
    "url": "https://github.com/armand1m/terraform-gke-drone/commit/e5dd322eadc9e0a00fd3a603d5a9e9e07a812df6",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -58,7 +58,7 @@ resource \"google_container_cluster\" \"drone\" {\n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n   name       = \"drone-cluster-pool\"\n   cluster    = google_container_cluster.drone.name\n-  node_count = 2\n+  node_count = 1\n \n   node_config {\n     preemptible  = true"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["gcp", "reduce_node_count"],
    "notes": "Use a single node in a node pool instead of two for cost savings"
  },
  {
    "url": "https://github.com/reifnir/iac/commit/baced6c85a92e5c39d6270397ab5471262748bf6",
    "files": [
      {
        "filename": "azure/modules.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@ module \"aks\" {\n   resource_group = azurerm_resource_group.cluster\n \n   aks_cluster_version = \"1.19.0\"\n-  aks_node_count      = 1\n+  aks_node_count      = 2\n   aks_vm_node_size    = \"Standard_B2s\"\n \n   aks_admin_username        = var.aks_admin_username"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["azure", "not_relevant"],
    "notes": "Increase node count in an AKS cluster, 'cheap' in the commit message refers to this not being a problem"
  },
  {
    "url": "https://github.com/javier-lopez/terraforms/commit/afed4b83a174335ec2b371061c81bc92938ecda3",
    "files": [
      {
        "filename": "blender/blender.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -16,7 +16,7 @@ resource \"aws_spot_instance_request\" \"blender\" {\n     wait_for_fulfillment = true\n     #instance_interruption_behaviour = \"hibernate\"\n \n-    key_name  = \"blender-key\"\n+    key_name      = \"blender-key\"\n     vpc_security_group_ids = [\"${aws_security_group.blender-sec-group.id}\"]\n \n     timeouts {"
      },
      {
        "filename": "blender/cheapest-aws-gpu-spot-instance.sh",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -2,7 +2,7 @@\n \n CURRENT_DIR=\"$(cd \"$(dirname \"${0}\")\" && pwd)\"\n \n-\"${CURRENT_DIR}\"/cheapest-aws-gpu-spot-instance/cheapest-aws-gpu-spot-instance.deps.pex    \\\n-    \"${CURRENT_DIR}\"/cheapest-aws-gpu-spot-instance/cheapest-aws-gpu-spot-instance.py \"${@}\"\n+\"${CURRENT_DIR}\"/scripts/cheapest-aws-gpu-spot-instance.deps.pex \\\n+    \"${CURRENT_DIR}\"/scripts/cheapest-aws-gpu-spot-instance.py \"${@}\"\n \n #--aws-access-key=AKIAJCBSNX3UNPTGZTVQ --aws-secret-key=LTV0uQ7SIVXBN1OTb/9GUX2syBc1vNQtqc3E2p1Raaa"
      },
      {
        "filename": "blender/scripts/cheapest-aws-gpu-spot-instance.deps.pex",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "blender/scripts/cheapest-aws-gpu-spot-instance.py",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "blender/scripts/generate.deps.pex.sh",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/tdooner/flynn/commit/a9ea9d09727825f9a047e70d94caf73c99e6b2a8",
    "files": [
      {
        "filename": "modules/apps/disclosure-backend-static.tf",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -5,12 +5,3 @@ resource \"cloudflare_record\" \"disclosure-backend-static\" {\n   type = \"CNAME\"\n   proxied = true\n }\n-\n-module \"disclosure_backend_status_check\" {\n-  source = \"../aws-status-check\"\n-\n-  fqdn = \"disclosure-backend-static.tdooner.com\"\n-  type = \"HTTPS\"\n-  port = 443\n-  sns_arn = \"arn:aws:sns:us-east-1:428663493796:downtime-alerts\"\n-}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": ["aws", "remove_status_check"],
    "notes": "Removes a module which provides a Route53 status check and CloudWatch alarm costing $2.75/month"
  },
  {
    "url": "https://github.com/tomnz/rocketchat-tf/commit/5298263d68548372c064b9d9c76977325a7373c8",
    "files": [
      {
        "filename": "main.tf",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -19,7 +19,7 @@ variable \"admin_username\" {\n variable \"vm_size\" {\n   type = string\n   # Recommend something with ~3GB+ of RAM at a minimum\n-  default = \"Standard_DS1_v2\"\n+  default = \"Standard_DS2_v2\"\n   description = \"VM size (one of https://docs.microsoft.com/en-us/azure/templates/microsoft.compute/virtualmachines#HardwareProfile)\"\n }\n \n@@ -41,11 +41,14 @@ provider \"azurerm\" {\n   features {}\n }\n \n+# Resource Group encapsulates all of the other resources below\n resource \"azurerm_resource_group\" \"rg\" {\n   name     = \"${var.prefix}RG\"\n   location = var.location\n }\n \n+# Configure networking - need a virtual network, subnet, and public (external)\n+# IP address\n resource \"azurerm_virtual_network\" \"vnet\" {\n     name                = \"${var.prefix}VNet\"\n     address_space       = [\"10.0.0.0/16\"]\n@@ -60,7 +63,6 @@ resource \"azurerm_subnet\" \"subnet\" {\n   address_prefixes     = [\"10.0.1.0/24\"]\n }\n \n-# Create public IP\n resource \"azurerm_public_ip\" \"publicip\" {\n   name                = \"${var.prefix}PublicIP\"\n   location            = azurerm_resource_group.rg.location\n@@ -69,7 +71,7 @@ resource \"azurerm_public_ip\" \"publicip\" {\n }\n \n \n-# Create Network Security Group and rule\n+# Create Network Security Group and rules\n resource \"azurerm_network_security_group\" \"nsg\" {\n   name                = \"${var.prefix}NSG\"\n   location            = azurerm_resource_group.rg.location\n@@ -116,7 +118,7 @@ resource \"azurerm_subnet_network_security_group_association\" \"subnetNSG\" {\n   network_security_group_id = azurerm_network_security_group.nsg.id\n }\n \n-# Create network interface\n+# Create network interface for VM\n resource \"azurerm_network_interface\" \"nic\" {\n   name                      = \"${var.prefix}NIC\"\n   location                  = azurerm_resource_group.rg.location\n@@ -181,6 +183,7 @@ resource \"azurerm_managed_disk\" \"vmbackup1\" {\n   name                 = \"${var.prefix}VM-BackupDisk-1\"\n   location             = azurerm_resource_group.rg.location\n   resource_group_name  = azurerm_resource_group.rg.name\n+  # Typically we use a lower\n   storage_account_type = \"Standard_LRS\"\n   create_option        = \"Empty\"\n   disk_size_gb         = 64"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ministryofjustice/cloud-platform-environments/commit/d7afb9018e20ef85f1fbee2300dbf5c5cdf3cb0e",
    "files": [
      {
        "filename": "namespaces/live-1.cloud-platform.service.justice.gov.uk/money-to-prisoners-prod/resources/ecr.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+# https://github.com/ministryofjustice/cloud-platform-terraform-ecr-credentials\n+\n+module \"ecr\" {\n+  source = \"github.com/ministryofjustice/cloud-platform-terraform-ecr-credentials?ref=3.1\"\n+\n+  team_name = \"${var.team_name}\"\n+  repo_name = \"${var.application}\"\n+}\n+\n+resource \"kubernetes_secret\" \"ecr\" {\n+  metadata {\n+    name      = \"ecr\"\n+    namespace = \"${var.namespace}\"\n+  }\n+\n+  data {\n+    access_key_id     = \"${module.ecr.access_key_id}\"\n+    secret_access_key = \"${module.ecr.secret_access_key}\"\n+    repo_arn          = \"${module.ecr.repo_arn}\"\n+    repo_url          = \"${module.ecr.repo_url}\"\n+  }\n+}"
      },
      {
        "filename": "namespaces/live-1.cloud-platform.service.justice.gov.uk/money-to-prisoners-prod/resources/main.tf",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "status": "added",
        "patch": "@@ -0,0 +1,35 @@\n+terraform {\n+  backend \"s3\" {}\n+}\n+\n+provider \"aws\" {\n+  region = \"eu-west-2\"\n+}\n+\n+variable \"namespace\" {\n+  default = \"money-to-prisoners-prod\"\n+}\n+\n+variable \"business-unit\" {\n+  default = \"HMPPS\"\n+}\n+\n+variable \"team_name\" {\n+  default = \"prisoner-money\"\n+}\n+\n+variable \"application\" {\n+  default = \"money-to-prisoners\"\n+}\n+\n+variable \"email\" {\n+  default = \"money-to-prisoners@digital.justice.gov.uk\"\n+}\n+\n+variable \"environment-name\" {\n+  default = \"prod\"\n+}\n+\n+variable \"is-production\" {\n+  default = \"true\"\n+}"
      },
      {
        "filename": "namespaces/live-1.cloud-platform.service.justice.gov.uk/money-to-prisoners-test/resources/main.tf",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "status": "added",
        "patch": "@@ -0,0 +1,35 @@\n+terraform {\n+  backend \"s3\" {}\n+}\n+\n+provider \"aws\" {\n+  region = \"eu-west-2\"\n+}\n+\n+variable \"namespace\" {\n+  default = \"money-to-prisoners-test\"\n+}\n+\n+variable \"business-unit\" {\n+  default = \"HMPPS\"\n+}\n+\n+variable \"team_name\" {\n+  default = \"prisoner-money\"\n+}\n+\n+variable \"application\" {\n+  default = \"money-to-prisoners\"\n+}\n+\n+variable \"email\" {\n+  default = \"money-to-prisoners@digital.justice.gov.uk\"\n+}\n+\n+variable \"environment-name\" {\n+  default = \"test\"\n+}\n+\n+variable \"is-production\" {\n+  default = \"false\"\n+}"
      },
      {
        "filename": "namespaces/live-1.cloud-platform.service.justice.gov.uk/money-to-prisoners-test/resources/rds.tf",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "status": "added",
        "patch": "@@ -0,0 +1,38 @@\n+# https://github.com/ministryofjustice/cloud-platform-terraform-rds-instance\n+\n+variable \"cluster_name\" {}\n+variable \"cluster_state_bucket\" {}\n+\n+module \"rds\" {\n+  source = \"github.com/ministryofjustice/cloud-platform-terraform-rds-instance?ref=4.0\"\n+\n+  cluster_name           = \"${var.cluster_name}\"\n+  cluster_state_bucket   = \"${var.cluster_state_bucket}\"\n+  team_name              = \"${var.team_name}\"\n+  business-unit          = \"${var.business-unit}\"\n+  application            = \"${var.application}\"\n+  is-production          = \"${var.is-production}\"\n+  environment-name       = \"${var.environment-name}\"\n+  infrastructure-support = \"${var.email}\"\n+  db_engine              = \"postgres\"\n+  db_engine_version      = \"10.6\"\n+  db_instance_class      = \"db.t2.small\"\n+  db_allocated_storage   = \"5\"\n+  db_name                = \"mtp_api\"\n+}\n+\n+resource \"kubernetes_secret\" \"rds\" {\n+  metadata {\n+    name      = \"rds\"\n+    namespace = \"${var.namespace}\"\n+  }\n+\n+  data {\n+    rds_instance_endpoint = \"${module.rds.rds_instance_endpoint}\"\n+    database_name         = \"${module.rds.database_name}\"\n+    database_username     = \"${module.rds.database_username}\"\n+    database_password     = \"${module.rds.database_password}\"\n+    rds_instance_address  = \"${module.rds.rds_instance_address}\"\n+    rds_instance_port     = \"${module.rds.rds_instance_port}\"\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ministryofjustice/cloud-platform-environments/commit/5199e517f5e08b8bed3f96334b102814b3e99200",
    "files": [
      {
        "filename": "namespaces/live-1.cloud-platform.service.justice.gov.uk/laa-cla-backend-production/resources/rds.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -66,6 +66,7 @@ module \"cla_backend_replica\" {\n   is-production          = var.is-production\n   environment-name       = var.environment-name\n   infrastructure-support = var.infrastructure-support\n+  namespace              = var.namespace\n \n \n   # Settings from current setup"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ministryofjustice/cloud-platform-environments/commit/cca186a0f7165b361f372c87524011e91b28f41a",
    "files": [
      {
        "filename": "namespaces/live-1.cloud-platform.service.justice.gov.uk/sandbox-ppse/resources/sql-server.tf",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "status": "removed",
        "patch": "@@ -1,115 +0,0 @@\n-##\n-## main/primary database\n-##\n-\n-module \"sql-server-main\" {\n-  source        = \"github.com/ministryofjustice/cloud-platform-terraform-rds-instance?ref=5.16.3\"\n-  cluster_name  = var.cluster_name\n-  team_name     = var.team_name\n-  business-unit = var.business_unit\n-  application   = var.application\n-  is-production = var.is_production\n-  namespace     = var.namespace\n-\n-  db_engine              = \"sqlserver-ee\"\n-  db_engine_version      = \"11.00\"\n-  db_instance_class      = \"db.t3.xlarge\"\n-  db_allocated_storage   = \"20\"\n-  db_parameter           = []\n-  license_model          = \"license-included\"\n-  rds_family             = \"sqlserver-ee-11.0\"\n-  environment-name       = var.environment\n-  infrastructure-support = var.infrastructure_support\n-\n-  providers = {\n-    # Can be either \"aws.london\" or \"aws.ireland\"\n-    aws = aws.london\n-  }\n-}\n-\n-resource \"kubernetes_secret\" \"sql-server-main\" {\n-  metadata {\n-    name      = \"sql-server-main\"\n-    namespace = var.namespace\n-  }\n-\n-  data = {\n-    rds_instance_endpoint = module.sql-server-main.rds_instance_endpoint\n-    database_name         = module.sql-server-main.database_name\n-    database_username     = module.sql-server-main.database_username\n-    database_password     = module.sql-server-main.database_password\n-    rds_instance_address  = module.sql-server-main.rds_instance_address\n-    access_key_id         = module.sql-server-main.access_key_id\n-    secret_access_key     = module.sql-server-main.secret_access_key\n-  }\n-}\n-\n-resource \"kubernetes_config_map\" \"sql-server-main\" {\n-  metadata {\n-    name      = \"sql-server-main\"\n-    namespace = var.namespace\n-  }\n-\n-  data = {\n-    database_name = module.sql-server-main.database_name\n-    db_identifier = module.sql-server-main.db_identifier\n-  }\n-}\n-\n-##\n-## secondary/read-replica database\n-##\n-\n-module \"sql-server-rr\" {\n-  source        = \"github.com/ministryofjustice/cloud-platform-terraform-rds-instance?ref=5.16.3\"\n-  cluster_name  = var.cluster_name\n-  team_name     = var.team_name\n-  business-unit = var.business_unit\n-  application   = var.application\n-  is-production = var.is_production\n-  namespace     = var.namespace\n-\n-  db_engine              = \"sqlserver-ee\"\n-  db_engine_version      = \"11.00\"\n-  db_instance_class      = \"db.t3.xlarge\"\n-  db_allocated_storage   = \"20\"\n-  db_parameter           = []\n-  license_model          = \"license-included\"\n-  rds_family             = \"sqlserver-ee-11.0\"\n-  environment-name       = var.environment\n-  infrastructure-support = var.infrastructure_support\n-\n-  providers = {\n-    # Can be either \"aws.london\" or \"aws.ireland\"\n-    aws = aws.london\n-  }\n-}\n-\n-resource \"kubernetes_secret\" \"sql-server-rr\" {\n-  metadata {\n-    name      = \"sql-server-rr\"\n-    namespace = var.namespace\n-  }\n-\n-  data = {\n-    rds_instance_endpoint = module.sql-server-rr.rds_instance_endpoint\n-    database_name         = module.sql-server-rr.database_name\n-    database_username     = module.sql-server-rr.database_username\n-    database_password     = module.sql-server-rr.database_password\n-    rds_instance_address  = module.sql-server-rr.rds_instance_address\n-    access_key_id         = module.sql-server-rr.access_key_id\n-    secret_access_key     = module.sql-server-rr.secret_access_key\n-  }\n-}\n-\n-resource \"kubernetes_config_map\" \"sql-server-rr\" {\n-  metadata {\n-    name      = \"sql-server-rr\"\n-    namespace = var.namespace\n-  }\n-\n-  data = {\n-    database_name = module.sql-server-rr.database_name\n-    db_identifier = module.sql-server-rr.db_identifier\n-  }\n-}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/CPWu/terraform_three_instances/commit/faaecdc2e201a146f76f4a94f51e9fd5c5a428f3",
    "files": [
      {
        "filename": "main.tf",
        "additions": 124,
        "deletions": 124,
        "changes": 248,
        "status": "modified",
        "patch": "@@ -1,124 +1,124 @@\n-# Resource Group\n-resource \"azurerm_resource_group\" \"kubernetes_rg\" {\n-    name                                = var.RESOURCE_GROUP_NAME\n-    location                            = var.AZURE_REGION\n-}\n-\n-# Virtual Network\n-resource \"azurerm_virtual_network\" \"kubernetes_vnet\" {\n-    name                                = \"${azurerm_resource_group.kubernetes_rg.name}-vnet\"\n-    location                            = var.AZURE_REGION\n-    resource_group_name                 = var.RESOURCE_GROUP_NAME\n-    address_space                       = [var.VNET_ADDRESS_SPACE]\n-}\n-\n-# Subnet\n-resource \"azurerm_subnet\" \"kubernetes_subnet\" {\n-    name                                = \"${var.RESOURCE_GROUP_NAME}-subnet\"\n-    virtual_network_name                = azurerm_virtual_network.kubernetes_vnet.name\n-    resource_group_name                 = var.RESOURCE_GROUP_NAME\n-    address_prefixes                    = [var.SUBNET_ADDRESS_PREFIX]\n-}\n-\n-# Network Security Group\n-resource \"azurerm_network_security_group\" \"kubernetes_nsg\" {\n-    name                                      = \"${var.STACK_NAME}-nsg\"\n-    location                                  = var.AZURE_REGION\n-    resource_group_name                       = var.RESOURCE_GROUP_NAME\n-\n-    depends_on = [\n-        azurerm_resource_group.kubernetes_rg,\n-    ]\n-}\n-\n-# Connect the Network Security Group to the Subnet\n-resource \"azurerm_subnet_network_security_group_association\" \"kubernetes_nsg_association\" {\n-    network_security_group_id                   = azurerm_network_security_group.kubernetes_nsg.id\n-    subnet_id                                   = azurerm_subnet.kubernetes_subnet.id\n-}\n-\n-# Network Security Group - Rule\n-resource \"azurerm_network_security_rule\" \"enable_ssh\" {\n-    name                                        = \"SSH\"\n-    priority                                    = 100\n-    direction                                   = \"Inbound\"\n-    access                                      = \"Allow\"\n-    protocol                                    = \"TCP\"\n-    source_port_range                           = \"*\"\n-    destination_port_range                      = \"22\"\n-    source_address_prefix                       = \"*\"\n-    destination_address_prefix                  = \"*\"\n-    resource_group_name                         = var.RESOURCE_GROUP_NAME\n-    network_security_group_name                 = azurerm_network_security_group.kubernetes_nsg.name\n-\n-    depends_on = [\n-        azurerm_network_security_group.kubernetes_nsg\n-    ]\n-}\n-\n-# Network Interface Card\n-resource \"azurerm_network_interface\" \"server_nic\" {\n-    for_each                            = var.SERVER\n-    name                                = \"${each.value.SERVER_NAME}-nic\"\n-    location                            = var.AZURE_REGION\n-    resource_group_name                 = var.RESOURCE_GROUP_NAME\n-\n-    ip_configuration {\n-        name                                        = \"${each.value.SERVER_NAME}-ip-config\"\n-        subnet_id                                   = azurerm_subnet.kubernetes_subnet.id\n-        private_ip_address_allocation               = \"dynamic\"\n-        public_ip_address_id                        = azurerm_public_ip.sandbox_public_ip[each.key].id\n-    }\n-}\n-\n-# Public IP Address\n-resource \"azurerm_public_ip\" \"sandbox_public_ip\" {\n-    for_each                            = var.SERVER\n-    name                                = \"${each.value.SERVER_NAME}-public-ip\"\n-    location                            = var.AZURE_REGION\n-    resource_group_name                 = var.RESOURCE_GROUP_NAME\n-    allocation_method                   = each.value.IP_TYPE\n-\n-    depends_on = [\n-        azurerm_resource_group.kubernetes_rg,\n-    ]\n-}\n-\n-# Connect the security group to the network interface card\n-resource \"azurerm_network_interface_security_group_association\" \"nic_to_nsg\" {\n-    for_each                                    = var.SERVER\n-    network_interface_id                        = azurerm_network_interface.server_nic[each.key].id\n-    network_security_group_id                   = azurerm_network_security_group.kubernetes_nsg.id\n-}\n-\n-# Linux Virtual Machine\n-resource \"azurerm_linux_virtual_machine\" \"server\" {\n-    for_each                                    = var.SERVER\n-    name                                        = each.value.SERVER_NAME\n-    resource_group_name                         = var.RESOURCE_GROUP_NAME\n-    location                                    = var.AZURE_REGION\n-    size                                        = each.value.SERVER_SIZE\n-    admin_username                              = each.value.USERNAME\n-    admin_password                              = each.value.PASSWORD\n-    disable_password_authentication             = false\n-\n-    network_interface_ids = [\n-        azurerm_network_interface.server_nic[each.key].id\n-    ]\n-\n-    os_disk {\n-        caching                                 = each.value.CACHING\n-        storage_account_type                    = each.value.STORAGE_ACCOUNT_TYPE\n-    }\n-\n-    source_image_reference {\n-        publisher                               = each.value.PUBLISHER\n-        offer                                   = each.value.OFFER\n-        sku                                     = each.value.SKU\n-        version                                 = each.value.VERSION\n-    }\n-\n-    depends_on = [\n-        azurerm_network_interface.server_nic\n-    ]\n-}\n\\ No newline at end of file\n+# # Resource Group\n+# resource \"azurerm_resource_group\" \"kubernetes_rg\" {\n+#     name                                = var.RESOURCE_GROUP_NAME\n+#     location                            = var.AZURE_REGION\n+# }\n+\n+# # Virtual Network\n+# resource \"azurerm_virtual_network\" \"kubernetes_vnet\" {\n+#     name                                = \"${azurerm_resource_group.kubernetes_rg.name}-vnet\"\n+#     location                            = var.AZURE_REGION\n+#     resource_group_name                 = var.RESOURCE_GROUP_NAME\n+#     address_space                       = [var.VNET_ADDRESS_SPACE]\n+# }\n+\n+# # Subnet\n+# resource \"azurerm_subnet\" \"kubernetes_subnet\" {\n+#     name                                = \"${var.RESOURCE_GROUP_NAME}-subnet\"\n+#     virtual_network_name                = azurerm_virtual_network.kubernetes_vnet.name\n+#     resource_group_name                 = var.RESOURCE_GROUP_NAME\n+#     address_prefixes                    = [var.SUBNET_ADDRESS_PREFIX]\n+# }\n+\n+# # Network Security Group\n+# resource \"azurerm_network_security_group\" \"kubernetes_nsg\" {\n+#     name                                      = \"${var.STACK_NAME}-nsg\"\n+#     location                                  = var.AZURE_REGION\n+#     resource_group_name                       = var.RESOURCE_GROUP_NAME\n+\n+#     depends_on = [\n+#         azurerm_resource_group.kubernetes_rg,\n+#     ]\n+# }\n+\n+# # Connect the Network Security Group to the Subnet\n+# resource \"azurerm_subnet_network_security_group_association\" \"kubernetes_nsg_association\" {\n+#     network_security_group_id                   = azurerm_network_security_group.kubernetes_nsg.id\n+#     subnet_id                                   = azurerm_subnet.kubernetes_subnet.id\n+# }\n+\n+# # Network Security Group - Rule\n+# resource \"azurerm_network_security_rule\" \"enable_ssh\" {\n+#     name                                        = \"SSH\"\n+#     priority                                    = 100\n+#     direction                                   = \"Inbound\"\n+#     access                                      = \"Allow\"\n+#     protocol                                    = \"TCP\"\n+#     source_port_range                           = \"*\"\n+#     destination_port_range                      = \"22\"\n+#     source_address_prefix                       = \"*\"\n+#     destination_address_prefix                  = \"*\"\n+#     resource_group_name                         = var.RESOURCE_GROUP_NAME\n+#     network_security_group_name                 = azurerm_network_security_group.kubernetes_nsg.name\n+\n+#     depends_on = [\n+#         azurerm_network_security_group.kubernetes_nsg\n+#     ]\n+# }\n+\n+# # Network Interface Card\n+# resource \"azurerm_network_interface\" \"server_nic\" {\n+#     for_each                            = var.SERVER\n+#     name                                = \"${each.value.SERVER_NAME}-nic\"\n+#     location                            = var.AZURE_REGION\n+#     resource_group_name                 = var.RESOURCE_GROUP_NAME\n+\n+#     ip_configuration {\n+#         name                                        = \"${each.value.SERVER_NAME}-ip-config\"\n+#         subnet_id                                   = azurerm_subnet.kubernetes_subnet.id\n+#         private_ip_address_allocation               = \"dynamic\"\n+#         public_ip_address_id                        = azurerm_public_ip.sandbox_public_ip[each.key].id\n+#     }\n+# }\n+\n+# # Public IP Address\n+# resource \"azurerm_public_ip\" \"sandbox_public_ip\" {\n+#     for_each                            = var.SERVER\n+#     name                                = \"${each.value.SERVER_NAME}-public-ip\"\n+#     location                            = var.AZURE_REGION\n+#     resource_group_name                 = var.RESOURCE_GROUP_NAME\n+#     allocation_method                   = each.value.IP_TYPE\n+\n+#     depends_on = [\n+#         azurerm_resource_group.kubernetes_rg,\n+#     ]\n+# }\n+\n+# # Connect the security group to the network interface card\n+# resource \"azurerm_network_interface_security_group_association\" \"nic_to_nsg\" {\n+#     for_each                                    = var.SERVER\n+#     network_interface_id                        = azurerm_network_interface.server_nic[each.key].id\n+#     network_security_group_id                   = azurerm_network_security_group.kubernetes_nsg.id\n+# }\n+\n+# # Linux Virtual Machine\n+# resource \"azurerm_linux_virtual_machine\" \"server\" {\n+#     for_each                                    = var.SERVER\n+#     name                                        = each.value.SERVER_NAME\n+#     resource_group_name                         = var.RESOURCE_GROUP_NAME\n+#     location                                    = var.AZURE_REGION\n+#     size                                        = each.value.SERVER_SIZE\n+#     admin_username                              = each.value.USERNAME\n+#     admin_password                              = each.value.PASSWORD\n+#     disable_password_authentication             = false\n+\n+#     network_interface_ids = [\n+#         azurerm_network_interface.server_nic[each.key].id\n+#     ]\n+\n+#     os_disk {\n+#         caching                                 = each.value.CACHING\n+#         storage_account_type                    = each.value.STORAGE_ACCOUNT_TYPE\n+#     }\n+\n+#     source_image_reference {\n+#         publisher                               = each.value.PUBLISHER\n+#         offer                                   = each.value.OFFER\n+#         sku                                     = each.value.SKU\n+#         version                                 = each.value.VERSION\n+#     }\n+\n+#     depends_on = [\n+#         azurerm_network_interface.server_nic\n+#     ]\n+# }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["azure", "not_relevant"],
    "notes": "The commit comments out code, but there is no underlying cost smell"
  },
  {
    "url": "https://github.com/alphagov/govwifi-terraform/commit/348b52a2ae5d6d242c8802644f9e3a5e6460de1d",
    "files": [
      {
        "filename": "govwifi-api/alarms-logging.tf",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "status": "added",
        "patch": "@@ -0,0 +1,45 @@\n+resource \"aws_cloudwatch_metric_alarm\" \"logging-ecs-cpu-alarm-high\" {\n+  alarm_name          = \"${var.Env-Name}-logging-ecs-cpu-alarm-high\"\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods  = \"1\"\n+  metric_name         = \"CPUUtilization\"\n+  namespace           = \"AWS/ECS\"\n+  period              = \"300\"\n+  statistic           = \"Average\"\n+  threshold           = \"50\"\n+\n+  dimensions {\n+    ClusterName = \"${aws_ecs_cluster.api-cluster.name}\"\n+    ServiceName = \"${aws_ecs_service.logging-api-service.name}\"\n+  }\n+\n+  alarm_description  = \"This alarm tells ECS to scale up based on high CPU - Logging\"\n+  alarm_actions      = [\n+    \"${aws_appautoscaling_policy.ecs-policy-up-logging.arn}\",\n+    \"${var.critical-notifications-arn}\"\n+  ]\n+\n+  treat_missing_data = \"breaching\"\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"logging-ecs-cpu-alarm-low\" {\n+  alarm_name          = \"${var.Env-Name}-logging-ecs-cpu-alarm-low\"\n+  comparison_operator = \"LessThanThreshold\"\n+  evaluation_periods  = \"2\"\n+  metric_name         = \"CPUUtilization\"\n+  namespace           = \"AWS/ECS\"\n+  period              = \"300\"\n+  statistic           = \"Average\"\n+  threshold           = \"10\"\n+\n+  dimensions {\n+    ClusterName = \"${aws_ecs_cluster.api-cluster.name}\"\n+    ServiceName = \"${aws_ecs_service.logging-api-service.name}\"\n+  }\n+\n+  alarm_description  = \"This alarm tells ECS to scale in based on low CPU usage - Logging\"\n+  alarm_actions      = [\n+    \"${aws_appautoscaling_policy.ecs-policy-down-logging.arn}\",\n+    \"${var.critical-notifications-arn}\"\n+  ]\n+}"
      },
      {
        "filename": "govwifi-api/logging-scaling-policy.tf",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "status": "added",
        "patch": "@@ -0,0 +1,48 @@\n+resource \"aws_appautoscaling_target\" \"logging-ecs-target\" {\n+  service_namespace  = \"ecs\"\n+  resource_id        = \"service/${aws_ecs_cluster.api-cluster.name}/${aws_ecs_service.logging-api-service.name}\"\n+  max_capacity       = 20\n+  min_capacity       = 2\n+  role_arn           = \"${var.ecs-service-role}\"\n+  scalable_dimension = \"ecs:service:DesiredCount\"\n+}\n+\n+resource \"aws_appautoscaling_policy\" \"ecs-policy-up-logging\" {\n+  name               = \"ECS Scale Up Logging\"\n+  service_namespace  = \"ecs\"\n+  policy_type        = \"StepScaling\"\n+  resource_id        = \"service/${aws_ecs_cluster.api-cluster.name}/${aws_ecs_service.logging-api-service.name}\"\n+  scalable_dimension = \"ecs:service:DesiredCount\"\n+\n+  step_scaling_policy_configuration {\n+    adjustment_type         = \"ChangeInCapacity\"\n+    metric_aggregation_type = \"Average\"\n+\n+    step_adjustment {\n+      metric_interval_lower_bound = 0\n+      scaling_adjustment = 1\n+    }\n+  }\n+\n+  depends_on = [\"aws_appautoscaling_target.logging-ecs-target\"]\n+}\n+\n+resource \"aws_appautoscaling_policy\" \"ecs-policy-down-logging\" {\n+  name               = \"ECS Scale Down\"\n+  service_namespace  = \"ecs\"\n+  resource_id        = \"service/${aws_ecs_cluster.api-cluster.name}/${aws_ecs_service.logging-api-service.name}\"\n+  policy_type        = \"StepScaling\"\n+  scalable_dimension = \"ecs:service:DesiredCount\"\n+\n+  step_scaling_policy_configuration {\n+    adjustment_type    = \"ChangeInCapacity\"\n+    metric_aggregation_type   = \"Average\"\n+\n+    step_adjustment {\n+      metric_interval_upper_bound = 0\n+      scaling_adjustment = -1\n+    }\n+  }\n+\n+  depends_on = [\"aws_appautoscaling_target.logging-ecs-target\"]\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "awareness",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alphagov/govwifi-terraform/commit/38d0a67cf70d46c26675ce60a7a647eef0f11e52",
    "files": [
      {
        "filename": "govwifi-api/authorisation-api-cluster.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"aws_ecs_task_definition\" \"authorisation-api-task\" {\n [\n     {\n       \"volumesFrom\": [],\n-      \"memory\": 1900,\n+      \"memory\": 950,\n       \"extraHosts\": null,\n       \"dnsServers\": null,\n       \"disableNetworking\": null,"
      },
      {
        "filename": "govwifi-api/logging-api-cluster.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -16,7 +16,7 @@ resource \"aws_ecs_task_definition\" \"logging-api-task\" {\n [\n     {\n       \"volumesFrom\": [],\n-      \"memory\": 1900,\n+      \"memory\": 950,\n       \"extraHosts\": null,\n       \"dnsServers\": null,\n       \"disableNetworking\": null,"
      },
      {
        "filename": "govwifi-api/user-signup-api-cluster.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -58,7 +58,7 @@ resource \"aws_ecs_task_definition\" \"user-signup-api-task\" {\n [\n     {\n       \"volumesFrom\": [],\n-      \"memory\": 1900,\n+      \"memory\": 950,\n       \"extraHosts\": null,\n       \"dnsServers\": null,\n       \"disableNetworking\": null,"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "less_memory"],
    "notes": "Reduce memory for ECS tasks from 1900MB to 950MB"
  },
  {
    "url": "https://github.com/alphagov/govwifi-terraform/commit/d75eace6e505fe5645647593ab8a9bb018db64c2",
    "files": [
      {
        "filename": "devicewifi-frontend/cluster.tf",
        "additions": 0,
        "deletions": 112,
        "changes": 112,
        "status": "removed",
        "patch": "@@ -1,112 +0,0 @@\n-resource \"aws_ecs_cluster\" \"device-wifi-frontend-cluster\" {\n-  name = \"${var.Env-Name}-device-wifi-frontend-cluster\"\n-}\n-\n-resource \"aws_ecr_repository\" \"device-wifi-frontend-ecr\" {\n-  count = \"${var.ecr-repository-count}\"\n-  name  = \"devicewifi/frontend\"\n-}\n-\n-resource \"aws_cloudwatch_log_group\" \"device-wifi-frontend-log-group\" {\n-  name = \"${var.Env-Name}-device-wifi-frontend-docker-log-group\"\n-\n-  retention_in_days = 90\n-}\n-\n-resource \"aws_ecs_task_definition\" \"device-wifi-radius-task\" {\n-  family = \"device-wifi-radius-task-${var.Env-Name}\"\n-\n-  container_definitions = <<EOF\n-[\n-  {\n-    \"volumesFrom\": [],\n-    \"memory\": 2000,\n-    \"extraHosts\": null,\n-    \"dnsServers\": null,\n-    \"disableNetworking\": null,\n-    \"dnsSearchDomains\": null,\n-    \"portMappings\": [\n-      {\n-        \"hostPort\": 8080,\n-        \"containerPort\": 80,\n-        \"protocol\": \"tcp\"\n-      },\n-      {\n-        \"hostPort\": 3000,\n-        \"containerPort\": 3000,\n-        \"protocol\": \"tcp\"\n-      },\n-      {\n-        \"hostPort\": 1812,\n-        \"containerPort\": 1812,\n-        \"protocol\": \"udp\"\n-      },\n-      {\n-        \"hostPort\": 1813,\n-        \"containerPort\": 1813,\n-        \"protocol\": \"udp\"\n-      }\n-    ],\n-    \"hostname\": null,\n-    \"essential\": true,\n-    \"entryPoint\": null,\n-    \"mountPoints\": [],\n-    \"name\": \"frontend-radius\",\n-    \"ulimits\": null,\n-    \"dockerSecurityOptions\": null,\n-    \"environment\": [\n-      {\n-        \"name\": \"AUTHORISATION_API_BASE_URL\",\n-        \"value\": \"${var.auth-api-base-url}\"\n-      },{\n-        \"name\": \"LOGGING_API_BASE_URL\",\n-        \"value\": \"${var.logging-api-base-url}\"\n-      },{\n-        \"name\": \"RADIUS_CONFIG_WHITELIST_URL\",\n-        \"value\": \"https://s3.eu-west-2.amazonaws.com/govwifi-${var.rack-env}-admin/clients.conf\"\n-      },{\n-        \"name\": \"BACKEND_API_KEY\",\n-        \"value\": \"${var.shared-key}\"\n-      },{\n-        \"name\": \"HEALTH_CHECK_RADIUS_KEY\",\n-        \"value\": \"${var.healthcheck-radius-key}\"\n-      },{\n-        \"name\": \"SERVICE_DOMAIN\",\n-        \"value\": \"${var.Env-Subdomain}\"\n-      },{\n-        \"name\": \"RADIUSD_PARAMS\",\n-        \"value\": \"${var.radiusd-params}\"\n-      },{\n-        \"name\": \"RACK_ENV\",\n-        \"value\": \"${var.rack-env}\"\n-      }\n-    ],\n-    \"links\": null,\n-    \"workingDirectory\": null,\n-    \"readonlyRootFilesystem\": null,\n-    \"image\": \"${var.docker-image}\",\n-    \"command\": null,\n-    \"user\": null,\n-    \"dockerLabels\": null,\n-    \"logConfiguration\": {\n-      \"logDriver\": \"awslogs\",\n-      \"options\": {\n-        \"awslogs-group\": \"${var.Env-Name}-device-wifi-frontend-docker-log-group\",\n-        \"awslogs-region\": \"${var.aws-region}\",\n-        \"awslogs-stream-prefix\": \"${var.Env-Name}-docker-logs\"\n-      }\n-    },\n-    \"cpu\": 2000,\n-    \"privileged\": null,\n-    \"expanded\": true\n-  }\n-]\n-EOF\n-}\n-\n-resource \"aws_ecs_service\" \"device-wifi-frontend-service\" {\n-  name            = \"device-wifi-frontend-service-${var.Env-Name}\"\n-  cluster         = \"${aws_ecs_cluster.device-wifi-frontend-cluster.id}\"\n-  task_definition = \"${aws_ecs_task_definition.device-wifi-radius-task.arn}\"\n-  desired_count   = \"${var.radius-instance-count}\"\n-}"
      },
      {
        "filename": "devicewifi-frontend/instances.tf",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "status": "removed",
        "patch": "@@ -1,52 +0,0 @@\n-resource \"aws_instance\" \"device-wifi-radius\" {\n-  count                  = 1\n-  ami                    = \"${var.ami}\"\n-  instance_type          = \"t2.medium\"\n-  key_name               = \"${var.ssh-key-name}\"\n-  subnet_id              = \"${var.subnet-id[0]}\"\n-  vpc_security_group_ids = [\"${var.radius-instance-sg-ids}\"]\n-  iam_instance_profile   = \"${var.ecs-instance-profile-id}\"\n-  monitoring             = \"${var.enable-detailed-monitoring}\"\n-\n-  user_data = <<DATA\n-Content-Type: multipart/mixed; boundary=\"==BOUNDARY==\"\n-MIME-Version: 1.0\n-\n---==BOUNDARY==\n-MIME-Version: 1.0\n-Content-Type: text/cloud-config; charset=\"us-ascii\"\n-#cloud-config\n-repo_update: true\n-repo_upgrade: all\n-\n---==BOUNDARY==\n-MIME-Version: 1.0\n-Content-Type: text/x-shellscript; charset=\"us-ascii\"\n-# This cannot be moved to Ansible as it needs to exist when the instance is created\n-echo ECS_CLUSTER=${var.Env-Name}-device-wifi-frontend-cluster >> /etc/ecs/ecs.config\n-\n---==BOUNDARY==--\n-DATA\n-\n-  tags {\n-    Name = \"${title(var.Env-Name)} Device Wifi Frontend Radius-${var.dns-numbering-base + count.index + 1}\"\n-    Env  = \"${title(var.Env-Name)}\"\n-  }\n-\n-  lifecycle {\n-    create_before_destroy = true\n-    ignore_changes = [\n-      \"user_data\"\n-    ]\n-  }\n-}\n-\n-resource \"aws_eip\" \"device-wifi-eip\" {\n-  instance = \"${aws_instance.device-wifi-radius.id}\"\n-  vpc      = true\n-}\n-\n-resource \"aws_eip_association\" \"eip_assoc\" {\n-  instance_id = \"${aws_instance.device-wifi-radius.id}\"\n-  allocation_id = \"${aws_eip.device-wifi-eip.id}\"\n-}"
      },
      {
        "filename": "devicewifi-frontend/variables.tf",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "status": "removed",
        "patch": "@@ -1,54 +0,0 @@\n-variable \"Env-Name\" {}\n-\n-variable \"Env-Subdomain\" {}\n-\n-variable \"aws-region\" {}\n-\n-variable \"subnet-id\" {\n-  type = \"list\"\n-}\n-\n-variable \"ecs-instance-profile-id\" {}\n-\n-variable \"radius-instance-count\" {}\n-\n-variable \"radius-instance-sg-ids\" {\n-  type = \"list\"\n-}\n-\n-variable \"docker-image\" {}\n-\n-variable \"ami\" {\n-  description = \"AMI id to launch, must be in the region specified by the region variable\"\n-}\n-\n-variable \"ssh-key-name\" {}\n-\n-variable \"shared-key\" {}\n-\n-variable \"healthcheck-radius-key\" {}\n-\n-variable \"dns-numbering-base\" {}\n-\n-variable \"logging-api-base-url\" {}\n-\n-variable \"auth-api-base-url\" {}\n-\n-variable \"enable-detailed-monitoring\" {}\n-\n-variable \"radiusd-params\" {\n-  default = \"\"\n-}\n-\n-variable \"users\" {\n-  type   = \"list\"\n-}\n-\n-variable \"rack-env\" {\n-  default   = \"\"\n-}\n-\n-variable \"ecr-repository-count\" {\n-  description = \"Whether or not to create ECR repository\"\n-  default     = 0\n-}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "not_relevant"],
    "notes": "The commit removes unused resources but there is no underlying cost smell"
  },
  {
    "url": "https://github.com/eladidan/speedyhead.xyz-terraform/commit/71f034f3e13e9118a2a954e1fc3c0d35153184f0",
    "files": [
      {
        "filename": "backend.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+terraform {\n+  backend \"remote\" {\n+    hostname = \"app.terraform.io\"\n+    organization = \"speedyhead\"\n+\n+    workspaces {\n+      name = \"speedyhead\"\n+    }\n+  }\n+}"
      },
      {
        "filename": "main.tf",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "status": "added",
        "patch": "@@ -0,0 +1,33 @@\n+resource \"google_billing_budget\" \"budget\" {\n+  provider = google-beta\n+  billing_account = var.billing_account\n+  display_name = \"Speedyhead billing budget\"\n+  amount {\n+    specified_amount {\n+      currency_code = \"USD\"\n+      units = \"50\"\n+    }\n+  }\n+  threshold_rules {\n+      threshold_percent =  0.5\n+  }\n+  threshold_rules {\n+    threshold_percent = 0.9\n+    spend_basis = \"FORECASTED_SPEND\"\n+  }\n+  all_updates_rule {\n+    monitoring_notification_channels = [\n+      google_monitoring_notification_channel.notification_channel.id,\n+    ]\n+  }\n+}\n+\n+resource \"google_monitoring_notification_channel\" \"notification_channel\" {\n+  provider     = google-beta\n+  display_name = \"Speedyhead Notification Channel\"\n+  type         = \"email\"\n+\n+  labels = {\n+    email_address = var.notification_email\n+  }\n+}"
      },
      {
        "filename": "modules/project/main.tf",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+resource \"random_id\" \"id\" {\n+  byte_length = 6\n+  prefix      = var.project_name\n+}\n+\n+resource \"google_project\" \"project\" {\n+  name            = var.project_name\n+  project_id      = random_id.id.hex\n+  billing_account = var.billing_account\n+  org_id          = var.org_id\n+}\n+\n+resource \"google_project_service\" \"service\" {\n+  for_each = toset(var.services)\n+\n+  service = each.key\n+\n+  project            = google_project.project.project_id\n+  disable_on_destroy = false\n+}"
      },
      {
        "filename": "modules/project/outputs.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+output \"project_id\" {\n+  value = google_project.project.project_id\n+}"
      },
      {
        "filename": "modules/project/variables.tf",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "added",
        "patch": "@@ -0,0 +1,15 @@\n+variable \"billing_account\" {\n+    type = string\n+}\n+\n+variable \"project_name\" {\n+    type = string\n+}\n+\n+variable \"org_id\" {\n+    type = string\n+}\n+\n+variable \"services\" {\n+    type = list(string)\n+}"
      },
      {
        "filename": "projects.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+module \"cerebro\" {\n+  source = \"./modules/project\"\n+  billing_account = var.billing_account \n+  org_id = var.org_id\n+  project_name = \"cerebro\"\n+  services = [\n+      \"container.googleapis.com\"\n+  ]\n+}"
      },
      {
        "filename": "providers.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+provider \"google-beta\" {\n+  region = var.region\n+  project = var.project_id\n+}"
      },
      {
        "filename": "variables.tf",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+variable \"billing_account\" {\n+    type = string\n+}\n+\n+variable \"project_id\" {\n+    type = string\n+}\n+\n+variable \"notification_email\" {\n+    type = string\n+}\n+\n+variable \"org_id\" {\n+    type = string\n+}\n+\n+variable \"region\" {\n+    type = string\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/nikkiwritescode/flask-app-terraform-deployment/commit/af47bb6201f1dcc8264e60da429e4ff8d126e56c",
    "files": [
      {
        "filename": "main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -11,6 +11,7 @@ module \"app\" {\n   git_token             = module.security.git_personal_access_token.secret_string\n   instance_type         = var.instance_type\n   instance_profile      = module.security.ec2-instance-profile-flask-dynamo-access.name\n+  internet_gateway      = module.network.gateway\n   avail_zone_1          = var.avail_zone_1\n   avail_zone_2          = var.avail_zone_2\n   subnet_1_id           = module.network.subnet-1.id\n@@ -36,11 +37,11 @@ module \"network\" {\n module \"security\" {\n   source                 = \"./modules/security\"\n   app_name               = var.app_name\n+  dynamo_table_name      = module.db.flask_db_table_1.name\n   env_prefix             = var.env_prefix\n+  elb_dns                = module.network.elb_public_dns\n   git_token              = var.git_token\n-  dynamo_table_name      = module.db.flask_db_table_1.name\n   my_ip                  = var.my_ip\n-  elb_dns                = module.network.elb_public_dns\n   my_public_key_location = var.my_public_key_location\n   secret_name            = var.secret_name\n   vpc_id                 = module.network.vpc.id"
      },
      {
        "filename": "modules/app/ec2-user-data.sh.tpl",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -1,14 +1,10 @@\n #!/bin/bash\n-sudo yum update -y && sudo yum install -y docker && sudo yum install -y git && sudo yum install -y python37\n+sudo yum update -y && yum install -y git\n curl -O https://bootstrap.pypa.io/get-pip.py\n python3 get-pip.py --user\n-sudo systemctl start docker\n-sudo usermod -aG docker ec2-user\n export TC_DYNAMO_TABLE=\"${dynamo_table}\"\n mkdir ~/flask\n-git clone https://github.com/uturndata/tech-challenge-flask-app.git ~/flask\n-${git_username}\n-${git_token}\n+git clone https://${git_username}:${git_token}@github.com/uturndata/tech-challenge-flask-app.git ~/flask\n cd ~/flask\n-pip install -r requirements.txt\n-gunicorn app:candidates_app\n\\ No newline at end of file\n+python3 -m pip install -r requirements.txt\n+gunicorn -b 0.0.0.0 app:candidates_app -w 4 --log-file ~/flask/gunicorn_logs.log\n\\ No newline at end of file"
      },
      {
        "filename": "modules/app/main.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -24,6 +24,8 @@ resource \"aws_instance\" \"app_instance_1\" {\n \n   user_data = data.template_file.init.rendered\n \n+  depends_on = [var.internet_gateway]\n+\n   tags = {\n     Name = \"${var.app_name}-${var.env_prefix}-instance-1\"\n   }\n@@ -32,6 +34,7 @@ resource \"aws_instance\" \"app_instance_1\" {\n resource \"aws_instance\" \"app_instance_2\" {\n   ami           = data.aws_ami.latest-amazon-linux-image.id\n   instance_type = var.instance_type\n+  iam_instance_profile = var.instance_profile\n \n   availability_zone      = var.avail_zone_2\n   subnet_id              = var.subnet_2_id\n@@ -41,6 +44,8 @@ resource \"aws_instance\" \"app_instance_2\" {\n \n   user_data = data.template_file.init.rendered\n \n+  depends_on = [var.internet_gateway]\n+\n   tags = {\n     Name = \"${var.app_name}-${var.env_prefix}-instance-2\"\n   }"
      },
      {
        "filename": "modules/app/variables.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -9,6 +9,7 @@ variable \"git_token\" {\n }\n variable \"instance_type\" {}\n variable \"instance_profile\" {}\n+variable \"internet_gateway\" {}\n variable \"avail_zone_1\" {}\n variable \"avail_zone_2\" {}\n variable \"subnet_1_id\" {}"
      },
      {
        "filename": "modules/db/main.tf",
        "additions": 5,
        "deletions": 13,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -1,18 +1,10 @@\n-resource \"aws_dynamodb_table\" \"flask-db-table-1\" {\n-  name           = \"${var.app_name}-${var.env_prefix}-FlaskDB\"\n-  billing_mode   = \"PROVISIONED\"\n-  read_capacity  = 1\n-  write_capacity = 1\n-  hash_key       = \"Name\"\n-  range_key      = \"Party\"\n+resource \"aws_dynamodb_table\" \"candidate-table\" { #\"flask-db-table-1\" {\n+  name           = \"Candidates\" #\"${var.app_name}-${var.env_prefix}-FlaskDB\" i wanna use this name if i can pls\n+  billing_mode   = \"PAY_PER_REQUEST\"\n+  hash_key       = \"CandidateName\"\n \n   attribute {\n-    name = \"Name\"\n-    type = \"S\"\n-  }\n-\n-  attribute {\n-    name = \"Party\"\n+    name = \"CandidateName\"\n     type = \"S\"\n   }\n "
      },
      {
        "filename": "modules/db/outputs.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,3 +1,3 @@\n output \"flask_db_table_1\" {\n-    value = aws_dynamodb_table.flask-db-table-1\n+    value = aws_dynamodb_table.candidate-table\n }\n\\ No newline at end of file"
      },
      {
        "filename": "modules/network/main.tf",
        "additions": 45,
        "deletions": 19,
        "changes": 64,
        "status": "modified",
        "patch": "@@ -11,6 +11,7 @@ resource \"aws_subnet\" \"app-subnet-1\" {\n   vpc_id            = aws_vpc.app-vpc.id\n   cidr_block        = var.subnet_cidr_block_1\n   availability_zone = var.avail_zone_1\n+  map_public_ip_on_launch = true\n   tags = {\n     Name = \"${var.app_name}-${var.env_prefix}-subnet-1\"\n   }\n@@ -20,36 +21,61 @@ resource \"aws_subnet\" \"app-subnet-2\" {\n   vpc_id            = aws_vpc.app-vpc.id\n   cidr_block        = var.subnet_cidr_block_2\n   availability_zone = var.avail_zone_2\n+  map_public_ip_on_launch = true\n   tags = {\n     Name = \"${var.app_name}-${var.env_prefix}-subnet-2\"\n   }\n }\n \n-resource \"aws_elb\" \"app-elb\" {\n-  name               = \"app-elb\"\n-  subnets = [aws_subnet.app-subnet-1.id, aws_subnet.app-subnet-2.id]\n+resource \"aws_lb\" \"app-lb\" {\n+  name               = \"app-lb\"\n+  internal           = false\n+  load_balancer_type = \"application\"\n+  security_groups    = [var.elb_security_group_id]\n+  subnets            = [aws_subnet.app-subnet-1.id, aws_subnet.app-subnet-2.id]\n \n-  listener {\n-    instance_port     = 8000\n-    instance_protocol = \"http\"\n-    lb_port           = 80\n-    lb_protocol       = \"http\"\n+  tags = {\n+    Name = \"${var.app_name}-${var.env_prefix}-elb\"\n   }\n-  listener {\n-    instance_port     = 8000\n-    instance_protocol = \"http\"\n-    lb_port           = 80\n-    lb_protocol       = \"http\"\n+}\n+\n+resource \"aws_lb_target_group\" \"app_target_group\" {\n+  name     = \"app-lb-tg\"\n+  port     = 8000\n+  protocol = \"HTTP\"\n+  vpc_id   = \"${aws_vpc.app-vpc.id}\"\n+\n+  health_check {\n+    healthy_threshold   = 3\n+    unhealthy_threshold = 2\n+    timeout             = 3\n+    path                = \"/gtg\"\n+    port                = \"8000\"\n+    interval            = 30\n   }\n+}\n \n-  instances                 = [var.instance_id_1, var.instance_id_2]\n-  cross_zone_load_balancing = true\n-  idle_timeout              = 30\n+resource \"aws_lb_target_group_attachment\" \"instance_1_attachment\" {\n+  target_group_arn = aws_lb_target_group.app_target_group.arn\n+  target_id        = var.instance_id_1\n+  port             = 8000\n+}\n \n-  security_groups = [var.elb_security_group_id]\n+resource \"aws_lb_target_group_attachment\" \"instance_2_attachment\" {\n+  target_group_arn = aws_lb_target_group.app_target_group.arn\n+  target_id        = var.instance_id_2\n+  port             = 8000\n+}\n \n-  tags = {\n-    Name = \"${var.app_name}-${var.env_prefix}-elb\"\n+resource \"aws_lb_listener\" \"app_front_end\" {\n+  load_balancer_arn = aws_lb.app-lb.arn\n+  port              = \"80\"\n+  protocol          = \"HTTP\"\n+\n+  default_action {\n+    type             = \"forward\"\n+\n+    target_group_arn = aws_lb_target_group.app_target_group.arn\n   }\n }\n "
      },
      {
        "filename": "modules/network/outputs.tf",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -11,5 +11,9 @@ output \"subnet-2\" {\n }\n \n output \"elb_public_dns\" {\n-  value = aws_elb.app-elb.dns_name\n+  value = aws_lb.app-lb.dns_name\n+}\n+\n+output \"gateway\" {\n+   value = aws_internet_gateway.app-igw\n }\n\\ No newline at end of file"
      },
      {
        "filename": "modules/security/main.tf",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -6,14 +6,7 @@ resource \"aws_security_group\" \"app-sg\" {\n     from_port   = 22\n     to_port     = 22\n     protocol    = \"tcp\"\n-    security_groups = [aws_security_group.elb-sg.id]\n-  }\n-\n-  ingress {\n-    from_port   = 8000\n-    to_port     = 8000\n-    protocol    = \"tcp\"\n-    security_groups = [aws_security_group.elb-sg.id]\n+    cidr_blocks = [var.my_ip]\n   }\n \n   egress {\n@@ -29,17 +22,19 @@ resource \"aws_security_group\" \"app-sg\" {\n   }\n }\n \n+resource \"aws_security_group_rule\" \"app-sg-rule\" {\n+  type              = \"ingress\"\n+  from_port         = 8000\n+  to_port           = 8000\n+  protocol          = \"tcp\"\n+  security_group_id = aws_security_group.app-sg.id // The group to attach the rule to\n+  source_security_group_id = aws_security_group.elb-sg.id // The group to specify as source\n+}\n+\n resource \"aws_security_group\" \"elb-sg\" {\n   name   = \"${var.app_name}-elb-sg\"\n   vpc_id = var.vpc_id\n \n-  ingress {\n-    from_port   = 22\n-    to_port     = 22\n-    protocol    = \"tcp\"\n-    cidr_blocks = [var.my_ip]\n-  }\n-\n   ingress {\n     from_port   = 80\n     to_port     = 80\n@@ -60,6 +55,15 @@ resource \"aws_security_group\" \"elb-sg\" {\n   }\n }\n \n+resource \"aws_security_group_rule\" \"elb-sg-rule\" {\n+  type              = \"ingress\"\n+  from_port         = 8000\n+  to_port           = 8000\n+  protocol          = \"tcp\"\n+  security_group_id = aws_security_group.elb-sg.id // The group to attach the rule to\n+  source_security_group_id = aws_security_group.app-sg.id // The group to specify as source\n+}\n+\n resource \"aws_key_pair\" \"ssh-key\" {\n   key_name   = \"${var.app_name}-server-key\"\n   public_key = file(var.my_public_key_location)"
      },
      {
        "filename": "modules/security/variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,9 +1,9 @@\n variable \"app_name\" {}\n-variable \"env_prefix\" {}\n variable \"dynamo_table_name\" {}\n+variable \"env_prefix\" {}\n+variable \"elb_dns\" {}\n variable \"git_token\" {}\n variable \"my_public_key_location\" {}\n variable \"my_ip\" {}\n-variable \"elb_dns\" {}\n variable \"secret_name\" {}\n variable \"vpc_id\" {}\n\\ No newline at end of file"
      },
      {
        "filename": "outputs.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,3 +1,9 @@\n+output \"instance_1_public_ip\" {\n+  value = module.app.instance-1.public_ip\n+}\n+output \"instance_2_public_ip\" {\n+  value = module.app.instance-2.public_ip\n+}\n output \"elb_public_dns\" {\n   value = module.network.elb_public_dns\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/KieniL/terraform_setups/commit/37f66bc43f57b1b7a5a897c58cefe09900afd7ef",
    "files": [
      {
        "filename": "applications/azure-aks-example/README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -45,7 +45,7 @@ see [MicrosoftDoc](https://docs.microsoft.com/en-us/azure/aks/configure-azure-cn\n | <a name=\"input_awx_version\"></a> [awx\\_version](#input\\_awx\\_version) | the awx version to deploy | `string` | `\"0.13.0\"` | no |\n | <a name=\"input_default_max_node_count\"></a> [default\\_max\\_node\\_count](#input\\_default\\_max\\_node\\_count) | the max nodecount for the default nodepool | `number` | `3` | no |\n | <a name=\"input_default_min_node_count\"></a> [default\\_min\\_node\\_count](#input\\_default\\_min\\_node\\_count) | the min nodecount for the default nodepool | `number` | `1` | no |\n-| <a name=\"input_default_vm_size\"></a> [default\\_vm\\_size](#input\\_default\\_vm\\_size) | the vm size to use | `string` | `\"Standard_D2s_v3\"` | no |\n+| <a name=\"input_default_vm_size\"></a> [default\\_vm\\_size](#input\\_default\\_vm\\_size) | the vm size to use | `string` | `\"Standard_B2s\"` | no |\n | <a name=\"input_location\"></a> [location](#input\\_location) | location to deploy to | `string` | `\"Germany West Central\"` | no |\n | <a name=\"input_prefix\"></a> [prefix](#input\\_prefix) | the project tag to set for the resources | `string` | `\"tfaks\"` | no |\n | <a name=\"input_project\"></a> [project](#input\\_project) | the project tag to set for the resources | `string` | `\"aks\"` | no |"
      },
      {
        "filename": "applications/azure-aks-example/modules/cluster/README.md",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -22,21 +22,19 @@ No modules.\n |------|------|\n | [azurerm_kubernetes_cluster.aks](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster) | resource |\n | [azurerm_kubernetes_cluster_node_pool.akspool](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster_node_pool) | resource |\n-| [azurerm_role_assignment.aksroleassigments](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/role_assignment) | resource |\n-| [azurerm_role_definition.aksroutetablerole](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/role_definition) | resource |\n-| [azurerm_user_assigned_identity.aksuseridentity](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/user_assigned_identity) | resource |\n \n ## Inputs\n \n | Name | Description | Type | Default | Required |\n |------|-------------|------|---------|:--------:|\n | <a name=\"input_appgw_subnet_id\"></a> [appgw\\_subnet\\_id](#input\\_appgw\\_subnet\\_id) | the subnetId in which to deploy the appgateway to | `any` | n/a | yes |\n-| <a name=\"input_customroutetable_id\"></a> [customroutetable\\_id](#input\\_customroutetable\\_id) | the id of the custom route table as scope for identity | `any` | n/a | yes |\n | <a name=\"input_default_max_node_count\"></a> [default\\_max\\_node\\_count](#input\\_default\\_max\\_node\\_count) | the max nodecount for the default nodepool | `any` | n/a | yes |\n | <a name=\"input_default_min_node_count\"></a> [default\\_min\\_node\\_count](#input\\_default\\_min\\_node\\_count) | the min nodecount for the default nodepool | `any` | n/a | yes |\n+| <a name=\"input_default_pod_subnet_id\"></a> [default\\_pod\\_subnet\\_id](#input\\_default\\_pod\\_subnet\\_id) | the subnetId in which to deploy the pods from default pool to | `any` | n/a | yes |\n | <a name=\"input_default_vm_size\"></a> [default\\_vm\\_size](#input\\_default\\_vm\\_size) | the default vm size to use | `any` | n/a | yes |\n | <a name=\"input_internal_subnet_id\"></a> [internal\\_subnet\\_id](#input\\_internal\\_subnet\\_id) | the internal subnetId in which to deploy to | `any` | n/a | yes |\n | <a name=\"input_location\"></a> [location](#input\\_location) | location to deploy to | `any` | n/a | yes |\n+| <a name=\"input_nodepool_pod_subnet_id\"></a> [nodepool\\_pod\\_subnet\\_id](#input\\_nodepool\\_pod\\_subnet\\_id) | the subnetId in which to deploy the pods from additional pool to | `any` | n/a | yes |\n | <a name=\"input_prefix\"></a> [prefix](#input\\_prefix) | the project tag to set for the resources | `any` | n/a | yes |\n | <a name=\"input_resourcegroupname\"></a> [resourcegroupname](#input\\_resourcegroupname) | the resourcegroupname to set for the resources | `any` | n/a | yes |\n | <a name=\"input_source_ip\"></a> [source\\_ip](#input\\_source\\_ip) | Your external IP | `any` | n/a | yes |"
      },
      {
        "filename": "applications/azure-aks-example/modules/cluster/graph.svg",
        "additions": 195,
        "deletions": 251,
        "changes": 446,
        "status": "modified",
        "patch": "@@ -4,354 +4,298 @@\n <!-- Generated by graphviz version 2.43.0 (0)\n  -->\n <!-- Title: %3 Pages: 1 -->\n-<svg width=\"678pt\" height=\"708pt\"\n- viewBox=\"0.00 0.00 678.00 708.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n-<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 704)\">\n+<svg width=\"398pt\" height=\"1068pt\"\n+ viewBox=\"0.00 0.00 398.00 1068.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n+<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 1064)\">\n <title>%3</title>\n-<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-704 674,-704 674,4 -4,4\"/>\n+<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-1064 394,-1064 394,4 -4,4\"/>\n <g id=\"clust2\" class=\"cluster\">\n <title>cluster[root] azurerm_kubernetes_cluster.aks (expand)_var_</title>\n </g>\n <g id=\"clust3\" class=\"cluster\">\n-<title>cluster[root] azurerm_role_definition.aksroutetablerole (expand)_var_</title>\n-</g>\n-<g id=\"clust4\" class=\"cluster\">\n-<title>cluster[root] azurerm_user_assigned_identity.aksuseridentity (expand)_var_</title>\n-</g>\n-<g id=\"clust5\" class=\"cluster\">\n <title>cluster[root] azurerm_kubernetes_cluster_node_pool.akspool (expand)_var_</title>\n </g>\n-<g id=\"clust6\" class=\"cluster\">\n+<g id=\"clust4\" class=\"cluster\">\n <title>cluster[root] root_output_[root] azurerm_kubernetes_cluster.aks (expand)</title>\n </g>\n <!-- [root] azurerm_kubernetes_cluster.aks (expand) -->\n <g id=\"node_0\" class=\"node\">\n <title>[root] azurerm_kubernetes_cluster.aks (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"412,-466 412,-481 536,-481 536,-466 412,-466\"/>\n-<text text-anchor=\"start\" x=\"415\" y=\"-471.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_kubernetes_cluster</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"412,-451 412,-466 536,-466 536,-451 412,-451\"/>\n-<text text-anchor=\"start\" x=\"467\" y=\"-456.6\" font-family=\"courier new\" font-size=\"8.00\">aks</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"140,-826 140,-841 264,-841 264,-826 140,-826\"/>\n+<text text-anchor=\"start\" x=\"143\" y=\"-831.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_kubernetes_cluster</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"140,-811 140,-826 264,-826 264,-811 140,-811\"/>\n+<text text-anchor=\"start\" x=\"195\" y=\"-816.6\" font-family=\"courier new\" font-size=\"8.00\">aks</text>\n </g>\n-<!-- [root] azurerm_user_assigned_identity.aksuseridentity (expand) -->\n-<g id=\"node_4\" class=\"node\">\n-<title>[root] azurerm_user_assigned_identity.aksuseridentity (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"266,-394 266,-409 408,-409 408,-394 266,-394\"/>\n-<text text-anchor=\"start\" x=\"269\" y=\"-399.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_user_assigned_identity</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"266,-379 266,-394 408,-394 408,-379 266,-379\"/>\n-<text text-anchor=\"start\" x=\"303\" y=\"-384.6\" font-family=\"courier new\" font-size=\"8.00\">aksuseridentity</text>\n+<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] -->\n+<g id=\"node_3\" class=\"node\">\n+<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;]</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"142,-754 142,-769 252,-769 252,-754 142,-754\"/>\n+<text text-anchor=\"start\" x=\"176.5\" y=\"-759.6\" font-family=\"courier new\" font-size=\"8.00\">terraform</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"142,-739 142,-754 252,-754 252,-739 142,-739\"/>\n+<text text-anchor=\"start\" x=\"145\" y=\"-744.6\" font-family=\"courier new\" font-size=\"8.00\">io/hashicorp/azurerm\\&quot;]</text>\n </g>\n-<!-- [root] azurerm_kubernetes_cluster.aks (expand)&#45;&gt;[root] azurerm_user_assigned_identity.aksuseridentity (expand) -->\n+<!-- [root] azurerm_kubernetes_cluster.aks (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] -->\n <g id=\"edge_0\" class=\"edge\">\n-<title>[root] azurerm_kubernetes_cluster.aks (expand)&#45;&gt;[root] azurerm_user_assigned_identity.aksuseridentity (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M440.49,-447.88C422.16,-438.51 399.26,-426.81 379.67,-416.8\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"381.14,-413.62 370.64,-412.19 377.96,-419.86 381.14,-413.62\"/>\n+<title>[root] azurerm_kubernetes_cluster.aks (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;]</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M200.76,-807.7C200.21,-799.98 199.55,-790.71 198.94,-782.11\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"202.43,-781.83 198.22,-772.1 195.44,-782.33 202.43,-781.83\"/>\n </g>\n <!-- [root] var.appgw_subnet_id -->\n-<g id=\"node_7\" class=\"node\">\n+<g id=\"node_4\" class=\"node\">\n <title>[root] var.appgw_subnet_id</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"440,-394 440,-409 514,-409 514,-394 440,-394\"/>\n-<text text-anchor=\"start\" x=\"470\" y=\"-399.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"440,-379 440,-394 514,-394 514,-379 440,-379\"/>\n-<text text-anchor=\"start\" x=\"443\" y=\"-384.6\" font-family=\"courier new\" font-size=\"8.00\">appgw_subnet_id</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"277,-754 277,-769 351,-769 351,-754 277,-754\"/>\n+<text text-anchor=\"start\" x=\"307\" y=\"-759.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"277,-739 277,-754 351,-754 351,-739 277,-739\"/>\n+<text text-anchor=\"start\" x=\"280\" y=\"-744.6\" font-family=\"courier new\" font-size=\"8.00\">appgw_subnet_id</text>\n </g>\n <!-- [root] azurerm_kubernetes_cluster.aks (expand)&#45;&gt;[root] var.appgw_subnet_id -->\n <g id=\"edge_1\" class=\"edge\">\n <title>[root] azurerm_kubernetes_cluster.aks (expand)&#45;&gt;[root] var.appgw_subnet_id</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M474.74,-447.7C475.07,-439.98 475.47,-430.71 475.84,-422.11\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"479.34,-422.25 476.27,-412.1 472.34,-421.95 479.34,-422.25\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M229.4,-807.88C243.91,-798.81 261.92,-787.55 277.59,-777.76\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"279.87,-780.46 286.5,-772.19 276.16,-774.52 279.87,-780.46\"/>\n </g>\n <!-- [root] azurerm_kubernetes_cluster_node_pool.akspool (expand) -->\n <g id=\"node_1\" class=\"node\">\n <title>[root] azurerm_kubernetes_cluster_node_pool.akspool (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"383,-538 383,-553 552,-553 552,-538 383,-538\"/>\n-<text text-anchor=\"start\" x=\"386\" y=\"-543.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_kubernetes_cluster_node_pool</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"383,-523 383,-538 552,-538 552,-523 383,-523\"/>\n-<text text-anchor=\"start\" x=\"451.5\" y=\"-528.6\" font-family=\"courier new\" font-size=\"8.00\">akspool</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"6,-898 6,-913 175,-913 175,-898 6,-898\"/>\n+<text text-anchor=\"start\" x=\"9\" y=\"-903.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_kubernetes_cluster_node_pool</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"6,-883 6,-898 175,-898 175,-883 6,-883\"/>\n+<text text-anchor=\"start\" x=\"74.5\" y=\"-888.6\" font-family=\"courier new\" font-size=\"8.00\">akspool</text>\n </g>\n <!-- [root] azurerm_kubernetes_cluster_node_pool.akspool (expand)&#45;&gt;[root] azurerm_kubernetes_cluster.aks (expand) -->\n-<g id=\"edge_7\" class=\"edge\">\n-<title>[root] azurerm_kubernetes_cluster_node_pool.akspool (expand)&#45;&gt;[root] azurerm_kubernetes_cluster.aks (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M468.73,-519.7C469.5,-511.98 470.43,-502.71 471.29,-494.11\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"474.78,-494.4 472.29,-484.1 467.81,-493.71 474.78,-494.4\"/>\n-</g>\n-<!-- [root] var.spot_max_node_count -->\n-<g id=\"node_17\" class=\"node\">\n-<title>[root] var.spot_max_node_count</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"562,-466 562,-481 654,-481 654,-466 562,-466\"/>\n-<text text-anchor=\"start\" x=\"601\" y=\"-471.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"562,-451 562,-466 654,-466 654,-451 562,-451\"/>\n-<text text-anchor=\"start\" x=\"565\" y=\"-456.6\" font-family=\"courier new\" font-size=\"8.00\">spot_max_node_count</text>\n-</g>\n-<!-- [root] azurerm_kubernetes_cluster_node_pool.akspool (expand)&#45;&gt;[root] var.spot_max_node_count -->\n-<g id=\"edge_8\" class=\"edge\">\n-<title>[root] azurerm_kubernetes_cluster_node_pool.akspool (expand)&#45;&gt;[root] var.spot_max_node_count</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M501.49,-519.88C520.44,-510.47 544.13,-498.71 564.36,-488.67\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"565.97,-491.77 573.37,-484.19 562.86,-485.5 565.97,-491.77\"/>\n-</g>\n-<!-- [root] azurerm_role_assignment.aksroleassigments (expand) -->\n-<g id=\"node_2\" class=\"node\">\n-<title>[root] azurerm_role_assignment.aksroleassigments (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"282,-466 282,-481 392,-481 392,-466 282,-466\"/>\n-<text text-anchor=\"start\" x=\"285\" y=\"-471.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_role_assignment</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"282,-451 282,-466 392,-466 392,-451 282,-451\"/>\n-<text text-anchor=\"start\" x=\"298.5\" y=\"-456.6\" font-family=\"courier new\" font-size=\"8.00\">aksroleassigments</text>\n-</g>\n-<!-- [root] azurerm_role_definition.aksroutetablerole (expand) -->\n-<g id=\"node_3\" class=\"node\">\n-<title>[root] azurerm_role_definition.aksroutetablerole (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"134,-394 134,-409 244,-409 244,-394 134,-394\"/>\n-<text text-anchor=\"start\" x=\"137\" y=\"-399.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_role_definition</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"134,-379 134,-394 244,-394 244,-379 134,-379\"/>\n-<text text-anchor=\"start\" x=\"150.5\" y=\"-384.6\" font-family=\"courier new\" font-size=\"8.00\">aksroutetablerole</text>\n-</g>\n-<!-- [root] azurerm_role_assignment.aksroleassigments (expand)&#45;&gt;[root] azurerm_role_definition.aksroutetablerole (expand) -->\n-<g id=\"edge_11\" class=\"edge\">\n-<title>[root] azurerm_role_assignment.aksroleassigments (expand)&#45;&gt;[root] azurerm_role_definition.aksroutetablerole (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M300.8,-447.88C280.74,-438.39 255.63,-426.51 234.29,-416.42\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"235.62,-413.18 225.09,-412.07 232.63,-419.51 235.62,-413.18\"/>\n-</g>\n-<!-- [root] azurerm_role_assignment.aksroleassigments (expand)&#45;&gt;[root] azurerm_user_assigned_identity.aksuseridentity (expand) -->\n <g id=\"edge_12\" class=\"edge\">\n-<title>[root] azurerm_role_assignment.aksroleassigments (expand)&#45;&gt;[root] azurerm_user_assigned_identity.aksuseridentity (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M337,-447.7C337,-439.98 337,-430.71 337,-422.11\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"340.5,-422.1 337,-412.1 333.5,-422.1 340.5,-422.1\"/>\n+<title>[root] azurerm_kubernetes_cluster_node_pool.akspool (expand)&#45;&gt;[root] azurerm_kubernetes_cluster.aks (expand)</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M117.4,-879.88C131.91,-870.81 149.92,-859.55 165.59,-849.76\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"167.87,-852.46 174.5,-844.19 164.16,-846.52 167.87,-852.46\"/>\n </g>\n-<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] -->\n-<g id=\"node_6\" class=\"node\">\n-<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;]</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"126,-322 126,-337 236,-337 236,-322 126,-322\"/>\n-<text text-anchor=\"start\" x=\"160.5\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">terraform</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"126,-307 126,-322 236,-322 236,-307 126,-307\"/>\n-<text text-anchor=\"start\" x=\"129\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">io/hashicorp/azurerm\\&quot;]</text>\n+<!-- [root] var.nodepool_pod_subnet_id -->\n+<g id=\"node_11\" class=\"node\">\n+<title>[root] var.nodepool_pod_subnet_id</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"16,-826 16,-841 122,-841 122,-826 16,-826\"/>\n+<text text-anchor=\"start\" x=\"62\" y=\"-831.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"16,-811 16,-826 122,-826 122,-811 16,-811\"/>\n+<text text-anchor=\"start\" x=\"19\" y=\"-816.6\" font-family=\"courier new\" font-size=\"8.00\">nodepool_pod_subnet_id</text>\n </g>\n-<!-- [root] azurerm_role_definition.aksroutetablerole (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] -->\n+<!-- [root] azurerm_kubernetes_cluster_node_pool.akspool (expand)&#45;&gt;[root] var.nodepool_pod_subnet_id -->\n <g id=\"edge_13\" class=\"edge\">\n-<title>[root] azurerm_role_definition.aksroutetablerole (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;]</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M187.02,-375.7C186.14,-367.98 185.08,-358.71 184.1,-350.11\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"187.57,-349.64 182.95,-340.1 180.61,-350.44 187.57,-349.64\"/>\n-</g>\n-<!-- [root] var.prefix -->\n-<g id=\"node_14\" class=\"node\">\n-<title>[root] var.prefix</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"264,-322 264,-337 298,-337 298,-322 264,-322\"/>\n-<text text-anchor=\"start\" x=\"274\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"264,-307 264,-322 298,-322 298,-307 264,-307\"/>\n-<text text-anchor=\"start\" x=\"267\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">prefix</text>\n-</g>\n-<!-- [root] azurerm_role_definition.aksroutetablerole (expand)&#45;&gt;[root] var.prefix -->\n-<g id=\"edge_15\" class=\"edge\">\n-<title>[root] azurerm_role_definition.aksroutetablerole (expand)&#45;&gt;[root] var.prefix</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M211.74,-375.7C223.44,-366.8 237.86,-355.82 250.51,-346.2\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"252.68,-348.94 258.52,-340.1 248.44,-343.37 252.68,-348.94\"/>\n-</g>\n-<!-- [root] var.customroutetable_id -->\n-<g id=\"node_8\" class=\"node\">\n-<title>[root] var.customroutetable_id</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"16,-322 16,-337 108,-337 108,-322 16,-322\"/>\n-<text text-anchor=\"start\" x=\"55\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"16,-307 16,-322 108,-322 108,-307 16,-307\"/>\n-<text text-anchor=\"start\" x=\"19\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">customroutetable_id</text>\n-</g>\n-<!-- [root] azurerm_role_definition.aksroutetablerole (expand)&#45;&gt;[root] var.customroutetable_id -->\n-<g id=\"edge_14\" class=\"edge\">\n-<title>[root] azurerm_role_definition.aksroutetablerole (expand)&#45;&gt;[root] var.customroutetable_id</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M157.93,-375.88C141.17,-366.64 120.29,-355.13 102.3,-345.21\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"103.63,-341.95 93.19,-340.19 100.26,-348.08 103.63,-341.95\"/>\n-</g>\n-<!-- [root] azurerm_user_assigned_identity.aksuseridentity (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] -->\n-<g id=\"edge_16\" class=\"edge\">\n-<title>[root] azurerm_user_assigned_identity.aksuseridentity (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;]</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M298.84,-375.88C277.61,-366.35 250.99,-354.41 228.43,-344.28\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"229.59,-340.97 219.04,-340.07 226.73,-347.36 229.59,-340.97\"/>\n-</g>\n-<!-- [root] azurerm_user_assigned_identity.aksuseridentity (expand)&#45;&gt;[root] var.prefix -->\n-<g id=\"edge_18\" class=\"edge\">\n-<title>[root] azurerm_user_assigned_identity.aksuseridentity (expand)&#45;&gt;[root] var.prefix</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M323.16,-375.7C316.51,-367.39 308.42,-357.28 301.11,-348.14\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"303.66,-345.73 294.68,-340.1 298.2,-350.1 303.66,-345.73\"/>\n-</g>\n-<!-- [root] var.location -->\n-<g id=\"node_13\" class=\"node\">\n-<title>[root] var.location</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"338,-322 338,-337 381,-337 381,-322 338,-322\"/>\n-<text text-anchor=\"start\" x=\"352.5\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"338,-307 338,-322 381,-322 381,-307 338,-307\"/>\n-<text text-anchor=\"start\" x=\"341\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">location</text>\n-</g>\n-<!-- [root] azurerm_user_assigned_identity.aksuseridentity (expand)&#45;&gt;[root] var.location -->\n-<g id=\"edge_17\" class=\"edge\">\n-<title>[root] azurerm_user_assigned_identity.aksuseridentity (expand)&#45;&gt;[root] var.location</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M342.44,-375.7C344.89,-367.9 347.84,-358.51 350.57,-349.83\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"353.96,-350.69 353.62,-340.1 347.29,-348.59 353.96,-350.69\"/>\n+<title>[root] azurerm_kubernetes_cluster_node_pool.akspool (expand)&#45;&gt;[root] var.nodepool_pod_subnet_id</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M84.81,-879.7C82.47,-871.9 79.65,-862.51 77.05,-853.83\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"80.36,-852.68 74.13,-844.1 73.65,-854.69 80.36,-852.68\"/>\n </g>\n <!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close) -->\n-<g id=\"node_21\" class=\"node\">\n+<g id=\"node_19\" class=\"node\">\n <title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"412,-610 412,-625 522,-625 522,-610 412,-610\"/>\n-<text text-anchor=\"start\" x=\"446.5\" y=\"-615.6\" font-family=\"courier new\" font-size=\"8.00\">terraform</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"412,-595 412,-610 522,-610 522,-595 412,-595\"/>\n-<text text-anchor=\"start\" x=\"415\" y=\"-600.6\" font-family=\"courier new\" font-size=\"8.00\">io/hashicorp/azurerm\\&quot;]</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"38,-970 38,-985 148,-985 148,-970 38,-970\"/>\n+<text text-anchor=\"start\" x=\"72.5\" y=\"-975.6\" font-family=\"courier new\" font-size=\"8.00\">terraform</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"38,-955 38,-970 148,-970 148,-955 38,-955\"/>\n+<text text-anchor=\"start\" x=\"41\" y=\"-960.6\" font-family=\"courier new\" font-size=\"8.00\">io/hashicorp/azurerm\\&quot;]</text>\n </g>\n <!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_kubernetes_cluster_node_pool.akspool (expand) -->\n-<g id=\"edge_22\" class=\"edge\">\n+<g id=\"edge_18\" class=\"edge\">\n <title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_kubernetes_cluster_node_pool.akspool (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M467,-591.7C467,-583.98 467,-574.71 467,-566.11\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"470.5,-566.1 467,-556.1 463.5,-566.1 470.5,-566.1\"/>\n-</g>\n-<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_role_assignment.aksroleassigments (expand) -->\n-<g id=\"edge_23\" class=\"edge\">\n-<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_role_assignment.aksroleassigments (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M423.96,-591.9C406.6,-583.26 387.53,-571.32 374,-556 358.39,-538.33 348.76,-513.15 343.25,-494.08\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"346.57,-492.95 340.6,-484.2 339.81,-494.76 346.57,-492.95\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M92.26,-951.7C91.93,-943.98 91.53,-934.71 91.16,-926.11\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"94.66,-925.95 90.73,-916.1 87.66,-926.25 94.66,-925.95\"/>\n </g>\n <!-- [root] root -->\n-<g id=\"node_22\" class=\"node\">\n+<g id=\"node_20\" class=\"node\">\n <title>[root] root</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"553,-700 487,-700 487,-664 553,-664 553,-700\"/>\n-<text text-anchor=\"middle\" x=\"520\" y=\"-680.1\" font-family=\"courier new\" font-size=\"8.00\">[root] root</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"179,-1060 113,-1060 113,-1024 179,-1024 179,-1060\"/>\n+<text text-anchor=\"middle\" x=\"146\" y=\"-1040.1\" font-family=\"courier new\" font-size=\"8.00\">[root] root</text>\n </g>\n <!-- [root] root&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close) -->\n-<g id=\"edge_25\" class=\"edge\">\n+<g id=\"edge_20\" class=\"edge\">\n <title>[root] root&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M506.9,-663.7C500.61,-655.39 492.95,-645.28 486.04,-636.14\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"488.78,-633.96 479.95,-628.1 483.2,-638.19 488.78,-633.96\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M132.9,-1023.7C126.61,-1015.39 118.95,-1005.28 112.04,-996.14\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"114.78,-993.96 105.95,-988.1 109.2,-998.19 114.78,-993.96\"/>\n </g>\n <!-- [root] output.kube_config -->\n-<g id=\"node_5\" class=\"node\">\n+<g id=\"node_2\" class=\"node\">\n <title>[root] output.kube_config</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"545,-610 545,-625 601,-625 601,-610 545,-610\"/>\n-<text text-anchor=\"start\" x=\"559\" y=\"-615.6\" font-family=\"courier new\" font-size=\"8.00\">output</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"545,-595 545,-610 601,-610 601,-595 545,-595\"/>\n-<text text-anchor=\"start\" x=\"548\" y=\"-600.6\" font-family=\"courier new\" font-size=\"8.00\">kube_config</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"171,-970 171,-985 227,-985 227,-970 171,-970\"/>\n+<text text-anchor=\"start\" x=\"185\" y=\"-975.6\" font-family=\"courier new\" font-size=\"8.00\">output</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"171,-955 171,-970 227,-970 227,-955 171,-955\"/>\n+<text text-anchor=\"start\" x=\"174\" y=\"-960.6\" font-family=\"courier new\" font-size=\"8.00\">kube_config</text>\n </g>\n <!-- [root] root&#45;&gt;[root] output.kube_config -->\n-<g id=\"edge_24\" class=\"edge\">\n+<g id=\"edge_19\" class=\"edge\">\n <title>[root] root&#45;&gt;[root] output.kube_config</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M533.1,-663.7C539.39,-655.39 547.05,-645.28 553.96,-636.14\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"556.8,-638.19 560.05,-628.1 551.22,-633.96 556.8,-638.19\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M159.1,-1023.7C165.39,-1015.39 173.05,-1005.28 179.96,-996.14\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"182.8,-998.19 186.05,-988.1 177.22,-993.96 182.8,-998.19\"/>\n </g>\n <!-- [root] var.default_max_node_count -->\n-<g id=\"node_9\" class=\"node\">\n+<g id=\"node_5\" class=\"node\">\n <title>[root] var.default_max_node_count</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"432,-322 432,-337 538,-337 538,-322 432,-322\"/>\n-<text text-anchor=\"start\" x=\"478\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"432,-307 432,-322 538,-322 538,-307 432,-307\"/>\n-<text text-anchor=\"start\" x=\"435\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">default_max_node_count</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"268,-682 268,-697 374,-697 374,-682 268,-682\"/>\n+<text text-anchor=\"start\" x=\"314\" y=\"-687.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"268,-667 268,-682 374,-682 374,-667 268,-667\"/>\n+<text text-anchor=\"start\" x=\"271\" y=\"-672.6\" font-family=\"courier new\" font-size=\"8.00\">default_max_node_count</text>\n </g>\n <!-- [root] var.appgw_subnet_id&#45;&gt;[root] var.default_max_node_count -->\n-<g id=\"edge_26\" class=\"edge\">\n+<g id=\"edge_21\" class=\"edge\">\n <title>[root] var.appgw_subnet_id&#45;&gt;[root] var.default_max_node_count</title>\n-<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M478.98,-375.7C480.22,-364.85 481.81,-350.92 483.05,-340.1\"/>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M315.73,-735.7C316.82,-724.85 318.21,-710.92 319.29,-700.1\"/>\n </g>\n <!-- [root] var.default_min_node_count -->\n-<g id=\"node_10\" class=\"node\">\n+<g id=\"node_6\" class=\"node\">\n <title>[root] var.default_min_node_count</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"432,-250 432,-265 538,-265 538,-250 432,-250\"/>\n-<text text-anchor=\"start\" x=\"478\" y=\"-255.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"432,-235 432,-250 538,-250 538,-235 432,-235\"/>\n-<text text-anchor=\"start\" x=\"435\" y=\"-240.6\" font-family=\"courier new\" font-size=\"8.00\">default_min_node_count</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"268,-610 268,-625 374,-625 374,-610 268,-610\"/>\n+<text text-anchor=\"start\" x=\"314\" y=\"-615.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"268,-595 268,-610 374,-610 374,-595 268,-595\"/>\n+<text text-anchor=\"start\" x=\"271\" y=\"-600.6\" font-family=\"courier new\" font-size=\"8.00\">default_min_node_count</text>\n </g>\n <!-- [root] var.default_max_node_count&#45;&gt;[root] var.default_min_node_count -->\n-<g id=\"edge_27\" class=\"edge\">\n+<g id=\"edge_22\" class=\"edge\">\n <title>[root] var.default_max_node_count&#45;&gt;[root] var.default_min_node_count</title>\n-<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M485,-303.7C485,-292.85 485,-278.92 485,-268.1\"/>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M321,-663.7C321,-652.85 321,-638.92 321,-628.1\"/>\n+</g>\n+<!-- [root] var.default_pod_subnet_id -->\n+<g id=\"node_7\" class=\"node\">\n+<title>[root] var.default_pod_subnet_id</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"271,-538 271,-553 372,-553 372,-538 271,-538\"/>\n+<text text-anchor=\"start\" x=\"314.5\" y=\"-543.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"271,-523 271,-538 372,-538 372,-523 271,-523\"/>\n+<text text-anchor=\"start\" x=\"274\" y=\"-528.6\" font-family=\"courier new\" font-size=\"8.00\">default_pod_subnet_id</text>\n+</g>\n+<!-- [root] var.default_min_node_count&#45;&gt;[root] var.default_pod_subnet_id -->\n+<g id=\"edge_23\" class=\"edge\">\n+<title>[root] var.default_min_node_count&#45;&gt;[root] var.default_pod_subnet_id</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M321,-591.7C321,-580.85 321,-566.92 321,-556.1\"/>\n </g>\n <!-- [root] var.default_vm_size -->\n-<g id=\"node_11\" class=\"node\">\n+<g id=\"node_8\" class=\"node\">\n <title>[root] var.default_vm_size</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"448,-178 448,-193 522,-193 522,-178 448,-178\"/>\n-<text text-anchor=\"start\" x=\"478\" y=\"-183.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"448,-163 448,-178 522,-178 522,-163 448,-163\"/>\n-<text text-anchor=\"start\" x=\"451\" y=\"-168.6\" font-family=\"courier new\" font-size=\"8.00\">default_vm_size</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"284,-466 284,-481 358,-481 358,-466 284,-466\"/>\n+<text text-anchor=\"start\" x=\"314\" y=\"-471.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"284,-451 284,-466 358,-466 358,-451 284,-451\"/>\n+<text text-anchor=\"start\" x=\"287\" y=\"-456.6\" font-family=\"courier new\" font-size=\"8.00\">default_vm_size</text>\n </g>\n-<!-- [root] var.default_min_node_count&#45;&gt;[root] var.default_vm_size -->\n-<g id=\"edge_28\" class=\"edge\">\n-<title>[root] var.default_min_node_count&#45;&gt;[root] var.default_vm_size</title>\n-<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M485,-231.7C485,-220.85 485,-206.92 485,-196.1\"/>\n+<!-- [root] var.default_pod_subnet_id&#45;&gt;[root] var.default_vm_size -->\n+<g id=\"edge_24\" class=\"edge\">\n+<title>[root] var.default_pod_subnet_id&#45;&gt;[root] var.default_vm_size</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M321,-519.7C321,-508.85 321,-494.92 321,-484.1\"/>\n </g>\n <!-- [root] var.internal_subnet_id -->\n-<g id=\"node_12\" class=\"node\">\n+<g id=\"node_9\" class=\"node\">\n <title>[root] var.internal_subnet_id</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"441,-106 441,-121 529,-121 529,-106 441,-106\"/>\n-<text text-anchor=\"start\" x=\"478\" y=\"-111.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"441,-91 441,-106 529,-106 529,-91 441,-91\"/>\n-<text text-anchor=\"start\" x=\"444\" y=\"-96.6\" font-family=\"courier new\" font-size=\"8.00\">internal_subnet_id</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"277,-394 277,-409 365,-409 365,-394 277,-394\"/>\n+<text text-anchor=\"start\" x=\"314\" y=\"-399.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"277,-379 277,-394 365,-394 365,-379 277,-379\"/>\n+<text text-anchor=\"start\" x=\"280\" y=\"-384.6\" font-family=\"courier new\" font-size=\"8.00\">internal_subnet_id</text>\n </g>\n <!-- [root] var.default_vm_size&#45;&gt;[root] var.internal_subnet_id -->\n-<g id=\"edge_29\" class=\"edge\">\n+<g id=\"edge_25\" class=\"edge\">\n <title>[root] var.default_vm_size&#45;&gt;[root] var.internal_subnet_id</title>\n-<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M485,-159.7C485,-148.85 485,-134.92 485,-124.1\"/>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M321,-447.7C321,-436.85 321,-422.92 321,-412.1\"/>\n </g>\n-<!-- [root] var.source_ip -->\n-<g id=\"node_16\" class=\"node\">\n-<title>[root] var.source_ip</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"462,-34 462,-49 509,-49 509,-34 462,-34\"/>\n-<text text-anchor=\"start\" x=\"478.5\" y=\"-39.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"462,-19 462,-34 509,-34 509,-19 462,-19\"/>\n-<text text-anchor=\"start\" x=\"465\" y=\"-24.6\" font-family=\"courier new\" font-size=\"8.00\">source_ip</text>\n+<!-- [root] var.location -->\n+<g id=\"node_10\" class=\"node\">\n+<title>[root] var.location</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"300,-322 300,-337 343,-337 343,-322 300,-322\"/>\n+<text text-anchor=\"start\" x=\"314.5\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"300,-307 300,-322 343,-322 343,-307 300,-307\"/>\n+<text text-anchor=\"start\" x=\"303\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">location</text>\n </g>\n-<!-- [root] var.internal_subnet_id&#45;&gt;[root] var.source_ip -->\n-<g id=\"edge_30\" class=\"edge\">\n-<title>[root] var.internal_subnet_id&#45;&gt;[root] var.source_ip</title>\n-<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M485,-87.7C485,-76.85 485,-62.92 485,-52.1\"/>\n+<!-- [root] var.internal_subnet_id&#45;&gt;[root] var.location -->\n+<g id=\"edge_26\" class=\"edge\">\n+<title>[root] var.internal_subnet_id&#45;&gt;[root] var.location</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M321,-375.7C321,-364.85 321,-350.92 321,-340.1\"/>\n+</g>\n+<!-- [root] var.prefix -->\n+<g id=\"node_12\" class=\"node\">\n+<title>[root] var.prefix</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"304,-250 304,-265 338,-265 338,-250 304,-250\"/>\n+<text text-anchor=\"start\" x=\"314\" y=\"-255.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"304,-235 304,-250 338,-250 338,-235 304,-235\"/>\n+<text text-anchor=\"start\" x=\"307\" y=\"-240.6\" font-family=\"courier new\" font-size=\"8.00\">prefix</text>\n+</g>\n+<!-- [root] var.location&#45;&gt;[root] var.prefix -->\n+<g id=\"edge_27\" class=\"edge\">\n+<title>[root] var.location&#45;&gt;[root] var.prefix</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M321,-303.7C321,-292.85 321,-278.92 321,-268.1\"/>\n </g>\n <!-- [root] var.resourcegroupname -->\n-<g id=\"node_15\" class=\"node\">\n+<g id=\"node_13\" class=\"node\">\n <title>[root] var.resourcegroupname</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"325,-250 325,-265 408,-265 408,-250 325,-250\"/>\n-<text text-anchor=\"start\" x=\"359.5\" y=\"-255.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"325,-235 325,-250 408,-250 408,-235 325,-235\"/>\n-<text text-anchor=\"start\" x=\"328\" y=\"-240.6\" font-family=\"courier new\" font-size=\"8.00\">resourcegroupname</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"280,-178 280,-193 363,-193 363,-178 280,-178\"/>\n+<text text-anchor=\"start\" x=\"314.5\" y=\"-183.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"280,-163 280,-178 363,-178 363,-163 280,-163\"/>\n+<text text-anchor=\"start\" x=\"283\" y=\"-168.6\" font-family=\"courier new\" font-size=\"8.00\">resourcegroupname</text>\n </g>\n-<!-- [root] var.location&#45;&gt;[root] var.resourcegroupname -->\n-<g id=\"edge_31\" class=\"edge\">\n-<title>[root] var.location&#45;&gt;[root] var.resourcegroupname</title>\n-<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M360.73,-303.7C361.82,-292.85 363.21,-278.92 364.29,-268.1\"/>\n+<!-- [root] var.prefix&#45;&gt;[root] var.resourcegroupname -->\n+<g id=\"edge_28\" class=\"edge\">\n+<title>[root] var.prefix&#45;&gt;[root] var.resourcegroupname</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M321,-231.7C321,-220.85 321,-206.92 321,-196.1\"/>\n+</g>\n+<!-- [root] var.source_ip -->\n+<g id=\"node_14\" class=\"node\">\n+<title>[root] var.source_ip</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"298,-106 298,-121 345,-121 345,-106 298,-106\"/>\n+<text text-anchor=\"start\" x=\"314.5\" y=\"-111.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"298,-91 298,-106 345,-106 345,-91 298,-91\"/>\n+<text text-anchor=\"start\" x=\"301\" y=\"-96.6\" font-family=\"courier new\" font-size=\"8.00\">source_ip</text>\n+</g>\n+<!-- [root] var.resourcegroupname&#45;&gt;[root] var.source_ip -->\n+<g id=\"edge_29\" class=\"edge\">\n+<title>[root] var.resourcegroupname&#45;&gt;[root] var.source_ip</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M321,-159.7C321,-148.85 321,-134.92 321,-124.1\"/>\n </g>\n <!-- [root] var.tags -->\n-<g id=\"node_20\" class=\"node\">\n+<g id=\"node_18\" class=\"node\">\n <title>[root] var.tags</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"354,-178 354,-193 379,-193 379,-178 354,-178\"/>\n-<text text-anchor=\"start\" x=\"359.5\" y=\"-183.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"354,-163 354,-178 379,-178 379,-163 354,-163\"/>\n-<text text-anchor=\"start\" x=\"357\" y=\"-168.6\" font-family=\"courier new\" font-size=\"8.00\">tags</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"309,-34 309,-49 334,-49 334,-34 309,-34\"/>\n+<text text-anchor=\"start\" x=\"314.5\" y=\"-39.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"309,-19 309,-34 334,-34 334,-19 309,-19\"/>\n+<text text-anchor=\"start\" x=\"312\" y=\"-24.6\" font-family=\"courier new\" font-size=\"8.00\">tags</text>\n </g>\n-<!-- [root] var.resourcegroupname&#45;&gt;[root] var.tags -->\n-<g id=\"edge_32\" class=\"edge\">\n-<title>[root] var.resourcegroupname&#45;&gt;[root] var.tags</title>\n-<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M366,-231.7C366,-220.85 366,-206.92 366,-196.1\"/>\n+<!-- [root] var.source_ip&#45;&gt;[root] var.tags -->\n+<g id=\"edge_30\" class=\"edge\">\n+<title>[root] var.source_ip&#45;&gt;[root] var.tags</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M321,-87.7C321,-76.85 321,-62.92 321,-52.1\"/>\n+</g>\n+<!-- [root] var.spot_max_node_count -->\n+<g id=\"node_15\" class=\"node\">\n+<title>[root] var.spot_max_node_count</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"23,-754 23,-769 115,-769 115,-754 23,-754\"/>\n+<text text-anchor=\"start\" x=\"62\" y=\"-759.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"23,-739 23,-754 115,-754 115,-739 23,-739\"/>\n+<text text-anchor=\"start\" x=\"26\" y=\"-744.6\" font-family=\"courier new\" font-size=\"8.00\">spot_max_node_count</text>\n+</g>\n+<!-- [root] var.nodepool_pod_subnet_id&#45;&gt;[root] var.spot_max_node_count -->\n+<g id=\"edge_31\" class=\"edge\">\n+<title>[root] var.nodepool_pod_subnet_id&#45;&gt;[root] var.spot_max_node_count</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M69,-807.7C69,-796.85 69,-782.92 69,-772.1\"/>\n </g>\n <!-- [root] var.spot_min_node_count -->\n-<g id=\"node_18\" class=\"node\">\n+<g id=\"node_16\" class=\"node\">\n <title>[root] var.spot_min_node_count</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"562,-394 562,-409 654,-409 654,-394 562,-394\"/>\n-<text text-anchor=\"start\" x=\"601\" y=\"-399.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"562,-379 562,-394 654,-394 654,-379 562,-379\"/>\n-<text text-anchor=\"start\" x=\"565\" y=\"-384.6\" font-family=\"courier new\" font-size=\"8.00\">spot_min_node_count</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"23,-682 23,-697 115,-697 115,-682 23,-682\"/>\n+<text text-anchor=\"start\" x=\"62\" y=\"-687.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"23,-667 23,-682 115,-682 115,-667 23,-667\"/>\n+<text text-anchor=\"start\" x=\"26\" y=\"-672.6\" font-family=\"courier new\" font-size=\"8.00\">spot_min_node_count</text>\n </g>\n <!-- [root] var.spot_max_node_count&#45;&gt;[root] var.spot_min_node_count -->\n-<g id=\"edge_33\" class=\"edge\">\n+<g id=\"edge_32\" class=\"edge\">\n <title>[root] var.spot_max_node_count&#45;&gt;[root] var.spot_min_node_count</title>\n-<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M608,-447.7C608,-436.85 608,-422.92 608,-412.1\"/>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M69,-735.7C69,-724.85 69,-710.92 69,-700.1\"/>\n </g>\n <!-- [root] var.spot_vm_sizes -->\n-<g id=\"node_19\" class=\"node\">\n+<g id=\"node_17\" class=\"node\">\n <title>[root] var.spot_vm_sizes</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"576,-322 576,-337 641,-337 641,-322 576,-322\"/>\n-<text text-anchor=\"start\" x=\"601.5\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"576,-307 576,-322 641,-322 641,-307 576,-307\"/>\n-<text text-anchor=\"start\" x=\"579\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">spot_vm_sizes</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"37,-610 37,-625 102,-625 102,-610 37,-610\"/>\n+<text text-anchor=\"start\" x=\"62.5\" y=\"-615.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"37,-595 37,-610 102,-610 102,-595 37,-595\"/>\n+<text text-anchor=\"start\" x=\"40\" y=\"-600.6\" font-family=\"courier new\" font-size=\"8.00\">spot_vm_sizes</text>\n </g>\n <!-- [root] var.spot_min_node_count&#45;&gt;[root] var.spot_vm_sizes -->\n-<g id=\"edge_34\" class=\"edge\">\n+<g id=\"edge_33\" class=\"edge\">\n <title>[root] var.spot_min_node_count&#45;&gt;[root] var.spot_vm_sizes</title>\n-<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M608,-375.7C608,-364.85 608,-350.92 608,-340.1\"/>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M69,-663.7C69,-652.85 69,-638.92 69,-628.1\"/>\n </g>\n <!-- [root] output.kube_config&#45;&gt;[root] azurerm_kubernetes_cluster.aks (expand) -->\n-<g id=\"edge_21\" class=\"edge\">\n+<g id=\"edge_17\" class=\"edge\">\n <title>[root] output.kube_config&#45;&gt;[root] azurerm_kubernetes_cluster.aks (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M574.84,-591.77C576,-572.66 575.16,-541.67 561,-520 552.67,-507.25 540.09,-497.08 527.08,-489.2\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"528.47,-485.96 518.04,-484.1 525.03,-492.06 528.47,-485.96\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M199.36,-951.87C199.87,-927.67 200.81,-883.21 201.42,-854.39\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"204.92,-854.26 201.64,-844.19 197.93,-854.11 204.92,-854.26\"/>\n </g>\n </g>\n </svg>"
      },
      {
        "filename": "applications/azure-aks-example/modules/vnet/README.md",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -20,11 +20,10 @@ No modules.\n \n | Name | Type |\n |------|------|\n-| [azurerm_route_table.podroutetable](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/route_table) | resource |\n | [azurerm_subnet.appgw](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/subnet) | resource |\n+| [azurerm_subnet.defaultpod](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/subnet) | resource |\n | [azurerm_subnet.internal](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/subnet) | resource |\n-| [azurerm_subnet_route_table_association.podappgwrouteassoc](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/subnet_route_table_association) | resource |\n-| [azurerm_subnet_route_table_association.podnoderouteassoc](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/subnet_route_table_association) | resource |\n+| [azurerm_subnet.nodepoolpod](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/subnet) | resource |\n | [azurerm_virtual_network.vnet](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network) | resource |\n \n ## Inputs\n@@ -41,6 +40,7 @@ No modules.\n | Name | Description |\n |------|-------------|\n | <a name=\"output_appgw_subnet_id\"></a> [appgw\\_subnet\\_id](#output\\_appgw\\_subnet\\_id) | n/a |\n-| <a name=\"output_customroutetable_id\"></a> [customroutetable\\_id](#output\\_customroutetable\\_id) | n/a |\n+| <a name=\"output_default_pod_subnet_id\"></a> [default\\_pod\\_subnet\\_id](#output\\_default\\_pod\\_subnet\\_id) | n/a |\n | <a name=\"output_internal_subnet_id\"></a> [internal\\_subnet\\_id](#output\\_internal\\_subnet\\_id) | n/a |\n+| <a name=\"output_nodepool_pod_subnet_id\"></a> [nodepool\\_pod\\_subnet\\_id](#output\\_nodepool\\_pod\\_subnet\\_id) | n/a |\n <!-- END_TF_DOCS -->\n\\ No newline at end of file"
      },
      {
        "filename": "applications/azure-aks-example/modules/vnet/graph.svg",
        "additions": 204,
        "deletions": 216,
        "changes": 420,
        "status": "modified",
        "patch": "@@ -4,292 +4,280 @@\n <!-- Generated by graphviz version 2.43.0 (0)\n  -->\n <!-- Title: %3 Pages: 1 -->\n-<svg width=\"582pt\" height=\"420pt\"\n- viewBox=\"0.00 0.00 581.50 420.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n-<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 416)\">\n+<svg width=\"604pt\" height=\"564pt\"\n+ viewBox=\"0.00 0.00 604.00 564.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n+<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 560)\">\n <title>%3</title>\n-<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-416 577.5,-416 577.5,4 -4,4\"/>\n+<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-560 600,-560 600,4 -4,4\"/>\n <g id=\"clust2\" class=\"cluster\">\n <title>cluster[root] azurerm_virtual_network.vnet (expand)_var_</title>\n </g>\n <g id=\"clust3\" class=\"cluster\">\n <title>cluster[root] root_output_[root] azurerm_subnet.appgw (expand)</title>\n </g>\n <g id=\"clust4\" class=\"cluster\">\n-<title>cluster[root] root_output_[root] azurerm_route_table.podroutetable (expand)</title>\n+<title>cluster[root] root_output_[root] azurerm_subnet.defaultpod (expand)</title>\n </g>\n <g id=\"clust5\" class=\"cluster\">\n <title>cluster[root] root_output_[root] azurerm_subnet.internal (expand)</title>\n </g>\n-<!-- [root] azurerm_route_table.podroutetable (expand) -->\n-<g id=\"node_0\" class=\"node\">\n-<title>[root] azurerm_route_table.podroutetable (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"116.5,-178 116.5,-193 208.5,-193 208.5,-178 116.5,-178\"/>\n-<text text-anchor=\"start\" x=\"119.5\" y=\"-183.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_route_table</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"116.5,-163 116.5,-178 208.5,-178 208.5,-163 116.5,-163\"/>\n-<text text-anchor=\"start\" x=\"133\" y=\"-168.6\" font-family=\"courier new\" font-size=\"8.00\">podroutetable</text>\n-</g>\n-<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] -->\n-<g id=\"node_9\" class=\"node\">\n-<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;]</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"101.5,-34 101.5,-49 211.5,-49 211.5,-34 101.5,-34\"/>\n-<text text-anchor=\"start\" x=\"136\" y=\"-39.6\" font-family=\"courier new\" font-size=\"8.00\">terraform</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"101.5,-19 101.5,-34 211.5,-34 211.5,-19 101.5,-19\"/>\n-<text text-anchor=\"start\" x=\"104.5\" y=\"-24.6\" font-family=\"courier new\" font-size=\"8.00\">io/hashicorp/azurerm\\&quot;]</text>\n-</g>\n-<!-- [root] azurerm_route_table.podroutetable (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] -->\n-<g id=\"edge_0\" class=\"edge\">\n-<title>[root] azurerm_route_table.podroutetable (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;]</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M161.78,-159.87C160.75,-135.67 158.88,-91.21 157.66,-62.39\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"161.15,-62.03 157.23,-52.19 154.15,-62.33 161.15,-62.03\"/>\n-</g>\n-<!-- [root] var.location -->\n-<g id=\"node_10\" class=\"node\">\n-<title>[root] var.location</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"235.5,-34 235.5,-49 278.5,-49 278.5,-34 235.5,-34\"/>\n-<text text-anchor=\"start\" x=\"250\" y=\"-39.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"235.5,-19 235.5,-34 278.5,-34 278.5,-19 235.5,-19\"/>\n-<text text-anchor=\"start\" x=\"238.5\" y=\"-24.6\" font-family=\"courier new\" font-size=\"8.00\">location</text>\n-</g>\n-<!-- [root] azurerm_route_table.podroutetable (expand)&#45;&gt;[root] var.location -->\n-<g id=\"edge_1\" class=\"edge\">\n-<title>[root] azurerm_route_table.podroutetable (expand)&#45;&gt;[root] var.location</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M171.3,-159.78C180.9,-141.48 197.09,-111.94 213.5,-88 220,-78.52 227.75,-68.62 234.86,-59.97\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"237.7,-62.03 241.43,-52.12 232.33,-57.54 237.7,-62.03\"/>\n-</g>\n-<!-- [root] var.resourcegroupname -->\n-<g id=\"node_12\" class=\"node\">\n-<title>[root] var.resourcegroupname</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"0.5,-34 0.5,-49 83.5,-49 83.5,-34 0.5,-34\"/>\n-<text text-anchor=\"start\" x=\"35\" y=\"-39.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"0.5,-19 0.5,-34 83.5,-34 83.5,-19 0.5,-19\"/>\n-<text text-anchor=\"start\" x=\"3.5\" y=\"-24.6\" font-family=\"courier new\" font-size=\"8.00\">resourcegroupname</text>\n-</g>\n-<!-- [root] azurerm_route_table.podroutetable (expand)&#45;&gt;[root] var.resourcegroupname -->\n-<g id=\"edge_2\" class=\"edge\">\n-<title>[root] azurerm_route_table.podroutetable (expand)&#45;&gt;[root] var.resourcegroupname</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M147.9,-159.87C126.74,-135.03 87.38,-88.85 62.92,-60.14\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"65.3,-57.53 56.15,-52.19 59.97,-62.07 65.3,-57.53\"/>\n-</g>\n-<!-- [root] var.tags -->\n-<g id=\"node_13\" class=\"node\">\n-<title>[root] var.tags</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"388.5,-34 388.5,-49 413.5,-49 413.5,-34 388.5,-34\"/>\n-<text text-anchor=\"start\" x=\"394\" y=\"-39.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"388.5,-19 388.5,-34 413.5,-34 413.5,-19 388.5,-19\"/>\n-<text text-anchor=\"start\" x=\"391.5\" y=\"-24.6\" font-family=\"courier new\" font-size=\"8.00\">tags</text>\n-</g>\n-<!-- [root] azurerm_route_table.podroutetable (expand)&#45;&gt;[root] var.tags -->\n-<g id=\"edge_3\" class=\"edge\">\n-<title>[root] azurerm_route_table.podroutetable (expand)&#45;&gt;[root] var.tags</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M208.86,-165.04C258.2,-152.03 330.65,-132.02 341.5,-124 363.28,-107.9 379.41,-81.19 389.26,-61.22\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"392.49,-62.58 393.58,-52.04 386.15,-59.6 392.49,-62.58\"/>\n+<g id=\"clust6\" class=\"cluster\">\n+<title>cluster[root] root_output_[root] azurerm_subnet.nodepoolpod (expand)</title>\n </g>\n <!-- [root] azurerm_subnet.appgw (expand) -->\n-<g id=\"node_1\" class=\"node\">\n+<g id=\"node_0\" class=\"node\">\n <title>[root] azurerm_subnet.appgw (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"238.5,-178 238.5,-193 308.5,-193 308.5,-178 238.5,-178\"/>\n-<text text-anchor=\"start\" x=\"241.5\" y=\"-183.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_subnet</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"238.5,-163 238.5,-178 308.5,-178 308.5,-163 238.5,-163\"/>\n-<text text-anchor=\"start\" x=\"262\" y=\"-168.6\" font-family=\"courier new\" font-size=\"8.00\">appgw</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"122,-394 122,-409 192,-409 192,-394 122,-394\"/>\n+<text text-anchor=\"start\" x=\"125\" y=\"-399.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_subnet</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"122,-379 122,-394 192,-394 192,-379 122,-379\"/>\n+<text text-anchor=\"start\" x=\"145.5\" y=\"-384.6\" font-family=\"courier new\" font-size=\"8.00\">appgw</text>\n </g>\n <!-- [root] azurerm_virtual_network.vnet (expand) -->\n-<g id=\"node_5\" class=\"node\">\n+<g id=\"node_4\" class=\"node\">\n <title>[root] azurerm_virtual_network.vnet (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"222.5,-106 222.5,-121 332.5,-121 332.5,-106 222.5,-106\"/>\n-<text text-anchor=\"start\" x=\"225.5\" y=\"-111.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_virtual_network</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"222.5,-91 222.5,-106 332.5,-106 332.5,-91 222.5,-91\"/>\n-<text text-anchor=\"start\" x=\"268\" y=\"-96.6\" font-family=\"courier new\" font-size=\"8.00\">vnet</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"234,-322 234,-337 344,-337 344,-322 234,-322\"/>\n+<text text-anchor=\"start\" x=\"237\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_virtual_network</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"234,-307 234,-322 344,-322 344,-307 234,-307\"/>\n+<text text-anchor=\"start\" x=\"279.5\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">vnet</text>\n </g>\n <!-- [root] azurerm_subnet.appgw (expand)&#45;&gt;[root] azurerm_virtual_network.vnet (expand) -->\n-<g id=\"edge_4\" class=\"edge\">\n+<g id=\"edge_0\" class=\"edge\">\n <title>[root] azurerm_subnet.appgw (expand)&#45;&gt;[root] azurerm_virtual_network.vnet (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M274.49,-159.7C274.93,-151.98 275.46,-142.71 275.95,-134.11\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"279.45,-134.29 276.52,-124.1 272.46,-133.89 279.45,-134.29\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M189.29,-375.88C206.87,-366.55 228.81,-354.92 247.63,-344.94\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"249.39,-347.97 256.59,-340.19 246.11,-341.78 249.39,-347.97\"/>\n+</g>\n+<!-- [root] azurerm_subnet.defaultpod (expand) -->\n+<g id=\"node_1\" class=\"node\">\n+<title>[root] azurerm_subnet.defaultpod (expand)</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"210,-394 210,-409 280,-409 280,-394 210,-394\"/>\n+<text text-anchor=\"start\" x=\"213\" y=\"-399.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_subnet</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"210,-379 210,-394 280,-394 280,-379 210,-379\"/>\n+<text text-anchor=\"start\" x=\"222\" y=\"-384.6\" font-family=\"courier new\" font-size=\"8.00\">defaultpod</text>\n+</g>\n+<!-- [root] azurerm_subnet.defaultpod (expand)&#45;&gt;[root] azurerm_virtual_network.vnet (expand) -->\n+<g id=\"edge_1\" class=\"edge\">\n+<title>[root] azurerm_subnet.defaultpod (expand)&#45;&gt;[root] azurerm_virtual_network.vnet (expand)</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M255.88,-375.7C260.99,-367.56 267.2,-357.69 272.84,-348.7\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"275.89,-350.43 278.25,-340.1 269.96,-346.71 275.89,-350.43\"/>\n </g>\n <!-- [root] azurerm_subnet.internal (expand) -->\n <g id=\"node_2\" class=\"node\">\n <title>[root] azurerm_subnet.internal (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"326.5,-178 326.5,-193 396.5,-193 396.5,-178 326.5,-178\"/>\n-<text text-anchor=\"start\" x=\"329.5\" y=\"-183.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_subnet</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"326.5,-163 326.5,-178 396.5,-178 396.5,-163 326.5,-163\"/>\n-<text text-anchor=\"start\" x=\"343\" y=\"-168.6\" font-family=\"courier new\" font-size=\"8.00\">internal</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"298,-394 298,-409 368,-409 368,-394 298,-394\"/>\n+<text text-anchor=\"start\" x=\"301\" y=\"-399.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_subnet</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"298,-379 298,-394 368,-394 368,-379 298,-379\"/>\n+<text text-anchor=\"start\" x=\"314.5\" y=\"-384.6\" font-family=\"courier new\" font-size=\"8.00\">internal</text>\n </g>\n <!-- [root] azurerm_subnet.internal (expand)&#45;&gt;[root] azurerm_virtual_network.vnet (expand) -->\n-<g id=\"edge_5\" class=\"edge\">\n+<g id=\"edge_2\" class=\"edge\">\n <title>[root] azurerm_subnet.internal (expand)&#45;&gt;[root] azurerm_virtual_network.vnet (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M340.74,-159.7C330.26,-150.97 317.39,-140.24 306,-130.75\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"307.95,-127.82 298.03,-124.1 303.47,-133.19 307.95,-127.82\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M322.12,-375.7C317.01,-367.56 310.8,-357.69 305.16,-348.7\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"308.04,-346.71 299.75,-340.1 302.11,-350.43 308.04,-346.71\"/>\n </g>\n-<!-- [root] azurerm_subnet_route_table_association.podappgwrouteassoc (expand) -->\n+<!-- [root] azurerm_subnet.nodepoolpod (expand) -->\n <g id=\"node_3\" class=\"node\">\n-<title>[root] azurerm_subnet_route_table_association.podappgwrouteassoc (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"73.5,-250 73.5,-265 251.5,-265 251.5,-250 73.5,-250\"/>\n-<text text-anchor=\"start\" x=\"76.5\" y=\"-255.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_subnet_route_table_association</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"73.5,-235 73.5,-250 251.5,-250 251.5,-235 73.5,-235\"/>\n-<text text-anchor=\"start\" x=\"121.5\" y=\"-240.6\" font-family=\"courier new\" font-size=\"8.00\">podappgwrouteassoc</text>\n-</g>\n-<!-- [root] azurerm_subnet_route_table_association.podappgwrouteassoc (expand)&#45;&gt;[root] azurerm_route_table.podroutetable (expand) -->\n-<g id=\"edge_6\" class=\"edge\">\n-<title>[root] azurerm_subnet_route_table_association.podappgwrouteassoc (expand)&#45;&gt;[root] azurerm_route_table.podroutetable (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M162.5,-231.7C162.5,-223.98 162.5,-214.71 162.5,-206.11\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"166,-206.1 162.5,-196.1 159,-206.1 166,-206.1\"/>\n-</g>\n-<!-- [root] azurerm_subnet_route_table_association.podappgwrouteassoc (expand)&#45;&gt;[root] azurerm_subnet.appgw (expand) -->\n-<g id=\"edge_7\" class=\"edge\">\n-<title>[root] azurerm_subnet_route_table_association.podappgwrouteassoc (expand)&#45;&gt;[root] azurerm_subnet.appgw (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M189.65,-231.88C204.03,-222.81 221.88,-211.55 237.41,-201.76\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"239.65,-204.48 246.24,-196.19 235.92,-198.56 239.65,-204.48\"/>\n-</g>\n-<!-- [root] azurerm_subnet_route_table_association.podnoderouteassoc (expand) -->\n-<g id=\"node_4\" class=\"node\">\n-<title>[root] azurerm_subnet_route_table_association.podnoderouteassoc (expand)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"269.5,-250 269.5,-265 447.5,-265 447.5,-250 269.5,-250\"/>\n-<text text-anchor=\"start\" x=\"272.5\" y=\"-255.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_subnet_route_table_association</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"269.5,-235 269.5,-250 447.5,-250 447.5,-235 269.5,-235\"/>\n-<text text-anchor=\"start\" x=\"320\" y=\"-240.6\" font-family=\"courier new\" font-size=\"8.00\">podnoderouteassoc</text>\n-</g>\n-<!-- [root] azurerm_subnet_route_table_association.podnoderouteassoc (expand)&#45;&gt;[root] azurerm_route_table.podroutetable (expand) -->\n-<g id=\"edge_8\" class=\"edge\">\n-<title>[root] azurerm_subnet_route_table_association.podnoderouteassoc (expand)&#45;&gt;[root] azurerm_route_table.podroutetable (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M310.8,-231.97C282.91,-222 247.55,-209.38 218.36,-198.95\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"219.31,-195.57 208.72,-195.51 216.96,-202.17 219.31,-195.57\"/>\n-</g>\n-<!-- [root] azurerm_subnet_route_table_association.podnoderouteassoc (expand)&#45;&gt;[root] azurerm_subnet.internal (expand) -->\n-<g id=\"edge_9\" class=\"edge\">\n-<title>[root] azurerm_subnet_route_table_association.podnoderouteassoc (expand)&#45;&gt;[root] azurerm_subnet.internal (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M359.24,-231.7C359.57,-223.98 359.97,-214.71 360.34,-206.11\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"363.84,-206.25 360.77,-196.1 356.84,-205.95 363.84,-206.25\"/>\n+<title>[root] azurerm_subnet.nodepoolpod (expand)</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"386,-394 386,-409 456,-409 456,-394 386,-394\"/>\n+<text text-anchor=\"start\" x=\"389\" y=\"-399.6\" font-family=\"courier new\" font-size=\"8.00\">azurerm_subnet</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"386,-379 386,-394 456,-394 456,-379 386,-379\"/>\n+<text text-anchor=\"start\" x=\"396\" y=\"-384.6\" font-family=\"courier new\" font-size=\"8.00\">nodepoolpod</text>\n+</g>\n+<!-- [root] azurerm_subnet.nodepoolpod (expand)&#45;&gt;[root] azurerm_virtual_network.vnet (expand) -->\n+<g id=\"edge_3\" class=\"edge\">\n+<title>[root] azurerm_subnet.nodepoolpod (expand)&#45;&gt;[root] azurerm_virtual_network.vnet (expand)</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M388.71,-375.88C371.13,-366.55 349.19,-354.92 330.37,-344.94\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"331.89,-341.78 321.41,-340.19 328.61,-347.97 331.89,-341.78\"/>\n+</g>\n+<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] -->\n+<g id=\"node_9\" class=\"node\">\n+<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;]</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"184,-250 184,-265 294,-265 294,-250 184,-250\"/>\n+<text text-anchor=\"start\" x=\"218.5\" y=\"-255.6\" font-family=\"courier new\" font-size=\"8.00\">terraform</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"184,-235 184,-250 294,-250 294,-235 184,-235\"/>\n+<text text-anchor=\"start\" x=\"187\" y=\"-240.6\" font-family=\"courier new\" font-size=\"8.00\">io/hashicorp/azurerm\\&quot;]</text>\n </g>\n <!-- [root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] -->\n-<g id=\"edge_10\" class=\"edge\">\n+<g id=\"edge_4\" class=\"edge\">\n <title>[root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;]</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M247.9,-87.88C231.93,-78.64 212.04,-67.13 194.89,-57.21\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"196.62,-54.17 186.21,-52.19 193.12,-60.23 196.62,-54.17\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M276.64,-303.7C270.77,-295.47 263.63,-285.48 257.16,-276.42\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"259.88,-274.21 251.22,-268.1 254.18,-278.28 259.88,-274.21\"/>\n+</g>\n+<!-- [root] var.location -->\n+<g id=\"node_10\" class=\"node\">\n+<title>[root] var.location</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"324,-250 324,-265 367,-265 367,-250 324,-250\"/>\n+<text text-anchor=\"start\" x=\"338.5\" y=\"-255.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"324,-235 324,-250 367,-250 367,-235 324,-235\"/>\n+<text text-anchor=\"start\" x=\"327\" y=\"-240.6\" font-family=\"courier new\" font-size=\"8.00\">location</text>\n </g>\n <!-- [root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] var.location -->\n-<g id=\"edge_11\" class=\"edge\">\n+<g id=\"edge_5\" class=\"edge\">\n <title>[root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] var.location</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M272.31,-87.7C269.97,-79.9 267.15,-70.51 264.55,-61.83\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"267.86,-60.68 261.63,-52.1 261.15,-62.69 267.86,-60.68\"/>\n-</g>\n-<!-- [root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] var.resourcegroupname -->\n-<g id=\"edge_13\" class=\"edge\">\n-<title>[root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] var.resourcegroupname</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M222.34,-94.86C185.07,-87.21 135.08,-75.41 92.5,-60 89.39,-58.88 86.23,-57.62 83.07,-56.28\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"84.25,-52.97 73.69,-52.08 81.39,-59.36 84.25,-52.97\"/>\n-</g>\n-<!-- [root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] var.tags -->\n-<g id=\"edge_14\" class=\"edge\">\n-<title>[root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] var.tags</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M315.56,-87.89C331.92,-80.05 351.03,-70.23 367.5,-60 368.45,-59.41 369.4,-58.8 370.35,-58.18\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"372.67,-60.83 378.89,-52.26 368.68,-55.08 372.67,-60.83\"/>\n-</g>\n-<!-- [root] var.prefix -->\n-<g id=\"node_11\" class=\"node\">\n-<title>[root] var.prefix</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"311.5,-34 311.5,-49 345.5,-49 345.5,-34 311.5,-34\"/>\n-<text text-anchor=\"start\" x=\"321.5\" y=\"-39.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"311.5,-19 311.5,-34 345.5,-34 345.5,-19 311.5,-19\"/>\n-<text text-anchor=\"start\" x=\"314.5\" y=\"-24.6\" font-family=\"courier new\" font-size=\"8.00\">prefix</text>\n-</g>\n-<!-- [root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] var.prefix -->\n-<g id=\"edge_12\" class=\"edge\">\n-<title>[root] azurerm_virtual_network.vnet (expand)&#45;&gt;[root] var.prefix</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M290.11,-87.7C296.1,-79.47 303.38,-69.48 309.98,-60.42\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"312.98,-62.25 316.04,-52.1 307.32,-58.13 312.98,-62.25\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M302.84,-303.7C309.49,-295.39 317.58,-285.28 324.89,-276.14\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"327.8,-278.1 331.32,-268.1 322.34,-273.73 327.8,-278.1\"/>\n </g>\n <!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close) -->\n <g id=\"node_14\" class=\"node\">\n <title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"243.5,-322 243.5,-337 353.5,-337 353.5,-322 243.5,-322\"/>\n-<text text-anchor=\"start\" x=\"278\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">terraform</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"243.5,-307 243.5,-322 353.5,-322 353.5,-307 243.5,-307\"/>\n-<text text-anchor=\"start\" x=\"246.5\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">io/hashicorp/azurerm\\&quot;]</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"234,-466 234,-481 344,-481 344,-466 234,-466\"/>\n+<text text-anchor=\"start\" x=\"268.5\" y=\"-471.6\" font-family=\"courier new\" font-size=\"8.00\">terraform</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"234,-451 234,-466 344,-466 344,-451 234,-451\"/>\n+<text text-anchor=\"start\" x=\"237\" y=\"-456.6\" font-family=\"courier new\" font-size=\"8.00\">io/hashicorp/azurerm\\&quot;]</text>\n </g>\n-<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet_route_table_association.podappgwrouteassoc (expand) -->\n-<g id=\"edge_18\" class=\"edge\">\n-<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet_route_table_association.podappgwrouteassoc (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M265.23,-303.88C247.04,-294.51 224.31,-282.81 204.86,-272.8\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"206.39,-269.65 195.9,-268.19 203.19,-275.88 206.39,-269.65\"/>\n+<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet.appgw (expand) -->\n+<g id=\"edge_13\" class=\"edge\">\n+<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet.appgw (expand)</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M256.71,-447.88C239.13,-438.55 217.19,-426.92 198.37,-416.94\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"199.89,-413.78 189.41,-412.19 196.61,-419.97 199.89,-413.78\"/>\n </g>\n-<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet_route_table_association.podnoderouteassoc (expand) -->\n-<g id=\"edge_19\" class=\"edge\">\n-<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet_route_table_association.podnoderouteassoc (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M313.33,-303.7C320.52,-295.3 329.3,-285.07 337.19,-275.86\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"339.99,-277.97 343.84,-268.1 334.67,-273.42 339.99,-277.97\"/>\n+<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet.defaultpod (expand) -->\n+<g id=\"edge_14\" class=\"edge\">\n+<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet.defaultpod (expand)</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M278.12,-447.7C273.01,-439.56 266.8,-429.69 261.16,-420.7\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"264.04,-418.71 255.75,-412.1 258.11,-422.43 264.04,-418.71\"/>\n+</g>\n+<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet.internal (expand) -->\n+<g id=\"edge_15\" class=\"edge\">\n+<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet.internal (expand)</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M299.88,-447.7C304.99,-439.56 311.2,-429.69 316.84,-420.7\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"319.89,-422.43 322.25,-412.1 313.96,-418.71 319.89,-422.43\"/>\n+</g>\n+<!-- [root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet.nodepoolpod (expand) -->\n+<g id=\"edge_16\" class=\"edge\">\n+<title>[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)&#45;&gt;[root] azurerm_subnet.nodepoolpod (expand)</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M321.29,-447.88C338.87,-438.55 360.81,-426.92 379.63,-416.94\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"381.39,-419.97 388.59,-412.19 378.11,-413.78 381.39,-419.97\"/>\n </g>\n <!-- [root] root -->\n <g id=\"node_15\" class=\"node\">\n <title>[root] root</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"386.5,-412 320.5,-412 320.5,-376 386.5,-376 386.5,-412\"/>\n-<text text-anchor=\"middle\" x=\"353.5\" y=\"-392.1\" font-family=\"courier new\" font-size=\"8.00\">[root] root</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"322,-556 256,-556 256,-520 322,-520 322,-556\"/>\n+<text text-anchor=\"middle\" x=\"289\" y=\"-536.1\" font-family=\"courier new\" font-size=\"8.00\">[root] root</text>\n </g>\n <!-- [root] root&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close) -->\n-<g id=\"edge_23\" class=\"edge\">\n+<g id=\"edge_21\" class=\"edge\">\n <title>[root] root&#45;&gt;[root] provider[&quot;registry.terraform.io/hashicorp/azurerm&quot;] (close)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M339.9,-375.7C333.38,-367.39 325.43,-357.28 318.25,-348.14\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"320.87,-345.81 311.94,-340.1 315.37,-350.13 320.87,-345.81\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M289,-519.7C289,-511.98 289,-502.71 289,-494.11\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"292.5,-494.1 289,-484.1 285.5,-494.1 292.5,-494.1\"/>\n </g>\n <!-- [root] output.appgw_subnet_id -->\n-<g id=\"node_6\" class=\"node\">\n+<g id=\"node_5\" class=\"node\">\n <title>[root] output.appgw_subnet_id</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"371.5,-322 371.5,-337 445.5,-337 445.5,-322 371.5,-322\"/>\n-<text text-anchor=\"start\" x=\"394.5\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">output</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"371.5,-307 371.5,-322 445.5,-322 445.5,-307 371.5,-307\"/>\n-<text text-anchor=\"start\" x=\"374.5\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">appgw_subnet_id</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"16,-466 16,-481 90,-481 90,-466 16,-466\"/>\n+<text text-anchor=\"start\" x=\"39\" y=\"-471.6\" font-family=\"courier new\" font-size=\"8.00\">output</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"16,-451 16,-466 90,-466 90,-451 16,-451\"/>\n+<text text-anchor=\"start\" x=\"19\" y=\"-456.6\" font-family=\"courier new\" font-size=\"8.00\">appgw_subnet_id</text>\n </g>\n <!-- [root] root&#45;&gt;[root] output.appgw_subnet_id -->\n-<g id=\"edge_20\" class=\"edge\">\n+<g id=\"edge_17\" class=\"edge\">\n <title>[root] root&#45;&gt;[root] output.appgw_subnet_id</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M367.1,-375.7C373.62,-367.39 381.57,-357.28 388.75,-348.14\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"391.63,-350.13 395.06,-340.1 386.13,-345.81 391.63,-350.13\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M255.88,-531.47C217.95,-524.59 154.31,-511.33 102,-492 98.95,-490.87 95.85,-489.61 92.77,-488.26\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"94.15,-485.04 83.61,-484 91.21,-491.39 94.15,-485.04\"/>\n </g>\n-<!-- [root] output.customroutetable_id -->\n-<g id=\"node_7\" class=\"node\">\n-<title>[root] output.customroutetable_id</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"66.5,-322 66.5,-337 158.5,-337 158.5,-322 66.5,-322\"/>\n-<text text-anchor=\"start\" x=\"98.5\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">output</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"66.5,-307 66.5,-322 158.5,-322 158.5,-307 66.5,-307\"/>\n-<text text-anchor=\"start\" x=\"69.5\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">customroutetable_id</text>\n+<!-- [root] output.default_pod_subnet_id -->\n+<g id=\"node_6\" class=\"node\">\n+<title>[root] output.default_pod_subnet_id</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"115,-466 115,-481 216,-481 216,-466 115,-466\"/>\n+<text text-anchor=\"start\" x=\"151.5\" y=\"-471.6\" font-family=\"courier new\" font-size=\"8.00\">output</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"115,-451 115,-466 216,-466 216,-451 115,-451\"/>\n+<text text-anchor=\"start\" x=\"118\" y=\"-456.6\" font-family=\"courier new\" font-size=\"8.00\">default_pod_subnet_id</text>\n </g>\n-<!-- [root] root&#45;&gt;[root] output.customroutetable_id -->\n-<g id=\"edge_21\" class=\"edge\">\n-<title>[root] root&#45;&gt;[root] output.customroutetable_id</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M320.5,-383.41C281.38,-372.05 215.58,-352.94 168.46,-339.25\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"169.28,-335.85 158.7,-336.42 167.33,-342.57 169.28,-335.85\"/>\n+<!-- [root] root&#45;&gt;[root] output.default_pod_subnet_id -->\n+<g id=\"edge_18\" class=\"edge\">\n+<title>[root] root&#45;&gt;[root] output.default_pod_subnet_id</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M258.67,-519.88C242.3,-510.64 221.92,-499.13 204.35,-489.21\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"205.88,-486.06 195.45,-484.19 202.44,-492.15 205.88,-486.06\"/>\n </g>\n <!-- [root] output.internal_subnet_id -->\n-<g id=\"node_8\" class=\"node\">\n+<g id=\"node_7\" class=\"node\">\n <title>[root] output.internal_subnet_id</title>\n-<polygon fill=\"none\" stroke=\"black\" points=\"469.5,-322 469.5,-337 557.5,-337 557.5,-322 469.5,-322\"/>\n-<text text-anchor=\"start\" x=\"499.5\" y=\"-327.6\" font-family=\"courier new\" font-size=\"8.00\">output</text>\n-<polygon fill=\"none\" stroke=\"black\" points=\"469.5,-307 469.5,-322 557.5,-322 557.5,-307 469.5,-307\"/>\n-<text text-anchor=\"start\" x=\"472.5\" y=\"-312.6\" font-family=\"courier new\" font-size=\"8.00\">internal_subnet_id</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"362,-466 362,-481 450,-481 450,-466 362,-466\"/>\n+<text text-anchor=\"start\" x=\"392\" y=\"-471.6\" font-family=\"courier new\" font-size=\"8.00\">output</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"362,-451 362,-466 450,-466 450,-451 362,-451\"/>\n+<text text-anchor=\"start\" x=\"365\" y=\"-456.6\" font-family=\"courier new\" font-size=\"8.00\">internal_subnet_id</text>\n </g>\n <!-- [root] root&#45;&gt;[root] output.internal_subnet_id -->\n-<g id=\"edge_22\" class=\"edge\">\n+<g id=\"edge_19\" class=\"edge\">\n <title>[root] root&#45;&gt;[root] output.internal_subnet_id</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M386.8,-378.71C407.23,-369.91 433.91,-358.37 457.5,-348 460.33,-346.75 463.24,-345.47 466.18,-344.17\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"467.85,-347.26 475.57,-340 465.01,-340.86 467.85,-347.26\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M317.62,-519.88C332.92,-510.72 351.94,-499.34 368.42,-489.48\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"370.48,-492.33 377.27,-484.19 366.89,-486.32 370.48,-492.33\"/>\n+</g>\n+<!-- [root] output.nodepool_pod_subnet_id -->\n+<g id=\"node_8\" class=\"node\">\n+<title>[root] output.nodepool_pod_subnet_id</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"474,-466 474,-481 580,-481 580,-466 474,-466\"/>\n+<text text-anchor=\"start\" x=\"513\" y=\"-471.6\" font-family=\"courier new\" font-size=\"8.00\">output</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"474,-451 474,-466 580,-466 580,-451 474,-451\"/>\n+<text text-anchor=\"start\" x=\"477\" y=\"-456.6\" font-family=\"courier new\" font-size=\"8.00\">nodepool_pod_subnet_id</text>\n+</g>\n+<!-- [root] root&#45;&gt;[root] output.nodepool_pod_subnet_id -->\n+<g id=\"edge_20\" class=\"edge\">\n+<title>[root] root&#45;&gt;[root] output.nodepool_pod_subnet_id</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M322.16,-529.55C357.22,-521.4 413.99,-507.42 462,-492 466.26,-490.63 470.64,-489.14 475.03,-487.58\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"476.39,-490.81 484.59,-484.1 473.99,-484.23 476.39,-490.81\"/>\n+</g>\n+<!-- [root] var.prefix -->\n+<g id=\"node_11\" class=\"node\">\n+<title>[root] var.prefix</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"331,-178 331,-193 365,-193 365,-178 331,-178\"/>\n+<text text-anchor=\"start\" x=\"341\" y=\"-183.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"331,-163 331,-178 365,-178 365,-163 331,-163\"/>\n+<text text-anchor=\"start\" x=\"334\" y=\"-168.6\" font-family=\"courier new\" font-size=\"8.00\">prefix</text>\n+</g>\n+<!-- [root] var.location&#45;&gt;[root] var.prefix -->\n+<g id=\"edge_22\" class=\"edge\">\n+<title>[root] var.location&#45;&gt;[root] var.prefix</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M345.74,-231.7C346.21,-220.85 346.8,-206.92 347.27,-196.1\"/>\n+</g>\n+<!-- [root] var.resourcegroupname -->\n+<g id=\"node_12\" class=\"node\">\n+<title>[root] var.resourcegroupname</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"311,-106 311,-121 394,-121 394,-106 311,-106\"/>\n+<text text-anchor=\"start\" x=\"345.5\" y=\"-111.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"311,-91 311,-106 394,-106 394,-91 311,-91\"/>\n+<text text-anchor=\"start\" x=\"314\" y=\"-96.6\" font-family=\"courier new\" font-size=\"8.00\">resourcegroupname</text>\n+</g>\n+<!-- [root] var.prefix&#45;&gt;[root] var.resourcegroupname -->\n+<g id=\"edge_23\" class=\"edge\">\n+<title>[root] var.prefix&#45;&gt;[root] var.resourcegroupname</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M348.99,-159.7C349.61,-148.85 350.4,-134.92 351.02,-124.1\"/>\n+</g>\n+<!-- [root] var.tags -->\n+<g id=\"node_13\" class=\"node\">\n+<title>[root] var.tags</title>\n+<polygon fill=\"none\" stroke=\"black\" points=\"340,-34 340,-49 365,-49 365,-34 340,-34\"/>\n+<text text-anchor=\"start\" x=\"345.5\" y=\"-39.6\" font-family=\"courier new\" font-size=\"8.00\">var</text>\n+<polygon fill=\"none\" stroke=\"black\" points=\"340,-19 340,-34 365,-34 365,-19 340,-19\"/>\n+<text text-anchor=\"start\" x=\"343\" y=\"-24.6\" font-family=\"courier new\" font-size=\"8.00\">tags</text>\n+</g>\n+<!-- [root] var.resourcegroupname&#45;&gt;[root] var.tags -->\n+<g id=\"edge_24\" class=\"edge\">\n+<title>[root] var.resourcegroupname&#45;&gt;[root] var.tags</title>\n+<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"5,2\" d=\"M352,-87.7C352,-76.85 352,-62.92 352,-52.1\"/>\n </g>\n <!-- [root] output.appgw_subnet_id&#45;&gt;[root] azurerm_subnet.appgw (expand) -->\n-<g id=\"edge_15\" class=\"edge\">\n+<g id=\"edge_9\" class=\"edge\">\n <title>[root] output.appgw_subnet_id&#45;&gt;[root] azurerm_subnet.appgw (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M429.1,-303.94C449.16,-285.26 474.23,-254.91 456.5,-232 419.35,-184 382.08,-212.41 318.86,-195.99\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"319.5,-192.53 308.92,-193.09 317.54,-199.25 319.5,-192.53\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M78.44,-447.88C91.79,-438.89 108.32,-427.76 122.78,-418.03\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"125.12,-420.68 131.46,-412.19 121.21,-414.87 125.12,-420.68\"/>\n </g>\n-<!-- [root] output.customroutetable_id&#45;&gt;[root] azurerm_route_table.podroutetable (expand) -->\n-<g id=\"edge_16\" class=\"edge\">\n-<title>[root] output.customroutetable_id&#45;&gt;[root] azurerm_route_table.podroutetable (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M90.79,-303.79C80.74,-294.41 69.86,-281.9 64.5,-268 58.74,-253.07 56.31,-245.74 64.5,-232 74.11,-215.88 90.51,-204.36 107.18,-196.28\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"108.73,-199.42 116.43,-192.13 105.87,-193.03 108.73,-199.42\"/>\n+<!-- [root] output.default_pod_subnet_id&#45;&gt;[root] azurerm_subnet.defaultpod (expand) -->\n+<g id=\"edge_10\" class=\"edge\">\n+<title>[root] output.default_pod_subnet_id&#45;&gt;[root] azurerm_subnet.defaultpod (expand)</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M184.78,-447.7C194.75,-438.97 207.01,-428.24 217.86,-418.75\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"220.23,-421.32 225.45,-412.1 215.62,-416.06 220.23,-421.32\"/>\n </g>\n <!-- [root] output.internal_subnet_id&#45;&gt;[root] azurerm_subnet.internal (expand) -->\n-<g id=\"edge_17\" class=\"edge\">\n+<g id=\"edge_11\" class=\"edge\">\n <title>[root] output.internal_subnet_id&#45;&gt;[root] azurerm_subnet.internal (expand)</title>\n-<path fill=\"none\" stroke=\"black\" d=\"M509.63,-303.88C504.43,-284.3 493.43,-252.32 473.5,-232 455.13,-213.27 428.85,-200.36 406.36,-191.97\"/>\n-<polygon fill=\"black\" stroke=\"black\" points=\"407.25,-188.57 396.66,-188.54 404.92,-195.17 407.25,-188.57\"/>\n+<path fill=\"none\" stroke=\"black\" d=\"M387.96,-447.7C378.94,-439.05 367.88,-428.45 358.06,-419.03\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"360.48,-416.5 350.84,-412.1 355.63,-421.55 360.48,-416.5\"/>\n+</g>\n+<!-- [root] output.nodepool_pod_subnet_id&#45;&gt;[root] azurerm_subnet.nodepoolpod (expand) -->\n+<g id=\"edge_12\" class=\"edge\">\n+<title>[root] output.nodepool_pod_subnet_id&#45;&gt;[root] azurerm_subnet.nodepoolpod (expand)</title>\n+<path fill=\"none\" stroke=\"black\" d=\"M501.07,-447.88C487.34,-438.81 470.29,-427.55 455.46,-417.76\"/>\n+<polygon fill=\"black\" stroke=\"black\" points=\"457.3,-414.78 447.03,-412.19 453.45,-420.62 457.3,-414.78\"/>\n </g>\n </g>\n </svg>"
      },
      {
        "filename": "applications/azure-aks-example/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -21,7 +21,7 @@ variable \"awx_version\" {\n \n variable \"default_vm_size\" {\n   description = \"the vm size to use\"\n-  default     = \"Standard_D2s_v3\"\n+  default     = \"Standard_B2s\"\n }\n \n variable \"spot_vm_sizes\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["azure", "cheaper_instance"],
    "notes": "Move from Standard_D2s_v3 to Standard_B2s"
  },
  {
    "url": "https://github.com/alhardy-net/terraform-core-aws-alhardynet-networking/commit/30be6aa1969e37d512153b558540fe714b635c4c",
    "files": [
      {
        "filename": "vpc/main.tf",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -33,8 +33,8 @@ module \"public-subnet\" {\n   aws_region             = local.aws_region\n   igw_id                 = module.aws-vpc.igw_id\n   name                   = \"${local.name}-public\"\n-  enable_nat_gateway     = true\n-  use_single_nat_gateway = var.use_single_nat_gateway\n+  enable_nat_gateway     = false # Disable for now, saving cost\n+  # use_single_nat_gateway = var.use_single_nat_gateway # Disable for now, saving cost\n   subnet_count           = var.public_subnet_count\n   vpc_id                 = module.aws-vpc.vpc_id\n   subnet_cidr            = local.public_subnet_cidr\n@@ -45,7 +45,7 @@ module \"private-application-subnet\" {\n   version               = \"0.0.3\"\n   aws_region            = local.aws_region\n   name                  = \"${local.name}-private-application\"\n-  nat_gateway_ids       = module.public-subnet.nat_gateway_ids\n+  nat_gateway_ids       = [] # Disable for now, saving cost, module.public-subnet.nat_gateway_ids\n   subnet_cidr           = local.private_application_subnet_cidr\n   subnet_count          = var.private_application_subnet_count\n   vpc_id                = module.aws-vpc.vpc_id\n@@ -57,11 +57,9 @@ module \"private-persistence-subnet\" {\n   version               = \"0.0.3\"\n   aws_region            = local.aws_region\n   name                  = \"${local.name}-private-persistence\"\n-  nat_gateway_ids       = module.public-subnet.nat_gateway_ids\n+  nat_gateway_ids       = [] # Disable for now, saving cost, module.public-subnet.nat_gateway_ids\n   subnet_cidr           = local.private_persistence_subnet_cidr\n   subnet_count          = var.private_persistence_subnet_count\n   vpc_id                = module.aws-vpc.vpc_id\n   allow_internet_access = true\n-}\n-\n-# TODO: Implement VPC Flow log module allow to create a S3 backed flow log for the VPC and Subnets\n\\ No newline at end of file\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_nat_gateway"],
    "notes": "Remove NAT gateway in VPC 'for now' to save costs"
  },
  {
    "url": "https://github.com/alhardy-net/terraform-core-aws-alhardynet-networking/commit/f7b96f0b28008f8aed881cc211a5f3fdb3ae67ac",
    "files": [
      {
        "filename": "vpc/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -49,7 +49,7 @@ module \"private-application-subnet\" {\n   subnet_cidr           = local.private_application_subnet_cidr\n   subnet_count          = var.private_application_subnet_count\n   vpc_id                = module.aws-vpc.vpc_id\n-  allow_internet_access = true\n+  allow_internet_access = false\n }\n \n module \"private-persistence-subnet\" {"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_nat_gateway"],
    "notes": "Remove NAT gateway in VPC"
  },
  {
    "url": "https://github.com/alhardy-net/terraform-core-aws-alhardynet-networking/commit/b26b9e5d1b13602a4c192d9697a12df7770906b2",
    "files": [
      {
        "filename": "vpc/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -61,5 +61,5 @@ module \"private-persistence-subnet\" {\n   subnet_cidr           = local.private_persistence_subnet_cidr\n   subnet_count          = var.private_persistence_subnet_count\n   vpc_id                = module.aws-vpc.vpc_id\n-  allow_internet_access = true\n+  allow_internet_access = false\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_nat_gateway"],
    "notes": "Remove NAT gateway in VPC"
  },
  {
    "url": "https://github.com/kperson/terraform-modules/commit/53bd2d84776f9ed7ae287fc59ed42f87bd7bbc4b",
    "files": [
      {
        "filename": "auto-scaled-dynamo/main.tf",
        "additions": 39,
        "deletions": 26,
        "changes": 65,
        "status": "modified",
        "patch": "@@ -22,18 +22,22 @@ variable \"ttl_attribute\" {\n   default = null\n }\n \n+variable \"billing_mode\" {\n+  default = \"PROVISIONED\"\n+}\n+\n variable \"global_secondary_indices\" {\n   type = list(object({\n-    name = string\n-    hash_key = string\n+    name      = string\n+    hash_key  = string\n     range_key = string\n   }))\n   default = []\n }\n \n variable \"local_secondary_indices\" {\n   type = list(object({\n-    name = string\n+    name      = string\n     range_key = string\n   }))\n   default = []\n@@ -45,6 +49,7 @@ variable \"max_capacity\" {\n \n resource \"aws_dynamodb_table\" \"table\" {\n   name           = var.table_name\n+  billing_mode   = var.billing_mode\n   read_capacity  = 1\n   write_capacity = 1\n   hash_key       = var.hash_key\n@@ -57,7 +62,7 @@ resource \"aws_dynamodb_table\" \"table\" {\n       type = attribute.value.type\n     }\n   }\n-  \n+\n \n   dynamic \"global_secondary_index\" {\n     for_each = var.global_secondary_indices\n@@ -129,6 +134,7 @@ data \"aws_iam_policy_document\" \"scale_policy_doc\" {\n }\n \n resource \"aws_appautoscaling_target\" \"read_target\" {\n+  count              = var.billing_mode == \"PROVISIONED\" ? 1 : 0\n   max_capacity       = var.max_capacity\n   min_capacity       = 1\n   resource_id        = format(\"table/%s\", aws_dynamodb_table.table.id)\n@@ -137,6 +143,8 @@ resource \"aws_appautoscaling_target\" \"read_target\" {\n }\n \n resource \"aws_appautoscaling_policy\" \"ready_polciy\" {\n+  count = var.billing_mode == \"PROVISIONED\" ? 1 : 0\n+\n   name               = format(\"DynamoDBReadCapacityUtilization:%s\", aws_appautoscaling_target.read_target.resource_id)\n   policy_type        = \"TargetTrackingScaling\"\n   resource_id        = aws_appautoscaling_target.read_target.resource_id\n@@ -155,6 +163,8 @@ resource \"aws_appautoscaling_policy\" \"ready_polciy\" {\n }\n \n resource \"aws_appautoscaling_target\" \"write_target\" {\n+  count = var.billing_mode == \"PROVISIONED\" ? 1 : 0\n+\n   max_capacity       = var.max_capacity\n   min_capacity       = 1\n   resource_id        = format(\"table/%s\", aws_dynamodb_table.table.id)\n@@ -163,6 +173,8 @@ resource \"aws_appautoscaling_target\" \"write_target\" {\n }\n \n resource \"aws_appautoscaling_policy\" \"write_policy\" {\n+  count = var.billing_mode == \"PROVISIONED\" ? 1 : 0\n+\n   name               = format(\"DynamoDBWriteCapacityUtilization:%s\", aws_appautoscaling_target.write_target.resource_id)\n   policy_type        = \"TargetTrackingScaling\"\n   resource_id        = aws_appautoscaling_target.write_target.resource_id\n@@ -181,22 +193,23 @@ resource \"aws_appautoscaling_policy\" \"write_policy\" {\n }\n \n resource \"aws_appautoscaling_target\" \"dynamodb_index_read_target\" {\n-  count = length(var.global_secondary_indices)\n-  max_capacity = var.max_capacity\n-  min_capacity = 1\n-  resource_id = format(\"table/%s/index/%s\", aws_dynamodb_table.table.id, var.global_secondary_indices[count.index].name)\n+\n+  count              = var.billing_mode == \"PROVISIONED\" ? length(var.global_secondary_indices) : 0\n+  max_capacity       = var.max_capacity\n+  min_capacity       = 1\n+  resource_id        = format(\"table/%s/index/%s\", aws_dynamodb_table.table.id, var.global_secondary_indices[count.index].name)\n   scalable_dimension = \"dynamodb:index:ReadCapacityUnits\"\n-  service_namespace = \"dynamodb\"\n+  service_namespace  = \"dynamodb\"\n }\n \n resource \"aws_appautoscaling_policy\" \"dynamodb_index_read_policy\" {\n-  depends_on = [aws_appautoscaling_target.dynamodb_index_read_target]\n-  count = length(var.global_secondary_indices)\n-  name = format(\"DynamoDBReadCapacityUtilization:Index_%s\", var.global_secondary_indices[count.index].name)\n-  policy_type = \"TargetTrackingScaling\"\n-  resource_id = format(\"table/%s/index/%s\", aws_dynamodb_table.table.id, var.global_secondary_indices[count.index].name)\n+  depends_on         = [aws_appautoscaling_target.dynamodb_index_read_target]\n+  count              = var.billing_mode == \"PROVISIONED\" ? length(var.global_secondary_indices) : 0\n+  name               = format(\"DynamoDBReadCapacityUtilization:Index_%s\", var.global_secondary_indices[count.index].name)\n+  policy_type        = \"TargetTrackingScaling\"\n+  resource_id        = format(\"table/%s/index/%s\", aws_dynamodb_table.table.id, var.global_secondary_indices[count.index].name)\n   scalable_dimension = \"dynamodb:index:ReadCapacityUnits\"\n-  service_namespace = \"dynamodb\"\n+  service_namespace  = \"dynamodb\"\n \n   target_tracking_scaling_policy_configuration {\n     predefined_metric_specification {\n@@ -209,22 +222,22 @@ resource \"aws_appautoscaling_policy\" \"dynamodb_index_read_policy\" {\n }\n \n resource \"aws_appautoscaling_target\" \"dynamodb_index_write_target\" {\n-  count = length(var.global_secondary_indices)\n-  max_capacity = var.max_capacity\n-  min_capacity = 1\n-  resource_id = format(\"table/%s/index/%s\", aws_dynamodb_table.table.id, var.global_secondary_indices[count.index].name)\n+  count              = var.billing_mode == \"PROVISIONED\" ? length(var.global_secondary_indices) : 0\n+  max_capacity       = var.max_capacity\n+  min_capacity       = 1\n+  resource_id        = format(\"table/%s/index/%s\", aws_dynamodb_table.table.id, var.global_secondary_indices[count.index].name)\n   scalable_dimension = \"dynamodb:index:WriteCapacityUnits\"\n-  service_namespace = \"dynamodb\"\n+  service_namespace  = \"dynamodb\"\n }\n \n resource \"aws_appautoscaling_policy\" \"dynamodb_index_write_policy\" {\n-  depends_on = [aws_appautoscaling_target.dynamodb_index_write_target]\n-  count = length(var.global_secondary_indices)\n-  name = format(\"DynamoDBReadCapacityUtilization:Index_%s\", var.global_secondary_indices[count.index].name)\n-  policy_type = \"TargetTrackingScaling\"\n-  resource_id = format(\"table/%s/index/%s\", aws_dynamodb_table.table.id, var.global_secondary_indices[count.index].name)\n+  depends_on         = [aws_appautoscaling_target.dynamodb_index_write_target]\n+  count              = var.billing_mode == \"PROVISIONED\" ? length(var.global_secondary_indices) : 0\n+  name               = format(\"DynamoDBReadCapacityUtilization:Index_%s\", var.global_secondary_indices[count.index].name)\n+  policy_type        = \"TargetTrackingScaling\"\n+  resource_id        = format(\"table/%s/index/%s\", aws_dynamodb_table.table.id, var.global_secondary_indices[count.index].name)\n   scalable_dimension = \"dynamodb:index:WriteCapacityUnits\"\n-  service_namespace = \"dynamodb\"\n+  service_namespace  = \"dynamodb\"\n \n   target_tracking_scaling_policy_configuration {\n     predefined_metric_specification {"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/digio/terraform-google-gitlab-runner/commit/07f8279fe65a35c0e595f3171f3d75791e49a9ae",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -44,7 +44,7 @@ variable \"ci_runner_gitlab_name\" {\n }\n variable \"ci_runner_instance_type\" {\n   type        = string\n-  default     = \"e2-micro\"\n+  default     = \"f1-micro\"\n   description = <<EOF\n The instance type used for the runner. This shouldn't need to be changed because the builds\n themselves run on separate worker instances."
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["gcp", "cheaper_instance"],
    "notes": "Move from e2-micro to f1-micro"
  },
  {
    "url": "https://github.com/jharley/azure-basic-demo/commit/7cd3d202d8723c565704f23c143cae3b1e1d6d2b",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -118,7 +118,7 @@ resource \"azurerm_virtual_machine\" \"myterraformvm\" {\n   location              = \"eastus\"\n   resource_group_name   = \"${azurerm_resource_group.myterraformgroup.name}\"\n   network_interface_ids = [\"${azurerm_network_interface.myterraformnic.id}\"]\n-  vm_size               = \"Standard_DS2\"\n+  vm_size               = \"Standard_DS1\"\n \n   storage_os_disk {\n     name              = \"myOsDisk\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["azure", "cheaper_instance"],
    "notes": "Move from Standard_DS2 to Standard_DS1"
  },
  {
    "url": "https://github.com/juliandunn/terraform-chefserver/commit/3971011e4253cb5b98fdf77a558f5ef8f34d2653",
    "files": [
      {
        "filename": "vars.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -4,8 +4,9 @@ variable \"region\" {\n \n variable \"amis\" {\n     default = {\n-        us-east-1 = \"ami-12663b7a\"\n-        us-west-2 = \"ami-4dbf9e7d\"\n+        us-east-1 = \"ami-96a818fe\"\n+        us-west-1 = \"ami-6bcfc42e\"\n+        us-west-2 = \"ami-c7d092f7\"\n     }\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_os"],
    "notes": "Move to CentOS 7 which is cheaper"
  },
  {
    "url": "https://github.com/NedimRenesalis/demblock-pipeline/commit/9edee1a04f6056f367ce5ef678775c1203d6a778",
    "files": [
      {
        "filename": ".github/workflows/infra-deploy.yml",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -14,10 +14,10 @@ env:\n   # Project specific\n   GCP_PROJECT        : demblock-prod\n   TF_VAR_GKE_CLUSTER : eu-demblock-cluster\n-  TF_VAR_GKE_REGION  : europe-north1\n-  TF_VAR_GKE_ZONE    : europe-north1-a\n+  TF_VAR_GKE_REGION  : europe-west1\n+  TF_VAR_GKE_ZONE    : europe-west1-b\n   TF_VAR_DB_INSTANCE : eu-db-demblock\n-  TF_VAR_DB_LOCATION : europe-north1\n+  TF_VAR_DB_LOCATION : europe-west1\n   TF_VAR_SQL_USER    : ${{ secrets.DB_USERNAME }}\n   TF_VAR_SQL_PASSWORD: ${{ secrets.DB_PASSWORD }}\n   DOCKER_PASSWORD    : ${{ secrets.DOCKER_PASSWORD }}"
      },
      {
        "filename": ".github/workflows/infra-destroy.yml",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -10,10 +10,10 @@ env:\n   # Project specific\n \n   TF_VAR_GKE_CLUSTER : eu-demblock-cluster\n-  TF_VAR_GKE_ZONE    : europe-north1-a\n-  TF_VAR_GKE_REGION  : europe-north1\n+  TF_VAR_GKE_ZONE    : europe-west1-b\n+  TF_VAR_GKE_REGION  : europe-west1\n   TF_VAR_DB_INSTANCE : eu-db-demblock\n-  TF_VAR_DB_LOCATION : europe-north1\n+  TF_VAR_DB_LOCATION : europe-west1\n   TF_VAR_SQL_USER    : ${{ secrets.DB_USERNAME }}\n   TF_VAR_SQL_PASSWORD: ${{ secrets.DB_PASSWORD }}\n   "
      },
      {
        "filename": ".github/workflows/infra-pr.yml",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -11,9 +11,9 @@ on:\n env:\n   # Project specific\n   TF_VAR_GKE_CLUSTER : eu-demblock-cluster\n-  TF_VAR_GKE_ZONE    : europe-north1-a\n+  TF_VAR_GKE_ZONE    : europe-west1-b\n   TF_VAR_DB_INSTANCE : eu-db-demblock\n-  TF_VAR_DB_LOCATION : europe-north1\n+  TF_VAR_DB_LOCATION : europe-west1\n \n   # User specific\n   TF_VAR_SQL_USER    : ${{ secrets.DB_USERNAME }}"
      },
      {
        "filename": ".github/workflows/secrets-mgmt.yml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -40,7 +40,7 @@ jobs:\n         env:\n           GCP_PROJECT    : demblock-prod\n           GKE_CLUSTER    : eu-demblock-cluster\n-          GKE_ZONE       : europe-north1-a\n+          GKE_ZONE       : europe-west1-b\n           DB_HOST        : ${{ secrets.DB_HOST }}\n           SMTP_HOST      : ${{ secrets.SMTP_HOST }}\n           SMTP_PORT      : ${{ secrets.SMTP_PORT }}"
      },
      {
        "filename": "infrastructure/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -2,7 +2,7 @@\n # Terraform state will be stored in Google Bucket\n terraform {\n   backend \"gcs\" {\n-    bucket = \"tf-demblock\"\n+    bucket = \"tf-demblock-prod\"\n     prefix = \"terraform/state\"\n   }\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": ["gcp", "cheaper_area"],
    "notes": "Move region from europe-north1 to europe-west2 and zone from europe-north1-a to europe-west2-b"
  },
  {
    "url": "https://github.com/pangeo-data/terraform-deploy/commit/f8163bd52bea3774e2f160cff0523c602e65d933",
    "files": [
      {
        "filename": "aws/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -90,7 +90,7 @@ module \"eks\" {\n      max_capacity     = 10\n      min_capacity     = 1\n \n-     instance_type = \"m5.xlarge\"\n+     instance_type = \"m5.large\"\n      k8s_labels = {\n        \"hub.jupyter.org/node-purpose\" =  \"user\"\n      }"
      },
      {
        "filename": "aws/values.yaml",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -20,11 +20,11 @@ singleuser:\n   defaultUrl: \"/lab\"\n   startTimeout: 600\n   cpu:\n-    limit: 4\n-    guarantee: 3\n+    limit: 2\n+    guarantee: 1.5\n   memory:\n-    limit: 16G\n-    guarantee: 14G\n+    limit: 9.5G\n+    guarantee: 9G\n \n   profileList:\n     - display_name: \"Base-notebook (m5.2xlarge | 4 cores, 16Gb)\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "less_memory", "less_cpu"],
    "notes": "Move from m5.xlarge to m5.large, CPU limit/guarantee from 4/3 to 2/1.5, memory limit/guarantee from 16G/14G to 9.5G/9G"
  },
  {
    "url": "https://github.com/pangeo-data/terraform-deploy/commit/7244eed07a1008675f45cc4349bf68141bb29edc",
    "files": [
      {
        "filename": "aws/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -78,7 +78,7 @@ module \"eks\" {\n       max_capacity     = 3\n       min_capacity     = 1\n \n-      instance_type = \"m5.large\"\n+      instance_type = \"t3.micro\"\n       k8s_labels    = {\n         \"hub.jupyter.org/node-purpose\" =  \"core\"\n       }\n@@ -90,7 +90,7 @@ module \"eks\" {\n      max_capacity     = 10\n      min_capacity     = 1\n \n-     instance_type = \"m5.large\"\n+     instance_type = \"t3.medium\"\n      k8s_labels = {\n        \"hub.jupyter.org/node-purpose\" =  \"user\"\n      }"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "Move from m5.large to t3.micro and t3.medium"
  },
  {
    "url": "https://github.com/fluent-labs/infrastructure/commit/c166c9356246b540be28f56c7240e69e45f5b973",
    "files": [
      {
        "filename": "infrastructure.tf",
        "additions": 1,
        "deletions": 17,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -35,23 +35,6 @@ provider \"aws\" {\n   region  = \"us-west-2\"\n }\n \n-# Held here so that Helm and K8s providers can be initialized to work on this cluster\n-resource \"digitalocean_kubernetes_cluster\" \"foreign_language_reader\" {\n-  name    = \"foreign-language-reader\"\n-  region  = \"sfo2\"\n-  version = \"1.19.6-do.0\"\n-  tags    = [\"prod\"]\n-\n-  node_pool {\n-    name       = \"worker-pool\"\n-    size       = \"s-2vcpu-4gb\"\n-    auto_scale = true\n-    min_nodes  = 1\n-    max_nodes  = 5\n-  }\n-}\n-\n-\n variable \"sematext_index_name\" {}\n \n module \"infrastructure\" {\n@@ -61,6 +44,7 @@ module \"infrastructure\" {\n   sematext_index_name = var.sematext_index_name\n }\n \n+# Held here so that Helm and K8s providers can be initialized to work on this cluster\n module \"kubernetes\" {\n   source = \"./terraform/eks\"\n }\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/api/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -78,7 +78,7 @@ resource \"kubernetes_deployment\" \"api\" {\n         # }\n \n         container {\n-          image = \"lkjaero/foreign-language-reader-api:latest\"\n+          image = \"lkjaero/foreign-language-reader-api:LATEST\"\n           name  = \"api\"\n \n           port {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["digitalocean", "not_relevant"],
    "notes": "The commit removes resources but there is no underlying cost smell"
  },
  {
    "url": "https://github.com/coremaker/terraform-google-nucleus/commit/11234f631f7370dd80ee5fbc5dd7bdbc12dcbf49",
    "files": [
      {
        "filename": "billing-alerts.tf",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "status": "added",
        "patch": "@@ -0,0 +1,48 @@\n+resource \"google_billing_budget\" \"project_budget\" {\n+  count = var.enable_billing_alerts ? 1 : 0\n+\n+  billing_account = var.google_billing_account_id\n+  display_name    = \"Billing Budget-${var.environment_name}\"\n+\n+  budget_filter {\n+    projects = [\"projects/${data.google_project.project.number}\"]\n+  }\n+\n+  amount {\n+    specified_amount {\n+      currency_code = var.billing_currency_code\n+      units         = var.billing_units_amount\n+    }\n+  }\n+\n+  dynamic \"threshold_rules\" {\n+    for_each = var.billing_threshold_rules\n+    content {\n+      threshold_percent = threshold_rules.value.threshold\n+      spend_basis       = threshold_rules.value.spend_type\n+    }\n+  }\n+\n+  all_updates_rule {\n+    monitoring_notification_channels = google_monitoring_notification_channel.billing_email_alert.*.id\n+    schema_version  = \"1.0\"\n+    disable_default_iam_recipients = false\n+  }\n+\n+  depends_on = [google_project_service.billing]\n+}\n+\n+resource \"google_monitoring_notification_channel\" \"billing_email_alert\" {\n+  count = var.enable_billing_alerts ? length(var.billing_email_address) : 0\n+\n+  display_name = \"Billing Email Alert for ${element(var.billing_email_address, count.index)}\"\n+  type         = \"email\"\n+\n+  labels = {\n+    email_address = element(var.billing_email_address, count.index)\n+  }\n+}\n+\n+resource \"google_project_service\" \"billing\" {\n+  service = \"billingbudgets.googleapis.com\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "variables.tf",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "status": "modified",
        "patch": "@@ -142,4 +142,40 @@ variable \"slack_auth_token\" {\n \n variable \"alert_policy_threshold_duration\" {\n     default = \"86400s\"\n+}\n+\n+# GCP Billing Alerts\n+variable \"enable_billing_alerts\" {\n+    type = bool\n+    default = false\n+}\n+\n+variable \"billing_currency_code\" {\n+    default = \"GBP\"\n+}\n+\n+variable \"billing_units_amount\" {\n+    default = \"500\"\n+}\n+\n+variable \"billing_threshold_rules\" {\n+    type    = list(object({\n+        threshold = number\n+        spend_type = string\n+    }))\n+    default = [\n+        {\n+            threshold = 1.0\n+            spend_type = \"FORECASTED_SPEND\"\n+        },\n+        {\n+            threshold = 1.2\n+            spend_type = \"FORECASTED_SPEND\"\n+        }\n+    ]\n+}\n+\n+variable \"billing_email_address\" {\n+    type = list(string)\n+    default = [\"address@example.com\"]\n }\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/rjmco/rjmco-github-tests/commit/ea9c4efeb857958f5a31b75d22555c34e1181937",
    "files": [
      {
        "filename": "github-tests-project/cloud-build/rjmco-github-tests/apply_trigger.tf",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -16,7 +16,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_apply\" {\n   build {\n     step {\n       id         = \"tg hclfmt check\"\n-      name       = format(\"gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n+      name       = format(\"eu.gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n       entrypoint = \"terragrunt\"\n       args       = [\"hclfmt\", \"--terragrunt-check\"]\n       dir        = \"github-tests-project\"\n@@ -31,7 +31,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_apply\" {\n \n     step {\n       id         = \"cloud-build scripts shellcheck\"\n-      name       = \"gcr.io/$PROJECT_ID/shellcheck\"\n+      name       = \"eu.gcr.io/$PROJECT_ID/shellcheck\"\n       entrypoint = \"bash\"\n       args       = [\"-c\", \"shellcheck *\"]\n       dir        = \"github-tests-project/scripts/\"\n@@ -40,7 +40,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_apply\" {\n \n     step {\n       id         = \"prepare tf plugin cache\"\n-      name       = \"gcr.io/cloud-builders/gcloud\"\n+      name       = \"eu.gcr.io/cloud-builders/gcloud\"\n       entrypoint = \"bash\"\n       args       = [\"scripts/prepare_tf_plugin_cache.sh\"]\n       dir        = \"github-tests-project\"\n@@ -54,7 +54,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_apply\" {\n \n     step {\n       id         = \"tg validate-all\"\n-      name       = format(\"gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n+      name       = format(\"eu.gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n       entrypoint = \"terragrunt\"\n       args       = [\"validate-all\"]\n       dir        = \"github-tests-project\"\n@@ -73,7 +73,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_apply\" {\n \n     step {\n       id         = \"tf fmt check\"\n-      name       = format(\"gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n+      name       = format(\"eu.gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n       entrypoint = \"terraform\"\n       args       = [\"fmt\", \"-check\", \"-recursive\"]\n       dir        = \"github-tests-project\"\n@@ -88,7 +88,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_apply\" {\n \n     step {\n       id         = \"backup tf plugin cache\"\n-      name       = \"gcr.io/cloud-builders/gcloud\"\n+      name       = \"eu.gcr.io/cloud-builders/gcloud\"\n       entrypoint = \"bash\"\n       args       = [\"scripts/backup_tf_plugin_cache.sh\"]\n       dir        = \"github-tests-project\"\n@@ -101,7 +101,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_apply\" {\n \n     step {\n       id         = \"tg plan-all\"\n-      name       = format(\"gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n+      name       = format(\"eu.gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n       entrypoint = \"terragrunt\"\n       args       = [\"plan-all\"]\n       dir        = \"github-tests-project\"\n@@ -116,7 +116,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_apply\" {\n \n     step {\n       id         = \"tg apply-all\"\n-      name       = format(\"gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n+      name       = format(\"eu.gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n       entrypoint = \"terragrunt\"\n       args = [\n         \"apply-all\""
      },
      {
        "filename": "github-tests-project/cloud-build/rjmco-github-tests/plan_trigger.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -16,7 +16,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_plan\" {\n   build {\n     step {\n       id         = \"tg hclfmt check\"\n-      name       = format(\"gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n+      name       = format(\"eu.gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n       entrypoint = \"terragrunt\"\n       args       = [\"hclfmt\", \"--terragrunt-check\"]\n       dir        = \"github-tests-project\"\n@@ -31,7 +31,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_plan\" {\n \n     step {\n       id         = \"cloud-build scripts shellcheck\"\n-      name       = \"gcr.io/$PROJECT_ID/shellcheck\"\n+      name       = \"eu.gcr.io/$PROJECT_ID/shellcheck\"\n       entrypoint = \"bash\"\n       args       = [\"-c\", \"shellcheck *\"]\n       dir        = \"github-tests-project/scripts/\"\n@@ -54,7 +54,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_plan\" {\n \n     step {\n       id         = \"tg validate-all\"\n-      name       = format(\"gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n+      name       = format(\"eu.gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n       entrypoint = \"terragrunt\"\n       args       = [\"validate-all\"]\n       dir        = \"github-tests-project\"\n@@ -73,7 +73,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_plan\" {\n \n     step {\n       id         = \"tf fmt check\"\n-      name       = format(\"gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n+      name       = format(\"eu.gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n       entrypoint = \"terraform\"\n       args       = [\"fmt\", \"-check\", \"-recursive\"]\n       dir        = \"github-tests-project\"\n@@ -101,7 +101,7 @@ resource \"google_cloudbuild_trigger\" \"rjmco_github_tests_plan\" {\n \n     step {\n       id         = \"tg plan-all\"\n-      name       = format(\"gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n+      name       = format(\"eu.gcr.io/$PROJECT_ID/go-terraform-terragrunt:%s-%s-%s\", var.golang_version, var.terraform_version, var.terragrunt_version)\n       entrypoint = \"terragrunt\"\n       args       = [\"plan-all\"]\n       dir        = \"github-tests-project\""
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": ["gcp", "cheaper_container_registry"],
    "notes": "Move from gcr.io to eu.gcr.io to save costs"
  },
  {
    "url": "https://github.com/Kakaranish/eszop-infra/commit/cd97b1881cb0d1c145b8b6236a3702a970c671c2",
    "files": [
      {
        "filename": "persistent_resources/backend.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+terraform {\n+  required_providers {\n+    azurerm = {\n+      source = \"hashicorp/azurerm\"\n+    }\n+  }\n+}\n+\n+provider \"azurerm\" {\n+  features {}\n+  subscription_id = var.subscription_id\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "persistent_resources/main.tf",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "status": "added",
        "patch": "@@ -0,0 +1,47 @@\n+locals {\n+  resource_group = \"eszop-${var.environment}-rg\"\n+}\n+\n+resource \"azurerm_resource_group\" \"resource_group\" {\n+  name     = local.resource_group\n+  location = var.location\n+}\n+\n+resource \"azurerm_storage_account\" \"storage_account\" {\n+  depends_on = [azurerm_resource_group.resource_group]\n+\n+  name                     = \"eszop${replace(var.environment, \"-\", \"\")}storage\"\n+  resource_group_name      = local.resource_group\n+  location                 = var.location\n+  account_tier             = \"Standard\"\n+  account_replication_type = \"LRS\"\n+  allow_blob_public_access = true\n+}\n+\n+resource \"azurerm_storage_container\" \"storage_account_container\" {\n+  depends_on = [azurerm_storage_account.storage_account]\n+\n+  name                  = \"eszop-${var.environment}-storage-container\"\n+  storage_account_name  = azurerm_storage_account.storage_account.name\n+  container_access_type = \"blob\"\n+}\n+\n+resource \"azurerm_container_registry\" \"container_registry\" {\n+  depends_on = [azurerm_resource_group.resource_group]\n+\n+  name                = \"eszop${replace(var.environment, \"-\", \"\")}registry\"\n+  resource_group_name = local.resource_group\n+  location            = var.location\n+  sku                 = \"Basic\"\n+  admin_enabled       = true\n+}\n+\n+output \"registry_admin_username\" {\n+  value = azurerm_container_registry.container_registry.admin_username\n+}\n+output \"registry_admin_password\" {\n+  value = azurerm_container_registry.container_registry.admin_password\n+}\n+output \"storage_connection_string\" {\n+  value = azurerm_storage_account.storage_account.primary_connection_string\n+}"
      },
      {
        "filename": "persistent_resources/scripts/ApplyInfra.ps1",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+param(\n+  [switch] $Init\n+)\n+\n+$environment = $env:ASPNETCORE_ENVIRONMENT\n+if(-not($environment)){\n+  $environment = \"Staging\"\n+}\n+\n+$tf_dir = Resolve-Path \"$PSScriptRoot\\..\"\n+\n+if ($Init) {\n+  terraform.exe -chdir=\"$tf_dir\" init\n+}\n+\n+terraform.exe `\n+  -chdir=\"$tf_dir\" `\n+  apply `\n+  -var-file=\"$tf_dir\\vars\\$environment.tfvars\"\n\\ No newline at end of file"
      },
      {
        "filename": "persistent_resources/scripts/DestroyInfra.ps1",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+$tf_dir = Resolve-Path \"$PSScriptRoot\\..\"\n+\n+$environment = $env:ASPNETCORE_ENVIRONMENT\n+if(-not($environment)){\n+  $environment = \"Staging\"\n+}\n+\n+terraform.exe `\n+  -chdir=\"$tf_dir\" `\n+  destroy `\n+  -var-file=\"$tf_dir\\vars\\$environment.tfvars\"\n\\ No newline at end of file"
      },
      {
        "filename": "persistent_resources/terraform.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+subscription_id = \"\"\n\\ No newline at end of file"
      },
      {
        "filename": "persistent_resources/variables.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+variable \"subscription_id\" {\n+  type = string\n+}\n+\n+variable \"location\" {\n+  type    = string\n+  default = \"Germany West Central\"\n+}\n+\n+variable \"environment\" {\n+  type = string\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "persistent_resources/vars/Development.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+environment = \"dev\"\n\\ No newline at end of file"
      },
      {
        "filename": "persistent_resources/vars/DevelopmentLocal.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+environment = \"dev-local\"\n\\ No newline at end of file"
      },
      {
        "filename": "persistent_resources/vars/Staging.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+environment = \"staging\"\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/eduardobaitello/terraform-eks/commit/c11fca6440a5000648f690e6282778fb4ec73309",
    "files": [
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -2,7 +2,7 @@\n \n **!! NOT FOR PRODUCTION USE !!**\n \n-This is just a challenge for the study of Terraform and EKS.\n+This is just a challenge to study and practice EKS deployment using Terraform.\n \n # Goals\n - Create an EKS cluster using at least two Availability Zones for worker nodes"
      },
      {
        "filename": "eks-cluster.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -18,6 +18,7 @@ module \"eks\" {\n \n   workers_group_defaults = {\n     root_volume_type = \"gp2\"\n+    root_volume_size = \"40\"\n   }\n \n   worker_groups = ["
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "smaller_disk", "explicit_value"],
    "notes": "Explicitly specify a value for volume size for EKS workers"
  },
  {
    "url": "https://github.com/maxjahn/terraform-oci-azure-connect/commit/fa109033da045468d612fe8eae1a2f903e30e128",
    "files": [
      {
        "filename": "network.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -98,7 +98,7 @@ resource \"azurerm_express_route_circuit\" \"oci_connect_erc\" {\n   bandwidth_in_mbps     = 50\n \n   sku {\n-    tier   = \"Standard\"\n+    tier   = \"Local\"\n     family = \"MeteredData\"\n   }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": ["azure", "expressroute_local_tier"],
    "notes": "Move from Standard to Local tier for ExpressRoute to save egress traffic costs"
  },
  {
    "url": "https://github.com/imma/fogg-env/commit/7de45302cfa8a7dca88ab61b3021091cc480b495",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -217,11 +217,11 @@ variable \"want_admin\" {\n }\n \n variable \"want_nat\" {\n-  default = \"1\"\n+  default = \"0\"\n }\n \n variable \"want_nat_eip\" {\n-  default = \"1\"\n+  default = \"0\"\n }\n \n variable \"nat_count\" {\n@@ -249,7 +249,7 @@ variable \"want_vpn\" {\n }\n \n variable \"want_vpn_eip\" {\n-  default = \"1\"\n+  default = \"0\"\n }\n \n variable \"vpn_interface_count\" {"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/thiringai-evans/cloud_scripts/commit/5127d7a6eccc6965d1e51928d50ee01a46b38871",
    "files": [
      {
        "filename": "Terraform/aws-policy-instance.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+resource \"aws_instance\" \"basic\" {\n+  ami           = \"ami-0ee1a20d6b0c6a347\"\n+  instance_type = \"t3.nano\"\n+}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness",
      "policy"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/aeternity/terraform-aws-devnet/commit/f4113a8f7e52991dfb75f63688aeba77bac76b01",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -81,10 +81,10 @@ module \"aws_deploy-integration_sync-eu-west-2\" {\n   vault_addr        = var.vault_addr\n \n   spot_nodes_min = 1\n-  spot_nodes_max = 1\n+  spot_nodes_max = 3\n \n   spot_price    = \"0.10\"\n-  instance_type = \"c5.xlarge\"\n+  instance_type = \"c5.large\"\n   ami_name      = \"aeternity-ubuntu-16.04-v1549009934\"\n \n   additional_storage      = true"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance"],
    "notes": "The commit increases the number of Spot instances but uses a cheaper instance type (from c5.xlarge to c5.large)"
  },
  {
    "url": "https://github.com/schubergphilis/terraform-aws-mcaf-matillion/commit/3b0e2fe42d660664c49d54ae8706de004a9b4176",
    "files": [
      {
        "filename": "main.tf",
        "additions": 84,
        "deletions": 47,
        "changes": 131,
        "status": "modified",
        "patch": "@@ -1,4 +1,7 @@\n locals {\n+  create_alb_http_listener  = var.create_alb && var.alb_certificate_arn == null ? true : false\n+  create_alb_https_listener = var.create_alb && var.alb_certificate_arn != null ? true : false\n+\n   tags = {\n     MatillionType = \"snowflake\"\n     Name          = \"Matillion-ETL\"\n@@ -228,48 +231,50 @@ resource \"aws_security_group\" \"instance\" {\n }\n \n resource \"aws_security_group_rule\" \"instance_http_in_cidrs\" {\n-  cidr_blocks       = [\"10.0.0.0/16\"]\n+  count             = length(var.instance_http_in_cidrs) > 0 ? 1 : 0\n+  cidr_blocks       = var.instance_http_in_cidrs\n   from_port         = 80\n-  ipv6_cidr_blocks  = []\n-  prefix_list_ids   = []\n+  to_port           = 80\n+  protocol          = \"tcp\"\n+  security_group_id = aws_security_group.instance.id\n+  type              = \"ingress\"\n+}\n+\n+resource \"aws_security_group_rule\" \"instance_https_in_cidrs\" {\n+  count             = length(var.instance_https_in_cidrs) > 0 ? 1 : 0\n+  cidr_blocks       = var.instance_https_in_cidrs\n+  from_port         = 443\n+  to_port           = 443\n   protocol          = \"tcp\"\n   security_group_id = aws_security_group.instance.id\n-  self              = false\n-  to_port           = 80\n   type              = \"ingress\"\n }\n \n resource \"aws_security_group_rule\" \"instance_http_in_alb\" {\n+  count                    = var.create_alb ? 1 : 0\n   from_port                = 80\n-  ipv6_cidr_blocks         = []\n-  prefix_list_ids          = []\n+  to_port                  = 80\n   protocol                 = \"tcp\"\n   security_group_id        = aws_security_group.instance.id\n-  source_security_group_id = aws_security_group.alb.id\n-  to_port                  = 80\n+  source_security_group_id = aws_security_group.alb.0.id\n   type                     = \"ingress\"\n }\n \n resource \"aws_security_group_rule\" \"instance_5071_in_self\" {\n+  count             = var.instance_count > 1 ? 1 : 0\n   from_port         = 5701\n-  ipv6_cidr_blocks  = []\n-  prefix_list_ids   = []\n+  to_port           = 5701\n   protocol          = \"tcp\"\n   security_group_id = aws_security_group.instance.id\n-  self              = true\n-  to_port           = 5701\n   type              = \"ingress\"\n }\n \n resource \"aws_security_group_rule\" \"instance_all_out\" {\n   cidr_blocks       = [\"0.0.0.0/0\"]\n   from_port         = 0\n-  ipv6_cidr_blocks  = []\n-  prefix_list_ids   = []\n+  to_port           = 0\n   protocol          = \"-1\"\n   security_group_id = aws_security_group.instance.id\n-  self              = false\n-  to_port           = 0\n   type              = \"egress\"\n }\n \n@@ -281,6 +286,7 @@ resource \"aws_instance\" \"default\" {\n   instance_initiated_shutdown_behavior = var.shutdown_behavior\n   subnet_id                            = element(var.subnet_ids, count.index)\n   availability_zone                    = var.availability_zone\n+  associate_public_ip_address          = var.create_alb ? false : true\n   key_name                             = var.key_name\n   monitoring                           = var.monitoring\n   tags                                 = merge(local.tags, var.tags)\n@@ -301,35 +307,30 @@ resource \"aws_instance\" \"default\" {\n // deploy RDS postgres instance\n \n resource \"aws_security_group\" \"rds\" {\n+  count       = var.create_db_instance ? 1 : 0\n   name_prefix = \"MatillionPostgresSecurityGroup-\"\n   description = \"MatillionPostgresSecurityGroup\"\n   vpc_id      = var.vpc_id\n   tags        = merge(local.tags, var.tags)\n }\n \n resource \"aws_security_group_rule\" \"rds_postgres_in_cidr\" {\n-  cidr_blocks       = [\"10.0.1.0/24\"]\n-  description       = \"PostgreSQL\"\n-  from_port         = 5432\n-  ipv6_cidr_blocks  = []\n-  prefix_list_ids   = []\n-  protocol          = \"tcp\"\n-  security_group_id = aws_security_group.rds.id\n-  self              = false\n-  to_port           = 5432\n-  type              = \"ingress\"\n+  count                    = var.create_db_instance ? 1 : 0\n+  from_port                = 5432\n+  to_port                  = 5432\n+  protocol                 = \"tcp\"\n+  source_security_group_id = aws_security_group.instance.id\n+  security_group_id        = aws_security_group.rds.0.id\n+  type                     = \"ingress\"\n }\n \n resource \"aws_security_group_rule\" \"rds_all_out\" {\n+  count             = var.create_db_instance ? 1 : 0\n   cidr_blocks       = [\"0.0.0.0/0\"]\n-  description       = \"All protocols\"\n   from_port         = 0\n-  ipv6_cidr_blocks  = []\n-  prefix_list_ids   = []\n-  protocol          = \"-1\"\n-  security_group_id = aws_security_group.rds.id\n-  self              = false\n   to_port           = 0\n+  protocol          = \"-1\"\n+  security_group_id = aws_security_group.rds.0.id\n   type              = \"egress\"\n }\n \n@@ -343,6 +344,7 @@ module \"db\" {\n   // RDS\n   create_db_instance              = var.create_db_instance\n   create_db_subnet_group          = var.create_db_subnet_group\n+  create_db_parameter_group       = var.create_db_instance\n   multi_az                        = var.db_multi_az\n   identifier                      = \"Matillion-RDS\"\n   availability_zone               = var.availability_zone\n@@ -390,6 +392,7 @@ module \"db\" {\n // deploy ALB\n \n resource \"aws_lb_target_group\" \"http\" {\n+  count       = var.create_alb ? 1 : 0\n   name        = \"Matillion-HTTP\"\n   port        = \"80\"\n   protocol    = \"HTTP\"\n@@ -414,68 +417,102 @@ resource \"aws_lb_target_group\" \"http\" {\n }\n \n resource \"aws_lb_target_group_attachment\" \"instance\" {\n-  count            = var.instance_count\n-  target_group_arn = aws_lb_target_group.http.arn\n+  count            = var.create_alb ? var.instance_count : 0\n+  target_group_arn = aws_lb_target_group.http.0.arn\n   target_id        = element(aws_instance.default.*.id, count.index)\n }\n \n resource \"aws_security_group\" \"alb\" {\n+  count       = var.create_alb ? 1 : 0\n   name_prefix = \"MatillionALBSecurityGroup-\"\n   description = \"MatillionALBSecurityGroup\"\n   vpc_id      = var.vpc_id\n   tags        = merge(local.tags, var.tags)\n }\n \n resource \"aws_security_group_rule\" \"alb_http_in\" {\n+  count             = var.create_alb ? 1 : 0\n   cidr_blocks       = [\"0.0.0.0/0\"]\n   from_port         = 80\n+  to_port           = 80\n   ipv6_cidr_blocks  = []\n   prefix_list_ids   = []\n   protocol          = \"tcp\"\n-  security_group_id = aws_security_group.alb.id\n-  self              = false\n-  to_port           = 80\n+  security_group_id = aws_security_group.alb.0.id\n   type              = \"ingress\"\n }\n \n resource \"aws_security_group_rule\" \"alb_https_in\" {\n+  count             = var.create_alb ? 1 : 0\n   cidr_blocks       = [\"0.0.0.0/0\"]\n   from_port         = 443\n+  to_port           = 443\n   ipv6_cidr_blocks  = []\n   prefix_list_ids   = []\n   protocol          = \"tcp\"\n-  security_group_id = aws_security_group.alb.id\n-  self              = false\n-  to_port           = 443\n+  security_group_id = aws_security_group.alb.0.id\n   type              = \"ingress\"\n }\n \n resource \"aws_security_group_rule\" \"alb_all_out\" {\n+  count             = var.create_alb ? 1 : 0\n   cidr_blocks       = [\"0.0.0.0/0\"]\n   from_port         = 0\n+  to_port           = 0\n   ipv6_cidr_blocks  = []\n   prefix_list_ids   = []\n   protocol          = \"-1\"\n-  security_group_id = aws_security_group.alb.id\n-  self              = false\n-  to_port           = 0\n+  security_group_id = aws_security_group.alb.0.id\n   type              = \"egress\"\n }\n \n resource \"aws_lb\" \"default\" {\n+  count              = var.create_alb ? 1 : 0\n   load_balancer_type = \"application\"\n-  security_groups    = [aws_security_group.alb.id]\n+  security_groups    = [aws_security_group.alb.0.id]\n   subnets            = var.subnet_ids\n   tags               = merge(local.tags, var.tags)\n }\n \n resource \"aws_lb_listener\" \"http\" {\n-  load_balancer_arn = aws_lb.default.arn\n+  count             = local.create_alb_http_listener ? 1 : 0\n+  load_balancer_arn = aws_lb.default.0.arn\n   port              = 80\n   protocol          = \"HTTP\"\n \n   default_action {\n-    target_group_arn = aws_lb_target_group.http.arn\n+    target_group_arn = aws_lb_target_group.http.0.arn\n+    type             = \"forward\"\n+  }\n+}\n+\n+resource \"aws_lb_listener\" \"http_redirect\" {\n+  count             = local.create_alb_https_listener ? 1 : 0\n+  load_balancer_arn = aws_lb.default.0.arn\n+  port              = \"80\"\n+  protocol          = \"HTTP\"\n+\n+  default_action {\n+    type = \"redirect\"\n+\n+    redirect {\n+      port        = \"443\"\n+      protocol    = \"HTTPS\"\n+      status_code = \"HTTP_301\"\n+    }\n+  }\n+}\n+\n+resource \"aws_lb_listener\" \"https\" {\n+  count             = local.create_alb_https_listener ? 1 : 0\n+  load_balancer_arn = aws_lb.default.0.arn\n+  port              = \"443\"\n+  protocol          = \"HTTPS\"\n+  ssl_policy        = var.alb_ssl_policy\n+  certificate_arn   = var.alb_certificate_arn\n+\n+  default_action {\n+    target_group_arn = aws_lb_target_group.http.0.arn\n     type             = \"forward\"\n   }\n }"
      },
      {
        "filename": "variables.tf",
        "additions": 35,
        "deletions": 2,
        "changes": 37,
        "status": "modified",
        "patch": "@@ -27,7 +27,19 @@ variable \"tags\" {\n variable \"instance_type\" {\n   type        = string\n   description = \"AWS instance type\"\n-  default     = \"m5.large\"\n+  default     = \"t2.medium\"\n+}\n+\n+variable \"instance_http_in_cidrs\" {\n+  type        = list(string)\n+  description = \"A list of CIDRs allowing HTTP access to the Matillion instance(s)\"\n+  default     = []\n+}\n+\n+variable \"instance_https_in_cidrs\" {\n+  type        = list(string)\n+  description = \"A list of CIDRs allowing HTTPS access to the Matillion instance(s)\"\n+  default     = []\n }\n \n variable \"key_name\" {\n@@ -81,7 +93,7 @@ variable \"subnet_ids\" {\n variable \"create_db_instance\" {\n   type        = bool\n   description = \"Set to true to create a postgresql RDS instance\"\n-  default     = true\n+  default     = false\n }\n \n variable \"create_db_subnet_group\" {\n@@ -159,4 +171,25 @@ variable \"db_password\" {\n variable \"db_subnet_ids\" {\n   type        = list(string)\n   description = \"Database subnet IDs\"\n+  default     = []\n+}\n+\n+// alb variables\n+\n+variable \"create_alb\" {\n+  type        = bool\n+  description = \"Set to true to create an Application Load Balancer\"\n+  default     = false\n+}\n+\n+variable \"alb_certificate_arn\" {\n+  type        = string\n+  description = \"Certificate ARN to apply to HTTPS listener\"\n+  default     = null\n+}\n+\n+variable \"alb_ssl_policy\" {\n+  type        = string\n+  description = \"ALB SSL Policy\"\n+  default     = \"ELBSecurityPolicy-TLS-1-2-Ext-2018-06\"\n }"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kody-abe/terraform/commit/169c7768b0b1584945362c035a2b227d2f579466",
    "files": [
      {
        "filename": "CHANGELOG.md",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,4 +1,10 @@\n-# 0.6.0\n+# Changelog\n \n-- `region` is now a required input for `geopoiesis-backend`;\n+## 0.7.0\n+\n+- Switched to using `PAY_PER_REQUEST` for all DynamoDB tables and removed autoscaling;\n+- Users **must** remove the `min_capacity` input variable, if provided;\n \n+## 0.6.0\n+\n+- `region` is now a required input for `geopoiesis-backend`;"
      },
      {
        "filename": "README.md",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -11,8 +11,6 @@ The main module is located under `/aws` and it creates the following resources:\n   user review;\n - a CloudWatch Logs log group to persist logs from individual runs;\n - three DynamoDB tables with associated secondary indexes;\n-- DynamoDB autoscaling rules, targeting 70% utilization of\n-  reads and writes;\n - a KMS key used to secure application secrets and S3 objectss;\n - an IAM policy giving the minimum necessary access to the above resources;\n \n@@ -36,12 +34,6 @@ The full API is a bit more complex - see below.\n   use a non-standard name is running multiple installations of Geopoiesis in one\n   AWS account;\n \n-- `min_capacity` (optional, default = `1`) - minimum provisioned read and write\n-  throughput for application DynamoDB tables. All Geopoiesis tables and indexes\n-  are autoscaled with 70% target utilization, but autoscaling takes a while to\n-  kick in, so if you are expecting heavier load, it's better to specify a lower\n-  bound that is larger than 1;\n-\n - `region` (required) - AWS region where resources are to be created. Remember\n   it's a good practice to keep your storage and compute as close as possible;\n "
      },
      {
        "filename": "aws/autoscaling/autoscaling.tf",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "status": "removed",
        "patch": "@@ -1,25 +0,0 @@\n-variable \"entity\" {}\n-\n-variable \"min_capacity\" {}\n-\n-variable \"type\" {\n-  default = \"table\"\n-}\n-\n-module \"read\" {\n-  source = \"./common\"\n-\n-  entity       = \"${var.entity}\"\n-  min_capacity = \"${var.min_capacity}\"\n-  optype       = \"Read\"\n-  type         = \"${var.type}\"\n-}\n-\n-module \"write\" {\n-  source = \"./common\"\n-\n-  entity       = \"${var.entity}\"\n-  min_capacity = \"${var.min_capacity}\"\n-  optype       = \"Write\"\n-  type         = \"${var.type}\"\n-}"
      },
      {
        "filename": "aws/autoscaling/common/common.tf",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "status": "removed",
        "patch": "@@ -1,23 +0,0 @@\n-resource \"aws_appautoscaling_target\" \"target\" {\n-  min_capacity       = \"${var.min_capacity}\"\n-  max_capacity       = 100\n-  resource_id        = \"table/${var.entity}\"\n-  scalable_dimension = \"dynamodb:${var.type}:${var.optype}CapacityUnits\"\n-  service_namespace  = \"dynamodb\"\n-}\n-\n-resource \"aws_appautoscaling_policy\" \"target\" {\n-  name               = \"DynamoDB${var.optype}CapacityUtilization:${aws_appautoscaling_target.target.resource_id}\"\n-  policy_type        = \"TargetTrackingScaling\"\n-  resource_id        = \"${aws_appautoscaling_target.target.resource_id}\"\n-  scalable_dimension = \"${aws_appautoscaling_target.target.scalable_dimension}\"\n-  service_namespace  = \"${aws_appautoscaling_target.target.service_namespace}\"\n-\n-  target_tracking_scaling_policy_configuration {\n-    predefined_metric_specification {\n-      predefined_metric_type = \"DynamoDB${var.optype}CapacityUtilization\"\n-    }\n-\n-    target_value = 70\n-  }\n-}"
      },
      {
        "filename": "aws/autoscaling/common/variables.tf",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "status": "removed",
        "patch": "@@ -1,4 +0,0 @@\n-variable \"entity\" {}\n-variable \"min_capacity\" {}\n-variable \"optype\" {}\n-variable \"type\" {}"
      },
      {
        "filename": "aws/aws.tf",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -4,10 +4,6 @@ variable \"log_group_name\" {\n   default = \"/geopoiesis\"\n }\n \n-variable \"min_capacity\" {\n-  default = 1\n-}\n-\n variable \"policy_name\" {\n   default = \"geopoiesis\"\n }"
      },
      {
        "filename": "aws/dynamodb.tf",
        "additions": 9,
        "deletions": 90,
        "changes": 99,
        "status": "modified",
        "patch": "@@ -1,37 +1,23 @@\n resource \"aws_dynamodb_table\" \"geopoiesis-scopes\" {\n-  name           = \"${var.scopes_table_name}\"\n-  read_capacity  = \"${var.min_capacity}\"\n-  write_capacity = \"${var.min_capacity}\"\n-  hash_key       = \"scope\"\n+  name     = \"${var.scopes_table_name}\"\n+  hash_key = \"scope\"\n \n   attribute {\n     name = \"scope\"\n     type = \"S\"\n   }\n \n-  lifecycle {\n-    ignore_changes = [\"read_capacity\", \"write_capacity\"]\n-  }\n-\n   tags {\n     Name        = \"Owner\"\n     Description = \"Geopoiesis\"\n   }\n }\n \n-module \"geopoiesis-scopes-autoscaling\" {\n-  source = \"./autoscaling\"\n-\n-  entity       = \"${aws_dynamodb_table.geopoiesis-scopes.name}\"\n-  min_capacity = \"${var.min_capacity}\"\n-}\n-\n resource \"aws_dynamodb_table\" \"geopoiesis-runs\" {\n-  name           = \"${var.runs_table_name}\"\n-  read_capacity  = \"${var.min_capacity}\"\n-  write_capacity = \"${var.min_capacity}\"\n-  hash_key       = \"scope\"\n-  range_key      = \"id\"\n+  name         = \"${var.runs_table_name}\"\n+  billing_mode = \"PAY_PER_REQUEST\"\n+  hash_key     = \"scope\"\n+  range_key    = \"id\"\n \n   attribute {\n     name = \"scope\"\n@@ -68,43 +54,27 @@ resource \"aws_dynamodb_table\" \"geopoiesis-runs\" {\n     range_key       = \"id\"\n     name            = \"byqueued\"\n     projection_type = \"ALL\"\n-    read_capacity   = \"${var.min_capacity}\"\n-    write_capacity  = \"${var.min_capacity}\"\n   }\n \n   global_secondary_index {\n     hash_key        = \"scope_with_type\"\n     range_key       = \"id\"\n     name            = \"bytype\"\n     projection_type = \"ALL\"\n-    read_capacity   = \"${var.min_capacity}\"\n-    write_capacity  = \"${var.min_capacity}\"\n   }\n \n   global_secondary_index {\n     hash_key        = \"scope_with_visibility\"\n     range_key       = \"id\"\n     name            = \"byvisibility\"\n     projection_type = \"ALL\"\n-    read_capacity   = \"${var.min_capacity}\"\n-    write_capacity  = \"${var.min_capacity}\"\n   }\n \n   global_secondary_index {\n     hash_key        = \"scope_with_worker_assigned\"\n     range_key       = \"id\"\n     name            = \"byworkerassigned\"\n     projection_type = \"ALL\"\n-    read_capacity   = \"${var.min_capacity}\"\n-    write_capacity  = \"${var.min_capacity}\"\n-  }\n-\n-  lifecycle {\n-    ignore_changes = [\n-      \"global_secondary_index\",\n-      \"read_capacity\",\n-      \"write_capacity\",\n-    ]\n   }\n \n   tags {\n@@ -113,69 +83,18 @@ resource \"aws_dynamodb_table\" \"geopoiesis-runs\" {\n   }\n }\n \n-module \"geopoiesis-runs-autoscaling\" {\n-  source = \"./autoscaling\"\n-\n-  entity       = \"${aws_dynamodb_table.geopoiesis-runs.name}\"\n-  min_capacity = \"${var.min_capacity}\"\n-}\n-\n-module \"geopoiesis-runs-autoscaling-byqueued\" {\n-  source = \"./autoscaling\"\n-\n-  entity       = \"${aws_dynamodb_table.geopoiesis-runs.name}/index/byqueued\"\n-  min_capacity = \"${var.min_capacity}\"\n-  type         = \"index\"\n-}\n-\n-module \"geopoiesis-runs-autoscaling-bytype\" {\n-  source = \"./autoscaling\"\n-\n-  entity       = \"${aws_dynamodb_table.geopoiesis-runs.name}/index/bytype\"\n-  min_capacity = \"${var.min_capacity}\"\n-  type         = \"index\"\n-}\n-\n-module \"geopoiesis-runs-autoscaling-byvisibility\" {\n-  source = \"./autoscaling\"\n-\n-  entity       = \"${aws_dynamodb_table.geopoiesis-runs.name}/index/byvisibility\"\n-  min_capacity = \"${var.min_capacity}\"\n-  type         = \"index\"\n-}\n-\n-module \"geopoiesis-runs-autoscaling-byworkerassigned\" {\n-  source = \"./autoscaling\"\n-\n-  entity       = \"${aws_dynamodb_table.geopoiesis-runs.name}/index/byworkerassigned\"\n-  min_capacity = \"${var.min_capacity}\"\n-  type         = \"index\"\n-}\n-\n resource \"aws_dynamodb_table\" \"geopoiesis-workers\" {\n-  name           = \"${var.workers_table_name}\"\n-  read_capacity  = \"${var.min_capacity}\"\n-  write_capacity = \"${var.min_capacity}\"\n-  hash_key       = \"worker_id\"\n+  name         = \"${var.workers_table_name}\"\n+  billing_mode = \"PAY_PER_REQUEST\"\n+  hash_key     = \"worker_id\"\n \n   attribute {\n     name = \"worker_id\"\n     type = \"S\"\n   }\n \n-  lifecycle {\n-    ignore_changes = [\"read_capacity\", \"write_capacity\"]\n-  }\n-\n   tags {\n     Name        = \"Owner\"\n     Description = \"Geopoiesis\"\n   }\n }\n-\n-module \"geopoiesis-workers-autoscaling\" {\n-  source = \"./autoscaling\"\n-\n-  entity       = \"${aws_dynamodb_table.geopoiesis-workers.name}\"\n-  min_capacity = \"${var.min_capacity}\"\n-}"
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": ["aws", "dynamo_on_demand"],
    "notes": "Use PAY_PER_REQUEST billing mode for DynamoDB"
  },
  {
    "url": "https://github.com/pumbaasdad/aws-account/commit/42c288d84b5f7853c36dcc55d181b8e16d3304a5",
    "files": [
      {
        "filename": "root/billing.tf",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -12,6 +12,10 @@ resource aws_cloudwatch_metric_alarm billing_alarm {\n   statistic           = \"Maximum\"\n   threshold           = var.charge_warning_dollars\n   alarm_actions       = [aws_sns_topic.notify_me.arn]\n-  alarm_description   = \"Send an e-mail if estimated charges exceed ${var.charge_warning_dollars} CAD in a month.\"\n+  alarm_description   = \"Send an e-mail if estimated charges exceed ${var.charge_warning_dollars} USD in a month.\"\n   datapoints_to_alarm = 1\n+\n+  dimensions = {\n+    Currency = \"USD\"\n+  }\n }"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/smarman85/a_new_hope/commit/de97a6b8033c866c3b711468207aa4890049daaa",
    "files": [
      {
        "filename": "qa/vars.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -39,7 +39,8 @@ variable \"ami_ID\" {\n }\n \n variable \"instance_type\" {\n-  default = \"t2.micro\"\n+  #default = \"t2.micro\"\n+  default = \"t3.micro\"\n }\n \n variable \"ec2_user\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": ["aws", "cheaper_instance", "new_gen"],
    "notes": "Move from t2.micro to t3.micro"
  },
  {
    "url": "https://github.com/wellcomecollection/archivematica-infrastructure/commit/ce576be106257496e20d946d6eab5f8783dada92",
    "files": [
      {
        "filename": "terraform/modules/critical/ebs.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -12,6 +12,8 @@ locals {\n resource \"aws_ebs_volume\" \"ebs\" {\n   availability_zone = \"eu-west-1a\"\n   size              = local.ebs_volume_size\n+  \n+  type = \"gp3\"\n \n   tags = {\n     Name = local.ebs_name"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": ["aws", "cheaper_disk_type", "explicit_value"],
    "notes": "Explicitly specify gp3 for an EBS volume, which is cheaper"
  },
  {
    "url": "https://github.com/wellcomecollection/archivematica-infrastructure/commit/4b495fef39e68590aea98af324340adafadfb334",
    "files": [
      {
        "filename": "terraform/modules/critical/rds.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -69,7 +69,7 @@ resource \"aws_rds_cluster\" \"archivematica\" {\n }\n \n resource \"aws_rds_cluster_instance\" \"archivematica\" {\n-  count = 2\n+  count = 1\n \n   identifier           = \"${aws_rds_cluster.archivematica.cluster_identifier}-instance-${count.index}\"\n   cluster_identifier   = aws_rds_cluster.archivematica.id"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/binbashar/le-tf-infra-aws/commit/a873443bd618ac9c14d12210ed4d12a11cc1f733",
    "files": [
      {
        "filename": "dev/5_network/network.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ module \"vpc\" {\n     private_subnets = \"${local.private_subnets}\"\n     public_subnets  = \"${local.public_subnets}\"\n \n-    enable_nat_gateway   = true\n+    enable_nat_gateway   = false\n     single_nat_gateway   = true\n     enable_vpn_gateway   = false\n     enable_dns_hostnames = true"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": ["aws", "remove_nat_gateway"],
    "notes": "Remove NAT gateway in VPC"
  },
  {
    "url": "https://github.com/binbashar/le-tf-infra-aws/commit/19c37f7e4e65d14e760f1ff8cf60cfd1e98c1a8b",
    "files": [
      {
        "filename": "dev/5_network/network.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ module \"vpc\" {\n     private_subnets = \"${local.private_subnets}\"\n     public_subnets  = \"${local.public_subnets}\"\n \n-    enable_nat_gateway   = true\n+    enable_nat_gateway   = false\n     single_nat_gateway   = true\n     enable_vpn_gateway   = false\n     enable_dns_hostnames = true"
      },
      {
        "filename": "shared/7_jenkins-vault/provisioner/keys/id_rsa",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "status": "added",
        "patch": "@@ -0,0 +1,27 @@\n+-----BEGIN RSA PRIVATE KEY-----\n+MIIEpAIBAAKCAQEAsKmPKR+l5LayDmeCStnmloOEEZCJK9rmuCKnz4VPkT8wnQSw\n+r9Ypl/ZHr1/nXdK6ZUAB4m2oKLsC4nvfaxL9akdS7fNozl5AQAnSwg2luQhp9i0y\n+hRzdy5vqBUbvY8ykQendoZtKjbhAry9V9kAIG3hquUQ08MVS4N95fxIIKTW2WaId\n+dcP1K0pL8tsGLmLSwDeaBo+O/pr8aUb63GCvfczDpWujOguTK8ZZcWjXGV2ju3B2\n+RSzRRuZm3yfzHcx8vbuOr93H9NdlM4ZK0pAqi0s9q9lNuYCjVnDqphNADDVuqiwV\n+pl5xvsFBAXm1/b+Cg0Sn428aViS0Ha+Qh2r+JQIDAQABAoIBAQCoEvmIB3seSQ7I\n+E4RrUDpIcqFg0KEgnyeoghgjoFJd/r9yc7bh46A42m/DEzwdEFKT57yjPu6gqaOJ\n+9I5P4YZF6culZVIOHK+F/ZKNWsyTaMTfGIsbB6aggxq3oJA648RWjXh1uzfH80df\n+JGrlWHAeKodm8dRoSWObXCHMWkx3XvQ5pGy7pYj4VxFJVvgJdmNHeReK6fCahYoE\n+drnqsCmnevysWEtbPmBd8h1+IEZiV8+mOl1yhnqNfCtdORUl1MNrAy5qbubLKso1\n+cL0wyo0IMVSUzq6t4kX8GazWll+Rx2Kc1jBYamAPUAtJS4cEz00m5aKxrs5Qn7fI\n+Q9BBCXA1AoGBAOLUumdmRZRKQqS0421ALGqcjvBOCja6ahbaVjSfvCcghhEwKcJN\n+B7zS3tdA703M+jcMWCwm1z5sFgAzzg3cBqRjJs6pT4fKFpxISxb4wqL7Tb7O5MiZ\n+a/rah4Q0WtkbqqQ/q58PGFR40UrSU4TyJgwOcBXqDI8+nhJNPC08hCvPAoGBAMdh\n+R9ex4W6hO+ezhecHb86Iu83Y+73EjLdieMbrvOH4dcLY07JovnetxenHA7Gp+ZPN\n+ws3i0St80ToYZRtfHxIzggakhC+6JkD1d5qz5SnGZgzl7vVy+xmjVTGcH8Ca9Qnm\n+GFXqIT0CE5KjUKTmq7JZzYWyUNfhdObQ8v5eau/LAoGBALuEJL0J/QdEBKfoqgJN\n+BOr1lezudt8baEyQHqfOTVsDNhHLgRoRWA4vPO0xzyLACzGq0NFfIp2F+QId0X//\n+nrYTCafaq9aTp/F2iizpZO4bVgAhRVzYCD4One0a4ueMSZsSz6vkbLaYUlzKVyUW\n+kYFyBhL3s35Pw5lZpB+5YYJdAoGAMJWyDguYpX7AvEtw28ViJ3AGY7j2T13v9FgY\n+mlCjrGUBPUPdAmKn1z4PNlJ6wfZrjOrdB5K36eL2kTOUn8DkL2lBzCCW3ZJ88+Nd\n+C+O+ehmQkKAPRNyJ98tnXTlwO10HTSw2zejJxLYW0urdIfHb8RAVFvlG3fRgqkZM\n+kFOtt1UCgYBSRzzAcQ1TYwNlIpLyH+WgnKCh1buNgBzDviXDeZJDqLrIS4+SJSUA\n+KgIAimUIgXyiizi8OPY9pYh0uodWeX2JOMaKrlRnsf1KrffzWZQxKzNO44i2cEQb\n+AlO9DEHOb2AuuSkjOMen5YpvvllliB4/lcWN1CUd2AgKf1CRpiqFbA==\n+-----END RSA PRIVATE KEY-----"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/binbashar/le-tf-infra-aws/commit/bbfbd2484ace2819ffceac9155b995ab870ee3a3",
    "files": [
      {
        "filename": "dev/5_network/network.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ module \"vpc\" {\n     private_subnets = \"${local.private_subnets}\"\n     public_subnets  = \"${local.public_subnets}\"\n \n-    enable_nat_gateway   = true\n+    enable_nat_gateway   = false\n     single_nat_gateway   = true\n     enable_vpn_gateway   = false\n     enable_dns_hostnames = true"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/binbashar/le-tf-infra-aws/commit/2afa0c4652393014778f9b2fefcf975d6ca22ae2",
    "files": [
      {
        "filename": "shared/6_openvpn/provisioner/ansible-playbook/.hosts",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -3,4 +3,4 @@\n #\r\n infra_ec2_pritunl_vpn ansible_host='vpn.binbash.com.ar' ansible_user='ubuntu' ansible_ssh_private_key_file='../keys/id_rsa'\r\n \r\n-localhost       ansible_connection=local\r\n+localhost       ansible_connection=local\n\\ No newline at end of file"
      },
      {
        "filename": "shared/6_openvpn/variables.tf",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -184,9 +184,4 @@ variable \"instance_dns_record_name_2_enabled\" {\n variable \"instance_dns_record_name_2\" {\n   description = \"AWS EC2 Instance Type\"\n   default     = \"webhooks.binbash.com.ar\"\n-}\n-\n-variable \"instance_dns_record_name_2\" {\n-  description = \"AWS EC2 Instance Type\"\n-  default     = \"webhooks.binbash.com.ar\"\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "shared/7_jenkins-vault/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -119,7 +119,7 @@ variable \"sg_private_tpc_ports\" {\n }\n variable \"sg_private_udp_ports\" {\n   description = \"Security group UDP ports\"\n-  default     = \"default_null\"\n+  default     = \"\"\n }\n \n variable \"sg_private_cidrs\" {"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/binbashar/le-tf-infra-aws/commit/0208ae3bc238f029b1faf6bdc3552dbe6147657b",
    "files": [
      {
        "filename": "apps-devstg/base-network/config.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -33,7 +33,7 @@ data \"terraform_remote_state\" \"vpc-eks\" {\n     region  = var.region\n     profile = var.profile\n     bucket  = var.bucket\n-    key     = \"${var.environment}/k8s-eks/prerequisites/terraform.tfstate\"\n+    key     = \"${var.environment}/k8s-eks/network/terraform.tfstate\"\n   }\n }\n "
      },
      {
        "filename": "apps-devstg/k8s-eks/cluster/config.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -45,7 +45,7 @@ data \"terraform_remote_state\" \"shared-eks-vpc\" {\n     region  = var.region\n     profile = var.profile\n     bucket  = var.bucket\n-    key     = \"apps-devstg/k8s-eks/vpc/terraform.tfstate\"\n+    key     = \"apps-devstg/k8s-eks/network/terraform.tfstate\"\n   }\n }\n "
      },
      {
        "filename": "apps-devstg/k8s-eks/cluster/eks-workers-managed.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -41,7 +41,7 @@ module \"eks\" {\n       max_capacity     = 3\n       min_capacity     = 1\n \n-      instance_type = \"t2.medium\"\n+      instance_type = \"t2.small\"\n       k8s_labels    = local.tags\n     }\n   }\n@@ -55,8 +55,8 @@ module \"eks\" {\n   kubeconfig_aws_authenticator_additional_args = [\"--cache\"]\n   kubeconfig_aws_authenticator_env_variables = {\n     AWS_PROFILE                 = var.profile,\n-    AWS_CONFIG_FILE             = \"~/.aws/${var.project}/config\",\n-    AWS_SHARED_CREDENTIALS_FILE = \"~/.aws/${var.project}/credentials\"\n+    AWS_CONFIG_FILE             = \"$HOME/.aws/${var.project}/config\",\n+    AWS_SHARED_CREDENTIALS_FILE = \"$HOME/.aws/${var.project}/credentials\"\n   }\n \n   #"
      },
      {
        "filename": "apps-devstg/k8s-eks/network/Makefile",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "apps-devstg/k8s-eks/network/config.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "renamed",
        "patch": "@@ -23,7 +23,7 @@ terraform {\n   required_version = \">= 0.13.2\"\n \n   backend \"s3\" {\n-    key = \"apps-devstg/k8s-eks/vpc/terraform.tfstate\"\n+    key = \"apps-devstg/k8s-eks/network/terraform.tfstate\"\n   }\n }\n "
      },
      {
        "filename": "apps-devstg/k8s-eks/network/dns_vpc_association.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "apps-devstg/k8s-eks/network/locals.tf",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "status": "renamed",
        "patch": "@@ -104,6 +104,30 @@ locals {\n         protocol    = \"-1\"\n         cidr_block  = data.terraform_remote_state.shared-vpc.outputs.private_subnets_cidr[1]\n       },\n+      {\n+        rule_number = 200 # Allow traffic from EKS VPC private subnet A\n+        rule_action = \"allow\"\n+        from_port   = 443\n+        to_port     = 443\n+        protocol    = \"tcp\"\n+        cidr_block  = local.private_subnets[0]\n+      },\n+      {\n+        rule_number = 210 # Allow traffic from EKS VPC private subnet B\n+        rule_action = \"allow\"\n+        from_port   = 443\n+        to_port     = 443\n+        protocol    = \"tcp\"\n+        cidr_block  = local.private_subnets[1]\n+      },\n+      {\n+        rule_number = 220 # Allow traffic from EKS VPC private subnet C\n+        rule_action = \"allow\"\n+        from_port   = 443\n+        to_port     = 443\n+        protocol    = \"tcp\"\n+        cidr_block  = local.private_subnets[2]\n+      },\n     ]\n   }\n }"
      },
      {
        "filename": "apps-devstg/k8s-eks/network/network.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "apps-devstg/k8s-eks/network/outputs.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "apps-devstg/k8s-eks/network/variables.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "apps-devstg/k8s-eks/network/vpc_peering.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "shared/base-network/config.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -58,7 +58,7 @@ data \"terraform_remote_state\" \"vpc-apps-dev-eks\" {\n     region  = var.region\n     profile = \"${var.project}-apps-devstg-devops\"\n     bucket  = \"${var.project}-apps-devstg-terraform-backend\"\n-    key     = \"apps-devstg/k8s-eks/vpc/terraform.tfstate\"\n+    key     = \"apps-devstg/k8s-eks/network/terraform.tfstate\"\n   }\n }\n "
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/binbashar/le-tf-infra-aws/commit/c00d24a1626e7d88a33431e4b403651acf158e05",
    "files": [
      {
        "filename": "apps-devstg/k8s-eks/network/locals.tf",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -84,48 +84,48 @@ locals {\n         rule_number = 100 # Allow traffic from Pritunl VPN server\n         rule_action = \"allow\"\n         from_port   = 0\n-        to_port     = 65535\n-        protocol    = \"-1\"\n+        to_port     = 65536\n+        protocol    = \"all\"\n         cidr_block  = \"${data.terraform_remote_state.tools-vpn-server.outputs.instance_private_ip}/32\"\n       },\n       {\n         rule_number = 110 # Allow traffic from Shared private subnet A\n         rule_action = \"allow\"\n         from_port   = 0\n-        to_port     = 65535\n-        protocol    = \"-1\"\n+        to_port     = 65536\n+        protocol    = \"all\"\n         cidr_block  = data.terraform_remote_state.shared-vpc.outputs.private_subnets_cidr[0]\n       },\n       {\n         rule_number = 120 # Allow traffic from Shared private subnet B\n         rule_action = \"allow\"\n         from_port   = 0\n-        to_port     = 65535\n-        protocol    = \"-1\"\n+        to_port     = 65536\n+        protocol    = \"all\"\n         cidr_block  = data.terraform_remote_state.shared-vpc.outputs.private_subnets_cidr[1]\n       },\n       {\n         rule_number = 200 # Allow traffic from EKS VPC private subnet A\n         rule_action = \"allow\"\n-        from_port   = 443\n-        to_port     = 443\n-        protocol    = \"tcp\"\n+        from_port   = 0\n+        to_port     = 65536\n+        protocol    = \"all\"\n         cidr_block  = local.private_subnets[0]\n       },\n       {\n         rule_number = 210 # Allow traffic from EKS VPC private subnet B\n         rule_action = \"allow\"\n-        from_port   = 443\n-        to_port     = 443\n-        protocol    = \"tcp\"\n+        from_port   = 0\n+        to_port     = 65536\n+        protocol    = \"all\"\n         cidr_block  = local.private_subnets[1]\n       },\n       {\n         rule_number = 220 # Allow traffic from EKS VPC private subnet C\n         rule_action = \"allow\"\n-        from_port   = 443\n-        to_port     = 443\n-        protocol    = \"tcp\"\n+        from_port   = 0\n+        to_port     = 65536\n+        protocol    = \"all\"\n         cidr_block  = local.private_subnets[2]\n       },\n     ]"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/binbashar/le-tf-infra-aws/commit/0662f7e1bfc70e21d8229e142b98b6c303addbc3",
    "files": [
      {
        "filename": "root/us-east-1/cost-mgmt/main.tf",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -8,7 +8,8 @@ module \"aws_cost_mgmt_billing_alert_50\" {\n   aws_env                   = \"${var.project}-${var.environment}-50\"\n   monthly_billing_threshold = var.monthly_billing_threshold_50\n   currency                  = var.currency\n-  sns_topic_arns            = [data.terraform_remote_state.notifications.outputs.sns_topic_arn_sms, data.terraform_remote_state.notifications.outputs.sns_topic_arn_monitoring]\n+  create_sns_topic          = false\n+  sns_topic_arns            = [data.terraform_remote_state.notifications.outputs.sns_topic_arn_costs]\n \n   tags = local.tags\n }\n@@ -20,7 +21,8 @@ module \"aws_cost_mgmt_billing_alert_100\" {\n   aws_env                   = \"${var.project}-${var.environment}-100\"\n   monthly_billing_threshold = var.monthly_billing_threshold_100\n   currency                  = var.currency\n-  sns_topic_arns            = [data.terraform_remote_state.notifications.outputs.sns_topic_arn_sms, data.terraform_remote_state.notifications.outputs.sns_topic_arn_monitoring]\n+  create_sns_topic          = false\n+  sns_topic_arns            = [data.terraform_remote_state.notifications.outputs.sns_topic_arn_costs]\n \n   tags = local.tags\n }\n@@ -41,7 +43,7 @@ module \"aws_cost_mgmt_budget_notif_75\" {\n   notification_threshold = var.notification_threshold_75\n   aws_sns_account_id     = var.root_account_id\n   create_sns_topic       = false\n-  sns_topic_arns         = [data.terraform_remote_state.notifications.outputs.sns_topic_arn_sms, data.terraform_remote_state.notifications.outputs.sns_topic_arn_monitoring]\n+  sns_topic_arns         = [data.terraform_remote_state.notifications.outputs.sns_topic_arn_costs]\n }\n \n # Budget = U$S100 at 100%\n@@ -57,5 +59,5 @@ module \"aws_cost_mgmt_budget_notif_100\" {\n   notification_threshold = var.notification_threshold_100\n   aws_sns_account_id     = var.root_account_id\n   create_sns_topic       = false\n-  sns_topic_arns         = [data.terraform_remote_state.notifications.outputs.sns_topic_arn_sms, data.terraform_remote_state.notifications.outputs.sns_topic_arn_monitoring]\n+  sns_topic_arns         = [data.terraform_remote_state.notifications.outputs.sns_topic_arn_costs]\n }"
      },
      {
        "filename": "root/us-east-1/notifications/outputs.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -97,7 +97,7 @@ output \"notify_slack_monitoring_sec_lambda_function_version_monitoring_sec\" {\n   value       = module.notify_slack_monitoring_sec.notify_slack_lambda_function_version\n }\n \n-output \"sns_topic_arn_sms\" {\n-  description = \"ARN for SMS SNS topic\"\n-  value       = try(module.notify_sms.sns_topic[0][\"arn\"], null)\n+output \"sns_topic_arn_costs\" {\n+  description = \"ARN for Costs SNS topic\"\n+  value       = try(module.notify_costs.sns_topic[0][\"arn\"], null)\n }"
      },
      {
        "filename": "root/us-east-1/notifications/sms_tools_monitoring.tf",
        "additions": 21,
        "deletions": 10,
        "changes": 31,
        "status": "modified",
        "patch": "@@ -1,16 +1,27 @@\n-module \"notify_sms\" {\n+module \"notify_costs\" {\n   source = \"github.com/binbashar/terraform-aws-sns-topic.git?ref=0.19.2\"\n \n-  name = var.sns_topic_name_sms\n+  name = var.sns_topic_name_costs\n \n-  subscribers = { for v in [\"phone1\", \"phone2\", \"phone3\", \"phone4\", \"phone5\"] :\n-    v => {\n-      protocol               = \"sms\"\n-      endpoint               = data.vault_generic_secret.notifications.data[v]\n-      endpoint_auto_confirms = true\n-      raw_message_delivery   = false\n+  subscribers = merge(\n+    {\n+      slack = {\n+        protocol               = \"lambda\"\n+        endpoint               = module.notify_slack_monitoring.notify_slack_lambda_function_arn\n+        endpoint_auto_confirms = true\n+        raw_message_delivery   = false\n+      }\n+    },\n+    {\n+      for v in [\"phone1\", \"phone2\", \"phone3\", \"phone4\", \"phone5\"] :\n+      v => {\n+        protocol               = \"sms\"\n+        endpoint               = data.vault_generic_secret.notifications.data[v]\n+        endpoint_auto_confirms = true\n+        raw_message_delivery   = false\n+      }\n     }\n-  }\n+  )\n \n   # Policy\n   sns_topic_policy_json = join(\"\", data.aws_iam_policy_document.aws_sns_topic_policy.*.json)\n@@ -27,6 +38,6 @@ data \"aws_iam_policy_document\" \"aws_sns_topic_policy\" {\n     }\n     effect    = \"Allow\"\n     actions   = [\"sns:Publish\"]\n-    resources = [\"arn:aws:sns:${var.region}:${var.root_account_id}:${var.sns_topic_name_sms}\"]\n+    resources = [\"arn:aws:sns:${var.region}:${var.root_account_id}:${var.sns_topic_name_costs}\"]\n   }\n }"
      },
      {
        "filename": "root/us-east-1/notifications/variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -104,9 +104,9 @@ variable \"sns_topic_name_monitoring_sec\" {\n   default     = \"sns-topic-slack-notify-monitoring-sec\"\n }\n \n-variable \"sns_topic_name_sms\" {\n+variable \"sns_topic_name_costs\" {\n   description = \"\"\n-  default     = \"sns-topic-sms\"\n+  default     = \"sns-topic-costs\"\n }\n \n #=============================#"
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/binbashar/le-tf-infra-aws/commit/89fd3ebb3ba1ccc9a9019ad250b93a336d4bc03e",
    "files": [
      {
        "filename": "management/global/cost-mgmt/.terraform.lock.hcl",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/aws\" {\n+  version     = \"3.75.1\"\n+  constraints = \">= 2.70.0, ~> 3.0\"\n+  hashes = [\n+    \"h1:++H0a4igODgreQL3SJuRz71JZkC69rl41R8xLYM894o=\",\n+    \"zh:11c2ee541ca1da923356c9225575ba294523d7b6af82d6171c912470ef0f90cd\",\n+    \"zh:19fe975993664252b4a2ff1079546f2b186b01d1a025a94a4f15c37e023806c5\",\n+    \"zh:442e7fc145b2debebe9279b283d07f5f736dc1776c2e5b1702728a6eb03789d0\",\n+    \"zh:7a77991b204ae2c16ac29a32226135d5fdbda40c8dafa77c5adf5439a346be77\",\n+    \"zh:89a257933181c15293c15a858fbfe7252129cc57cc2ec05b6c0b595d1bfe9d38\",\n+    \"zh:b1813ea5b6b0fd88ea85b1b21b8e4119566d1bc34feca297b4fb39d0536893cb\",\n+    \"zh:c519f3292ae431bd2381f88a95bd37c52f7a56d91feef88511e929344c180549\",\n+    \"zh:d3dbe88b661c073c174f04f73adc2720372143bdfa12f4fe8f411332e64662cf\",\n+    \"zh:e92a27e3c7295b031b5d62dd9428966c96e3157fc768b3d848a9ac60d1661c8e\",\n+    \"zh:ecd664c0d664fcf2d8a89a01462cb00bcae37da200305aef2de1b8fe185c9cd8\",\n+    \"zh:ed6ce1f9fa96aa28dd65842f852abed25f919d20b5cf53d26cec5b3f4d845725\",\n+  ]\n+}"
      },
      {
        "filename": "management/us-east-1/notifications/config.tf",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "status": "added",
        "patch": "@@ -0,0 +1,59 @@\n+#=============================#\n+# AWS Provider Settings       #\n+#=============================#\n+provider \"aws\" {\n+  region                  = var.region\n+  profile                 = var.profile\n+  shared_credentials_file = \"~/.aws/${var.project}/config\"\n+}\n+\n+#=============================#\n+# Vault Provider Settings     #\n+#=============================#\n+provider \"vault\" {\n+  address = var.vault_address\n+\n+  /*\n+  Vault token that will be used by Terraform to authenticate.\n+ admin token from https://portal.cloud.hashicorp.com/.\n+ */\n+  token = var.vault_token\n+}\n+\n+#=============================#\n+# Backend Config (partial)    #\n+#=============================#\n+terraform {\n+  required_version = \">= 1.0.9\"\n+\n+  required_providers {\n+    aws   = \"~> 3.2\"\n+    vault = \"~> 2.18.0\"\n+  }\n+\n+  backend \"s3\" {\n+    key = \"root/notifications/terraform.tfstate\"\n+  }\n+}\n+\n+#=============================#\n+# Data sources                #\n+#=============================#\n+\n+#\n+# data type from output for security\n+#\n+data \"terraform_remote_state\" \"keys\" {\n+  backend = \"s3\"\n+\n+  config = {\n+    region  = var.region\n+    profile = var.profile\n+    bucket  = var.bucket\n+    key     = \"${var.environment}/security-keys/terraform.tfstate\"\n+  }\n+}\n+\n+data \"vault_generic_secret\" \"notifications\" {\n+  path = \"secrets/${var.project}/${var.environment}/notifications\"\n+}"
      },
      {
        "filename": "management/us-east-1/notifications/costs_tools_monitoring.tf",
        "additions": 133,
        "deletions": 0,
        "changes": 133,
        "status": "added",
        "patch": "@@ -0,0 +1,133 @@\n+#\n+# SNS Topic with SMS subscriptions\n+#\n+module \"notify_costs\" {\n+  source = \"github.com/binbashar/terraform-aws-sns-topic.git?ref=0.20.1\"\n+\n+  name = var.sns_topic_name_costs\n+\n+  subscribers = {\n+    for v in [\"phone1\", \"phone2\", \"phone3\", \"phone4\", \"phone5\"] :\n+    v => {\n+      protocol               = \"sms\"\n+      endpoint               = data.vault_generic_secret.notifications.data[v]\n+      endpoint_auto_confirms = true\n+      raw_message_delivery   = false\n+    }\n+  }\n+\n+  kms_master_key_id = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+}\n+\n+# Subscribing a list of email addresses to SNS topic\n+resource \"aws_sns_topic_subscription\" \"topic_email_subscription\" {\n+  count                  = length(var.costs_email_addresses)\n+  topic_arn              = module.notify_costs.sns_topic_arn\n+  endpoint_auto_confirms = true\n+  protocol               = \"email\"\n+  endpoint               = var.costs_email_addresses[count.index]\n+}\n+\n+resource \"aws_sns_topic_policy\" \"sns-notify-costs\" {\n+  arn = module.notify_costs.sns_topic_arn\n+\n+  policy = data.aws_iam_policy_document.sns-notify-costs.json\n+}\n+\n+# Access policy document\n+data \"aws_iam_policy_document\" \"sns-notify-costs\" {\n+  policy_id = \"__default_policy_ID\"\n+\n+  statement {\n+    actions = [\n+      \"SNS:Publish\",\n+    ]\n+\n+    effect = \"Allow\"\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"budgets.amazonaws.com\"]\n+    }\n+\n+    resources = [\n+      module.notify_costs.sns_topic_arn,\n+    ]\n+\n+    sid = \"_budgets_service_access_ID\"\n+  }\n+\n+  statement {\n+    actions = [\n+      \"SNS:Subscribe\",\n+      \"SNS:SetTopicAttributes\",\n+      \"SNS:RemovePermission\",\n+      \"SNS:Receive\",\n+      \"SNS:Publish\",\n+      \"SNS:ListSubscriptionsByTopic\",\n+      \"SNS:GetTopicAttributes\",\n+      \"SNS:DeleteTopic\",\n+      \"SNS:AddPermission\",\n+    ]\n+\n+    condition {\n+      test     = \"StringEquals\"\n+      variable = \"AWS:SourceOwner\"\n+\n+      values = [\n+        var.root_account_id,\n+      ]\n+    }\n+\n+    effect = \"Allow\"\n+\n+    principals {\n+      type        = \"AWS\"\n+      identifiers = [\"*\"]\n+    }\n+\n+    resources = [\n+      module.notify_costs.sns_topic_arn,\n+    ]\n+\n+    sid = \"__default_statement_ID\"\n+  }\n+}\n+\n+#============================#\n+# AWS SNS -> Lambda -> Slack #\n+#============================#\n+# Encrypt the URL, storing encryption here will show it in logs and in tfstate\n+# https://www.terraform.io/docs/state/sensitive-data.html\n+data \"aws_kms_ciphertext\" \"slack_url_monitoring_costs\" {\n+  plaintext = data.vault_generic_secret.notifications.data[\"slack_webhook_monitoring_costs\"]\n+  key_id    = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+}\n+\n+# Set create_with_kms_key = true\n+# when providing value of kms_key_arn to create required IAM policy which allows to decrypt using specified KMS key.\n+module \"notify_slack_monitoring_costs\" {\n+  source = \"github.com/binbashar/terraform-aws-notify-slack.git?ref=v4.24.0\"\n+\n+  #\n+  # Creation Flags\n+  #\n+  create           = true\n+  create_sns_topic = false\n+\n+  #\n+  # Slack Webhook URL + Channel\n+  #\n+  slack_channel     = \"le-tools-monitoring-costs\"\n+  slack_username    = \"leverops-aws-costs\"\n+  slack_emoji       = \":AWS3:\"\n+  slack_webhook_url = data.aws_kms_ciphertext.slack_url_monitoring_costs.ciphertext_blob\n+\n+  kms_key_arn          = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+  lambda_function_name = \"${var.project}-${var.environment}-notify-slack-monitoring-costs\"\n+  lambda_description   = \"Lambda function which sends notifications to Slack from the Costs Topic\"\n+  log_events           = false\n+  sns_topic_name       = var.sns_topic_name_costs\n+\n+  cloudwatch_log_group_kms_key_id = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+}"
      },
      {
        "filename": "management/us-east-1/notifications/outputs.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -97,7 +97,10 @@ output \"notify_slack_monitoring_sec_lambda_function_version_monitoring_sec\" {\n   value       = module.notify_slack_monitoring_sec.notify_slack_lambda_function_version\n }\n \n+#\n+# AWS SNS - sns-topic-costs\n+#\n output \"sns_topic_arn_costs\" {\n   description = \"ARN for Costs SNS topic\"\n-  value       = try(module.notify_costs.sns_topic[0][\"arn\"], null)\n+  value       = module.notify_costs.sns_topic_arn\n }"
      },
      {
        "filename": "management/us-east-1/notifications/slack_tools_monitoring.tf",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "status": "added",
        "patch": "@@ -0,0 +1,37 @@\n+# Encrypt the URL, storing encryption here will show it in logs and in tfstate\n+# https://www.terraform.io/docs/state/sensitive-data.html\n+data \"aws_kms_ciphertext\" \"slack_url_monitoring\" {\n+  plaintext = data.vault_generic_secret.notifications.data[\"slack_webhook_monitoring\"]\n+  key_id    = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+}\n+\n+#============================#\n+# AWS SNS -> Lambda -> Slack #\n+#============================#\n+# Set create_with_kms_key = true\n+# when providing value of kms_key_arn to create required IAM policy which allows to decrypt using specified KMS key.\n+module \"notify_slack_monitoring\" {\n+  source = \"github.com/binbashar/terraform-aws-notify-slack.git?ref=v4.24.0\"\n+\n+  #\n+  # Creation Flags\n+  #\n+  create           = true\n+  create_sns_topic = true\n+\n+  #\n+  # Slack Webhook URL + Channel\n+  #\n+  slack_channel     = \"le-tools-monitoring\"\n+  slack_username    = \"aws-binbash-org\"\n+  slack_emoji       = \":AWS3:\"\n+  slack_webhook_url = data.aws_kms_ciphertext.slack_url_monitoring.ciphertext_blob\n+\n+  kms_key_arn          = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+  lambda_function_name = \"${var.project}-${var.environment}-notify-slack-monitoring\"\n+  lambda_description   = \"Lambda function which sends notifications to Slack\"\n+  log_events           = false\n+  sns_topic_name       = var.sns_topic_name_monitoring\n+\n+  cloudwatch_log_group_kms_key_id = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+}"
      },
      {
        "filename": "management/us-east-1/notifications/slack_tools_monitoring_sec.tf",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "status": "added",
        "patch": "@@ -0,0 +1,37 @@\n+# Encrypt the URL, storing encryption here will show it in logs and in tfstate\n+# https://www.terraform.io/docs/state/sensitive-data.html\n+data \"aws_kms_ciphertext\" \"slack_url_monitoring_sec\" {\n+  plaintext = data.vault_generic_secret.notifications.data[\"slack_webhook_monitoring_sec\"]\n+  key_id    = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+}\n+\n+#============================#\n+# AWS SNS -> Lambda -> Slack #\n+#============================#\n+# Set create_with_kms_key = true\n+# when providing value of kms_key_arn to create required IAM policy which allows to decrypt using specified KMS key.\n+module \"notify_slack_monitoring_sec\" {\n+  source = \"github.com/binbashar/terraform-aws-notify-slack.git?ref=v4.24.0\"\n+\n+  #\n+  # Creation Flags\n+  #\n+  create           = true\n+  create_sns_topic = true\n+\n+  #\n+  # Slack Webhook URL + Channel\n+  #\n+  slack_channel     = \"le-tools-monitoring-sec\"\n+  slack_username    = \"aws-binbash-org\"\n+  slack_emoji       = \":AWS3:\"\n+  slack_webhook_url = data.aws_kms_ciphertext.slack_url_monitoring_sec.ciphertext_blob\n+\n+  kms_key_arn          = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+  lambda_function_name = \"${var.project}-${var.environment}-notify-slack-monitoring-sec\"\n+  lambda_description   = \"Lambda function which sends notifications to Slack\"\n+  log_events           = false\n+  sns_topic_name       = var.sns_topic_name_monitoring_sec\n+\n+  cloudwatch_log_group_kms_key_id = data.terraform_remote_state.keys.outputs.aws_kms_key_arn\n+}"
      },
      {
        "filename": "management/us-east-1/security-keys/config.tf",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "status": "added",
        "patch": "@@ -0,0 +1,23 @@\n+#=============================#\n+# AWS Provider Settings       #\n+#=============================#\n+provider \"aws\" {\n+  region                  = var.region\n+  profile                 = var.profile\n+  shared_credentials_file = \"~/.aws/${var.project}/config\"\n+}\n+\n+#=============================#\n+# Backend Config (partial)    #\n+#=============================#\n+terraform {\n+  required_version = \">= 1.0.9\"\n+\n+  required_providers {\n+    aws = \"~> 3.0\"\n+  }\n+\n+  backend \"s3\" {\n+    key = \"root/security-keys/terraform.tfstate\"\n+  }\n+}"
      },
      {
        "filename": "management/us-east-1/security-keys/kms.tf",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "status": "added",
        "patch": "@@ -0,0 +1,67 @@\n+module \"kms_key\" {\n+  source = \"github.com/binbashar/terraform-aws-kms-key.git?ref=0.10.0\"\n+\n+  enabled                 = true\n+  namespace               = var.project\n+  stage                   = var.environment\n+  name                    = var.kms_key_name\n+  delimiter               = \"-\"\n+  description             = \"KMS key for ${var.project}-${var.environment} Account\"\n+  deletion_window_in_days = 7\n+  enable_key_rotation     = true\n+  alias                   = \"alias/${var.project}_${var.environment}_${var.kms_key_name}_key\"\n+  policy                  = data.aws_iam_policy_document.kms.json\n+  tags                    = local.tags\n+}\n+\n+data \"aws_iam_policy_document\" \"kms\" {\n+  statement {\n+    sid       = \"Enable IAM User Permissions\"\n+    effect    = \"Allow\"\n+    actions   = [\"kms:*\"]\n+    resources = [\"*\"]\n+\n+    principals {\n+      type        = \"AWS\"\n+      identifiers = [\"arn:aws:iam::${var.root_account_id}:root\"]\n+    }\n+  }\n+\n+  statement {\n+    sid    = \"Enable CloudWatch Logs Service\"\n+    effect = \"Allow\"\n+    actions = [\n+      \"kms:Encrypt*\",\n+      \"kms:Decrypt*\",\n+      \"kms:ReEncrypt*\",\n+      \"kms:GenerateDataKey*\",\n+      \"kms:Describe*\"\n+    ]\n+    resources = [\"*\"]\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"logs.${var.region}.amazonaws.com\"]\n+    }\n+    condition {\n+      test     = \"ArnLike\"\n+      variable = \"kms:EncryptionContext:aws:logs:arn\"\n+      values   = [\"arn:aws:logs:${var.region}:${var.root_account_id}:*\"]\n+    }\n+  }\n+\n+  statement {\n+    sid    = \"Enable Budgets Service\"\n+    effect = \"Allow\"\n+    actions = [\n+      \"kms:Decrypt*\",\n+      \"kms:GenerateDataKey*\"\n+    ]\n+    resources = [\"*\"]\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"budgets.amazonaws.com\"]\n+    }\n+  }\n+}"
      },
      {
        "filename": "management/us-east-1/security-keys/variables.tf",
        "additions": 95,
        "deletions": 0,
        "changes": 95,
        "status": "added",
        "patch": "@@ -0,0 +1,95 @@\n+#\n+# management/config/backend.tfvars\n+#\n+#================================#\n+# Terraform AWS Backend Settings #\n+#================================#\n+variable \"region\" {\n+  type        = string\n+  description = \"AWS Region\"\n+}\n+\n+variable \"profile\" {\n+  type        = string\n+  description = \"AWS Profile (required by the backend but also used for other resources)\"\n+}\n+\n+variable \"bucket\" {\n+  type        = string\n+  description = \"AWS S3 TF State Backend Bucket\"\n+}\n+\n+variable \"dynamodb_table\" {\n+  type        = string\n+  description = \"AWS DynamoDB TF Lock state table name\"\n+}\n+\n+variable \"encrypt\" {\n+  type        = bool\n+  description = \"Enable AWS DynamoDB with server side encryption\"\n+}\n+\n+#\n+# config/common.tfvars\n+#\n+#=============================#\n+# Project Variables           #\n+#=============================#\n+variable \"project\" {\n+  type        = string\n+  description = \"Project Name\"\n+}\n+\n+variable \"project_long\" {\n+  type        = string\n+  description = \"Project Long Name\"\n+}\n+\n+variable \"environment\" {\n+  type        = string\n+  description = \"Environment Name\"\n+}\n+\n+variable \"region_secondary\" {\n+  type        = string\n+  description = \"AWS Secondary Region for HA\"\n+}\n+\n+variable \"root_account_id\" {\n+  type        = string\n+  description = \"Account: Root Organization\"\n+}\n+\n+variable \"security_account_id\" {\n+  type        = string\n+  description = \"Account: Security & Users Management\"\n+}\n+\n+variable \"shared_account_id\" {\n+  type        = string\n+  description = \"Account: Shared Resources\"\n+}\n+\n+variable \"network_account_id\" {\n+  type        = string\n+  description = \"Account: Networking Resources\"\n+}\n+\n+variable \"appsdevstg_account_id\" {\n+  type        = string\n+  description = \"Account: Dev Modules & Libs\"\n+}\n+\n+variable \"appsprd_account_id\" {\n+  type        = string\n+  description = \"Account: Prod Modules & Libs\"\n+}\n+\n+#===========================================#\n+# Security                                  #\n+#===========================================#\n+variable \"kms_key_name\" {\n+  type        = string\n+  description = \"KMS key solution name, e.g. 'app' or 'jenkins'\"\n+  default     = \"kms\"\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/PaloAltoNetworks/terraform-aws-vmseries-modules/commit/1af5d07714182455cafd972556b507409f9559ae",
    "files": [
      {
        "filename": "examples/tgw_inbound_combined_with_gwlb/README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -102,7 +102,7 @@ In a nutshell it means:\n \n | Name | Description |\n |------|-------------|\n-| <a name=\"output_app1_inspected_dns_name\"></a> [app1\\_inspected\\_dns\\_name](#output\\_app1\\_inspected\\_dns\\_name) | The DNS name that you can use to SSH into a testbox. Use `ssh ubuntu@<<value>>` command with the same public key as given in the `ssh_public_key_file_path` input. |\n+| <a name=\"output_app1_inspected_dns_name\"></a> [app1\\_inspected\\_dns\\_name](#output\\_app1\\_inspected\\_dns\\_name) | The DNS name that you can use to SSH into a testbox. Use username `bitnami` and the private key matching the public key configured with the input `ssh_public_key_file_path`. |\n | <a name=\"output_app1_inspected_public_ip\"></a> [app1\\_inspected\\_public\\_ip](#output\\_app1\\_inspected\\_public\\_ip) | The IP address behind the `app1_inspected_dns_name`. |\n | <a name=\"output_security_gwlb_service_name\"></a> [security\\_gwlb\\_service\\_name](#output\\_security\\_gwlb\\_service\\_name) | The AWS Service Name of the created GWLB, which is suitable to use for subsequent VPC Endpoints. |\n <!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->"
      },
      {
        "filename": "examples/tgw_inbound_combined_with_gwlb/app1_spoke.tf",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -80,20 +80,15 @@ module \"app1_route\" {\n ### App1 EC2 instance ###\n \n data \"aws_ami\" \"this\" {\n-  most_recent = true\n+  most_recent = true # newest by time, not by version number\n \n   filter {\n     name   = \"name\"\n-    values = [\"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*\"]\n+    values = [\"bitnami-nginx-1.21*-linux-debian-10-x86_64-hvm-ebs-nami\"]\n     # The wildcard '*' causes re-creation of the whole EC2 instance when a new image appears.\n   }\n \n-  filter {\n-    name   = \"virtualization-type\"\n-    values = [\"hvm\"]\n-  }\n-\n-  owners = [\"099720109477\"]\n+  owners = [\"979382823631\"] # bitnami = 979382823631\n }\n \n module \"app1_ec2\" {"
      },
      {
        "filename": "examples/tgw_inbound_combined_with_gwlb/outputs.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -8,7 +8,7 @@ output \"security_gwlb_service_name\" {\n ##### App1 VPC #####\n \n output \"app1_inspected_dns_name\" {\n-  description = \"The DNS name that you can use to SSH into a testbox. Use `ssh ubuntu@<<value>>` command with the same public key as given in the `ssh_public_key_file_path` input.\"\n+  description = \"The DNS name that you can use to SSH into a testbox. Use username `bitnami` and the private key matching the public key configured with the input `ssh_public_key_file_path`.\"\n   value       = module.app1_lb.lb_dns_name\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/renovate-tests/hackstack-local/commit/5e8b6f6b88db49a0508ea670d71070c92cfdbaca",
    "files": [
      {
        "filename": "deployment/terraform/cluster/aws/infrastructure/main.tf",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -3,18 +3,18 @@ locals {\n }\n module \"haystack-k8s\" {\n   source = \"../../../modules/k8s-cluster/aws\"\n-  k8s_aws_nodes_subnet_ids = \"${var.aws_nodes_subnet}\"\n-  k8s_aws_ssh_key = \"${var.aws_ssh_key}\"\n-  k8s_hosted_zone_id = \"${data.aws_route53_zone.haystack_dns_zone.id}\"\n-  k8s_base_domain_name = \"${var.aws_domain_name}\"\n-  k8s_master_instance_type = \"${var.k8s_node_instance_type}\"\n-  k8s_aws_vpc_id = \"${var.aws_vpc_id}\"\n-  k8s_aws_zone = \"${var.aws_zone}\"\n-  k8s_aws_utility_subnet_ids = \"${var.aws_utilities_subnet}\"\n-  k8s_node_instance_type = \"${var.k8s_node_instance_type}\"\n-  k8s_s3_bucket_name = \"${var.s3_bucket_name}\"\n-  k8s_aws_region = \"${var.aws_region}\"\n-  k8s_node_instance_count = \"${var.k8s_node_instance_count}\"\n+  aws_nodes_subnet_ids = \"${var.aws_nodes_subnet}\"\n+  aws_ssh_key = \"${var.aws_ssh_key}\"\n+  aws_hosted_zone_id = \"${data.aws_route53_zone.haystack_dns_zone.id}\"\n+  aws_domain_name = \"${var.aws_domain_name}\"\n+  master_instance_type = \"${var.k8s_node_instance_type}\"\n+  aws_vpc_id = \"${var.aws_vpc_id}\"\n+  aws_zone = \"${var.aws_zone}\"\n+  aws_utility_subnet_ids = \"${var.aws_utilities_subnet}\"\n+  node_instance_type = \"${var.k8s_node_instance_type}\"\n+  s3_bucket_name = \"${var.s3_bucket_name}\"\n+  aws_region = \"${var.aws_region}\"\n+  node_instance_count = \"${var.k8s_node_instance_count}\"\n   reverse_proxy_port = \"${var.reverse_proxy_port}\"\n   kops_executable_name = \"${var.kops_executable_name}\"\n   haystack_cluster_name = \"${var.haystack_cluster_name}\""
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/cassandra/main.tf",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "status": "modified",
        "patch": "@@ -14,35 +14,35 @@ data \"aws_ami\" \"haystack-cassandra-base-ami\" {\n }\n \n locals {\n-  cassandra_ami = \"${var.cassandra_node_image == \"\" ? data.aws_ami.haystack-cassandra-base-ami.image_id : var.cassandra_node_image }\"\n+  cassandra_ami = \"${var.node_image == \"\" ? data.aws_ami.haystack-cassandra-base-ami.image_id : var.node_image }\"\n   cassandra_config_yaml_path = \"/etc/cassandra/default.conf/cassandra.yaml\"\n-  cassandra_non_seed_node_count = \"${var.cassandra_node_count - 1}\"\n+  cassandra_non_seed_node_count = \"${var.node_count - 1}\"\n   cassandra_cname = \"${var.haystack_cluster_name}-cassandra\"\n   cassandra_ssh_user = \"ec2-user\"\n }\n \n module \"cassandra-security-groups\" {\n   source = \"security_groups\"\n-  cassandra_aws_vpc_id= \"${var.cassandra_aws_vpc_id}\"\n+  aws_vpc_id= \"${var.aws_vpc_id}\"\n   haystack_cluster_name = \"${var.haystack_cluster_name}\"\n }\n \n data \"template_file\" \"cassandra_seed_user_data\" {\n   template = \"${file(\"${path.module}/data/seed_node_user_data_sh.tpl\")}\"\n \n   vars {\n-    haystack_graphite_host = \"${var.cassandra_graphite_host}\"\n-    haystack_graphite_port = \"${var.cassandra_graphite_port}\"\n+    haystack_graphite_host = \"${var.graphite_host}\"\n+    haystack_graphite_port = \"${var.graphite_port}\"\n   }\n }\n \n // create seed node\n resource \"aws_instance\" \"haystack-cassandra-seed-node\" {\n   ami = \"${local.cassandra_ami}\"\n-  instance_type = \"${var.cassandra_node_instance_type}\"\n-  subnet_id = \"${var.cassandra_aws_subnet}\"\n+  instance_type = \"${var.node_instance_type}\"\n+  subnet_id = \"${var.aws_subnet}\"\n   security_groups = [ \"${module.cassandra-security-groups.nodes_security_group_ids}\"]\n-  key_name = \"${var.cassandra_ssh_key_pair_name}\"\n+  key_name = \"${var.aws_ssh_key_pair_name}\"\n \n   tags = {\n     Product = \"Haystack\"\n@@ -55,7 +55,7 @@ resource \"aws_instance\" \"haystack-cassandra-seed-node\" {\n \n   root_block_device = {\n     volume_type = \"gp2\"\n-    volume_size = \"${var.cassandra_node_volume_size}\"\n+    volume_size = \"${var.node_volume_size}\"\n     delete_on_termination = false\n   }\n \n@@ -67,19 +67,19 @@ data \"template_file\" \"cassandra_non_seed_user_data\" {\n \n   vars {\n     seed_ip = \"${aws_instance.haystack-cassandra-seed-node.private_ip}\"\n-    haystack_graphite_host = \"${var.cassandra_graphite_host}\"\n-    haystack_graphite_port = \"${var.cassandra_graphite_port}\"\n+    haystack_graphite_host = \"${var.graphite_host}\"\n+    haystack_graphite_port = \"${var.graphite_port}\"\n   }\n }\n \n // use seed node ip to create & initialize non-seed nodes\n resource \"aws_instance\" \"haystack-cassandra-non-seed-nodes\" {\n   count = \"${local.cassandra_non_seed_node_count}\"\n   ami = \"${local.cassandra_ami}\"\n-  instance_type = \"${var.cassandra_node_instance_type}\"\n-  subnet_id = \"${var.cassandra_aws_subnet}\"\n+  instance_type = \"${var.node_instance_type}\"\n+  subnet_id = \"${var.aws_subnet}\"\n   security_groups = [ \"${module.cassandra-security-groups.nodes_security_group_ids}\"]\n-  key_name = \"${var.cassandra_ssh_key_pair_name}\"\n+  key_name = \"${var.aws_ssh_key_pair_name}\"\n \n   tags {\n     Product = \"Haystack\"\n@@ -93,7 +93,7 @@ resource \"aws_instance\" \"haystack-cassandra-non-seed-nodes\" {\n \n   root_block_device = {\n     volume_type = \"gp2\"\n-    volume_size = \"${var.cassandra_node_volume_size}\"\n+    volume_size = \"${var.node_volume_size}\"\n     delete_on_termination = false\n   }\n \n@@ -102,7 +102,7 @@ resource \"aws_instance\" \"haystack-cassandra-non-seed-nodes\" {\n \n // create cname for newly created cassandra cluster\n resource \"aws_route53_record\" \"haystack-cassandra-cname\" {\n-  zone_id = \"${var.cassandra_hosted_zone_id}\"\n+  zone_id = \"${var.aws_hosted_zone_id}\"\n   name    = \"${local.cassandra_cname}\"\n   type    = \"A\"\n   ttl     = \"300\""
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/cassandra/security_groups/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n resource \"aws_security_group\" \"haystack-cassandra-nodes\" {\n   name = \"${var.haystack_cluster_name}-cassandra-node-sg\"\n-  vpc_id = \"${var.cassandra_aws_vpc_id}\"\n+  vpc_id = \"${var.aws_vpc_id}\"\n   description = \"Security group for haystack cassandra nodes\"\n \n   tags = {"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/cassandra/security_groups/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,2 +1,2 @@\n-variable \"cassandra_aws_vpc_id\" {}\n+variable \"aws_vpc_id\" {}\n variable \"haystack_cluster_name\" {}"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/cassandra/variables.tf",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -1,14 +1,14 @@\n-variable \"cassandra_node_count\" {}\n-variable \"cassandra_node_volume_size\" {}\n-variable \"cassandra_node_instance_type\" {}\n-variable \"cassandra_node_image\" {\n+variable \"node_count\" {}\n+variable \"node_volume_size\" {}\n+variable \"node_instance_type\" {}\n+variable \"node_image\" {\n   default = \"\"\n }\n-variable \"cassandra_aws_vpc_id\" {}\n-variable \"cassandra_aws_region\" {}\n-variable \"cassandra_aws_subnet\" {}\n-variable \"cassandra_hosted_zone_id\" {}\n-variable \"cassandra_ssh_key_pair_name\" {}\n-variable \"cassandra_graphite_host\" {}\n-variable \"cassandra_graphite_port\" {}\n+variable \"aws_vpc_id\" {}\n+variable \"aws_region\" {}\n+variable \"aws_subnet\" {}\n+variable \"aws_hosted_zone_id\" {}\n+variable \"aws_ssh_key_pair_name\" {}\n+variable \"graphite_host\" {}\n+variable \"graphite_port\" {}\n variable \"haystack_cluster_name\" {}\n\\ No newline at end of file"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/elasticsearch/data/haystack-index-store-es-policy",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "status": "removed",
        "patch": "@@ -1,11 +0,0 @@\n-{\n-  \"Version\": \"2012-10-17\",\n-  \"Statement\": [\n-    {\n-      \"Effect\": \"Allow\",\n-      \"Principal\": \"*\",\n-      \"Action\": \"es:*\",\n-      \"Resource\": \"arn:aws:es:us-west-2:810409578363:domain/haystack-index-store/*\"\n-    }\n-  ]\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/elasticsearch/main.tf",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "status": "modified",
        "patch": "@@ -1,6 +1,11 @@\n locals {\n   haystack_index_store_domain_name = \"${var.haystack_cluster_name}-index-store\"\n-  haystack_index_store_access_policy_file_path = \"${path.module}/data/haystack-index-store-es-policy\"\n+}\n+\n+module \"security_groups\" {\n+  source = \"security_groups\"\n+  haystack_cluster_name = \"${var.haystack_cluster_name}\"\n+  aws_vpc_id = \"${var.aws_vpc_id}\"\n }\n resource \"aws_elasticsearch_domain\" \"haystack_index_store\" {\n   domain_name = \"${local.haystack_index_store_domain_name}\"\n@@ -13,13 +18,19 @@ resource \"aws_elasticsearch_domain\" \"haystack_index_store\" {\n     dedicated_master_type = \"${var.haystack_index_store_master_instance_type}\"\n     dedicated_master_count = \"${var.haystack_index_store_master_instance_count}\"\n   }\n+  vpc_options {\n+    subnet_ids = [\n+      \"${var.aws_subnet}\"\n+    ]\n+    security_group_ids = [\n+      \"${module.security_groups.es_security_group_ids}\"\n+    ]\n+  }\n \n   advanced_options {\n     \"rest.action.multi.allow_explicit_index\" = \"true\"\n   }\n \n-  access_policies = \"${file(\"${local.haystack_index_store_access_policy_file_path}\")}\"\n-\n   snapshot_options {\n     automated_snapshot_start_hour = 23\n   }\n@@ -28,6 +39,6 @@ resource \"aws_elasticsearch_domain\" \"haystack_index_store\" {\n     Component = \"ES\"\n     ClusterName = \"${var.haystack_cluster_name}\"\n     Role = \"${local.haystack_index_store_domain_name}\"\n-    Name =  \"${local.haystack_index_store_domain_name}\"\n+    Name = \"${local.haystack_index_store_domain_name}\"\n   }\n }\n\\ No newline at end of file"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/elasticsearch/security_groups/main.tf",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "status": "added",
        "patch": "@@ -0,0 +1,27 @@\n+resource \"aws_security_group\" \"haystack-es\" {\n+  name = \"${var.haystack_cluster_name}-es\"\n+  vpc_id = \"${var.aws_vpc_id}\"\n+  description = \"Security group for haystack ES\"\n+\n+  tags = {\n+    Product = \"Haystack\"\n+    Component = \"ES\"\n+    ClusterName = \"${var.haystack_cluster_name}\"\n+    Role = \"${var.haystack_cluster_name}-es\"\n+    Name = \"${var.haystack_cluster_name}-es\"\n+  }\n+  ingress {\n+    from_port = 80\n+    protocol = \"tcp\"\n+    to_port = 80\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+\n+  egress {\n+    from_port = 0\n+    to_port = 0\n+    protocol = \"-1\"\n+    cidr_blocks = [\n+      \"0.0.0.0/0\"]\n+  }\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/elasticsearch/security_groups/outputs.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+output \"es_security_group_ids\" {\n+  value = \"${aws_security_group.haystack-es.id}\"\n+}"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/elasticsearch/security_groups/variables.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "added",
        "patch": "@@ -0,0 +1,2 @@\n+variable \"aws_vpc_id\" {}\n+variable \"haystack_cluster_name\" {}"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/elasticsearch/variables.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -3,7 +3,10 @@ variable \"haystack_index_store_master_instance_type\" {}\n variable \"haystack_index_store_worker_instance_count\" {}\n variable \"haystack_index_store_master_instance_count\" {}\n variable \"haystack_index_store_es_version\" {\n-  default = \"5.5\"\n+  default = \"6.0\"\n }\n variable \"haystack_cluster_name\" {}\n+variable \"aws_vpc_id\" {}\n+variable \"aws_subnet\" {}\n+\n "
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/kafka/main.tf",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -14,38 +14,38 @@ data \"aws_ami\" \"haystack-kafka-base-ami\" {\n }\n \n locals {\n-  kafka_broker_ami = \"${var.kafka_broker_image == \"\" ? data.aws_ami.haystack-kafka-base-ami.image_id : var.kafka_broker_image }\"\n+  kafka_broker_ami = \"${var.broker_image == \"\" ? data.aws_ami.haystack-kafka-base-ami.image_id : var.broker_image }\"\n   kafka_cname = \"${var.haystack_cluster_name}-kafka\"\n   kafka_port = \"9092\"\n }\n \n module \"kafka-security-groups\" {\n   source = \"security_groups\"\n-  kafka_aws_vpc_id= \"${var.kafka_aws_vpc_id}\"\n+  aws_vpc_id= \"${var.aws_vpc_id}\"\n   haystack_cluster_name = \"${var.haystack_cluster_name}\"\n }\n \n data \"template_file\" \"kafka_broker_user_data\" {\n   template = \"${file(\"${path.module}/data/kafka_broker_user_data_sh.tpl\")}\"\n \n   vars {\n-    haystack_graphite_host = \"${var.kafka_graphite_host}\"\n-    haystack_graphite_port = \"${var.kafka_graphite_port}\"\n+    haystack_graphite_host = \"${var.aws_graphite_host}\"\n+    haystack_graphite_port = \"${var.aws_graphite_port}\"\n     zookeeper_hosts = \"localhost:2181\"\n     num_partitions = \"96\"\n     retention_hours = \"24\"\n-    retention_bytes = \"${var.kafka_broker_volume_size * 805306368}\"\n+    retention_bytes = \"${var.broker_volume_size * 805306368}\"\n   }\n }\n \n // create kafka brokers\n resource \"aws_instance\" \"haystack-kafka-broker\" {\n-  count = \"${var.kafka_broker_count}\"\n+  count = \"${var.broker_count}\"\n   ami = \"${local.kafka_broker_ami}\"\n-  instance_type = \"${var.kafka_broker_instance_type}\"\n-  subnet_id = \"${var.kafka_aws_subnet}\"\n+  instance_type = \"${var.broker_instance_type}\"\n+  subnet_id = \"${var.aws_subnet}\"\n   security_groups = [ \"${module.kafka-security-groups.kafka_broker_security_group_ids}\"]\n-  key_name = \"${var.kafka_ssh_key_pair_name}\"\n+  key_name = \"${var.aws_ssh_key_pair_name}\"\n \n   tags = {\n     Product = \"Haystack\"\n@@ -56,7 +56,7 @@ resource \"aws_instance\" \"haystack-kafka-broker\" {\n   }\n   root_block_device = {\n     volume_type = \"gp2\"\n-    volume_size = \"${var.kafka_broker_volume_size}\"\n+    volume_size = \"${var.broker_volume_size}\"\n     delete_on_termination = false\n   }\n \n@@ -65,7 +65,7 @@ resource \"aws_instance\" \"haystack-kafka-broker\" {\n \n // create cname for newly created kafka cluster\n resource \"aws_route53_record\" \"haystack-kafka-cname\" {\n-  zone_id = \"${var.kafka_hosted_zone_id}\"\n+  zone_id = \"${var.aws_hosted_zone_id}\"\n   name    = \"${local.kafka_cname}\"\n   type    = \"A\"\n   ttl     = \"300\""
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/kafka/security_groups/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n resource \"aws_security_group\" \"haystack-kafka\" {\n   name = \"${var.haystack_cluster_name}-kafka-brokers\"\n-  vpc_id = \"${var.kafka_aws_vpc_id}\"\n+  vpc_id = \"${var.aws_vpc_id}\"\n   description = \"Security group for haystack kafka brokers\"\n \n   tags = {"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/kafka/security_groups/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,2 +1,2 @@\n-variable \"kafka_aws_vpc_id\" {}\n+variable \"aws_vpc_id\" {}\n variable \"haystack_cluster_name\" {}"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/kafka/variables.tf",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -1,14 +1,14 @@\n-variable \"kafka_broker_count\" {}\n-variable \"kafka_broker_volume_size\" {}\n-variable \"kafka_broker_instance_type\" {}\n-variable \"kafka_broker_image\" {\n+variable \"broker_count\" {}\n+variable \"broker_volume_size\" {}\n+variable \"broker_instance_type\" {}\n+variable \"broker_image\" {\n   default = \"\"\n }\n-variable \"kafka_aws_vpc_id\" {}\n-variable \"kafka_aws_region\" {}\n-variable \"kafka_aws_subnet\" {}\n-variable \"kafka_hosted_zone_id\" {}\n-variable \"kafka_ssh_key_pair_name\" {}\n-variable \"kafka_graphite_host\" {}\n-variable \"kafka_graphite_port\" {}\n+variable \"aws_vpc_id\" {}\n+variable \"aws_region\" {}\n+variable \"aws_subnet\" {}\n+variable \"aws_hosted_zone_id\" {}\n+variable \"aws_ssh_key_pair_name\" {}\n+variable \"aws_graphite_host\" {}\n+variable \"aws_graphite_port\" {}\n variable \"haystack_cluster_name\" {}\n\\ No newline at end of file"
      },
      {
        "filename": "deployment/terraform/modules/haystack-datastores/aws/main.tf",
        "additions": 23,
        "deletions": 21,
        "changes": 44,
        "status": "modified",
        "patch": "@@ -5,17 +5,17 @@ locals {\n \n module \"cassandra\" {\n   source = \"cassandra\"\n-  cassandra_aws_region = \"${var.aws_region}\"\n-  cassandra_aws_vpc_id = \"${var.aws_vpc_id}\"\n-  cassandra_aws_subnet = \"${var.aws_nodes_subnet}\"\n-  cassandra_hosted_zone_id = \"${var.aws_hosted_zone_id}\"\n-  cassandra_node_image = \"${var.cassandra_node_image}\"\n-  cassandra_node_volume_size = \"${var.cassandra_node_volume_size}\"\n-  cassandra_node_count = \"${var.cassandra_node_instance_count}\"\n-  cassandra_node_instance_type = \"${var.cassandra_node_instance_type}\"\n-  cassandra_ssh_key_pair_name = \"${var.aws_ssh_key}\"\n-  cassandra_graphite_host = \"${local.graphite_hostname}\"\n-  cassandra_graphite_port = \"${local.graphite_port}\"\n+  aws_region = \"${var.aws_region}\"\n+  aws_vpc_id = \"${var.aws_vpc_id}\"\n+  aws_subnet = \"${var.aws_nodes_subnet}\"\n+  aws_hosted_zone_id = \"${var.aws_hosted_zone_id}\"\n+  node_image = \"${var.cassandra_node_image}\"\n+  node_volume_size = \"${var.cassandra_node_volume_size}\"\n+  node_count = \"${var.cassandra_node_instance_count}\"\n+  node_instance_type = \"${var.cassandra_node_instance_type}\"\n+  aws_ssh_key_pair_name = \"${var.aws_ssh_key}\"\n+  graphite_host = \"${local.graphite_hostname}\"\n+  graphite_port = \"${local.graphite_port}\"\n   haystack_cluster_name = \"${var.haystack_cluster_name}\"\n }\n \n@@ -26,19 +26,21 @@ module \"es\" {\n   haystack_index_store_worker_instance_count = \"${var.haystack_index_store_instance_count}\"\n   haystack_index_store_worker_instance_type = \"${var.haystack_index_store_worker_instance_type}\"\n   haystack_cluster_name = \"${var.haystack_cluster_name}\"\n+  aws_vpc_id = \"${var.aws_vpc_id}\"\n+  aws_subnet = \"${var.aws_nodes_subnet}\"\n }\n \n module \"kafka\" {\n   source = \"kafka\"\n-  kafka_aws_vpc_id = \"${var.aws_vpc_id}\"\n-  kafka_aws_region = \"${var.aws_region}\"\n-  kafka_broker_count = \"${var.kafka_broker_count}\"\n-  kafka_broker_instance_type = \"${var.kafka_broker_instance_type}\"\n-  kafka_broker_volume_size = \"${var.kafka_broker_volume_size}\"\n-  kafka_aws_subnet = \"${var.aws_nodes_subnet}\"\n-  kafka_hosted_zone_id = \"${var.aws_hosted_zone_id}\"\n-  kafka_ssh_key_pair_name = \"${var.aws_ssh_key}\"\n-  kafka_graphite_host = \"${local.graphite_hostname}\"\n-  kafka_graphite_port = \"${local.graphite_port}\"\n+  aws_vpc_id = \"${var.aws_vpc_id}\"\n+  aws_region = \"${var.aws_region}\"\n+  broker_count = \"${var.kafka_broker_count}\"\n+  broker_instance_type = \"${var.kafka_broker_instance_type}\"\n+  broker_volume_size = \"${var.kafka_broker_volume_size}\"\n+  aws_subnet = \"${var.aws_nodes_subnet}\"\n+  aws_hosted_zone_id = \"${var.aws_hosted_zone_id}\"\n+  aws_ssh_key_pair_name = \"${var.aws_ssh_key}\"\n+  aws_graphite_host = \"${local.graphite_hostname}\"\n+  aws_graphite_port = \"${local.graphite_port}\"\n   haystack_cluster_name = \"${var.haystack_cluster_name}\"\n }"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/asg/main.tf",
        "additions": 49,
        "deletions": 62,
        "changes": 111,
        "status": "modified",
        "patch": "@@ -1,8 +1,8 @@\n //we can't currently update the cluster name, TODO: make it configurable\n locals {\n-  k8s_master_1_instance_group_name = \"master-${var.k8s_aws_zone}-1\"\n-  k8s_master_2_instance_group_name = \"master-${var.k8s_aws_zone}-2\"\n-  k8s_master_3_instance_group_name = \"master-${var.k8s_aws_zone}-3\"\n+  k8s_master_1_instance_group_name = \"master-${var.aws_zone}-1\"\n+  k8s_master_2_instance_group_name = \"master-${var.aws_zone}-2\"\n+  k8s_master_3_instance_group_name = \"master-${var.aws_zone}-3\"\n   k8s_nodes_instance_group_name = \"nodes\"\n }\n \n@@ -13,7 +13,7 @@ resource \"aws_autoscaling_group\" \"master-1\" {\n   max_size = 1\n   min_size = 1\n   vpc_zone_identifier = [\n-    \"${var.k8s_aws_nodes_subnet_ids}\"]\n+    \"${var.aws_nodes_subnet_ids}\"]\n \n \n   tags = {\n@@ -22,14 +22,11 @@ resource \"aws_autoscaling_group\" \"master-1\" {\n     ClusterName = \"${var.haystack_cluster_name}\"\n     Role = \"${var.haystack_cluster_name}-k8s-masters\"\n     Name = \"${var.haystack_cluster_name}-k8s-masters-1\"\n+    //this tag is required by protokube(kops) to set up kubecfg on that host, change with caution\n+    \"k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup\" = \"${local.k8s_master_1_instance_group_name}\"\n   }\n \n-  //this tag is required by protokube(kops) to set up kubecfg on that host, change with caution\n-  tag = {\n-    key = \"k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup\"\n-    value = \"master-${var.k8s_aws_zone}-1\"\n-    propagate_at_launch = true\n-  }\n+\n \n \n   depends_on = [\n@@ -47,22 +44,19 @@ resource \"aws_autoscaling_group\" \"master-2\" {\n   max_size = 1\n   min_size = 1\n   vpc_zone_identifier = [\n-    \"${var.k8s_aws_nodes_subnet_ids}\"]\n+    \"${var.aws_nodes_subnet_ids}\"]\n \n   tags = {\n     Product = \"Haystack\"\n     Component = \"K8s\"\n     ClusterName = \"${var.haystack_cluster_name}\"\n     Role = \"${var.haystack_cluster_name}-k8s-masters\"\n     Name = \"${var.haystack_cluster_name}-k8s-masters-2\"\n+    //this tag is required by protokube(kops) to set up kubecfg on that host, change with caution\n+    \"k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup\" = \"${local.k8s_master_2_instance_group_name}\"\n   }\n \n-  //this tag is required by protokube(kops) to set up kubecfg on that host, change with caution\n-  tag = {\n-    key = \"k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup\"\n-    value = \"${local.k8s_master_2_instance_group_name}\"\n-    propagate_at_launch = true\n-  }\n+\n \n   depends_on = [\n     \"aws_ebs_volume.1-etcd-events\",\n@@ -79,23 +73,20 @@ resource \"aws_autoscaling_group\" \"master-3\" {\n   max_size = 1\n   min_size = 1\n   vpc_zone_identifier = [\n-    \"${var.k8s_aws_nodes_subnet_ids}\"]\n+    \"${var.aws_nodes_subnet_ids}\"]\n \n   tags = {\n     Product = \"Haystack\"\n     Component = \"K8s\"\n     ClusterName = \"${var.haystack_cluster_name}\"\n     Role = \"${var.haystack_cluster_name}-k8s-masters\"\n     Name = \"${var.haystack_cluster_name}-k8s-masters-3\"\n-  }\n \n-  //this tag is required by protokube(kops) to set up kubecfg on that host, change with caution\n-  tag = {\n-    key = \"k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup\"\n-    value = \"${local.k8s_master_3_instance_group_name}\"\n-    propagate_at_launch = true\n+    //this tag is required by protokube(kops) to set up kubecfg on that host, change with caution\n+    \"k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup\" = \"${local.k8s_master_3_instance_group_name}\"\n   }\n \n+\n   depends_on = [\n     \"aws_ebs_volume.1-etcd-events\",\n     \"aws_ebs_volume.1-etcd-main\",\n@@ -108,25 +99,21 @@ resource \"aws_autoscaling_group\" \"master-3\" {\n resource \"aws_autoscaling_group\" \"nodes\" {\n   name = \"${var.haystack_cluster_name}-nodes\"\n   launch_configuration = \"${aws_launch_configuration.nodes.id}\"\n-  max_size = \"${var.k8s_node_instance_count}\"\n-  min_size = \"${var.k8s_node_instance_count}\"\n+  max_size = \"${var.nodes_instance_count}\"\n+  min_size = \"${var.nodes_instance_count}\"\n   vpc_zone_identifier = [\n-    \"${var.k8s_aws_nodes_subnet_ids}\"]\n+    \"${var.aws_nodes_subnet_ids}\"]\n \n   tags = {\n     Product = \"Haystack\"\n     Component = \"K8s\"\n     ClusterName = \"${var.haystack_cluster_name}\"\n     Role = \"${var.haystack_cluster_name}-k8s-nodes\"\n     Name = \"${var.haystack_cluster_name}-k8s-nodes\"\n+    //this tag is required by protokube(kops) to set up kubecfg on that host, change with caution\n+    \"k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup\" = \"${local.k8s_nodes_instance_group_name}\"\n   }\n \n-  //this tag is required by protokube(kops) to set up kubecfg on that host, change with caution\n-  tag = {\n-    key = \"k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup\"\n-    value = \"${local.k8s_nodes_instance_group_name}\"\n-    propagate_at_launch = true\n-  }\n \n }\n \n@@ -135,18 +122,18 @@ data \"template_file\" \"master-1-user-data\" {\n   template = \"${file(\"${path.module}/templates/k8s_master_user-data.tpl\")}\"\n   vars {\n     cluster_name = \"${var.k8s_cluster_name}\"\n-    s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n+    s3_bucket_name = \"${var.s3_bucket_name}\"\n     instance_group_name = \"${local.k8s_master_1_instance_group_name}\"\n   }\n }\n resource \"aws_launch_configuration\" \"master-1\" {\n   name_prefix = \"${var.haystack_cluster_name}-master-1}\"\n-  image_id = \"${var.k8s_master_ami}\"\n-  instance_type = \"${var.k8s_master_instance_type}\"\n-  key_name = \"${var.k8s_aws_ssh_key}\"\n-  iam_instance_profile = \"${var.master_iam-instance-profile_arn}\"\n+  image_id = \"${var.masters_ami}\"\n+  instance_type = \"${var.masters_instance_type}\"\n+  key_name = \"${var.aws_ssh_key}\"\n+  iam_instance_profile = \"${var.masters_iam-instance-profile_arn}\"\n   security_groups = [\n-    \"${var.master_security_groups}\"]\n+    \"${var.masters_security_groups}\"]\n   associate_public_ip_address = false\n   user_data = \"${data.template_file.master-1-user-data.rendered}\"\n \n@@ -165,19 +152,19 @@ data \"template_file\" \"master-2-user-data\" {\n   template = \"${file(\"${path.module}/templates/k8s_master_user-data.tpl\")}\"\n   vars {\n     cluster_name = \"${var.k8s_cluster_name}\"\n-    s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n+    s3_bucket_name = \"${var.s3_bucket_name}\"\n     instance_group_name = \"${local.k8s_master_2_instance_group_name}\"\n   }\n }\n \n resource \"aws_launch_configuration\" \"master-2\" {\n   name_prefix = \"${var.haystack_cluster_name}-master-2}\"\n-  image_id = \"${var.k8s_master_ami}\"\n-  instance_type = \"${var.k8s_master_instance_type}\"\n-  key_name = \"${var.k8s_aws_ssh_key}\"\n-  iam_instance_profile = \"${var.master_iam-instance-profile_arn}\"\n+  image_id = \"${var.masters_ami}\"\n+  instance_type = \"${var.masters_instance_type}\"\n+  key_name = \"${var.aws_ssh_key}\"\n+  iam_instance_profile = \"${var.masters_iam-instance-profile_arn}\"\n   security_groups = [\n-    \"${var.master_security_groups}\"]\n+    \"${var.masters_security_groups}\"]\n   associate_public_ip_address = false\n   user_data = \"${data.template_file.master-2-user-data.rendered}\"\n \n@@ -197,19 +184,19 @@ data \"template_file\" \"master-3-user-data\" {\n   template = \"${file(\"${path.module}/templates/k8s_master_user-data.tpl\")}\"\n   vars {\n     cluster_name = \"${var.k8s_cluster_name}\"\n-    s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n+    s3_bucket_name = \"${var.s3_bucket_name}\"\n     instance_group_name = \"${local.k8s_master_3_instance_group_name}\"\n   }\n }\n \n resource \"aws_launch_configuration\" \"master-3\" {\n   name_prefix = \"${var.haystack_cluster_name}-master-3}\"\n-  image_id = \"${var.k8s_master_ami}\"\n-  instance_type = \"${var.k8s_master_instance_type}\"\n-  key_name = \"${var.k8s_aws_ssh_key}\"\n-  iam_instance_profile = \"${var.master_iam-instance-profile_arn}\"\n+  image_id = \"${var.masters_ami}\"\n+  instance_type = \"${var.masters_instance_type}\"\n+  key_name = \"${var.aws_ssh_key}\"\n+  iam_instance_profile = \"${var.masters_iam-instance-profile_arn}\"\n   security_groups = [\n-    \"${var.master_security_groups}\"]\n+    \"${var.masters_security_groups}\"]\n   associate_public_ip_address = false\n   user_data = \"${data.template_file.master-3-user-data.rendered}\"\n \n@@ -227,19 +214,19 @@ data \"template_file\" \"nodes-user-data\" {\n   template = \"${file(\"${path.module}/templates/k8s_nodes_user-data.tpl\")}\"\n   vars {\n     cluster_name = \"${var.k8s_cluster_name}\"\n-    s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n+    s3_bucket_name = \"${var.s3_bucket_name}\"\n     instance_group_name = \"${local.k8s_nodes_instance_group_name}\"\n   }\n }\n \n resource \"aws_launch_configuration\" \"nodes\" {\n   name_prefix = \"nodes\"\n-  image_id = \"${var.k8s_node_ami}\"\n-  instance_type = \"${var.k8s_node_instance_type}\"\n-  key_name = \"${var.k8s_aws_ssh_key}\"\n+  image_id = \"${var.nodes_ami}\"\n+  instance_type = \"${var.nodes_instance_type}\"\n+  key_name = \"${var.aws_ssh_key}\"\n   iam_instance_profile = \"${var.nodes_iam-instance-profile_arn}\"\n   security_groups = [\n-    \"${var.node_security_groups}\"]\n+    \"${var.nodes_security_groups}\"]\n   associate_public_ip_address = false\n   user_data = \"${data.template_file.nodes-user-data.rendered}\"\n \n@@ -257,7 +244,7 @@ resource \"aws_launch_configuration\" \"nodes\" {\n \n \n resource \"aws_ebs_volume\" \"1-etcd-events\" {\n-  availability_zone = \"${var.k8s_aws_zone}\"\n+  availability_zone = \"${var.aws_zone}\"\n   size = 20\n   type = \"gp2\"\n   encrypted = false\n@@ -276,7 +263,7 @@ resource \"aws_ebs_volume\" \"1-etcd-events\" {\n }\n \n resource \"aws_ebs_volume\" \"1-etcd-main\" {\n-  availability_zone = \"${var.k8s_aws_zone}\"\n+  availability_zone = \"${var.aws_zone}\"\n   size = 20\n   type = \"gp2\"\n   encrypted = false\n@@ -295,7 +282,7 @@ resource \"aws_ebs_volume\" \"1-etcd-main\" {\n }\n \n resource \"aws_ebs_volume\" \"2-etcd-events\" {\n-  availability_zone = \"${var.k8s_aws_zone}\"\n+  availability_zone = \"${var.aws_zone}\"\n   size = 20\n   type = \"gp2\"\n   encrypted = false\n@@ -314,7 +301,7 @@ resource \"aws_ebs_volume\" \"2-etcd-events\" {\n }\n \n resource \"aws_ebs_volume\" \"2-etcd-main\" {\n-  availability_zone = \"${var.k8s_aws_zone}\"\n+  availability_zone = \"${var.aws_zone}\"\n   size = 20\n   type = \"gp2\"\n   encrypted = false\n@@ -333,7 +320,7 @@ resource \"aws_ebs_volume\" \"2-etcd-main\" {\n }\n \n resource \"aws_ebs_volume\" \"3-etcd-events\" {\n-  availability_zone = \"${var.k8s_aws_zone}\"\n+  availability_zone = \"${var.aws_zone}\"\n   size = 20\n   type = \"gp2\"\n   encrypted = false\n@@ -352,7 +339,7 @@ resource \"aws_ebs_volume\" \"3-etcd-events\" {\n }\n \n resource \"aws_ebs_volume\" \"3-etcd-main\" {\n-  availability_zone = \"${var.k8s_aws_zone}\"\n+  availability_zone = \"${var.aws_zone}\"\n   size = 20\n   type = \"gp2\"\n   encrypted = false"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/asg/variables.tf",
        "additions": 14,
        "deletions": 17,
        "changes": 31,
        "status": "modified",
        "patch": "@@ -1,28 +1,25 @@\n-variable \"k8s_aws_ssh_key\" {}\n-variable \"k8s_s3_bucket_name\" {}\n-variable \"k8s_aws_zone\" {}\n-variable \"k8s_aws_nodes_subnet_ids\" {}\n-variable \"k8s_node_instance_type\" {}\n-variable \"k8s_node_instance_count\" {}\n-variable \"k8s_master_instance_type\" {}\n-variable \"k8s_aws_region\" {}\n+variable \"aws_ssh_key\" {}\n+variable \"s3_bucket_name\" {}\n+variable \"aws_zone\" {}\n+variable \"aws_nodes_subnet_ids\" {}\n+variable \"nodes_instance_type\" {}\n+variable \"nodes_instance_count\" {}\n+variable \"masters_instance_type\" {}\n+variable \"aws_region\" {}\n variable \"k8s_cluster_name\" {}\n-variable \"master_iam-instance-profile_arn\" {}\n+variable \"masters_iam-instance-profile_arn\" {}\n variable \"haystack_cluster_name\" {}\n+variable \"nodes_iam-instance-profile_arn\" {}\n \n-variable \"master_security_groups\" {\n+variable \"masters_security_groups\" {\n   type = \"list\"\n }\n-variable \"nodes_iam-instance-profile_arn\" {}\n-variable \"node_security_groups\" {\n+variable \"nodes_security_groups\" {\n   type = \"list\"\n }\n-\n-\n-variable \"k8s_node_ami\" {\n+variable \"nodes_ami\" {\n   default = \"ami-06a57e7e\"\n }\n-\n-variable \"k8s_master_ami\" {\n+variable \"masters_ami\" {\n   default = \"ami-06a57e7e\"\n }"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/elbs/main.tf",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -9,9 +9,9 @@ resource \"aws_elb\" \"api-elb\" {\n   }\n \n   security_groups = [\n-    \"${var.k8s_elb_api_security_groups}\"]\n+    \"${var.elb_api_security_groups}\"]\n   subnets = [\n-    \"${var.k8s_elb_subnet}\"]\n+    \"${var.aws_elb_subnet}\"]\n   internal = false\n \n   health_check = {\n@@ -45,9 +45,9 @@ resource \"aws_elb\" \"nodes-elb\" {\n   }\n \n   security_groups = [\n-    \"${var.k8s_nodes_api_security_groups}\"]\n+    \"${var.nodes_api_security_groups}\"]\n   subnets = [\n-    \"${var.k8s_elb_subnet}\"]\n+    \"${var.aws_elb_subnet}\"]\n   internal = false\n \n   health_check = {\n@@ -76,7 +76,7 @@ resource \"aws_route53_record\" \"api-elb-route53\" {\n   records = [\n     \"${aws_elb.api-elb.dns_name}\"]\n   ttl = 300\n-  zone_id = \"/hostedzone/${var.k8s_hosted_zone_id}\"\n+  zone_id = \"/hostedzone/${var.aws_hosted_zone_id}\"\n   //this would ensure that the cluster is up and configured correctly\n   provisioner \"local-exec\" {\n     command = \"for i in {1..50}; do ${var.kubectl_executable_name} get nodes --context ${var.k8s_cluster_name} -- && break || sleep 15; done\"\n@@ -93,7 +93,7 @@ resource \"aws_route53_record\" \"nodes-elb-route53\" {\n   records = [\n     \"${aws_elb.nodes-elb.dns_name}\"]\n   ttl = 300\n-  zone_id = \"/hostedzone/${var.k8s_hosted_zone_id}\"\n+  zone_id = \"/hostedzone/${var.aws_hosted_zone_id}\"\n   depends_on = [\n     \"aws_route53_record.api-elb-route53\",\n     \"aws_autoscaling_attachment.nodes\"]"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/elbs/variables.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,11 +1,11 @@\n-variable \"k8s_elb_api_security_groups\" {\n+variable \"elb_api_security_groups\" {\n   type = \"list\"\n }\n-variable \"k8s_elb_subnet\" {}\n-variable \"k8s_hosted_zone_id\" {}\n+variable \"aws_elb_subnet\" {}\n+variable \"aws_hosted_zone_id\" {}\n variable \"k8s_cluster_name\" {}\n variable \"haystack_cluster_name\" {}\n-variable \"k8s_nodes_api_security_groups\" {\n+variable \"nodes_api_security_groups\" {\n   type = \"list\"\n }\n variable \"kubectl_executable_name\" {}"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/iam-roles/main.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -22,8 +22,8 @@ resource \"aws_iam_role\" \"nodes-role\" {\n data \"template_file\" \"masters-iam-role-policy-template\" {\n   template = \"${file(\"${path.module}/templates/masters_iam-role-policy.tpl\")}\"\n   vars {\n-    aws_hosted_zone_id = \"${var.k8s_hosted_zone_id}\"\n-    s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n+    aws_hosted_zone_id = \"${var.aws_hosted_zone_id}\"\n+    s3_bucket_name = \"${var.s3_bucket_name}\"\n   }\n }\n resource \"aws_iam_role_policy\" \"masters-policy\" {\n@@ -36,7 +36,7 @@ resource \"aws_iam_role_policy\" \"masters-policy\" {\n data \"template_file\" \"nodes-iam-role-policy-template\" {\n   template = \"${file(\"${path.module}/templates/nodes_iam-role-policy.tpl\")}\"\n   vars {\n-    s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n+    s3_bucket_name = \"${var.s3_bucket_name}\"\n   }\n }\n resource \"aws_iam_role_policy\" \"nodes-policy\" {"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/iam-roles/variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n-variable \"k8s_s3_bucket_name\" {}\n-variable \"k8s_hosted_zone_id\" {}\n+variable \"s3_bucket_name\" {}\n+variable \"aws_hosted_zone_id\" {}\n variable \"k8s_cluster_name\" {}\n variable \"haystack_cluster_name\" {}\n "
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/kops/main.tf",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -8,15 +8,15 @@ data \"template_file\" \"cluster_config\" {\n   vars {\n     k8s_version = \"${var.k8s_version}\"\n     cluster_name = \"${var.k8s_cluster_name}\"\n-    aws_vpc_id = \"${var.k8s_aws_vpc_id}\"\n-    aws_zone = \"${var.k8s_aws_zone}\"\n-    s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n-    master_instance_type = \"${var.k8s_master_instance_type}\"\n-    node_instance_count = \"${var.k8s_node_instance_count}\"\n-    node_instance_type = \"${var.k8s_node_instance_type}\"\n-    aws_node_subnet = \"${var.k8s_aws_nodes_subnet}\"\n-    aws_utilities_subnet = \"${var.k8s_aws_utilities_subnet}\"\n-    aws_dns_zone_id = \"${var.k8s_hosted_zone_id}\"\n+    aws_vpc_id = \"${var.aws_vpc_id}\"\n+    aws_zone = \"${var.aws_zone}\"\n+    s3_bucket_name = \"${var.s3_bucket_name}\"\n+    master_instance_type = \"${var.masters_instance_type}\"\n+    node_instance_count = \"${var.nodes_instance_count}\"\n+    node_instance_type = \"${var.nodes_instance_type}\"\n+    aws_node_subnet = \"${var.aws_nodes_subnet}\"\n+    aws_utilities_subnet = \"${var.aws_utilities_subnet}\"\n+    aws_dns_zone_id = \"${var.aws_hosted_zone_id}\"\n   }\n }\n \n@@ -29,14 +29,14 @@ resource \"null_resource\" \"export-cluster-rendered-template\" {\n   }\n   //updating the cluster config in S3\n   provisioner \"local-exec\" {\n-    command = \"${var.kops_executable_name} create -f ${local.rendered_config_path} --state s3://${var.k8s_s3_bucket_name}\"\n+    command = \"${var.kops_executable_name} create -f ${local.rendered_config_path} --state s3://${var.s3_bucket_name}\"\n   }\n   provisioner \"local-exec\" {\n-    command = \"${var.kops_executable_name} create secret --name ${var.k8s_cluster_name} --state s3://${var.k8s_s3_bucket_name} sshpublickey admin -i ${local.kops_public_key_path}\"\n+    command = \"${var.kops_executable_name} create secret --name ${var.k8s_cluster_name} --state s3://${var.s3_bucket_name} sshpublickey admin -i ${local.kops_public_key_path}\"\n   }\n   //generating certs using kops\n   provisioner \"local-exec\" {\n-    command = \"${var.kops_executable_name} update cluster ${var.k8s_cluster_name} --state s3://${var.k8s_s3_bucket_name} --target terraform\"\n+    command = \"${var.kops_executable_name} update cluster ${var.k8s_cluster_name} --state s3://${var.s3_bucket_name} --target terraform\"\n   }\n \n }\n\\ No newline at end of file"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/kops/variables.tf",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -1,12 +1,12 @@\n variable \"kops_executable_name\" {}\n variable \"k8s_version\" {}\n variable \"k8s_cluster_name\" {}\n-variable \"k8s_s3_bucket_name\" {}\n-variable \"k8s_aws_zone\" {}\n-variable \"k8s_aws_vpc_id\" {}\n-variable \"k8s_node_instance_type\" {}\n-variable \"k8s_node_instance_count\" {}\n-variable \"k8s_master_instance_type\" {}\n-variable \"k8s_hosted_zone_id\" {}\n-variable \"k8s_aws_nodes_subnet\" {}\n-variable \"k8s_aws_utilities_subnet\" {}\n+variable \"s3_bucket_name\" {}\n+variable \"aws_zone\" {}\n+variable \"aws_vpc_id\" {}\n+variable \"nodes_instance_type\" {}\n+variable \"nodes_instance_count\" {}\n+variable \"masters_instance_type\" {}\n+variable \"aws_hosted_zone_id\" {}\n+variable \"aws_nodes_subnet\" {}\n+variable \"aws_utilities_subnet\" {}"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/main.tf",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "status": "modified",
        "patch": "@@ -1,65 +1,65 @@\n locals {\n-  k8s_cluster_name = \"${var.haystack_cluster_name}-k8s.${var.k8s_base_domain_name}\"\n+  k8s_cluster_name = \"${var.haystack_cluster_name}-k8s.${var.aws_domain_name}\"\n }\n \n \n module \"kops\" {\n   source = \"kops\"\n   k8s_version = \"${var.k8s_version}\"\n-  k8s_aws_vpc_id = \"${var.k8s_aws_vpc_id}\"\n-  k8s_node_instance_count = \"${var.k8s_node_instance_count}\"\n+  aws_vpc_id = \"${var.aws_vpc_id}\"\n+  nodes_instance_count = \"${var.node_instance_count}\"\n   k8s_cluster_name = \"${local.k8s_cluster_name}\"\n-  k8s_master_instance_type = \"${var.k8s_master_instance_type}\"\n+  masters_instance_type = \"${var.master_instance_type}\"\n   kops_executable_name = \"${var.kops_executable_name}\"\n-  k8s_node_instance_type = \"${var.k8s_node_instance_type}\"\n-  k8s_s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n-  k8s_hosted_zone_id = \"${var.k8s_hosted_zone_id}\"\n-  k8s_aws_zone = \"${var.k8s_aws_zone}\"\n-  k8s_aws_nodes_subnet = \"${var.k8s_aws_nodes_subnet_ids}\"\n-  k8s_aws_utilities_subnet = \"${var.k8s_aws_utility_subnet_ids}\"\n+  nodes_instance_type = \"${var.node_instance_type}\"\n+  s3_bucket_name = \"${var.s3_bucket_name}\"\n+  aws_hosted_zone_id = \"${var.aws_hosted_zone_id}\"\n+  aws_zone = \"${var.aws_zone}\"\n+  aws_nodes_subnet = \"${var.aws_nodes_subnet_ids}\"\n+  aws_utilities_subnet = \"${var.aws_utility_subnet_ids}\"\n \n }\n \n module \"security_groups\" {\n   source = \"security-groups\"\n-  k8s_vpc_id = \"${var.k8s_aws_vpc_id}\"\n+  aws_vpc_id = \"${var.aws_vpc_id}\"\n   reverse_proxy_port = \"${var.reverse_proxy_port}\"\n   k8s_cluster_name = \"${local.k8s_cluster_name}\"\n   haystack_cluster_name = \"${var.haystack_cluster_name}\"\n }\n \n module \"iam_roles\" {\n   source = \"iam-roles\"\n-  k8s_hosted_zone_id = \"${var.k8s_hosted_zone_id}\"\n-  k8s_s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n+  aws_hosted_zone_id = \"${var.aws_hosted_zone_id}\"\n+  s3_bucket_name = \"${var.s3_bucket_name}\"\n   k8s_cluster_name = \"${local.k8s_cluster_name}\"\n   haystack_cluster_name = \"${var.haystack_cluster_name}\"\n }\n module \"asg\" {\n   source = \"asg\"\n   k8s_cluster_name = \"${local.k8s_cluster_name}\"\n-  k8s_s3_bucket_name = \"${var.k8s_s3_bucket_name}\"\n+  s3_bucket_name = \"${var.s3_bucket_name}\"\n   nodes_iam-instance-profile_arn = \"${module.iam_roles.nodes_iam-instance-profile_arn}\"\n-  k8s_node_instance_type = \"${var.k8s_node_instance_type}\"\n-  k8s_node_instance_count = \"${var.k8s_node_instance_count}\"\n-  node_security_groups = \"${module.security_groups.node_security_group_ids}\"\n-  k8s_aws_region = \"${var.k8s_aws_region}\"\n-  k8s_aws_zone = \"${var.k8s_aws_zone}\"\n-  k8s_master_instance_type = \"${var.k8s_master_instance_type}\"\n-  k8s_aws_ssh_key = \"${var.k8s_aws_ssh_key}\"\n-  k8s_aws_nodes_subnet_ids = \"${var.k8s_aws_nodes_subnet_ids}\"\n-  master_security_groups = \"${module.security_groups.master_security_group_ids}\"\n-  master_iam-instance-profile_arn = \"${module.iam_roles.masters_iam-instance-profile_arn}\"\n+  nodes_instance_type = \"${var.node_instance_type}\"\n+  nodes_instance_count = \"${var.node_instance_count}\"\n+  nodes_security_groups = \"${module.security_groups.node_security_group_ids}\"\n+  aws_region = \"${var.aws_region}\"\n+  aws_zone = \"${var.aws_zone}\"\n+  masters_instance_type = \"${var.master_instance_type}\"\n+  aws_ssh_key = \"${var.aws_ssh_key}\"\n+  aws_nodes_subnet_ids = \"${var.aws_nodes_subnet_ids}\"\n+  masters_security_groups = \"${module.security_groups.master_security_group_ids}\"\n+  masters_iam-instance-profile_arn = \"${module.iam_roles.masters_iam-instance-profile_arn}\"\n   haystack_cluster_name = \"${var.haystack_cluster_name}\"\n }\n \n module \"elbs\" {\n   source = \"elbs\"\n-  k8s_elb_api_security_groups = \"${module.security_groups.api-elb-security_group_ids}\"\n-  k8s_elb_subnet = \"${var.k8s_aws_utility_subnet_ids}\"\n-  k8s_hosted_zone_id = \"${var.k8s_hosted_zone_id}\"\n+  elb_api_security_groups = \"${module.security_groups.api-elb-security_group_ids}\"\n+  aws_elb_subnet = \"${var.aws_utility_subnet_ids}\"\n+  aws_hosted_zone_id = \"${var.aws_hosted_zone_id}\"\n   k8s_cluster_name = \"${local.k8s_cluster_name}\"\n-  k8s_nodes_api_security_groups = \"${module.security_groups.nodes-api-elb-security_group_ids}\"\n+  nodes_api_security_groups = \"${module.security_groups.nodes-api-elb-security_group_ids}\"\n   reverse_proxy_port = \"${var.reverse_proxy_port}\"\n   \"master-1_asg_id\" = \"${module.asg.master-1_asg_id}\"\n   \"master-2_asg_id\" = \"${module.asg.master-2_asg_id}\""
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/security-groups/main.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n //api elb security group\n resource \"aws_security_group\" \"api-elb\" {\n   name = \"api-elb.${var.haystack_cluster_name}\"\n-  vpc_id = \"${var.k8s_vpc_id}\"\n+  vpc_id = \"${var.aws_vpc_id}\"\n   description = \"Security group for api ELB\"\n \n   ingress {\n@@ -33,7 +33,7 @@ resource \"aws_security_group\" \"api-elb\" {\n //node elb security group\n resource \"aws_security_group\" \"nodes-elb\" {\n   name = \"nodes-elb.${var.haystack_cluster_name}\"\n-  vpc_id = \"${var.k8s_vpc_id}\"\n+  vpc_id = \"${var.aws_vpc_id}\"\n   description = \"Security group for nodes ELB\"\n   ingress {\n     from_port = 80\n@@ -83,7 +83,7 @@ resource \"aws_security_group_rule\" \"all-node-to-node\" {\n \n resource \"aws_security_group\" \"nodes\" {\n   name = \"nodes.${var.haystack_cluster_name}\"\n-  vpc_id = \"${var.k8s_vpc_id}\"\n+  vpc_id = \"${var.aws_vpc_id}\"\n   description = \"Security group for nodes\"\n \n   ingress {\n@@ -129,7 +129,7 @@ resource \"aws_security_group_rule\" \"all-master-to-master\" {\n }\n resource \"aws_security_group\" \"masters\" {\n   name = \"masters.${var.haystack_cluster_name}\"\n-  vpc_id = \"${var.k8s_vpc_id}\"\n+  vpc_id = \"${var.aws_vpc_id}\"\n   description = \"Security group for masters\"\n \n   ingress {"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/security-groups/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n-variable \"k8s_vpc_id\" {}\n+variable \"aws_vpc_id\" {}\n variable \"reverse_proxy_port\" {}\n variable \"k8s_cluster_name\" {}\n variable \"haystack_cluster_name\" {}"
      },
      {
        "filename": "deployment/terraform/modules/k8s-cluster/aws/variables.tf",
        "additions": 17,
        "deletions": 14,
        "changes": 31,
        "status": "modified",
        "patch": "@@ -1,26 +1,29 @@\n-variable \"k8s_aws_ssh_key\" {}\n-variable \"k8s_s3_bucket_name\" {}\n-variable \"k8s_aws_zone\" {}\n-variable \"k8s_aws_vpc_id\" {}\n-variable \"k8s_aws_nodes_subnet_ids\" {}\n-variable \"k8s_aws_utility_subnet_ids\" {}\n-variable \"k8s_node_instance_type\" {}\n-variable \"k8s_node_instance_count\" {}\n-variable \"k8s_master_instance_type\" {}\n-variable \"k8s_hosted_zone_id\" {}\n-variable \"k8s_base_domain_name\" {}\n+variable \"aws_ssh_key\" {}\n+variable \"s3_bucket_name\" {}\n+variable \"aws_zone\" {}\n+variable \"aws_vpc_id\" {}\n+variable \"aws_nodes_subnet_ids\" {}\n+variable \"aws_utility_subnet_ids\" {}\n+variable \"aws_hosted_zone_id\" {}\n+variable \"aws_domain_name\" {}\n+variable \"aws_region\" {}\n+\n+variable \"node_instance_type\" {}\n+variable \"node_instance_count\" {}\n+variable \"master_instance_type\" {}\n+\n variable \"reverse_proxy_port\" {}\n-variable \"k8s_aws_region\" {}\n+\n variable \"kops_executable_name\" {}\n variable \"kubectl_executable_name\" {}\n variable \"haystack_cluster_name\" {}\n variable \"k8s_version\" {\n   default = \"1.8.4\"\n }\n-variable \"k8s_node_ami\" {\n+variable \"node_ami\" {\n   default = \"ami-06a57e7e\"\n }\n \n-variable \"k8s_master_ami\" {\n+variable \"master_ami\" {\n   default = \"ami-06a57e7e\"\n }"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/mads-hartmann/cloud.mads-hartmann.com/commit/667f5715c19534bfe5b01ad692979447412fd033",
    "files": [
      {
        "filename": "terraform/modules/site/README.md",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -20,7 +20,7 @@ A terraform module for creating a simple static site that's stored on S3 and ser\n   The bucket is private, the CloudFront distribution has been configured to use a [Origin Access Identity (OAI)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) which has been grated read-only access to the bucket. Additionally, the bucket has been configured with [Amazon S3 Block Public Access](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html) so that the bucket or objects in it can't ever be made public.\n \n - It should have basic attack prevention  \n-  A WAF Web ACL attached to CloudFront. The WAF has been configured to block IP addresses that have [identified as malicious actors and bots by Amazon threat intelligence (AWSManagedRulesAmazonIpReputationList)](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html#aws-managed-rule-groups-ip-rep), as well as a general rate-based rule based on IP addresses.\n+  A WAF Web ACL attached to CloudFront. The WAF has been configured to block IP addresses that have [identified as malicious actors and bots by Amazon threat intelligence (AWSManagedRulesAmazonIpReputationList)](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html#aws-managed-rule-groups-ip-rep), as well as a general rate-based rule based on IP addresses. **NOTE:** I made the WAF optional through the `enable_waf` input variable as you pay per rule regardless of how much traffic you're receiving, see [pricing](https://aws.amazon.com/waf/pricing/).\n \n This will create the following resources:\n \n@@ -53,6 +53,7 @@ module \"example-mads-hartmann-com\" {\n   domain              = \"example.mads-hartmann.com\"\n   acm_certificate_arn = \"...\"\n   route53_zone_id     = \"...\"\n+  enable_waf          = true\n \n   providers = {\n     aws = aws.us-east-1"
      },
      {
        "filename": "terraform/modules/site/main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -97,8 +97,8 @@ resource \"aws_cloudfront_distribution\" \"distribution\" {\n     }\n   }\n \n-  # Use the firewell we've created\n-  web_acl_id = aws_wafv2_web_acl.web_acl.arn\n+  # Use the firewell we've created if enable_waf is set to true\n+  web_acl_id = var.enable_waf ? aws_wafv2_web_acl.web_acl[0].arn : null\n \n   enabled         = true\n   is_ipv6_enabled = true\n@@ -358,6 +358,7 @@ resource \"aws_lambda_function\" \"origin_response\" {\n #\n \n resource \"aws_wafv2_web_acl\" \"web_acl\" {\n+  count = var.enable_waf ? 1 : 0\n   name        = local.hyphened_domain\n   description = \"WAF for ${var.domain}\"\n   scope       = \"CLOUDFRONT\""
      },
      {
        "filename": "terraform/modules/site/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -12,3 +12,8 @@ variable \"route53_zone_id\" {\n   type        = string\n   description = \"The Zone ID to create the DNS record in\"\n }\n+\n+variable \"enable_waf\" {\n+  type = bool\n+  description = \"If true it will create a WAF and associate it with the CF distribution\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/production/main.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -36,6 +36,7 @@ module \"example-mads-hartmann-com\" {\n   domain              = \"example.mads-hartmann.com\"\n   acm_certificate_arn = local.acm_certificate_arn\n   route53_zone_id     = local.route53_zone_id\n+  enable_waf          = false\n \n   providers = {\n     aws = aws.us-east-1\n@@ -61,6 +62,7 @@ module \"library-mads-hartmann-com\" {\n   domain              = \"library.mads-hartmann.com\"\n   acm_certificate_arn = local.acm_certificate_arn\n   route53_zone_id     = local.route53_zone_id\n+  enable_waf          = false\n \n   providers = {\n     aws = aws.us-east-1\n@@ -72,6 +74,7 @@ module \"computer-mads-hartmann-com\" {\n   domain              = \"computer.mads-hartmann.com\"\n   acm_certificate_arn = local.acm_certificate_arn\n   route53_zone_id     = local.route53_zone_id\n+  enable_waf          = false\n \n   providers = {\n     aws = aws.us-east-1\n@@ -83,6 +86,7 @@ module \"links-mads-hartmann-com\" {\n   domain              = \"links.mads-hartmann.com\"\n   acm_certificate_arn = local.acm_certificate_arn\n   route53_zone_id     = local.route53_zone_id\n+  enable_waf          = false\n \n   providers = {\n     aws = aws.us-east-1\n@@ -94,6 +98,7 @@ module \"blog-mads-hartmann-com\" {\n   domain              = \"blog.mads-hartmann.com\"\n   acm_certificate_arn = local.acm_certificate_arn\n   route53_zone_id     = local.route53_zone_id\n+  enable_waf          = false\n \n   providers = {\n     aws = aws.us-east-1"
      },
      {
        "filename": "terraform/production/outputs.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ output \"example-mads-hartmann-com-deploy-access-key-id\" {\n }\n \n output \"example-mads-hartmann-com-deploy-access-key-secret\" {\n-  value = module.example-mads-hartmann-com.access_key.secret\n+  value     = module.example-mads-hartmann-com.access_key.secret\n   sensitive = true\n }\n \n@@ -20,7 +20,7 @@ output \"library-mads-hartmann-com-deploy-access-key-id\" {\n }\n \n output \"library-mads-hartmann-com-deploy-access-key-secret\" {\n-  value = module.library-mads-hartmann-com.access_key.secret\n+  value     = module.library-mads-hartmann-com.access_key.secret\n   sensitive = true\n }\n \n@@ -33,7 +33,7 @@ output \"computer-mads-hartmann-com-deploy-access-key-id\" {\n }\n \n output \"computer-mads-hartmann-com-deploy-access-key-secret\" {\n-  value = module.computer-mads-hartmann-com.access_key.secret\n+  value     = module.computer-mads-hartmann-com.access_key.secret\n   sensitive = true\n }\n \n@@ -46,7 +46,7 @@ output \"links-mads-hartmann-com-deploy-access-key-id\" {\n }\n \n output \"links-mads-hartmann-com-deploy-access-key-secret\" {\n-  value = module.links-mads-hartmann-com.access_key.secret\n+  value     = module.links-mads-hartmann-com.access_key.secret\n   sensitive = true\n }\n \n@@ -59,6 +59,6 @@ output \"blog-mads-hartmann-com-deploy-access-key-id\" {\n }\n \n output \"blog-mads-hartmann-com-deploy-access-key-secret\" {\n-  value = module.blog-mads-hartmann-com.access_key.secret\n+  value     = module.blog-mads-hartmann-com.access_key.secret\n   sensitive = true\n }"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Ecklebe/IaC-Templates/commit/aeab4d039020c0d63209d7f800f9c34fae4060e6",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -7,3 +7,4 @@\n /**/terraform.tfvars\n /**/plugins.txt\n /**/*.tfplan\n+/**/kube_config"
      },
      {
        "filename": "setup-04/01-create-aks/01-setup/01-backend.tf",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -1,17 +1,5 @@\n terraform {\n   required_providers {\n-    kubernetes = {\n-      source  = \"hashicorp/kubernetes\"\n-      version = \">= 2.0.0\"\n-    }\n-    template = {\n-      source  = \"registry.terraform.io/hashicorp/template\"\n-      version = \">= 2.2.0\"\n-    }\n-    helm = {\n-      source  = \"registry.terraform.io/hashicorp/helm\"\n-      version = \">= 2.4.1\"\n-    }\n     azurerm = {\n       source  = \"hashicorp/azurerm\"\n       version = \"~>2.0\""
      },
      {
        "filename": "setup-04/01-create-aks/01-setup/02-cluster.tf",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -3,18 +3,6 @@ variable \"kubernetes_config_path\" {\n   type        = string\n }\n \n-# Load and connect to Kubernetes\n-provider \"kubernetes\" {\n-  config_path = var.kubernetes_config_path\n-}\n-\n-# Load and connect to Helm\n-provider \"helm\" {\n-  kubernetes {\n-    config_path = var.kubernetes_config_path\n-  }\n-}\n-\n variable \"azure_subscription_id\" {\n   description = \"\"\n   type        = string"
      },
      {
        "filename": "setup-04/01-create-aks/01-setup/main.tf",
        "additions": 76,
        "deletions": 36,
        "changes": 112,
        "status": "modified",
        "patch": "@@ -1,70 +1,67 @@\n-# Generate random resource group name\n-resource \"random_pet\" \"rg-name\" {\n-  prefix = var.resource_group_name_prefix\n+variable \"azure_resource_group_name_prefix\" {\n+  description = \"Prefix of the resource group name that's combined with a random ID so name is unique in your Azure subscription.\"\n+  type        = string\n }\n \n-resource \"azurerm_resource_group\" \"k8s\" {\n-  name     = random_pet.rg-name.id\n-  location = var.resource_group_location\n+variable \"azure_vm_size\" {\n+  type = string\n }\n \n-resource \"random_id\" \"log_analytics_workspace_name_suffix\" {\n-  byte_length = 8\n+variable \"azure_resource_group_location\" {\n+  description = \"Location of the resource group.\"\n+  type        = string\n }\n \n-resource \"azurerm_log_analytics_workspace\" \"test\" {\n-  # The WorkSpace name has to be unique across the whole of azure, not just the current subscription/tenant.\n-  name                = \"${var.log_analytics_workspace_name}-${random_id.log_analytics_workspace_name_suffix.dec}\"\n-  location            = var.log_analytics_workspace_location\n-  resource_group_name = azurerm_resource_group.k8s.name\n-  sku                 = var.log_analytics_workspace_sku\n+variable \"azure_agent_count\" {\n }\n \n-resource \"azurerm_log_analytics_solution\" \"test\" {\n-  solution_name         = \"ContainerInsights\"\n-  location              = azurerm_log_analytics_workspace.test.location\n-  resource_group_name   = azurerm_resource_group.k8s.name\n-  workspace_resource_id = azurerm_log_analytics_workspace.test.id\n-  workspace_name        = azurerm_log_analytics_workspace.test.name\n+variable \"azure_ssh_public_key\" {\n+  type = string\n+}\n \n-  plan {\n-    publisher = \"Microsoft\"\n-    product   = \"OMSGallery/ContainerInsights\"\n-  }\n+variable \"azure_dns_prefix\" {\n+  type = string\n+}\n+\n+variable \"azure_cluster_name\" {\n+  type = string\n+}\n+\n+# Generate random resource group name\n+resource \"random_pet\" \"rg-name\" {\n+  prefix = var.azure_resource_group_name_prefix\n+}\n+\n+resource \"azurerm_resource_group\" \"k8s\" {\n+  name     = random_pet.rg-name.id\n+  location = var.azure_resource_group_location\n }\n \n resource \"azurerm_kubernetes_cluster\" \"k8s\" {\n-  name                = var.cluster_name\n+  name                = var.azure_cluster_name\n   location            = azurerm_resource_group.k8s.location\n   resource_group_name = azurerm_resource_group.k8s.name\n-  dns_prefix          = var.dns_prefix\n+  dns_prefix          = var.azure_dns_prefix\n \n   linux_profile {\n     admin_username = \"ubuntu\"\n \n     ssh_key {\n-      key_data = file(var.ssh_public_key)\n+      key_data = file(var.azure_ssh_public_key)\n     }\n   }\n \n   default_node_pool {\n     name       = \"agentpool\"\n-    node_count = var.agent_count\n-    vm_size    = \"Standard_L8s_v2\"\n+    node_count = var.azure_agent_count\n+    vm_size    = var.azure_vm_size\n   }\n \n   service_principal {\n     client_id     = var.service_principal_appid\n     client_secret = var.service_principal_password\n   }\n \n-  addon_profile {\n-    oms_agent {\n-      enabled                    = true\n-      log_analytics_workspace_id = azurerm_log_analytics_workspace.test.id\n-    }\n-  }\n-\n   network_profile {\n     load_balancer_sku = \"Standard\"\n     network_plugin    = \"kubenet\"\n@@ -73,4 +70,47 @@ resource \"azurerm_kubernetes_cluster\" \"k8s\" {\n   tags = {\n     Environment = \"Development\"\n   }\n+}\n+\n+output \"resource_group_name\" {\n+  value = azurerm_resource_group.k8s.name\n+}\n+\n+output \"client_key\" {\n+  value     = azurerm_kubernetes_cluster.k8s.kube_config.0.client_key\n+  sensitive = true\n+}\n+\n+output \"client_certificate\" {\n+  value     = azurerm_kubernetes_cluster.k8s.kube_config.0.client_certificate\n+  sensitive = true\n+}\n+\n+output \"cluster_ca_certificate\" {\n+  value     = azurerm_kubernetes_cluster.k8s.kube_config.0.cluster_ca_certificate\n+  sensitive = true\n+}\n+\n+output \"cluster_username\" {\n+  value = azurerm_kubernetes_cluster.k8s.kube_config.0.username\n+}\n+\n+output \"cluster_password\" {\n+  value     = azurerm_kubernetes_cluster.k8s.kube_config.0.password\n+  sensitive = true\n+}\n+\n+output \"kube_config\" {\n+  value     = azurerm_kubernetes_cluster.k8s.kube_config_raw\n+  sensitive = true\n+}\n+\n+output \"host\" {\n+  value = azurerm_kubernetes_cluster.k8s.kube_config.0.host\n+}\n+\n+resource \"local_file\" \"kube_config\" {\n+  depends_on = [azurerm_kubernetes_cluster.k8s]\n+  content    = azurerm_kubernetes_cluster.k8s.kube_config_raw\n+  filename   = var.kubernetes_config_path\n }\n\\ No newline at end of file"
      },
      {
        "filename": "setup-04/01-create-aks/01-setup/output.tf",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "status": "removed",
        "patch": "@@ -1,32 +0,0 @@\n-output \"resource_group_name\" {\n-  value = azurerm_resource_group.k8s.name\n-}\n-\n-output \"client_key\" {\n-  value = azurerm_kubernetes_cluster.k8s.kube_config.0.client_key\n-}\n-\n-output \"client_certificate\" {\n-  value = azurerm_kubernetes_cluster.k8s.kube_config.0.client_certificate\n-}\n-\n-output \"cluster_ca_certificate\" {\n-  value = azurerm_kubernetes_cluster.k8s.kube_config.0.cluster_ca_certificate\n-}\n-\n-output \"cluster_username\" {\n-  value = azurerm_kubernetes_cluster.k8s.kube_config.0.username\n-}\n-\n-output \"cluster_password\" {\n-  value = azurerm_kubernetes_cluster.k8s.kube_config.0.password\n-}\n-\n-output \"kube_config\" {\n-  value     = azurerm_kubernetes_cluster.k8s.kube_config_raw\n-  sensitive = true\n-}\n-\n-output \"host\" {\n-  value = azurerm_kubernetes_cluster.k8s.kube_config.0.host\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "setup-04/01-create-aks/01-setup/variables.tf",
        "additions": 0,
        "deletions": 47,
        "changes": 47,
        "status": "removed",
        "patch": "@@ -1,47 +0,0 @@\n-variable \"resource_group_name_prefix\" {\n-  default     = \"rg\"\n-  description = \"Prefix of the resource group name that's combined with a random ID so name is unique in your Azure subscription.\"\n-}\n-\n-variable \"resource_group_location\" {\n-  default     = \"germanywestcentral\"\n-  description = \"Location of the resource group.\"\n-}\n-\n-variable \"agent_count\" {\n-  default = 1\n-}\n-\n-variable \"ssh_public_key\" {\n-  default = \"~/.ssh/id_rsa.pub\"\n-}\n-\n-variable \"dns_prefix\" {\n-  default = \"k8stest\"\n-}\n-\n-variable \"cluster_name\" {\n-  default = \"k8stest\"\n-}\n-\n-variable \"resource_group_name\" {\n-  default = \"azure-k8stest\"\n-}\n-\n-variable \"location\" {\n-  default = \"Germany West Central\"\n-}\n-\n-variable \"log_analytics_workspace_name\" {\n-  default = \"testLogAnalyticsWorkspaceName\"\n-}\n-\n-# refer https://azure.microsoft.com/global-infrastructure/services/?products=monitor for log analytics available regions\n-variable \"log_analytics_workspace_location\" {\n-  default = \"germanywestcentral\"\n-}\n-\n-# refer https://azure.microsoft.com/pricing/details/monitor/ for log analytics pricing\n-variable \"log_analytics_workspace_sku\" {\n-  default = \"PerGB2018\"\n-}\n\\ No newline at end of file"
      },
      {
        "filename": "setup-04/01-create-aks/readme.md",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "status": "added",
        "patch": "@@ -0,0 +1,26 @@\n+# Create Azure Kubernetes Service\n+\n+This setup covers the creation of a kubernetes service (4) in the Azure Cloud.\n+\n+## Prerequisites\n+\n+- a Azure subscription\n+- the Azure cli installed (1)\n+- a service principal (2)\n+- a ssh key (3)\n+\n+## Troubleshooting\n+\n+To get the available virtual machines in your location and for your subscription:\n+\n+````\n+az vm list-skus --location \"germanywestcentral\" --output table --resource-type virtualMachines --subscription <id> \n+````\n+\n+## Linked references\n+\n+(1) https://docs.microsoft.com/en-us/cli/azure/install-azure-cli\n+(\n+2) https://docs.microsoft.com/en-us/azure/developer/terraform/authenticate-to-azure?tabs=bash#create-a-service-principal\n+(3) https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ssh-from-windows#create-an-ssh-key-pair\n+(4) https://docs.microsoft.com/en-us/azure/developer/terraform/create-k8s-cluster-with-tf-and-aks"
      },
      {
        "filename": "setup-04/readme.md",
        "additions": 1,
        "deletions": 25,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -1,27 +1,3 @@\n # Setup 04\n \n-This setup covers the creation of a kubernetes service (4) in the Azure Cloud.\n-\n-## Prerequisites\n-\n-- a Azure subscription\n-- the Azure cli installed (1)\n-- a service principal (2)\n-- a ssh key (3)\n-\n-## Troubleshooting\n-\n-To get the available virtual machines in your location and for your subscription:\n-\n-````\n-az vm list-skus --location \"germanywestcentral\" --output table --resource-type virtualMachines --subscription <id> \n-````\n-\n-## Linked references\n-\n-(1) https://docs.microsoft.com/en-us/cli/azure/install-azure-cli\n-(\n-\n-2) https://docs.microsoft.com/en-us/azure/developer/terraform/authenticate-to-azure?tabs=bash#create-a-service-principal\n-   (3) https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ssh-from-windows#create-an-ssh-key-pair\n-   (4) https://docs.microsoft.com/en-us/azure/developer/terraform/create-k8s-cluster-with-tf-and-aks\n+This setup covers the creation of a kubernetes service (4) in the Azure Cloud.\n\\ No newline at end of file"
      },
      {
        "filename": "setup-04/terraform.tfvars.tmp",
        "additions": 27,
        "deletions": 5,
        "changes": 32,
        "status": "modified",
        "patch": "@@ -1,6 +1,28 @@\n-azure_subscription_id        = \"\"\n-azure_subscription_tenant_id = \"\"\n-service_principal_appid      = \"\"\n-service_principal_password   = \"\"\n+azure_subscription_id            = \"\"\n+azure_subscription_tenant_id     = \"\"\n+service_principal_appid          = \"\"\n+service_principal_password       = \"\"\n+azure_resource_group_name_prefix = \"rg\"\n+azure_agent_count                = 1\n+azure_ssh_public_key             = \"~/.ssh/id_rsa.pub\"\n+azure_dns_prefix                 = \"k8stest\"\n+azure_cluster_name               = \"k8stest\"\n \n-kubernetes_config_path = \"\"\n\\ No newline at end of file\n+# https://docs.microsoft.com/de-de/azure/aks/quotas-skus-regions#restricted-vm-sizes\n+\n+# cost example 1 - creation possible\n+# https://docs.microsoft.com/en-us/azure/virtual-machines/lsv2-series\n+#azure_vm_size = \"Standard_L8s_v2\"\n+#azure_resource_group_location = \"germanywestcentral\"\n+\n+# example 2 - creation not tested - standard example by the price calculator\n+# https://docs.microsoft.com/en-us/azure/virtual-machines/dv3-dsv3-series\n+#azure_vm_size = \"Standard_D2_v3\"\n+#azure_resource_group_location = \"westeurope\"\n+\n+# example 3 - creation possible\n+# https://docs.microsoft.com/en-us/azure/virtual-machines/sizes-b-series-burstable\n+azure_vm_size                 = \"Standard_B2s\"\n+azure_resource_group_location = \"westeurope\"\n+\n+kubernetes_config_path = \"../../kube_config\"\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-azurerm-mariadb/commit/2b30952f26e8a8e66fe8b6eddf9c4657e0d074d4",
    "files": [
      {
        "filename": ".github/CODEOWNERS",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+* @JamesWoolfenden"
      },
      {
        "filename": ".github/workflows/compare.yml",
        "additions": 16,
        "deletions": 14,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -7,7 +7,6 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n   tf_target_dir: example/examplea\n   branch: main\n jobs:\n@@ -22,8 +21,7 @@ jobs:\n       - name: tfsec\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion tfsec/tfsec)\n-          wget https://github.com/tfsec/tfsec/releases/download/v${now}/tfsec-linux-amd64\n+          lastversion tfsec/tfsec --assets -d\n           chmod +x tfsec-linux-amd64\n           ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n         continue-on-error: true\n@@ -67,18 +65,20 @@ jobs:\n       - name: install terrascan\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion accurics/terrascan)\n-          curl --location https://github.com/accurics/terrascan/releases/download/v${now}/terrascan_${now}_Linux_x86_64.tar.gz --output terrascan.tar.gz\n-          tar -xvf terrascan.tar.gz\n+          lastversion accurics/terrascan --assets -d --verbose\n+          tar -xvf terrascan*.tar.gz\n+          chmod +x ./terrascan\n       - name: run terrascan\n-        run: ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json >terrascan.json\n+        run: |\n+          ./terrascan init\n+          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: terrascan\n           path: terrascan.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n   kics:\n     runs-on: ubuntu-latest\n     steps:\n@@ -87,18 +87,20 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: run kics Scan\n-        uses: checkmarx/kics-action@v1.0\n-        with:\n-          path: ${{ env.tf_target_dir }}\n-          output_path: \"kics.json\"\n+      - name: install kics\n+        run: |\n+          pip3 install lastversion\n+          lastversion Checkmarx/kics --assets -d --verbose\n+          tar -xvf kics*.tar.gz\n+      - name: run kics\n+        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: kics\n           path: kics.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n \n   upload:\n     needs: [kics, terrascan, checkov, tfsec]"
      },
      {
        "filename": ".github/workflows/main.yml",
        "additions": 31,
        "deletions": 15,
        "changes": 46,
        "status": "modified",
        "patch": "@@ -9,11 +9,19 @@ on:\n     branches:\n       - main\n env:\n-  terraform: 0.14.8\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n   branch: main\n jobs:\n   terraform:\n+    env:\n+      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}\n+      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}\n+      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}\n+      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout\n@@ -22,17 +30,27 @@ jobs:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n       - name: Terraform Init\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: init\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform init\n+        working-directory: ${{ env.tf_target_dir }}\n       - name: Terraform Validate\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: validate\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform validate\n+        working-directory: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        run: terraform plan\n+        working-directory: ${{ env.tf_target_dir }}\n+        env:\n+          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}\n+          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}\n+          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}\n+      - name: Bills\n+        run: |\n+          pip3 install lastversion\n+          lastversion infracost --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf infracost*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/infracost-linux-amd64\n+          $GITHUB_WORKSPACE/bin/infracost-linux-amd64 breakdown --path ${{ env.tf_target_dir }} --usage-file ${{ env.tf_target_dir }}/infracost-usage.yml --show-skipped\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -46,10 +64,9 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n@@ -59,7 +76,6 @@ jobs:\n     steps:\n       - uses: actions/checkout@master\n       - name: Bump version and push tag\n-        if: ${{ !env.ACT }}\n         uses: anothrNick/github-tag-action@master\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "filename": ".github/workflows/pull_request.yml",
        "additions": 44,
        "deletions": 14,
        "changes": 58,
        "status": "modified",
        "patch": "@@ -6,29 +6,39 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n \n jobs:\n   terraform:\n+    env:\n+      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}\n+      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}\n+      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}\n+      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout\n         uses: actions/checkout@v2\n         with:\n           token: ${{ github.token }}\n       - name: Terraform Init\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: init\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform init\n+        working-directory: ${{ env.tf_target_dir }}\n       - name: Terraform Validate\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: validate\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform validate\n+        working-directory: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        run: terraform plan\n+        working-directory: ${{ env.tf_target_dir }}\n+        env:\n+          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}\n+          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}\n+          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -41,10 +51,30 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}\n+          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}\n+          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}\n+          # See the cloud credentials section for the options\n+        with:\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          usage_file: ${{ env.tf_target_dir }}/infracost-usage.yml\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": "example/examplea/Makefile",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,4 +74,4 @@ purge:\n \t$(BLAT)\r\n \r\n cost:\r\n-\tinfracost breakdown --path . --usage-file infracost-usage.yml  --sync-usage-file\n\\ No newline at end of file\n+\tinfracost breakdown --path . --usage-file infracost-usage.yml  --sync-usage-file --show-skipped\r"
      },
      {
        "filename": "example/examplea/infracost-usage.yml",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+version: 0.1\n+resource_usage:\n+  module.mariadb.azurerm_mariadb_server.example:\n+    additional_backup_storage_gb: 0"
      },
      {
        "filename": "example/examplea/outputs.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -3,5 +3,6 @@ output \"database\" {\n }\n \n output \"server\" {\n-  value = module.mariadb.server\n+  value     = module.mariadb.server\n+  sensitive = true\n }"
      },
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n terraform {\n   required_providers {\n     azurerm = {\n-      version = \"2.56.0\"\n+      version = \"2.59.0\"\n       source  = \"hashicorp/azurerm\"\n     }\n   }"
      },
      {
        "filename": "outputs.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -3,5 +3,6 @@ output \"database\" {\n }\n \n output \"server\" {\n-  value = azurerm_mariadb_server.example\n+  value     = azurerm_mariadb_server.example\n+  sensitive = true\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/elliotpryde/personal-infrastructure/commit/772c5ad20818738b09d01cd70ca3de80cbf66dcb",
    "files": [
      {
        "filename": "Terraform/elliotpryde.com/variables.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -15,12 +15,12 @@ locals {\n     }\n   ]\n   nas_service_endpoints = [\n-    { fqdn : \"plex.elliotpryde.com\", path : \"/identity\" },\n-    { fqdn : \"homeassistant.elliotpryde.com\", path : \"/\" },\n+    # { fqdn : \"plex.elliotpryde.com\", path : \"/identity\" },\n+    # { fqdn : \"homeassistant.elliotpryde.com\", path : \"/\" },\n     { fqdn : \"wallabag.elliotpryde.com\", path : \"/\" },\n-    { fqdn : \"miniflux.elliotpryde.com\", path : \"/healthcheck\" },\n-    { fqdn : \"grafana.elliotpryde.com\", path : \"/api/health\" },\n-    { fqdn : \"heimdall.elliotpryde.com\", path : \"/\" }\n+    # { fqdn : \"miniflux.elliotpryde.com\", path : \"/healthcheck\" },\n+    # { fqdn : \"grafana.elliotpryde.com\", path : \"/api/health\" },\n+    # { fqdn : \"heimdall.elliotpryde.com\", path : \"/\" }\n   ]\n }\n "
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/elliotpryde/personal-infrastructure/commit/7c4205cd130c5463d7f39aa6f281e198c143d0d9",
    "files": [
      {
        "filename": "Terraform/elliotpryde.com/health-check.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -9,6 +9,7 @@ resource \"aws_route53_health_check\" \"nas-health-checks\" {\n }\n \n resource \"aws_route53_health_check\" \"nas-health-checks-aggregate\" {\n+  count                  = (var.enable_aggregate_health_check && aws_route53_health_check.nas-health-checks.count > 1) ? 1 : 0\n   type                   = \"CALCULATED\"\n   child_health_threshold = length(local.nas_service_endpoints)\n   child_healthchecks     = aws_route53_health_check.nas-health-checks[*].id"
      },
      {
        "filename": "Terraform/elliotpryde.com/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -33,3 +33,8 @@ variable \"protonmail_elliotpryde_com_verification_string\" {\n   type        = string\n   description = \"The domain verification data provided at https://mail.protonmail.com/domains\"\n }\n+\n+variable \"enable_aggregate_health_check\" {\n+  type = bool\n+  description = \"Enable a Route 53 health check which only passes if all other health checks pass\"\n+}"
      },
      {
        "filename": "Terraform/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -27,4 +27,5 @@ module \"elliotpryde-com\" {\n   source                                         = \"./elliotpryde.com\"\n   nas_public_ip                                  = var.nas_public_ip\n   protonmail_elliotpryde_com_verification_string = var.protonmail_elliotpryde_com_verification_string\n+  enable_aggregate_health_check                  = false\n }"
      },
      {
        "filename": "Terraform/outputs.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,15 +1,15 @@\n output \"nas-traefik-user-access-key-id\" {\n-  value = aws_iam_access_key.nas-traefik.id\n+  value       = aws_iam_access_key.nas-traefik.id\n   description = \"The ID of the AWS user access key used by Traefik to complete DNS challenges.\"\n }\n \n output \"nas-traefik-user-access-key-secret\" {\n-  value = aws_iam_access_key.nas-traefik.secret\n+  value       = aws_iam_access_key.nas-traefik.secret\n   description = \"The secret for the AWS user access key used by Traefik to complete DNS challenges.\"\n-  sensitive = true\n+  sensitive   = true\n }\n \n output \"elliotpryde-com-zone-id\" {\n-  value = module.elliotpryde-com.elliotpryde-com-zone-id\n+  value       = module.elliotpryde-com.elliotpryde-com-zone-id\n   description = \"The AWS hosted zone ID for elliotpryde.com.\"\n }"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/fpco/terraform-aws-foundation/commit/cfe92035f1b281cddfcf62664ec6b96e85e0ac32",
    "files": [
      {
        "filename": "tf-modules/elasticsearch/data-nodes.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -15,7 +15,8 @@ module \"data-node-ebs-volumes\" {\n   azs          = [\"${var.vpc_azs}\"]\n   size         = \"${var.data_node_ebs_size}\"\n   snapshot_ids = [\"${var.data_node_snapshot_ids}\"]\n-  #encrypted    = \"false\"\n+  encrypted    = \"false\"\n+  device_name  = \"/dev/xvdf\"\n }\n \n resource \"aws_iam_role_policy_attachment\" \"data-node-attach-ebs-volume\" {\n@@ -71,7 +72,7 @@ data \"template_file\" \"data-node-setup\" {\n   template = \"${file(\"${path.module}/data/setup.tpl.sh\")}\"\n \n   vars {\n-    volume_id     = \"${element(module.data-node-ebs-volumes.volume_ids, count.index)}\"\n+    mount_snippet = \"${element(module.data-node-ebs-volumes.volume_mount_snippets, count.index)}\"\n     device_name   = \"/dev/xvdf\"\n     mount_point   = \"/mnt/elasticsearch\"\n     wait_interval = 1"
      },
      {
        "filename": "tf-modules/elasticsearch/data/setup.tpl.sh",
        "additions": 2,
        "deletions": 22,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -10,28 +10,8 @@ apt-get install -y \\\n         openjdk-8-jre \\\n         elasticsearch\n \n-# Mount volume\n-MAX_SLEEP=60\n-TOTAL_SLEEP=0\n-VOLUME_ID=${volume_id}\n-INSTANCE_ID=$$(ec2metadata --instance-id)\n-echo \"Attaching $$VOLUME_ID to instance $$INSTANCE_ID via the AWS API in ${region}\"\n-aws --region=${region}          \\\n-    ec2 attach-volume           \\\n-    --volume-id $$VOLUME_ID     \\\n-    --instance-id $$INSTANCE_ID \\\n-    --device ${device_name}\n-\n-ls ${device_name}\n-while [ $$? -ne 0 ]; do\n-  if [ \"$$TOTAL_SLEEP\" -gt \"$$MAX_SLEEP\" ]; then\n-    echo \"Was unable to attach volume within limit time of $$MAX_SLEEP seconds.\"\n-    exit 1\n-  fi\n-  TOTAL_SLEEP=$$((TOTAL_SLEEP + ${wait_interval}))\n-  sleep ${wait_interval}\n-  ls ${device_name}\n-done\n+# Mount EBS volume\n+${mount_snippet}\n \n # Create file system if volume is empty.\n if file -s ${device_name} | grep \"${device_name}: data\"; then"
      },
      {
        "filename": "tf-modules/elasticsearch/master-nodes.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -13,7 +13,8 @@ module \"master-node-ebs-volumes\" {\n   azs          = [\"${var.vpc_azs}\"]\n   size         = \"${var.master_node_ebs_size}\"\n   snapshot_ids = [\"${var.master_node_snapshot_ids}\"]\n-  #encrypted    = \"false\"\n+  encrypted    = \"false\"\n+  device_name  = \"/dev/xvdf\"\n }\n \n resource \"aws_iam_role_policy_attachment\" \"master-node-attach-ebs-volume\" {\n@@ -71,7 +72,7 @@ data \"template_file\" \"master-node-setup\" {\n   template = \"${file(\"${path.module}/data/setup.tpl.sh\")}\"\n \n   vars {\n-    volume_id     = \"${element(module.master-node-ebs-volumes.volume_ids, count.index)}\"\n+    mount_snippet = \"${element(module.master-node-ebs-volumes.volume_mount_snippets, count.index)}\"\n     device_name   = \"/dev/xvdf\"\n     mount_point   = \"/mnt/elasticsearch\"\n     wait_interval = 1"
      },
      {
        "filename": "tf-modules/elasticsearch/variables.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -20,12 +20,13 @@ variable \"data_node_count\" {\n }\n \n variable \"master_node_instance_type\" {\n-  default = \"t2.small\"\n+  description = \"Master nodes EC2 instance type\"\n+  default = \"t2.micro\"\n }\n \n variable \"data_node_instance_type\" {\n   description = \"Data nodes EC2 instance type\"\n-  default = \"t2.small\"\n+  default = \"t2.micro\"\n }\n \n variable \"master_node_snapshot_ids\" {"
      },
      {
        "filename": "tf-modules/elk-stack/variables.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -41,7 +41,7 @@ variable \"elasticsearch_master_node_count\" {\n }\n \n variable \"elasticsearch_master_node_instance_type\" {\n-  default = \"t2.small\"\n+  default = \"t2.micro\"\n   description = \"Instance type to use for master nodes.\"\n }\n \n@@ -61,7 +61,7 @@ variable \"elasticsearch_data_node_count\" {\n }\n \n variable \"elasticsearch_data_node_instance_type\" {\n-  default = \"t2.small\"\n+  default = \"t2.micro\"\n   description = \"Instance type to use for data nodes.\"\n }\n \n@@ -76,7 +76,7 @@ variable \"elasticsearch_data_node_snapshot_ids\" {\n }\n \n variable \"logstash_kibana_instance_type\" {\n-  default = \"t2.small\"\n+  default = \"t2.micro\"\n   description = \"Instance type to use for servers running Kibana+Logstash.\"\n }\n "
      },
      {
        "filename": "tf-modules/kibana/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ variable \"ami\" {\n }\n \n variable \"instance_type\" {\n-  default = \"t2.small\"\n+  default = \"t2.micro\"\n }\n \n variable \"min_server_count\" {"
      },
      {
        "filename": "tf-modules/logstash+kibana/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -50,8 +50,8 @@ resource \"aws_autoscaling_group\" \"logstash-kibana-asg\" {\n   availability_zones   = [\"${var.vpc_azs}\"]\n   vpc_zone_identifier  = [\"${var.subnet_ids}\"]\n   name                 = \"${var.name_prefix}-logstash-kibana-asg\"\n-  max_size             = \"${var.max_server_count}\"\n   min_size             = \"${var.min_server_count}\"\n+  max_size             = \"${var.max_server_count}\"\n   desired_capacity     = \"${var.desired_server_count}\"\n   launch_configuration = \"${aws_launch_configuration.logstash-kibana-lc.name}\"\n   health_check_type    = \"ELB\""
      },
      {
        "filename": "tf-modules/logstash+kibana/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -8,7 +8,7 @@ variable \"ami\" {\n }\n \n variable \"instance_type\" {\n-  default = \"t2.small\"\n+  default = \"t2.micro\"\n }\n \n variable \"min_server_count\" {"
      },
      {
        "filename": "tf-modules/logstash/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -8,7 +8,7 @@ variable \"ami\" {\n }\n \n variable \"instance_type\" {\n-  default = \"t2.small\"\n+  default = \"t2.micro\"\n }\n \n variable \"min_server_count\" {"
      },
      {
        "filename": "tf-modules/persistent-ebs-volumes/iam.tf",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -3,26 +3,6 @@ data \"aws_region\" \"current\" {\n   current = true\n }\n \n-# resource \"aws_iam_role\" \"attach-ebs-role\" {\n-#   count = \"${var.volume_count}\"\n-#   name = \"${var.name_prefix}-attach-ebs-${count.index}\"\n-#   assume_role_policy = <<END_POLICY\n-# {\n-#   \"Version\": \"2012-10-17\",\n-#   \"Statement\": [\n-#     {\n-#       \"Action\": \"sts:AssumeRole\",\n-#       \"Principal\": {\n-#         \"Service\": \"ec2.amazonaws.com\"\n-#       },\n-#       \"Effect\": \"Allow\",\n-#       \"Sid\": \"\"\n-#     }\n-#   ]\n-# }\n-# END_POLICY\n-# }\n-#\n resource \"aws_iam_policy\" \"ebs-volume-policy\" {\n   count = \"${var.volume_count}\"\n   name = \"${var.name_prefix}-ebs-volume-${count.index}\""
      },
      {
        "filename": "tf-modules/persistent-ebs-volumes/main.tf",
        "additions": 21,
        "deletions": 6,
        "changes": 27,
        "status": "modified",
        "patch": "@@ -1,19 +1,34 @@\n /**\n- *## Creation of an arbitrary number of EBS volumes\n+ *## Create an arbitrary number of EBS volumes\n  *\n+ * This module provides EBS volumes and associated IAM policies to be\n+ * used with an EC2 instances or auto-scaling groups. This module is best when\n+ * used in conjunction with a single-node auto-scaling group, and `volume-mount-snippets`\n+ * can be used to attache EBS volumes on boot.\n  * Volumes created will be interleaved throughout the Avaialability Zones\n  *\n  */\n resource \"aws_ebs_volume\" \"volumes\" {\n-  count = \"${var.volume_count}\"\n+  count             = \"${var.volume_count}\"\n   availability_zone = \"${element(var.azs, count.index)}\"\n-  size = \"${var.size}\"\n-  type = \"${var.volume_type}\"\n+  size              = \"${var.size}\"\n+  type              = \"${var.volume_type}\"\n   \n-  # encrypted   = \"${var.encrypted}\"\n-  # kms_key_id  = \"${var.kms_key_id}\"\n+  encrypted   = \"${var.encrypted}\"\n+  kms_key_id  = \"${var.encrypted ? var.kms_key_id : \"\"}\"\n   snapshot_id = \"${element(var.snapshot_ids, count.index)}\"\n   tags {\n     Name = \"${var.name_prefix}-${count.index}-${element(var.azs, count.index)}\"\n   }\n }\n+\n+data \"template_file\" \"volume_mount_snippets\" {\n+  count    = \"${var.volume_count}\"\n+  template = \"${file(\"${path.module}/snippet.tpl.sh\")}\"\n+  vars {\n+    volume_id     = \"${element(aws_ebs_volume.volumes.*.id, count.index)}\"\n+    device_name   = \"${var.device_name}\"\n+    wait_interval = \"${var.wait_interval}\"\n+    max_wait      = \"${var.max_wait}\"\n+  }\n+}"
      },
      {
        "filename": "tf-modules/persistent-ebs-volumes/outputs.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -6,3 +6,7 @@ output \"iam_volume_policy_arns\" {\n output \"volume_ids\" {\n   value = [\"${aws_ebs_volume.volumes.*.id}\"]\n }\n+//Bash script snippets, which can be used to mount created EBS volumes\n+output \"volume_mount_snippets\" {\n+  value = [\"${data.template_file.volume_mount_snippets.*.rendered}\"]\n+}"
      },
      {
        "filename": "tf-modules/persistent-ebs-volumes/snippet.tpl.sh",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "status": "added",
        "patch": "@@ -0,0 +1,23 @@\n+# Mount volume\n+MAX_SLEEP=${max_wait}\n+TOTAL_SLEEP=0\n+VOLUME_ID=${volume_id}\n+INSTANCE_ID=$$(ec2metadata --instance-id)\n+REGION=$$(ec2metadata --availability-zone | sed 's/.$//')\n+echo \"Attaching $$VOLUME_ID to instance $$INSTANCE_ID via the AWS API in ${region}\"\n+aws --region=$${REGION}         \\\n+    ec2 attach-volume           \\\n+    --volume-id $$VOLUME_ID     \\\n+    --instance-id $$INSTANCE_ID \\\n+    --device ${device_name}\n+\n+ls ${device_name}\n+while [ $$? -ne 0 ]; do\n+  if [ \"$$TOTAL_SLEEP\" -gt \"$$MAX_SLEEP\" ]; then\n+    echo \"Was unable to attach volume within limit time of $$MAX_SLEEP seconds.\"\n+    exit 1\n+  fi\n+  TOTAL_SLEEP=$$((TOTAL_SLEEP + ${wait_interval}))\n+  sleep ${wait_interval}\n+  ls ${device_name}\n+done"
      },
      {
        "filename": "tf-modules/persistent-ebs-volumes/tests/main.tf",
        "additions": 0,
        "deletions": 111,
        "changes": 111,
        "status": "removed",
        "patch": "@@ -1,111 +0,0 @@\n-module \"vpc\" {\n-    source = \"../../vpc-network\"\n-    name = \"${var.name}\"\n-    access_key = \"${var.access_key}\"\n-    secret_key = \"${var.secret_key}\"\n-    region = \"${var.region}\"\n-    vpc_cidr_prefix = \"10.23\"\n-}\n-provider \"aws\" {\n-    access_key = \"${var.access_key}\"\n-    secret_key = \"${var.secret_key}\"\n-    region = \"${var.region}\"\n-    token = \"${var.token}\"\n-}\n-resource \"aws_subnet\" \"main\" {\n-    availability_zone = \"${var.region}${var.az}\"\n-    vpc_id = \"${module.vpc.id}\"\n-    cidr_block = \"10.23.1.0/24\"\n-    map_public_ip_on_launch = true\n-    tags {\n-        Name = \"${var.name}-${var.az}\"\n-        Region = \"${var.region}\"\n-    }\n-}\n-module \"public-ssh\" {\n-    source = \"../../ssh-sg\"\n-    region = \"${var.region}\"\n-    access_key = \"${var.access_key}\"\n-    secret_key = \"${var.secret_key}\"\n-    vpc_id = \"${module.vpc.id}\"\n-}\n-resource \"aws_security_group\" \"open-egress\" {\n-    name = \"${var.name}-test-persistent-ebs\"\n-    vpc_id = \"${module.vpc.id}\"\n-    # open egress\n-    egress {\n-        from_port = 0\n-        to_port = 0\n-        protocol = \"-1\"\n-        cidr_blocks = [\"0.0.0.0/0\"]\n-    }\n-    tags {\n-        Description = \"open egress for persistent-EBS tests\"\n-    }\n-}\n-module \"ec2-with-persistent-ebs\" {\n-    source = \"../../ec2-attach-persistent-ebs\"\n-    security_group_ids = \"${module.public-ssh.id},${aws_security_group.open-egress.id}\"\n-    name = \"${var.name}\"\n-    suffix = \"test-persistent-ebs\"\n-    instance_type = \"t2.micro\"\n-    ami = \"ami-7ca35e1c\"\n-    vpc_id = \"${module.vpc.id}\"\n-    route_table_id = \"${module.vpc.route_table_id}\"\n-    subnet_id = \"${aws_subnet.main.id}\"\n-    az = \"${var.region}${var.az}\"\n-    region = \"${var.region}\"\n-    access_key = \"${var.access_key}\"\n-    secret_key = \"${var.secret_key}\"\n-    key_name = \"${aws_key_pair.main.key_name}\"\n-    key_file = \"${var.key_file}\"\n-    account_arn = \"${var.account_arn}\"\n-}\n-resource \"aws_key_pair\" \"main\" {\n-    key_name = \"${var.key_name}\"\n-    public_key = \"${var.ssh_pubkey}\"\n-}\n-output \"key_file\" {\n-    value = \"${var.key_file}\"\n-}\n-output \"asg_name\" {\n-    value = \"${module.ec2-with-persistent-ebs.asg_name}\"\n-}\n-# variables for this test environment\n-variable \"name\" {\n-    description = \"The name of the environment to deploy to (beta/prod/etc)\"\n-}\n-variable \"key_name\" {\n-    default = \"\"\n-    description = \"The name of the (AWS) SSH key to associate with the instance\"\n-}\n-variable \"key_file\" {\n-    description = \"The path to the SSH private key to provide connection info as output\"\n-}\n-variable \"ssh_pubkey\" {\n-    default = \"\"\n-    description = \"The public key for SSH\"\n-}\n-variable \"region\" {\n-    description = \"The AWS region to deploy to\"\n-    default = \"\"\n-}\n-variable \"az\" {\n-    description = \"The AWS Availability Zone (AZ) to create the instance in\"\n-}\n-variable \"instance_type\" {\n-    default = \"t2.micro\"\n-    description = \"The type of AWS instance (size)\"\n-}\n-variable \"account_arn\" {\n-    description = \"The AWS account number, for IAM role assigned to the instance created\"\n-}\n-variable \"access_key\" {\n-    default = \"\"\n-}\n-variable \"secret_key\" {\n-    default = \"\"\n-}\n-variable \"token\" {\n-    default = \"\"\n-}"
      },
      {
        "filename": "tf-modules/persistent-ebs-volumes/tests/scripts/run-tests-ci.sh",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "status": "removed",
        "patch": "@@ -1,52 +0,0 @@\n-#!/bin/sh\n-#\n-# Script to run tests, suitable for running with CI like jenkins/bamboo.\n-# Expects to be called with a single argument, the name of the test VPC\n-# deployed, and with 3 environment variables:\n-#\n-#  * AWS_SECRET_ACCESS_KEY\n-#  * AWS_ACCESS_KEY_ID\n-#  * AWS_DEFAULT_REGION\n-#\n-# The script also expects to be run from the parent path (\"tests\")\n-\n-LOG_PREFIX=\"Persistent EBS Test:\"\n-\n-KEY_FILE=\"$(terraform output key_file)\"\n-eval KEY_FILE=$KEY_FILE # this is needed to properly evaluate a tilde (if present)\n-\n-SSH_CMD_PREFIX=\"ssh -i $KEY_FILE -o StrictHostKeyChecking=no\"\n-echo \"$LOG_PREFIX SSH command prefix looks like: $SSH_CMD_PREFIX\"\n-\n-#echo \"$LOG_PREFIX going to pause for 600 seconds (10 minutes) while we wait for the clusters to come online\"\n-#sleep 600\n-\n-# these ASG names need to be changed in the module source -_-\n-ASG_NAME=\"$(terraform output asg_name)\"\n-\n-#######################################################################\n-#\n-echo \"$LOG_PREFIX Lookup all details on Leader ASG\"\n-aws autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG_NAME > TEST_ASG.json\n-jq '.' < TEST_ASG.json\n-\n-echo \"$LOG_PREFIX collect instance IDs from Leader ASG - output as a single line text file\"\n-jq '.AutoScalingGroups[0] | {instance_id: .Instances[].InstanceId}' < TEST_ASG.json | jq -s '.[] | .instance_id' | sed 's/\"//g' | tr '\\n' ' ' > TEST_IDS.txt\n-aws ec2 describe-instances \\\n-  --instance-ids `cat TEST_IDS.txt` \\\n-  --query \"Reservations[*].Instances[*].PublicIpAddress\" \\\n-  --output=json \\\n-  | jq 'flatten' > TEST_INSTANCE_IP.json\n-jq '.' < TEST_INSTANCE_IP.json\n-\n-# grab the one IP and run a few tests\n-TEST_IP=$(jq '.[0]' < TEST_INSTANCE_IP.json | sed 's/\"//g')\n-\n-#echo \"$LOG_PREFIX ping test leader and check it's member list:\"\n-#$SSH_CMD_PREFIX ubuntu@$TEST_IP \"hostname && sudo consul members\"\n-\n-#echo \"$LOG_PREFIX here's the full leader cloud-init-output.log..\"\n-#$SSH_CMD_PREFIX ubuntu@$TEST_IP \"sudo cat /var/log/cloud-init-output.log\" > TEST-cloud-init-output.log\n-#\n-#echo \"$LOG_PREFIX directory listing..\"\n-#ls -alh"
      },
      {
        "filename": "tf-modules/persistent-ebs-volumes/variables.tf",
        "additions": 23,
        "deletions": 13,
        "changes": 36,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ variable \"volume_count\" {\n }\n variable \"azs\" {\n   type = \"list\"\n-  description = \"The AWS Availability Zones (AZs) to create the volumes in\"\n+  description = \"AWS Availability Zones (AZs) to create the volumes in\"\n }\n variable \"volume_type\" {\n   default = \"gp2\"\n@@ -18,15 +18,25 @@ variable \"size\" {\n }\n variable \"snapshot_ids\" {\n   type = \"list\"\n-  description = \"The ID of the snapshot to base the EBS block device on\"\n-}\n-## TODO: had to disable optional encryption. Terraform 8 does extra regex\n-## validation on kms_key_id, i.e. empty string are no longer accepted.\n-# variable \"encrypted\" {\n-#   default = \"true\"\n-#   description = \"Boolean, whether or not to encrypt the EBS block device\"\n-# }\n-# variable \"kms_key_id\" {\n-#   default = \"\"\n-#   description = \"ID of the KMS key to use when encyprting the EBS block device\"\n-# }\n+  description = \"IDs of the snapshots to base the EBS block devices on\"\n+}\n+variable \"encrypted\" {\n+  default = \"false\"\n+  description = \"Boolean, whether or not to encrypt EBS block devices\"\n+}\n+variable \"kms_key_id\" {\n+  default = \"\"\n+  description = \"ID of the KMS key to use when encrypting EBS block devices\"\n+}\n+variable \"device_name\" {\n+  default = \"/dev/xvdf\"\n+  description = \"Setting for volume mount snipppet. Name of device volume should be mounted as\"\n+}\n+variable \"wait_interval\" {\n+  default = 1\n+  description = \"Setting for volume mount snipppet. Number of seconds to wait between retries\"\n+}\n+variable \"max_wait\" {\n+  default = 60\n+  description = \"Setting for volume mount snipppet. Maximum number of seconds to wait for volume to be mounted before exiting with an error\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/aiidalab/aiidalab-k8s/commit/65e44242c0b5f27d64ff714e5a8eed71ca02ab26",
    "files": [
      {
        "filename": "config-template.yaml",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ singleuser:\n   image:\n     name: aiidalab/aiidalab-docker-stack\n     #tag: latest\n-    tag: 20.02.2\n+    tag: 21.02.1\n     pullPolicy: Always\n   fsGid: 1000\n   cmd: /sbin/my_my_init\n@@ -28,6 +28,7 @@ singleuser:\n   startTimeout: 180\n \n auth:\n+  type: custom\n   custom:\n     className: firstuseauthenticator.FirstUseAuthenticator\n     config:"
      },
      {
        "filename": "terraform/README.md",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -19,10 +19,10 @@ For that, follow the instructions provided in the README.md file located at the\n \n The following instructions were tested with:\n \n- - Terraform v0.14.6\n+ - Terraform v0.15.5\n  - aws-cli/2.1.3 Python/3.7.3 Linux/5.4.0-60-generic exe/x86_64.ubuntu.18\n- - kubectl v1.20\n- - helm v.3.5.2\n+ - kubectl v1.21\n+ - helm v.3.6.0\n \n ### Install Terraform, dependencies, and this GitHub repo\n "
      },
      {
        "filename": "terraform/aws-creds/iam.tf",
        "additions": 20,
        "deletions": 15,
        "changes": 35,
        "status": "modified",
        "patch": "@@ -89,8 +89,8 @@ data \"aws_iam_policy_document\" \"terraform_iam_policy_source\" {\n       \"autoscaling:Describe*\",\n       \"autoscaling:DetachInstances\",\n       \"autoscaling:SetDesiredCapacity\",\n-      \"autoscaling:UpdateAutoScalingGroup\",\n       \"autoscaling:SuspendProcesses\",\n+      \"autoscaling:UpdateAutoScalingGroup\",\n       \"ec2:AllocateAddress\",\n       \"ec2:AssignPrivateIpAddresses\",\n       \"ec2:Associate*\",\n@@ -102,6 +102,8 @@ data \"aws_iam_policy_document\" \"terraform_iam_policy_source\" {\n       \"ec2:CreateDhcpOptions\",\n       \"ec2:CreateEgressOnlyInternetGateway\",\n       \"ec2:CreateInternetGateway\",\n+      \"ec2:CreateLaunchTemplate\",\n+      \"ec2:CreateLaunchTemplateVersion\",\n       \"ec2:CreateNatGateway\",\n       \"ec2:CreateNetworkInterface\",\n       \"ec2:CreateRoute\",\n@@ -114,6 +116,8 @@ data \"aws_iam_policy_document\" \"terraform_iam_policy_source\" {\n       \"ec2:DeleteDhcpOptions\",\n       \"ec2:DeleteEgressOnlyInternetGateway\",\n       \"ec2:DeleteInternetGateway\",\n+      \"ec2:DeleteLaunchTemplate\",\n+      \"ec2:DeleteLaunchTemplateVersions\",\n       \"ec2:DeleteNatGateway\",\n       \"ec2:DeleteNetworkInterface\",\n       \"ec2:DeleteRoute\",\n@@ -125,27 +129,23 @@ data \"aws_iam_policy_document\" \"terraform_iam_policy_source\" {\n       \"ec2:DeleteVpc\",\n       \"ec2:DeleteVpnGateway\",\n       \"ec2:Describe*\",\n+      \"ec2:DescribeLaunchTemplateVersions\",\n+      \"ec2:DescribeLaunchTemplates\",\n       \"ec2:DetachInternetGateway\",\n       \"ec2:DetachNetworkInterface\",\n       \"ec2:DetachVolume\",\n       \"ec2:Disassociate*\",\n+      \"ec2:GetLaunchTemplateData\",\n+      \"ec2:ModifyLaunchTemplate\",\n       \"ec2:ModifySubnetAttribute\",\n       \"ec2:ModifyVpcAttribute\",\n       \"ec2:ModifyVpcEndpoint\",\n       \"ec2:ReleaseAddress\",\n       \"ec2:RevokeSecurityGroupEgress\",\n       \"ec2:RevokeSecurityGroupIngress\",\n+      \"ec2:RunInstances\",\n       \"ec2:UpdateSecurityGroupRuleDescriptionsEgress\",\n       \"ec2:UpdateSecurityGroupRuleDescriptionsIngress\",\n-      \"ec2:CreateLaunchTemplate\",\n-      \"ec2:CreateLaunchTemplateVersion\",\n-      \"ec2:DeleteLaunchTemplate\",\n-      \"ec2:DeleteLaunchTemplateVersions\",\n-      \"ec2:DescribeLaunchTemplates\",\n-      \"ec2:DescribeLaunchTemplateVersions\",\n-      \"ec2:GetLaunchTemplateData\",\n-      \"ec2:ModifyLaunchTemplate\",\n-      \"ec2:RunInstances\",\n       \"eks:CreateCluster\",\n       \"eks:DeleteCluster\",\n       \"eks:DescribeCluster\",\n@@ -159,20 +159,20 @@ data \"aws_iam_policy_document\" \"terraform_iam_policy_source\" {\n       \"iam:AddRoleToInstanceProfile\",\n       \"iam:AttachRolePolicy\",\n       \"iam:CreateInstanceProfile\",\n-  \t  \"iam:CreateOpenIDConnectProvider\",\n-      \"iam:CreateServiceLinkedRole\",\n+      \"iam:CreateOpenIDConnectProvider\",\n       \"iam:CreatePolicy\",\n       \"iam:CreatePolicyVersion\",\n       \"iam:CreateRole\",\n+      \"iam:CreateServiceLinkedRole\",\n       \"iam:DeleteInstanceProfile\",\n-\t\t  \"iam:DeleteOpenIDConnectProvider\",\n+      \"iam:DeleteOpenIDConnectProvider\",\n       \"iam:DeletePolicy\",\n       \"iam:DeleteRole\",\n       \"iam:DeleteRolePolicy\",\n       \"iam:DeleteServiceLinkedRole\",\n       \"iam:DetachRolePolicy\",\n       \"iam:GetInstanceProfile\",\n-\t\t  \"iam:GetOpenIDConnectProvider\",\n+      \"iam:GetOpenIDConnectProvider\",\n       \"iam:GetPolicy\",\n       \"iam:GetPolicyVersion\",\n       \"iam:GetRole\",\n@@ -181,8 +181,13 @@ data \"aws_iam_policy_document\" \"terraform_iam_policy_source\" {\n       \"iam:PassRole\",\n       \"iam:PutRolePolicy\",\n       \"iam:RemoveRoleFromInstanceProfile\",\n+      \"iam:TagInstanceProfile\",\n+      \"iam:TagOpenIDConnectProvider\",\n+      \"iam:TagPolicy\",\n       \"iam:TagRole\",\n-      \"iam:UpdateAssumeRolePolicy\"\n+      \"iam:UntagOpenIDConnectProvider\",\n+      \"iam:UntagPolicy\",\n+      \"iam:UpdateAssumeRolePolicy\",\n     ]\n \n     resources = [\"*\"]"
      },
      {
        "filename": "terraform/aws/.terraform.lock.hcl",
        "additions": 116,
        "deletions": 84,
        "changes": 200,
        "status": "modified",
        "patch": "@@ -2,119 +2,129 @@\n # Manual edits may be lost in future updates.\n \n provider \"registry.terraform.io/hashicorp/aws\" {\n-  version     = \"3.27.0\"\n-  constraints = \">= 2.23.0, >= 2.55.0, >= 3.10.0\"\n+  version     = \"3.42.0\"\n+  constraints = \">= 2.23.0, >= 2.70.0, >= 3.22.0, >= 3.37.0\"\n   hashes = [\n-    \"h1:ccxtk7jAtmBPvAEXswOEYJcyp5jTD9QlQeg8GEzYmxQ=\",\n-    \"zh:2986eb5a1ffbb0336c6390aad533b62efc832aa8aa5460d523e1f2daa4f42f79\",\n-    \"zh:825317cdb80860833125a856c0befc877cba22d41c631c5a7ca22400693d4356\",\n-    \"zh:a47aad668cc74058f508c56c5407cd715dbb9b6389aa68d37543e897895db43f\",\n-    \"zh:c0011502d0eb4637918127c3987a8cc07a015ea00f74f4956fd111c736286a4d\",\n-    \"zh:d5088ab51043bb2239132f4ed3760292b6aa4f7296232e4b8017f8c5c34f051a\",\n-    \"zh:d893658e983eb17a23a8124c79a910cc729cb1d751d5509b8e756101c828ad91\",\n-    \"zh:dcc4384ee79ea9492c87eb01e664f7f6b1f1d156471476f30b28336c9d9a4aec\",\n-    \"zh:e4abfaf013f31791cd029af7b6f989f73e3efca28fe2917057b428d051c4085f\",\n-    \"zh:f2a4d9446d23afe2a42421e7d5f902d34451fb31b7787b5e3aef95c08fec5ced\",\n-    \"zh:f54a6af10b077db9dc11556c27f59ba5c60e1b2ba96fe3aa9cd90d8c67d980f6\",\n+    \"h1:C6/yDp6BhuDFx0qdkBuJj/OWUJpAoraHTJaU6ac38Rw=\",\n+    \"h1:quV6hK7ewiHWBznGWCb/gJ6JAPm6UtouBUrhAjv6oRY=\",\n+    \"zh:126c856a6eedddd8571f161a826a407ba5655a37a6241393560a96b8c4beca1a\",\n+    \"zh:1a4868e6ac734b5fc2e79a4a889d176286b66664aad709435aa6acee5871d5b0\",\n+    \"zh:40fed7637ab8ddeb93bef06aded35d970f0628025b97459ae805463e8aa0a58a\",\n+    \"zh:68def3c0a5a1aac1db6372c51daef858b707f03052626d3427ac24cba6f2014d\",\n+    \"zh:6db7ec9c8d1803a0b6f40a664aa892e0f8894562de83061fa7ac1bc51ff5e7e5\",\n+    \"zh:7058abaad595930b3f97dc04e45c112b2dbf37d098372a849081f7081da2fb52\",\n+    \"zh:8c25adb15a19da301c478aa1f4a4d8647cabdf8e5dae8331d4490f80ea718c26\",\n+    \"zh:8e129b847401e39fcbc54817726dab877f36b7f00ff5ed76f7b43470abe99ff9\",\n+    \"zh:d268bb267a2d6b39df7ddee8efa7c1ef7a15cf335dfa5f2e64c9dae9b623a1b8\",\n+    \"zh:d6eeb3614a0ab50f8e9ab5666ae5754ea668ce327310e5b21b7f04a18d7611a8\",\n+    \"zh:f5d3c58055dff6e38562b75d3edc908cb2f1e45c6914f6b00f4773359ce49324\",\n   ]\n }\n \n-provider \"registry.terraform.io/hashicorp/helm\" {\n-  version     = \"2.0.2\"\n-  constraints = \"~> 2.0\"\n+provider \"registry.terraform.io/hashicorp/cloudinit\" {\n+  version = \"2.2.0\"\n   hashes = [\n-    \"h1:NeS94WlOI85mRXQblK/s1oGO/pdz+2HCAsQp8ePQqH0=\",\n-    \"zh:09f7b2389f0e41f51c933d014fe3a89aa53c12801ab45c082d3626689961d5a6\",\n-    \"zh:0af792512adf59648b7cb7f0f194151ac926ae6805ffdb2baf61512b55933e17\",\n-    \"zh:0e29837d65bf4dbe3b9766221a1a4448b2c9df7f4d3049a0b6812055e299c063\",\n-    \"zh:25a0c4d1cba9a22f4d12f6465f191db6e2ec675cbc2c7751bf128bcae23848a8\",\n-    \"zh:6d92f9ffd43a45f0f0da4c59cbb1790b163235882532a88344a53b8526808979\",\n-    \"zh:7c98a0e05f106d4bbfc0c81f7d8b41bc8e867a99b30ccd472367d0414e778c30\",\n-    \"zh:8de8232eedfa4ade990faea4ed3706f0846eb1d66fb82aa22718c7a9aeda92b1\",\n-    \"zh:baff5ff10c9573104d25eece9f79477112ed6882c0ea9280ecbfa944d117838d\",\n-    \"zh:d151fac8be471922cbe137f5a263f4854cdcfbf3fb8af7db83c709d64956934b\",\n-    \"zh:e4d238facc27fc91d26aef79b7f398a6b9f3a1fe078c8d3f0cd4df47ec5aaacd\",\n+    \"h1:siiI0wK6/jUDdA5P8ifTO0yc9YmXHml4hz5K9I9N+MA=\",\n+    \"h1:tQLNREqesrdCQ/bIJnl0+yUK+XfdWzAG0wo4lp10LvM=\",\n+    \"zh:76825122171f9ea2287fd27e23e80a7eb482f6491a4f41a096d77b666896ee96\",\n+    \"zh:795a36dee548e30ca9c9d474af9ad6d29290e0a9816154ad38d55381cd0ab12d\",\n+    \"zh:9200f02cb917fb99e44b40a68936fd60d338e4d30a718b7e2e48024a795a61b9\",\n+    \"zh:a33cf255dc670c20678063aa84218e2c1b7a67d557f480d8ec0f68bc428ed472\",\n+    \"zh:ba3c1b2cd0879286c1f531862c027ec04783ece81de67c9a3b97076f1ce7f58f\",\n+    \"zh:bd575456394428a1a02191d2e46af0c00e41fd4f28cfe117d57b6aeb5154a0fb\",\n+    \"zh:c68dd1db83d8437c36c92dc3fc11d71ced9def3483dd28c45f8640cfcd59de9a\",\n+    \"zh:cbfe34a90852ed03cc074601527bb580a648127255c08589bc3ef4bf4f2e7e0c\",\n+    \"zh:d6ffd7398c6d1f359b96f5b757e77b99b339fbb91df1b96ac974fe71bc87695c\",\n+    \"zh:d9c15285f847d7a52df59e044184fb3ba1b7679fd0386291ed183782683d9517\",\n+    \"zh:f7dd02f6d36844da23c9a27bb084503812c29c1aec4aba97237fec16860fdc8c\",\n   ]\n }\n \n-provider \"registry.terraform.io/hashicorp/kubernetes\" {\n-  version     = \"1.11.4\"\n-  constraints = \">= 1.11.1, ~> 1.11.1\"\n+provider \"registry.terraform.io/hashicorp/helm\" {\n+  version     = \"2.1.2\"\n+  constraints = \"~> 2.1.2\"\n   hashes = [\n-    \"h1:O7tnhKqrY8ydE+KDGHvi+ucUScMF7gweA7t0+FuP4ac=\",\n-    \"zh:00bb92ca607851167b47003ec110be906916876653851ea50ee6f2385081eb3d\",\n-    \"zh:15525ff6b10c1858be7e510227b7647e3f777e07546481c55736fab55a53601a\",\n-    \"zh:2b8c76e308be0578e71b11a872d3a9e1beb3735196fc6f2b696504a6581fc9a8\",\n-    \"zh:33ee1b1a026180127c24e59f870b83a86a49e03eee522351ce97e44a0ab2d066\",\n-    \"zh:708f0de775c8d128231024b192707846d4c25c2a5c7ed3c05d8cda957699a248\",\n-    \"zh:75a25f884b9e14340f9ba108f76ed094c39f76f6f41864f65876d07ef19a2cd2\",\n-    \"zh:7dc6614f00578ff0729e278a11fac942644ba3815704b887206c87f9cb95a80f\",\n-    \"zh:8801681834123777af46b4aeb73dde16b6d2e6087f5a97fe21f89d4c469e1534\",\n-    \"zh:b0af24d2a4275a104121ea0b374418beab1c97875db01ff2c8cd6d0712e8bf10\",\n-    \"zh:b0c6c6aea25b44d47a7f4c7ef4aa1c0eca3a44ffd78e140ed75493355d2f9056\",\n-    \"zh:c45210e5884869618d340a574c2a70860a7147cde79bd874ed1dcd65a469d0ea\",\n-    \"zh:daeaf5b48efd153ee2d63619f3d14722f507df80988678ec21940441cd00c445\",\n+    \"h1:UVuNjmuEM4ZVtItbh1QRGulkBWxDY929roxFQhEf9Ks=\",\n+    \"h1:axFN2JRP+iDo8EAhCfnA3fRUCB5S5x4zCKkivWLNN+Y=\",\n+    \"zh:09bd2b6f33a040c3fd59d82c9768b886b8c82163e31ec92dc1b747229d0548df\",\n+    \"zh:09f209fa57ad5d01f04c458f1719b42958ca5e0fc2eca63d9ec29f92c77a29f8\",\n+    \"zh:0bfc627539500ffb2a41a2f8a5ea7f6fb1d76367b11bbf9489b483b9e8dfff8f\",\n+    \"zh:0c0fef5587a5e927d15f9f4cc13cd0620b138238f9a422490fe9ea2bf086b61a\",\n+    \"zh:187f99648fad2b84d49cdd372f8f6cedbf06e13411b3f1ff66708f66852d7855\",\n+    \"zh:3d9ae08f8a99b19e80bd27708aecf592c28c92da66fd60189dfd7dce4d7da93c\",\n+    \"zh:60b767109362c616b2e6386bfb08581b03bc3e528920444e52b16743f5a180d6\",\n+    \"zh:729db42ed49d91c9b51eb602b9253e6ed6b3ab613c42deefc14996c9a8ee8ae4\",\n+    \"zh:8401f3bf6d69ce43eb14911823c7e5cbb273cf564508043cd04fb064c30a3e1a\",\n+    \"zh:91139b492ce1f41847017349ea49f9441b7cf70762c8d1c32a6a909e25ed10c1\",\n+    \"zh:98fca606a539510edc94dcad8069a321e6a42df90e483f58df03b305726d9220\",\n   ]\n }\n \n-provider \"registry.terraform.io/hashicorp/local\" {\n-  version     = \"2.0.0\"\n-  constraints = \">= 1.4.0\"\n+provider \"registry.terraform.io/hashicorp/kubernetes\" {\n+  version     = \"2.2.0\"\n+  constraints = \">= 1.11.1, ~> 2.2.0\"\n   hashes = [\n-    \"h1:EC6eh7avwx1rF56h3RZcxgEp/14ihi7Sk/4J3Hn4nIE=\",\n-    \"zh:34ce8b79493ace8333d094752b579ccc907fa9392a2c1d6933a6c95d0786d3f1\",\n-    \"zh:5c5a19c4f614a4ffb68bae0b0563f3860115cf7539b8adc21108324cfdc10092\",\n-    \"zh:67ddb1ca2cd3e1a8f948302597ceb967f19d2eeb2d125303493667388fe6330e\",\n-    \"zh:68e6b16f3a8e180fcba1a99754118deb2d82331b51f6cca39f04518339bfdfa6\",\n-    \"zh:8393a12eb11598b2799d51c9b0a922a3d9fadda5a626b94a1b4914086d53120e\",\n-    \"zh:90daea4b2010a86f2aca1e3a9590e0b3ddcab229c2bd3685fae76a832e9e836f\",\n-    \"zh:99308edc734a0ac9149b44f8e316ca879b2670a1cae387a8ae754c180b57cdb4\",\n-    \"zh:c76594db07a9d1a73372a073888b672df64adb455d483c2426cc220eda7e092e\",\n-    \"zh:dc09c1fb36c6a706bdac96cce338952888c8423978426a09f5df93031aa88b84\",\n-    \"zh:deda88134e9780319e8de91b3745520be48ead6ec38cb662694d09185c3dac70\",\n+    \"h1:Sb7AlwtZ6VYoS/A+Ls64UFJiyTBNReZZFHI9kKAN6gM=\",\n+    \"h1:iGRiQAggGI+k1uhlLhqbYQtAg3GYYO+0UP1aRjYvdaI=\",\n+    \"zh:41be89f07c279425a146a31c2cca646efab65f4d5f0b8bbd6059761ff0446231\",\n+    \"zh:4cbbb28396dc766bfca7ee2dbc19fa57331754eca7fee0fe57a87a73f5010f20\",\n+    \"zh:5df93be3e696d60139a485a2937176739f05ac1884850bc58839c3ed99cff995\",\n+    \"zh:64f01bcfc2ad1a42fbd307b9ceb7f70b3c19b35cdd0b950005190ec2de41083a\",\n+    \"zh:7fc88030e20dd9560fd0e64c094d07d6f0c8d1db7838f77dc278f3cae93e7207\",\n+    \"zh:81f7a855f1de2859c83565bc278869f6c7565b56d966fe9a4ef59fb55e5366d8\",\n+    \"zh:d74811f3d3112ab52d151e1e1fa7fc9087d0ea5cc9ef72484c612780890ee586\",\n+    \"zh:e93c93c43445855b4a75ec754b8c1579c55f95c23c1a33c188a57aa38357e513\",\n+    \"zh:f67b32a26cbb763134f6294a2b95798d63aacc63532457c10dc779819f6d8ad0\",\n+    \"zh:fb435298e7b0d8a021bdbfa496dd5c76c9eb0dada4b406b3439949bd4aef756a\",\n+    \"zh:ffafbdea9766b89525c67886f6f0ee9992ae48a229c689716952d71a06b05107\",\n   ]\n }\n \n-provider \"registry.terraform.io/hashicorp/null\" {\n-  version     = \"3.0.0\"\n-  constraints = \">= 2.1.0\"\n+provider \"registry.terraform.io/hashicorp/local\" {\n+  version     = \"2.1.0\"\n+  constraints = \">= 1.4.0\"\n   hashes = [\n-    \"h1:ysHGBhBNkIiJLEpthB/IVCLpA1Qoncp3KbCTFGFZTO0=\",\n-    \"zh:05fb7eab469324c97e9b73a61d2ece6f91de4e9b493e573bfeda0f2077bc3a4c\",\n-    \"zh:1688aa91885a395c4ae67636d411475d0b831e422e005dcf02eedacaafac3bb4\",\n-    \"zh:24a0b1292e3a474f57c483a7a4512d797e041bc9c2fbaac42fe12e86a7fb5a3c\",\n-    \"zh:2fc951bd0d1b9b23427acc93be09b6909d72871e464088171da60fbee4fdde03\",\n-    \"zh:6db825759425599a326385a68acc6be2d9ba0d7d6ef587191d0cdc6daef9ac63\",\n-    \"zh:85985763d02618993c32c294072cc6ec51f1692b803cb506fcfedca9d40eaec9\",\n-    \"zh:a53186599c57058be1509f904da512342cfdc5d808efdaf02dec15f0f3cb039a\",\n-    \"zh:c2e07b49b6efa676bdc7b00c06333ea1792a983a5720f9e2233db27323d2707c\",\n-    \"zh:cdc8fe1096103cf5374751e2e8408ec4abd2eb67d5a1c5151fe2c7ecfd525bef\",\n-    \"zh:dbdef21df0c012b0d08776f3d4f34eb0f2f229adfde07ff252a119e52c0f65b7\",\n+    \"h1:EYZdckuGU3n6APs97nS2LxZm3dDtGqyM4qaIvsmac8o=\",\n+    \"h1:KfieWtVyGWwplSoLIB5usKAUnrIkDQBkWaR5TI+4WYg=\",\n+    \"zh:0f1ec65101fa35050978d483d6e8916664b7556800348456ff3d09454ac1eae2\",\n+    \"zh:36e42ac19f5d68467aacf07e6adcf83c7486f2e5b5f4339e9671f68525fc87ab\",\n+    \"zh:6db9db2a1819e77b1642ec3b5e95042b202aee8151a0256d289f2e141bf3ceb3\",\n+    \"zh:719dfd97bb9ddce99f7d741260b8ece2682b363735c764cac83303f02386075a\",\n+    \"zh:7598bb86e0378fd97eaa04638c1a4c75f960f62f69d3662e6d80ffa5a89847fe\",\n+    \"zh:ad0a188b52517fec9eca393f1e2c9daea362b33ae2eb38a857b6b09949a727c1\",\n+    \"zh:c46846c8df66a13fee6eff7dc5d528a7f868ae0dcf92d79deaac73cc297ed20c\",\n+    \"zh:dc1a20a2eec12095d04bf6da5321f535351a594a636912361db20eb2a707ccc4\",\n+    \"zh:e57ab4771a9d999401f6badd8b018558357d3cbdf3d33cc0c4f83e818ca8e94b\",\n+    \"zh:ebdcde208072b4b0f8d305ebf2bfdc62c926e0717599dcf8ec2fd8c5845031c3\",\n+    \"zh:ef34c52b68933bedd0868a13ccfd59ff1c820f299760b3c02e008dc95e2ece91\",\n   ]\n }\n \n provider \"registry.terraform.io/hashicorp/random\" {\n-  version     = \"3.0.1\"\n+  version     = \"3.1.0\"\n   constraints = \">= 2.1.0\"\n   hashes = [\n-    \"h1:SzM8nt2wzLMI28A3CWAtW25g3ZCm1O4xD0h3Ps/rU1U=\",\n-    \"zh:0d4f683868324af056a9eb2b06306feef7c202c88dbbe6a4ad7517146a22fb50\",\n-    \"zh:4824b3c7914b77d41dfe90f6f333c7ac9860afb83e2a344d91fbe46e5dfbec26\",\n-    \"zh:4b82e43712f3cf0d0cbc95b2cbcd409ba8f0dc7848fdfb7c13633c27468ed04a\",\n-    \"zh:78b3a2b860c3ebc973a794000015f5946eb59b82705d701d487475406b2612f1\",\n-    \"zh:88bc65197bd74ff408d147b32f0045372ae3a3f2a2fdd7f734f315d988c0e4a2\",\n-    \"zh:91bd3c9f625f177f3a5d641a64e54d4b4540cb071070ecda060a8261fb6eb2ef\",\n-    \"zh:a6818842b28d800f784e0c93284ff602b0c4022f407e4750da03f50b853a9a2c\",\n-    \"zh:c4a1a2b52abd05687e6cfded4a789dcd7b43e7a746e4d02dd1055370cf9a994d\",\n-    \"zh:cf65041bf12fc3bde709c1d267dbe94142bc05adcabc4feb17da3b12249132ac\",\n-    \"zh:e385e00e7425dda9d30b74ab4ffa4636f4b8eb23918c0b763f0ffab84ece0c5c\",\n+    \"h1:BZMEPucF+pbu9gsPk0G0BHx7YP04+tKdq2MrRDF1EDM=\",\n+    \"h1:rKYu5ZUbXwrLG1w81k7H3nce/Ys6yAxXhWcbtk36HjY=\",\n+    \"zh:2bbb3339f0643b5daa07480ef4397bd23a79963cc364cdfbb4e86354cb7725bc\",\n+    \"zh:3cd456047805bf639fbf2c761b1848880ea703a054f76db51852008b11008626\",\n+    \"zh:4f251b0eda5bb5e3dc26ea4400dba200018213654b69b4a5f96abee815b4f5ff\",\n+    \"zh:7011332745ea061e517fe1319bd6c75054a314155cb2c1199a5b01fe1889a7e2\",\n+    \"zh:738ed82858317ccc246691c8b85995bc125ac3b4143043219bd0437adc56c992\",\n+    \"zh:7dbe52fac7bb21227acd7529b487511c91f4107db9cc4414f50d04ffc3cab427\",\n+    \"zh:a3a9251fb15f93e4cfc1789800fc2d7414bbc18944ad4c5c98f466e6477c42bc\",\n+    \"zh:a543ec1a3a8c20635cf374110bd2f87c07374cf2c50617eee2c669b3ceeeaa9f\",\n+    \"zh:d9ab41d556a48bd7059f0810cf020500635bfc696c9fc3adab5ea8915c1d886b\",\n+    \"zh:d9e13427a7d011dbd654e591b0337e6074eef8c3b9bb11b2e39eaaf257044fd7\",\n+    \"zh:f7605bd1437752114baf601bdf6931debe6dc6bfe3006eb7e9bb9080931dca8a\",\n   ]\n }\n \n provider \"registry.terraform.io/hashicorp/template\" {\n   version     = \"2.2.0\"\n-  constraints = \">= 2.1.0, ~> 2.1\"\n+  constraints = \"~> 2.1\"\n   hashes = [\n+    \"h1:0wlehNaxBX7GJQnPfQwTNvvAf38Jm0Nv7ssKGMaG6Og=\",\n     \"h1:94qn780bi1qjrbC3uQtjJh3Wkfwd5+tTtJHOb7KTg9w=\",\n     \"zh:01702196f0a0492ec07917db7aaa595843d8f171dc195f4c988d2ffca2a06386\",\n     \"zh:09aae3da826ba3d7df69efeb25d146a1de0d03e951d35019a0f80e4f58c89b53\",\n@@ -128,3 +138,25 @@ provider \"registry.terraform.io/hashicorp/template\" {\n     \"zh:c979425ddb256511137ecd093e23283234da0154b7fa8b21c2687182d9aea8b2\",\n   ]\n }\n+\n+provider \"registry.terraform.io/terraform-aws-modules/http\" {\n+  version     = \"2.4.1\"\n+  constraints = \">= 2.4.1\"\n+  hashes = [\n+    \"h1:FINkX7/X/cr5NEssB7dMqVWa6YtJtmwzvkfryuR39/k=\",\n+    \"h1:ZnkXcawrIr611RvZpoDzbtPU7SVFyHym+7p1t+PQh20=\",\n+    \"zh:0111f54de2a9815ded291f23136d41f3d2731c58ea663a2e8f0fef02d377d697\",\n+    \"zh:0740152d76f0ccf54f4d0e8e0753739a5233b022acd60b5d2353d248c4c17204\",\n+    \"zh:569518f46809ec9cdc082b4dfd4e828236eee2b50f87b301d624cfd83b8f5b0d\",\n+    \"zh:7669f7691de91eec9f381e9a4be81aa4560f050348a86c6ea7804925752a01bb\",\n+    \"zh:81cd53e796ec806aca2d8e92a2aed9135661e170eeff6cf0418e54f98816cd05\",\n+    \"zh:82f01abd905090f978b169ac85d7a5952322a5f0f460269dd981b3596652d304\",\n+    \"zh:9a235610066e0f7e567e69c23a53327271a6fc568b06bf152d8fe6594749ed2b\",\n+    \"zh:aeabdd8e633d143feb67c52248c85358951321e35b43943aeab577c005abd30a\",\n+    \"zh:c20d22dba5c79731918e7192bc3d0b364d47e98a74f47d287e6cc66236bc0ed0\",\n+    \"zh:c4fea2cb18c31ed7723deec5ebaff85d6795bb6b6ed3b954794af064d17a7f9f\",\n+    \"zh:e21e88b6e7e55b9f29b046730d9928c65a4f181fd5f60a42f1cd41b46a0a938d\",\n+    \"zh:eddb888a74dea348a0acdfee13a08875bacddde384bd9c28342a534269665568\",\n+    \"zh:f46d5f1403b8d8dfafab9bdd7129d3080bb62a91ea726f477fd43560887b8c4a\",\n+  ]\n+}"
      },
      {
        "filename": "terraform/aws/aiidalab-cluster.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n # Put your cluster where your data is\n-region = \"eu-west-1\"\n+region = \"eu-north-1\"\n \n # Put the profile you will use for awcli\n profile = \"terraform-bot\""
      },
      {
        "filename": "terraform/aws/autoscaler.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ module \"iam_assumable_role_admin\" {\n   source                        = \"terraform-aws-modules/iam/aws//modules/iam-assumable-role-with-oidc\"\n   version                       = \"~> v3.8.0\"\n   create_role                   = true\n-  role_name                     = \"cluster-autoscaler-blogpost\"\n+  role_name                     = \"cluster-autoscaler-aiidalab\"\n   provider_url                  = replace(module.eks.cluster_oidc_issuer_url, \"https://\", \"\")\n   role_policy_arns              = [aws_iam_policy.cluster_autoscaler.arn]\n   oidc_fully_qualified_subjects = [\"system:serviceaccount:kube-system:cluster-autoscaler-aws-cluster-autoscaler\"]\n@@ -34,6 +34,8 @@ data \"aws_iam_policy_document\" \"cluster_autoscaler\" {\n       \"autoscaling:DescribeAutoScalingInstances\",\n       \"autoscaling:DescribeLaunchConfigurations\",\n       \"autoscaling:DescribeTags\",\n+      \"autoscaling:SetDesiredCapacity\",\n+      \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n       \"ec2:DescribeLaunchTemplateVersions\",\n     ]\n \n@@ -71,6 +73,7 @@ resource \"helm_release\" \"cluster-autoscaler\" {\n   namespace   = \"kube-system\"\n   repository  = \"https://charts.helm.sh/stable/\"\n   chart       = \"cluster-autoscaler\"\n+  version     = \"8.0.0\"\n \n   # Terraform keeps this in state, so we get it automatically!\n   set{"
      },
      {
        "filename": "terraform/aws/efs.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -43,9 +43,9 @@ resource \"kubernetes_namespace\" \"support\" {\n resource \"helm_release\" \"efs-provisioner\" {\n   name = \"efs-provisioner\"\n   namespace = kubernetes_namespace.support.metadata.0.name\n-  repository = \"https://charts.helm.sh/stable/\"\n+  repository = \"https://isotoma.github.io/charts\"\n   chart = \"efs-provisioner\"\n-  version = \"0.11.0\"\n+  version = \"0.13.3\"\n \n   set{\n     name = \"efsProvisioner.efsFileSystemId\""
      },
      {
        "filename": "terraform/aws/main.tf",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "status": "modified",
        "patch": "@@ -20,15 +20,14 @@ provider \"kubernetes\" {\n   host                   = data.aws_eks_cluster.cluster.endpoint\n   cluster_ca_certificate = base64decode(data.aws_eks_cluster.cluster.certificate_authority.0.data)\n   token                  = data.aws_eks_cluster_auth.cluster.token\n-  load_config_file       = false\n }\n \n data \"aws_availability_zones\" \"available\" {\n }\n \n module \"vpc\" {\n   source  = \"terraform-aws-modules/vpc/aws\"\n-  version = \"~> 2.6\"\n+  version = \"~> 2.78.0\"\n \n   name                 = var.vpc_name\n   cidr                 = \"172.16.0.0/16\"\n@@ -61,9 +60,9 @@ module \"vpc\" {\n \n module \"eks\" {\n   source          = \"terraform-aws-modules/eks/aws\"\n-  version         = \"12.2.0\"\n+  version         = \"~> 16.2.0\" \n   cluster_name    = var.cluster_name\n-  cluster_version = \"1.15\"\n+  cluster_version = var.eks_kubernetes_version\n \n   subnets         = module.vpc.private_subnets\n   vpc_id          = module.vpc.vpc_id\n@@ -87,11 +86,11 @@ module \"eks\" {\n       asg_max_size            = 1\n       asg_min_size            = 1\n       asg_desired_capacity    = 1\n-      instance_type           = \"t3a.medium\"\n+      instance_type           = \"t3.medium\"\n       subnets                 = [module.vpc.private_subnets[0]]\n \n       # Use this to set labels / taints\n-      kubelet_extra_args      = \"--node-labels=node-role.kubernetes.io/core=core,hub.jupyter.org/node-purpose=core\"\n+      kubelet_extra_args      = \"--node-labels=node.kubernetes.io/core=core,hub.jupyter.org/node-purpose=core\"\n       \n       tags = [\n         {\n@@ -114,13 +113,13 @@ module \"eks\" {\n       override_instance_types = [\"m5.2xlarge\", \"m4.2xlarge\"]\n       spot_instance_pools     = 2\n       on_demand_base_capacity = 5\n-      on_demand_percentage_above_base_capacity = 25\n+      on_demand_percentage_above_base_capacity = 0\n       asg_min_size            = 0\n-      asg_max_size            = 5\n+      asg_max_size            = 25\n       asg_desired_capacity    = 0\n \n       # Use this to set labels / taints\n-      kubelet_extra_args = \"--node-labels=node-role.kubernetes.io/user=user,hub.jupyter.org/node-purpose=user --register-with-taints hub.jupyter.org/dedicated=user:NoSchedule\"\n+      kubelet_extra_args = \"--node-labels=node.kubernetes.io/user=user,hub.jupyter.org/node-purpose=user --register-with-taints hub.jupyter.org/dedicated=user:NoSchedule\"\n \n       tags = [\n         {\n@@ -154,7 +153,7 @@ module \"eks\" {\n       asg_desired_capacity    = 0\n \n       # Use this to set labels / taints\n-      kubelet_extra_args = \"--node-labels node-role.kubernetes.io/worker=worker,k8s.dask.org/node-purpose=worker --register-with-taints k8s.dask.org/dedicated=worker:NoSchedule\"\n+      kubelet_extra_args = \"--node-labels node.kubernetes.io/worker=worker,k8s.dask.org/node-purpose=worker --register-with-taints k8s.dask.org/dedicated=worker:NoSchedule\"\n \n       tags = [\n         {"
      },
      {
        "filename": "terraform/aws/versions.tf",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -5,11 +5,11 @@ terraform {\n     }\n     helm = {\n       source = \"hashicorp/helm\"\n-      version = \"~> 2.0\"\n+      version = \"~> 2.1.2\"\n     }\n     kubernetes = {\n       source = \"hashicorp/kubernetes\"\n-      version = \"~> 1.11.1\"\n+      version = \"~> 2.2.0\"\n     }\n     template = {\n       source = \"hashicorp/template\"\n@@ -18,3 +18,7 @@ terraform {\n   }\n   required_version = \">= 0.13\"\n }\n+\n+variable \"eks_kubernetes_version\" {\n+  default = \"1.20\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/robgmills/jumpbox/commit/028bbe114d099b0388be9a46adcab80d9383a518",
    "files": [
      {
        "filename": "README.md",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -17,6 +17,8 @@ Setup your [AWS credentials and configuration according to the AWS CLI documenta\n pushd terraform\n terraform init\n export TF_VAR_serveo_key_pair=\"$(ssh-keygen -y -f ~/.ssh/id_rsa)\"\n+export TF_VAR_serveo_budget_email=\"YOUR_EMAIL@YOUR_PROVIDER.COM\"\n+export TF_VAR_serveo_budget_start=$(date +\"%Y-%m-%d_%H:%M\")\n terraform plan\n terraform apply\n terraform output serveo_elastic_dns >| ../ansible/inventory"
      },
      {
        "filename": "terraform/main.tf",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -6,6 +6,14 @@ variable \"serveo_key_pair\" {\n   type = string\n }\n \n+variable \"serveo_budget_email\" {\n+  type = string\n+}\n+\n+variable \"serveo_budget_start\" {\n+  type = string\n+}\n+\n #variable \"serveo_domain\" {\n #  type = string\n #}\n@@ -60,6 +68,28 @@ resource \"aws_eip\" \"serveo\" {\n   }\n }\n \n+resource \"aws_budgets_budget\" \"serveo\" {\n+  name              = \"Serveo\"\n+  budget_type       = \"COST\"\n+  limit_amount      = \"8.25\"\n+  limit_unit        = \"USD\"\n+  time_unit         = \"MONTHLY\"\n+  time_period_start = var.serveo_budget_start\n+\n+  cost_filters = {\n+    TagKeyValue = \"user:Service$Serveo\" \n+  }\n+\n+  notification {\n+    comparison_operator        = \"GREATER_THAN\"\n+    threshold                  = 80\n+    threshold_type             = \"PERCENTAGE\"\n+    notification_type          = \"FORECASTED\"\n+    subscriber_email_addresses = [var.serveo_budget_email]\n+  }\n+}\n+\n+\n output \"serveo_elastic_dns\" {\n   value = aws_eip.serveo.public_dns\n }"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/tale-toul/Harbor/commit/804ab045e330d3b669282e55c5bcc4660ebffea8",
    "files": [
      {
        "filename": "terraform/EC2/ec2.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -21,6 +21,10 @@ resource \"aws_instance\" \"bastion\" {\n                             \"${data.terraform_remote_state.vpc.sg-web-out_id}\",\n                             \"${data.terraform_remote_state.vpc.sg-ssh-out_id}\"]\n   key_name= \"tale_toul-keypair-ireland\"\n+  root_block_device {\n+    volume_size = 8\n+    delete_on_termination = true\n+  }\n \n     tags {\n         Name = \"bastion\"\n@@ -37,6 +41,10 @@ resource \"aws_instance\" \"registry\" {\n                             \"${data.terraform_remote_state.vpc.sg-web-out_id}\",\n                             \"${data.terraform_remote_state.vpc.sg-web-in-local_id}\"]\n   key_name= \"tale_toul-keypair-ireland\"\n+  root_block_device {\n+    volume_size = 8\n+    delete_on_termination = true\n+  }\n \n     tags {\n         Name = \"registry\""
      },
      {
        "filename": "terraform/Readme.md",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -309,6 +309,21 @@ from the network part of the project.\n Part of the information needed to define the instances, like subnet and security groups\n ids are obtained from the VPC datasource.\n \n+When defining the instances it is important to consider the lifecycle of the disks\n+attached to the them, by default each instance will get an 8GB root device that **will NOT\n+be deleted** when the instance is terminated.  This means that if we apply and destroy\n+the terraform plan several times we will end up with as many ebs disks in our aws account,\n+that will increase the bill at the end of the month.  To avoid this problem I will\n+specifically define the option for the root device **delete_on_termination**, this will\n+have the effect of eliminating the ebs disk when the EC2 instance is terminanted:\n+\n+```\n+  root_block_device {\n+    volume_size = 8\n+    delete_on_termination = true\n+  }\n+```\n+\n First we add the bastion host to the public subnet, this will use a Redhat 7.5 image\n installed on a t2.micro instance; the host is placed in the public subnet and applied\n the security groups sg-ssh-in; sg-ssh-out and sg-web-out that allow ssh connections from"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alphagov/paas-alpha-tsuru-terraform/commit/6085ce34a95fbc4a8d651a3f6a0405811952af93",
    "files": [
      {
        "filename": "aws/dns-records.tf",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -6,14 +6,6 @@ resource \"aws_route53_record\" \"router\" {\n   records = [\"${aws_elb.router.dns_name}\"]\n }\n \n-resource \"aws_route53_record\" \"router-int\" {\n-  zone_id = \"${var.dns_zone_id}\"\n-  name = \"${var.env}-hipache-int.${var.dns_zone_name}\"\n-  type = \"CNAME\"\n-  ttl = \"60\"\n-  records = [\"${aws_elb.router-int.dns_name}\"]\n-}\n-\n resource \"aws_route53_record\" \"wildcard\" {\n   zone_id = \"${var.dns_zone_id}\"\n   name = \"*.${var.env}-hipache.${var.dns_zone_name}\""
      },
      {
        "filename": "aws/routers.tf",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "status": "modified",
        "patch": "@@ -37,31 +37,3 @@ resource \"aws_elb\" \"router\" {\n     lb_protocol = \"tcp\"\n   }\n }\n-\n-resource \"aws_elb\" \"router-int\" {\n-  name = \"${var.env}-tsuru-router-elb-int\"\n-  subnets = [\"${aws_subnet.private.*.id}\"]\n-  internal = true\n-  security_groups = [\"${aws_security_group.default.id}\"]\n-  instances = [\"${aws_instance.router.*.id}\"]\n-\n-  health_check {\n-    target = \"TCP:443\"\n-    interval = \"${var.health_check_interval}\"\n-    timeout = \"${var.health_check_timeout}\"\n-    healthy_threshold = \"${var.health_check_healthy}\"\n-    unhealthy_threshold = \"${var.health_check_unhealthy}\"\n-  }\n-  listener {\n-    instance_port = 80\n-    instance_protocol = \"http\"\n-    lb_port = 80\n-    lb_protocol = \"http\"\n-  }\n-  listener {\n-    instance_port = 443\n-    instance_protocol = \"tcp\"\n-    lb_port = 443\n-    lb_protocol = \"tcp\"\n-  }\n-}"
      }
    ],
    "existing_codes": [
      "saving",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/KiaraGrouwstra/sentia-data-engineering-assignment/commit/7e5c997c23683a707aa384b6a07801210b1839b8",
    "files": [
      {
        "filename": "modules/cost.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "added",
        "patch": "@@ -0,0 +1,18 @@\n+resource \"azurerm_cost_management_export_resource_group\" \"cost\" {\n+  name                    = \"${local.prefix}cost\" # alphanumeric\n+  resource_group_id       = azurerm_resource_group.rg.id\n+  recurrence_type         = \"Daily\"\n+  recurrence_period_start = \"2021-02-27T00:00:00Z\"\n+  recurrence_period_end   = \"2021-03-27T00:00:00Z\"\n+\n+  delivery_info {\n+    storage_account_id = azurerm_storage_account.sa.id\n+    container_name     = \"cost_management_export\"\n+    root_folder_path   = \"/root/updated\"\n+  }\n+\n+  query {\n+    type       = \"Usage\"\n+    time_frame = \"WeekToDate\"\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/AdrianNeatu/blog-terraform/commit/3ba302c69eb2a491a5b23e94084b4ddd24a4a703",
    "files": [
      {
        "filename": "cloudwatch-billing.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "added",
        "patch": "@@ -0,0 +1,18 @@\n+provider \"aws\" {\n+  region = \"us-east-1\"\n+  access_key = \"\"\n+  secret_key = \"\"\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"billingAlert\" {\n+  alarm_name                = \"billingAlert\"\n+  comparison_operator       = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods        = \"2\"\n+  metric_name               = \"EstimatedCharges\"\n+  namespace                 = \"AWS/Billing\"\n+  period                    = \"3600\" // 1 hour\n+  statistic                 = \"Maximum\"\n+  threshold                 = \"10\"\n+  alarm_description         = \"This metric monitors charges\"\n+  insufficient_data_actions = []\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform.tfstate",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "status": "added",
        "patch": "@@ -0,0 +1,52 @@\n+{\n+    \"version\": 3,\n+    \"terraform_version\": \"0.11.3\",\n+    \"serial\": 3,\n+    \"lineage\": \"b665a834-82b2-428d-bf45-f3998fdc687c\",\n+    \"modules\": [\n+        {\n+            \"path\": [\n+                \"root\"\n+            ],\n+            \"outputs\": {},\n+            \"resources\": {\n+                \"aws_cloudwatch_metric_alarm.billingAlert\": {\n+                    \"type\": \"aws_cloudwatch_metric_alarm\",\n+                    \"depends_on\": [],\n+                    \"primary\": {\n+                        \"id\": \"billingAlert\",\n+                        \"attributes\": {\n+                            \"actions_enabled\": \"true\",\n+                            \"alarm_actions.#\": \"0\",\n+                            \"alarm_description\": \"This metric monitors charges\",\n+                            \"alarm_name\": \"billingAlert\",\n+                            \"comparison_operator\": \"GreaterThanOrEqualToThreshold\",\n+                            \"datapoints_to_alarm\": \"0\",\n+                            \"dimensions.%\": \"0\",\n+                            \"evaluate_low_sample_count_percentiles\": \"\",\n+                            \"evaluation_periods\": \"2\",\n+                            \"extended_statistic\": \"\",\n+                            \"id\": \"billingAlert\",\n+                            \"insufficient_data_actions.#\": \"0\",\n+                            \"metric_name\": \"EstimatedCharges\",\n+                            \"namespace\": \"AWS/Billing\",\n+                            \"ok_actions.#\": \"0\",\n+                            \"period\": \"3600\",\n+                            \"statistic\": \"Maximum\",\n+                            \"threshold\": \"10\",\n+                            \"treat_missing_data\": \"missing\",\n+                            \"unit\": \"\"\n+                        },\n+                        \"meta\": {\n+                            \"schema_version\": \"1\"\n+                        },\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.aws\"\n+                }\n+            },\n+            \"depends_on\": []\n+        }\n+    ]\n+}"
      },
      {
        "filename": "terraform.tfstate.backup",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+{\n+    \"version\": 3,\n+    \"terraform_version\": \"0.11.3\",\n+    \"serial\": 3,\n+    \"lineage\": \"b665a834-82b2-428d-bf45-f3998fdc687c\",\n+    \"modules\": [\n+        {\n+            \"path\": [\n+                \"root\"\n+            ],\n+            \"outputs\": {},\n+            \"resources\": {},\n+            \"depends_on\": []\n+        }\n+    ]\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/AdrianNeatu/blog-terraform/commit/12cf2cb526ed6b2d12106894ca735cf81ba432ff",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1 +1,5 @@\n+# Terraform\n+.terraform/\n+\n+# JetBrains\n .idea/\n\\ No newline at end of file"
      },
      {
        "filename": "cloudwatch-billing.tf",
        "additions": 19,
        "deletions": 5,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -1,18 +1,32 @@\n provider \"aws\" {\n-  region = \"us-east-1\"\n+  region     = \"us-east-1\"\n   access_key = \"\"\n   secret_key = \"\"\n }\n \n+resource \"aws_sns_topic\" \"sms_notification\" {\n+  name = \"sms-notification-topic\"\n+}\n+\n+resource \"aws_sns_topic_subscription\" \"billing_sms\" {\n+  topic_arn = \"${aws_sns_topic.sms_notification.arn}\"\n+  protocol  = \"sms\"\n+  endpoint  = \"+40760080301\"\n+}\n+\n resource \"aws_cloudwatch_metric_alarm\" \"billingAlert\" {\n   alarm_name                = \"billingAlert\"\n   comparison_operator       = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods        = \"2\"\n+  evaluation_periods        = \"1\"\n   metric_name               = \"EstimatedCharges\"\n   namespace                 = \"AWS/Billing\"\n-  period                    = \"3600\" // 1 hour\n+  period                    = \"3600\"                          // 1 hour\n   statistic                 = \"Maximum\"\n   threshold                 = \"10\"\n-  alarm_description         = \"This metric monitors charges\"\n+  alarm_description         = \"Sends SMS when billing is above 10$\"\n+  dimensions {\n+    Currency = \"USD\"\n+  }\n   insufficient_data_actions = []\n-}\n\\ No newline at end of file\n+  alarm_actions = [\"${aws_sns_topic.sms_notification.arn}\"]\n+}"
      },
      {
        "filename": "terraform.tfstate",
        "additions": 51,
        "deletions": 6,
        "changes": 57,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n {\n     \"version\": 3,\n     \"terraform_version\": \"0.11.3\",\n-    \"serial\": 3,\n+    \"serial\": 8,\n     \"lineage\": \"b665a834-82b2-428d-bf45-f3998fdc687c\",\n     \"modules\": [\n         {\n@@ -12,19 +12,23 @@\n             \"resources\": {\n                 \"aws_cloudwatch_metric_alarm.billingAlert\": {\n                     \"type\": \"aws_cloudwatch_metric_alarm\",\n-                    \"depends_on\": [],\n+                    \"depends_on\": [\n+                        \"aws_sns_topic.sms_notification\"\n+                    ],\n                     \"primary\": {\n                         \"id\": \"billingAlert\",\n                         \"attributes\": {\n                             \"actions_enabled\": \"true\",\n-                            \"alarm_actions.#\": \"0\",\n-                            \"alarm_description\": \"This metric monitors charges\",\n+                            \"alarm_actions.#\": \"1\",\n+                            \"alarm_actions.3441824573\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\",\n+                            \"alarm_description\": \"Sends SMS when billing is above 10$\",\n                             \"alarm_name\": \"billingAlert\",\n                             \"comparison_operator\": \"GreaterThanOrEqualToThreshold\",\n                             \"datapoints_to_alarm\": \"0\",\n-                            \"dimensions.%\": \"0\",\n+                            \"dimensions.%\": \"1\",\n+                            \"dimensions.Currency\": \"USD\",\n                             \"evaluate_low_sample_count_percentiles\": \"\",\n-                            \"evaluation_periods\": \"2\",\n+                            \"evaluation_periods\": \"1\",\n                             \"extended_statistic\": \"\",\n                             \"id\": \"billingAlert\",\n                             \"insufficient_data_actions.#\": \"0\",\n@@ -44,6 +48,47 @@\n                     },\n                     \"deposed\": [],\n                     \"provider\": \"provider.aws\"\n+                },\n+                \"aws_sns_topic.sms_notification\": {\n+                    \"type\": \"aws_sns_topic\",\n+                    \"depends_on\": [],\n+                    \"primary\": {\n+                        \"id\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\",\n+                        \"attributes\": {\n+                            \"arn\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\",\n+                            \"display_name\": \"\",\n+                            \"id\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\",\n+                            \"name\": \"sms-notification-topic\",\n+                            \"policy\": \"{\\\"Id\\\":\\\"__default_policy_ID\\\",\\\"Statement\\\":[{\\\"Action\\\":[\\\"SNS:GetTopicAttributes\\\",\\\"SNS:SetTopicAttributes\\\",\\\"SNS:AddPermission\\\",\\\"SNS:RemovePermission\\\",\\\"SNS:DeleteTopic\\\",\\\"SNS:Subscribe\\\",\\\"SNS:ListSubscriptionsByTopic\\\",\\\"SNS:Publish\\\",\\\"SNS:Receive\\\"],\\\"Condition\\\":{\\\"StringEquals\\\":{\\\"AWS:SourceOwner\\\":\\\"181999802870\\\"}},\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"*\\\"},\\\"Resource\\\":\\\"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\\\",\\\"Sid\\\":\\\"__default_statement_ID\\\"}],\\\"Version\\\":\\\"2008-10-17\\\"}\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.aws\"\n+                },\n+                \"aws_sns_topic_subscription.billing_sms\": {\n+                    \"type\": \"aws_sns_topic_subscription\",\n+                    \"depends_on\": [\n+                        \"aws_sns_topic.sms_notification\"\n+                    ],\n+                    \"primary\": {\n+                        \"id\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic:2770f2ee-1e93-40bf-9185-1f404c97f685\",\n+                        \"attributes\": {\n+                            \"arn\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic:2770f2ee-1e93-40bf-9185-1f404c97f685\",\n+                            \"confirmation_timeout_in_minutes\": \"1\",\n+                            \"endpoint\": \"+40760080301\",\n+                            \"endpoint_auto_confirms\": \"false\",\n+                            \"id\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic:2770f2ee-1e93-40bf-9185-1f404c97f685\",\n+                            \"protocol\": \"sms\",\n+                            \"raw_message_delivery\": \"false\",\n+                            \"topic_arn\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.aws\"\n                 }\n             },\n             \"depends_on\": []"
      },
      {
        "filename": "terraform.tfstate.backup",
        "additions": 82,
        "deletions": 2,
        "changes": 84,
        "status": "modified",
        "patch": "@@ -1,15 +1,95 @@\n {\n     \"version\": 3,\n     \"terraform_version\": \"0.11.3\",\n-    \"serial\": 3,\n+    \"serial\": 8,\n     \"lineage\": \"b665a834-82b2-428d-bf45-f3998fdc687c\",\n     \"modules\": [\n         {\n             \"path\": [\n                 \"root\"\n             ],\n             \"outputs\": {},\n-            \"resources\": {},\n+            \"resources\": {\n+                \"aws_cloudwatch_metric_alarm.billingAlert\": {\n+                    \"type\": \"aws_cloudwatch_metric_alarm\",\n+                    \"depends_on\": [\n+                        \"aws_sns_topic.sms_notification\"\n+                    ],\n+                    \"primary\": {\n+                        \"id\": \"billingAlert\",\n+                        \"attributes\": {\n+                            \"actions_enabled\": \"true\",\n+                            \"alarm_actions.#\": \"1\",\n+                            \"alarm_actions.3441824573\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\",\n+                            \"alarm_description\": \"Sends SMS when billing is above 10$\",\n+                            \"alarm_name\": \"billingAlert\",\n+                            \"comparison_operator\": \"GreaterThanOrEqualToThreshold\",\n+                            \"datapoints_to_alarm\": \"0\",\n+                            \"dimensions.%\": \"0\",\n+                            \"evaluate_low_sample_count_percentiles\": \"\",\n+                            \"evaluation_periods\": \"1\",\n+                            \"extended_statistic\": \"\",\n+                            \"id\": \"billingAlert\",\n+                            \"insufficient_data_actions.#\": \"0\",\n+                            \"metric_name\": \"EstimatedCharges\",\n+                            \"namespace\": \"AWS/Billing\",\n+                            \"ok_actions.#\": \"0\",\n+                            \"period\": \"3600\",\n+                            \"statistic\": \"Maximum\",\n+                            \"threshold\": \"10\",\n+                            \"treat_missing_data\": \"missing\",\n+                            \"unit\": \"\"\n+                        },\n+                        \"meta\": {\n+                            \"schema_version\": \"1\"\n+                        },\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.aws\"\n+                },\n+                \"aws_sns_topic.sms_notification\": {\n+                    \"type\": \"aws_sns_topic\",\n+                    \"depends_on\": [],\n+                    \"primary\": {\n+                        \"id\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\",\n+                        \"attributes\": {\n+                            \"arn\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\",\n+                            \"display_name\": \"\",\n+                            \"id\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\",\n+                            \"name\": \"sms-notification-topic\",\n+                            \"policy\": \"{\\\"Id\\\":\\\"__default_policy_ID\\\",\\\"Statement\\\":[{\\\"Action\\\":[\\\"SNS:GetTopicAttributes\\\",\\\"SNS:SetTopicAttributes\\\",\\\"SNS:AddPermission\\\",\\\"SNS:RemovePermission\\\",\\\"SNS:DeleteTopic\\\",\\\"SNS:Subscribe\\\",\\\"SNS:ListSubscriptionsByTopic\\\",\\\"SNS:Publish\\\",\\\"SNS:Receive\\\"],\\\"Condition\\\":{\\\"StringEquals\\\":{\\\"AWS:SourceOwner\\\":\\\"181999802870\\\"}},\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"*\\\"},\\\"Resource\\\":\\\"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\\\",\\\"Sid\\\":\\\"__default_statement_ID\\\"}],\\\"Version\\\":\\\"2008-10-17\\\"}\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.aws\"\n+                },\n+                \"aws_sns_topic_subscription.billing_sms\": {\n+                    \"type\": \"aws_sns_topic_subscription\",\n+                    \"depends_on\": [\n+                        \"aws_sns_topic.sms_notification\"\n+                    ],\n+                    \"primary\": {\n+                        \"id\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic:2770f2ee-1e93-40bf-9185-1f404c97f685\",\n+                        \"attributes\": {\n+                            \"arn\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic:2770f2ee-1e93-40bf-9185-1f404c97f685\",\n+                            \"confirmation_timeout_in_minutes\": \"1\",\n+                            \"endpoint\": \"+40760080301\",\n+                            \"endpoint_auto_confirms\": \"false\",\n+                            \"id\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic:2770f2ee-1e93-40bf-9185-1f404c97f685\",\n+                            \"protocol\": \"sms\",\n+                            \"raw_message_delivery\": \"false\",\n+                            \"topic_arn\": \"arn:aws:sns:us-east-1:181999802870:sms-notification-topic\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.aws\"\n+                }\n+            },\n             \"depends_on\": []\n         }\n     ]"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jenkins-x/terraform-aws-eks-jx/commit/cce6b14692fccd30c027851607a9526151d4c3d2",
    "files": [
      {
        "filename": "modules/vault/main.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -49,9 +49,9 @@ resource \"aws_dynamodb_table\" \"vault-dynamodb-table\" {\n   count = var.external_vault ? 0 : 1 \n \n   name           = \"vault-unseal-${var.cluster_name}-${local.vault_seed}\"\n-  billing_mode   = \"PROVISIONED\"\n-  read_capacity  = 2\n-  write_capacity = 2\n+  billing_mode   = (var.enable_provisioned_dynamodb ? \"PROVISIONED\" : \"PAY_PER_REQUEST\")\n+  read_capacity  = var.billing_rcu\n+  write_capacity = var.billing_wcu\n   hash_key       = \"Path\"\n   range_key      = \"Key\"\n "
      },
      {
        "filename": "modules/vault/variables.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -34,3 +34,25 @@ variable \"external_vault\" {\n   type        = bool\n   default     = false\n }\n+\n+// ----------------------------------------------------------------------------\n+// DynamoDB Variables\n+// ----------------------------------------------------------------------------\n+\n+variable \"billing_rcu\" {\n+  description = \"The Read Capacity Units of DynamoDB when using PROVISIONED\"\n+  type        = number\n+  default     = 2\n+}\n+\n+variable \"billing_wcu\" {\n+  description = \"The Write Capacity Units of DynamoDB when using PROVISIONED\"\n+  type        = number\n+  default     = 2\n+}\n+\n+variable \"enable_provisioned_dynamodb\" {\n+  description = \"Flag to enable provisioned billing for DynamoDB\"\n+  type        = bool\n+  default     = false\n+}"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/CodeForPoznan/Infrastructure/commit/2709680d633653ca9bd68a023981a75427daaa7a",
    "files": [
      {
        "filename": "bastion.tf",
        "additions": 27,
        "deletions": 10,
        "changes": 37,
        "status": "modified",
        "patch": "@@ -16,31 +16,48 @@ resource \"aws_security_group\" \"bastion\" {\n   ]\n }\n \n+locals {\n+  authorized_keys = [\n+    module.tomasz_magulski.public_key,\n+    module.artur_tamborski.public_key,\n+    module.wojciech_patelka.public_key,\n+  ]\n+}\n+\n data \"template_cloudinit_config\" \"bastion\" {\n   gzip          = true\n   base64_encode = true\n \n   part {\n     filename     = \"init.cfg\"\n     content_type = \"text/cloud-config\"\n+\n+    # https://www.kabisa.nl/tech/cost-saving-with-nat-instances/\n     content = <<TEMPLATE\n+package_update: true\n+\n+bootcmd:\n+  - sysctl -w net.ipv4.ip_forward=1\n+  - iptables -t nat -A POSTROUTING -j MASQUERADE\n+\n+runcmd:\n+  - echo $(hostname -I) $(hostname) >> /etc/hosts\n+\n ssh_authorized_keys:\n-%{for key in [\n-    module.tomasz_magulski.public_key,\n-    module.artur_tamborski.public_key,\n-    module.wojciech_patelka.public_key,\n-]~}\n+%{for key in local.authorized_keys~}\n   - ${key}\n %{endfor~}\n     TEMPLATE\n-}\n+  }\n }\n \n resource \"aws_instance\" \"bastion\" {\n-  ami              = \"ami-035966e8adab4aaad\" # Ubuntu 18.04 LTS in eu-west-1\n-  instance_type    = \"t2.nano\"\n-  subnet_id        = aws_subnet.public_a.id\n-  user_data_base64 = data.template_cloudinit_config.bastion.rendered\n+  ami               = \"ami-09e0d6fdf60750e33\" # Ubuntu 20.04 LTS, eu-west-1\n+  instance_type     = \"t4g.nano\"\n+  subnet_id         = aws_subnet.public_a.id\n+  user_data_base64  = data.template_cloudinit_config.bastion.rendered\n+  source_dest_check = false\n+\n   vpc_security_group_ids = [\n     aws_security_group.bastion.id,\n     aws_default_security_group.main.id,"
      },
      {
        "filename": "networking.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -83,6 +83,11 @@ resource \"aws_default_route_table\" \"public\" {\n \n resource \"aws_route_table\" \"private\" {\n   vpc_id = aws_vpc.main.id\n+\n+  route {\n+    cidr_block  = \"0.0.0.0/0\"\n+    instance_id = aws_instance.bastion.id\n+  }\n }\n \n resource \"aws_route_table_association\" \"public_a\" {"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Civil-Service-Human-Resources/lpg-terraform-paas/commit/59477d3dc237e72252bde005b783213b7e8ed961",
    "files": [
      {
        "filename": "environments/demo/main.tf",
        "additions": 26,
        "deletions": 26,
        "changes": 52,
        "status": "modified",
        "patch": "@@ -1,39 +1,39 @@\n module \"redis\" {\n-  source                    = \"../../modules/redis\"\n-  rg_name                   = \"${var.rg_name}\"\n-  rg_prefix                 = \"${var.rg_prefix}\"\n-  rg_location               = \"${var.rg_location}\"\n-  redis_name                = \"${var.rg_prefix}-${var.rg_name}-redis\"\n-  env_profile               = \"${var.env_profile}\"\n+  source                                  = \"../../modules/redis\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_prefix}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  redis_name                              = \"${var.rg_prefix}-${var.rg_name}-redis\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"mysql\" {\n-  source                    = \"../../modules/mysql\"\n-  rg_name                   = \"${var.rg_name}\"\n-  rg_prefix                 = \"${var.rg_name}\"\n-  rg_location               = \"${var.rg_location}\"\n-  mysql_name                = \"${var.rg_prefix}-${var.rg_name}-${var.mysql_name}\"\n-  mysql_admin_login         = \"${var.mysql_user}\"\n-  mysql_admin_pass          = \"${var.mysql_pass}\"\n-  env_profile               = \"${var.env_profile}\"\n+  source                                  = \"../../modules/mysql\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_name}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  mysql_name                              = \"${var.rg_prefix}-${var.rg_name}-${var.mysql_name}\"\n+  mysql_admin_login                       = \"${var.mysql_user}\"\n+  mysql_admin_pass                        = \"${var.mysql_pass}\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"cosmos\" {\n-  source      = \"../../modules/cosmos\"\n-  rg_name     = \"${var.rg_name}\"\n-  rg_prefix   = \"${var.rg_name}\"\n-  rg_location = \"${var.rg_location}\"\n-  cosmos_name = \"${var.rg_prefix}-${var.rg_name}-${var.cosmos_name}\"\n-  env_profile = \"${var.env_profile}\"\n+  source                                  = \"../../modules/cosmos\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_name}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  cosmos_name                             = \"${var.rg_prefix}-${var.rg_name}-${var.cosmos_name}\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"blob\" {\n-  source                      = \"../../modules/blob\"\n-  rg_name                     = \"${var.rg_name}\"\n-  rg_prefix                   = \"${var.rg_prefix}\"\n-  rg_location                 = \"${var.rg_location}\"\n-  storage_account_name        = \"${var.rg_prefix}${var.rg_name}blob\"\n-  env_profile                 = \"${var.env_profile}\"\n+  source                                  = \"../../modules/blob\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_prefix}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  storage_account_name                    = \"${var.rg_prefix}${var.rg_name}blob\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"identity\" {"
      },
      {
        "filename": "environments/demo/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"UK South\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"envurl\" {\n   default = \"demo2-\"\n }"
      },
      {
        "filename": "environments/dev/main.tf",
        "additions": 26,
        "deletions": 26,
        "changes": 52,
        "status": "modified",
        "patch": "@@ -1,39 +1,39 @@\n module \"redis\" {\n-  source                    = \"../../modules/redis\"\n-  rg_name                   = \"${var.rg_name}\"\n-  rg_prefix                 = \"${var.rg_prefix}\"\n-  rg_location               = \"${var.rg_location}\"\n-  redis_name                = \"${var.rg_prefix}-${var.rg_name}-redis\"\n-  env_profile               = \"${var.env_profile}\"\n+  source                                  = \"../../modules/redis\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_prefix}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  redis_name                              = \"${var.rg_prefix}-${var.rg_name}-redis\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"mysql\" {\n-  source                    = \"../../modules/mysql\"\n-  rg_name                   = \"${var.rg_name}\"\n-  rg_prefix                 = \"${var.rg_name}\"\n-  rg_location               = \"${var.rg_location}\"\n-  mysql_name                = \"${var.rg_prefix}-${var.rg_name}-${var.mysql_name}\"\n-  mysql_admin_login         = \"${var.mysql_user}\"\n-  mysql_admin_pass          = \"${var.mysql_pass}\"\n-  env_profile               = \"${var.env_profile}\"\n+  source                                  = \"../../modules/mysql\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_name}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  mysql_name                              = \"${var.rg_prefix}-${var.rg_name}-${var.mysql_name}\"\n+  mysql_admin_login                       = \"${var.mysql_user}\"\n+  mysql_admin_pass                        = \"${var.mysql_pass}\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"cosmos\" {\n-  source      = \"../../modules/cosmos\"\n-  rg_name     = \"${var.rg_name}\"\n-  rg_prefix   = \"${var.rg_name}\"\n-  rg_location = \"${var.rg_location}\"\n-  cosmos_name = \"${var.rg_prefix}-${var.rg_name}-${var.cosmos_name}\"\n-  env_profile = \"${var.env_profile}\"\n+  source                                  = \"../../modules/cosmos\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_name}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  cosmos_name                             = \"${var.rg_prefix}-${var.rg_name}-${var.cosmos_name}\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"blob\" {\n-  source                      = \"../../modules/blob\"\n-  rg_name                     = \"${var.rg_name}\"\n-  rg_prefix                   = \"${var.rg_prefix}\"\n-  rg_location                 = \"${var.rg_location}\"\n-  storage_account_name        = \"${var.rg_prefix}${var.rg_name}blob\"\n-  env_profile                 = \"${var.env_profile}\"\n+  source                                  = \"../../modules/blob\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_prefix}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  storage_account_name                    = \"${var.rg_prefix}${var.rg_name}blob\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"identity\" {"
      },
      {
        "filename": "environments/dev/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"UK South\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"envurl\" {\n   default = \"dev2-\"\n }"
      },
      {
        "filename": "environments/prod/main.tf",
        "additions": 60,
        "deletions": 38,
        "changes": 98,
        "status": "modified",
        "patch": "@@ -1,39 +1,39 @@\n module \"redis\" {\n-  source                    = \"../../modules/redis\"\n-  rg_name                   = \"${var.rg_name}\"\n-  rg_prefix                 = \"${var.rg_prefix}\"\n-  rg_location               = \"${var.rg_location}\"\n-  redis_name                = \"${var.rg_prefix}-${var.rg_name}-redis\"\n-  env_profile               = \"${var.env_profile}\"\n+  source                                  = \"../../modules/redis\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_prefix}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  redis_name                              = \"${var.rg_prefix}-${var.rg_name}-redis\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"mysql\" {\n-  source                    = \"../../modules/mysql\"\n-  rg_name                   = \"${var.rg_name}\"\n-  rg_prefix                 = \"${var.rg_name}\"\n-  rg_location               = \"${var.rg_location}\"\n-  mysql_name                = \"${var.rg_prefix}-${var.rg_name}-${var.mysql_name}\"\n-  mysql_admin_login         = \"${var.mysql_user}\"\n-  mysql_admin_pass          = \"${var.mysql_pass}\"\n-  env_profile               = \"${var.env_profile}\"\n+  source                                  = \"../../modules/mysql\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_name}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  mysql_name                              = \"${var.rg_prefix}-${var.rg_name}-${var.mysql_name}\"\n+  mysql_admin_login                       = \"${var.mysql_user}\"\n+  mysql_admin_pass                        = \"${var.mysql_pass}\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"cosmos\" {\n-  source      = \"../../modules/cosmos\"\n-  rg_name     = \"${var.rg_name}\"\n-  rg_prefix   = \"${var.rg_name}\"\n-  rg_location = \"${var.rg_location}\"\n-  cosmos_name = \"${var.rg_prefix}-${var.rg_name}-${var.cosmos_name}\"\n-  env_profile = \"${var.env_profile}\"\n+  source                                  = \"../../modules/cosmos\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_name}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  cosmos_name                             = \"${var.rg_prefix}-${var.rg_name}-${var.cosmos_name}\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"blob\" {\n-  source                      = \"../../modules/blob\"\n-  rg_name                     = \"${var.rg_name}\"\n-  rg_prefix                   = \"${var.rg_prefix}\"\n-  rg_location                 = \"${var.rg_location}\"\n-  storage_account_name        = \"${var.rg_prefix}${var.rg_name}blob\"\n-  env_profile                 = \"${var.env_profile}\"\n+  source                                  = \"../../modules/blob\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_prefix}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  storage_account_name                    = \"${var.rg_prefix}${var.rg_name}blob\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"identity\" {\n@@ -56,6 +56,8 @@ module \"identity\" {\n   envurl                                  = \"${var.envurl}\"\n   invite_signup_url                       = \"https://${var.envurl}identity.cshr.digital/signup/%s\"\n   reset_url                               = \"https://${var.envurl}identity.cshr.digital/reset/%s\"\n+  webapp_sku_tier                         = \"Standard\"\n+  webapp_sku_name                         = \"S1\"\n }\n \n module \"identity-management\" {\n@@ -75,6 +77,8 @@ module \"identity-management\" {\n   gov_notify_api_key                      = \"${var.gov_notify_api_key}\"\n   envurl                                  = \"${var.envurl}\"\n   invite_signup_url                       = \"https://${var.envurl}identity.cshr.digital/signup/%s\"\n+  webapp_sku_tier                         = \"Standard\"\n+  webapp_sku_name                         = \"S1\"\n }\n \n \n@@ -104,6 +108,8 @@ module \"lpg-learner-record\" {\n   certificatename               = \"${var.certificatename}\"\n   envurl                        = \"${var.envurl}\"\n   spring_profiles_active        = \"${var.spring_profiles_active}\"\n+  webapp_sku_tier               = \"Standard\"\n+  webapp_sku_name               = \"S1\"\n }\n \n module \"lpg-report-service\" {\n@@ -124,6 +130,8 @@ module \"lpg-report-service\" {\n   existingkeyvaultsecretname    = \"${var.existingkeyvaultsecretname}\"\n   certificatename               = \"${var.certificatename}\"\n   envurl                        = \"${var.envurl}\"\n+  webapp_sku_tier               = \"Standard\"\n+  webapp_sku_name               = \"S1\"\n }\n \n module \"lpg-learning-locker-xapi\" {\n@@ -145,6 +153,8 @@ module \"lpg-learning-locker-xapi\" {\n   existingkeyvaultsecretname  = \"${var.existingkeyvaultsecretname}\"\n   certificatename             = \"${var.certificatename}\"\n   envurl                      = \"${var.envurl}\"\n+  webapp_sku_tier             = \"Standard\"\n+  webapp_sku_name             = \"S1\"\n }\n \n module \"lpg-learning-locker-worker\" {\n@@ -168,21 +178,25 @@ module \"lpg-learning-locker-worker\" {\n   queue_provider              = \"${var.redis_queue_provider}\"\n   queue_namespace             = \"${var.redis_queue_namespace}\"\n   testing                     = \"${var.lpg_testing}\"\n+  webapp_sku_tier             = \"Standard\"\n+  webapp_sku_name             = \"S1\"\n }\n \n module \"lpg-learning-locker-ui\" {\n-  source                  = \"../../modules/learning-locker-ui\"\n-  rg_name                 = \"${var.rg_name}\"\n-  rg_prefix               = \"${var.rg_prefix}\"\n-  rg_location             = \"${var.rg_location}\"\n-  mongodb_path            = \"mongodb://${module.cosmos.cosmos_name}:${module.cosmos.cosmos_password}@${module.cosmos.cosmos_name}.documents.azure.com:10255/?ssl=true&replicaSet=globaldb\"\n-  docker_tag              = \"${var.ll_docker_tag}\"\n-  learning_locker_ui_name = \"${var.rg_prefix}-${var.rg_name}-${var.lpg_learning_locker_ui_name}\"\n-  api_host                = \"localhost\"\n-  api_port                = \"${var.lpg_learning_locker_api_port}\"\n-  env_profile             = \"${var.env_profile}\"\n-  ui_host                 = \"${var.rg_prefix}-${var.rg_name}-${var.lpg_learning_locker_ui_name}.azurewebsites.net\"\n-  ui_port                 = \"${var.ll_ui_port}\"\n+  source                      = \"../../modules/learning-locker-ui\"\n+  rg_name                     = \"${var.rg_name}\"\n+  rg_prefix                   = \"${var.rg_prefix}\"\n+  rg_location                 = \"${var.rg_location}\"\n+  mongodb_path                = \"mongodb://${module.cosmos.cosmos_name}:${module.cosmos.cosmos_password}@${module.cosmos.cosmos_name}.documents.azure.com:10255/?ssl=true&replicaSet=globaldb\"\n+  docker_tag                  = \"${var.ll_docker_tag}\"\n+  learning_locker_ui_name     = \"${var.rg_prefix}-${var.rg_name}-${var.lpg_learning_locker_ui_name}\"\n+  api_host                    = \"localhost\"\n+  api_port                    = \"${var.lpg_learning_locker_api_port}\"\n+  env_profile                 = \"${var.env_profile}\"\n+  ui_host                     = \"${var.rg_prefix}-${var.rg_name}-${var.lpg_learning_locker_ui_name}.azurewebsites.net\"\n+  ui_port                     = \"${var.ll_ui_port}\"\n+  webapp_sku_tier             = \"Standard\"\n+  webapp_sku_name             = \"S1\"\n }\n \n module \"lpg-management\" {\n@@ -213,6 +227,8 @@ module \"lpg-management\" {\n   lpg_management_oauth_client_id      = \"${var.lpg_management_oauth_client_id}\"\n   lpg_management_oauth_client_secret  = \"${var.lpg_management_oauth_client_secret}\"\n   report_service_url                  = \"https://${var.envurl}report.cshr.digital\"\n+  webapp_sku_tier                     = \"Standard\"\n+  webapp_sku_name                     = \"S1\"\n }\n \n module \"lpg-ui\" {\n@@ -246,6 +262,8 @@ module \"lpg-ui\" {\n   lpg_ui_server                   = \"https://${var.envurl}lpg.cshr.digital\"\n   lpg_ui_oauth_client_id          = \"${var.lpg_ui_oauth_client_id}\"\n   lpg_ui_oauth_client_secret      = \"${var.lpg_ui_oauth_client_secret}\"\n+  webapp_sku_tier                 = \"Standard\"\n+  webapp_sku_name                 = \"S2\"\n }\n \n module \"lpg-learning-catalogue\" {\n@@ -266,6 +284,8 @@ module \"lpg-learning-catalogue\" {\n   existingkeyvaultsecretname  = \"${var.existingkeyvaultsecretname}\"\n   certificatename             = \"${var.certificatename}\"\n   envurl                      = \"${var.envurl}\"\n+  webapp_sku_tier             = \"Standard\"\n+  webapp_sku_name             = \"S1\"\n }\n \n module \"civil-servant-registry-service\" {\n@@ -287,4 +307,6 @@ module \"civil-servant-registry-service\" {\n   gov_notify_api_key          = \"${var.gov_notify_api_key}\"\n   envurl                      = \"${var.envurl}\"\n   authentication_service_url  = \"https://${var.envurl}identity.cshr.digital\"\n+  webapp_sku_tier             = \"Standard\"\n+  webapp_sku_name             = \"S1\"\n }"
      },
      {
        "filename": "environments/prod/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"UK South\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Standard\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"S1\"\n+}\n+\n variable \"envurl\" {\n   default = \"\"\n }"
      },
      {
        "filename": "environments/test/main.tf",
        "additions": 26,
        "deletions": 26,
        "changes": 52,
        "status": "modified",
        "patch": "@@ -1,39 +1,39 @@\n module \"redis\" {\n-  source                    = \"../../modules/redis\"\n-  rg_name                   = \"${var.rg_name}\"\n-  rg_prefix                 = \"${var.rg_prefix}\"\n-  rg_location               = \"${var.rg_location}\"\n-  redis_name                = \"${var.rg_prefix}-${var.rg_name}-redis\"\n-  env_profile               = \"${var.env_profile}\"\n+  source                                  = \"../../modules/redis\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_prefix}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  redis_name                              = \"${var.rg_prefix}-${var.rg_name}-redis\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"mysql\" {\n-  source                    = \"../../modules/mysql\"\n-  rg_name                   = \"${var.rg_name}\"\n-  rg_prefix                 = \"${var.rg_name}\"\n-  rg_location               = \"${var.rg_location}\"\n-  mysql_name                = \"${var.rg_prefix}-${var.rg_name}-${var.mysql_name}\"\n-  mysql_admin_login         = \"${var.mysql_user}\"\n-  mysql_admin_pass          = \"${var.mysql_pass}\"\n-  env_profile               = \"${var.env_profile}\"\n+  source                                  = \"../../modules/mysql\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_name}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  mysql_name                              = \"${var.rg_prefix}-${var.rg_name}-${var.mysql_name}\"\n+  mysql_admin_login                       = \"${var.mysql_user}\"\n+  mysql_admin_pass                        = \"${var.mysql_pass}\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"cosmos\" {\n-  source      = \"../../modules/cosmos\"\n-  rg_name     = \"${var.rg_name}\"\n-  rg_prefix   = \"${var.rg_name}\"\n-  rg_location = \"${var.rg_location}\"\n-  cosmos_name = \"${var.rg_prefix}-${var.rg_name}-${var.cosmos_name}\"\n-  env_profile = \"${var.env_profile}\"\n+  source                                  = \"../../modules/cosmos\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_name}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  cosmos_name                             = \"${var.rg_prefix}-${var.rg_name}-${var.cosmos_name}\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"blob\" {\n-  source                      = \"../../modules/blob\"\n-  rg_name                     = \"${var.rg_name}\"\n-  rg_prefix                   = \"${var.rg_prefix}\"\n-  rg_location                 = \"${var.rg_location}\"\n-  storage_account_name        = \"${var.rg_prefix}${var.rg_name}blob\"\n-  env_profile                 = \"${var.env_profile}\"\n+  source                                  = \"../../modules/blob\"\n+  rg_name                                 = \"${var.rg_name}\"\n+  rg_prefix                               = \"${var.rg_prefix}\"\n+  rg_location                             = \"${var.rg_location}\"\n+  storage_account_name                    = \"${var.rg_prefix}${var.rg_name}blob\"\n+  env_profile                             = \"${var.env_profile}\"\n }\n \n module \"identity\" {"
      },
      {
        "filename": "environments/test/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"UK South\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"envurl\" {\n   default = \"test-\"\n }"
      },
      {
        "filename": "modules/civil-servant-registry-service/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -91,8 +91,8 @@ resource \"azurerm_template_deployment\" \"civil-servant-registry-app-service\" {\n         \"hostingEnvironment\": \"\"\n       },\n       \"sku\": {\n-        \"Tier\": \"Standard\",\n-        \"Name\": \"S3\"\n+        \"Tier\": \"${var.webapp_sku_tier}\",\n+        \"Name\": \"${var.webapp_sku_name}\"\n       },\n       \"kind\": \"linux\"\n     },"
      },
      {
        "filename": "modules/civil-servant-registry-service/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      },
      {
        "filename": "modules/identity-management/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -99,8 +99,8 @@ resource \"azurerm_template_deployment\" \"identity-management-app-service\" {\n                   \"hostingEnvironment\": \"\"\n               },\n               \"sku\": {\n-                  \"Tier\": \"Standard\",\n-                  \"Name\": \"S1\"\n+                  \"Tier\": \"${var.webapp_sku_tier}\",\n+                  \"Name\": \"${var.webapp_sku_name}\"\n               },\n               \"kind\": \"linux\"\n           },"
      },
      {
        "filename": "modules/identity-management/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      },
      {
        "filename": "modules/identity/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -91,8 +91,8 @@ resource \"azurerm_template_deployment\" \"identity-app-service\" {\n         \"hostingEnvironment\": \"\"\n       },\n       \"sku\": {\n-        \"Tier\": \"Standard\",\n-        \"Name\": \"S3\"\n+        \"Tier\": \"${var.webapp_sku_tier}\",\n+        \"Name\": \"${var.webapp_sku_name}\"\n       },\n       \"kind\": \"linux\"\n     },"
      },
      {
        "filename": "modules/identity/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      },
      {
        "filename": "modules/learning-locker-ui/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -103,8 +103,8 @@ resource \"azurerm_template_deployment\" \"learning-locker-ui-app-service\" {\n                   \"hostingEnvironment\": \"\"\n               },\n               \"sku\": {\n-                  \"Tier\": \"Standard\",\n-                  \"Name\": \"S1\"\n+                  \"Tier\": \"${var.webapp_sku_tier}\",\n+                  \"Name\": \"${var.webapp_sku_name}\"\n               },\n               \"kind\": \"linux\"\n           },"
      },
      {
        "filename": "modules/learning-locker-ui/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      },
      {
        "filename": "modules/learning-locker-worker/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -127,8 +127,8 @@ resource \"azurerm_template_deployment\" \"learning-locker-worker-app-service\" {\n                   \"hostingEnvironment\": \"\"\n               },\n               \"sku\": {\n-                  \"Tier\": \"Standard\",\n-                  \"Name\": \"S1\"\n+                  \"Tier\": \"${var.webapp_sku_tier}\",\n+                  \"Name\": \"${var.webapp_sku_name}\"\n               },\n               \"kind\": \"linux\"\n           },"
      },
      {
        "filename": "modules/learning-locker-worker/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      },
      {
        "filename": "modules/learning-locker-xapi/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -91,8 +91,8 @@ resource \"azurerm_template_deployment\" \"learning-locker-xapi\" {\n         \"hostingEnvironment\": \"\"\n       },\n       \"sku\": {\n-        \"Tier\": \"Standard\",\n-        \"Name\": \"S3\"\n+        \"Tier\": \"${var.webapp_sku_tier}\",\n+        \"Name\": \"${var.webapp_sku_name}\"\n       },\n       \"kind\": \"linux\"\n     },"
      },
      {
        "filename": "modules/learning-locker-xapi/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      },
      {
        "filename": "modules/lpg-learner-record/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -91,8 +91,8 @@ resource \"azurerm_template_deployment\" \"lpg-learner-record-app-service\" {\n         \"hostingEnvironment\": \"\"\n       },\n       \"sku\": {\n-        \"Tier\": \"Standard\",\n-        \"Name\": \"S3\"\n+        \"Tier\": \"${var.webapp_sku_tier}\",\n+        \"Name\": \"${var.webapp_sku_name}\"\n       },\n       \"kind\": \"linux\"\n     },"
      },
      {
        "filename": "modules/lpg-learner-record/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      },
      {
        "filename": "modules/lpg-learning-catalogue/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -91,8 +91,8 @@ resource \"azurerm_template_deployment\" \"lpg-learning-catalogue-app-service\" {\n         \"hostingEnvironment\": \"\"\n       },\n       \"sku\": {\n-        \"Tier\": \"Standard\",\n-        \"Name\": \"S3\"\n+        \"Tier\": \"${var.webapp_sku_tier}\",\n+        \"Name\": \"${var.webapp_sku_name}\"\n       },\n       \"kind\": \"linux\"\n     },"
      },
      {
        "filename": "modules/lpg-learning-catalogue/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      },
      {
        "filename": "modules/lpg-management/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -91,8 +91,8 @@ resource \"azurerm_template_deployment\" \"lpg-management-app-service\" {\n         \"hostingEnvironment\": \"\"\n       },\n       \"sku\": {\n-        \"Tier\": \"Standard\",\n-        \"Name\": \"S1\"\n+        \"Tier\": \"${var.webapp_sku_tier}\",\n+        \"Name\": \"${var.webapp_sku_name}\"\n       },\n       \"kind\": \"linux\"\n     },"
      },
      {
        "filename": "modules/lpg-management/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"\"\n }"
      },
      {
        "filename": "modules/lpg-report-service/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -91,8 +91,8 @@ resource \"azurerm_template_deployment\" \"lpg-report-service-app-service\" {\n         \"hostingEnvironment\": \"\"\n       },\n       \"sku\": {\n-        \"Tier\": \"Standard\",\n-        \"Name\": \"S3\"\n+        \"Tier\": \"${var.webapp_sku_tier}\",\n+        \"Name\": \"${var.webapp_sku_name}\"\n       },\n       \"kind\": \"linux\"\n     },"
      },
      {
        "filename": "modules/lpg-report-service/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      },
      {
        "filename": "modules/lpg-ui/main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -91,8 +91,8 @@ resource \"azurerm_template_deployment\" \"lpg-ui-app-service\" {\n         \"hostingEnvironment\": \"\"\n       },\n       \"sku\": {\n-        \"Tier\": \"Standard\",\n-        \"Name\": \"S1\"\n+        \"Tier\": \"${var.webapp_sku_tier}\",\n+        \"Name\": \"${var.webapp_sku_name}\"\n       },\n       \"kind\": \"linux\"\n     },"
      },
      {
        "filename": "modules/lpg-ui/vars.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -14,6 +14,14 @@ variable \"rg_location\" {\n   default = \"location\"\n }\n \n+variable \"webapp_sku_tier\" {\n+  default = \"Basic\"\n+}\n+\n+variable \"webapp_sku_name\" {\n+  default = \"B1\"\n+}\n+\n variable \"docker_tag\" {\n   default = \"latest\"\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/mhemeryck/iac/commit/9ec3047d95969e8d2b729e6545672c3084ea846d",
    "files": [
      {
        "filename": "README.md",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -26,6 +26,7 @@ The projects I did deploy were\n Apply terraform setup; I do get the token from [pass]\n \n     export TF_VAR_do_token=`pass show <mytoken>`\n+    export TF_VAR_hcloud_token=`pass show <mytoken>`\n     terraform apply\n \n [pass]: https://www.passwordstore.org/\n@@ -44,6 +45,11 @@ Set up kubectl; the kubeconfig file should just be in the folder ready\n \n     export KUBECONFIG=`pwd`/kubeconfig\n \n+Merge the kubeconfig file afterwards:\n+\n+    export KUBECONFIG~=/.kube/config:`pwd`/kubeconfig\n+    kubectl config view --flatten > out\n+\n ## cvsite\n \n Add the deployment and service\n@@ -54,7 +60,7 @@ Add the deployment and service\n \n Add the cert-manager resources\n \n-    kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.15.1/cert-manager.yaml\n+    kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.16.1/cert-manager.yaml\n \n Add the cluster issuers\n "
      },
      {
        "filename": "main.tf",
        "additions": 34,
        "deletions": 3,
        "changes": 37,
        "status": "modified",
        "patch": "@@ -2,6 +2,11 @@ provider \"digitalocean\" {\n \ttoken = var.do_token\n }\n \n+provider \"hcloud\" {\n+\ttoken = var.hcloud_token\n+\tversion = \"1.20\"\n+}\n+\n resource \"digitalocean_droplet\" \"kube\" {\n \timage = \"centos-8-x64\"\n \tname = \"kube\"\n@@ -24,11 +29,37 @@ resource \"digitalocean_droplet\" \"kube\" {\n \t}\n }\n \n+resource \"hcloud_server\" \"master\" {\n+\tname = \"master\"\n+\timage = \"centos-8\"\n+\tserver_type = \"cx21\"\n+\tssh_keys = [hcloud_ssh_key.kube_key.id]\n+\n+\tprovisioner \"remote-exec\" {\n+\t\tinline = [\n+\t\t\t\"yum install -y container-selinux selinux-policy-base\",\n+\t\t\t\"rpm -i https://rpm.rancher.io/k3s-selinux-0.1.1-rc1.el7.noarch.rpm\",\n+\t\t]\n+\n+\t\tconnection {\n+\t\t\ttype = \"ssh\"\n+\t\t\tuser = \"root\"\n+\t\t\thost = hcloud_server.master.ipv4_address\n+\t\t\tprivate_key = file(\"./kube_key\")\n+\t\t}\n+\t}\n+}\n+\n resource \"digitalocean_ssh_key\" \"kube_key\" {\n \tname = \"kube_key\"\n \tpublic_key = var.kube_key\n }\n \n+resource \"hcloud_ssh_key\" \"kube_key\" {\n+\tname = \"kube_key\"\n+\tpublic_key = var.kube_key\n+}\n+\n resource \"digitalocean_firewall\" \"web\" {\n \tname = \"ssh-web-kube\"\n \n@@ -84,7 +115,7 @@ resource \"digitalocean_record\" \"landing\" {\n \tdomain = digitalocean_domain.mhemeryck.name\n \tname = \"@\"\n \ttype = \"A\"\n-\tvalue = digitalocean_droplet.kube.ipv4_address\n+\tvalue = hcloud_server.master.ipv4_address\n \tttl = 3600\n }\n \n@@ -116,14 +147,14 @@ resource \"digitalocean_record\" \"cv\" {\n \tdomain = digitalocean_domain.mhemeryck.name\n \tname = \"cv\"\n \ttype = \"A\"\n-\tvalue = digitalocean_droplet.kube.ipv4_address\n+\tvalue = hcloud_server.master.ipv4_address\n \tttl = 3600\n }\n \n resource \"digitalocean_record\" \"wekan\" {\n \tdomain = digitalocean_domain.mhemeryck.name\n \tname = \"wekan\"\n \ttype = \"A\"\n-\tvalue = digitalocean_droplet.kube.ipv4_address\n+\tvalue = hcloud_server.master.ipv4_address\n \tttl = 3600\n }"
      },
      {
        "filename": "outputs.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,3 +1,7 @@\n output \"ip\" {\n \tvalue = digitalocean_droplet.kube.ipv4_address\n }\n+\n+output \"master_ip\" {\n+\tvalue = hcloud_server.master.ipv4_address\n+}"
      },
      {
        "filename": "variables.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,5 +1,7 @@\n variable \"do_token\" {}\n \n+variable \"hcloud_token\" {}\n+\n variable \"kube_key\" {\n \tdefault = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDFiurJYlHvt1naQtySPxj6iDRii5iHgylYjDu50MxPyYNEXeaMgDzGGp61iaT2GGQp1EUJIp0PTM8xwkC5ywtUaoRALMTyWR8QNcXUOgnbH2Baorgo4po9gaI3m5i2GR0uojX/btfbMMpmEroMaOrRXa/lPMhNHyeNFFmghurhayM7DSOx5quHgiNRGkfZn27KiJrQNTP0AyvvcSfJt6kLnhyUAuN1dPUkIDKmmsDdCq4rQTPc2MWw1kPy+jIJ0fhc9EA6tZAfaYHjSrkm7nn5Y+Ti7QNN5hsNTM/Eegm/QiMWlACAfSKUbEE8hVdrHYYY/qzL9MEggugUEpHP1CCKCaxT/vAJjoRKRBpoV3gE/H3jbKkXa5tqADHAtyTpw9LiY9f2c69O0WMrcCiPoa0xgfIw31fDTeVDW1XPMxA+07c/MvxTsrpzv8KAnMONLmnzrU62+sXGBjHfM6325XfoTaDyGIzXNLODq4a5jXEm33E/u+hMOYwm+t4orIaRODU= mhemeryck\"\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ibm-cloud-architecture/iks_vpc_lab/commit/629819ce0c440760be155874cb42ab497f0304bd",
    "files": [
      {
        "filename": "03-iks_cluster/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -16,7 +16,7 @@ variable \"cluster_name\" {\n \n variable \"machine_type\" {\n   description = \"Machine type for the IKS Cluster\"\n-  default     = \"bx2.4x16\"\n+  default     = \"bx2.2x8\"\n }\n \n variable \"worker_count\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/opszero/terraform-aws-kubespot/commit/ac39d3b9140e90bfd4b9eaa01200385bf10cc15d",
    "files": [
      {
        "filename": "eks/inputs.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -24,6 +24,18 @@ variable cidr_block {\n   default = \"10.2.0.0/16\"\n }\n \n+variable \"enable_ipv6\" {\n+  default = false\n+}\n+\n+variable \"enable_nat\" {\n+  default = true\n+}\n+\n+variable \"enable_egress_only_internet_gateway\" {\n+  default = false\n+}\n+\n variable \"zones\" {\n   default = [\"us-west-2a\", \"us-west-2b\"]\n }"
      },
      {
        "filename": "eks/private_subnet.tf",
        "additions": 26,
        "deletions": 6,
        "changes": 32,
        "status": "modified",
        "patch": "@@ -15,12 +15,12 @@ resource \"aws_subnet\" \"private\" {\n }\n \n resource \"aws_eip\" \"eips\" {\n-  count = length(var.eips) == 0 ? 2 : 0\n+  count = var.enable_nat && length(var.eips) == 0 ? 2 : 0\n }\n \n \n resource \"aws_nat_gateway\" \"gw\" {\n-  count = 2\n+  count = var.enable_nat ? 2 : 0\n \n   allocation_id = length(var.eips) == 0 ? aws_eip.eips[count.index].id : var.eips[count.index].id\n   subnet_id     = aws_subnet.public[count.index].id\n@@ -30,13 +30,33 @@ resource \"aws_route_table\" \"private\" {\n   count  = 2\n   vpc_id = aws_vpc.vpc.id\n \n-  route {\n-    cidr_block     = \"0.0.0.0/0\"\n-    nat_gateway_id = aws_nat_gateway.gw[count.index].id\n+  tags = {\n+    Name = \"k8s-private-${count.index}\"\n   }\n+}\n+\n+resource \"aws_route\" \"nat\" {\n+  count = var.enable_nat ? 2 : 0\n+\n+  route_table_id         = aws_route_table.private[count.index].id\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  nat_gateway_id         = aws_nat_gateway.gw[count.index].id\n+}\n+\n+resource \"aws_route\" \"ipv6\" {\n+  count = var.enable_egress_only_internet_gateway ? 2 : 0\n+\n+  route_table_id              = aws_route_table.private[count.index].id\n+  destination_ipv6_cidr_block = \"::/0\"\n+  egress_only_gateway_id      = aws_egress_only_internet_gateway.egress[0].id\n+}\n+\n+resource \"aws_egress_only_internet_gateway\" \"egress\" {\n+  count  = var.enable_egress_only_internet_gateway ? 1 : 0\n+  vpc_id = aws_vpc.vpc.id\n \n   tags = {\n-    Name = \"k8s-private-${count.index}\"\n+    Name = \"k8s-egress-${count.index}\"\n   }\n }\n "
      },
      {
        "filename": "eks/vpc.tf",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,7 +1,9 @@\n resource \"aws_vpc\" \"vpc\" {\n   cidr_block = var.cidr_block\n \n-  enable_dns_hostnames = true\n+  enable_dns_hostnames             = true\n+  assign_generated_ipv6_cidr_block = var.enable_ipv6\n+\n \n   tags = {\n     \"Name\"                                          = var.environment_name"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/opszero/terraform-aws-kubespot/commit/decc9706133af9978ada6cf58a1a63343468e8a0",
    "files": [
      {
        "filename": "README.md",
        "additions": 15,
        "deletions": 58,
        "changes": 73,
        "status": "modified",
        "patch": "@@ -2,73 +2,30 @@\n \n <img src=\"http://assets.opszero.com.s3.amazonaws.com/images/auditkube.png\" width=\"200px\" />\n \n-Compliance Oriented Kubernetes for Amazon EKS. Setup machine images that are\n-compliance oriented for PCI/HIPAA/SOC2 and setup clusters using Terraform.\n \n-# Features\n+Compliance Oriented Kubernetes Setup for Amazon, Google and Azure.\n \n-- [x] Encrypted Root Volume\n-- [x] [OSSEC](https://ossec.github.io/): File System Monitoring for Changes.\n-- [x] Logging via LogDNA\n-- [ ] Build Public Image on All Regions\n-- [ ] 2FA Login with Duo\n-- Third Party\n-  - LogDNA\n-  - Foxpass\n-  - Duo\n-\n-# Usage\n-\n-This image is created using [Packer](https://www.packer.io/) so you will need\n-to install it. Once you are done edit [image.json](./image.json)\n-\n-Update the `region`, `aws_access_key` and `aws_secret_key` with the\n-appropriate regions.\n-\n-To actually build the image run the following:\n-\n-```\n-packer build image.json\n-```\n-\n-> To use this image with `kops` you need to pass in the AMI name listed.\n+A Kubernetes setup that tries to fulfill the needs of PCI / HIPAA / SOC2 on the\n+Public Cloud environments. This tried to use everything within the Public\n+Clouds and minimizes third party tooling.\n \n-an example .auto.tfvars file is below \n-```\n-foxpass_api_key = \"<foxpass_api_key>\"\n-cluster-name = \"<name>\"\n-ec2_keypair = \"<keypair>\"\n-```\n-in order to set up the bastion you need to download the private key \n-and have it in the repository. \n+ - [Documentation](https://www.notion.so/opszero/opsZero-AuditKube-50c42ede5a86478dbea8a061cd643256)\n \n-### CloudWatch\n+# Third-Party Addons\n \n-You can pass the environment variables `CLOUDWATCH_AWS_ACCESS_KEY_ID`\n-and `CLOUDWATCH_AWS_SECRET_ACCESS_KEY` to push metrics into AWS\n-CloudWatch. To do so make sure that the key has permissions to the\n-following resources.\n-\n-```\n-cloudwatch:PutMetricData\n-cloudwatch:GetMetricStatistics\n-cloudwatch:ListMetrics\n-ec2:DescribeTags\n-```\n-\n-# Supported Images\n-\n-- [AWS Marketplace](https://aws.amazon.com/marketplace/pp/B075CNX5F8?qid=1504900511561&sr=0-1&ref_=srh_res_product_title)\n+- [OSSEC](https://ossec.github.io/): File System Monitoring for Changes.\n+- Logging via LogDNA\n+- Third Party\n+  - LogDNA\n+  - Foxpass\n \n-# Project by opsZero\n+# License\n \n <a href=\"https://www.opszero.com\"><img src=\"http://assets.opszero.com.s3.amazonaws.com/images/opszero_11_29_2016.png\" width=\"300px\"/></a>\n \n-This project is brought to you by [opsZero](https://www.opszero.com) we\n-provide Kubernetes and AWS Lambda Migration. If you need help with your\n-Kubernetes Migration reach out.\n-\n-# License\n+This project is by [opsZero](https://www.opszero.com). We help organizations\n+migrate to Kubernetes so [reach out](https://www.opszero.com/#contact) if you\n+need help!\n \n This Source Code Form is subject to the terms of the Mozilla Public\n License, v. 2.0. If a copy of the MPL was not distributed with this"
      },
      {
        "filename": "eks/ami.tf",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -1,25 +1,28 @@\n-data \"aws_ami\" \"opszero_eks\" {\n+data \"aws_ami\" \"ubuntu\" {\n   most_recent = true\n+  owners      = [\"099720109477\"]\n \n   filter {\n-    name   = \"name\"\n-    values = [\"opszero-eks-*\"]\n+    name   = \"virtualization-type\"\n+    values = [\"hvm\"]\n   }\n \n-  owners = [\"self\"]\n+  filter {\n+    name   = \"name\"\n+    values = [\"ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*\"]\n+  }\n }\n \n data \"aws_ssm_parameter\" \"eks_ami\" {\n-    name = \"/aws/service/eks/optimized-ami/${var.cluster_version}/amazon-linux-2/recommended/image_id\"\n+  name = \"/aws/service/eks/optimized-ami/${var.cluster_version}/amazon-linux-2/recommended/image_id\"\n }\n \n data \"aws_ami\" \"foxpass_vpn\" {\n-\n   most_recent = true\n \n   filter {\n     name   = \"name\"\n     values = [\"foxpass-ipsec-vpn *\"]\n   }\n   owners = [\"679593333241\"]\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "eks/bastion.tf",
        "additions": 41,
        "deletions": 6,
        "changes": 47,
        "status": "modified",
        "patch": "@@ -1,25 +1,56 @@\n-resource \"aws_eip\" \"bastion_eip\" {\n-  count = var.bastion_enabled ? 1 : 0\n+resource \"aws_security_group\" \"bastion\" {\n+  name        = \"${var.environment_name}-bastion\"\n+  description = \"Security group for bastion\"\n+  vpc_id      = aws_vpc.vpc.id\n+\n+  egress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = \"-1\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+\n+  tags = {\n+    \"Name\"                                          = \"${var.environment_name}-bastion\"\n+  }\n+}\n \n-  instance = aws_instance.bastion.0.id\n-  vpc      = true\n+resource \"aws_security_group_rule\" \"bastion_ssh\" {\n+  cidr_blocks       = [\"0.0.0.0/0\"]\n+  description       = \"Allow workstation to communicate with the cluster API Server\"\n+  from_port         = 22\n+  protocol          = \"-1\"\n+  security_group_id = aws_security_group.bastion.id\n+  to_port           = 22\n+  type              = \"ingress\"\n }\n \n resource \"aws_instance\" \"bastion\" {\n   count = var.bastion_enabled ? 1 : 0\n \n-  ami           = data.aws_ami.opszero_eks.id\n+  ami           = data.aws_ami.ubuntu.id\n   instance_type = \"t2.micro\"\n \n   key_name                    = var.ec2_keypair\n   associate_public_ip_address = true\n   subnet_id                   = aws_subnet.public[0].id\n-  vpc_security_group_ids      = [aws_security_group.node.id]\n+  vpc_security_group_ids      = [aws_security_group.node.id, aws_security_group.bastion.id]\n \n   tags = {\n     Name = \"${var.environment_name}-bastion\"\n   }\n   user_data = <<SCRIPT\n+wget -q -O - https://updates.atomicorp.com/installers/atomic | bash\n+apt-get update -y\n+apt-get install -y ossec-hids-server ossec-hids-agent\n+\n+if [[ ${var.foxpass_install} = \"\" ]]\n+then\n+    echo \"Not Installing Foxpass\"\n+else\n+    wget https://raw.githubusercontent.com/foxpass/foxpass-setup/master/linux/amzn/2.0/foxpass_setup.py\n+    python foxpass_setup.py --base-dn {{user `foxpass_base_dn`}}  --bind-user {{user `foxpass_bind_user`}} --bind-pw {{user `foxpass_bind_pw`}} --api-key {{user `foxpass_api_key`}}; fi\"\n+end\n \n if [[ ${var.logdna_ingestion_key} == \"\"  ]]\n then\n@@ -39,4 +70,8 @@ else\n fi\n \n SCRIPT\n+\n+  root_block_device {\n+    encrypted = true\n+  }\n }"
      },
      {
        "filename": "eks/inputs.tf",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "status": "modified",
        "patch": "@@ -16,6 +16,19 @@ variable \"cluster_logging\" {\n   ]\n }\n \n+variable \"cluster_private_access\" {\n+  default = false\n+}\n+\n+variable \"cluster_public_access\" {\n+  default = true\n+}\n+\n+variable \"cluster_public_access_cidrs\" {\n+  default = [\"0.0.0.0/0\"]\n+}\n+\n+\n variable \"bastion_enabled\" {\n   default = false\n }\n@@ -60,6 +73,11 @@ variable \"repos\" {\n   default = []\n }\n \n+variable \"nodes_in_public_subnet\" {\n+  default     = false\n+  description = \"INSECURE! Only use this if you want to avoid paying for the NAT. Also set enable_nat to false\"\n+}\n+\n variable \"nodes_green_instance_type\" {\n   default = \"t3.micro\"\n }\n@@ -120,6 +138,23 @@ variable \"foxpass_vpn_psk\" {\n   default     = \"\"\n }\n \n+variable \"foxpass_install\" {\n+  default     = \"\"\n+  description = \"Make this a string to be read in the user-data\"\n+}\n+\n+variable \"foxpass_base_dn\" {\n+  default = \"\"\n+}\n+\n+variable \"foxpass_bind_user\" {\n+  default = \"\"\n+}\n+\n+variable \"foxpass_bind_pw\" {\n+  default = \"\"\n+}\n+\n variable \"logdna_ingestion_key\" {\n   type    = string\n   default = \"\""
      },
      {
        "filename": "eks/main.tf",
        "additions": 28,
        "deletions": 24,
        "changes": 52,
        "status": "modified",
        "patch": "@@ -5,6 +5,10 @@ resource \"aws_eks_cluster\" \"cluster\" {\n   version = var.cluster_version\n \n   vpc_config {\n+    endpoint_private_access = var.cluster_private_access\n+    endpoint_public_access  = var.cluster_public_access\n+    public_access_cidrs     = var.cluster_public_access_cidrs\n+\n     security_group_ids = [aws_security_group.cluster.id]\n \n     subnet_ids = flatten([\n@@ -71,44 +75,44 @@ locals {\n #!/bin/bash -xe\n set -o xtrace\n \n-# TODO: Performace\n-# sysctl -w net.core.netdev_max_backlog=\"30000\"\n-# sysctl -w net.core.rmem_max=\"16777216\"\n-# sysctl -w net.core.somaxconn=\"16096\"\n-# sysctl -w net.core.wmem_max=\"16777216\"\n-# sysctl -w net.ipv4.ip_local_port_range=\"1024 65535\"\n-# sysctl -w net.ipv4.tcp_fin_timeout=\"15\"\n-# sysctl -w net.ipv4.tcp_max_syn_backlog=\"20480\"\n-# sysctl -w net.ipv4.tcp_max_tw_buckets=\"400000\"\n-# sysctl -w net.ipv4.tcp_no_metrics_save=\"1\"\n-# sysctl -w net.ipv4.tcp_rmem=\"4096 87380 16777216\"\n-# sysctl -w net.ipv4.tcp_syn_retries=\"2\"\n-# sysctl -w net.ipv4.tcp_synack_retries=\"2\"\n-# sysctl -w net.ipv4.tcp_syncookies=\"1\"\n-# sysctl -w net.ipv4.tcp_wmem=\"4096 65536 16777216\"\n-# sysctl -w proc.file-max=\"2097152\"\n-# sysctl -w proc.min_free_kbytes=\"65536\"\n-# sysctl -w vm.min_free_kbytes=\"65536\"\n+# echo \"net.core.netdev_max_backlog=30000\" >> /etc/sysctl.conf\n+# echo \"net.core.rmem_max=16777216\" >> /etc/sysctl.conf\n+# echo \"net.core.somaxconn=16096\" >> /etc/sysctl.conf\n+# echo \"net.core.wmem_max=16777216\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.ip_local_port_range=1024 65535\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.tcp_fin_timeout=15\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.tcp_max_syn_backlog=20480\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.tcp_max_tw_buckets=400000\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.tcp_no_metrics_save=1\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.tcp_rmem=4096 87380 16777216\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.tcp_syn_retries=2\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.tcp_synack_retries=2\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.tcp_syncookies=1\" >> /etc/sysctl.conf\n+# echo \"net.ipv4.tcp_wmem=4096 65536 16777216\" >> /etc/sysctl.conf\n+# echo \"proc.file-max=2097152\" >>  /etc/sysctl.conf\n+# echo \"proc.min_free_kbytes=65536\" >>  /etc/sysctl.conf\n+# echo \"vm.min_free_kbytes=65536\" >>  /etc/sysctl.conf\n+# sysctl -p /etc/sysctl.conf\n \n /etc/eks/bootstrap.sh --apiserver-endpoint '${aws_eks_cluster.cluster.endpoint}' --b64-cluster-ca '${aws_eks_cluster.cluster.certificate_authority[0].data}' '${var.environment_name}'\n USERDATA\n \n }\n \n resource \"aws_launch_configuration\" \"nodes_blue\" {\n-  associate_public_ip_address = false\n   iam_instance_profile        = aws_iam_instance_profile.node.name\n   image_id                    = data.aws_ssm_parameter.eks_ami.value\n   instance_type               = var.nodes_blue_instance_type\n   name_prefix                 = \"${var.environment_name}-nodes-blue\"\n   security_groups             = [aws_security_group.node.id]\n   user_data_base64            = base64encode(local.node-userdata)\n+  associate_public_ip_address = var.nodes_in_public_subnet\n \n   key_name = var.ec2_keypair\n \n   root_block_device {\n     volume_size = var.nodes_blue_root_device_size\n-    encrypted = true\n+    encrypted   = true\n   }\n \n   lifecycle {\n@@ -124,7 +128,7 @@ resource \"aws_autoscaling_group\" \"nodes_blue\" {\n   name                  = \"${var.environment_name}-nodes-blue\"\n   max_instance_lifetime = var.nodes_blue_max_instance_lifetime\n \n-  vpc_zone_identifier = aws_subnet.private.*.id\n+  vpc_zone_identifier = var.nodes_in_public_subnet ? aws_subnet.public.*.id : aws_subnet.private.*.id\n \n   tags = [\n     {\n@@ -141,19 +145,19 @@ resource \"aws_autoscaling_group\" \"nodes_blue\" {\n }\n \n resource \"aws_launch_configuration\" \"nodes_green\" {\n-  associate_public_ip_address = false\n   iam_instance_profile        = aws_iam_instance_profile.node.name\n   image_id                    = data.aws_ssm_parameter.eks_ami.value\n   instance_type               = var.nodes_green_instance_type\n   name_prefix                 = \"${var.environment_name}-nodes-green\"\n   security_groups             = [aws_security_group.node.id]\n   user_data_base64            = base64encode(local.node-userdata)\n+  associate_public_ip_address = var.nodes_in_public_subnet\n \n   key_name = var.ec2_keypair\n \n   root_block_device {\n     volume_size = var.nodes_green_root_device_size\n-    encrypted = true\n+    encrypted   = true\n   }\n \n   lifecycle {\n@@ -169,7 +173,7 @@ resource \"aws_autoscaling_group\" \"nodes_green\" {\n   name                  = \"${var.environment_name}-nodes-green\"\n   max_instance_lifetime = var.nodes_green_max_instance_lifetime\n \n-  vpc_zone_identifier = aws_subnet.private.*.id\n+  vpc_zone_identifier = var.nodes_in_public_subnet ? aws_subnet.public.*.id : aws_subnet.private.*.id\n \n   tags = [\n     {"
      },
      {
        "filename": "eks/packer/ami/cloudwatch.sh",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "status": "removed",
        "patch": "@@ -1,32 +0,0 @@\n-#!/bin/bash -ex\n-\n-AWS_ACCESS_KEY_ID=$1; shift\n-AWS_SECRECT_ACCCESS_KEY=$1\n-\n-if [[ -n $AWS_ACCESS_KEY_ID ]]\n-then\n-    sudo apt-get update -y\n-    sudo apt-get install unzip libwww-perl libdatetime-perlthen\n-\n-    pushd /tmp/\n-    curl http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip -O\n-    unzip CloudWatchMonitoringScripts-1.2.1.zip\n-    rm CloudWatchMonitoringScripts-1.2.1.zip\n-\n-    mv aws-scripts-mon /etc\n-    pushd /etc/aws-scripts-mon\n-\n-    echo \"AWSAccessKeyId=${AWS_ACCESS_KEY_ID}\" > awscreds.conf\n-    echo \"AWSSecretKey=${AWS_SECRECT_ACCCESS_KEY}\" >> awscreds.conf\n-\n-    sudo crontab -l > /tmp/new_crontab\n-    sudo echo \"*/5 * * * * /etc/aws-scripts-mon/mon-put-instance-data.pl --mem-used-incl-cache-buff --mem-util --disk-space-util --disk-path=/ --from-cron\" >> /tmp/new_crontab\n-    sudo crontab /tmp/new_crontab\n-    sudo rm /tmp/new_crontab\n-\n-    popd\n-    popd\n-else\n-    echo \"Not Installing CloudWatch\"\n-fi\n-"
      },
      {
        "filename": "eks/packer/ami/logdna.sh",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "status": "removed",
        "patch": "@@ -1,16 +0,0 @@\n-#!/bin/bash\n-\n-if [[ -z $LOGDNA_AGENT_KEY  ]]\n-then\n-    echo \"Not Installing LogDNA.\"\n-else\n-    echo \"Installing LogDNA.\"\n-\n-    echo \"deb http://repo.logdna.com stable main\" | sudo tee /etc/apt/sources.list.d/logdna.list\n-    wget -O- https://s3.amazonaws.com/repo.logdna.com/logdna.gpg | sudo apt-key add -\n-    sudo apt-get update\n-    sudo apt-get install -y logdna-agent\n-    sudo logdna-agent -k $LOGDNA_AGENT_KEY\n-    sudo update-rc.d logdna-agent defaults\n-    sudo /etc/init.d/logdna-agent start\n-fi\n\\ No newline at end of file"
      },
      {
        "filename": "eks/packer/image.json",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "status": "removed",
        "patch": "@@ -1,67 +0,0 @@\n-{\n-    \"variables\": {\n-        \"profile\": \"{{env `AWS_PROFILE`}}\",\n-        \"region\": \"{{env `AWS_REGION`}}\",\n-        \"source_ami\": \"{{env `AMI`}}\",\n-        \"ossec-version\": \"3.1.0\",\n-        \"install_foxpass\": \"{{env `INSTALL_FOXPASS`}}\",\n-        \"foxpass_base_dn\": \"{{env `FOXPASS_BASE_DN`}}\",\n-        \"foxpass_bind_user\": \"{{env `FOXPASS_BIND_USER`}}\",\n-        \"foxpass_bind_pw\": \"{{env `FOXPASS_BIND_PW`}}\",\n-        \"foxpass_api_key\": \"{{env `FOXPASS_API_KEY`}}\"\n-    },\n-    \"builders\": [\n-        {\n-            \"profile\": \"{{user `profile`}}\",\n-            \"ami_name\": \"opszero-eks-{{timestamp}}\",\n-            \"instance_type\": \"c5.large\",\n-            \"region\": \"{{user `region`}}\",\n-            \"source_ami\": \"{{user `source_ami`}}\",\n-            \"ssh_username\": \"ec2-user\",\n-            \"type\": \"amazon-ebs\",\n-            \"encrypt_boot\": true\n-        }\n-    ],\n-    \"provisioners\": [\n-        {\n-            \"type\": \"file\",\n-            \"source\": \"./performance.conf\",\n-            \"destination\": \"performance.conf\"\n-        },\n-        {\n-            \"type\": \"shell\",\n-            \"execute_command\": \"sudo -S env {{ .Vars }} {{ .Path }}\",\n-            \"inline\": [\n-                \"yum -y update\",\n-                \"mv performance.conf /etc/sysctl.d/10-opszero-networking-performance.conf\",\n-                \"yum install -y bind-utils gcc make inotify-tools wget tar gzip shadow-utils zlib zlib-devel openscap-scanner\"\n-            ]\n-        },\n-        {\n-            \"type\": \"file\",\n-            \"source\": \"./preloaded-vars.conf\",\n-            \"destination\": \"/tmp/preloaded-vars.conf\"\n-        },\n-        {\n-            \"type\": \"shell\",\n-            \"execute_command\": \"sudo -S env {{ .Vars }} {{ .Path }}\",\n-            \"environment_vars\": [\n-                \"OSSEC_VERSION=3.3.0\"\n-            ],\n-            \"inline\": [\n-                \"mkdir -p /tmp/ossec\",\n-                \"wget -P /tmp/ossec  https://github.com/ossec/ossec-hids/archive/$OSSEC_VERSION.tar.gz\",\n-                \"cd /tmp/ossec && tar xf /tmp/ossec/$OSSEC_VERSION.tar.gz\",\n-                \"cp /tmp/preloaded-vars.conf /tmp/ossec/ossec-hids-$OSSEC_VERSION/etc/\",\n-                \"cd /tmp/ossec/ossec-hids-$OSSEC_VERSION && wget https://ftp.pcre.org/pub/pcre/pcre2-10.32.tar.gz && tar xzf pcre2-10.32.tar.gz -C src/external && ./install.sh\"\n-            ]\n-        },\n-        {\n-            \"type\": \"shell\",\n-            \"execute_command\": \"sudo -S env {{ .Vars }} {{ .Path }}\",\n-            \"inline\": [\n-                \"if [[ \\\"{{user `install_foxpass`}}\\\" = \\\"true\\\" ]]; then cd /tmp && wget https://raw.githubusercontent.com/foxpass/foxpass-setup/master/linux/amzn/2.0/foxpass_setup.py; python foxpass_setup.py --base-dn {{user `foxpass_base_dn`}}  --bind-user {{user `foxpass_bind_user`}} --bind-pw {{user `foxpass_bind_pw`}} --api-key {{user `foxpass_api_key`}}; fi\"\n-            ]\n-        }\n-    ]\n-}"
      },
      {
        "filename": "eks/packer/performance.conf",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "status": "removed",
        "patch": "@@ -1,17 +0,0 @@\n-net.core.netdev_max_backlog=30000\n-net.core.rmem_max=16777216\n-net.core.somaxconn=16096\n-net.core.wmem_max=16777216\n-net.ipv4.ip_local_port_range=1024 65535\n-net.ipv4.tcp_fin_timeout=15\n-net.ipv4.tcp_max_syn_backlog=20480\n-net.ipv4.tcp_max_tw_buckets=400000\n-net.ipv4.tcp_no_metrics_save=1\n-net.ipv4.tcp_rmem=4096 87380 16777216\n-net.ipv4.tcp_syn_retries=2\n-net.ipv4.tcp_synack_retries=2\n-net.ipv4.tcp_syncookies=1\n-net.ipv4.tcp_wmem=4096 65536 16777216\n-proc.file-max=2097152\n-proc.min_free_kbytes=65536\n-vm.min_free_kbytes=65536"
      },
      {
        "filename": "eks/packer/preloaded-vars.conf",
        "additions": 0,
        "deletions": 89,
        "changes": 89,
        "status": "removed",
        "patch": "@@ -1,89 +0,0 @@\n-# preloaded-vars.conf, Daniel B. Cid (dcid @ ossec.net).\n-#\n-# Use this file to customize your installations.\n-# It will make the install.sh script pre-load some\n-# specific options to make it run automatically\n-# or with less questions.\n-# PLEASE NOTE:\n-# When we use \"n\" or \"y\" in here, it should be changed\n-# to \"n\" or \"y\" in the language your are doing the\n-# installation. For example, in portuguese it would\n-# be \"s\" or \"n\".\n-# USER_LANGUAGE defines to language to be used.\n-# It can be \"en\", \"br\", \"tr\", \"it\", \"de\" or \"pl\".\n-# In case of an invalid language, it will default\n-# to English \"en\"\n-\n-USER_LANGUAGE=\"en\"    # For english\n-# If USER_NO_STOP is set to anything, the confirmation\n-# messages are not going to be asked.\n-USER_NO_STOP=\"y\"\n-# USER_INSTALL_TYPE defines the installation type to\n-# be used during install. It can only be \"local\",\n-# \"agent\" or \"server\".\n-USER_INSTALL_TYPE=\"local\"\n-#USER_INSTALL_TYPE=\"agent\"\n-#USER_INSTALL_TYPE=\"server\"\n-\n-\n-# USER_DIR defines the location to install ossec\n-USER_DIR=\"/var/ossec\"\n-# If USER_DELETE_DIR is set to \"y\", the directory\n-# to install OSSEC will be removed if present.\n-\n-#USER_DELETE_DIR=\"y\"\n-# If USER_ENABLE_ACTIVE_RESPONSE is set to \"n\",\n-# active response will be disabled.\n-\n-#USER_ENABLE_ACTIVE_RESPONSE=\"y\"\n-# If USER_ENABLE_SYSCHECK is set to \"y\",\n-# syscheck will be enabled. Set to \"n\" to\n-# disable it.\n-USER_ENABLE_SYSCHECK=\"y\"\n-\n-# If USER_ENABLE_ROOTCHECK is set to \"y\",\n-# rootcheck will be enabled. Set to \"n\" to\n-# disable it.\n-USER_ENABLE_ROOTCHECK=\"y\"\n-\n-# If USER_UPDATE is set to anything, the update\n-# installation will be done.\n-# USER_UPDATE=\"y\"\n-# If USER_UPDATE_RULES is set to anything, the\n-# rules will also be updated.\n-# USER_UPDATE_RULES=\"y\"\n-# If USER_BINARYINSTALL is set, the installation\n-# is not going to compile the code, but use the\n-# binaries from ./bin/\n-#USER_BINARYINSTALL=\"x\"\n-### Agent Installation variables. ###\n-# Specifies the IP address or hostname of the\n-# ossec server. Only used on agent installations.\n-# Choose only one, not both.\n-# USER_AGENT_SERVER_IP=\"1.2.3.4\"\n-# USER_AGENT_SERVER_NAME\n-# USER_AGENT_CONFIG_PROFILE specifies the agent's config profile\n-# name. This is used to create agent.conf configuration profiles\n-# for this particular profile name. Only used on agent installations.\n-# Can be any string. E.g. LinuxDBServer or WindowsDomainController\n-#USER_AGENT_CONFIG_PROFILE=\"generic\"\n-### Server/Local Installation variables. ###\n-# USER_ENABLE_EMAIL enables or disables email alerting.\n-USER_ENABLE_EMAIL=\"n\"\n-# USER_EMAIL_ADDRESS defines the destination e-mail of the alerts.\n-#USER_EMAIL_ADDRESS=\"dcid@test.ossec.net\"\n-# USER_EMAIL_SMTP defines the SMTP server to send the e-mails.\n-#USER_EMAIL_SMTP=\"test.ossec.net\"\n-# USER_ENABLE_SYSLOG enables or disables remote syslog.\n-USER_ENABLE_SYSLOG=\"y\"\n-# USER_ENABLE_FIREWALL_RESPONSE enables or disables\n-# the firewall response.\n-#USER_ENABLE_FIREWALL_RESPONSE=\"y\"\n-# Enable PF firewall (OpenBSD and FreeBSD only)\n-#USER_ENABLE_PF=\"y\"\n-# PF table to use (OpenBSD and FreeBSD only).\n-#USER_PF_TABLE=\"ossec_fwtable\"\n-# USER_WHITE_LIST is a list of IPs or networks\n-# that are going to be set to never be blocked.\n-#USER_WHITE_LIST=\"192.168.2.1 192.168.1.0/24\"\n-#### exit ? ###"
      },
      {
        "filename": "eks/private_subnet.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -31,7 +31,7 @@ resource \"aws_route_table\" \"private\" {\n   vpc_id = aws_vpc.vpc.id\n \n   tags = {\n-    Name = \"k8s-private-${count.index}\"\n+    Name = \"${var.environment_name}-private-${count.index}\"\n   }\n }\n \n@@ -56,7 +56,7 @@ resource \"aws_egress_only_internet_gateway\" \"egress\" {\n   vpc_id = aws_vpc.vpc.id\n \n   tags = {\n-    Name = \"k8s-egress-${count.index}\"\n+    Name = \"${var.environment_name}-egress-${count.index}\"\n   }\n }\n "
      },
      {
        "filename": "eks/public_subnet.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -28,7 +28,7 @@ resource \"aws_route_table\" \"public\" {\n     gateway_id = aws_internet_gateway.public.id\n   }\n   tags = {\n-    Name = \"k8s-public-${count.index}\"\n+    Name = \"${var.environment_name}-public-${count.index}\"\n   }\n }\n "
      },
      {
        "filename": "eks/vpc.tf",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -46,17 +46,6 @@ resource \"aws_security_group\" \"node\" {\n   }\n }\n \n-\n-resource \"aws_security_group_rule\" \"node-ssh\" {\n-  cidr_blocks       = [\"0.0.0.0/0\"]\n-  description       = \"Allow workstation to communicate with the cluster API Server\"\n-  from_port         = 22\n-  protocol          = \"-1\"\n-  security_group_id = aws_security_group.node.id\n-  to_port           = 22\n-  type              = \"ingress\"\n-}\n-\n resource \"aws_security_group_rule\" \"node-ingress-self\" {\n   description              = \"Allow node to communicate with each other\"\n   from_port                = 0"
      },
      {
        "filename": "eks/vpn.tf",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,9 +1,3 @@\n-resource \"aws_eip\" \"vpn_eip\" {\n-  instance = aws_instance.vpn[0].id\n-  vpc      = true\n-  count    = var.foxpass_api_key != \"\" ? 1 : 0\n-}\n-\n resource \"aws_security_group\" \"vpn\" {\n   name        = \"${var.environment_name}-vpn\"\n   description = \"Security group for vpn of the cluster\""
      }
    ],
    "existing_codes": [
      "networking",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/devops-ci-cd/weather_cache_infrastructure/commit/3378831be84bb1825c847a001c3c240318d991dc",
    "files": [
      {
        "filename": "azure_infrastructure/terraform/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -32,7 +32,7 @@ resource \"azurerm_mssql_database\" \"db\" {\n   collation      = \"SQL_Latin1_General_CP1_CI_AS\"\n   max_size_gb    = 1\n   sku_name       = \"GP_S_Gen5_1\"\n-  min_capacity   = 1\n+  min_capacity   = 0.5\n   zone_redundant = false\n   storage_account_type = \"LRS\"\n   auto_pause_delay_in_minutes = 60"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/devops-ci-cd/weather_cache_infrastructure/commit/28b9313a2bb11c357deeaa256950fb0acf220bc4",
    "files": [
      {
        "filename": "azure_infrastructure/terraform/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -32,7 +32,7 @@ resource \"azurerm_mssql_database\" \"db\" {\n   collation      = \"SQL_Latin1_General_CP1_CI_AS\"\n   max_size_gb    = 1\n   sku_name       = \"GP_S_Gen5_1\"\n-  min_capacity   = 1\n+  min_capacity   = 0.5\n   zone_redundant = false\n   storage_account_type = \"LRS\"\n   auto_pause_delay_in_minutes = 60"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/donkeysharp/the-dummy-tfaws/commit/5ea19806f7fcba7727e8111fc5ff4946b9ba72c8",
    "files": [
      {
        "filename": "modules/vpc/data.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+data \"aws_ami\" \"nat_vpc_ami\" {\n+  most_recent = true\n+  owners      = [\"amazon\"]\n+\n+  filter {\n+    name   = \"name\"\n+    values = [\"amzn-ami-vpc-nat*\"]\n+  }\n+}"
      },
      {
        "filename": "modules/vpc/local.tf",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+locals {\n+  tags = {\n+    \"ManagedBy\" = \"terraform-common::vpc\"\n+  }\n+}\n+\n+module \"prefix\" {\n+  source     = \"git::https://github.com/cloudposse/terraform-null-label.git?ref=0.16.0\"\n+  namespace  = var.namespace\n+  stage      = var.stage\n+  name       = var.project\n+  delimiter  = \"-\"\n+\n+  tags = {\n+    \"Project\" = var.project,\n+  }\n+}"
      },
      {
        "filename": "modules/vpc/main.tf",
        "additions": 203,
        "deletions": 0,
        "changes": 203,
        "status": "added",
        "patch": "@@ -0,0 +1,203 @@\n+resource \"aws_vpc\" \"vpc\" {\n+  cidr_block       = var.cidr_block\n+  instance_tenancy = \"default\"\n+\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-vpc\"\n+    },\n+  )\n+}\n+\n+resource \"aws_subnet\" \"public_subnet_1\" {\n+  vpc_id                  = aws_vpc.vpc.id\n+  cidr_block              = var.public_subnet_1_cidr\n+  availability_zone       = var.availability_zones[0]\n+  map_public_ip_on_launch = true\n+\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-public-subnet-1\"\n+    },\n+  )\n+}\n+\n+resource \"aws_subnet\" \"public_subnet_2\" {\n+  vpc_id                  = aws_vpc.vpc.id\n+  cidr_block              = var.public_subnet_2_cidr\n+  availability_zone       = var.availability_zones[1]\n+  map_public_ip_on_launch = true\n+\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-public-subnet-2\"\n+    },\n+  )\n+}\n+\n+resource \"aws_subnet\" \"private_subnet_1\" {\n+  vpc_id                  = aws_vpc.vpc.id\n+  cidr_block              = var.private_subnet_1_cidr\n+  availability_zone       = var.availability_zones[0]\n+  map_public_ip_on_launch = false\n+\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-private-subnet-1\"\n+    },\n+  )\n+}\n+\n+resource \"aws_subnet\" \"private_subnet_2\" {\n+  vpc_id                  = aws_vpc.vpc.id\n+  cidr_block              = var.private_subnet_2_cidr\n+  availability_zone       = var.availability_zones[0]\n+  map_public_ip_on_launch = false\n+\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-private-subnet-2\"\n+    },\n+  )\n+}\n+\n+resource \"aws_internet_gateway\" \"internetgw\" {\n+  vpc_id = aws_vpc.vpc.id\n+\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-internetgw\"\n+    },\n+  )\n+}\n+\n+resource \"aws_security_group\" \"nat_instance_sg\" {\n+  name        = \"${module.prefix.id}-nat-instance-sg\"\n+  description = \"NAT instance security group\"\n+  vpc_id      = aws_vpc.vpc.id\n+\n+  egress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = \"-1\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-nat-instance-sg\"\n+    },\n+  )\n+}\n+\n+resource \"aws_security_group_rule\" \"nat_instance_internal_access\" {\n+  type              = \"ingress\"\n+  from_port         = 0\n+  to_port           = 0\n+  protocol          = \"-1\"\n+  cidr_blocks       = [var.private_subnet_1_cidr, var.private_subnet_2_cidr]\n+  security_group_id = aws_security_group.nat_instance_sg.id\n+}\n+\n+resource \"aws_eip\" \"nat_eip\" {\n+  count = var.nat_instance_eip == \"\" ? 1 : 0\n+  vpc   = true\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-nat-eip\"\n+    },\n+  )\n+}\n+\n+resource \"aws_instance\" \"nat_instance\" {\n+  instance_type          = var.nat_instance_type\n+  ami                    = data.aws_ami.nat_vpc_ami.id\n+  key_name               = var.nat_instance_key_name\n+  vpc_security_group_ids = [aws_security_group.nat_instance_sg.id]\n+  source_dest_check      = false\n+  subnet_id              = aws_subnet.public_subnet_1.id\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-nat-instance\"\n+    },\n+  )\n+}\n+\n+resource \"aws_eip_association\" \"nat_eip_assoc\" {\n+  instance_id   = aws_instance.nat_instance.id\n+  allocation_id = var.nat_instance_eip != \"\" ? var.nat_instance_eip : aws_eip.nat_eip[0].id\n+}\n+\n+resource \"aws_route_table\" \"public_rt\" {\n+  vpc_id = aws_vpc.vpc.id\n+\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-public-rt\"\n+    },\n+  )\n+}\n+\n+resource \"aws_route_table\" \"private_rt\" {\n+  vpc_id = aws_vpc.vpc.id\n+\n+  tags = merge(\n+    module.prefix.tags,\n+    local.tags,\n+    {\n+      \"Name\" = \"${module.prefix.id}-private-rt\"\n+    },\n+  )\n+}\n+\n+resource \"aws_route_table_association\" \"public_sn1_rt\" {\n+  subnet_id      = aws_subnet.public_subnet_1.id\n+  route_table_id = aws_route_table.public_rt.id\n+}\n+\n+resource \"aws_route_table_association\" \"public_sn2_rt\" {\n+  subnet_id      = aws_subnet.public_subnet_2.id\n+  route_table_id = aws_route_table.public_rt.id\n+}\n+\n+resource \"aws_route_table_association\" \"private_sn1_rt\" {\n+  subnet_id      = aws_subnet.private_subnet_1.id\n+  route_table_id = aws_route_table.private_rt.id\n+}\n+\n+resource \"aws_route_table_association\" \"private_sn2_rt\" {\n+  subnet_id      = aws_subnet.private_subnet_2.id\n+  route_table_id = aws_route_table.private_rt.id\n+}\n+\n+resource \"aws_route\" \"public_rt_route1\" {\n+  route_table_id         = aws_route_table.public_rt.id\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  gateway_id             = aws_internet_gateway.internetgw.id\n+}\n+\n+resource \"aws_route\" \"private_rt_route1\" {\n+  route_table_id         = aws_route_table.private_rt.id\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  instance_id            = aws_instance.nat_instance.id\n+}"
      },
      {
        "filename": "modules/vpc/outputs.tf",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "status": "added",
        "patch": "@@ -0,0 +1,65 @@\n+\n+/**\n+ * Outputs for vpc\n+ */\n+output \"cidr_block\" {\n+  value = aws_vpc.vpc.cidr_block\n+}\n+\n+output \"vpc_id\" {\n+  value = aws_vpc.vpc.id\n+}\n+\n+output \"vpc_arn\" {\n+  value = aws_vpc.vpc.arn\n+}\n+\n+output \"vpc_owner\" {\n+  value = aws_vpc.vpc.owner_id\n+}\n+\n+/**\n+ * Outputs for public subnets\n+ */\n+output \"public_subnet_ids\" {\n+  value = [\n+    aws_subnet.public_subnet_1.id,\n+    aws_subnet.public_subnet_2.id\n+  ]\n+}\n+\n+/**\n+ * Outputs for private subnets\n+ */\n+output \"private_subnet_ids\" {\n+  value = [\n+    aws_subnet.private_subnet_1.id,\n+    aws_subnet.private_subnet_2.id\n+  ]\n+}\n+\n+/**\n+ * Outputs for internet gateway\n+ */\n+output \"internetgw_id\"  {\n+  value = aws_internet_gateway.internetgw.id\n+}\n+\n+output \"internetgw_arn\"  {\n+  value = aws_internet_gateway.internetgw.arn\n+}\n+\n+/**\n+ * Outputs for NAT instance\n+ */\n+output \"nat_instance_sg_id\"  {\n+  value = aws_security_group.nat_instance_sg.id\n+}\n+\n+output \"nat_instance_id\"  {\n+  value = aws_instance.nat_instance.id\n+}\n+\n+output \"nat_instance_public_ip\"  {\n+  value = var.nat_instance_eip == \"\" ? aws_eip.nat_eip[0].public_ip : \"\"\n+}"
      },
      {
        "filename": "modules/vpc/variables.tf",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "status": "added",
        "patch": "@@ -0,0 +1,61 @@\n+variable \"namespace\" {\n+  type = string\n+  description = \"Namespace for the prefix\"\n+}\n+\n+variable \"stage\" {\n+  type = string\n+  description = \"Stage for the prefix\"\n+}\n+\n+variable \"project\" {\n+  type = string\n+  description = \"Project name for tags and prefix\"\n+}\n+\n+variable \"cidr_block\" {\n+  type = string\n+  description = \"CIDR block for the VPC\"\n+}\n+\n+variable \"availability_zones\" {\n+  type = list(string)\n+  description = \"List of availability zones\"\n+}\n+\n+variable \"public_subnet_1_cidr\" {\n+  type = string\n+  description = \"Public subnet 1 CIDR block\"\n+}\n+\n+variable \"public_subnet_2_cidr\" {\n+  type = string\n+  description = \"Public subnet 1 CIDR block\"\n+}\n+\n+variable \"private_subnet_1_cidr\" {\n+  type = string\n+  description = \"Private subnet 1 CIDR block\"\n+}\n+\n+variable \"private_subnet_2_cidr\" {\n+  type = string\n+  description = \"Private subnet 1 CIDR block\"\n+}\n+\n+variable \"nat_instance_eip\" {\n+  type = string\n+  default = \"\"\n+  description = \"NAT Instance elastic ip\"\n+}\n+\n+variable \"nat_instance_type\" {\n+  type = string\n+  description = \"NAT Instance type\"\n+}\n+\n+variable \"nat_instance_key_name\" {\n+  type = string\n+  description = \"Key pair name associated to the NAT instance\"\n+}\n+"
      },
      {
        "filename": "modules/vpc/versions.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+terraform {\n+  required_version = \">= 0.12.6, < 0.14\"\n+\n+  required_providers {\n+    aws = \"~> 2.57\"\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Quansight/qhub/commit/265d6c5b8a1e01032402d4b2c94d12d5365e5e6e",
    "files": [
      {
        "filename": ".cirun.yml",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "added",
        "patch": "@@ -0,0 +1,15 @@\n+# Self-Hosted Github Action Runners on DigitalOcean via Cirun.io\n+# Reference: https://docs.cirun.io/reference/yaml.html\n+runners:\n+  - name: run-k8s-tests\n+    # Cloud Provider: DigitalOcean\n+    cloud: digitalocean\n+    # Cheapest VM on DigitalOcean\n+    instance_type: s-4vcpu-8gb\n+    # Ubuntu-20.4  image\"\n+    machine_image: docker-20-04\n+    region: nyc1\n+    # Path of the relevant workflow file\n+    workflow: .github/workflows/kubernetes_test.yaml\n+    # Number of runners to provision on every trigger on Actions job\n+    count: 1"
      },
      {
        "filename": ".github/workflows/kubernetes_test.yaml",
        "additions": 150,
        "deletions": 0,
        "changes": 150,
        "status": "added",
        "patch": "@@ -0,0 +1,150 @@\n+name: \"Kubernetes Tests\"\n+\n+on:\n+  pull_request: # Workflow only runs for PR against main anyway\n+  push:\n+    branches:\n+      - '**'\n+    tags:\n+      - 'v*'\n+    paths-ignore:\n+      - \"docs/**\"\n+      - \"*.md\"\n+jobs:\n+  test-kubernetes:\n+    name: \"Kubernetes Tests\"\n+    runs-on: self-hosted\n+    defaults:\n+      run:\n+        shell: bash -l {0}\n+    steps:\n+      - name: 'QHUB_GH_BRANCH set for PR'\n+        if: ${{ github.event_name == 'pull_request' }}\n+        run: |\n+          echo \"QHUB_GH_BRANCH=${GITHUB_HEAD_REF}\" >> $GITHUB_ENV\n+          echo \"GITHUB_BASE_REF: ${GITHUB_BASE_REF}\"\n+          echo \"GITHUB_HEAD_REF: ${GITHUB_HEAD_REF}\"\n+          echo \"GITHUB_REF: ${GITHUB_REF}\"\n+      - name: 'QHUB_GH_BRANCH set for a branch (not a tag)'\n+        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/') }}\n+        # e.g. QHUB_GH_BRANCH=\"main\"\n+        run: |\n+          echo \"QHUB_GH_BRANCH=${GITHUB_REF:11}\" >> $GITHUB_ENV\n+\n+      - name: 'Checkout Infrastructure'\n+        uses: actions/checkout@main\n+      - name: Set up Python\n+        uses: conda-incubator/setup-miniconda@v2\n+        env:\n+          CONDA: /home/runnerx/miniconda3\n+        with:\n+          python-version: 3.8\n+          miniconda-version: \"latest\"\n+      - name: Install QHub\n+        run: |\n+          conda install -c anaconda pip\n+          pip install .[dev]\n+\n+      - name: Download and Install Minikube and Kubectl\n+        run: |\n+          mkdir -p bin\n+          pushd bin\n+          curl -L https://github.com/kubernetes/minikube/releases/download/v1.22.0/minikube-linux-amd64 -o minikube\n+          chmod +x minikube\n+\n+          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kubectl\n+          chmod +x kubectl\n+\n+          echo \"$PWD\" >> $GITHUB_PATH\n+          popd\n+      - name: Start Minikube\n+        run: |\n+          minikube start --kubernetes-version=1.19.4 --driver=docker --cpus 2 --memory 6500 --wait=all\n+      - name: Versions\n+        run: |\n+          minikube version\n+          kubectl version\n+      - name: Add nfs client to kubernetes docker node\n+        run: |\n+          minikube ssh \"sudo apt update; sudo apt install nfs-common -y\"\n+      - name: Get routing table for docker pods\n+        run: |\n+          ip route\n+      - name: Configure LoadBalancer IPs\n+        run: |\n+          python tests/scripts/minikube-loadbalancer-ip.py\n+      - name: Enable Minikube metallb\n+        run: |\n+          minikube addons enable metallb\n+      - name: Basic kubectl checks before deployment\n+        run: |\n+          kubectl get all,cm,secret,ing -A\n+      - name: Initialize QHub Cloud\n+        run: |\n+          mkdir -p local-deployment\n+          cd local-deployment\n+          qhub init local --project=thisisatest  --domain github-actions.qhub.dev --auth-provider=password\n+\n+          # Need smaller profiles on Minikube\n+          sed -i -E 's/(cpu_guarantee):\\s+[0-9\\.]+/\\1: 0.25/g' \"qhub-config.yaml\"\n+          sed -i -E 's/(mem_guarantee):\\s+[A-Za-z0-9\\.]+/\\1: 0.25G/g' \"qhub-config.yaml\"\n+\n+          cat qhub-config.yaml\n+      - name: Deploy QHub Cloud\n+        run: |\n+          cd local-deployment\n+          qhub deploy --config qhub-config.yaml --disable-prompt\n+      - name: Basic kubectl checks after deployment\n+        run: |\n+          kubectl get all,cm,secret,ing -A\n+      - name: Check github-actions.qhub.dev resolves\n+        run: |\n+          nslookup github-actions.qhub.dev\n+      - name: Curl jupyterhub login page\n+        run: |\n+          curl -k https://github-actions.qhub.dev/hub/home -i\n+\n+      ### CYPRESS TESTS\n+      - name: Setup Node\n+        uses: actions/setup-node@v2\n+        with:\n+          node-version: '14'\n+      - name: npm version\n+        run: |\n+          npm --version\n+      - name: Install Cypress dependencies\n+        run: |\n+          sudo apt-get -y update\n+          sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb\n+\n+      - name: Read example-user password\n+        run: python -c \"import tempfile, os; print('CYPRESS_EXAMPLE_USER_PASSWORD='+open(os.path.join(tempfile.gettempdir(), 'QHUB_DEFAULT_PASSWORD')).read())\" >> $GITHUB_ENV\n+\n+      - name: Get qhub-config.yaml full path\n+        run: echo \"QHUB_CONFIG_PATH=`realpath ./local-deployment/qhub-config.yaml`\" >> $GITHUB_ENV\n+\n+      - name: Cypress run\n+        uses: cypress-io/github-action@v2\n+        env:\n+          CYPRESS_BASE_URL: https://github-actions.qhub.dev/\n+        with:\n+          working-directory: tests_e2e\n+\n+      - name: Save Cypress screenshots and videos\n+        if: always()\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: e2e-cypress\n+          path: |\n+            ./tests_e2e/cypress/screenshots/\n+            ./tests_e2e/cypress/videos/\n+\n+      ### CLEANUP AFTER CYPRESS\n+\n+      - name: Cleanup qhub deployment\n+        run: |\n+          cd local-deployment\n+          qhub destroy --config qhub-config.yaml\n+      - name: Basic kubectl checks after cleanup\n+        run: |\n+          kubectl get all,cm,secret,ing -A"
      },
      {
        "filename": ".github/workflows/test.yaml",
        "additions": 0,
        "deletions": 120,
        "changes": 120,
        "status": "modified",
        "patch": "@@ -89,123 +89,3 @@ jobs:\n         with:\n           name: \"qhub-${{ matrix.provider }}-artifact\"\n           path: \"qhub-${{ matrix.provider }}-deployment\"\n-\n-  test-kubernetes:\n-    name: \"Kubernetes Tests\"\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-      - name: 'QHUB_GH_BRANCH set for PR'\n-        if: ${{ github.event_name == 'pull_request' }}\n-        run: |\n-          echo \"QHUB_GH_BRANCH=${GITHUB_HEAD_REF}\" >> $GITHUB_ENV\n-          echo \"GITHUB_BASE_REF: ${GITHUB_BASE_REF}\"\n-          echo \"GITHUB_HEAD_REF: ${GITHUB_HEAD_REF}\"\n-          echo \"GITHUB_REF: ${GITHUB_REF}\"\n-      - name: 'QHUB_GH_BRANCH set for a branch (not a tag)'\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/') }}\n-        # e.g. QHUB_GH_BRANCH=\"main\"\n-        run: |\n-          echo \"QHUB_GH_BRANCH=${GITHUB_REF:11}\" >> $GITHUB_ENV\n-\n-      - name: 'Checkout Infrastructure'\n-        uses: actions/checkout@main\n-      - name: Set up Python\n-        uses: actions/setup-python@v1\n-        with:\n-          python-version: 3.8\n-      - name: Install QHub\n-        run: |\n-          pip install .[dev]\n-      - name: Download and Install Minikube and Kubectl\n-        run: |\n-          mkdir -p bin\n-          pushd bin\n-          curl -L https://github.com/kubernetes/minikube/releases/download/v1.22.0/minikube-linux-amd64 -o minikube\n-          chmod +x minikube\n-\n-          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kubectl\n-          chmod +x kubectl\n-\n-          echo \"$PWD\" >> $GITHUB_PATH\n-          popd\n-      - name: Start Minikube\n-        run: |\n-          minikube start --kubernetes-version=1.19.4 --driver=docker --cpus 2 --memory 4096 --wait=all\n-      - name: Versions\n-        run: |\n-          minikube version\n-          kubectl version\n-      - name: Add nfs client to kubernetes docker node\n-        run: |\n-          minikube ssh \"sudo apt update; sudo apt install nfs-common -y\"\n-      - name: Get routing table for docker pods\n-        run: |\n-          ip route\n-      - name: Configure LoadBalancer IPs\n-        run: |\n-          python tests/scripts/minikube-loadbalancer-ip.py\n-      - name: Enable Minikube metallb\n-        run: |\n-          minikube addons enable metallb\n-      - name: Basic kubectl checks before deployment\n-        run: |\n-          kubectl get all,cm,secret,ing -A\n-      - name: Initialize QHub Cloud\n-        run: |\n-          mkdir -p local-deployment\n-          cd local-deployment\n-          qhub init local --project=thisisatest  --domain github-actions.qhub.dev --auth-provider=password\n-\n-          # Need smaller profiles on Minikube\n-          sed -i -E 's/(cpu_guarantee):\\s+[0-9\\.]+/\\1: 0.25/g' \"qhub-config.yaml\"\n-          sed -i -E 's/(mem_guarantee):\\s+[A-Za-z0-9\\.]+/\\1: 0.25G/g' \"qhub-config.yaml\"\n-\n-          cat qhub-config.yaml\n-      - name: Deploy QHub Cloud\n-        run: |\n-          cd local-deployment\n-          qhub deploy --config qhub-config.yaml --disable-prompt\n-      - name: Basic kubectl checks after deployment\n-        run: |\n-          kubectl get all,cm,secret,ing -A\n-      - name: Check github-actions.qhub.dev resolves\n-        run: |\n-          nslookup github-actions.qhub.dev\n-      - name: Curl jupyterhub login page\n-        run: |\n-          curl -k https://github-actions.qhub.dev/hub/home -i\n-\n-      ### CYPRESS TESTS\n-\n-      - name: Read example-user password\n-        run: python -c \"import tempfile, os; print('CYPRESS_EXAMPLE_USER_PASSWORD='+open(os.path.join(tempfile.gettempdir(), 'QHUB_DEFAULT_PASSWORD')).read())\" >> $GITHUB_ENV\n-\n-      - name: Get qhub-config.yaml full path\n-        run: echo \"QHUB_CONFIG_PATH=`realpath ./local-deployment/qhub-config.yaml`\" >> $GITHUB_ENV\n-\n-      - name: Cypress run\n-        uses: cypress-io/github-action@v2\n-        env:\n-          CYPRESS_BASE_URL: https://github-actions.qhub.dev/\n-        with:\n-          working-directory: tests_e2e\n-\n-      - name: Save Cypress screenshots and videos\n-        if: always()\n-        uses: actions/upload-artifact@v2\n-        with:\n-          name: e2e-cypress\n-          path: |\n-            ./tests_e2e/cypress/screenshots/\n-            ./tests_e2e/cypress/videos/\n-\n-      ### CLEANUP AFTER CYPRESS\n-\n-      - name: Cleanup qhub deployment\n-        run: |\n-          cd local-deployment\n-          qhub destroy --config qhub-config.yaml\n-      - name: Basic kubectl checks after cleanup\n-        run: |\n-          kubectl get all,cm,secret,ing -A"
      },
      {
        "filename": "RELEASE.md",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -12,6 +12,8 @@\n ## Upcoming Release\n \n ### Feature changes and enhancements\n+ \n+ - Added basic cluster monitoring capability via Grafana/Prometheus integration\n \n ### Bug fixes\n "
      },
      {
        "filename": "docs/index.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -63,6 +63,7 @@ source/admin_guide/upgrade.md\n source/admin_guide/gpu.md\n source/admin_guide/preemptible-spot-instances.md\n source/admin_guide/system_maintenance.md\n+source/admin_guide/monitoring.md\n source/admin_guide/clearml.md\n source/admin_guide/prefect.md\n source/admin_guide/faq.md"
      },
      {
        "filename": "docs/source/admin_guide/monitoring.md",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+# Monitoring\n+\n+Cluster monitoring via Grafana/Prometheus comes built in with QHub, and is enabled by default.\n+\n+## Accessing the Grafana Dashboards\n+\n+The monitoring dashboards can be accessed via Grafana at: `your-qhub-domain.com/monitoring`.  The initial login credentials are username: `admin` and password: `prom-operator`, but users should change the admin password immediately after the first log in. \n+\n+## Disabling Cluster Monitoring\n+\n+1. To disable cluster monitoring on QHub deployments, simply disable the feature flag within your `qhub-config.yaml` file. For example:\n+\n+```yaml\n+monitoring:\n+  enabled: false\n+```"
      },
      {
        "filename": "docs/source/introduction.md",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -43,6 +43,8 @@ with.\n \n + [**prefect**](https://www.prefect.io/) workflow management\n + [**clearml**](https://clear.ml/) machine learning platform\n++ [**prometheus**](https://prometheus.io/) cluster monitoring\n++ [**grafana**](https://grafana.com/) cluster monitoring visualizations\n \n # Why use QHub?\n "
      },
      {
        "filename": "qhub/initialize.py",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -57,6 +57,9 @@\n             \"h2_color\": \"#652e8e\",\n         }\n     },\n+    \"monitoring\": {\n+        \"enabled\": True,\n+    },\n     \"cdsdashboards\": {\n         \"enabled\": True,\n         \"cds_hide_user_named_servers\": True,"
      },
      {
        "filename": "qhub/schema.py",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -56,6 +56,13 @@ class CICD(Base):\n     after_script: typing.Optional[typing.List[str]]\n \n \n+# ============== Monitoring =============\n+\n+\n+class Monitoring(Base):\n+    enabled: bool\n+\n+\n # ============== ClearML =============\n \n \n@@ -362,6 +369,7 @@ class Main(Base):\n     theme: Theme\n     profiles: Profiles\n     environments: typing.Dict[str, CondaEnvironment]\n+    monitoring: typing.Optional[Monitoring]\n     clearml: typing.Optional[ClearML]\n \n "
      },
      {
        "filename": "qhub/template/cookiecutter.json",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -13,6 +13,9 @@\n     \"certificate\": {\n       \"type\": \"self-signed\"\n     },\n+    \"monitoring\": {\n+        \"enabled\": null\n+    },\n     \"clearml\": {\n         \"enabled\": null\n     },"
      },
      {
        "filename": "qhub/template/{{ cookiecutter.repo_directory }}/infrastructure/kubernetes.tf",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -238,6 +238,19 @@ module \"prefect\" {\n }\n {% endif -%}\n \n+{% if cookiecutter.monitoring.enabled -%}\n+module \"monitoring\" {\n+  source       = \"./modules/kubernetes/services/monitoring\"\n+  namespace    = var.environment\n+  external-url = var.endpoint\n+  tls          = module.qhub.tls\n+  depends_on = [\n+    module.qhub\n+  ]\n+}\n+{% endif -%}\n+\n+\n {% if cookiecutter.clearml.enabled -%}\n module \"clearml\" {\n   source       = \"./modules/kubernetes/services/clearml\""
      },
      {
        "filename": "qhub/template/{{ cookiecutter.repo_directory }}/infrastructure/modules/kubernetes/ingress/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -172,7 +172,7 @@ resource \"kubernetes_deployment\" \"main\" {\n             \"--api.dashboard=true\",\n             \"--ping=true\",\n             # Start the Traefik Kubernetes Ingress Controller\n-            \"--providers.kubernetesingress\",\n+            \"--providers.kubernetesingress=true\",\n             \"--providers.kubernetesingress.namespaces=${var.namespace}\",\n             \"--providers.kubernetesingress.ingressclass=traefik\",\n             # Start the Traefik Kubernetes CRD Controller Provider"
      },
      {
        "filename": "qhub/template/{{ cookiecutter.repo_directory }}/infrastructure/modules/kubernetes/monitoring/main.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "removed",
        "patch": null
      },
      {
        "filename": "qhub/template/{{ cookiecutter.repo_directory }}/infrastructure/modules/kubernetes/services/monitoring/main.tf",
        "additions": 80,
        "deletions": 0,
        "changes": 80,
        "status": "added",
        "patch": "@@ -0,0 +1,80 @@\n+resource \"helm_release\" \"kube-prometheus-stack-helm-deployment\" {\n+  name       = \"kube-prometheus-stack\"\n+  namespace  = var.namespace\n+  repository = \"https://prometheus-community.github.io/helm-charts\"\n+  chart      = \"kube-prometheus-stack\"\n+  version    = \"16.12.0\"\n+\n+  set {\n+    name  = \"grafana.grafana\\\\.ini.server.domain\"\n+    value = var.external-url\n+  }\n+\n+  set {\n+    name  = \"grafana.grafana\\\\.ini.server.root_url\"\n+    value = \"%(protocol)s://%(domain)s/monitoring\"\n+  }\n+\n+  set {\n+    name  = \"grafana.grafana\\\\.ini.server.server_from_sub_path\"\n+    value = \"true\"\n+  }\n+\n+}\n+\n+resource \"kubernetes_manifest\" \"grafana-strip-prefix-middleware\" {\n+  provider = kubernetes-alpha\n+\n+  manifest = {\n+    apiVersion = \"traefik.containo.us/v1alpha1\"\n+    kind       = \"Middleware\"\n+    metadata = {\n+      name      = \"grafana-middleware\"\n+      namespace = var.namespace\n+    }\n+    spec = {\n+      stripPrefixRegex = {\n+        regex = [\n+          \"/monitoring\"\n+        ]\n+      }\n+    }\n+  }\n+}\n+\n+\n+resource \"kubernetes_manifest\" \"grafana-ingress-route\" {\n+  provider = kubernetes-alpha\n+\n+  manifest = {\n+    apiVersion = \"traefik.containo.us/v1alpha1\"\n+    kind       = \"IngressRoute\"\n+    metadata = {\n+      name      = \"grafana-ingress-route\"\n+      namespace = var.namespace\n+    }\n+    spec = {\n+      entryPoints = [\"websecure\"]\n+      routes = [\n+        {\n+          kind  = \"Rule\"\n+          match = \"Host(`${var.external-url}`) && PathPrefix(`/monitoring`)\"\n+          middlewares = [\n+            {\n+              name      = \"grafana-middleware\"\n+              namespace = var.namespace\n+            }\n+          ]\n+          services = [\n+            {\n+              name      = \"kube-prometheus-stack-grafana\"\n+              port      = 80\n+              namespace = var.namespace\n+            }\n+          ]\n+        }\n+      ]\n+      tls = var.tls\n+    }\n+  }\n+}"
      },
      {
        "filename": "qhub/template/{{ cookiecutter.repo_directory }}/infrastructure/modules/kubernetes/services/monitoring/variables.tf",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "status": "added",
        "patch": "@@ -0,0 +1,14 @@\n+variable \"namespace\" {\n+  description = \"deploy monitoring services on this namespace\"\n+  type        = string\n+  default     = \"dev\"\n+}\n+\n+variable \"external-url\" {\n+  description = \"External url that jupyterhub cluster is accessible\"\n+  type        = string\n+}\n+\n+variable \"tls\" {\n+  description = \"TLS configuration\"\n+}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/davidski/tf-public_subnet/commit/ad841964564c461513643bb13531dc07111efc7d",
    "files": [
      {
        "filename": "public_subnet.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n resource \"aws_subnet\" \"s1\" {\n   vpc_id = \"${var.myvpc_id}\"\n-  availability_zone = \"us-west-2c\"\n+  availability_zone = \"us-west-2a\"\n   cidr_block = \"172.31.0.0/20\"\n }\n "
      }
    ],
    "existing_codes": [
      "area",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jshcmpbll/Cloud-Mac-KVM/commit/361885d22c0304cb44683f9b005f82ca5e269841",
    "files": [
      {
        "filename": "GCP/terraform/instance.tf",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -7,6 +7,8 @@ resource \"google_compute_instance\" \"kvm-host\" {\n   boot_disk {\n     initialize_params {\n       image = \"${element(google_compute_image.image.*.self_link, count.index)}\"\n+      type  = \"pd-ssd\"\n+      size  = \"${var.disk_size}\"\n     }\n   }\n \n@@ -37,10 +39,10 @@ resource \"google_compute_image\" \"image\" {\n resource \"google_compute_disk\" \"disk\" {\n   count = \"${var.instance_count}\"\n   name  = \"${var.name}-disk-${count.index + 1}\"\n-  type  = \"pd-ssd\"\n+  type  = \"pd-standard\"\n   zone  = \"${var.zone}\"\n   image = \"${var.source_image}\"\n-  size  = \"${var.disk_size}\"\n+  size  = \"10\"\n }\n \n data \"template_file\" \"script\" {"
      },
      {
        "filename": "GCP/terraform/variables.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -29,7 +29,7 @@ variable \"zone\" {\n }\n \n variable \"machine_type\" {\n-  default     = \"n1-standard-2\"\n+  default     = \"n1-standard-4\"\n   description = \"Other options listed in size are, n1-standard-2, n1-stanard-(number of cpu cores [4,8,16,32])\"\n }\n \n@@ -39,7 +39,7 @@ variable \"source_image\" {\n \n variable \"disk_size\" {\n   description = \"The size of the disk uses for the KVM-host instance. Must be larger than 40GB for macOS VM image\"\n-  default     = \"40\"\n+  default     = \"60\"\n }\n \n variable \"county_code\" {\n@@ -69,5 +69,5 @@ variable \"users\" {\n \n variable \"image_size\" {\n   description = \"The size of the image that QEMU-IMG will create inside the instance\"\n-  default     = \"128G\"\n+  default     = \"40G\"\n }"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/goodpen/gke-v.1.0/commit/45053a0862bf97f0525862c411fa4da5d59ac397",
    "files": [
      {
        "filename": "terraform/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -36,7 +36,7 @@ variable \"node_locations\" {\n \n variable \"kubernetes_instance_type\" {\n   type        = string\n-  default     = \"n1-standard-2\"\n+  default     = \"e2-standard-2\"\n   description = \"Instance type to use for the nodes.\"\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/RavenProject/seed-node-fallback-domain-config/commit/5ba235b0c935de75c2cb2f57686bc246816a7f74",
    "files": [
      {
        "filename": "main.tf",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -40,9 +40,7 @@ locals {\n     \"35.163.74.172\",\n     \"35.163.239.64\",\n     \"35.166.222.70\",\n-    \"35.184.113.47\",\n     \"35.194.13.205\",\n-    \"35.210.244.221\",\n     \"35.221.251.106\",\n     \"35.234.7.240\",\n     \"39.105.17.199\","
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Pavel-Hrabec/Azure-Terraform-Budget/commit/4759aa86a84ee099d6ce3f3987520a5b6cd1ffd3",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -28,4 +28,4 @@ override.tf.json\n # Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan\n # example: *tfplan*\n \n-azure.conf\n\\ No newline at end of file\n+azure.hcl\n\\ No newline at end of file"
      },
      {
        "filename": ".terraform.lock.hcl",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/azurerm\" {\n+  version     = \"3.0.0\"\n+  constraints = \"3.0.0\"\n+  hashes = [\n+    \"h1:zwMmdRiMqMZNcnb98s2Uu5vKgIIHCYKJc7qpeMeUjPw=\",\n+    \"zh:23a039a606cc194594f7c15cd8deef15c5183e11a40e96adee2f7317dbfa18aa\",\n+    \"zh:414890618efc6caccf60b81fcce18a7e69a6d81599678d24f538d53726f49c57\",\n+    \"zh:7c9a5d3c416766c6f624e186ee2f5b216dd5a9ffef40bfea42ceccf2b217e0d3\",\n+    \"zh:82bbeaa6e10d0834d05c2ea55182ce6e147299b1257b445327ff6ff9dfdff3e7\",\n+    \"zh:96d5f7737a3d10cc25815f1a220ef8ffe3641ee3229c7738804dc8cff71663fa\",\n+    \"zh:ac359915e11a4fa234476cca5e701631ba563d8192dd3f1d31b51674411a0394\",\n+    \"zh:bdf07291bb4f41ba304f12b298a066ac70925b3749c01aa90276727cfb0b2662\",\n+    \"zh:cf7b4f9c313155b7d5c98e0cbbcfec40c789fccf431875b4db630e9e58f3ae6c\",\n+    \"zh:d1fd0d3a1017427ab6f4fadb3310b4b488ab020a541778653c03c51e5e1df809\",\n+    \"zh:db946fc8cfc15abe18314dc3dbcbb630243dc34c29f81a728e1397d797dca6a0\",\n+    \"zh:e07f73c2745b56043d8b779f2987eb1a5f812645db6ac8fa7878ad23f6a79459\",\n+  ]\n+}"
      },
      {
        "filename": "main.tf",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "status": "added",
        "patch": "@@ -0,0 +1,56 @@\n+terraform {\n+  backend \"azure\" {\n+  }\n+  required_providers {\n+    azurerm = {\n+      source  = \"hashicorp/azurerm\"\n+      version = \"=3.0.0\"\n+    }\n+  }\n+}\n+\n+# Configure the Microsoft Azure Provider\n+provider \"azurerm\" {\n+  features {}\n+}\n+\n+resource \"azurerm_resource_group\" \"rg_budget\" {\n+  name     = var.resource_group_name\n+  location = var.location\n+}\n+\n+resource \"azurerm_monitor_action_group\" \"monitor_budget\" {\n+  name                = \"Monitor-Budget\"\n+  resource_group_name = azurerm_resource_group.rg_budget.name\n+  short_name          = \"Budget\"\n+}\n+\n+resource \"azurerm_consumption_budget_resource_group\" \"budget\" {\n+  name              = \"budget\"\n+  resource_group_id = azurerm_resource_group.rg_budget.id\n+\n+  amount     = var.budget_amount\n+  time_grain = \"Monthly\"\n+\n+  time_period {\n+    start_date = \"2022-04-01T00:00:00Z\"\n+    end_date   = \"2024-04-01T00:00:00Z\"\n+  }\n+\n+  notification {\n+    enabled        = true\n+    threshold      = 1.0\n+    operator       = \"EqualTo\"\n+    threshold_type = \"Forecasted\"\n+\n+    contact_emails = [\n+      var.contact_email,\n+    ]\n+\n+    contact_groups = [\n+      azurerm_monitor_action_group.monitor_budget.id,\n+    ]\n+\n+  }\n+\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform.tfvars",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+location = \"West Europe\"\n+resource_group_name = \"Azure-Budget\"\n+contact_email = \"hrabecpavel@gmail.com\"\n+budget_amount = \"5\"\n\\ No newline at end of file"
      },
      {
        "filename": "variables.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "added",
        "patch": "@@ -0,0 +1,18 @@\n+variable \"location\" {\n+    type = string\n+    description = \"Variable for our resource group\"\n+}\n+\n+variable \"resource_group_name\" {\n+    type = string\n+    description = \"name of resource group\"\n+}\n+\n+variable \"contact_email\" {\n+    type = string\n+    description = \"location of your resource group\"\n+}\n+\n+variable \"budget_amount\" {\n+    type = string\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "awareness",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/rshurts/gke-cd-with-spinnaker/commit/3bc712aba0c797053b5cdc113e3e46afb6cff8a5",
    "files": [
      {
        "filename": "terraform/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -10,7 +10,7 @@ resource \"google_container_cluster\" \"primary\" {\n   initial_node_count = 3\n \n   node_config {\n-    machine_type = \"n1-standard-2\"\n+    machine_type = \"n1-standard-1\"\n   }\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/telia-oss/terraform-aws-terraform-init/commit/e8c7b2eb22d08ddd1a1bb375cb6efa4165c9098f",
    "files": [
      {
        "filename": "main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -19,8 +19,9 @@ resource \"aws_s3_bucket\" \"state\" {\n \n resource \"aws_dynamodb_table\" \"lock\" {\n   name           = \"${var.name_prefix}-terraform-state\"\n-  read_capacity  = 20\n-  write_capacity = 20\n+\n+  billing_mode   = \"PAY_PER_REQUEST\"\n+\n   hash_key       = \"LockID\"\n \n   attribute {"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kmishra9/PL2-AWS-Setup/commit/0d7b5b0f6f92ff6cfde1f17ad96d1b1459a0957a",
    "files": [
      {
        "filename": "example.tfvars.example",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ workspaces_private_key_path = \"~/.ssh/id_rsa\"\n num_researchers             = \"2\"\n num_admins                  = \"2\"\n \n-instance_type               = \"t2.micro\"\n+instance_type               = \"t3.micro\"\n root_volume_size            = \"150\"\n EBS_volume_size             = \"25\"\n data_folder_name            = \"kaiserData\""
      },
      {
        "filename": "variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -48,7 +48,7 @@ variable \"num_admins\" {\n \n variable \"instance_type\" {\n   type = \"string\"\n-  description = \"The type of instance to create - see the EC2 Instance Pricing guide: https://aws.amazon.com/ec2/pricing/on-demand/. Example: 't2.micro'\"\n+  description = \"The type of instance to create - see the EC2 Instance Pricing guide: https://aws.amazon.com/ec2/pricing/on-demand/ and/or consult with BRC to determine the best instance for your use case. Example: 't3.micro'\"\n }\n \n variable \"root_volume_size\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kaz/kiritan.com/commit/1cd96c7f71e56629ffa07c38e12c4da19fcfc5f7",
    "files": [
      {
        "filename": "deploy.tf",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -28,10 +28,6 @@ data \"google_compute_network\" \"network\" {\n   name = \"default\"\n }\n \n-resource \"google_compute_address\" \"ip\" {\n-  name = local.name\n-}\n-\n resource \"google_compute_firewall\" \"firewall\" {\n   name    = local.name\n   network = data.google_compute_network.network.name\n@@ -61,9 +57,14 @@ resource \"google_compute_firewall\" \"firewall\" {\n   }\n }\n \n+resource \"google_compute_address\" \"ip\" {\n+  name   = local.name\n+  region = local.region\n+}\n+\n resource \"google_compute_instance\" \"instance\" {\n   name         = local.name\n-  machine_type = \"n1-standard-1\"\n+  machine_type = \"g1-small\"\n   zone         = \"${local.region}-b\"\n \n   tags = [local.name]\n@@ -77,13 +78,14 @@ resource \"google_compute_instance\" \"instance\" {\n \n   boot_disk {\n     initialize_params {\n-      size  = 32\n+      size  = 16\n       image = \"projects/arch-linux-gce/global/images/family/arch\"\n     }\n   }\n \n   scheduling {\n-    preemptible = false\n+    preemptible       = true\n+    automatic_restart = false\n   }\n }\n "
      },
      {
        "filename": "playbook.yaml",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -6,6 +6,7 @@\n         update_cache: yes\n         name:\n           - nano\n+          - rsync\n           - docker\n           - docker-compose\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/relaycorp/cloud-gateway/commit/759b1d641a430bf189354e9a4866e72fe56c22dc",
    "files": [
      {
        "filename": "tf-modules/base/gke.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -42,7 +42,7 @@ resource \"google_container_node_pool\" \"main\" {\n   version = google_container_cluster.main.master_version\n \n   node_config {\n-    machine_type = \"n1-standard-1\"\n+    machine_type = var.gke_instance_type\n \n     metadata = {\n       disable-legacy-endpoints = \"true\""
      },
      {
        "filename": "tf-modules/base/variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -7,6 +7,10 @@ variable \"dns_managed_zone\" {\n variable gcp_project_id {}\n variable gcp_region {}\n \n+variable \"gke_instance_type\" {\n+  default = \"n1-standard-1\"\n+}\n+\n variable \"mongodb_atlas_project_id\" {}\n variable \"mongodb_atlas_region\" {}\n "
      },
      {
        "filename": "tf-workspace/env-test.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -3,8 +3,9 @@ module \"gw_test\" {\n \n   environment_name = \"test\"\n \n-  gcp_project_id = var.gcp_project_id\n-  gcp_region     = \"europe-west2\"\n+  gcp_project_id    = var.gcp_project_id\n+  gcp_region        = \"europe-west2\"\n+  gke_instance_type = \"c2-standard-4\"\n \n   mongodb_atlas_project_id = var.mongodb_atlas_project_id\n   mongodb_atlas_region     = \"EUROPE_WEST_2\""
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/stSoftwareAU/sts-network/commit/bf59a4c995822ccfdeee64781345c12ebefa967f",
    "files": [
      {
        "filename": "IaC/main.tf",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -24,6 +24,12 @@ variable \"region\" {\n   description = \"The AWS region\"\n }\n \n+variable \"reduced_redundancy\" {\n+  type        = bool\n+  description = \"Reduce the redundancy and save costs ( non production only)\"\n+  default = false\n+}\n+\n variable \"main_cidr_block\" {\n   type        = string\n   description = \"Address range for the virtual network in CIDR notation. CIDR must be a /21.\"\n@@ -75,7 +81,6 @@ locals {\n   private_cidr_blocks = { for k, v in module.main_subnet_addrs.network_cidr_blocks : k => v if substr(k, 0, 6) != \"Public\" }\n }\n \n-\n resource \"aws_vpc\" \"main\" {\n   cidr_block           = var.main_cidr_block\n   enable_dns_hostnames = true\n@@ -123,8 +128,12 @@ resource \"aws_subnet\" \"public\" {\n   }\n }\n \n+locals{\n+  nat_count=var.reduced_redundancy ? 1: length(aws_subnet.public)\n+}\n+\n resource \"aws_eip\" \"nat\" {\n-  count = length(aws_subnet.public)\n+  count = local.nat_count\n   vpc   = true\n \n   tags = {\n@@ -133,7 +142,7 @@ resource \"aws_eip\" \"nat\" {\n }\n \n resource \"aws_nat_gateway\" \"nat\" {\n-  count = length(aws_subnet.public)\n+  count = local.nat_count\n \n   allocation_id = aws_eip.nat[count.index].id\n   subnet_id     = values(aws_subnet.public)[count.index].id\n@@ -175,7 +184,7 @@ resource \"aws_route_table\" \"private\" {\n   vpc_id = aws_vpc.main.id\n   route {\n     cidr_block     = \"0.0.0.0/0\"\n-    nat_gateway_id = aws_nat_gateway.nat[count.index].id\n+    nat_gateway_id = var.reduced_redundancy ?aws_nat_gateway.nat[0].id: aws_nat_gateway.nat[count.index].id\n   }\n \n   tags = {"
      },
      {
        "filename": "pre-build.sh",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+#!/bin/bash\n+set -e\n+BASE_DIR=\"$( cd -P \"$( dirname \"$BASH_SOURCE\" )\" && pwd -P )\"\n+cd \"${BASE_DIR}\"\n+\n+if [[ ! ${ACCOUNT_ALIAS} =~ ^.*production$ ]]; then\n+    tmpVars=$(mktemp vars_XXXXXX.json)\n+    jq \".reduced_redundancy=true\" IaC/.auto.tfvars.json > ${tmpVars}\n+    # jq . ${tmpVars} \n+    mv ${tmpVars} IaC/.auto.tfvars.json\n+fi\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Azure/devops-governance/commit/4894def3589d532789cc8af0c0b197727e0fb3f4",
    "files": [
      {
        "filename": "modules/workspace/main.tf",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -18,19 +18,6 @@ resource \"azurerm_storage_account\" \"storage\" {\n   allow_blob_public_access = false\n }\n \n-\n-# AZURE CONTAINER REGISTRY\n-# ------------------------\n-\n-resource \"azurerm_container_registry\" \"acr\" {\n-  name                     = local.name_squished\n-  resource_group_name      = azurerm_resource_group.workspace.name\n-  location                 = azurerm_resource_group.workspace.location\n-  sku                      = \"Basic\"\n-  admin_enabled            = false\n-}\n-\n-\n # AZURE KEY VAULT\n # ---------------\n "
      },
      {
        "filename": "modules/workspace/outputs.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -3,7 +3,6 @@ output \"workspace\" {\n     resource_group_name\t= azurerm_resource_group.workspace.name\n     storage_account     = azurerm_storage_account.storage.name\n     key_vault           = azurerm_key_vault.kv.name\n-    container_registry  = azurerm_container_registry.acr.name\n   }\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/thatscotdatasci/terraform-lambda/commit/6e85cf4f7e7f76c159c2e30952a775d6facaf638",
    "files": [
      {
        "filename": "environments/dev/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -11,6 +11,7 @@ provider \"aws\" {\n module \"kms\" {\n   source = \"../../modules/kms\"\n \n+  create_kms = \"${var.create_kms}\"\n   kms_alias = \"${join(\"-\", list(var.user, var.project, var.environment, var.kms_alias))}\"\n }\n "
      },
      {
        "filename": "environments/dev/variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -8,6 +8,10 @@ variable \"region\" {\n   default = \"eu-west-2\"\n }\n \n+variable \"create_kms\" {\n+  default = false\n+}\n+\n variable \"github_project_url\" {}\n \n variable \"kms_alias\" {}"
      },
      {
        "filename": "modules/kms/kms.tf",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -1,12 +1,19 @@\n+variable \"create_kms\" {}\n variable \"kms_alias\" {}\n \n-resource \"aws_kms_key\" \"kms_key\" {}\n+resource \"aws_kms_key\" \"kms_key\" {\n+  count = \"${var.create_kms ? 1 : 0}\"\n+}\n \n resource \"aws_kms_alias\" \"kms_alias\" {\n-  name          = \"alias/${var.kms_alias}\"\n+  count = \"${var.create_kms ? 1 : 0}\"\n+\n+  name = \"alias/${var.kms_alias}\"\n   target_key_id = \"${aws_kms_key.kms_key.key_id}\"\n \n   depends_on = [\"aws_kms_key.kms_key\"]\n }\n \n-output \"kms_key_alias_arn\" { value =  \"${aws_kms_alias.kms_alias.arn}\" }\n+output \"kms_key_alias_arn\" {\n+  value = \"${var.create_kms == true ? element(concat(aws_kms_alias.kms_alias.*.arn, list(\"\")), 0) : \"\"}\"\n+}"
      },
      {
        "filename": "modules/s3/s3.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ resource \"aws_s3_bucket\" \"s3_lambda_code_bucket\" {\n     rule {\n       apply_server_side_encryption_by_default {\n         kms_master_key_id = \"${var.kms_key_alias_arn}\"\n-        sse_algorithm     = \"aws:kms\"\n+        sse_algorithm     = \"${var.kms_key_alias_arn == \"\" ? \"AES256\" : \"aws:kms\"}\"\n       }\n     }\n   }"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cisagov/cool-sharedservices-nessus/commit/5403a8978053a1299b0afe8d7fc59e914fc5e354",
    "files": [
      {
        "filename": "ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -38,7 +38,7 @@ resource \"aws_instance\" \"nessus\" {\n   subnet_id                   = local.nessus_subnet.id\n \n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 128\n     delete_on_termination = true\n   }"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/imma/fogg-tf/commit/6089a019df4c39231e596af627ebd910877d11d0",
    "files": [
      {
        "filename": "fogg-svc/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -880,7 +880,7 @@ resource \"aws_ecs_service\" \"ex_fargate\" {\n   name            = \"${local.service_name}-ex_fargate\"\n   cluster         = \"${aws_ecs_cluster.service.id}\"\n   task_definition = \"${aws_ecs_task_definition.ex_fargate.arn}\"\n-  desired_count   = \"1\"\n+  desired_count   = \"0\"\n \n   network_configuration {\n     subnets         = [\"${compact(concat(formatlist(var.public_lb ? \"%[1]s\" : \"%[2]s\",data.terraform_remote_state.env.public_subnets,data.terraform_remote_state.env.private_subnets)))}\"]"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/lean-delivery/terraform-module-aws-core/commit/25bbff736936b64a6120ef9608498830ecec33c0",
    "files": [
      {
        "filename": "README.md",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -25,17 +25,19 @@ module \"core\" {\n | Name | Description | Type | Default | Required |\n |------|-------------|:----:|:-----:|:-----:|\n | availability\\_zones | A list of availability zones in the region | list | `<list>` | no |\n-| create\\_route53\\_zone | Switch to create Route53 zone | string | `false` | no |\n-| enable\\_nat\\_gateway | Should be true if you want to provision NAT Gateways for each of your private networks | string | `false` | no |\n-| environment | Environment name is used to identify resources | string | `env` | no |\n-| map\\_public\\_ip\\_on\\_launch | Should be false if you do not want to auto-assign public IP on launch | string | `true` | no |\n+| create\\_route53\\_zone | Switch to create Route53 zone | string | `\"false\"` | no |\n+| enable\\_nat\\_gateway | Should be true if you want to provision NAT Gateways for each of your private networks | string | `\"false\"` | no |\n+| environment | Environment name is used to identify resources | string | `\"env\"` | no |\n+| instance\\_type | The type of instance to start | string | `\"t3.nano\"` | no |\n+| map\\_public\\_ip\\_on\\_launch | Should be false if you do not want to auto-assign public IP on launch | string | `\"true\"` | no |\n+| nat\\_as\\_ec2\\_instance | Setup NAT as EC2 instance instead of service | string | `\"false\"` | no |\n | private\\_subnets | A list of private subnets inside the VPC | list | `<list>` | no |\n-| project | Project name is used to identify resources | string | `project` | no |\n+| project | Project name is used to identify resources | string | `\"project\"` | no |\n | public\\_subnets | A list of public subnets inside the VPC | list | `<list>` | no |\n-| root\\_domain | Name of Route53 zone (if 'create_route53_zone' = True) | string | `` | no |\n-| single\\_nat\\_gateway | Should be true if you want to provision a single shared NAT Gateway across all of your private networks | string | `false` | no |\n+| root\\_domain | Name of Route53 zone (if 'create_route53_zone' = True) | string | `\"\"` | no |\n+| single\\_nat\\_gateway | Should be true if you want to provision a single shared NAT Gateway across all of your private networks | string | `\"false\"` | no |\n | tags | Additional tags for resources | map | `<map>` | no |\n-| vpc\\_cidr | The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden | string | `0.0.0.0/16` | no |\n+| vpc\\_cidr | The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden | string | `\"0.0.0.0/16\"` | no |\n \n ## Outputs\n \n@@ -57,6 +59,7 @@ module \"core\" {\n | default\\_vpc\\_id | The ID of the VPC |\n | default\\_vpc\\_instance\\_tenancy | Tenancy of instances spin up within VPC |\n | default\\_vpc\\_main\\_route\\_table\\_id | The ID of the main route table associated with this VPC |\n+| ec2\\_nat\\_ami | EC2 AMI used for NAT instances |\n | elasticache\\_route\\_table\\_ids | List of IDs of elasticache route tables |\n | elasticache\\_subnet\\_group | ID of elasticache subnet group |\n | elasticache\\_subnet\\_group\\_name | Name of elasticache subnet group |\n@@ -67,6 +70,7 @@ module \"core\" {\n | intra\\_route\\_table\\_ids | List of IDs of intra route tables |\n | intra\\_subnets | List of IDs of intra subnets |\n | intra\\_subnets\\_cidr\\_blocks | List of cidr_blocks of intra subnets |\n+| nat\\_ec2\\_ids | List of NAT instance IDs |\n | nat\\_ids | List of allocation ID of Elastic IPs created for AWS NAT Gateway |\n | nat\\_public\\_ips | List of public Elastic IPs created for AWS NAT Gateway |\n | natgw\\_ids | List of NAT Gateway IDs |"
      },
      {
        "filename": "main.tf",
        "additions": 61,
        "deletions": 2,
        "changes": 63,
        "status": "modified",
        "patch": "@@ -3,6 +3,8 @@ locals {\n     Project     = \"${var.project}\"\n     Environment = \"${var.environment}\"\n   }\n+\n+  ec2_nat_count = \"${ var.single_nat_gateway ? 1 : length(var.availability_zones) }\"\n }\n \n resource \"aws_route53_zone\" \"main\" {\n@@ -12,6 +14,33 @@ resource \"aws_route53_zone\" \"main\" {\n   tags = \"${merge(local.default_tags, var.tags)}\"\n }\n \n+data \"aws_ami\" \"nat\" {\n+  # executable_users = [\"self\"]\n+  most_recent = true\n+  owners      = [\"amazon\"]\n+\n+  # https://docs.aws.amazon.com/vpc/latest/userguide/VPC_NAT_Instance.html\n+  filter {\n+    name   = \"name\"\n+    values = [\"amzn-ami-vpc-nat-*\"]\n+  }\n+\n+  filter {\n+    name   = \"state\"\n+    values = [\"available\"]\n+  }\n+\n+  filter {\n+    name   = \"root-device-type\"\n+    values = [\"ebs\"]\n+  }\n+\n+  filter {\n+    name   = \"virtualization-type\"\n+    values = [\"hvm\"]\n+  }\n+}\n+\n module \"vpc\" {\n   source = \"terraform-aws-modules/vpc/aws\"\n \n@@ -21,9 +50,9 @@ module \"vpc\" {\n   private_subnets = \"${var.private_subnets}\"\n   public_subnets  = \"${var.public_subnets}\"\n \n-  enable_nat_gateway      = \"${var.enable_nat_gateway}\"      //true\n+  enable_nat_gateway      = \"${ var.enable_nat_gateway ? \"${ var.nat_as_ec2_instance ? \"false\" : \"true\" }\" : \"false\" }\"\n   single_nat_gateway      = \"${var.single_nat_gateway}\"\n-  map_public_ip_on_launch = \"${var.map_public_ip_on_launch}\" // true by default\n+  map_public_ip_on_launch = \"${var.map_public_ip_on_launch}\"                                                            // true by default\n \n   tags = \"${merge(local.default_tags, var.tags)}\"\n }\n@@ -47,3 +76,33 @@ resource \"aws_default_security_group\" \"assign-name\" {\n \n   tags = \"${merge(local.default_tags, var.tags, map(\"Name\", \"${var.project}-${var.environment}\"))}\"\n }\n+\n+resource \"aws_eip\" \"nat\" {\n+  count    = \"${ var.enable_nat_gateway && var.nat_as_ec2_instance ? local.ec2_nat_count : 0 }\"\n+  instance = \"${element(aws_instance.nat.*.id, count.index)}\"\n+  vpc      = true\n+}\n+\n+resource \"aws_instance\" \"nat\" {\n+  count = \"${ var.enable_nat_gateway && var.nat_as_ec2_instance ? local.ec2_nat_count : 0 }\"\n+\n+  ami                    = \"${data.aws_ami.nat.id}\"\n+  instance_type          = \"${var.instance_type}\"\n+  availability_zone      = \"${element(var.availability_zones, count.index)}\"\n+  vpc_security_group_ids = [\"${aws_default_security_group.assign-name.id}\"]\n+  subnet_id              = \"${element(module.vpc.public_subnets, count.index)}\"\n+\n+  tags = \"${merge(local.default_tags, var.tags)}\"\n+}\n+\n+resource \"aws_route\" \"private_nat_ec2\" {\n+  count = \"${ var.enable_nat_gateway && var.nat_as_ec2_instance ? local.ec2_nat_count : 0 }\"\n+\n+  route_table_id         = \"${element(module.vpc.private_route_table_ids, count.index)}\"\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  instance_id            = \"${element(aws_instance.nat.*.id, count.index)}\"\n+\n+  timeouts {\n+    create = \"5m\"\n+  }\n+}"
      },
      {
        "filename": "output.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -292,3 +292,13 @@ output \"route53_zone_id\" {\n   description = \"The ID of created Route53 zone.\"\n   value       = \"${element(concat(aws_route53_zone.main.*.zone_id, list(\"\")), 0)}\"\n }\n+\n+output \"nat_ec2_ids\" {\n+  description = \"List of NAT instance IDs\"\n+  value       = \"${aws_instance.nat.*.id}\"\n+}\n+\n+output \"ec2_nat_ami\" {\n+  description = \"EC2 AMI used for NAT instances\"\n+  value       = \"${ var.nat_as_ec2_instance ? data.aws_ami.nat.id : \"\" }\"\n+}"
      },
      {
        "filename": "test/test.tf",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "status": "added",
        "patch": "@@ -0,0 +1,34 @@\n+variable \"region\" {\n+  default = \"us-west-2\"\n+}\n+\n+variable \"instance_type\" {\n+  default = \"t2.micro\"\n+}\n+\n+provider \"aws\" {\n+  region = \"${var.region}\"\n+}\n+\n+data \"aws_availability_zones\" \"available\" {}\n+\n+module \"test-ec2-nat\" {\n+  source = \"../\"\n+\n+  project            = \"module-test\"\n+  environment        = \"ec2-nat\"\n+  availability_zones = [\"${data.aws_availability_zones.available.names[0]}\", \"${data.aws_availability_zones.available.names[1]}\"]\n+  vpc_cidr           = \"10.10.0.0/16\"\n+  private_subnets    = [\"10.10.1.0/24\", \"10.10.2.0/24\"]\n+  public_subnets     = [\"10.10.11.0/24\", \"10.10.12.0/24\"]\n+\n+  enable_nat_gateway  = \"true\"\n+  single_nat_gateway  = \"true\"\n+  nat_as_ec2_instance = \"true\"\n+\n+  instance_type = \"${var.instance_type}\"\n+}\n+\n+output \"ec2_nat_ami\" {\n+  value = \"${module.test-ec2-nat.ec2_nat_ami}\"\n+}"
      },
      {
        "filename": "variables.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -64,3 +64,13 @@ variable \"tags\" {\n   default     = {}\n   description = \"Additional tags for resources\"\n }\n+\n+variable \"nat_as_ec2_instance\" {\n+  description = \"Setup NAT as EC2 instance instead of service\"\n+  default     = \"false\"\n+}\n+\n+variable \"instance_type\" {\n+  description = \"The type of instance to start\"\n+  default     = \"t3.nano\"\n+}"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/dmcgowandmc/minifoundations/commit/832682e0b54ede90b021b4ed575dcc9e761135ce",
    "files": [
      {
        "filename": "modules/aws/main.tf",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -138,10 +138,13 @@ module \"app_role\" {\n module \"platform_vpc\" {\n     source = \"./modules/vpc\"\n \n-    azs          = var.vpc_foundations_azs\n-    cidr         = var.vpc_foundations_cidr\n-    name         = var.vpc_foundations_name\n-    project_code = var.project_code\n+    azs              = var.vpc_foundations_azs\n+    cidr             = var.vpc_foundations_cidr\n+    database_subnets = var.vpc_foundations_database_subnets\n+    private_subnets  = var.vpc_foundations_private_subnets\n+    public_subnets   = var.vpc_foundations_public_subnets\n+    name             = var.vpc_foundations_name\n+    project_code     = var.project_code\n }\n \n #Create storage bucket for CodePipeline"
      },
      {
        "filename": "modules/aws/modules/vpc/main.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -19,9 +19,9 @@ module \"vpc\" {\n     #AZ and Subnet Configuration\n     azs              = var.azs\n     cidr             = var.cidr\n-    database_subnets = [\"10.0.8.0/23\", \"10.0.10.0/23\"]\n-    private_subnets  = [\"10.0.16.0/22\", \"10.0.20.0/22\"]\n-    public_subnets   = [\"10.0.0.0/23\", \"10.0.2.0/23\"]\n+    database_subnets = var.database_subnets\n+    private_subnets  = var.private_subnets\n+    public_subnets   = var.public_subnets\n \n     #Disable, we will create the database subnet group explictly so all data resources can reside in database subnets\n     create_database_subnet_group = false"
      },
      {
        "filename": "modules/aws/modules/vpc/outputs.tf",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "status": "added",
        "patch": "@@ -0,0 +1,48 @@\n+##################################################################################################\n+## All outputs from the creation of vpc's, subnets, and other supporting components reside here ##\n+##################################################################################################\n+\n+output \"database_subnet_arns\" {\n+    description = \"List of ARN's for the Database Subnets\"\n+    value       = module.vpc.database_subnet_arns\n+}\n+\n+output \"database_subnets\" {\n+    description = \"List of ID's for the Database Subnets\"\n+    value       = module.vpc.database_subnets\n+}\n+\n+output \"private_subnet_arns\" {\n+    description = \"List of ARN's for the Private Subnets\"\n+    value       = module.vpc.private_subnet_arns\n+}\n+\n+output \"private_subnets\" {\n+    description = \"List of ID's for the Private Subnets\"\n+    value       = module.vpc.private_subnets\n+}\n+\n+output \"public_subnet_arns\" {\n+    description = \"List of ARN's for the Public Subnets\"\n+    value       = module.vpc.public_subnet_arns\n+}\n+\n+output \"public_subnets\" {\n+    description = \"List of ID's for the Public Subnets\"\n+    value       = module.vpc.public_subnets\n+}\n+\n+output \"ssm_security_group_arn\" {\n+    description = \"ID of the SSM Endpoint security group\"\n+    value       = aws_security_group.ssm.arn\n+}\n+\n+output \"ssm_security_group_id\" {\n+    description = \"ID of the SSM Endpoint security group\"\n+    value       = aws_security_group.ssm.id\n+}\n+\n+output \"vpc_id\" {\n+    description = \"ID of the VPC\"\n+    value       = module.vpc.vpc_id\n+}"
      },
      {
        "filename": "modules/aws/modules/vpc/variables.tf",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -19,6 +19,21 @@ variable \"cidr\" {\n     description = \"CIDR Range of the VPC\"\n }\n \n+variable \"database_subnets\" {\n+    type        = list(string)\n+    description = \"List of database subnet CIDRs (WARNING: Must be equal to or greated than azs)\"\n+}\n+\n+variable \"private_subnets\" {\n+    type        = list(string)\n+    description = \"List of private subnet CIDRs (WARNING: Must be equal to or greated than azs)\"\n+}\n+\n+variable \"public_subnets\" {\n+    type        = list(string)\n+    description = \"List of public subnet CIDRs (WARNING: Must be equal to or greated than azs)\"\n+}\n+\n variable \"name\" {\n     type        = string\n     description = \"Name of the VPC and it's supporting components\""
      },
      {
        "filename": "modules/aws/terraform.tfvars",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -56,9 +56,12 @@ role_app_trusted_services = [\n ]\n \n #Inputs for foundations VPC\n-vpc_foundations_azs  = [\"ap-southeast-2a\", \"ap-southeast-2b\"]\n-vpc_foundations_cidr = \"10.0.0.0/19\"\n-vpc_foundations_name = \"foundations\"\n+vpc_foundations_azs              = [\"ap-southeast-2a\"]\n+vpc_foundations_cidr             = \"10.0.0.0/19\"\n+vpc_foundations_database_subnets = [\"10.0.8.0/23\"]\n+vpc_foundations_private_subnets  = [\"10.0.16.0/22\"]\n+vpc_foundations_public_subnets   = [\"10.0.0.0/23\"]\n+vpc_foundations_name             = \"foundations\"\n \n #Inputs for common CICD components\n cp_bucket_name   = \"artefacts\""
      },
      {
        "filename": "modules/aws/variables.tf",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -103,6 +103,21 @@ variable \"vpc_foundations_cidr\" {\n     description = \"CIDR Range of the foundations VPC\"\n }\n \n+variable \"vpc_foundations_database_subnets\" {\n+    type        = list(string)\n+    description = \"List of database subnet CIDRs for foundations (WARNING: Must be equal to or greated than azs)\"\n+}\n+\n+variable \"vpc_foundations_private_subnets\" {\n+    type        = list(string)\n+    description = \"List of private subnet CIDRs for foundations (WARNING: Must be equal to or greated than azs)\"\n+}\n+\n+variable \"vpc_foundations_public_subnets\" {\n+    type        = list(string)\n+    description = \"List of public subnet CIDRs for foundations (WARNING: Must be equal to or greated than azs)\"\n+}\n+\n variable \"vpc_foundations_name\" {\n     type        = string\n     description = \"Name of the foundations VPC and it's supporting components\""
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/dmcgowandmc/minifoundations/commit/941e316bcd70779e868311253f663f8acd5ef155",
    "files": [
      {
        "filename": "modules/aws/modules/vpc/main.tf",
        "additions": 2,
        "deletions": 27,
        "changes": 29,
        "status": "modified",
        "patch": "@@ -32,31 +32,6 @@ module \"vpc\" {\n     one_nat_gateway_per_az = true\n \n     #Standard endpoints to enable. This allows resources within VPC to talk directly to AWS API's without heading out to the internet\n-    enable_s3_endpoint                      = true\n-    enable_ssm_endpoint                     = true\n-    enable_ssmmessages_endpoint             = true\n-    ssm_endpoint_security_group_ids         = [aws_security_group.ssm.id]\n-    ssmmessages_endpoint_security_group_ids = [aws_security_group.ssm.id]\n-}\n-\n-#Create generic security group for SSM endpoints. Allow for HTTPS only\n-resource \"aws_security_group\" \"ssm\" {\n-    name        = \"${module.vpc.name}-ssm\"\n-    description = \"Allow inbound traffic to SSM endpoint\"\n-    vpc_id      = module.vpc.vpc_id\n-\n-    ingress {\n-        description = \"Allow HTTPS from entire VPC CIDR Range\"\n-        from_port   = 443\n-        to_port     = 443\n-        protocol    = \"tcp\"\n-        cidr_blocks = [module.vpc.vpc_cidr_block]\n-    }\n-\n-    egress {\n-        from_port   = 0\n-        to_port     = 0\n-        protocol    = \"-1\"\n-        cidr_blocks = [\"0.0.0.0/0\"]\n-    }\n+    enable_dynamodb_endpoint = true\n+    enable_s3_endpoint       = true\n }"
      },
      {
        "filename": "modules/aws/modules/vpc/outputs.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -32,16 +32,6 @@ output \"public_subnets\" {\n     value       = module.vpc.public_subnets\n }\n \n-output \"ssm_security_group_arn\" {\n-    description = \"ID of the SSM Endpoint security group\"\n-    value       = aws_security_group.ssm.arn\n-}\n-\n-output \"ssm_security_group_id\" {\n-    description = \"ID of the SSM Endpoint security group\"\n-    value       = aws_security_group.ssm.id\n-}\n-\n output \"vpc_id\" {\n     description = \"ID of the VPC\"\n     value       = module.vpc.vpc_id"
      },
      {
        "filename": "modules/aws/outputs.tf",
        "additions": 1,
        "deletions": 11,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -131,17 +131,7 @@ output \"vpc_foundations_public_subnets\" {\n     value       = module.vpc_foundations.public_subnets\n }\n \n-output \"vpc_foundations_ssm_security_group_arn\" {\n-    description = \"ID of the SSM Endpoint security group for foundations\"\n-    value       = module.vpc_foundations.ssm_security_group_arn\n-}\n-\n-output \"vpc_foundations_ssm_security_group_id\" {\n-    description = \"ID of the SSM Endpoint security group for foundations\"\n-    value       = module.vpc_foundations.ssm_security_group_id\n-}\n-\n output \"vpc_foundations_vpc_id\" {\n     description = \"ID of the foundations VPC for foundations\"\n     value       = module.vpc_foundations.vpc_id\n-}\n\\ No newline at end of file\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/trajano/terraform-s3-backend/commit/f4b61c7bedae856439f01499de1ec9050b4c40fc",
    "files": [
      {
        "filename": "examples/generated/README.md",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+# Generated usage\n+\n+This takes the code block from usage in sample to verify if `terraform init` and `terraform plan` work with the newly created S3 backend."
      },
      {
        "filename": "examples/generated/main.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+terraform {\n+  backend \"s3\" {\n+    bucket = \"terraform-s3-backend-sample-bucket\"\n+    key    = \"path/to/my/key\"\n+    region = \"us-east-1\"\n+    dynamodb_table = \"terraform-s3-backend-sample-bucket-locks\"\n+  }\n+}"
      },
      {
        "filename": "examples/sample/README.md",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+# Sample bucket\n+\n+This creates a sample bucket and outputs the IAM policy ID and a usage example."
      },
      {
        "filename": "examples/sample/terraform-s3-backend.tf",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -2,4 +2,12 @@ module \"terraform-s3-backend\" {\n   source = \"../..\"\n   region = \"us-east-1\"\n   bucket = \"terraform-s3-backend-sample-bucket\"\n-}\n\\ No newline at end of file\n+}\n+\n+output \"policy_id\" {\n+  value = module.terraform-s3-backend.policy_id\n+}\n+\n+output \"usage\" {\n+  value = module.terraform-s3-backend.usage\n+}"
      },
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -68,10 +68,8 @@ resource \"aws_s3_bucket_public_access_block\" \"terraform\" {\n resource \"aws_dynamodb_table\" \"terraform\" {\n   name      = \"${var.bucket}-locks\"\n   hash_key  = \"LockID\"\n+  billing_mode = \"PAY_PER_REQUEST\"\n \n-  # Not sure if this is okay or not, it may be better to use PAY_PER_REQUEST since Terraforms do not happen often.\n-  read_capacity  = 20\n-  write_capacity = 20\n   attribute {\n     name = \"LockID\"\n     type = \"S\"\n@@ -84,6 +82,7 @@ resource \"aws_dynamodb_table\" \"terraform\" {\n \n locals {\n   usage = <<EOF\n+\n terraform {\n   backend \"s3\" {\n     bucket = \"${var.bucket}\""
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/trajano/terraform-s3-backend/commit/cb9f00a2f6f23b44f7db08863ef5fb0b9ea0bc0c",
    "files": [
      {
        "filename": "main.tf",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -50,7 +50,14 @@ resource \"aws_s3_bucket\" \"terraform\" {\n   tags = {\n     Name = \"Terraform S3 backend bucket\"\n   }\n+  lifecycle_rule {\n+    enabled = true\n \n+    transition {\n+      days          = 30\n+      storage_class = \"ONEZONE_IA\"\n+    }\n+  }\n   versioning {\n     enabled = true\n   }\n@@ -66,8 +73,8 @@ resource \"aws_s3_bucket_public_access_block\" \"terraform\" {\n }\n \n resource \"aws_dynamodb_table\" \"terraform\" {\n-  name      = \"${var.bucket}-locks\"\n-  hash_key  = \"LockID\"\n+  name         = \"${var.bucket}-locks\"\n+  hash_key     = \"LockID\"\n   billing_mode = \"PAY_PER_REQUEST\"\n \n   attribute {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alphagov/verify-infrastructure/commit/d34dcd505074546f77367786f5362891050c3440",
    "files": [
      {
        "filename": "terraform/modules/hub/azs.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ locals {\n     slice(\n       data.aws_availability_zones.available.names,\n       0,\n-      var.number_of_availability_zones\n+      local.number_of_availability_zones\n     )\n   }\"\n }"
      },
      {
        "filename": "terraform/modules/hub/egress_proxy.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ module \"egress_proxy_ecs_asg\" {\n   cluster             = \"egress-proxy\"\n   vpc_id              = \"${aws_vpc.hub.id}\"\n   instance_subnets    = [\"${aws_subnet.internal.*.id}\"]\n-  number_of_instances = \"${var.number_of_availability_zones}\"\n+  number_of_instances = \"${var.number_of_apps}\"\n   use_egress_proxy    = false\n   domain              = \"${local.root_domain}\"\n "
      },
      {
        "filename": "terraform/modules/hub/eips.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,10 +1,10 @@\n resource \"aws_eip\" \"ingress\" {\n-  count = 2\n+  count = \"${local.number_of_availability_zones}\"\n   vpc   = true\n }\n \n resource \"aws_eip\" \"egress\" {\n-  count = \"${var.number_of_availability_zones}\"\n+  count = \"${local.number_of_availability_zones}\"\n   vpc   = true\n }\n "
      },
      {
        "filename": "terraform/modules/hub/gateways.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ resource \"aws_internet_gateway\" \"hub\" {\n }\n \n resource \"aws_nat_gateway\" \"static_egress\" {\n-  count = \"${var.number_of_availability_zones}\"\n+  count = \"${local.number_of_availability_zones}\"\n \n   allocation_id = \"${element(aws_eip.egress.*.id,    count.index)}\"\n   subnet_id     = \"${element(aws_subnet.egress.*.id, count.index)}\""
      },
      {
        "filename": "terraform/modules/hub/hub_config.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ module \"config_ecs_asg\" {\n   vpc_id           = \"${aws_vpc.hub.id}\"\n   instance_subnets = [\"${aws_subnet.internal.*.id}\"]\n \n-  number_of_instances = \"${var.number_of_availability_zones}\"\n+  number_of_instances = \"${var.number_of_apps}\"\n   domain              = \"${local.root_domain}\"\n \n   ecs_agent_image_and_tag = \"${local.ecs_agent_image_and_tag}\"\n@@ -64,7 +64,7 @@ module \"config\" {\n   task_definition            = \"${data.template_file.config_task_def.rendered}\"\n   container_name             = \"nginx\"\n   container_port             = \"8443\"\n-  number_of_tasks            = \"${var.number_of_availability_zones}\"\n+  number_of_tasks            = \"${var.number_of_apps}\"\n   health_check_path          = \"/service-status\"\n   tools_account_id           = \"${var.tools_account_id}\"\n   image_name                 = \"verify-config\""
      },
      {
        "filename": "terraform/modules/hub/hub_policy.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ module \"policy_ecs_asg\" {\n   vpc_id           = \"${aws_vpc.hub.id}\"\n   instance_subnets = [\"${aws_subnet.internal.*.id}\"]\n \n-  number_of_instances = \"${var.number_of_availability_zones}\"\n+  number_of_instances = \"${var.number_of_apps}\"\n   domain              = \"${local.root_domain}\"\n \n   ecs_agent_image_and_tag = \"${local.ecs_agent_image_and_tag}\"\n@@ -67,7 +67,7 @@ module \"policy\" {\n   task_definition            = \"${data.template_file.policy_task_def.rendered}\"\n   container_name             = \"nginx\"\n   container_port             = \"8443\"\n-  number_of_tasks            = \"${var.number_of_availability_zones}\"\n+  number_of_tasks            = \"${var.number_of_apps}\"\n   health_check_path          = \"/service-status\"\n   tools_account_id           = \"${var.tools_account_id}\"\n   image_name                 = \"verify-policy\""
      },
      {
        "filename": "terraform/modules/hub/hub_saml_engine.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -7,7 +7,7 @@ module \"saml_engine_ecs_asg\" {\n   vpc_id           = \"${aws_vpc.hub.id}\"\n   instance_subnets = [\"${aws_subnet.internal.*.id}\"]\n \n-  number_of_instances = \"${var.number_of_availability_zones}\"\n+  number_of_instances = \"${var.number_of_apps}\"\n   domain              = \"${local.root_domain}\"\n \n   ecs_agent_image_and_tag = \"${local.ecs_agent_image_and_tag}\"\n@@ -63,7 +63,7 @@ module \"saml_engine\" {\n   task_definition            = \"${data.template_file.saml_engine_task_def.rendered}\"\n   container_name             = \"nginx\"\n   container_port             = \"8443\"\n-  number_of_tasks            = \"${var.number_of_availability_zones}\"\n+  number_of_tasks            = \"${var.number_of_apps}\"\n   health_check_path          = \"/service-status\"\n   tools_account_id           = \"${var.tools_account_id}\"\n   image_name                 = \"verify-saml-engine\""
      },
      {
        "filename": "terraform/modules/hub/hub_saml_proxy.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ module \"saml_proxy_ecs_asg\" {\n   cluster             = \"saml-proxy\"\n   vpc_id              = \"${aws_vpc.hub.id}\"\n   instance_subnets    = [\"${aws_subnet.internal.*.id}\"]\n-  number_of_instances = \"${var.number_of_availability_zones}\"\n+  number_of_instances = \"${var.number_of_apps}\"\n   domain              = \"${local.root_domain}\"\n \n   ecs_agent_image_and_tag = \"${local.ecs_agent_image_and_tag}\"\n@@ -62,7 +62,7 @@ module \"saml_proxy\" {\n   task_definition            = \"${data.template_file.saml_proxy_task_def.rendered}\"\n   container_name             = \"nginx\"\n   container_port             = \"8443\"\n-  number_of_tasks            = \"${var.number_of_availability_zones}\"\n+  number_of_tasks            = \"${var.number_of_apps}\"\n   health_check_path          = \"/service-status\"\n   tools_account_id           = \"${var.tools_account_id}\"\n   instance_security_group_id = \"${module.saml_proxy_ecs_asg.instance_sg_id}\""
      },
      {
        "filename": "terraform/modules/hub/hub_saml_soap_proxy.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ module \"saml_soap_proxy_ecs_asg\" {\n   cluster             = \"saml-soap-proxy\"\n   vpc_id              = \"${aws_vpc.hub.id}\"\n   instance_subnets    = [\"${aws_subnet.internal.*.id}\"]\n-  number_of_instances = \"${var.number_of_availability_zones}\"\n+  number_of_instances = \"${var.number_of_apps}\"\n   domain              = \"${local.root_domain}\"\n \n   ecs_agent_image_and_tag = \"${local.ecs_agent_image_and_tag}\"\n@@ -62,7 +62,7 @@ module \"saml_soap_proxy\" {\n   task_definition            = \"${data.template_file.saml_soap_proxy_task_def.rendered}\"\n   container_name             = \"nginx\"\n   container_port             = \"8443\"\n-  number_of_tasks            = \"${var.number_of_availability_zones}\"\n+  number_of_tasks            = \"${var.number_of_apps}\"\n   health_check_path          = \"/service-status\"\n   tools_account_id           = \"${var.tools_account_id}\"\n   instance_security_group_id = \"${module.saml_soap_proxy_ecs_asg.instance_sg_id}\""
      },
      {
        "filename": "terraform/modules/hub/ingress.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -198,7 +198,7 @@ module \"ingress_ecs_asg\" {\n   cluster             = \"ingress\"\n   vpc_id              = \"${aws_vpc.hub.id}\"\n   instance_subnets    = [\"${aws_subnet.internal.*.id}\"]\n-  number_of_instances = \"${var.number_of_availability_zones + 1}\"\n+  number_of_instances = \"${var.number_of_apps + 1}\"\n   domain              = \"${local.root_domain}\"\n \n   ecs_agent_image_and_tag = \"${local.ecs_agent_image_and_tag}\""
      },
      {
        "filename": "terraform/modules/hub/prometheus.tf",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -302,7 +302,7 @@ data \"template_file\" \"prometheus_cloud_init\" {\n }\n \n resource \"aws_instance\" \"prometheus\" {\n-  count = \"${var.number_of_availability_zones}\"\n+  count = \"${var.number_of_apps}\"\n \n   ami                  = \"${data.aws_ami.ubuntu_bionic.id}\"\n   instance_type        = \"t3.medium\"\n@@ -329,7 +329,7 @@ resource \"aws_instance\" \"prometheus\" {\n }\n \n resource \"aws_ebs_volume\" \"prometheus\" {\n-  count = \"${var.number_of_availability_zones}\"\n+  count = \"${var.number_of_apps}\"\n \n   size      = 100\n   encrypted = true\n@@ -345,15 +345,15 @@ resource \"aws_ebs_volume\" \"prometheus\" {\n }\n \n resource \"aws_volume_attachment\" \"prometheus_prometheus\" {\n-  count = \"${var.number_of_availability_zones}\"\n+  count = \"${var.number_of_apps}\"\n \n   device_name = \"/dev/xvdp\"\n   volume_id   = \"${element(aws_ebs_volume.prometheus.*.id, count.index)}\"\n   instance_id = \"${element(aws_instance.prometheus.*.id, count.index)}\"\n }\n \n resource \"aws_lb_target_group\" \"prometheus\" {\n-  count = \"${var.number_of_availability_zones}\"\n+  count = \"${var.number_of_apps}\"\n \n   name     = \"${var.deployment}-prometheus-${count.index}\"\n   port     = 9090\n@@ -369,15 +369,15 @@ resource \"aws_lb_target_group\" \"prometheus\" {\n }\n \n resource \"aws_lb_target_group_attachment\" \"prometheus\" {\n-  count = \"${var.number_of_availability_zones}\"\n+  count = \"${var.number_of_apps}\"\n \n   target_group_arn = \"${element(aws_lb_target_group.prometheus.*.arn, count.index)}\"\n   target_id        = \"${element(aws_instance.prometheus.*.id, count.index)}\"\n   port             = 9090\n }\n \n resource \"aws_lb_listener_rule\" \"prometheus_https\" {\n-  count        = \"${var.number_of_availability_zones}\"\n+  count        = \"${var.number_of_apps}\"\n   listener_arn = \"${aws_lb_listener.mgmt_https.arn}\"\n   priority     = \"${100 + count.index}\"\n "
      },
      {
        "filename": "terraform/modules/hub/redis.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ resource \"aws_elasticache_replication_group\" \"policy_session_store\" {\n   replication_group_description = \"Replication group for the ${var.deployment} Policy session store\"\n   maintenance_window            = \"tue:02:00-tue:04:00\"\n   node_type                     = \"${var.redis_cache_size}\"\n-  number_cache_clusters         = \"${var.number_of_availability_zones}\"\n+  number_cache_clusters         = \"${local.number_of_availability_zones}\"\n   parameter_group_name          = \"${aws_elasticache_parameter_group.policy_session_store.name}\"\n   security_group_ids            = [\"${aws_security_group.policy_redis.id}\"]\n   subnet_group_name             = \"${aws_elasticache_subnet_group.policy_session_store.name}\""
      },
      {
        "filename": "terraform/modules/hub/routing.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -14,19 +14,19 @@ resource \"aws_route\" \"public\" {\n }\n \n resource \"aws_route_table_association\" \"public_ingress\" {\n-  count          = \"${var.number_of_availability_zones}\"\n+  count          = \"${local.number_of_availability_zones}\"\n   subnet_id      = \"${element(aws_subnet.ingress.*.id, count.index)}\"\n   route_table_id = \"${element(aws_route_table.public.*.id, count.index)}\"\n }\n \n resource \"aws_route_table_association\" \"public_egress\" {\n-  count          = \"${var.number_of_availability_zones}\"\n+  count          = \"${local.number_of_availability_zones}\"\n   subnet_id      = \"${element(aws_subnet.egress.*.id, count.index)}\"\n   route_table_id = \"${element(aws_route_table.public.*.id, count.index)}\"\n }\n \n resource \"aws_route_table\" \"private\" {\n-  count = \"${var.number_of_availability_zones}\"\n+  count = \"${local.number_of_availability_zones}\"\n \n   vpc_id = \"${aws_vpc.hub.id}\"\n \n@@ -37,7 +37,7 @@ resource \"aws_route_table\" \"private\" {\n }\n \n resource \"aws_route\" \"private_egress\" {\n-  count = \"${var.number_of_availability_zones}\"\n+  count = \"${local.number_of_availability_zones}\"\n \n   destination_cidr_block = \"0.0.0.0/0\"\n \n@@ -53,7 +53,7 @@ resource \"aws_route\" \"private_egress\" {\n }\n \n resource \"aws_route_table_association\" \"internal_private\" {\n-  count          = \"${var.number_of_availability_zones}\"\n+  count          = \"${local.number_of_availability_zones}\"\n   subnet_id      = \"${element(aws_subnet.internal.*.id, count.index)}\"\n   route_table_id = \"${element(aws_route_table.private.*.id, count.index)}\"\n }"
      },
      {
        "filename": "terraform/modules/hub/static_ingress.tf",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ module \"static_ingress_ecs_asg\" {\n   cluster             = \"static-ingress\"\n   vpc_id              = \"${aws_vpc.hub.id}\"\n   instance_subnets    = [\"${aws_subnet.internal.*.id}\"]\n-  number_of_instances = \"${var.number_of_availability_zones}\"\n+  number_of_instances = \"${var.number_of_apps}\"\n   use_egress_proxy    = true\n   domain              = \"${local.root_domain}\"\n \n@@ -167,6 +167,11 @@ resource \"aws_lb\" \"static_ingress\" {\n     subnet_id     = \"${element(aws_subnet.ingress.*.id, 1)}\"\n     allocation_id = \"${element(aws_eip.ingress.*.id, 1)}\"\n   }\n+\n+  subnet_mapping {\n+    subnet_id     = \"${element(aws_subnet.ingress.*.id, 2)}\"\n+    allocation_id = \"${element(aws_eip.ingress.*.id, 2)}\"\n+  }\n }\n \n resource \"aws_lb_target_group\" \"static_ingress_http\" {"
      },
      {
        "filename": "terraform/modules/hub/subnets.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ locals {\n }\n \n resource \"aws_subnet\" \"ingress\" {\n-  count             = \"${var.number_of_availability_zones}\"\n+  count             = \"${local.number_of_availability_zones}\"\n   vpc_id            = \"${aws_vpc.hub.id}\"\n   availability_zone = \"${element(local.azs, count.index)}\"\n \n@@ -26,7 +26,7 @@ resource \"aws_subnet\" \"ingress\" {\n }\n \n resource \"aws_subnet\" \"internal\" {\n-  count             = \"${var.number_of_availability_zones}\"\n+  count             = \"${local.number_of_availability_zones}\"\n   vpc_id            = \"${aws_vpc.hub.id}\"\n   availability_zone = \"${element(local.azs, count.index)}\"\n \n@@ -43,7 +43,7 @@ resource \"aws_subnet\" \"internal\" {\n }\n \n resource \"aws_subnet\" \"egress\" {\n-  count             = \"${var.number_of_availability_zones}\"\n+  count             = \"${local.number_of_availability_zones}\"\n   vpc_id            = \"${aws_vpc.hub.id}\"\n   availability_zone = \"${element(local.azs, count.index)}\"\n "
      },
      {
        "filename": "terraform/modules/hub/variables.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -10,7 +10,7 @@ variable \"tools_account_id\" {\n   description = \"AWS account id of the tools account, where docker images will be pulled from\"\n }\n \n-variable \"number_of_availability_zones\" {\n+variable \"number_of_apps\" {\n   default = 2\n }\n \n@@ -25,7 +25,8 @@ variable \"redis_cache_size\" {\n variable \"truststore_password\" {}\n \n locals {\n-  root_domain = \"${replace(var.signin_domain, \"/www[.]/\", \"\")}\"\n+  root_domain                  = \"${replace(var.signin_domain, \"/www[.]/\", \"\")}\"\n+  number_of_availability_zones = 3\n }\n \n variable \"wildcard_cert_arn\" {"
      }
    ],
    "existing_codes": [
      "networking",
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alphagov/verify-infrastructure/commit/70a31f9b9a167e5025bb4099cc584044c47e699b",
    "files": [
      {
        "filename": "dockerfiles/verify-sentry/Dockerfile",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "removed",
        "patch": "@@ -1 +0,0 @@\n-FROM sentry:9.1.2-onbuild"
      },
      {
        "filename": "dockerfiles/verify-sentry/requirements.txt",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "removed",
        "patch": "@@ -1 +0,0 @@\n-https://github.com/getsentry/sentry-auth-github/archive/43f6b270b3fac32326518a78be77562ebe5abacf.zip"
      },
      {
        "filename": "terraform/modules/hub/egress_proxy.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -57,7 +57,6 @@ locals {\n locals {\n   egress_proxy_allowlist_list = [\n     \"o451922\\\\.ingest\\\\.sentry\\\\.io\",                        # Cloud Sentry\n-    \"sentry\\\\.tools\\\\.signin\\\\.service\\\\.gov\\\\.uk\",          # Tools Sentry\n     replace(local.event_emitter_api_gateway[0], \".\", \"\\\\.\"), # API Gateway\n     var.splunk_hostname,                                     # Splunk\n   ]"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/poseidon/terraform-digitalocean-kubernetes/commit/bacda9d75b329997eb849183cf36ff8f97a9ee83",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -37,8 +37,8 @@ variable \"controller_type\" {\n \n variable \"worker_type\" {\n   type        = string\n-  default     = \"s-1vcpu-1gb\"\n-  description = \"Droplet type for workers (e.g. s-1vcpu-1gb, s-1vcpu-2gb, s-2vcpu-2gb)\"\n+  default     = \"s-1vcpu-2gb\"\n+  description = \"Droplet type for workers (e.g. s-1vcpu-2gb, s-2vcpu-2gb)\"\n }\n \n variable \"image\" {"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cloudtruth-demo/ops/commit/3945c8e2bd7a2b7e73169aceae9dc1817ec8292c",
    "files": [
      {
        "filename": "config/atmos/recipes.yml",
        "additions": 15,
        "deletions": 11,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -12,17 +12,9 @@ recipes:\n   default:\n   - atmos-variables\n   - atmos-permissions\n-  - atmos-support\n-  - vpc\n-  - dns\n-  - static-website\n-  - service\n-  - cluster-services\n-  - service-demo1\n-  - eks-bootstrap\n-  eks:\n-    - atmos-variables\n-    - eks-support\n+#  eks:\n+#  - atmos-variables\n+#  - eks-support\n \n # Environment specific overrides for recipes.  You can also put these where you put other\n # overrides, but they are here as a convenience to keep recipe overrides close\n@@ -36,3 +28,15 @@ environments:\n       - atmos-permissions\n       - atmos-support\n       - cloudtruth-access\n+  production:\n+    recipes:\n+      default:\n+        - atmos-support\n+        - vpc\n+        - dns\n+        - static-website\n+        - sample-data\n+      #  - service\n+      #  - cluster-services\n+      #  - service-demo1\n+      #  - eks-bootstrap"
      },
      {
        "filename": "recipes/sample-data.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+// Bucket with some extra sample data for cloudtruth demo\n+resource \"aws_s3_bucket\" \"sample-data\" {\n+  bucket        = \"${var.global_name_prefix}sample-data\"\n+  force_destroy = var.force_destroy_buckets\n+\n+  tags = {\n+    Env    = var.atmos_env\n+    Source = \"atmos\"\n+  }\n+}\n+\n+resource \"aws_s3_bucket_object\" \"sample-json\" {\n+  bucket = aws_s3_bucket.sample-data.bucket\n+  key = \"data/sample.json\"\n+  source = \"../templates/sample.json\"\n+}\n+\n+resource \"aws_s3_bucket_object\" \"sample-yml\" {\n+  bucket = aws_s3_bucket.sample-data.bucket\n+  key = \"data/sample.yml\"\n+  source = \"../templates/sample.yml\"\n+}"
      },
      {
        "filename": "recipes/service-demo1.tf",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -109,27 +109,3 @@ module \"service-demo1\" {\n TMPL\n \n }\n-\n-\n-// Bucket with some extra sample data for cloudtruth demo\n-resource \"aws_s3_bucket\" \"sample-data\" {\n-  bucket        = \"${var.global_name_prefix}sample-data\"\n-  force_destroy = var.force_destroy_buckets\n-\n-  tags = {\n-    Env    = var.atmos_env\n-    Source = \"atmos\"\n-  }\n-}\n-\n-resource \"aws_s3_bucket_object\" \"sample-json\" {\n-  bucket = aws_s3_bucket.sample-data.bucket\n-  key = \"data/sample.json\"\n-  source = \"../templates/sample.json\"\n-}\n-\n-resource \"aws_s3_bucket_object\" \"sample-yml\" {\n-  bucket = aws_s3_bucket.sample-data.bucket\n-  key = \"data/sample.yml\"\n-  source = \"../templates/sample.yml\"\n-}"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/itzik-bd/parking-status/commit/5f9f8fb118a42d7b18ec082be41665ed2b9eb992",
    "files": [
      {
        "filename": "infrastructure/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -24,6 +24,7 @@ locals {\n   nodejs_version = \"nodejs14.x\"\n   resource_prefix = \"${var.app_name}--${var.environment_name}--\"\n   log_retention_days = 7\n+  refresh_delay_seconds = 15\n   authorizer_region = \"us-east-1\"\n }\n "
      },
      {
        "filename": "infrastructure/reasource.lambda-role.tf",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -24,9 +24,8 @@ resource \"aws_iam_role_policy_attachment\" \"iam_for_lambda_policy_attachment\" {\n     \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\",\n     \"arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess\",\n     \"arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess\",\n-    \"arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole\",\n-    \"arn:aws:iam::aws:policy/AmazonSQSFullAccess\", // for SendMessage\n     \"arn:aws:iam::aws:policy/AmazonSNSFullAccess\", // for Publish\n+    \"arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess\", // for invoking step function\n   ])\n \n   role       = aws_iam_role.iam_for_lambda.name"
      },
      {
        "filename": "infrastructure/reasource.sqs-policy.tf",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "status": "removed",
        "patch": "@@ -1,15 +0,0 @@\n-data \"aws_iam_policy_document\" \"sqs-allow-sns\" {\n-  statement {\n-    actions = [\n-      \"sqs:SendMessage\"\n-    ]\n-    principals {\n-      identifiers = [\"sns.amazonaws.com\"]\n-      type = \"Service\"\n-    }\n-    resources = [\n-      \"*\",\n-    ]\n-    effect = \"Allow\"\n-  }\n-}"
      },
      {
        "filename": "infrastructure/reasource.step-function-role.tf",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "status": "added",
        "patch": "@@ -0,0 +1,36 @@\n+resource \"aws_iam_role\" \"iam_for_step_function\" {\n+  name = \"${local.resource_prefix}step-function-role\"\n+  assume_role_policy = jsonencode({\n+    \"Version\": \"2012-10-17\",\n+    \"Statement\": [\n+      {\n+        \"Action\": \"sts:AssumeRole\",\n+        \"Principal\": {\n+          \"Service\": [\n+            \"states.amazonaws.com\",\n+          ]\n+        },\n+        \"Effect\": \"Allow\",\n+        \"Sid\": \"\"\n+      }\n+    ]\n+  })\n+}\n+\n+resource \"aws_iam_role_policy\" \"test_policy\" {\n+  name = \"${local.resource_prefix}step-function-role-policy\"\n+  role = aws_iam_role.iam_for_step_function.id\n+\n+  policy = jsonencode({\n+    Version: \"2012-10-17\",\n+    Statement: [\n+      {\n+        \"Effect\": \"Allow\",\n+        \"Action\": [\n+          \"lambda:InvokeFunction\"\n+        ],\n+        \"Resource\": \"*\"\n+      }\n+    ]\n+  })\n+}"
      },
      {
        "filename": "infrastructure/resource.capture-trigger.tf",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "status": "removed",
        "patch": "@@ -1,44 +0,0 @@\n-data \"archive_file\" \"capture-trigger-code\" {\n-  type        = \"zip\"\n-  source_dir  = \"${path.root}/../lambda/capture-trigger\"\n-  output_path = \"${path.root}/../target/capture-trigger.zip\"\n-}\n-\n-resource \"aws_lambda_function\" \"capture-trigger\" {\n-  filename          = data.archive_file.capture-trigger-code.output_path\n-  source_code_hash  = data.archive_file.capture-trigger-code.output_base64sha256\n-\n-  function_name     = \"${local.resource_prefix}capture-trigger\"\n-  role              = aws_iam_role.iam_for_lambda.arn\n-  handler           = \"lambda.handler\"\n-  runtime           = local.nodejs_version\n-  timeout           = 30\n-\n-  environment {\n-    variables = {\n-      TABLE_NAME = aws_dynamodb_table.ws-table.name,\n-      SNS_TOPIC_ARN = aws_sns_topic.refresh.arn,\n-    }\n-  }\n-}\n-\n-resource \"aws_lambda_event_source_mapping\" \"capture-trigger_event_source\" {\n-  event_source_arn = aws_sqs_queue.trigger-queue.arn\n-  function_name    = aws_lambda_function.capture-trigger.arn\n-}\n-\n-resource \"aws_sqs_queue\" \"trigger-queue\" {\n-  name = \"${local.resource_prefix}trigger-queue\"\n-  policy = data.aws_iam_policy_document.sqs-allow-sns.json\n-  delay_seconds = 15 // to avoid too many frequent updates\n-}\n-resource \"aws_sns_topic_subscription\" \"analyze_finish_to_trigger\" {\n-  topic_arn = aws_sns_topic.analyze-finish.arn\n-  protocol  = \"sqs\"\n-  endpoint  = aws_sqs_queue.trigger-queue.arn\n-}\n-\n-resource \"aws_cloudwatch_log_group\" \"log-retention-capture-trigger\" {\n-  name = \"/aws/lambda/${aws_lambda_function.capture-trigger.function_name}\"\n-  retention_in_days = local.log_retention_days\n-}"
      },
      {
        "filename": "infrastructure/resource.on-client-update.tf",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "status": "added",
        "patch": "@@ -0,0 +1,36 @@\n+data \"archive_file\" \"on-client-update-code\" {\n+  type        = \"zip\"\n+  source_dir  = \"${path.root}/../lambda/on-client-update\"\n+  output_path = \"${path.root}/../target/on-client-update.zip\"\n+}\n+\n+resource \"aws_lambda_function\" \"on-client-update\" {\n+  filename          = data.archive_file.on-client-update-code.output_path\n+  source_code_hash  = data.archive_file.on-client-update-code.output_base64sha256\n+\n+  function_name     = \"${local.resource_prefix}on-client-update\"\n+  role              = aws_iam_role.iam_for_lambda.arn\n+  handler           = \"lambda.handler\"\n+  runtime           = local.nodejs_version\n+  timeout           = 30\n+  reserved_concurrent_executions = 1 # important - there should be single invocation at a time to avoid the need of locks\n+\n+  environment {\n+    variables = {\n+      TABLE_NAME = aws_dynamodb_table.ws-table.name,\n+      SNS_TOPIC_ARN = aws_sns_topic.refresh.arn,\n+    }\n+  }\n+}\n+\n+resource \"aws_lambda_event_source_mapping\" \"ws-table-to-on-client-update\" {\n+  event_source_arn  = aws_dynamodb_table.ws-table.stream_arn\n+  function_name     = aws_lambda_function.on-client-update.arn\n+  starting_position = \"LATEST\"\n+  batch_size = 1\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"log-retention-on-client-update\" {\n+  name = \"/aws/lambda/${aws_lambda_function.on-client-update.function_name}\"\n+  retention_in_days = local.log_retention_days\n+}"
      },
      {
        "filename": "infrastructure/resource.refresh-if-active-clients.tf",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "status": "added",
        "patch": "@@ -0,0 +1,28 @@\n+data \"archive_file\" \"refresh-if-active-clients-code\" {\n+  type        = \"zip\"\n+  source_dir  = \"${path.root}/../lambda/refresh-if-active-clients\"\n+  output_path = \"${path.root}/../target/refresh-if-active-clients.zip\"\n+}\n+\n+resource \"aws_lambda_function\" \"refresh-if-active-clients\" {\n+  filename          = data.archive_file.refresh-if-active-clients-code.output_path\n+  source_code_hash  = data.archive_file.refresh-if-active-clients-code.output_base64sha256\n+\n+  function_name     = \"${local.resource_prefix}refresh-if-active-clients\"\n+  role              = aws_iam_role.iam_for_lambda.arn\n+  handler           = \"lambda.handler\"\n+  runtime           = local.nodejs_version\n+  timeout           = 30\n+\n+  environment {\n+    variables = {\n+      TABLE_NAME = aws_dynamodb_table.ws-table.name,\n+      SNS_TOPIC_ARN = aws_sns_topic.refresh.arn,\n+    }\n+  }\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"log-retention-refresh-if-active-clients\" {\n+  name = \"/aws/lambda/${aws_lambda_function.refresh-if-active-clients.function_name}\"\n+  retention_in_days = local.log_retention_days\n+}"
      },
      {
        "filename": "infrastructure/resource.video-stream-capture.tf",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -34,19 +34,17 @@ resource \"aws_serverlessapplicationrepository_cloudformation_stack\" \"ffmpeg_laye\n   ]\n }\n \n-resource \"aws_lambda_event_source_mapping\" \"video_stream_capture_event_source\" {\n-  event_source_arn = aws_sqs_queue.video-stream-capture-queue.arn\n-  function_name    = aws_lambda_function.video-stream-capture.arn\n+resource \"aws_lambda_permission\" \"video-stream-capture-sns-permission\" {\n+  statement_id  = \"AllowExecutionFromSNS\"\n+  action        = \"lambda:InvokeFunction\"\n+  function_name = aws_lambda_function.video-stream-capture.arn\n+  principal     = \"sns.amazonaws.com\"\n }\n \n-resource \"aws_sqs_queue\" \"video-stream-capture-queue\" {\n-  name = \"${local.resource_prefix}video-stream-capture-queue\"\n-  policy = data.aws_iam_policy_document.sqs-allow-sns.json\n-}\n resource \"aws_sns_topic_subscription\" \"refresh_to_video-stream-capture\" {\n   topic_arn = aws_sns_topic.refresh.arn\n-  protocol  = \"sqs\"\n-  endpoint  = aws_sqs_queue.video-stream-capture-queue.arn\n+  protocol  = \"lambda\"\n+  endpoint  = aws_lambda_function.video-stream-capture.arn\n }\n \n resource \"aws_cloudwatch_log_group\" \"log-retention-video-stream-capture\" {"
      },
      {
        "filename": "infrastructure/resource.wait-and-refresh.tf",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "status": "added",
        "patch": "@@ -0,0 +1,67 @@\n+resource \"aws_sfn_state_machine\" \"wait-and-refresh\" {\n+  name     = \"${local.resource_prefix}wait-and-refresh\"\n+  role_arn = aws_iam_role.iam_for_step_function.arn\n+\n+  definition = <<EOF\n+{\n+  \"Comment\": \"Wait and send to SNS\",\n+  \"StartAt\": \"WaitState\",\n+  \"States\": {\n+    \"WaitState\": {\n+      \"Type\": \"Wait\",\n+      \"Seconds\": ${local.refresh_delay_seconds},\n+      \"Next\": \"Lambda Invoke\"\n+    },\n+    \"Lambda Invoke\": {\n+      \"Type\": \"Task\",\n+      \"Resource\": \"arn:aws:states:::lambda:invoke\",\n+      \"Parameters\": {\n+        \"FunctionName\": \"${aws_lambda_function.refresh-if-active-clients.arn}\"\n+      },\n+      \"End\": true\n+    }\n+  }\n+}\n+EOF\n+}\n+\n+data \"archive_file\" \"trigger-wait-and-refresh-code\" {\n+  type        = \"zip\"\n+  source_dir  = \"${path.root}/../lambda/trigger-wait-and-refresh\"\n+  output_path = \"${path.root}/../target/trigger-wait-and-refresh.zip\"\n+}\n+\n+resource \"aws_lambda_function\" \"trigger-wait-and-refresh\" {\n+  filename          = data.archive_file.trigger-wait-and-refresh-code.output_path\n+  source_code_hash  = data.archive_file.trigger-wait-and-refresh-code.output_base64sha256\n+\n+  function_name     = \"${local.resource_prefix}trigger-wait-and-refresh\"\n+  role              = aws_iam_role.iam_for_lambda.arn\n+  handler           = \"lambda.handler\"\n+  runtime           = local.nodejs_version\n+  timeout           = 30\n+\n+  environment {\n+    variables = {\n+      STEP_FUNCTION_ARN = aws_sfn_state_machine.wait-and-refresh.arn,\n+    }\n+  }\n+}\n+\n+resource \"aws_lambda_permission\" \"trigger-wait-and-refresh-sns-permission\" {\n+  statement_id  = \"AllowExecutionFromSNS\"\n+  action        = \"lambda:InvokeFunction\"\n+  function_name = aws_lambda_function.trigger-wait-and-refresh.arn\n+  principal     = \"sns.amazonaws.com\"\n+}\n+\n+resource \"aws_sns_topic_subscription\" \"analyze_finish_to_trigger\" {\n+  topic_arn = aws_sns_topic.analyze-finish.arn\n+  protocol  = \"lambda\"\n+  endpoint  = aws_lambda_function.trigger-wait-and-refresh.arn\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"log-retention-trigger-wait-and-refresh\" {\n+  name = \"/aws/lambda/${aws_lambda_function.trigger-wait-and-refresh.function_name}\"\n+  retention_in_days = local.log_retention_days\n+}"
      },
      {
        "filename": "infrastructure/resource.ws-notify-clients.tf",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -22,24 +22,22 @@ resource \"aws_lambda_function\" \"ws-notify-clients\" {\n   }\n }\n \n-resource \"aws_lambda_event_source_mapping\" \"ws_notify_clients_event_source\" {\n-  event_source_arn = aws_sqs_queue.notify-clients.arn\n-  function_name    = aws_lambda_function.ws-notify-clients.arn\n+resource \"aws_lambda_permission\" \"notify-clients-sns-permission-from-analyze-finish\" {\n+  statement_id  = \"AllowExecutionFromSNS\"\n+  action        = \"lambda:InvokeFunction\"\n+  function_name = aws_lambda_function.ws-notify-clients.arn\n+  principal     = \"sns.amazonaws.com\"\n }\n \n-resource \"aws_sqs_queue\" \"notify-clients\" {\n-  name = \"${local.resource_prefix}notify-clients-queue\"\n-  policy = data.aws_iam_policy_document.sqs-allow-sns.json\n-}\n resource \"aws_sns_topic_subscription\" \"analyze_finish_to_notify_clients\" {\n   topic_arn = aws_sns_topic.analyze-finish.arn\n-  protocol  = \"sqs\"\n-  endpoint  = aws_sqs_queue.notify-clients.arn\n+  protocol  = \"lambda\"\n+  endpoint  = aws_lambda_function.ws-notify-clients.arn\n }\n resource \"aws_sns_topic_subscription\" \"refresh_to_notify_clients\" {\n   topic_arn = aws_sns_topic.refresh.arn\n-  protocol  = \"sqs\"\n-  endpoint  = aws_sqs_queue.notify-clients.arn\n+  protocol  = \"lambda\"\n+  endpoint  = aws_lambda_function.ws-notify-clients.arn\n }\n \n resource \"aws_cloudwatch_log_group\" \"log-retention-ws-notify-clients\" {"
      },
      {
        "filename": "infrastructure/resource.ws-on-connect.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -17,7 +17,6 @@ resource \"aws_lambda_function\" \"ws-on-connect\" {\n   environment {\n     variables = {\n       TABLE_NAME = aws_dynamodb_table.ws-table.name\n-      SQS_TRIGGER_URL = aws_sqs_queue.trigger-queue.url\n     }\n   }\n }"
      },
      {
        "filename": "infrastructure/resource.ws-table.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -4,6 +4,8 @@ resource \"aws_dynamodb_table\" \"ws-table\" {\n   read_capacity  = 1\n   write_capacity = 1\n   hash_key       = \"connectionId\"\n+  stream_enabled = true\n+  stream_view_type = \"KEYS_ONLY\"\n \n   attribute {\n     name = \"connectionId\""
      },
      {
        "filename": "lambda/on-client-update/lambda.js",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "status": "added",
        "patch": "@@ -0,0 +1,55 @@\n+const AWS = require('aws-sdk');\n+\n+const ddb = new AWS.DynamoDB.DocumentClient({ apiVersion: '2012-08-10', region: process.env.AWS_REGION });\n+const sns = new AWS.SNS({ apiVersion: '2010-03-31' });\n+\n+const SNS_TOPIC_ARN = process.env.SNS_TOPIC_ARN;\n+const TABLE_NAME = process.env.TABLE_NAME;\n+\n+exports.handler = async (event) => {\n+    console.log(JSON.stringify(event));\n+\n+    // skip REMOVE row event from dynamo DB\n+    if (event?.Records[0]?.eventName === 'REMOVE') {\n+        console.log('got remove row event from DynamoDB - skip trigger');\n+        return;\n+    }\n+\n+    let scanResult;\n+\n+    try {\n+        scanResult = await ddb.scan({\n+            TableName: TABLE_NAME,\n+            Select: \"COUNT\"\n+        }).promise();\n+    } catch (e) {\n+        return { statusCode: 500, body: e.stack };\n+    }\n+\n+    let numberOfConnections = scanResult['Count'];\n+\n+    if (numberOfConnections === 0) {\n+        console.log('no connection present - skip trigger');\n+        return;\n+    }\n+\n+    if (numberOfConnections > 1) {\n+        console.log(`there are currently ${numberOfConnections} active connection - skip trigger (assuming it isn't the first)`);\n+        return;\n+    }\n+\n+    console.log(`triggering as this is the first active connection`);\n+    const message = {type: 'loading'};\n+    let result;\n+    try {\n+        result = await sns.publish({\n+            Message: JSON.stringify(message),\n+            TopicArn: SNS_TOPIC_ARN\n+        }).promise();\n+    } catch (e) {\n+        console.log('failed to send message to SNS', e);\n+        return { statusCode: 500, body: e.stack };\n+    }\n+\n+    console.log(`message was sent to SNS (message id = ${result.MessageId})`);\n+};"
      },
      {
        "filename": "lambda/refresh-if-active-clients/lambda.js",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "status": "renamed",
        "patch": "@@ -6,23 +6,28 @@ const sns = new AWS.SNS({ apiVersion: '2010-03-31' });\n const SNS_TOPIC_ARN = process.env.SNS_TOPIC_ARN;\n const TABLE_NAME = process.env.TABLE_NAME;\n \n-exports.handler = async (_event) => {\n-    let connectionData;\n+exports.handler = async (event) => {\n+    console.log(JSON.stringify(event));\n+\n+    let scanResult;\n \n     try {\n-        connectionData = await ddb.scan({ TableName: TABLE_NAME, ProjectionExpression: 'connectionId' }).promise();\n+        scanResult = await ddb.scan({\n+            TableName: TABLE_NAME,\n+            Select: \"COUNT\"\n+        }).promise();\n     } catch (e) {\n         return { statusCode: 500, body: e.stack };\n     }\n \n-    const numberOfConnections = connectionData.Items.length;\n+    let numberOfConnections = scanResult['Count'];\n \n     if (numberOfConnections === 0) {\n         console.log('no connection present - skip trigger');\n         return;\n     }\n \n-    console.log(`triggering as there are ${numberOfConnections} active connections`);\n+    console.log(`triggering as there are ${numberOfConnections} connections`);\n     const message = {type: 'loading'};\n     let result;\n     try {"
      },
      {
        "filename": "lambda/trigger-wait-and-refresh/lambda.js",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+const AWS = require('aws-sdk');\n+\n+const stepFunctions = new AWS.StepFunctions();\n+\n+const STEP_FUNCTION_ARN = process.env.STEP_FUNCTION_ARN;\n+\n+exports.handler = async (event) => {\n+    console.log(JSON.stringify(event));\n+\n+    console.log(`invoking step function ${STEP_FUNCTION_ARN}`);\n+    try {\n+        await stepFunctions.startExecution({\n+            stateMachineArn: STEP_FUNCTION_ARN,\n+            input: JSON.stringify({})\n+        }).promise();\n+    } catch (e) {\n+        console.log('failed to start step function execution', e);\n+        return { statusCode: 500, body: e.stack };\n+    }\n+\n+    console.log(`step function execution was started`);\n+};"
      },
      {
        "filename": "lambda/ws-notify-clients/lambda.js",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -45,12 +45,7 @@ exports.handler = async event => {\n };\n \n function extractMessage(event) {\n-    let data = JSON.parse(event.Records[0].body); // assuming this is already stringified JSON\n-\n-    // from SNS\n-    if (data?.Type === \"Notification\") {\n-        data = JSON.parse(data.Message); // assuming this is already stringified JSON\n-    }\n+    let data = JSON.parse(event.Records[0].Sns.Message); // assuming this is already stringified JSON\n \n     // from lambda\n     if (data?.responsePayload) {"
      },
      {
        "filename": "lambda/ws-on-connect/lambda.js",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -1,9 +1,7 @@\n const AWS = require('aws-sdk');\n \n const ddb = new AWS.DynamoDB.DocumentClient({ apiVersion: '2012-08-10', region: process.env.AWS_REGION });\n-const sqs = new AWS.SQS({ apiVersion: '2012-11-05' });\n \n-const SQS_TRIGGER_URL = process.env.SQS_TRIGGER_URL;\n const TABLE_NAME = process.env.TABLE_NAME;\n \n exports.handler = async event => {\n@@ -25,19 +23,5 @@ exports.handler = async event => {\n     }\n \n     console.log(`connected`);\n-\n-    console.log(`pushing message to SQS ${SQS_TRIGGER_URL}`);\n-    const message = {};\n-    try {\n-        let result = await sqs.sendMessage({\n-            MessageBody: JSON.stringify(message),\n-            QueueUrl: SQS_TRIGGER_URL\n-        }).promise();\n-        console.log(`message was sent to SQS (message id = ${result.MessageId})`);\n-    } catch (e) {\n-        console.warn('failed to send message to SQS', e);\n-    }\n-\n-\n     return { statusCode: 200, body: 'Connected.' };\n };"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/dylanmtaylor/dylanmtaylor-terraform-aws/commit/44016d6a8e496b69308a81e88af8c9ef8b710ab3",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -142,7 +142,7 @@ resource \"aws_instance\" \"dylanmtaylor\" {\n   user_data = file(\"${path.module}/dylanmtaylor_cloudinit.yml.tpl\")\n \n   root_block_device {\n-    volume_size           = 20\n+    volume_size           = 15\n     volume_type           = \"gp3\"\n     iops                  = 3000\n     throughput            = 125"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ministryofjustice/modernisation-platform-environments/commit/ec5ec7bac99558a4e95e95788f846eb618edb861",
    "files": [
      {
        "filename": "terraform/environments/ppud/ppud_data_transfer_instance.tf",
        "additions": 155,
        "deletions": 155,
        "changes": 310,
        "status": "modified",
        "patch": "@@ -1,155 +1,155 @@\n-data \"aws_ami\" \"ubuntu\" {\n-  most_recent = true\n-\n-  filter {\n-    name   = \"name\"\n-    values = [\"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*\"]\n-  }\n-\n-  filter {\n-    name   = \"virtualization-type\"\n-    values = [\"hvm\"]\n-  }\n-\n-  owners = [\"099720109477\"] # Canonical\n-}\n-\n-data \"aws_subnet\" \"private_az_a\" {\n-  tags = {\n-    Name = \"${local.vpc_name}-${local.environment}-${local.subnet_set}-private-${local.region}a\"\n-  }\n-}\n-\n-resource \"aws_security_group\" \"ppud_data_transfer\" {\n-  description = \"Security group for the ppud data transer instance\"\n-  name        = \"data-transfer-${local.application_name}\"\n-  vpc_id      = local.vpc_id\n-}\n-\n-resource \"aws_security_group_rule\" \"ppud_data_transfer_http_egress\" {\n-  security_group_id = aws_security_group.ppud_data_transfer.id\n-\n-  description = \"ppud_data_transfer_http_egress\"\n-  type        = \"egress\"\n-  from_port   = \"80\"\n-  to_port     = \"80\"\n-  protocol    = \"TCP\"\n-  cidr_blocks = [\"0.0.0.0/0\"]\n-}\n-\n-resource \"aws_security_group_rule\" \"ppud_data_transfer_https_egress\" {\n-  security_group_id = aws_security_group.ppud_data_transfer.id\n-\n-  description = \"ppud_data_transfer_https_egress\"\n-  type        = \"egress\"\n-  from_port   = \"443\"\n-  to_port     = \"443\"\n-  protocol    = \"TCP\"\n-  cidr_blocks = [\"0.0.0.0/0\"]\n-}\n-\n-data \"aws_iam_policy_document\" \"ppud_data_transfer_assume_policy_document\" {\n-  statement {\n-    actions = [\n-      \"sts:AssumeRole\",\n-    ]\n-    principals {\n-      type        = \"Service\"\n-      identifiers = [\"ec2.amazonaws.com\"]\n-    }\n-  }\n-}\n-\n-resource \"aws_iam_role\" \"ppud_data_transfer_role\" {\n-  name               = \"data-transfer-${local.application_name}\"\n-  path               = \"/\"\n-  assume_role_policy = data.aws_iam_policy_document.ppud_data_transfer_assume_policy_document.json\n-\n-  tags = merge(\n-    local.tags,\n-    {\n-      Name = \"data-transfer-${local.application_name}\"\n-    }\n-  )\n-}\n-\n-resource \"aws_iam_role_policy_attachment\" \"ppud_data_transfer_managed\" {\n-  policy_arn = \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\"\n-  role       = aws_iam_role.ppud_data_transfer_role.name\n-}\n-\n-#wildcards permissible read access to specific buckets\n-#tfsec:ignore:aws-iam-no-policy-wildcards\n-data \"aws_iam_policy_document\" \"ppud_data_transfer_ssm_s3_policy_document\" {\n-\n-  statement {\n-    effect = \"Allow\"\n-    actions = [\n-      \"s3:GetObject\"\n-    ]\n-    resources = [\n-      \"arn:aws:s3:::aws-ssm-${local.region}/*\",\n-      \"arn:aws:s3:::aws-windows-downloads-${local.region}/*\",\n-      \"arn:aws:s3:::amazon-ssm-${local.region}/*\",\n-      \"arn:aws:s3:::amazon-ssm-packages-${local.region}/*\",\n-      \"arn:aws:s3:::${local.region}-birdwatcher-prod/*\",\n-      \"arn:aws:s3:::aws-ssm-distributor-file-${local.region}/*\",\n-      \"arn:aws:s3:::aws-ssm-document-attachments-${local.region}/*\",\n-      \"arn:aws:s3:::patch-baseline-snapshot-${local.region}/*\"\n-    ]\n-  }\n-}\n-\n-resource \"aws_iam_policy\" \"ppud_data_transfer_ssm_s3_policy\" {\n-  name   = \"ppud_data_transfer_ssm_s3\"\n-  policy = data.aws_iam_policy_document.ppud_data_transfer_ssm_s3_policy_document.json\n-}\n-\n-resource \"aws_iam_role_policy_attachment\" \"ppud_data_transfer_host_ssm_s3\" {\n-  policy_arn = aws_iam_policy.ppud_data_transfer_ssm_s3_policy.arn\n-  role       = aws_iam_role.ppud_data_transfer_role.name\n-}\n-\n-resource \"aws_iam_instance_profile\" \"ppud_data_transfer_profile\" {\n-  name = \"data-transfer-${local.application_name}-ec2-profile\"\n-  role = aws_iam_role.ppud_data_transfer_role.name\n-  path = \"/\"\n-}\n-\n-resource \"aws_key_pair\" \"doakley\" {\n-  key_name   = \"doakley\"\n-  public_key = \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEU5QgCe9tiwCmZxZIx0E6n9It3Xb9oO5bu30rGRv9Vm darren.oakley@digital.justice.gov.uk\"\n-}\n-\n-resource \"aws_instance\" \"ppud_data_transfer\" {\n-  instance_type               = \"t3.micro\"\n-  ami                         = data.aws_ami.ubuntu.id\n-  vpc_security_group_ids      = [aws_security_group.ppud_data_transfer.id]\n-  monitoring                  = true\n-  associate_public_ip_address = false\n-  ebs_optimized               = true\n-  subnet_id                   = data.aws_subnet.private_az_a.id\n-  key_name                    = aws_key_pair.doakley.key_name\n-  iam_instance_profile        = aws_iam_instance_profile.ppud_data_transfer_profile.id\n-\n-  metadata_options {\n-    http_tokens   = \"required\"\n-    http_endpoint = \"enabled\"\n-  }\n-\n-  root_block_device {\n-    encrypted   = true\n-    volume_size = 100\n-    volume_type = \"standard\"\n-    tags = {\n-      Name = \"root-block-device-data-transfer-${local.application_name}\"\n-    }\n-  }\n-\n-  tags = merge(\n-    local.tags,\n-    {\n-      Name = \"data-transfer-${local.application_name}\"\n-    }\n-  )\n-}\n+# data \"aws_ami\" \"ubuntu\" {\n+#   most_recent = true\n+\n+#   filter {\n+#     name   = \"name\"\n+#     values = [\"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*\"]\n+#   }\n+\n+#   filter {\n+#     name   = \"virtualization-type\"\n+#     values = [\"hvm\"]\n+#   }\n+\n+#   owners = [\"099720109477\"] # Canonical\n+# }\n+\n+# data \"aws_subnet\" \"private_az_a\" {\n+#   tags = {\n+#     Name = \"${local.vpc_name}-${local.environment}-${local.subnet_set}-private-${local.region}a\"\n+#   }\n+# }\n+\n+# resource \"aws_security_group\" \"ppud_data_transfer\" {\n+#   description = \"Security group for the ppud data transer instance\"\n+#   name        = \"data-transfer-${local.application_name}\"\n+#   vpc_id      = local.vpc_id\n+# }\n+\n+# resource \"aws_security_group_rule\" \"ppud_data_transfer_http_egress\" {\n+#   security_group_id = aws_security_group.ppud_data_transfer.id\n+\n+#   description = \"ppud_data_transfer_http_egress\"\n+#   type        = \"egress\"\n+#   from_port   = \"80\"\n+#   to_port     = \"80\"\n+#   protocol    = \"TCP\"\n+#   cidr_blocks = [\"0.0.0.0/0\"]\n+# }\n+\n+# resource \"aws_security_group_rule\" \"ppud_data_transfer_https_egress\" {\n+#   security_group_id = aws_security_group.ppud_data_transfer.id\n+\n+#   description = \"ppud_data_transfer_https_egress\"\n+#   type        = \"egress\"\n+#   from_port   = \"443\"\n+#   to_port     = \"443\"\n+#   protocol    = \"TCP\"\n+#   cidr_blocks = [\"0.0.0.0/0\"]\n+# }\n+\n+# data \"aws_iam_policy_document\" \"ppud_data_transfer_assume_policy_document\" {\n+#   statement {\n+#     actions = [\n+#       \"sts:AssumeRole\",\n+#     ]\n+#     principals {\n+#       type        = \"Service\"\n+#       identifiers = [\"ec2.amazonaws.com\"]\n+#     }\n+#   }\n+# }\n+\n+# resource \"aws_iam_role\" \"ppud_data_transfer_role\" {\n+#   name               = \"data-transfer-${local.application_name}\"\n+#   path               = \"/\"\n+#   assume_role_policy = data.aws_iam_policy_document.ppud_data_transfer_assume_policy_document.json\n+\n+#   tags = merge(\n+#     local.tags,\n+#     {\n+#       Name = \"data-transfer-${local.application_name}\"\n+#     }\n+#   )\n+# }\n+\n+# resource \"aws_iam_role_policy_attachment\" \"ppud_data_transfer_managed\" {\n+#   policy_arn = \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\"\n+#   role       = aws_iam_role.ppud_data_transfer_role.name\n+# }\n+\n+# #wildcards permissible read access to specific buckets\n+# #tfsec:ignore:aws-iam-no-policy-wildcards\n+# data \"aws_iam_policy_document\" \"ppud_data_transfer_ssm_s3_policy_document\" {\n+\n+#   statement {\n+#     effect = \"Allow\"\n+#     actions = [\n+#       \"s3:GetObject\"\n+#     ]\n+#     resources = [\n+#       \"arn:aws:s3:::aws-ssm-${local.region}/*\",\n+#       \"arn:aws:s3:::aws-windows-downloads-${local.region}/*\",\n+#       \"arn:aws:s3:::amazon-ssm-${local.region}/*\",\n+#       \"arn:aws:s3:::amazon-ssm-packages-${local.region}/*\",\n+#       \"arn:aws:s3:::${local.region}-birdwatcher-prod/*\",\n+#       \"arn:aws:s3:::aws-ssm-distributor-file-${local.region}/*\",\n+#       \"arn:aws:s3:::aws-ssm-document-attachments-${local.region}/*\",\n+#       \"arn:aws:s3:::patch-baseline-snapshot-${local.region}/*\"\n+#     ]\n+#   }\n+# }\n+\n+# resource \"aws_iam_policy\" \"ppud_data_transfer_ssm_s3_policy\" {\n+#   name   = \"ppud_data_transfer_ssm_s3\"\n+#   policy = data.aws_iam_policy_document.ppud_data_transfer_ssm_s3_policy_document.json\n+# }\n+\n+# resource \"aws_iam_role_policy_attachment\" \"ppud_data_transfer_host_ssm_s3\" {\n+#   policy_arn = aws_iam_policy.ppud_data_transfer_ssm_s3_policy.arn\n+#   role       = aws_iam_role.ppud_data_transfer_role.name\n+# }\n+\n+# resource \"aws_iam_instance_profile\" \"ppud_data_transfer_profile\" {\n+#   name = \"data-transfer-${local.application_name}-ec2-profile\"\n+#   role = aws_iam_role.ppud_data_transfer_role.name\n+#   path = \"/\"\n+# }\n+\n+# resource \"aws_key_pair\" \"doakley\" {\n+#   key_name   = \"doakley\"\n+#   public_key = \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEU5QgCe9tiwCmZxZIx0E6n9It3Xb9oO5bu30rGRv9Vm darren.oakley@digital.justice.gov.uk\"\n+# }\n+\n+# resource \"aws_instance\" \"ppud_data_transfer\" {\n+#   instance_type               = \"t3.micro\"\n+#   ami                         = data.aws_ami.ubuntu.id\n+#   vpc_security_group_ids      = [aws_security_group.ppud_data_transfer.id]\n+#   monitoring                  = true\n+#   associate_public_ip_address = false\n+#   ebs_optimized               = true\n+#   subnet_id                   = data.aws_subnet.private_az_a.id\n+#   key_name                    = aws_key_pair.doakley.key_name\n+#   iam_instance_profile        = aws_iam_instance_profile.ppud_data_transfer_profile.id\n+\n+#   metadata_options {\n+#     http_tokens   = \"required\"\n+#     http_endpoint = \"enabled\"\n+#   }\n+\n+#   root_block_device {\n+#     encrypted   = true\n+#     volume_size = 100\n+#     volume_type = \"standard\"\n+#     tags = {\n+#       Name = \"root-block-device-data-transfer-${local.application_name}\"\n+#     }\n+#   }\n+\n+#   tags = merge(\n+#     local.tags,\n+#     {\n+#       Name = \"data-transfer-${local.application_name}\"\n+#     }\n+#   )\n+# }"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ckilpatrick20/github-actions/commit/1ab89439a42782f55a2ad591530118dbabd9a447",
    "files": [
      {
        "filename": "example/terraform/directory/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@ provider \"aws\" {\n \n resource \"aws_instance\" \"example\" {\n   ami           = \"ami-0323c3dd2da7fb37d\"\n-  instance_type = \"t3.micro\"\n+  instance_type = \"t2.micro\"\n \n   root_block_device {\n     encrypted = true"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/guillaumekh/wg-terraform-template/commit/effee9cbc473af5d07cfc3aacece50aa6e59753a",
    "files": [
      {
        "filename": "vpn.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -83,7 +83,7 @@ data \"template_cloudinit_config\" \"user_data\" {\n # Create EC2 instance\n resource \"aws_instance\" \"aws-instance\" {\n   ami           = data.aws_ami.latest-ubuntu-focal-fossa-lts-ami.image_id\n-  instance_type = \"t3a.nano\"\n+  instance_type = \"t4g.nano\"\n   vpc_security_group_ids  = [ aws_security_group.security-group.id ]\n   ipv6_address_count  = 1\n   timeouts {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/poldi2015/chat-app/commit/cb45bf17da799afaa789206e3fcd39d9403e0567",
    "files": [
      {
        "filename": "chat-app/terraform/dynamodb.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,7 +1,8 @@\n resource \"aws_dynamodb_table\" \"chat-app-messages\" {\n   name           = \"ChatAppMessages\"\n-  read_capacity  = 5\n-  write_capacity = 5\n+  billing_mode = \"PAY_PER_REQUEST\"\n+  write_capacity = 2\n+  read_capacity = 2\n \n   hash_key       = \"connectionId\"\n "
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jsnider-mtu/tfw-eks/commit/daaceda701c88a0ad7162425f57bd9cabf6d8d9c",
    "files": [
      {
        "filename": "terraform.tfstate",
        "additions": 3,
        "deletions": 2360,
        "changes": 2363,
        "status": "modified",
        "patch": null
      },
      {
        "filename": "terraform.tfstate.backup",
        "additions": 9,
        "deletions": 2210,
        "changes": 2219,
        "status": "modified",
        "patch": "@@ -1,1811 +1,30 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"1.0.11\",\n-  \"serial\": 186,\n+  \"serial\": 250,\n   \"lineage\": \"c1e6d845-155f-de79-d622-aeb581cc0a3a\",\n-  \"outputs\": {\n-    \"efs_dns\": {\n-      \"value\": \"fs-0e7ee90e0e9e29a3f.efs.us-east-1.amazonaws.com\",\n-      \"type\": \"string\"\n-    }\n-  },\n-  \"resources\": [\n-    {\n-      \"mode\": \"data\",\n-      \"type\": \"aws_iam_policy_document\",\n-      \"name\": \"kms\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"16255615\",\n-            \"json\": \"{\\n  \\\"Version\\\": \\\"2012-10-17\\\",\\n  \\\"Statement\\\": [\\n    {\\n      \\\"Sid\\\": \\\"0\\\",\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": \\\"kms:*\\\",\\n      \\\"Resource\\\": \\\"*\\\",\\n      \\\"Principal\\\": {\\n        \\\"AWS\\\": [\\n          \\\"arn:aws:iam::556005419303:user/terraform\\\",\\n          \\\"arn:aws:iam::556005419303:role/liberland-cluster-role\\\"\\n        ]\\n      }\\n    }\\n  ]\\n}\",\n-            \"override_json\": null,\n-            \"override_policy_documents\": null,\n-            \"policy_id\": null,\n-            \"source_json\": null,\n-            \"source_policy_documents\": null,\n-            \"statement\": [\n-              {\n-                \"actions\": [\n-                  \"kms:*\"\n-                ],\n-                \"condition\": [],\n-                \"effect\": \"Allow\",\n-                \"not_actions\": [],\n-                \"not_principals\": [],\n-                \"not_resources\": [],\n-                \"principals\": [\n-                  {\n-                    \"identifiers\": [\n-                      \"arn:aws:iam::556005419303:role/liberland-cluster-role\",\n-                      \"arn:aws:iam::556005419303:user/terraform\"\n-                    ],\n-                    \"type\": \"AWS\"\n-                  }\n-                ],\n-                \"resources\": [\n-                  \"*\"\n-                ],\n-                \"sid\": \"0\"\n-              }\n-            ],\n-            \"version\": \"2012-10-17\"\n-          },\n-          \"sensitive_attributes\": []\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"data\",\n-      \"type\": \"tls_certificate\",\n-      \"name\": \"cert\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/tls\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"certificates\": [\n-              {\n-                \"is_ca\": true,\n-                \"issuer\": \"OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\\\, Inc.,C=US\",\n-                \"not_after\": \"2034-06-28T17:39:16Z\",\n-                \"not_before\": \"2009-09-02T00:00:00Z\",\n-                \"public_key_algorithm\": \"RSA\",\n-                \"serial_number\": \"12037640545166866303\",\n-                \"sha1_fingerprint\": \"9e99a48a9960b14926bb7f3b02e22da2b0ab7280\",\n-                \"signature_algorithm\": \"SHA256-RSA\",\n-                \"subject\": \"CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\\\, Inc.,L=Scottsdale,ST=Arizona,C=US\",\n-                \"version\": 3\n-              },\n-              {\n-                \"is_ca\": true,\n-                \"issuer\": \"CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\\\, Inc.,L=Scottsdale,ST=Arizona,C=US\",\n-                \"not_after\": \"2037-12-31T01:00:00Z\",\n-                \"not_before\": \"2015-05-25T12:00:00Z\",\n-                \"public_key_algorithm\": \"RSA\",\n-                \"serial_number\": \"144918191876577076464031512351042010504348870\",\n-                \"sha1_fingerprint\": \"06b25927c42a721631c1efd9431e648fa62e1e39\",\n-                \"signature_algorithm\": \"SHA256-RSA\",\n-                \"subject\": \"CN=Amazon Root CA 1,O=Amazon,C=US\",\n-                \"version\": 3\n-              },\n-              {\n-                \"is_ca\": true,\n-                \"issuer\": \"CN=Amazon Root CA 1,O=Amazon,C=US\",\n-                \"not_after\": \"2025-10-19T00:00:00Z\",\n-                \"not_before\": \"2015-10-22T00:00:00Z\",\n-                \"public_key_algorithm\": \"RSA\",\n-                \"serial_number\": \"144918209630989264145272943054026349679957517\",\n-                \"sha1_fingerprint\": \"917e732d330f9a12404f73d8bea36948b929dffc\",\n-                \"signature_algorithm\": \"SHA256-RSA\",\n-                \"subject\": \"CN=Amazon,OU=Server CA 1B,O=Amazon,C=US\",\n-                \"version\": 3\n-              },\n-              {\n-                \"is_ca\": false,\n-                \"issuer\": \"CN=Amazon,OU=Server CA 1B,O=Amazon,C=US\",\n-                \"not_after\": \"2022-07-11T23:59:59Z\",\n-                \"not_before\": \"2021-06-12T00:00:00Z\",\n-                \"public_key_algorithm\": \"RSA\",\n-                \"serial_number\": \"17394337148501369979403692734506650154\",\n-                \"sha1_fingerprint\": \"e895c9a1be77b6c6300dc2525548225a675b1955\",\n-                \"signature_algorithm\": \"SHA256-RSA\",\n-                \"subject\": \"CN=oidc.eks.us-east-1.amazonaws.com\",\n-                \"version\": 3\n-              }\n-            ],\n-            \"id\": \"2021-11-30 07:11:49.772134778 +0000 UTC\",\n-            \"url\": \"https://oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094\",\n-            \"verify_chain\": true\n-          },\n-          \"sensitive_attributes\": []\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_efs_backup_policy\",\n-      \"name\": \"efs_backup\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"backup_policy\": [\n-              {\n-                \"status\": \"ENABLED\"\n-              }\n-            ],\n-            \"file_system_id\": \"fs-0e7ee90e0e9e29a3f\",\n-            \"id\": \"fs-0e7ee90e0e9e29a3f\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_efs_file_system.liberland\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_efs_file_system\",\n-      \"name\": \"liberland\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:elasticfilesystem:us-east-1:556005419303:file-system/fs-0e7ee90e0e9e29a3f\",\n-            \"availability_zone_id\": \"\",\n-            \"availability_zone_name\": \"\",\n-            \"creation_token\": \"liberland\",\n-            \"dns_name\": \"fs-0e7ee90e0e9e29a3f.efs.us-east-1.amazonaws.com\",\n-            \"encrypted\": true,\n-            \"id\": \"fs-0e7ee90e0e9e29a3f\",\n-            \"kms_key_id\": \"arn:aws:kms:us-east-1:556005419303:key/a4f946f7-78f3-4b79-9e91-bfdaa3ccbc64\",\n-            \"lifecycle_policy\": [\n-              {\n-                \"transition_to_ia\": \"AFTER_30_DAYS\",\n-                \"transition_to_primary_storage_class\": \"\"\n-              },\n-              {\n-                \"transition_to_ia\": \"\",\n-                \"transition_to_primary_storage_class\": \"AFTER_1_ACCESS\"\n-              }\n-            ],\n-            \"number_of_mount_targets\": 0,\n-            \"owner_id\": \"556005419303\",\n-            \"performance_mode\": \"generalPurpose\",\n-            \"provisioned_throughput_in_mibps\": 0,\n-            \"size_in_bytes\": [\n-              {\n-                \"value\": 6144,\n-                \"value_in_ia\": 0,\n-                \"value_in_standard\": 6144\n-              }\n-            ],\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-efs\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-efs\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"throughput_mode\": \"bursting\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\"\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_efs_mount_target\",\n-      \"name\": \"a\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"availability_zone_id\": \"use1-az4\",\n-            \"availability_zone_name\": \"us-east-1a\",\n-            \"dns_name\": \"fs-0e7ee90e0e9e29a3f.efs.us-east-1.amazonaws.com\",\n-            \"file_system_arn\": \"arn:aws:elasticfilesystem:us-east-1:556005419303:file-system/fs-0e7ee90e0e9e29a3f\",\n-            \"file_system_id\": \"fs-0e7ee90e0e9e29a3f\",\n-            \"id\": \"fsmt-0ec533afc856f05e3\",\n-            \"ip_address\": \"10.0.0.38\",\n-            \"mount_target_dns_name\": \"us-east-1a.fs-0e7ee90e0e9e29a3f.efs.us-east-1.amazonaws.com\",\n-            \"network_interface_id\": \"eni-0be469319decd482c\",\n-            \"owner_id\": \"556005419303\",\n-            \"security_groups\": [\n-              \"sg-097126d49e353934b\"\n-            ],\n-            \"subnet_id\": \"subnet-0177bb0654af00d98\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_efs_file_system.liberland\",\n-            \"aws_subnet.private-a\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_efs_mount_target\",\n-      \"name\": \"b\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"availability_zone_id\": \"use1-az6\",\n-            \"availability_zone_name\": \"us-east-1b\",\n-            \"dns_name\": \"fs-0e7ee90e0e9e29a3f.efs.us-east-1.amazonaws.com\",\n-            \"file_system_arn\": \"arn:aws:elasticfilesystem:us-east-1:556005419303:file-system/fs-0e7ee90e0e9e29a3f\",\n-            \"file_system_id\": \"fs-0e7ee90e0e9e29a3f\",\n-            \"id\": \"fsmt-0789d2543446c7201\",\n-            \"ip_address\": \"10.0.1.84\",\n-            \"mount_target_dns_name\": \"us-east-1b.fs-0e7ee90e0e9e29a3f.efs.us-east-1.amazonaws.com\",\n-            \"network_interface_id\": \"eni-035f3ce8e00f97c7e\",\n-            \"owner_id\": \"556005419303\",\n-            \"security_groups\": [\n-              \"sg-097126d49e353934b\"\n-            ],\n-            \"subnet_id\": \"subnet-0f0758825065051d8\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_efs_file_system.liberland\",\n-            \"aws_subnet.private-b\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_efs_mount_target\",\n-      \"name\": \"c\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"availability_zone_id\": \"use1-az1\",\n-            \"availability_zone_name\": \"us-east-1c\",\n-            \"dns_name\": \"fs-0e7ee90e0e9e29a3f.efs.us-east-1.amazonaws.com\",\n-            \"file_system_arn\": \"arn:aws:elasticfilesystem:us-east-1:556005419303:file-system/fs-0e7ee90e0e9e29a3f\",\n-            \"file_system_id\": \"fs-0e7ee90e0e9e29a3f\",\n-            \"id\": \"fsmt-09cb6fd7992cbccd2\",\n-            \"ip_address\": \"10.0.2.111\",\n-            \"mount_target_dns_name\": \"us-east-1c.fs-0e7ee90e0e9e29a3f.efs.us-east-1.amazonaws.com\",\n-            \"network_interface_id\": \"eni-0d3912988d079ba1b\",\n-            \"owner_id\": \"556005419303\",\n-            \"security_groups\": [\n-              \"sg-097126d49e353934b\"\n-            ],\n-            \"subnet_id\": \"subnet-039631a5568a0464f\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_efs_file_system.liberland\",\n-            \"aws_subnet.private-c\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_eip\",\n-      \"name\": \"ngw-a\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"address\": null,\n-            \"allocation_id\": null,\n-            \"associate_with_private_ip\": null,\n-            \"association_id\": \"eipassoc-058ca78fc34c9c5a4\",\n-            \"carrier_ip\": \"\",\n-            \"customer_owned_ip\": \"\",\n-            \"customer_owned_ipv4_pool\": \"\",\n-            \"domain\": \"vpc\",\n-            \"id\": \"eipalloc-095a785bafae26833\",\n-            \"instance\": \"\",\n-            \"network_border_group\": \"us-east-1\",\n-            \"network_interface\": \"eni-00fa1c830dfe405e4\",\n-            \"private_dns\": \"ip-10-0-3-17.ec2.internal\",\n-            \"private_ip\": \"10.0.3.17\",\n-            \"public_dns\": \"ec2-52-22-219-180.compute-1.amazonaws.com\",\n-            \"public_ip\": \"52.22.219.180\",\n-            \"public_ipv4_pool\": \"amazon\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-eip-a\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-eip-a\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc\": true\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==\",\n-          \"dependencies\": [\n-            \"aws_internet_gateway.igw\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_eip\",\n-      \"name\": \"ngw-b\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"address\": null,\n-            \"allocation_id\": null,\n-            \"associate_with_private_ip\": null,\n-            \"association_id\": \"eipassoc-0fc8660f3be6abb6b\",\n-            \"carrier_ip\": \"\",\n-            \"customer_owned_ip\": \"\",\n-            \"customer_owned_ipv4_pool\": \"\",\n-            \"domain\": \"vpc\",\n-            \"id\": \"eipalloc-0d2790736a190e1a6\",\n-            \"instance\": \"\",\n-            \"network_border_group\": \"us-east-1\",\n-            \"network_interface\": \"eni-065050a5d2602ca6a\",\n-            \"private_dns\": \"ip-10-0-4-186.ec2.internal\",\n-            \"private_ip\": \"10.0.4.186\",\n-            \"public_dns\": \"ec2-3-226-86-88.compute-1.amazonaws.com\",\n-            \"public_ip\": \"3.226.86.88\",\n-            \"public_ipv4_pool\": \"amazon\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-eip-b\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-eip-b\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc\": true\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==\",\n-          \"dependencies\": [\n-            \"aws_internet_gateway.igw\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_eip\",\n-      \"name\": \"ngw-c\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"address\": null,\n-            \"allocation_id\": null,\n-            \"associate_with_private_ip\": null,\n-            \"association_id\": \"eipassoc-0a0e2febe8564d592\",\n-            \"carrier_ip\": \"\",\n-            \"customer_owned_ip\": \"\",\n-            \"customer_owned_ipv4_pool\": \"\",\n-            \"domain\": \"vpc\",\n-            \"id\": \"eipalloc-06404542c9a870980\",\n-            \"instance\": \"\",\n-            \"network_border_group\": \"us-east-1\",\n-            \"network_interface\": \"eni-0ed71cb197970c82d\",\n-            \"private_dns\": \"ip-10-0-5-157.ec2.internal\",\n-            \"private_ip\": \"10.0.5.157\",\n-            \"public_dns\": \"ec2-107-21-223-2.compute-1.amazonaws.com\",\n-            \"public_ip\": \"107.21.223.2\",\n-            \"public_ipv4_pool\": \"amazon\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-eip-c\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-eip-c\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc\": true\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==\",\n-          \"dependencies\": [\n-            \"aws_internet_gateway.igw\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_eks_cluster\",\n-      \"name\": \"liberland\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:eks:us-east-1:556005419303:cluster/liberland\",\n-            \"certificate_authority\": [\n-              {\n-                \"data\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1URXlPVEl5TkRreE5Wb1hEVE14TVRFeU56SXlORGt4TlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlpMCjgxZUc4UWx6R0NrNnFiNmdURyt6NVNWMk56OUpZNEIrUlc4QlhycHRwenZIVWNMaTUxZnRlc3ROdWdsMkN4L24KS2g5c3ZZZlJVTDBxRG5CQXNZdlJFU3BDb0J6SmdYNFhKWHBjWm5nSC84a0dBdXhWUmRZS0RBcktBdE8yOXZsZgplK2tIeElTQ3BLcVZaTlFSY1gyWDNGN1plc21VMExaR0lsTFoyeDBEak52eVVSVGZZaE5RUnVxaUprTnBCWmZmCmkzdUFGRDB6cmRucWU3T09iOGFVTlZheTRLamhxbmk2KzhTWlN3by9wZFc1NURVNWtLWlVLZXltY1dld2pxbnYKb2M3YUJpRUIrekY2RC9xL2xaWWZDTlFId2dKcU5kVVpRbHBKUHNRUnNlcjBKOWJQbGNjcDdQMHdmOFBOcHpMRQpwYW83eVZVdUlzT0U4ZXZvSTM4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPV0tUZ0MvSDlDVjY3enZXYWNZWlpsWjdOUlZNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFER2FvVTlPTFlaTHlmeVRtMWtiaXBNYzcyakpBdmxkSlVpSmVuNXI1TVB6V0ZVbzQ4VwpBdDEvVmFuVHExbHFDTnNndnFLNE90dGt1dkFRcGRHaEg4MWRDRjVnNVYrZTNkaHQvb1FRRGF5QTQ2OWJONXVFCk9vaEcyaXZ0ZG5Sejd6Q1lGM00zdDFCVnduQ3J4M1F2aWl2YzgxOG5FUFBQaHhjUmNoRUlVUHkwdjV1T1p6UU4KczVTRXZ1QjVuZ1Exdjc4WnhLY0tYZUJjSDhvVVBSY214VmxlY0c5RklOd2tGNTVTS2RRR01Rc29ZeDd1d0NzUApyWHV4aS9tMzhUVEtmL09xMVZWWTA0TlpRdGt0c2JHa1JSK0Z6TEpwZnVOU3pJdEEyVlRPMTdDUkZWUFdRdTFCCkNOOEdabWhWR2lyd2xxdERZMDkzNHZxRFpNdW85dTVDcy8zRwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"\n-              }\n-            ],\n-            \"created_at\": \"2021-11-29 22:42:20.948 +0000 UTC\",\n-            \"enabled_cluster_log_types\": [],\n-            \"encryption_config\": [\n-              {\n-                \"provider\": [\n-                  {\n-                    \"key_arn\": \"arn:aws:kms:us-east-1:556005419303:key/5660df83-7479-4152-a260-7005ed3b492e\"\n-                  }\n-                ],\n-                \"resources\": [\n-                  \"secrets\"\n-                ]\n-              }\n-            ],\n-            \"endpoint\": \"https://B719008E043C20632D48134D69534094.gr7.us-east-1.eks.amazonaws.com\",\n-            \"id\": \"liberland\",\n-            \"identity\": [\n-              {\n-                \"oidc\": [\n-                  {\n-                    \"issuer\": \"https://oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094\"\n-                  }\n-                ]\n-              }\n-            ],\n-            \"kubernetes_network_config\": [\n-              {\n-                \"service_ipv4_cidr\": \"172.20.0.0/16\"\n-              }\n-            ],\n-            \"name\": \"liberland\",\n-            \"platform_version\": \"eks.3\",\n-            \"role_arn\": \"arn:aws:iam::556005419303:role/liberland-cluster-role\",\n-            \"status\": \"ACTIVE\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-eks-cluster\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-eks-cluster\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"timeouts\": null,\n-            \"version\": \"1.21\",\n-            \"vpc_config\": [\n-              {\n-                \"cluster_security_group_id\": \"sg-02c7697fc1cf4dfee\",\n-                \"endpoint_private_access\": false,\n-                \"endpoint_public_access\": true,\n-                \"public_access_cidrs\": [\n-                  \"0.0.0.0/0\"\n-                ],\n-                \"security_group_ids\": [],\n-                \"subnet_ids\": [\n-                  \"subnet-0177bb0654af00d98\",\n-                  \"subnet-039631a5568a0464f\",\n-                  \"subnet-0f0758825065051d8\"\n-                ],\n-                \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-              }\n-            ]\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=\",\n-          \"dependencies\": [\n-            \"aws_kms_key.kms\",\n-            \"aws_subnet.private-b\",\n-            \"aws_subnet.private-c\",\n-            \"aws_vpc.vpc\",\n-            \"aws_iam_role.liberland\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController\",\n-            \"aws_subnet.private-a\",\n-            \"data.aws_iam_policy_document.kms\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_eks_node_group\",\n-      \"name\": \"ondemand\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"ami_type\": \"AL2_x86_64\",\n-            \"arn\": \"arn:aws:eks:us-east-1:556005419303:nodegroup/liberland/liberland-ondemand-node-group/b4beb6f5-146e-5379-7bd8-0fc17e0f04a4\",\n-            \"capacity_type\": \"ON_DEMAND\",\n-            \"cluster_name\": \"liberland\",\n-            \"disk_size\": 20,\n-            \"force_update_version\": null,\n-            \"id\": \"liberland:liberland-ondemand-node-group\",\n-            \"instance_types\": [\n-              \"t3a.medium\"\n-            ],\n-            \"labels\": {\n-              \"lifecycle\": \"ondemand\"\n-            },\n-            \"launch_template\": [],\n-            \"node_group_name\": \"liberland-ondemand-node-group\",\n-            \"node_group_name_prefix\": \"\",\n-            \"node_role_arn\": \"arn:aws:iam::556005419303:role/liberland-node-group-role\",\n-            \"release_version\": \"1.21.5-20211117\",\n-            \"remote_access\": [\n-              {\n-                \"ec2_ssh_key\": \"id_rsa\",\n-                \"source_security_group_ids\": []\n-              }\n-            ],\n-            \"resources\": [\n-              {\n-                \"autoscaling_groups\": [\n-                  {\n-                    \"name\": \"eks-liberland-ondemand-node-group-b4beb6f5-146e-5379-7bd8-0fc17e0f04a4\"\n-                  }\n-                ],\n-                \"remote_access_security_group_id\": \"sg-0ca04347984b0c62e\"\n-              }\n-            ],\n-            \"scaling_config\": [\n-              {\n-                \"desired_size\": 1,\n-                \"max_size\": 2,\n-                \"min_size\": 1\n-              }\n-            ],\n-            \"status\": \"ACTIVE\",\n-            \"subnet_ids\": [\n-              \"subnet-0177bb0654af00d98\",\n-              \"subnet-039631a5568a0464f\",\n-              \"subnet-0f0758825065051d8\"\n-            ],\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ondemand-node-group\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ondemand-node-group\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"taint\": [],\n-            \"timeouts\": null,\n-            \"update_config\": [\n-              {\n-                \"max_unavailable\": 1,\n-                \"max_unavailable_percentage\": 0\n-              }\n-            ],\n-            \"version\": \"1.21\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19\",\n-          \"dependencies\": [\n-            \"aws_iam_role.node-role\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSWorkerNodePolicy\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKS_CNI_Policy\",\n-            \"aws_subnet.private-c\",\n-            \"aws_kms_key.kms\",\n-            \"aws_subnet.private-b\",\n-            \"data.aws_iam_policy_document.kms\",\n-            \"aws_subnet.private-a\",\n-            \"aws_eks_cluster.liberland\",\n-            \"aws_iam_role.liberland\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEC2ContainerRegistryReadOnly\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_eks_node_group\",\n-      \"name\": \"spotone\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"ami_type\": \"AL2_x86_64\",\n-            \"arn\": \"arn:aws:eks:us-east-1:556005419303:nodegroup/liberland/liberland-spotone-node-group/48beb6f5-143f-1c7e-d8e8-3777eceaf6dc\",\n-            \"capacity_type\": \"SPOT\",\n-            \"cluster_name\": \"liberland\",\n-            \"disk_size\": 20,\n-            \"force_update_version\": null,\n-            \"id\": \"liberland:liberland-spotone-node-group\",\n-            \"instance_types\": [\n-              \"m4.xlarge\",\n-              \"m5.xlarge\",\n-              \"m5a.xlarge\",\n-              \"m5d.xlarge\",\n-              \"m5dn.xlarge\",\n-              \"m5n.xlarge\"\n-            ],\n-            \"labels\": {\n-              \"lifecycle\": \"spot\"\n-            },\n-            \"launch_template\": [],\n-            \"node_group_name\": \"liberland-spotone-node-group\",\n-            \"node_group_name_prefix\": \"\",\n-            \"node_role_arn\": \"arn:aws:iam::556005419303:role/liberland-node-group-role\",\n-            \"release_version\": \"1.21.5-20211117\",\n-            \"remote_access\": [\n-              {\n-                \"ec2_ssh_key\": \"id_rsa\",\n-                \"source_security_group_ids\": []\n-              }\n-            ],\n-            \"resources\": [\n-              {\n-                \"autoscaling_groups\": [\n-                  {\n-                    \"name\": \"eks-liberland-spotone-node-group-48beb6f5-143f-1c7e-d8e8-3777eceaf6dc\"\n-                  }\n-                ],\n-                \"remote_access_security_group_id\": \"sg-01a61137e24c60f5a\"\n-              }\n-            ],\n-            \"scaling_config\": [\n-              {\n-                \"desired_size\": 1,\n-                \"max_size\": 5,\n-                \"min_size\": 0\n-              }\n-            ],\n-            \"status\": \"ACTIVE\",\n-            \"subnet_ids\": [\n-              \"subnet-0177bb0654af00d98\",\n-              \"subnet-039631a5568a0464f\",\n-              \"subnet-0f0758825065051d8\"\n-            ],\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-spotone-node-group\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-spotone-node-group\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"taint\": [],\n-            \"timeouts\": null,\n-            \"update_config\": [\n-              {\n-                \"max_unavailable\": 1,\n-                \"max_unavailable_percentage\": 0\n-              }\n-            ],\n-            \"version\": \"1.21\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19\",\n-          \"dependencies\": [\n-            \"aws_subnet.private-a\",\n-            \"aws_vpc.vpc\",\n-            \"data.aws_iam_policy_document.kms\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEC2ContainerRegistryReadOnly\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKS_CNI_Policy\",\n-            \"aws_iam_role.liberland\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSWorkerNodePolicy\",\n-            \"aws_kms_key.kms\",\n-            \"aws_subnet.private-c\",\n-            \"aws_eks_cluster.liberland\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController\",\n-            \"aws_subnet.private-b\",\n-            \"aws_iam_role.node-role\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_eks_node_group\",\n-      \"name\": \"spottwo\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"ami_type\": \"AL2_x86_64\",\n-            \"arn\": \"arn:aws:eks:us-east-1:556005419303:nodegroup/liberland/liberland-spottwo-node-group/b2beb6f5-14a3-7356-7c58-168205a73526\",\n-            \"capacity_type\": \"SPOT\",\n-            \"cluster_name\": \"liberland\",\n-            \"disk_size\": 20,\n-            \"force_update_version\": null,\n-            \"id\": \"liberland:liberland-spottwo-node-group\",\n-            \"instance_types\": [\n-              \"m4.2xlarge\",\n-              \"m5.2xlarge\",\n-              \"m5a.2xlarge\",\n-              \"m5d.2xlarge\",\n-              \"m5dn.2xlarge\",\n-              \"m5n.2xlarge\"\n-            ],\n-            \"labels\": {\n-              \"lifecycle\": \"spot\"\n-            },\n-            \"launch_template\": [],\n-            \"node_group_name\": \"liberland-spottwo-node-group\",\n-            \"node_group_name_prefix\": \"\",\n-            \"node_role_arn\": \"arn:aws:iam::556005419303:role/liberland-node-group-role\",\n-            \"release_version\": \"1.21.5-20211117\",\n-            \"remote_access\": [\n-              {\n-                \"ec2_ssh_key\": \"id_rsa\",\n-                \"source_security_group_ids\": []\n-              }\n-            ],\n-            \"resources\": [\n-              {\n-                \"autoscaling_groups\": [\n-                  {\n-                    \"name\": \"eks-liberland-spottwo-node-group-b2beb6f5-14a3-7356-7c58-168205a73526\"\n-                  }\n-                ],\n-                \"remote_access_security_group_id\": \"sg-017e986f4e94abbbc\"\n-              }\n-            ],\n-            \"scaling_config\": [\n-              {\n-                \"desired_size\": 0,\n-                \"max_size\": 5,\n-                \"min_size\": 0\n-              }\n-            ],\n-            \"status\": \"ACTIVE\",\n-            \"subnet_ids\": [\n-              \"subnet-0177bb0654af00d98\",\n-              \"subnet-039631a5568a0464f\",\n-              \"subnet-0f0758825065051d8\"\n-            ],\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-spottwo-node-group\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-spottwo-node-group\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"taint\": [],\n-            \"timeouts\": null,\n-            \"update_config\": [\n-              {\n-                \"max_unavailable\": 1,\n-                \"max_unavailable_percentage\": 0\n-              }\n-            ],\n-            \"version\": \"1.21\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19\",\n-          \"dependencies\": [\n-            \"aws_iam_role_policy_attachment.example-AmazonEKS_CNI_Policy\",\n-            \"aws_subnet.private-c\",\n-            \"data.aws_iam_policy_document.kms\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController\",\n-            \"aws_subnet.private-a\",\n-            \"aws_subnet.private-b\",\n-            \"aws_eks_cluster.liberland\",\n-            \"aws_iam_role.node-role\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEC2ContainerRegistryReadOnly\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSWorkerNodePolicy\",\n-            \"aws_kms_key.kms\",\n-            \"aws_iam_role.liberland\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_openid_connect_provider\",\n-      \"name\": \"liberland\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:iam::556005419303:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094\",\n-            \"client_id_list\": [\n-              \"sts.amazonaws.com\"\n-            ],\n-            \"id\": \"arn:aws:iam::556005419303:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094\",\n-            \"tags\": {},\n-            \"tags_all\": {},\n-            \"thumbprint_list\": [\n-              \"9e99a48a9960b14926bb7f3b02e22da2b0ab7280\"\n-            ],\n-            \"url\": \"oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_eks_cluster.liberland\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy\",\n-            \"aws_kms_key.kms\",\n-            \"aws_subnet.private-b\",\n-            \"aws_vpc.vpc\",\n-            \"data.aws_iam_policy_document.kms\",\n-            \"aws_iam_role.liberland\",\n-            \"aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController\",\n-            \"aws_subnet.private-a\",\n-            \"aws_subnet.private-c\",\n-            \"data.tls_certificate.cert\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role\",\n-      \"name\": \"autoscaler\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:iam::556005419303:role/autoscaler-role\",\n-            \"assume_role_policy\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"0\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Federated\\\":\\\"arn:aws:iam::556005419303:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094\\\"},\\\"Action\\\":\\\"sts:AssumeRoleWithWebIdentity\\\",\\\"Condition\\\":{\\\"StringEquals\\\":{\\\"oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094:sub\\\":\\\"system:serviceaccount:autoscaler:autoscaler-sa\\\"}}}]}\",\n-            \"create_date\": \"2021-11-29T22:41:55Z\",\n-            \"description\": \"\",\n-            \"force_detach_policies\": false,\n-            \"id\": \"autoscaler-role\",\n-            \"inline_policy\": [\n-              {\n-                \"name\": \"autoscaler-policy\",\n-                \"policy\": \"{\\n    \\\"Version\\\": \\\"2012-10-17\\\",\\n    \\\"Statement\\\": [\\n        {\\n            \\\"Action\\\": [\\n                \\\"autoscaling:DescribeAutoScalingGroups\\\",\\n                \\\"autoscaling:DescribeAutoScalingInstances\\\",\\n                \\\"autoscaling:DescribeLaunchConfigurations\\\",\\n                \\\"autoscaling:DescribeTags\\\",\\n                \\\"autoscaling:SetDesiredCapacity\\\",\\n                \\\"autoscaling:TerminateInstanceInAutoScalingGroup\\\",\\n                \\\"ec2:DescribeLaunchTemplateVersions\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\",\\n            \\\"Effect\\\": \\\"Allow\\\"\\n        }\\n    ]\\n}\\n\"\n-              }\n-            ],\n-            \"managed_policy_arns\": [],\n-            \"max_session_duration\": 3600,\n-            \"name\": \"autoscaler-role\",\n-            \"name_prefix\": \"\",\n-            \"path\": \"/\",\n-            \"permissions_boundary\": null,\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-autoscaler-role\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-autoscaler-role\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"unique_id\": \"AROAYC5EBNETVAJ4FSZ2J\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\"\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role\",\n-      \"name\": \"efs-csi-driver\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:iam::556005419303:role/efs-csi-driver-role\",\n-            \"assume_role_policy\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"0\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Federated\\\":\\\"arn:aws:iam::556005419303:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094\\\"},\\\"Action\\\":\\\"sts:AssumeRoleWithWebIdentity\\\",\\\"Condition\\\":{\\\"StringEquals\\\":{\\\"oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094:sub\\\":\\\"system:serviceaccount:kube-system:efs-csi-driver-sa\\\"}}}]}\",\n-            \"create_date\": \"2021-11-30T01:26:35Z\",\n-            \"description\": \"\",\n-            \"force_detach_policies\": false,\n-            \"id\": \"efs-csi-driver-role\",\n-            \"inline_policy\": [\n-              {\n-                \"name\": \"efs-csi-driver-policy\",\n-                \"policy\": \"{\\n  \\\"Version\\\": \\\"2012-10-17\\\",\\n  \\\"Statement\\\": [\\n    {\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": [\\n        \\\"elasticfilesystem:DescribeAccessPoints\\\",\\n        \\\"elasticfilesystem:DescribeFileSystems\\\"\\n      ],\\n      \\\"Resource\\\": \\\"*\\\"\\n    },\\n    {\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": [\\n        \\\"elasticfilesystem:CreateAccessPoint\\\"\\n      ],\\n      \\\"Resource\\\": \\\"*\\\",\\n      \\\"Condition\\\": {\\n        \\\"StringLike\\\": {\\n          \\\"aws:RequestTag/efs.csi.aws.com/cluster\\\": \\\"true\\\"\\n        }\\n      }\\n    },\\n    {\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": \\\"elasticfilesystem:DeleteAccessPoint\\\",\\n      \\\"Resource\\\": \\\"*\\\",\\n      \\\"Condition\\\": {\\n        \\\"StringEquals\\\": {\\n          \\\"aws:ResourceTag/efs.csi.aws.com/cluster\\\": \\\"true\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\\n\"\n-              }\n-            ],\n-            \"managed_policy_arns\": [],\n-            \"max_session_duration\": 3600,\n-            \"name\": \"efs-csi-driver-role\",\n-            \"name_prefix\": \"\",\n-            \"path\": \"/\",\n-            \"permissions_boundary\": null,\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-efs-csi-driver-role\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-efs-csi-driver-role\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"unique_id\": \"AROAYC5EBNET75JMIAY6I\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\"\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role\",\n-      \"name\": \"lb-controller\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:iam::556005419303:role/awslbcontroller-role\",\n-            \"assume_role_policy\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"0\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Federated\\\":\\\"arn:aws:iam::556005419303:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094\\\"},\\\"Action\\\":\\\"sts:AssumeRoleWithWebIdentity\\\",\\\"Condition\\\":{\\\"StringEquals\\\":{\\\"oidc.eks.us-east-1.amazonaws.com/id/B719008E043C20632D48134D69534094:sub\\\":\\\"system:serviceaccount:kube-system:aws-load-balancer-controller\\\"}}}]}\",\n-            \"create_date\": \"2021-11-29T22:41:55Z\",\n-            \"description\": \"\",\n-            \"force_detach_policies\": false,\n-            \"id\": \"awslbcontroller-role\",\n-            \"inline_policy\": [\n-              {\n-                \"name\": \"awslbcontroller-policy\",\n-                \"policy\": \"{\\n    \\\"Version\\\": \\\"2012-10-17\\\",\\n    \\\"Statement\\\": [\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"iam:CreateServiceLinkedRole\\\",\\n                \\\"ec2:DescribeAccountAttributes\\\",\\n                \\\"ec2:DescribeAddresses\\\",\\n                \\\"ec2:DescribeAvailabilityZones\\\",\\n                \\\"ec2:DescribeInternetGateways\\\",\\n                \\\"ec2:DescribeVpcs\\\",\\n                \\\"ec2:DescribeSubnets\\\",\\n                \\\"ec2:DescribeSecurityGroups\\\",\\n                \\\"ec2:DescribeInstances\\\",\\n                \\\"ec2:DescribeNetworkInterfaces\\\",\\n                \\\"ec2:DescribeTags\\\",\\n                \\\"ec2:GetCoipPoolUsage\\\",\\n                \\\"ec2:DescribeCoipPools\\\",\\n                \\\"elasticloadbalancing:DescribeLoadBalancers\\\",\\n                \\\"elasticloadbalancing:DescribeLoadBalancerAttributes\\\",\\n                \\\"elasticloadbalancing:DescribeListeners\\\",\\n                \\\"elasticloadbalancing:DescribeListenerCertificates\\\",\\n                \\\"elasticloadbalancing:DescribeSSLPolicies\\\",\\n                \\\"elasticloadbalancing:DescribeRules\\\",\\n                \\\"elasticloadbalancing:DescribeTargetGroups\\\",\\n                \\\"elasticloadbalancing:DescribeTargetGroupAttributes\\\",\\n                \\\"elasticloadbalancing:DescribeTargetHealth\\\",\\n                \\\"elasticloadbalancing:DescribeTags\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"cognito-idp:DescribeUserPoolClient\\\",\\n                \\\"acm:ListCertificates\\\",\\n                \\\"acm:DescribeCertificate\\\",\\n                \\\"iam:ListServerCertificates\\\",\\n                \\\"iam:GetServerCertificate\\\",\\n                \\\"waf-regional:GetWebACL\\\",\\n                \\\"waf-regional:GetWebACLForResource\\\",\\n                \\\"waf-regional:AssociateWebACL\\\",\\n                \\\"waf-regional:DisassociateWebACL\\\",\\n                \\\"wafv2:GetWebACL\\\",\\n                \\\"wafv2:GetWebACLForResource\\\",\\n                \\\"wafv2:AssociateWebACL\\\",\\n                \\\"wafv2:DisassociateWebACL\\\",\\n                \\\"shield:GetSubscriptionState\\\",\\n                \\\"shield:DescribeProtection\\\",\\n                \\\"shield:CreateProtection\\\",\\n                \\\"shield:DeleteProtection\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:AuthorizeSecurityGroupIngress\\\",\\n                \\\"ec2:RevokeSecurityGroupIngress\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:CreateSecurityGroup\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:CreateTags\\\"\\n            ],\\n            \\\"Resource\\\": \\\"arn:aws:ec2:*:*:security-group/*\\\",\\n            \\\"Condition\\\": {\\n                \\\"StringEquals\\\": {\\n                    \\\"ec2:CreateAction\\\": \\\"CreateSecurityGroup\\\"\\n                },\\n                \\\"Null\\\": {\\n                    \\\"aws:RequestTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:CreateTags\\\",\\n                \\\"ec2:DeleteTags\\\"\\n            ],\\n            \\\"Resource\\\": \\\"arn:aws:ec2:*:*:security-group/*\\\",\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:RequestTag/elbv2.k8s.aws/cluster\\\": \\\"true\\\",\\n                    \\\"aws:ResourceTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:AuthorizeSecurityGroupIngress\\\",\\n                \\\"ec2:RevokeSecurityGroupIngress\\\",\\n                \\\"ec2:DeleteSecurityGroup\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\",\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:ResourceTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:CreateLoadBalancer\\\",\\n                \\\"elasticloadbalancing:CreateTargetGroup\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\",\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:RequestTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:CreateListener\\\",\\n                \\\"elasticloadbalancing:DeleteListener\\\",\\n                \\\"elasticloadbalancing:CreateRule\\\",\\n                \\\"elasticloadbalancing:DeleteRule\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:AddTags\\\",\\n                \\\"elasticloadbalancing:RemoveTags\\\"\\n            ],\\n            \\\"Resource\\\": [\\n                \\\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\\\"\\n            ],\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:RequestTag/elbv2.k8s.aws/cluster\\\": \\\"true\\\",\\n                    \\\"aws:ResourceTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:AddTags\\\",\\n                \\\"elasticloadbalancing:RemoveTags\\\"\\n            ],\\n            \\\"Resource\\\": [\\n                \\\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\\\"\\n            ]\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:ModifyLoadBalancerAttributes\\\",\\n                \\\"elasticloadbalancing:SetIpAddressType\\\",\\n                \\\"elasticloadbalancing:SetSecurityGroups\\\",\\n                \\\"elasticloadbalancing:SetSubnets\\\",\\n                \\\"elasticloadbalancing:DeleteLoadBalancer\\\",\\n                \\\"elasticloadbalancing:ModifyTargetGroup\\\",\\n                \\\"elasticloadbalancing:ModifyTargetGroupAttributes\\\",\\n                \\\"elasticloadbalancing:DeleteTargetGroup\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\",\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:ResourceTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:RegisterTargets\\\",\\n                \\\"elasticloadbalancing:DeregisterTargets\\\"\\n            ],\\n            \\\"Resource\\\": \\\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:SetWebAcl\\\",\\n                \\\"elasticloadbalancing:ModifyListener\\\",\\n                \\\"elasticloadbalancing:AddListenerCertificates\\\",\\n                \\\"elasticloadbalancing:RemoveListenerCertificates\\\",\\n                \\\"elasticloadbalancing:ModifyRule\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        }\\n    ]\\n}\\n\"\n-              }\n-            ],\n-            \"managed_policy_arns\": [],\n-            \"max_session_duration\": 3600,\n-            \"name\": \"awslbcontroller-role\",\n-            \"name_prefix\": \"\",\n-            \"path\": \"/\",\n-            \"permissions_boundary\": null,\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-awslbcontroller-role\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-awslbcontroller-role\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"unique_id\": \"AROAYC5EBNET6Q36FYPMY\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\"\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role\",\n-      \"name\": \"liberland\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:iam::556005419303:role/liberland-cluster-role\",\n-            \"assume_role_policy\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Service\\\":\\\"eks.amazonaws.com\\\"},\\\"Action\\\":\\\"sts:AssumeRole\\\"}]}\",\n-            \"create_date\": \"2021-11-29T22:41:55Z\",\n-            \"description\": \"\",\n-            \"force_detach_policies\": false,\n-            \"id\": \"liberland-cluster-role\",\n-            \"inline_policy\": [\n-              {\n-                \"name\": \"\",\n-                \"policy\": \"\"\n-              }\n-            ],\n-            \"managed_policy_arns\": [\n-              \"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\",\n-              \"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"\n-            ],\n-            \"max_session_duration\": 3600,\n-            \"name\": \"liberland-cluster-role\",\n-            \"name_prefix\": \"\",\n-            \"path\": \"/\",\n-            \"permissions_boundary\": null,\n-            \"tags\": {},\n-            \"tags_all\": {},\n-            \"unique_id\": \"AROAYC5EBNETQZYMWRUSU\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\"\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role\",\n-      \"name\": \"node-role\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:iam::556005419303:role/liberland-node-group-role\",\n-            \"assume_role_policy\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Service\\\":\\\"ec2.amazonaws.com\\\"},\\\"Action\\\":\\\"sts:AssumeRole\\\"}]}\",\n-            \"create_date\": \"2021-11-29T22:41:55Z\",\n-            \"description\": \"\",\n-            \"force_detach_policies\": false,\n-            \"id\": \"liberland-node-group-role\",\n-            \"inline_policy\": [\n-              {\n-                \"name\": \"\",\n-                \"policy\": \"\"\n-              }\n-            ],\n-            \"managed_policy_arns\": [\n-              \"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\",\n-              \"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\",\n-              \"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"\n-            ],\n-            \"max_session_duration\": 3600,\n-            \"name\": \"liberland-node-group-role\",\n-            \"name_prefix\": \"\",\n-            \"path\": \"/\",\n-            \"permissions_boundary\": null,\n-            \"tags\": {},\n-            \"tags_all\": {},\n-            \"unique_id\": \"AROAYC5EBNETYAARNNLMB\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\"\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role_policy\",\n-      \"name\": \"autoscaler\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"autoscaler-role:autoscaler-policy\",\n-            \"name\": \"autoscaler-policy\",\n-            \"name_prefix\": null,\n-            \"policy\": \"{\\n    \\\"Version\\\": \\\"2012-10-17\\\",\\n    \\\"Statement\\\": [\\n        {\\n            \\\"Action\\\": [\\n                \\\"autoscaling:DescribeAutoScalingGroups\\\",\\n                \\\"autoscaling:DescribeAutoScalingInstances\\\",\\n                \\\"autoscaling:DescribeLaunchConfigurations\\\",\\n                \\\"autoscaling:DescribeTags\\\",\\n                \\\"autoscaling:SetDesiredCapacity\\\",\\n                \\\"autoscaling:TerminateInstanceInAutoScalingGroup\\\",\\n                \\\"ec2:DescribeLaunchTemplateVersions\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\",\\n            \\\"Effect\\\": \\\"Allow\\\"\\n        }\\n    ]\\n}\\n\",\n-            \"role\": \"autoscaler-role\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_iam_role.autoscaler\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role_policy\",\n-      \"name\": \"efs-csi-driver\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"efs-csi-driver-role:efs-csi-driver-policy\",\n-            \"name\": \"efs-csi-driver-policy\",\n-            \"name_prefix\": null,\n-            \"policy\": \"{\\n  \\\"Version\\\": \\\"2012-10-17\\\",\\n  \\\"Statement\\\": [\\n    {\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": [\\n        \\\"elasticfilesystem:DescribeAccessPoints\\\",\\n        \\\"elasticfilesystem:DescribeFileSystems\\\"\\n      ],\\n      \\\"Resource\\\": \\\"*\\\"\\n    },\\n    {\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": [\\n        \\\"elasticfilesystem:CreateAccessPoint\\\"\\n      ],\\n      \\\"Resource\\\": \\\"*\\\",\\n      \\\"Condition\\\": {\\n        \\\"StringLike\\\": {\\n          \\\"aws:RequestTag/efs.csi.aws.com/cluster\\\": \\\"true\\\"\\n        }\\n      }\\n    },\\n    {\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": \\\"elasticfilesystem:DeleteAccessPoint\\\",\\n      \\\"Resource\\\": \\\"*\\\",\\n      \\\"Condition\\\": {\\n        \\\"StringEquals\\\": {\\n          \\\"aws:ResourceTag/efs.csi.aws.com/cluster\\\": \\\"true\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\\n\",\n-            \"role\": \"efs-csi-driver-role\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_iam_role.efs-csi-driver\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role_policy\",\n-      \"name\": \"lb-controller\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"awslbcontroller-role:awslbcontroller-policy\",\n-            \"name\": \"awslbcontroller-policy\",\n-            \"name_prefix\": null,\n-            \"policy\": \"{\\n    \\\"Version\\\": \\\"2012-10-17\\\",\\n    \\\"Statement\\\": [\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"iam:CreateServiceLinkedRole\\\",\\n                \\\"ec2:DescribeAccountAttributes\\\",\\n                \\\"ec2:DescribeAddresses\\\",\\n                \\\"ec2:DescribeAvailabilityZones\\\",\\n                \\\"ec2:DescribeInternetGateways\\\",\\n                \\\"ec2:DescribeVpcs\\\",\\n                \\\"ec2:DescribeSubnets\\\",\\n                \\\"ec2:DescribeSecurityGroups\\\",\\n                \\\"ec2:DescribeInstances\\\",\\n                \\\"ec2:DescribeNetworkInterfaces\\\",\\n                \\\"ec2:DescribeTags\\\",\\n                \\\"ec2:GetCoipPoolUsage\\\",\\n                \\\"ec2:DescribeCoipPools\\\",\\n                \\\"elasticloadbalancing:DescribeLoadBalancers\\\",\\n                \\\"elasticloadbalancing:DescribeLoadBalancerAttributes\\\",\\n                \\\"elasticloadbalancing:DescribeListeners\\\",\\n                \\\"elasticloadbalancing:DescribeListenerCertificates\\\",\\n                \\\"elasticloadbalancing:DescribeSSLPolicies\\\",\\n                \\\"elasticloadbalancing:DescribeRules\\\",\\n                \\\"elasticloadbalancing:DescribeTargetGroups\\\",\\n                \\\"elasticloadbalancing:DescribeTargetGroupAttributes\\\",\\n                \\\"elasticloadbalancing:DescribeTargetHealth\\\",\\n                \\\"elasticloadbalancing:DescribeTags\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"cognito-idp:DescribeUserPoolClient\\\",\\n                \\\"acm:ListCertificates\\\",\\n                \\\"acm:DescribeCertificate\\\",\\n                \\\"iam:ListServerCertificates\\\",\\n                \\\"iam:GetServerCertificate\\\",\\n                \\\"waf-regional:GetWebACL\\\",\\n                \\\"waf-regional:GetWebACLForResource\\\",\\n                \\\"waf-regional:AssociateWebACL\\\",\\n                \\\"waf-regional:DisassociateWebACL\\\",\\n                \\\"wafv2:GetWebACL\\\",\\n                \\\"wafv2:GetWebACLForResource\\\",\\n                \\\"wafv2:AssociateWebACL\\\",\\n                \\\"wafv2:DisassociateWebACL\\\",\\n                \\\"shield:GetSubscriptionState\\\",\\n                \\\"shield:DescribeProtection\\\",\\n                \\\"shield:CreateProtection\\\",\\n                \\\"shield:DeleteProtection\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:AuthorizeSecurityGroupIngress\\\",\\n                \\\"ec2:RevokeSecurityGroupIngress\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:CreateSecurityGroup\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:CreateTags\\\"\\n            ],\\n            \\\"Resource\\\": \\\"arn:aws:ec2:*:*:security-group/*\\\",\\n            \\\"Condition\\\": {\\n                \\\"StringEquals\\\": {\\n                    \\\"ec2:CreateAction\\\": \\\"CreateSecurityGroup\\\"\\n                },\\n                \\\"Null\\\": {\\n                    \\\"aws:RequestTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:CreateTags\\\",\\n                \\\"ec2:DeleteTags\\\"\\n            ],\\n            \\\"Resource\\\": \\\"arn:aws:ec2:*:*:security-group/*\\\",\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:RequestTag/elbv2.k8s.aws/cluster\\\": \\\"true\\\",\\n                    \\\"aws:ResourceTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"ec2:AuthorizeSecurityGroupIngress\\\",\\n                \\\"ec2:RevokeSecurityGroupIngress\\\",\\n                \\\"ec2:DeleteSecurityGroup\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\",\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:ResourceTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:CreateLoadBalancer\\\",\\n                \\\"elasticloadbalancing:CreateTargetGroup\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\",\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:RequestTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:CreateListener\\\",\\n                \\\"elasticloadbalancing:DeleteListener\\\",\\n                \\\"elasticloadbalancing:CreateRule\\\",\\n                \\\"elasticloadbalancing:DeleteRule\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:AddTags\\\",\\n                \\\"elasticloadbalancing:RemoveTags\\\"\\n            ],\\n            \\\"Resource\\\": [\\n                \\\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\\\"\\n            ],\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:RequestTag/elbv2.k8s.aws/cluster\\\": \\\"true\\\",\\n                    \\\"aws:ResourceTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:AddTags\\\",\\n                \\\"elasticloadbalancing:RemoveTags\\\"\\n            ],\\n            \\\"Resource\\\": [\\n                \\\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\\\",\\n                \\\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\\\"\\n            ]\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:ModifyLoadBalancerAttributes\\\",\\n                \\\"elasticloadbalancing:SetIpAddressType\\\",\\n                \\\"elasticloadbalancing:SetSecurityGroups\\\",\\n                \\\"elasticloadbalancing:SetSubnets\\\",\\n                \\\"elasticloadbalancing:DeleteLoadBalancer\\\",\\n                \\\"elasticloadbalancing:ModifyTargetGroup\\\",\\n                \\\"elasticloadbalancing:ModifyTargetGroupAttributes\\\",\\n                \\\"elasticloadbalancing:DeleteTargetGroup\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\",\\n            \\\"Condition\\\": {\\n                \\\"Null\\\": {\\n                    \\\"aws:ResourceTag/elbv2.k8s.aws/cluster\\\": \\\"false\\\"\\n                }\\n            }\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:RegisterTargets\\\",\\n                \\\"elasticloadbalancing:DeregisterTargets\\\"\\n            ],\\n            \\\"Resource\\\": \\\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\\\"\\n        },\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"elasticloadbalancing:SetWebAcl\\\",\\n                \\\"elasticloadbalancing:ModifyListener\\\",\\n                \\\"elasticloadbalancing:AddListenerCertificates\\\",\\n                \\\"elasticloadbalancing:RemoveListenerCertificates\\\",\\n                \\\"elasticloadbalancing:ModifyRule\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        }\\n    ]\\n}\\n\",\n-            \"role\": \"awslbcontroller-role\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_iam_role.lb-controller\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role_policy_attachment\",\n-      \"name\": \"example-AmazonEC2ContainerRegistryReadOnly\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"liberland-node-group-role-20211129224156079900000001\",\n-            \"policy_arn\": \"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\",\n-            \"role\": \"liberland-node-group-role\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_iam_role.node-role\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role_policy_attachment\",\n-      \"name\": \"example-AmazonEKSClusterPolicy\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"liberland-cluster-role-20211129224156089600000005\",\n-            \"policy_arn\": \"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\",\n-            \"role\": \"liberland-cluster-role\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_iam_role.liberland\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role_policy_attachment\",\n-      \"name\": \"example-AmazonEKSVPCResourceController\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"liberland-cluster-role-20211129224156080000000003\",\n-            \"policy_arn\": \"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\",\n-            \"role\": \"liberland-cluster-role\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_iam_role.liberland\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role_policy_attachment\",\n-      \"name\": \"example-AmazonEKSWorkerNodePolicy\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"liberland-node-group-role-20211129224156089500000004\",\n-            \"policy_arn\": \"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\",\n-            \"role\": \"liberland-node-group-role\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_iam_role.node-role\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_iam_role_policy_attachment\",\n-      \"name\": \"example-AmazonEKS_CNI_Policy\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"id\": \"liberland-node-group-role-20211129224156079900000002\",\n-            \"policy_arn\": \"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\",\n-            \"role\": \"liberland-node-group-role\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_iam_role.node-role\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_internet_gateway\",\n-      \"name\": \"igw\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:internet-gateway/igw-0b463fde90176c8b6\",\n-            \"id\": \"igw-0b463fde90176c8b6\",\n-            \"owner_id\": \"556005419303\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-igw\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-igw\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_kms_key\",\n-      \"name\": \"kms\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:kms:us-east-1:556005419303:key/5660df83-7479-4152-a260-7005ed3b492e\",\n-            \"bypass_policy_lockout_safety_check\": false,\n-            \"customer_master_key_spec\": \"SYMMETRIC_DEFAULT\",\n-            \"deletion_window_in_days\": 10,\n-            \"description\": \"Liberland EKS Secrets\",\n-            \"enable_key_rotation\": true,\n-            \"id\": \"5660df83-7479-4152-a260-7005ed3b492e\",\n-            \"is_enabled\": true,\n-            \"key_id\": \"5660df83-7479-4152-a260-7005ed3b492e\",\n-            \"key_usage\": \"ENCRYPT_DECRYPT\",\n-            \"policy\": \"{\\\"Statement\\\":[{\\\"Action\\\":\\\"kms:*\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":[\\\"arn:aws:iam::556005419303:role/liberland-cluster-role\\\",\\\"arn:aws:iam::556005419303:user/terraform\\\"]},\\\"Resource\\\":\\\"*\\\",\\\"Sid\\\":\\\"0\\\"}],\\\"Version\\\":\\\"2012-10-17\\\"}\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-secrets-kms\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-secrets-kms\",\n-              \"Namespace\": \"sb\"\n-            }\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_iam_role.liberland\",\n-            \"data.aws_iam_policy_document.kms\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_nat_gateway\",\n-      \"name\": \"a\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"allocation_id\": \"eipalloc-095a785bafae26833\",\n-            \"connectivity_type\": \"public\",\n-            \"id\": \"nat-086a67b5b15c03e99\",\n-            \"network_interface_id\": \"eni-00fa1c830dfe405e4\",\n-            \"private_ip\": \"10.0.3.17\",\n-            \"public_ip\": \"52.22.219.180\",\n-            \"subnet_id\": \"subnet-00b75d3373c4762f7\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-a\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-a\",\n-              \"Namespace\": \"sb\"\n-            }\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_subnet.public-a\",\n-            \"aws_vpc.vpc\",\n-            \"aws_eip.ngw-a\",\n-            \"aws_internet_gateway.igw\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_nat_gateway\",\n-      \"name\": \"b\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"allocation_id\": \"eipalloc-0d2790736a190e1a6\",\n-            \"connectivity_type\": \"public\",\n-            \"id\": \"nat-02c45ecddcc9538b5\",\n-            \"network_interface_id\": \"eni-065050a5d2602ca6a\",\n-            \"private_ip\": \"10.0.4.186\",\n-            \"public_ip\": \"3.226.86.88\",\n-            \"subnet_id\": \"subnet-02de2abd4fc1c93e6\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-b\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-b\",\n-              \"Namespace\": \"sb\"\n-            }\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_eip.ngw-b\",\n-            \"aws_internet_gateway.igw\",\n-            \"aws_subnet.public-b\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_nat_gateway\",\n-      \"name\": \"c\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"allocation_id\": \"eipalloc-06404542c9a870980\",\n-            \"connectivity_type\": \"public\",\n-            \"id\": \"nat-06832657a827ef66b\",\n-            \"network_interface_id\": \"eni-0ed71cb197970c82d\",\n-            \"private_ip\": \"10.0.5.157\",\n-            \"public_ip\": \"107.21.223.2\",\n-            \"subnet_id\": \"subnet-0325f218d98de7d06\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-c\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-ngw-c\",\n-              \"Namespace\": \"sb\"\n-            }\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_internet_gateway.igw\",\n-            \"aws_subnet.public-c\",\n-            \"aws_vpc.vpc\",\n-            \"aws_eip.ngw-c\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route\",\n-      \"name\": \"igw\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"carrier_gateway_id\": \"\",\n-            \"destination_cidr_block\": \"0.0.0.0/0\",\n-            \"destination_ipv6_cidr_block\": \"\",\n-            \"destination_prefix_list_id\": \"\",\n-            \"egress_only_gateway_id\": \"\",\n-            \"gateway_id\": \"igw-0b463fde90176c8b6\",\n-            \"id\": \"r-rtb-07bfa14cf223730601080289494\",\n-            \"instance_id\": \"\",\n-            \"instance_owner_id\": \"\",\n-            \"local_gateway_id\": \"\",\n-            \"nat_gateway_id\": \"\",\n-            \"network_interface_id\": \"\",\n-            \"origin\": \"CreateRoute\",\n-            \"route_table_id\": \"rtb-07bfa14cf22373060\",\n-            \"state\": \"active\",\n-            \"timeouts\": null,\n-            \"transit_gateway_id\": \"\",\n-            \"vpc_endpoint_id\": \"\",\n-            \"vpc_peering_connection_id\": \"\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=\",\n-          \"dependencies\": [\n-            \"aws_route_table.public\",\n-            \"aws_vpc.vpc\",\n-            \"aws_internet_gateway.igw\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route\",\n-      \"name\": \"ngw-a\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"carrier_gateway_id\": \"\",\n-            \"destination_cidr_block\": \"0.0.0.0/0\",\n-            \"destination_ipv6_cidr_block\": \"\",\n-            \"destination_prefix_list_id\": \"\",\n-            \"egress_only_gateway_id\": \"\",\n-            \"gateway_id\": \"\",\n-            \"id\": \"r-rtb-0c503d3c8f74eaaa41080289494\",\n-            \"instance_id\": \"\",\n-            \"instance_owner_id\": \"\",\n-            \"local_gateway_id\": \"\",\n-            \"nat_gateway_id\": \"nat-086a67b5b15c03e99\",\n-            \"network_interface_id\": \"\",\n-            \"origin\": \"CreateRoute\",\n-            \"route_table_id\": \"rtb-0c503d3c8f74eaaa4\",\n-            \"state\": \"active\",\n-            \"timeouts\": null,\n-            \"transit_gateway_id\": \"\",\n-            \"vpc_endpoint_id\": \"\",\n-            \"vpc_peering_connection_id\": \"\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=\",\n-          \"dependencies\": [\n-            \"aws_subnet.public-a\",\n-            \"aws_vpc.vpc\",\n-            \"aws_eip.ngw-a\",\n-            \"aws_internet_gateway.igw\",\n-            \"aws_nat_gateway.a\",\n-            \"aws_route_table.private-a\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route\",\n-      \"name\": \"ngw-b\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"carrier_gateway_id\": \"\",\n-            \"destination_cidr_block\": \"0.0.0.0/0\",\n-            \"destination_ipv6_cidr_block\": \"\",\n-            \"destination_prefix_list_id\": \"\",\n-            \"egress_only_gateway_id\": \"\",\n-            \"gateway_id\": \"\",\n-            \"id\": \"r-rtb-09245037e41f183261080289494\",\n-            \"instance_id\": \"\",\n-            \"instance_owner_id\": \"\",\n-            \"local_gateway_id\": \"\",\n-            \"nat_gateway_id\": \"nat-02c45ecddcc9538b5\",\n-            \"network_interface_id\": \"\",\n-            \"origin\": \"CreateRoute\",\n-            \"route_table_id\": \"rtb-09245037e41f18326\",\n-            \"state\": \"active\",\n-            \"timeouts\": null,\n-            \"transit_gateway_id\": \"\",\n-            \"vpc_endpoint_id\": \"\",\n-            \"vpc_peering_connection_id\": \"\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=\",\n-          \"dependencies\": [\n-            \"aws_eip.ngw-b\",\n-            \"aws_internet_gateway.igw\",\n-            \"aws_nat_gateway.b\",\n-            \"aws_route_table.private-b\",\n-            \"aws_subnet.public-b\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route\",\n-      \"name\": \"ngw-c\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"carrier_gateway_id\": \"\",\n-            \"destination_cidr_block\": \"0.0.0.0/0\",\n-            \"destination_ipv6_cidr_block\": \"\",\n-            \"destination_prefix_list_id\": \"\",\n-            \"egress_only_gateway_id\": \"\",\n-            \"gateway_id\": \"\",\n-            \"id\": \"r-rtb-0e0d025f9a53e6fe21080289494\",\n-            \"instance_id\": \"\",\n-            \"instance_owner_id\": \"\",\n-            \"local_gateway_id\": \"\",\n-            \"nat_gateway_id\": \"nat-06832657a827ef66b\",\n-            \"network_interface_id\": \"\",\n-            \"origin\": \"CreateRoute\",\n-            \"route_table_id\": \"rtb-0e0d025f9a53e6fe2\",\n-            \"state\": \"active\",\n-            \"timeouts\": null,\n-            \"transit_gateway_id\": \"\",\n-            \"vpc_endpoint_id\": \"\",\n-            \"vpc_peering_connection_id\": \"\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=\",\n-          \"dependencies\": [\n-            \"aws_route_table.private-c\",\n-            \"aws_subnet.public-c\",\n-            \"aws_vpc.vpc\",\n-            \"aws_eip.ngw-c\",\n-            \"aws_internet_gateway.igw\",\n-            \"aws_nat_gateway.c\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table\",\n-      \"name\": \"private-a\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:route-table/rtb-0c503d3c8f74eaaa4\",\n-            \"id\": \"rtb-0c503d3c8f74eaaa4\",\n-            \"owner_id\": \"556005419303\",\n-            \"propagating_vgws\": [],\n-            \"route\": [\n-              {\n-                \"carrier_gateway_id\": \"\",\n-                \"cidr_block\": \"0.0.0.0/0\",\n-                \"destination_prefix_list_id\": \"\",\n-                \"egress_only_gateway_id\": \"\",\n-                \"gateway_id\": \"\",\n-                \"instance_id\": \"\",\n-                \"ipv6_cidr_block\": \"\",\n-                \"local_gateway_id\": \"\",\n-                \"nat_gateway_id\": \"nat-086a67b5b15c03e99\",\n-                \"network_interface_id\": \"\",\n-                \"transit_gateway_id\": \"\",\n-                \"vpc_endpoint_id\": \"\",\n-                \"vpc_peering_connection_id\": \"\"\n-              }\n-            ],\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-rt-private-a\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-rt-private-a\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table\",\n-      \"name\": \"private-b\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:route-table/rtb-09245037e41f18326\",\n-            \"id\": \"rtb-09245037e41f18326\",\n-            \"owner_id\": \"556005419303\",\n-            \"propagating_vgws\": [],\n-            \"route\": [\n-              {\n-                \"carrier_gateway_id\": \"\",\n-                \"cidr_block\": \"0.0.0.0/0\",\n-                \"destination_prefix_list_id\": \"\",\n-                \"egress_only_gateway_id\": \"\",\n-                \"gateway_id\": \"\",\n-                \"instance_id\": \"\",\n-                \"ipv6_cidr_block\": \"\",\n-                \"local_gateway_id\": \"\",\n-                \"nat_gateway_id\": \"nat-02c45ecddcc9538b5\",\n-                \"network_interface_id\": \"\",\n-                \"transit_gateway_id\": \"\",\n-                \"vpc_endpoint_id\": \"\",\n-                \"vpc_peering_connection_id\": \"\"\n-              }\n-            ],\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-rt-private-b\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-rt-private-b\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table\",\n-      \"name\": \"private-c\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:route-table/rtb-0e0d025f9a53e6fe2\",\n-            \"id\": \"rtb-0e0d025f9a53e6fe2\",\n-            \"owner_id\": \"556005419303\",\n-            \"propagating_vgws\": [],\n-            \"route\": [\n-              {\n-                \"carrier_gateway_id\": \"\",\n-                \"cidr_block\": \"0.0.0.0/0\",\n-                \"destination_prefix_list_id\": \"\",\n-                \"egress_only_gateway_id\": \"\",\n-                \"gateway_id\": \"\",\n-                \"instance_id\": \"\",\n-                \"ipv6_cidr_block\": \"\",\n-                \"local_gateway_id\": \"\",\n-                \"nat_gateway_id\": \"nat-06832657a827ef66b\",\n-                \"network_interface_id\": \"\",\n-                \"transit_gateway_id\": \"\",\n-                \"vpc_endpoint_id\": \"\",\n-                \"vpc_peering_connection_id\": \"\"\n-              }\n-            ],\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-rt-private-c\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-rt-private-c\",\n-              \"Namespace\": \"sb\"\n-            },\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n+  \"outputs\": {},\n+  \"resources\": [\n     {\n       \"mode\": \"managed\",\n-      \"type\": \"aws_route_table\",\n-      \"name\": \"public\",\n+      \"type\": \"aws_internet_gateway\",\n+      \"name\": \"igw\",\n       \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n       \"instances\": [\n         {\n           \"schema_version\": 0,\n           \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:route-table/rtb-07bfa14cf22373060\",\n-            \"id\": \"rtb-07bfa14cf22373060\",\n+            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:internet-gateway/igw-0b463fde90176c8b6\",\n+            \"id\": \"igw-0b463fde90176c8b6\",\n             \"owner_id\": \"556005419303\",\n-            \"propagating_vgws\": [],\n-            \"route\": [\n-              {\n-                \"carrier_gateway_id\": \"\",\n-                \"cidr_block\": \"0.0.0.0/0\",\n-                \"destination_prefix_list_id\": \"\",\n-                \"egress_only_gateway_id\": \"\",\n-                \"gateway_id\": \"igw-0b463fde90176c8b6\",\n-                \"instance_id\": \"\",\n-                \"ipv6_cidr_block\": \"\",\n-                \"local_gateway_id\": \"\",\n-                \"nat_gateway_id\": \"\",\n-                \"network_interface_id\": \"\",\n-                \"transit_gateway_id\": \"\",\n-                \"vpc_endpoint_id\": \"\",\n-                \"vpc_peering_connection_id\": \"\"\n-              }\n-            ],\n             \"tags\": {\n               \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-rt-public\",\n+              \"Name\": \"sb-prod-liberland-igw\",\n               \"Namespace\": \"sb\"\n             },\n             \"tags_all\": {\n               \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-rt-public\",\n+              \"Name\": \"sb-prod-liberland-igw\",\n               \"Namespace\": \"sb\"\n             },\n             \"vpc_id\": \"vpc-0655a625af87e76ec\"\n@@ -1818,426 +37,6 @@\n         }\n       ]\n     },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table_association\",\n-      \"name\": \"private-a\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"gateway_id\": \"\",\n-            \"id\": \"rtbassoc-0a9ad27d4aed5a96e\",\n-            \"route_table_id\": \"rtb-0c503d3c8f74eaaa4\",\n-            \"subnet_id\": \"subnet-0177bb0654af00d98\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_subnet.private-a\",\n-            \"aws_vpc.vpc\",\n-            \"aws_route_table.private-a\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table_association\",\n-      \"name\": \"private-b\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"gateway_id\": \"\",\n-            \"id\": \"rtbassoc-08130669e670b311d\",\n-            \"route_table_id\": \"rtb-09245037e41f18326\",\n-            \"subnet_id\": \"subnet-0f0758825065051d8\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_route_table.private-b\",\n-            \"aws_subnet.private-b\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table_association\",\n-      \"name\": \"private-c\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"gateway_id\": \"\",\n-            \"id\": \"rtbassoc-03cad10f5fde5932e\",\n-            \"route_table_id\": \"rtb-0e0d025f9a53e6fe2\",\n-            \"subnet_id\": \"subnet-039631a5568a0464f\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\",\n-            \"aws_route_table.private-c\",\n-            \"aws_subnet.private-c\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table_association\",\n-      \"name\": \"public-a\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"gateway_id\": \"\",\n-            \"id\": \"rtbassoc-0b083f3dd4928452e\",\n-            \"route_table_id\": \"rtb-07bfa14cf22373060\",\n-            \"subnet_id\": \"subnet-00b75d3373c4762f7\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_route_table.public\",\n-            \"aws_subnet.public-a\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table_association\",\n-      \"name\": \"public-b\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"gateway_id\": \"\",\n-            \"id\": \"rtbassoc-02f4e05dc13a147af\",\n-            \"route_table_id\": \"rtb-07bfa14cf22373060\",\n-            \"subnet_id\": \"subnet-02de2abd4fc1c93e6\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\",\n-            \"aws_route_table.public\",\n-            \"aws_subnet.public-b\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_route_table_association\",\n-      \"name\": \"public-c\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"gateway_id\": \"\",\n-            \"id\": \"rtbassoc-01b96db837326c41e\",\n-            \"route_table_id\": \"rtb-07bfa14cf22373060\",\n-            \"subnet_id\": \"subnet-0325f218d98de7d06\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_route_table.public\",\n-            \"aws_subnet.public-c\",\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_subnet\",\n-      \"name\": \"private-a\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:subnet/subnet-0177bb0654af00d98\",\n-            \"assign_ipv6_address_on_creation\": false,\n-            \"availability_zone\": \"us-east-1a\",\n-            \"availability_zone_id\": \"use1-az4\",\n-            \"cidr_block\": \"10.0.0.0/24\",\n-            \"customer_owned_ipv4_pool\": \"\",\n-            \"id\": \"subnet-0177bb0654af00d98\",\n-            \"ipv6_cidr_block\": \"\",\n-            \"ipv6_cidr_block_association_id\": \"\",\n-            \"map_customer_owned_ip_on_launch\": false,\n-            \"map_public_ip_on_launch\": false,\n-            \"outpost_arn\": \"\",\n-            \"owner_id\": \"556005419303\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-private-a\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/cluster/liberland\": \"shared\",\n-              \"kubernetes.io/role/internal-elb\": \"1\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-private-a\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/cluster/liberland\": \"shared\",\n-              \"kubernetes.io/role/internal-elb\": \"1\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_subnet\",\n-      \"name\": \"private-b\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:subnet/subnet-0f0758825065051d8\",\n-            \"assign_ipv6_address_on_creation\": false,\n-            \"availability_zone\": \"us-east-1b\",\n-            \"availability_zone_id\": \"use1-az6\",\n-            \"cidr_block\": \"10.0.1.0/24\",\n-            \"customer_owned_ipv4_pool\": \"\",\n-            \"id\": \"subnet-0f0758825065051d8\",\n-            \"ipv6_cidr_block\": \"\",\n-            \"ipv6_cidr_block_association_id\": \"\",\n-            \"map_customer_owned_ip_on_launch\": false,\n-            \"map_public_ip_on_launch\": false,\n-            \"outpost_arn\": \"\",\n-            \"owner_id\": \"556005419303\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-private-b\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/cluster/liberland\": \"shared\",\n-              \"kubernetes.io/role/internal-elb\": \"1\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-private-b\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/cluster/liberland\": \"shared\",\n-              \"kubernetes.io/role/internal-elb\": \"1\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_subnet\",\n-      \"name\": \"private-c\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:subnet/subnet-039631a5568a0464f\",\n-            \"assign_ipv6_address_on_creation\": false,\n-            \"availability_zone\": \"us-east-1c\",\n-            \"availability_zone_id\": \"use1-az1\",\n-            \"cidr_block\": \"10.0.2.0/24\",\n-            \"customer_owned_ipv4_pool\": \"\",\n-            \"id\": \"subnet-039631a5568a0464f\",\n-            \"ipv6_cidr_block\": \"\",\n-            \"ipv6_cidr_block_association_id\": \"\",\n-            \"map_customer_owned_ip_on_launch\": false,\n-            \"map_public_ip_on_launch\": false,\n-            \"outpost_arn\": \"\",\n-            \"owner_id\": \"556005419303\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-private-c\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/cluster/liberland\": \"shared\",\n-              \"kubernetes.io/role/internal-elb\": \"1\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-private-c\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/cluster/liberland\": \"shared\",\n-              \"kubernetes.io/role/internal-elb\": \"1\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_subnet\",\n-      \"name\": \"public-a\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:subnet/subnet-00b75d3373c4762f7\",\n-            \"assign_ipv6_address_on_creation\": false,\n-            \"availability_zone\": \"us-east-1a\",\n-            \"availability_zone_id\": \"use1-az4\",\n-            \"cidr_block\": \"10.0.3.0/24\",\n-            \"customer_owned_ipv4_pool\": \"\",\n-            \"id\": \"subnet-00b75d3373c4762f7\",\n-            \"ipv6_cidr_block\": \"\",\n-            \"ipv6_cidr_block_association_id\": \"\",\n-            \"map_customer_owned_ip_on_launch\": false,\n-            \"map_public_ip_on_launch\": false,\n-            \"outpost_arn\": \"\",\n-            \"owner_id\": \"556005419303\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-public-a\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/role/elb\": \"1\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-public-a\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/role/elb\": \"1\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_subnet\",\n-      \"name\": \"public-b\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:subnet/subnet-02de2abd4fc1c93e6\",\n-            \"assign_ipv6_address_on_creation\": false,\n-            \"availability_zone\": \"us-east-1b\",\n-            \"availability_zone_id\": \"use1-az6\",\n-            \"cidr_block\": \"10.0.4.0/24\",\n-            \"customer_owned_ipv4_pool\": \"\",\n-            \"id\": \"subnet-02de2abd4fc1c93e6\",\n-            \"ipv6_cidr_block\": \"\",\n-            \"ipv6_cidr_block_association_id\": \"\",\n-            \"map_customer_owned_ip_on_launch\": false,\n-            \"map_public_ip_on_launch\": false,\n-            \"outpost_arn\": \"\",\n-            \"owner_id\": \"556005419303\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-public-b\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/role/elb\": \"1\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-public-b\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/role/elb\": \"1\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_subnet\",\n-      \"name\": \"public-c\",\n-      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/aws\\\"]\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 1,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-1:556005419303:subnet/subnet-0325f218d98de7d06\",\n-            \"assign_ipv6_address_on_creation\": false,\n-            \"availability_zone\": \"us-east-1c\",\n-            \"availability_zone_id\": \"use1-az1\",\n-            \"cidr_block\": \"10.0.5.0/24\",\n-            \"customer_owned_ipv4_pool\": \"\",\n-            \"id\": \"subnet-0325f218d98de7d06\",\n-            \"ipv6_cidr_block\": \"\",\n-            \"ipv6_cidr_block_association_id\": \"\",\n-            \"map_customer_owned_ip_on_launch\": false,\n-            \"map_public_ip_on_launch\": false,\n-            \"outpost_arn\": \"\",\n-            \"owner_id\": \"556005419303\",\n-            \"tags\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-public-c\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/role/elb\": \"1\"\n-            },\n-            \"tags_all\": {\n-              \"Environment\": \"prod\",\n-              \"Name\": \"sb-prod-liberland-subnet-public-c\",\n-              \"Namespace\": \"sb\",\n-              \"kubernetes.io/role/elb\": \"1\"\n-            },\n-            \"timeouts\": null,\n-            \"vpc_id\": \"vpc-0655a625af87e76ec\"\n-          },\n-          \"sensitive_attributes\": [],\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n-          \"dependencies\": [\n-            \"aws_vpc.vpc\"\n-          ]\n-        }\n-      ]\n-    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_vpc\","
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/mdimarino/iac/commit/0cfeda4f4f737523e9e09858c25526db10de70c4",
    "files": [
      {
        "filename": "terraform/modules/infrastructure/network/vpc.tf",
        "additions": 32,
        "deletions": 32,
        "changes": 64,
        "status": "modified",
        "patch": "@@ -93,32 +93,32 @@ resource \"aws_subnet\" \"private_subnets\" {\n   }\n }\n \n-# resource \"aws_eip\" \"nat_eips\" {\n-#   count = length(var.public-subnet-cidr-blocks)\n-#   vpc   = true\n-\n-#   tags = {\n-#     Name        = \"${var.vpc-name}-nat-gateway-ip-0${count.index + 1}\"\n-#     Environment = var.environment\n-#     Billing     = var.billing\n-#     Provisioner = var.provisioner\n-#   }\n-# }\n-\n-# resource \"aws_nat_gateway\" \"nat_gateways\" {\n-#   count         = length(var.public-subnet-cidr-blocks)\n-#   allocation_id = element(aws_eip.nat_eips.*.id, count.index)\n-#   subnet_id     = element(aws_subnet.public_subnets.*.id, count.index)\n-\n-#   tags = {\n-#     Name        = \"${var.vpc-name}-nat-gateway-0${count.index + 1}\"\n-#     Environment = var.environment\n-#     Billing     = var.billing\n-#     Provisioner = var.provisioner\n-#   }\n-\n-#   depends_on = [aws_internet_gateway.igw]\n-# }\n+resource \"aws_eip\" \"nat_eips\" {\n+  count = length(var.public-subnet-cidr-blocks)\n+  vpc   = true\n+\n+  tags = {\n+    Name        = \"${var.vpc-name}-nat-gateway-ip-0${count.index + 1}\"\n+    Environment = var.environment\n+    Billing     = var.billing\n+    Provisioner = var.provisioner\n+  }\n+}\n+\n+resource \"aws_nat_gateway\" \"nat_gateways\" {\n+  count         = length(var.public-subnet-cidr-blocks)\n+  allocation_id = element(aws_eip.nat_eips.*.id, count.index)\n+  subnet_id     = element(aws_subnet.public_subnets.*.id, count.index)\n+\n+  tags = {\n+    Name        = \"${var.vpc-name}-nat-gateway-0${count.index + 1}\"\n+    Environment = var.environment\n+    Billing     = var.billing\n+    Provisioner = var.provisioner\n+  }\n+\n+  depends_on = [aws_internet_gateway.igw]\n+}\n \n resource \"aws_route_table\" \"private_route_tables\" {\n   count  = length(var.private-subnet-cidr-blocks)\n@@ -138,12 +138,12 @@ resource \"aws_route_table_association\" \"private_route_table_association\" {\n   route_table_id = element(aws_route_table.private_route_tables.*.id, count.index)\n }\n \n-# resource \"aws_route\" \"private_nat_gateway\" {\n-#   count                  = length(var.private-subnet-cidr-blocks)\n-#   route_table_id         = element(aws_route_table.private_route_tables.*.id, count.index)\n-#   destination_cidr_block = \"0.0.0.0/0\"\n-#   nat_gateway_id         = element(aws_nat_gateway.nat_gateways.*.id, count.index)\n-# }\n+resource \"aws_route\" \"private_nat_gateway\" {\n+  count                  = length(var.private-subnet-cidr-blocks)\n+  route_table_id         = element(aws_route_table.private_route_tables.*.id, count.index)\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  nat_gateway_id         = element(aws_nat_gateway.nat_gateways.*.id, count.index)\n+}\n \n resource \"aws_default_route_table\" \"default_route_table\" {\n   default_route_table_id = aws_vpc.vpc.default_route_table_id"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/roysjosh/terraform-unifi/commit/da9e2869456610a0228cb14f850c6eccddbb15e0",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -149,7 +149,7 @@ resource \"aws_instance\" \"controller\" {\n \n     root_block_device {\n         volume_type           = \"gp2\"\n-        volume_size           = 30\n+        volume_size           = 20\n         delete_on_termination = true\n     }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Antmounds/fastly-demo/commit/a433a5d5788a358e7437cb15097d68bd1220eda7",
    "files": [
      {
        "filename": "CHANGELOG",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+## [0.2.0] - 2020-06-23\n+### Added\n+- Fastly now has 2 backends to loadbalance between instead of just 1 instance.\n+- Instances now use cheapest spot instances by default for demonstration purposes.\n+- Changelog with human-friendly updates.\n+\n+### Changed\n+- App name is now interpolated into tag and resource names instead of hardcoded.\n+\n+### Security\n+- Moved subdomain url and ssh key name to .tfvars file\n\\ No newline at end of file"
      },
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -41,7 +41,7 @@ resource \"fastly_service_v1\" \"demo\" {\n \n   healthcheck {\n     name              = \"global-health-check\"\n-    host              = var.domain_name\n+    host              = aws_spot_instance_request.web_server.0.public_ip\n     path              = \"/index.html\"\n     check_interval    = 60000\n     expected_response = 200"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-azurerm-windowsscaleset/commit/d5ac10f438b093d600047b0c9790e71bbbaa0ab2",
    "files": [
      {
        "filename": ".github/workflows/compare.yml",
        "additions": 16,
        "deletions": 14,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -7,7 +7,6 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n   tf_target_dir: example/examplea\n   branch: master\n jobs:\n@@ -22,8 +21,7 @@ jobs:\n       - name: tfsec\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion tfsec/tfsec)\n-          wget https://github.com/tfsec/tfsec/releases/download/v${now}/tfsec-linux-amd64\n+          lastversion tfsec/tfsec --assets -d\n           chmod +x tfsec-linux-amd64\n           ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n         continue-on-error: true\n@@ -67,18 +65,20 @@ jobs:\n       - name: install terrascan\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion accurics/terrascan)\n-          curl --location https://github.com/accurics/terrascan/releases/download/v${now}/terrascan_${now}_Linux_x86_64.tar.gz --output terrascan.tar.gz\n-          tar -xvf terrascan.tar.gz\n+          lastversion accurics/terrascan --assets -d --verbose\n+          tar -xvf terrascan*.tar.gz\n+          chmod +x ./terrascan\n       - name: run terrascan\n-        run: ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json >terrascan.json\n+        run: |\n+          ./terrascan init\n+          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: terrascan\n           path: terrascan.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n   kics:\n     runs-on: ubuntu-latest\n     steps:\n@@ -87,18 +87,20 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: run kics Scan\n-        uses: checkmarx/kics-action@v1.0\n-        with:\n-          path: ${{ env.tf_target_dir }}\n-          output_path: \"kics.json\"\n+      - name: install kics\n+        run: |\n+          pip3 install lastversion\n+          lastversion Checkmarx/kics --assets -d --verbose\n+          tar -xvf kics*.tar.gz\n+      - name: run kics\n+        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: kics\n           path: kics.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n \n   upload:\n     needs: [kics, terrascan, checkov, tfsec]"
      },
      {
        "filename": ".github/workflows/master.yml",
        "additions": 31,
        "deletions": 15,
        "changes": 46,
        "status": "modified",
        "patch": "@@ -9,11 +9,19 @@ on:\n     branches:\n       - master\n env:\n-  terraform: 0.14.8\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n   branch: master\n jobs:\n   terraform:\n+    env:\n+      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}\n+      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}\n+      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}\n+      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout\n@@ -22,17 +30,27 @@ jobs:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n       - name: Terraform Init\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: init\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform init\n+        working-directory: ${{ env.tf_target_dir }}\n       - name: Terraform Validate\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: validate\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform validate\n+        working-directory: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        run: terraform plan\n+        working-directory: ${{ env.tf_target_dir }}\n+        env:\n+          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}\n+          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}\n+          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}\n+      - name: Bills\n+        run: |\n+          pip3 install lastversion\n+          lastversion infracost --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf infracost*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/infracost-linux-amd64\n+          $GITHUB_WORKSPACE/bin/infracost-linux-amd64 breakdown --path ${{ env.tf_target_dir }} --usage-file ${{ env.tf_target_dir }}/infracost-usage.yml --show-skipped\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -46,10 +64,9 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n@@ -59,7 +76,6 @@ jobs:\n     steps:\n       - uses: actions/checkout@master\n       - name: Bump version and push tag\n-        if: ${{ !env.ACT }}\n         uses: anothrNick/github-tag-action@master\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "filename": ".github/workflows/pull_request.yml",
        "additions": 44,
        "deletions": 14,
        "changes": 58,
        "status": "modified",
        "patch": "@@ -6,29 +6,39 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n \n jobs:\n   terraform:\n+    env:\n+      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}\n+      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}\n+      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}\n+      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout\n         uses: actions/checkout@v2\n         with:\n           token: ${{ github.token }}\n       - name: Terraform Init\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: init\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform init\n+        working-directory: ${{ env.tf_target_dir }}\n       - name: Terraform Validate\n-        uses: hashicorp/terraform-github-actions@master\n-        with:\n-          tf_actions_version: ${{ env.terraform }}\n-          tf_actions_subcommand: validate\n-          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        run: terraform validate\n+        working-directory: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        run: terraform plan\n+        working-directory: ${{ env.tf_target_dir }}\n+        env:\n+          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}\n+          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}\n+          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -41,10 +51,30 @@ jobs:\n           python-version: 3.8\n       - run: |\n           pip3 install lastversion\n-          now=$(lastversion terraform-docs)\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v${now}/terraform-docs-v${now}-$(uname)-amd64.tar.gz -o terraform-docs.tar.gz\n-          tar -xvf terraform-docs.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}\n+          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}\n+          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}\n+          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}\n+          # See the cloud credentials section for the options\n+        with:\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          usage_file: ${{ env.tf_target_dir }}/infracost-usage.yml\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": ".terraformignore",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -4,3 +4,4 @@\n *.backup\n *.bak\n *.info\n+.terraform.lock.hcl"
      },
      {
        "filename": "example/examplea/Makefile",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -74,4 +74,4 @@ purge:\n \t$(BLAT)\r\n \r\n cost:\r\n-\tinfracost breakdown --path . --usage-file infracost-usage.yml  --sync-usage-file\n\\ No newline at end of file\n+\tinfracost breakdown --path . --usage-file infracost-usage.yml  --sync-usage-file --show-skipped\r"
      },
      {
        "filename": "example/examplea/infracost-usage.yml",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+version: 0.1\n+resource_usage:\n+  module.scale.azurerm_windows_virtual_machine_scale_set.windows:\n+    instances: 0\n+    os_disk:\n+      monthly_disk_operations: 0"
      },
      {
        "filename": "example/examplea/outputs.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n output \"scale\" {\n-  value = module.scale\n+  value     = module.scale\n+  sensitive = true\n }"
      },
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n terraform {\n   required_providers {\n     azurerm = {\n-      version = \"2.56.0\"\n+      version = \"2.59.0\"\n       source  = \"hashicorp/azurerm\"\n     }\n     template = {"
      },
      {
        "filename": "outputs.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n output \"scale_set\" {\n-  value = azurerm_windows_virtual_machine_scale_set.windows\n+  value     = azurerm_windows_virtual_machine_scale_set.windows\n+  sensitive = true\n }"
      },
      {
        "filename": "validate.sh",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "modified",
        "patch": null
      },
      {
        "filename": "variables.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -27,7 +27,8 @@ variable \"admin_username\" {\n }\n \n variable \"admin_password\" {\n-  type = string\n+  type      = string\n+  sensitive = true\n }\n \n "
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/chqaversion/s3-bucket-versioning/commit/e9dcc211445f9e315d894e61cd147cf5acf151d9",
    "files": [
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -260,6 +260,7 @@ Available targets:\n | <a name=\"input_attributes\"></a> [attributes](#input\\_attributes) | ID element. Additional attributes (e.g. `workers` or `cluster`) to add to `id`,<br>in the order they appear in the list. New attributes are appended to the<br>end of the list. The elements of the list are joined by the `delimiter`<br>and treated as a single ID element. | `list(string)` | `[]` | no |\n | <a name=\"input_block_public_acls\"></a> [block\\_public\\_acls](#input\\_block\\_public\\_acls) | Set to `false` to disable the blocking of new public access lists on the bucket | `bool` | `true` | no |\n | <a name=\"input_block_public_policy\"></a> [block\\_public\\_policy](#input\\_block\\_public\\_policy) | Set to `false` to disable the blocking of new public policies on the bucket | `bool` | `true` | no |\n+| <a name=\"input_bucket_key_enabled\"></a> [bucket\\_key\\_enabled](#input\\_bucket\\_key\\_enabled) | Set this to true to use Amazon S3 Bucket Keys for SSE-KMS, which reduce the cost of AWS KMS requests.<br><br>For more information, see: https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-key.html | `bool` | `false` | no |\n | <a name=\"input_bucket_name\"></a> [bucket\\_name](#input\\_bucket\\_name) | Bucket name. If provided, the bucket will be created with this name instead of generating the name from the context | `string` | `null` | no |\n | <a name=\"input_context\"></a> [context](#input\\_context) | Single object for setting entire context at once.<br>See description of individual variables for details.<br>Leave string and numeric variables as `null` to use default value.<br>Individual variable settings (non-null) override settings in context object,<br>except for attributes, tags, and additional\\_tag\\_map, which are merged. | `any` | <pre>{<br>  \"additional_tag_map\": {},<br>  \"attributes\": [],<br>  \"delimiter\": null,<br>  \"descriptor_formats\": {},<br>  \"enabled\": true,<br>  \"environment\": null,<br>  \"id_length_limit\": null,<br>  \"label_key_case\": null,<br>  \"label_order\": [],<br>  \"label_value_case\": null,<br>  \"labels_as_tags\": [<br>    \"unset\"<br>  ],<br>  \"name\": null,<br>  \"namespace\": null,<br>  \"regex_replace_chars\": null,<br>  \"stage\": null,<br>  \"tags\": {},<br>  \"tenant\": null<br>}</pre> | no |\n | <a name=\"input_cors_rule_inputs\"></a> [cors\\_rule\\_inputs](#input\\_cors\\_rule\\_inputs) | Specifies the allowed headers, methods, origins and exposed headers when using CORS on this bucket | <pre>list(object({<br>    allowed_headers = list(string)<br>    allowed_methods = list(string)<br>    allowed_origins = list(string)<br>    expose_headers  = list(string)<br>    max_age_seconds = number<br>  }))</pre> | `null` | no |"
      },
      {
        "filename": "docs/terraform.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -51,6 +51,7 @@\n | <a name=\"input_attributes\"></a> [attributes](#input\\_attributes) | ID element. Additional attributes (e.g. `workers` or `cluster`) to add to `id`,<br>in the order they appear in the list. New attributes are appended to the<br>end of the list. The elements of the list are joined by the `delimiter`<br>and treated as a single ID element. | `list(string)` | `[]` | no |\n | <a name=\"input_block_public_acls\"></a> [block\\_public\\_acls](#input\\_block\\_public\\_acls) | Set to `false` to disable the blocking of new public access lists on the bucket | `bool` | `true` | no |\n | <a name=\"input_block_public_policy\"></a> [block\\_public\\_policy](#input\\_block\\_public\\_policy) | Set to `false` to disable the blocking of new public policies on the bucket | `bool` | `true` | no |\n+| <a name=\"input_bucket_key_enabled\"></a> [bucket\\_key\\_enabled](#input\\_bucket\\_key\\_enabled) | Set this to true to use Amazon S3 Bucket Keys for SSE-KMS, which reduce the cost of AWS KMS requests.<br><br>For more information, see: https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-key.html | `bool` | `false` | no |\n | <a name=\"input_bucket_name\"></a> [bucket\\_name](#input\\_bucket\\_name) | Bucket name. If provided, the bucket will be created with this name instead of generating the name from the context | `string` | `null` | no |\n | <a name=\"input_context\"></a> [context](#input\\_context) | Single object for setting entire context at once.<br>See description of individual variables for details.<br>Leave string and numeric variables as `null` to use default value.<br>Individual variable settings (non-null) override settings in context object,<br>except for attributes, tags, and additional\\_tag\\_map, which are merged. | `any` | <pre>{<br>  \"additional_tag_map\": {},<br>  \"attributes\": [],<br>  \"delimiter\": null,<br>  \"descriptor_formats\": {},<br>  \"enabled\": true,<br>  \"environment\": null,<br>  \"id_length_limit\": null,<br>  \"label_key_case\": null,<br>  \"label_order\": [],<br>  \"label_value_case\": null,<br>  \"labels_as_tags\": [<br>    \"unset\"<br>  ],<br>  \"name\": null,<br>  \"namespace\": null,<br>  \"regex_replace_chars\": null,<br>  \"stage\": null,<br>  \"tags\": {},<br>  \"tenant\": null<br>}</pre> | no |\n | <a name=\"input_cors_rule_inputs\"></a> [cors\\_rule\\_inputs](#input\\_cors\\_rule\\_inputs) | Specifies the allowed headers, methods, origins and exposed headers when using CORS on this bucket | <pre>list(object({<br>    allowed_headers = list(string)<br>    allowed_methods = list(string)<br>    allowed_origins = list(string)<br>    expose_headers  = list(string)<br>    max_age_seconds = number<br>  }))</pre> | `null` | no |"
      },
      {
        "filename": "examples/complete/fixtures.us-east-2.tfvars",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -28,3 +28,5 @@ allowed_bucket_actions = [\n   \"s3:GetBucketLocation\",\n   \"s3:AbortMultipartUpload\"\n ]\n+\n+bucket_key_enabled = true"
      },
      {
        "filename": "examples/complete/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -21,6 +21,7 @@ module \"s3_bucket\" {\n   privileged_principal_actions  = var.privileged_principal_actions\n   privileged_principal_arns     = local.privileged_principal_arns\n   transfer_acceleration_enabled = true\n+  bucket_key_enabled            = var.bucket_key_enabled\n \n   context = module.this.context\n }"
      },
      {
        "filename": "examples/complete/variables.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -246,3 +246,13 @@ variable \"privileged_principal_actions\" {\n   default     = []\n   description = \"List of actions to permit `privileged_principal_arns` to perform on bucket and bucket prefixes (see `privileged_principal_arns`)\"\n }\n+\n+variable \"bucket_key_enabled\" {\n+  type        = bool\n+  default     = false\n+  description = <<-EOT\n+  Set this to true to use Amazon S3 Bucket Keys for SSE-KMS, which reduce the cost of AWS KMS requests.\n+\n+  For more information, see: https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-key.html\n+  EOT\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -116,6 +116,8 @@ resource \"aws_s3_bucket\" \"default\" {\n   # https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#enable-default-server-side-encryption\n   server_side_encryption_configuration {\n     rule {\n+      bucket_key_enabled = var.bucket_key_enabled\n+\n       apply_server_side_encryption_by_default {\n         sse_algorithm     = var.sse_algorithm\n         kms_master_key_id = var.kms_master_key_arn"
      },
      {
        "filename": "variables.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -281,3 +281,13 @@ variable \"s3_object_ownership\" {\n   default     = \"ObjectWriter\"\n   description = \"Specifies the S3 object ownership control. Valid values are `ObjectWriter`, `BucketOwnerPreferred`, and 'BucketOwnerEnforced'.\"\n }\n+\n+variable \"bucket_key_enabled\" {\n+  type        = bool\n+  default     = false\n+  description = <<-EOT\n+  Set this to true to use Amazon S3 Bucket Keys for SSE-KMS, which reduce the cost of AWS KMS requests.\n+\n+  For more information, see: https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-key.html\n+  EOT\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/stuartsan/lighthouse-lambda-parallel/commit/4214c1c19120650c6888d1c1a8d107755d6c6c2e",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+account.json\n+.terraform*\n+terraform.*\n+node_modules/*"
      },
      {
        "filename": "LICENSE",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+MIT License\n+\n+Copyright (c) 2019 Stuart Sandine\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE."
      },
      {
        "filename": "README.md",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+## Requirements\n+\n+- Make a new GCP project (mine is called \"lighthouse-metrics\"\n+- Do the thing about \"adding credentials\" -- create a JSON credential and download it to this project's root directory\n+- enable GKE api in console\n+\n+- Terraform (I'm using v0.11.11)\n+- https://www.terraform.io/docs/providers/google/getting_started.html#before-you-begin\n+- terraform init\n+- terraform plan\n+- terraform apply / yes\n+\n+- install `gcloud`\n+- gcloud components install kubectl\n+- gcloud auth activate-service-account --key-file=./account.json\n+- get a kubeconfig: gcloud container clusters get-credentials lighthouse-metrics --zone=us-west1-a --project=lighthouse-metrics\n+- requiring manual downscale tho `gcloud container clusters resize lighthouse-metrics --node-pool lighthouse-metrics-workers --size 0 --zone=us-west1-a --project=lighthouse-metrics` cause cluster autoscaler is either taking 10m to turn it down or never"
      },
      {
        "filename": "cmd.js",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "status": "added",
        "patch": "@@ -0,0 +1,46 @@\n+#!/usr/local/bin/node\n+\n+// do whatever you want here! crawl your site and return a list of its urls\n+const urls = [\n+  'https://kubernetesfordogs.com',\n+];\n+\n+\n+const podTemplate = (n) => `\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-${n}\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+`\n+const podsYaml = new Array(70).fill('hi').reduce((acc, _, idx) => {\n+  return acc + podTemplate(idx);\n+}, '');\n+\n+console.log(podsYaml);"
      },
      {
        "filename": "job.yaml",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "status": "added",
        "patch": "@@ -0,0 +1,35 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  name: lh-2\n+spec:\n+  completions: 70\n+  parallelism: 70\n+  template:\n+    spec:\n+      # our pod both tolerates and REQUIRES the special LH nodes\n+      tolerations:\n+        - key: \"dedicated\"\n+          operator: \"Equal\"\n+          value: \"lighthouse\"\n+          effect: \"NoSchedule\"\n+      affinity:\n+        nodeAffinity:\n+          requiredDuringSchedulingIgnoredDuringExecution:\n+            nodeSelectorTerms:\n+            - matchExpressions:\n+              - key: dedicated\n+                operator: In\n+                values:\n+                - lighthouse\n+      containers:\n+        - name: lh\n+          image: kporras07/lighthouse-ci\n+          resources:\n+            requests:\n+              memory: \"1Gi\"\n+          args:\n+          - https://kubernetesfordogs.com\n+\n+      restartPolicy: Never\n+  backoffLimit: 4"
      },
      {
        "filename": "kube_cluster.tf",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "status": "added",
        "patch": "@@ -0,0 +1,88 @@\n+resource \"google_container_cluster\" \"primary\" {\n+  name = \"lighthouse-metrics\"\n+  zone = \"us-west1-a\"\n+\n+  min_master_version = \"latest\"\n+\n+  # this is the default pool, we'll set it to a free-tier f1-micro;\n+  # the cluster needs at least one node at all times, and for f1-micro\n+  # it requires 3. we'll make them preemptible so they're cheap.\n+  initial_node_count = 3\n+\n+  # disable all addons\n+  addons_config = {\n+    kubernetes_dashboard = {\n+      disabled = true\n+    }\n+\n+    http_load_balancing {\n+      disabled = true\n+    }\n+\n+    horizontal_pod_autoscaling {\n+      disabled = true\n+    }\n+\n+    network_policy_config {\n+      disabled = true\n+    }\n+  }\n+\n+  node_config {\n+    machine_type = \"f1-micro\"\n+\n+    preemptible = true\n+\n+    # necessary to ensure the correct functioning of the cluster\n+    oauth_scopes = [\n+      \"https://www.googleapis.com/auth/compute\",\n+      \"https://www.googleapis.com/auth/devstorage.read_only\",\n+      \"https://www.googleapis.com/auth/logging.write\",\n+      \"https://www.googleapis.com/auth/monitoring\",\n+    ]\n+  }\n+}\n+\n+# dedicated node pool for nodes that will run LH pods. starts at 0.\n+# autoscaling.\n+resource \"google_container_node_pool\" \"np\" {\n+  name    = \"lighthouse-metrics-workers\"\n+  zone    = \"us-west1-a\"\n+  cluster = \"${google_container_cluster.primary.name}\"\n+\n+  initial_node_count = 0\n+\n+  autoscaling = {\n+    # TF docs say this can't be 0 but here it is!\n+    min_node_count = 0\n+    max_node_count = 10\n+  }\n+\n+  node_config {\n+    machine_type = \"n1-standard-2\"\n+\n+    # necessary to ensure the correct functioning of the cluster\n+    oauth_scopes = [\n+      \"https://www.googleapis.com/auth/compute\",\n+      \"https://www.googleapis.com/auth/devstorage.read_only\",\n+      \"https://www.googleapis.com/auth/logging.write\",\n+      \"https://www.googleapis.com/auth/monitoring\",\n+    ]\n+\n+    # do not allow any pod to be scheduled on these nodes unless\n+    # they tolerate the following taint\n+    taint = [\n+      {\n+        key    = \"dedicated\"\n+        value  = \"lighthouse\"\n+        effect = \"NO_SCHEDULE\"\n+      },\n+    ]\n+\n+    # the label is so that pods can say \"i will ONLY be scheduled\n+    # on a node with this label\" (via an affinity)\n+    labels = {\n+      dedicated = \"lighthouse\"\n+    }\n+  }\n+}"
      },
      {
        "filename": "package.json",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+{\n+  \"name\": \"lighthouse-metrics\",\n+  \"version\": \"1.0.0\",\n+  \"description\": \"- Terraform (I'm using v0.11.7) - https://www.terraform.io/docs/providers/google/getting_started.html#before-you-begin - Make a new GCP project (mine is called \\\"lighthouse-metrics\\\" - Do the thing about \\\"adding credentials\\\" -- create a JSON credential and download it to this project's root directory - terraform init - enable GKE api in console - install `gcloud` - gcloud components install kubectl - gcloud auth activate-service-account --key-file=./account.json - get a kubeconfig: gcloud container clusters get-credentials lighthouse-metrics --zone=us-west1-a --project=lighthouse-metrics\",\n+  \"main\": \"index.js\",\n+  \"scripts\": {\n+    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n+  },\n+  \"repository\": {\n+    \"type\": \"git\",\n+    \"url\": \"git+https://github.com/stuartsan/lighthouse-metrics.git\"\n+  },\n+  \"author\": \"\",\n+  \"license\": \"MIT\",\n+  \"bugs\": {\n+    \"url\": \"https://github.com/stuartsan/lighthouse-metrics/issues\"\n+  },\n+  \"homepage\": \"https://github.com/stuartsan/lighthouse-metrics#readme\",\n+  \"dependencies\": {\n+    \"@kubernetes/client-node\": \"^0.8.0\"\n+  }\n+}"
      },
      {
        "filename": "pods.yaml",
        "additions": 2241,
        "deletions": 0,
        "changes": 2241,
        "status": "added",
        "patch": "@@ -0,0 +1,2241 @@\n+# generated by cmd.js -- 70 pods to apply manually\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-0\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-1\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-2\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-3\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-4\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-5\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-6\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-7\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-8\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-9\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-10\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-11\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-12\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-13\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-14\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-15\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-16\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-17\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-18\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-19\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-20\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-21\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-22\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-23\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-24\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-25\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-26\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-27\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-28\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-29\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-30\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-31\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-32\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-33\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-34\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-35\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-36\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-37\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-38\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-39\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-40\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-41\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-42\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-43\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-44\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-45\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-46\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-47\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-48\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-49\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-50\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-51\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-52\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-53\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-54\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-55\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-56\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-57\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-58\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-59\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-60\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-61\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-62\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-63\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-64\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-65\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-66\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-67\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-68\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+\n+---\n+apiVersion: v1\n+kind: Pod\n+metadata:\n+  name: lh-69\n+  labels:\n+    lh: yeah\n+spec:\n+  # our pod both tolerates and REQUIRES the special LH nodes\n+  tolerations:\n+    - key: \"dedicated\"\n+      operator: \"Equal\"\n+      value: \"lighthouse\"\n+      effect: \"NoSchedule\"\n+  affinity:\n+    nodeAffinity:\n+      requiredDuringSchedulingIgnoredDuringExecution:\n+        nodeSelectorTerms:\n+        - matchExpressions:\n+          - key: dedicated\n+            operator: In\n+            values:\n+            - lighthouse\n+  containers:\n+    - name: lh\n+      image: kporras07/lighthouse-ci\n+      resources:\n+        requests:\n+          memory: \"1Gi\"\n+      args:\n+      - https://kubernetesfordogs.com\n+"
      },
      {
        "filename": "provider.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+provider \"google\" {\n+  credentials = \"${file(\"account.json\")}\"\n+  project     = \"lighthouse-metrics\"\n+  region      = \"us-central1\"\n+}"
      },
      {
        "filename": "yarn.lock",
        "additions": 740,
        "deletions": 0,
        "changes": 740,
        "status": "added",
        "patch": "@@ -0,0 +1,740 @@\n+# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n+# yarn lockfile v1\n+\n+\n+\"@kubernetes/client-node@^0.8.0\":\n+  version \"0.8.0\"\n+  resolved \"https://registry.yarnpkg.com/@kubernetes/client-node/-/client-node-0.8.0.tgz#e256e208d21af1bca489434080cb3740d57e9c8c\"\n+  integrity sha512-cju0AsIIGJubzOSh7fKRpSkKdoRjdYNP4Lc8LVg1lVTXtrQtcLIHAXXctlVFThTHwerGe1qPNL8jfsVtxOxxlw==\n+  dependencies:\n+    \"@types/node\" \"^10.12.0\"\n+    \"@types/request\" \"^2.47.1\"\n+    base-64 \"^0.1.0\"\n+    bluebird \"^3.5.2\"\n+    byline \"^5.0.0\"\n+    isomorphic-ws \"^4.0.1\"\n+    js-yaml \"^3.12.0\"\n+    jsonpath \"^1.0.0\"\n+    request \"^2.88.0\"\n+    shelljs \"^0.8.2\"\n+    tslib \"^1.9.3\"\n+    underscore \"^1.9.1\"\n+    ws \"^6.1.0\"\n+\n+\"@types/caseless@*\":\n+  version \"0.12.1\"\n+  resolved \"https://registry.yarnpkg.com/@types/caseless/-/caseless-0.12.1.tgz#9794c69c8385d0192acc471a540d1f8e0d16218a\"\n+  integrity sha512-FhlMa34NHp9K5MY1Uz8yb+ZvuX0pnvn3jScRSNAb75KHGB8d3rEU6hqMs3Z2vjuytcMfRg6c5CHMc3wtYyD2/A==\n+\n+\"@types/form-data@*\":\n+  version \"2.2.1\"\n+  resolved \"https://registry.yarnpkg.com/@types/form-data/-/form-data-2.2.1.tgz#ee2b3b8eaa11c0938289953606b745b738c54b1e\"\n+  integrity sha512-JAMFhOaHIciYVh8fb5/83nmuO/AHwmto+Hq7a9y8FzLDcC1KCU344XDOMEmahnrTFlHjgh4L0WJFczNIX2GxnQ==\n+  dependencies:\n+    \"@types/node\" \"*\"\n+\n+\"@types/node@*\", \"@types/node@^10.12.0\":\n+  version \"10.12.21\"\n+  resolved \"https://registry.yarnpkg.com/@types/node/-/node-10.12.21.tgz#7e8a0c34cf29f4e17a36e9bd0ea72d45ba03908e\"\n+  integrity sha512-CBgLNk4o3XMnqMc0rhb6lc77IwShMEglz05deDcn2lQxyXEZivfwgYJu7SMha9V5XcrP6qZuevTHV/QrN2vjKQ==\n+\n+\"@types/request@^2.47.1\":\n+  version \"2.48.1\"\n+  resolved \"https://registry.yarnpkg.com/@types/request/-/request-2.48.1.tgz#e402d691aa6670fbbff1957b15f1270230ab42fa\"\n+  integrity sha512-ZgEZ1TiD+KGA9LiAAPPJL68Id2UWfeSO62ijSXZjFJArVV+2pKcsVHmrcu+1oiE3q6eDGiFiSolRc4JHoerBBg==\n+  dependencies:\n+    \"@types/caseless\" \"*\"\n+    \"@types/form-data\" \"*\"\n+    \"@types/node\" \"*\"\n+    \"@types/tough-cookie\" \"*\"\n+\n+\"@types/tough-cookie@*\":\n+  version \"2.3.5\"\n+  resolved \"https://registry.yarnpkg.com/@types/tough-cookie/-/tough-cookie-2.3.5.tgz#9da44ed75571999b65c37b60c9b2b88db54c585d\"\n+  integrity sha512-SCcK7mvGi3+ZNz833RRjFIxrn4gI1PPR3NtuIS+6vMkvmsGjosqTJwRt5bAEFLRz+wtJMWv8+uOnZf2hi2QXTg==\n+\n+JSONSelect@0.4.0:\n+  version \"0.4.0\"\n+  resolved \"https://registry.yarnpkg.com/JSONSelect/-/JSONSelect-0.4.0.tgz#a08edcc67eb3fcbe99ed630855344a0cf282bb8d\"\n+  integrity sha1-oI7cxn6z/L6Z7WMIVTRKDPKCu40=\n+\n+ajv@^6.5.5:\n+  version \"6.8.1\"\n+  resolved \"https://registry.yarnpkg.com/ajv/-/ajv-6.8.1.tgz#0890b93742985ebf8973cd365c5b23920ce3cb20\"\n+  integrity sha512-eqxCp82P+JfqL683wwsL73XmFs1eG6qjw+RD3YHx+Jll1r0jNd4dh8QG9NYAeNGA/hnZjeEDgtTskgJULbxpWQ==\n+  dependencies:\n+    fast-deep-equal \"^2.0.1\"\n+    fast-json-stable-stringify \"^2.0.0\"\n+    json-schema-traverse \"^0.4.1\"\n+    uri-js \"^4.2.2\"\n+\n+argparse@^1.0.7:\n+  version \"1.0.10\"\n+  resolved \"https://registry.yarnpkg.com/argparse/-/argparse-1.0.10.tgz#bcd6791ea5ae09725e17e5ad988134cd40b3d911\"\n+  integrity sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\n+  dependencies:\n+    sprintf-js \"~1.0.2\"\n+\n+asn1@~0.2.3:\n+  version \"0.2.4\"\n+  resolved \"https://registry.yarnpkg.com/asn1/-/asn1-0.2.4.tgz#8d2475dfab553bb33e77b54e59e880bb8ce23136\"\n+  integrity sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==\n+  dependencies:\n+    safer-buffer \"~2.1.0\"\n+\n+assert-plus@1.0.0, assert-plus@^1.0.0:\n+  version \"1.0.0\"\n+  resolved \"https://registry.yarnpkg.com/assert-plus/-/assert-plus-1.0.0.tgz#f12e0f3c5d77b0b1cdd9146942e4e96c1e4dd525\"\n+  integrity sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\n+\n+async-limiter@~1.0.0:\n+  version \"1.0.0\"\n+  resolved \"https://registry.yarnpkg.com/async-limiter/-/async-limiter-1.0.0.tgz#78faed8c3d074ab81f22b4e985d79e8738f720f8\"\n+  integrity sha512-jp/uFnooOiO+L211eZOoSyzpOITMXx1rBITauYykG3BRYPu8h0UcxsPNB04RR5vo4Tyz3+ay17tR6JVf9qzYWg==\n+\n+asynckit@^0.4.0:\n+  version \"0.4.0\"\n+  resolved \"https://registry.yarnpkg.com/asynckit/-/asynckit-0.4.0.tgz#c79ed97f7f34cb8f2ba1bc9790bcc366474b4b79\"\n+  integrity sha1-x57Zf380y48robyXkLzDZkdLS3k=\n+\n+aws-sign2@~0.7.0:\n+  version \"0.7.0\"\n+  resolved \"https://registry.yarnpkg.com/aws-sign2/-/aws-sign2-0.7.0.tgz#b46e890934a9591f2d2f6f86d7e6a9f1b3fe76a8\"\n+  integrity sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=\n+\n+aws4@^1.8.0:\n+  version \"1.8.0\"\n+  resolved \"https://registry.yarnpkg.com/aws4/-/aws4-1.8.0.tgz#f0e003d9ca9e7f59c7a508945d7b2ef9a04a542f\"\n+  integrity sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ==\n+\n+balanced-match@^1.0.0:\n+  version \"1.0.0\"\n+  resolved \"https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.0.tgz#89b4d199ab2bee49de164ea02b89ce462d71b767\"\n+  integrity sha1-ibTRmasr7kneFk6gK4nORi1xt2c=\n+\n+base-64@^0.1.0:\n+  version \"0.1.0\"\n+  resolved \"https://registry.yarnpkg.com/base-64/-/base-64-0.1.0.tgz#780a99c84e7d600260361511c4877613bf24f6bb\"\n+  integrity sha1-eAqZyE59YAJgNhURxId2E78k9rs=\n+\n+bcrypt-pbkdf@^1.0.0:\n+  version \"1.0.2\"\n+  resolved \"https://registry.yarnpkg.com/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz#a4301d389b6a43f9b67ff3ca11a3f6637e360e9e\"\n+  integrity sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=\n+  dependencies:\n+    tweetnacl \"^0.14.3\"\n+\n+bluebird@^3.5.2:\n+  version \"3.5.3\"\n+  resolved \"https://registry.yarnpkg.com/bluebird/-/bluebird-3.5.3.tgz#7d01c6f9616c9a51ab0f8c549a79dfe6ec33efa7\"\n+  integrity sha512-/qKPUQlaW1OyR51WeCPBvRnAlnZFUJkCSG5HzGnuIqhgyJtF+T94lFnn33eiazjRm2LAHVy2guNnaq48X9SJuw==\n+\n+brace-expansion@^1.1.7:\n+  version \"1.1.11\"\n+  resolved \"https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-1.1.11.tgz#3c7fcbf529d87226f3d2f52b966ff5271eb441dd\"\n+  integrity sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\n+  dependencies:\n+    balanced-match \"^1.0.0\"\n+    concat-map \"0.0.1\"\n+\n+byline@^5.0.0:\n+  version \"5.0.0\"\n+  resolved \"https://registry.yarnpkg.com/byline/-/byline-5.0.0.tgz#741c5216468eadc457b03410118ad77de8c1ddb1\"\n+  integrity sha1-dBxSFkaOrcRXsDQQEYrXfejB3bE=\n+\n+caseless@~0.12.0:\n+  version \"0.12.0\"\n+  resolved \"https://registry.yarnpkg.com/caseless/-/caseless-0.12.0.tgz#1b681c21ff84033c826543090689420d187151dc\"\n+  integrity sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=\n+\n+cjson@~0.2.1:\n+  version \"0.2.1\"\n+  resolved \"https://registry.yarnpkg.com/cjson/-/cjson-0.2.1.tgz#73cd8aad65d9e1505f9af1744d3b79c1527682a5\"\n+  integrity sha1-c82KrWXZ4VBfmvF0TTt5wVJ2gqU=\n+\n+colors@0.5.x:\n+  version \"0.5.1\"\n+  resolved \"https://registry.yarnpkg.com/colors/-/colors-0.5.1.tgz#7d0023eaeb154e8ee9fce75dcb923d0ed1667774\"\n+  integrity sha1-fQAj6usVTo7p/Oddy5I9DtFmd3Q=\n+\n+combined-stream@^1.0.6, combined-stream@~1.0.6:\n+  version \"1.0.7\"\n+  resolved \"https://registry.yarnpkg.com/combined-stream/-/combined-stream-1.0.7.tgz#2d1d24317afb8abe95d6d2c0b07b57813539d828\"\n+  integrity sha512-brWl9y6vOB1xYPZcpZde3N9zDByXTosAeMDo4p1wzo6UMOX4vumB+TP1RZ76sfE6Md68Q0NJSrE/gbezd4Ul+w==\n+  dependencies:\n+    delayed-stream \"~1.0.0\"\n+\n+concat-map@0.0.1:\n+  version \"0.0.1\"\n+  resolved \"https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b\"\n+  integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\n+\n+core-util-is@1.0.2:\n+  version \"1.0.2\"\n+  resolved \"https://registry.yarnpkg.com/core-util-is/-/core-util-is-1.0.2.tgz#b5fd54220aa2bc5ab57aab7140c940754503c1a7\"\n+  integrity sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=\n+\n+dashdash@^1.12.0:\n+  version \"1.14.1\"\n+  resolved \"https://registry.yarnpkg.com/dashdash/-/dashdash-1.14.1.tgz#853cfa0f7cbe2fed5de20326b8dd581035f6e2f0\"\n+  integrity sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=\n+  dependencies:\n+    assert-plus \"^1.0.0\"\n+\n+deep-is@~0.1.3:\n+  version \"0.1.3\"\n+  resolved \"https://registry.yarnpkg.com/deep-is/-/deep-is-0.1.3.tgz#b369d6fb5dbc13eecf524f91b070feedc357cf34\"\n+  integrity sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=\n+\n+delayed-stream@~1.0.0:\n+  version \"1.0.0\"\n+  resolved \"https://registry.yarnpkg.com/delayed-stream/-/delayed-stream-1.0.0.tgz#df3ae199acadfb7d440aaae0b29e2272b24ec619\"\n+  integrity sha1-3zrhmayt+31ECqrgsp4icrJOxhk=\n+\n+ebnf-parser@~0.1.9:\n+  version \"0.1.10\"\n+  resolved \"https://registry.yarnpkg.com/ebnf-parser/-/ebnf-parser-0.1.10.tgz#cd1f6ba477c5638c40c97ed9b572db5bab5d8331\"\n+  integrity sha1-zR9rpHfFY4xAyX7ZtXLbW6tdgzE=\n+\n+ecc-jsbn@~0.1.1:\n+  version \"0.1.2\"\n+  resolved \"https://registry.yarnpkg.com/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz#3a83a904e54353287874c564b7549386849a98c9\"\n+  integrity sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=\n+  dependencies:\n+    jsbn \"~0.1.0\"\n+    safer-buffer \"^2.1.0\"\n+\n+escodegen@0.0.21:\n+  version \"0.0.21\"\n+  resolved \"https://registry.yarnpkg.com/escodegen/-/escodegen-0.0.21.tgz#53d652cfa1030388279458a5266c5ffc709c63c3\"\n+  integrity sha1-U9ZSz6EDA4gnlFilJmxf/HCcY8M=\n+  dependencies:\n+    esprima \"~1.0.2\"\n+    estraverse \"~0.0.4\"\n+  optionalDependencies:\n+    source-map \">= 0.1.2\"\n+\n+escodegen@^1.8.1:\n+  version \"1.11.0\"\n+  resolved \"https://registry.yarnpkg.com/escodegen/-/escodegen-1.11.0.tgz#b27a9389481d5bfd5bec76f7bb1eb3f8f4556589\"\n+  integrity sha512-IeMV45ReixHS53K/OmfKAIztN/igDHzTJUhZM3k1jMhIZWjk45SMwAtBsEXiJp3vSPmTcu6CXn7mDvFHRN66fw==\n+  dependencies:\n+    esprima \"^3.1.3\"\n+    estraverse \"^4.2.0\"\n+    esutils \"^2.0.2\"\n+    optionator \"^0.8.1\"\n+  optionalDependencies:\n+    source-map \"~0.6.1\"\n+\n+esprima@1.0.x, esprima@~1.0.2:\n+  version \"1.0.4\"\n+  resolved \"https://registry.yarnpkg.com/esprima/-/esprima-1.0.4.tgz#9f557e08fc3b4d26ece9dd34f8fbf476b62585ad\"\n+  integrity sha1-n1V+CPw7TSbs6d00+Pv0drYlha0=\n+\n+esprima@1.2.2:\n+  version \"1.2.2\"\n+  resolved \"https://registry.yarnpkg.com/esprima/-/esprima-1.2.2.tgz#76a0fd66fcfe154fd292667dc264019750b1657b\"\n+  integrity sha1-dqD9Zvz+FU/SkmZ9wmQBl1CxZXs=\n+\n+esprima@^3.1.3:\n+  version \"3.1.3\"\n+  resolved \"https://registry.yarnpkg.com/esprima/-/esprima-3.1.3.tgz#fdca51cee6133895e3c88d535ce49dbff62a4633\"\n+  integrity sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM=\n+\n+esprima@^4.0.0:\n+  version \"4.0.1\"\n+  resolved \"https://registry.yarnpkg.com/esprima/-/esprima-4.0.1.tgz#13b04cdb3e6c5d19df91ab6987a8695619b0aa71\"\n+  integrity sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\n+\n+estraverse@^4.2.0:\n+  version \"4.2.0\"\n+  resolved \"https://registry.yarnpkg.com/estraverse/-/estraverse-4.2.0.tgz#0dee3fed31fcd469618ce7342099fc1afa0bdb13\"\n+  integrity sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=\n+\n+estraverse@~0.0.4:\n+  version \"0.0.4\"\n+  resolved \"https://registry.yarnpkg.com/estraverse/-/estraverse-0.0.4.tgz#01a0932dfee574684a598af5a67c3bf9b6428db2\"\n+  integrity sha1-AaCTLf7ldGhKWYr1pnw7+bZCjbI=\n+\n+esutils@^2.0.2:\n+  version \"2.0.2\"\n+  resolved \"https://registry.yarnpkg.com/esutils/-/esutils-2.0.2.tgz#0abf4f1caa5bcb1f7a9d8acc6dea4faaa04bac9b\"\n+  integrity sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=\n+\n+extend@~3.0.2:\n+  version \"3.0.2\"\n+  resolved \"https://registry.yarnpkg.com/extend/-/extend-3.0.2.tgz#f8b1136b4071fbd8eb140aff858b1019ec2915fa\"\n+  integrity sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\n+\n+extsprintf@1.3.0:\n+  version \"1.3.0\"\n+  resolved \"https://registry.yarnpkg.com/extsprintf/-/extsprintf-1.3.0.tgz#96918440e3041a7a414f8c52e3c574eb3c3e1e05\"\n+  integrity sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=\n+\n+extsprintf@^1.2.0:\n+  version \"1.4.0\"\n+  resolved \"https://registry.yarnpkg.com/extsprintf/-/extsprintf-1.4.0.tgz#e2689f8f356fad62cca65a3a91c5df5f9551692f\"\n+  integrity sha1-4mifjzVvrWLMplo6kcXfX5VRaS8=\n+\n+fast-deep-equal@^2.0.1:\n+  version \"2.0.1\"\n+  resolved \"https://registry.yarnpkg.com/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz#7b05218ddf9667bf7f370bf7fdb2cb15fdd0aa49\"\n+  integrity sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk=\n+\n+fast-json-stable-stringify@^2.0.0:\n+  version \"2.0.0\"\n+  resolved \"https://registry.yarnpkg.com/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz#d5142c0caee6b1189f87d3a76111064f86c8bbf2\"\n+  integrity sha1-1RQsDK7msRifh9OnYREGT4bIu/I=\n+\n+fast-levenshtein@~2.0.4:\n+  version \"2.0.6\"\n+  resolved \"https://registry.yarnpkg.com/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz#3d8a5c66883a16a30ca8643e851f19baa7797917\"\n+  integrity sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=\n+\n+forever-agent@~0.6.1:\n+  version \"0.6.1\"\n+  resolved \"https://registry.yarnpkg.com/forever-agent/-/forever-agent-0.6.1.tgz#fbc71f0c41adeb37f96c577ad1ed42d8fdacca91\"\n+  integrity sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=\n+\n+form-data@~2.3.2:\n+  version \"2.3.3\"\n+  resolved \"https://registry.yarnpkg.com/form-data/-/form-data-2.3.3.tgz#dcce52c05f644f298c6a7ab936bd724ceffbf3a6\"\n+  integrity sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==\n+  dependencies:\n+    asynckit \"^0.4.0\"\n+    combined-stream \"^1.0.6\"\n+    mime-types \"^2.1.12\"\n+\n+fs.realpath@^1.0.0:\n+  version \"1.0.0\"\n+  resolved \"https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f\"\n+  integrity sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\n+\n+getpass@^0.1.1:\n+  version \"0.1.7\"\n+  resolved \"https://registry.yarnpkg.com/getpass/-/getpass-0.1.7.tgz#5eff8e3e684d569ae4cb2b1282604e8ba62149fa\"\n+  integrity sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=\n+  dependencies:\n+    assert-plus \"^1.0.0\"\n+\n+glob@^7.0.0:\n+  version \"7.1.3\"\n+  resolved \"https://registry.yarnpkg.com/glob/-/glob-7.1.3.tgz#3960832d3f1574108342dafd3a67b332c0969df1\"\n+  integrity sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==\n+  dependencies:\n+    fs.realpath \"^1.0.0\"\n+    inflight \"^1.0.4\"\n+    inherits \"2\"\n+    minimatch \"^3.0.4\"\n+    once \"^1.3.0\"\n+    path-is-absolute \"^1.0.0\"\n+\n+har-schema@^2.0.0:\n+  version \"2.0.0\"\n+  resolved \"https://registry.yarnpkg.com/har-schema/-/har-schema-2.0.0.tgz#a94c2224ebcac04782a0d9035521f24735b7ec92\"\n+  integrity sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=\n+\n+har-validator@~5.1.0:\n+  version \"5.1.3\"\n+  resolved \"https://registry.yarnpkg.com/har-validator/-/har-validator-5.1.3.tgz#1ef89ebd3e4996557675eed9893110dc350fa080\"\n+  integrity sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==\n+  dependencies:\n+    ajv \"^6.5.5\"\n+    har-schema \"^2.0.0\"\n+\n+http-signature@~1.2.0:\n+  version \"1.2.0\"\n+  resolved \"https://registry.yarnpkg.com/http-signature/-/http-signature-1.2.0.tgz#9aecd925114772f3d95b65a60abb8f7c18fbace1\"\n+  integrity sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=\n+  dependencies:\n+    assert-plus \"^1.0.0\"\n+    jsprim \"^1.2.2\"\n+    sshpk \"^1.7.0\"\n+\n+inflight@^1.0.4:\n+  version \"1.0.6\"\n+  resolved \"https://registry.yarnpkg.com/inflight/-/inflight-1.0.6.tgz#49bd6331d7d02d0c09bc910a1075ba8165b56df9\"\n+  integrity sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\n+  dependencies:\n+    once \"^1.3.0\"\n+    wrappy \"1\"\n+\n+inherits@2:\n+  version \"2.0.3\"\n+  resolved \"https://registry.yarnpkg.com/inherits/-/inherits-2.0.3.tgz#633c2c83e3da42a502f52466022480f4208261de\"\n+  integrity sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\n+\n+interpret@^1.0.0:\n+  version \"1.2.0\"\n+  resolved \"https://registry.yarnpkg.com/interpret/-/interpret-1.2.0.tgz#d5061a6224be58e8083985f5014d844359576296\"\n+  integrity sha512-mT34yGKMNceBQUoVn7iCDKDntA7SC6gycMAWzGx1z/CMCTV7b2AAtXlo3nRyHZ1FelRkQbQjprHSYGwzLtkVbw==\n+\n+is-typedarray@~1.0.0:\n+  version \"1.0.0\"\n+  resolved \"https://registry.yarnpkg.com/is-typedarray/-/is-typedarray-1.0.0.tgz#e479c80858df0c1b11ddda6940f96011fcda4a9a\"\n+  integrity sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=\n+\n+isomorphic-ws@^4.0.1:\n+  version \"4.0.1\"\n+  resolved \"https://registry.yarnpkg.com/isomorphic-ws/-/isomorphic-ws-4.0.1.tgz#55fd4cd6c5e6491e76dc125938dd863f5cd4f2dc\"\n+  integrity sha512-BhBvN2MBpWTaSHdWRb/bwdZJ1WaehQ2L1KngkCkfLUGF0mAWAT1sQUQacEmQ0jXkFw/czDXPNQSL5u2/Krsz1w==\n+\n+isstream@~0.1.2:\n+  version \"0.1.2\"\n+  resolved \"https://registry.yarnpkg.com/isstream/-/isstream-0.1.2.tgz#47e63f7af55afa6f92e1500e690eb8b8529c099a\"\n+  integrity sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=\n+\n+jison-lex@0.2.x:\n+  version \"0.2.1\"\n+  resolved \"https://registry.yarnpkg.com/jison-lex/-/jison-lex-0.2.1.tgz#ac4b815e8cce5132eb12b5dfcfe8d707b8844dfe\"\n+  integrity sha1-rEuBXozOUTLrErXfz+jXB7iETf4=\n+  dependencies:\n+    lex-parser \"0.1.x\"\n+    nomnom \"1.5.2\"\n+\n+jison@0.4.13:\n+  version \"0.4.13\"\n+  resolved \"https://registry.yarnpkg.com/jison/-/jison-0.4.13.tgz#9041707d62241367f58834532b9f19c2c36fac78\"\n+  integrity sha1-kEFwfWIkE2f1iDRTK58ZwsNvrHg=\n+  dependencies:\n+    JSONSelect \"0.4.0\"\n+    cjson \"~0.2.1\"\n+    ebnf-parser \"~0.1.9\"\n+    escodegen \"0.0.21\"\n+    esprima \"1.0.x\"\n+    jison-lex \"0.2.x\"\n+    lex-parser \"~0.1.3\"\n+    nomnom \"1.5.2\"\n+\n+js-yaml@^3.12.0:\n+  version \"3.12.1\"\n+  resolved \"https://registry.yarnpkg.com/js-yaml/-/js-yaml-3.12.1.tgz#295c8632a18a23e054cf5c9d3cecafe678167600\"\n+  integrity sha512-um46hB9wNOKlwkHgiuyEVAybXBjwFUV0Z/RaHJblRd9DXltue9FTYvzCr9ErQrK9Adz5MU4gHWVaNUfdmrC8qA==\n+  dependencies:\n+    argparse \"^1.0.7\"\n+    esprima \"^4.0.0\"\n+\n+jsbn@~0.1.0:\n+  version \"0.1.1\"\n+  resolved \"https://registry.yarnpkg.com/jsbn/-/jsbn-0.1.1.tgz#a5e654c2e5a2deb5f201d96cefbca80c0ef2f513\"\n+  integrity sha1-peZUwuWi3rXyAdls77yoDA7y9RM=\n+\n+json-schema-traverse@^0.4.1:\n+  version \"0.4.1\"\n+  resolved \"https://registry.yarnpkg.com/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz#69f6a87d9513ab8bb8fe63bdb0979c448e684660\"\n+  integrity sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\n+\n+json-schema@0.2.3:\n+  version \"0.2.3\"\n+  resolved \"https://registry.yarnpkg.com/json-schema/-/json-schema-0.2.3.tgz#b480c892e59a2f05954ce727bd3f2a4e882f9e13\"\n+  integrity sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=\n+\n+json-stringify-safe@~5.0.1:\n+  version \"5.0.1\"\n+  resolved \"https://registry.yarnpkg.com/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz#1296a2d58fd45f19a0f6ce01d65701e2c735b6eb\"\n+  integrity sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=\n+\n+jsonpath@^1.0.0:\n+  version \"1.0.0\"\n+  resolved \"https://registry.yarnpkg.com/jsonpath/-/jsonpath-1.0.0.tgz#45cd9d4c4d0d6825d90bd7e40f83f1182b13dd07\"\n+  integrity sha1-Rc2dTE0NaCXZC9fkD4PxGCsT3Qc=\n+  dependencies:\n+    esprima \"1.2.2\"\n+    jison \"0.4.13\"\n+    static-eval \"2.0.0\"\n+    underscore \"1.7.0\"\n+\n+jsprim@^1.2.2:\n+  version \"1.4.1\"\n+  resolved \"https://registry.yarnpkg.com/jsprim/-/jsprim-1.4.1.tgz#313e66bc1e5cc06e438bc1b7499c2e5c56acb6a2\"\n+  integrity sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=\n+  dependencies:\n+    assert-plus \"1.0.0\"\n+    extsprintf \"1.3.0\"\n+    json-schema \"0.2.3\"\n+    verror \"1.10.0\"\n+\n+levn@~0.3.0:\n+  version \"0.3.0\"\n+  resolved \"https://registry.yarnpkg.com/levn/-/levn-0.3.0.tgz#3b09924edf9f083c0490fdd4c0bc4421e04764ee\"\n+  integrity sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=\n+  dependencies:\n+    prelude-ls \"~1.1.2\"\n+    type-check \"~0.3.2\"\n+\n+lex-parser@0.1.x, lex-parser@~0.1.3:\n+  version \"0.1.4\"\n+  resolved \"https://registry.yarnpkg.com/lex-parser/-/lex-parser-0.1.4.tgz#64c4f025f17fd53bfb45763faeb16f015a747550\"\n+  integrity sha1-ZMTwJfF/1Tv7RXY/rrFvAVp0dVA=\n+\n+mime-db@~1.37.0:\n+  version \"1.37.0\"\n+  resolved \"https://registry.yarnpkg.com/mime-db/-/mime-db-1.37.0.tgz#0b6a0ce6fdbe9576e25f1f2d2fde8830dc0ad0d8\"\n+  integrity sha512-R3C4db6bgQhlIhPU48fUtdVmKnflq+hRdad7IyKhtFj06VPNVdk2RhiYL3UjQIlso8L+YxAtFkobT0VK+S/ybg==\n+\n+mime-types@^2.1.12, mime-types@~2.1.19:\n+  version \"2.1.21\"\n+  resolved \"https://registry.yarnpkg.com/mime-types/-/mime-types-2.1.21.tgz#28995aa1ecb770742fe6ae7e58f9181c744b3f96\"\n+  integrity sha512-3iL6DbwpyLzjR3xHSFNFeb9Nz/M8WDkX33t1GFQnFOllWk8pOrh/LSrB5OXlnlW5P9LH73X6loW/eogc+F5lJg==\n+  dependencies:\n+    mime-db \"~1.37.0\"\n+\n+minimatch@^3.0.4:\n+  version \"3.0.4\"\n+  resolved \"https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.4.tgz#5166e286457f03306064be5497e8dbb0c3d32083\"\n+  integrity sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\n+  dependencies:\n+    brace-expansion \"^1.1.7\"\n+\n+nomnom@1.5.2:\n+  version \"1.5.2\"\n+  resolved \"https://registry.yarnpkg.com/nomnom/-/nomnom-1.5.2.tgz#f4345448a853cfbd5c0d26320f2477ab0526fe2f\"\n+  integrity sha1-9DRUSKhTz71cDSYyDyR3qwUm/i8=\n+  dependencies:\n+    colors \"0.5.x\"\n+    underscore \"1.1.x\"\n+\n+oauth-sign@~0.9.0:\n+  version \"0.9.0\"\n+  resolved \"https://registry.yarnpkg.com/oauth-sign/-/oauth-sign-0.9.0.tgz#47a7b016baa68b5fa0ecf3dee08a85c679ac6455\"\n+  integrity sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==\n+\n+once@^1.3.0:\n+  version \"1.4.0\"\n+  resolved \"https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1\"\n+  integrity sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\n+  dependencies:\n+    wrappy \"1\"\n+\n+optionator@^0.8.1:\n+  version \"0.8.2\"\n+  resolved \"https://registry.yarnpkg.com/optionator/-/optionator-0.8.2.tgz#364c5e409d3f4d6301d6c0b4c05bba50180aeb64\"\n+  integrity sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=\n+  dependencies:\n+    deep-is \"~0.1.3\"\n+    fast-levenshtein \"~2.0.4\"\n+    levn \"~0.3.0\"\n+    prelude-ls \"~1.1.2\"\n+    type-check \"~0.3.2\"\n+    wordwrap \"~1.0.0\"\n+\n+path-is-absolute@^1.0.0:\n+  version \"1.0.1\"\n+  resolved \"https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f\"\n+  integrity sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\n+\n+path-parse@^1.0.6:\n+  version \"1.0.6\"\n+  resolved \"https://registry.yarnpkg.com/path-parse/-/path-parse-1.0.6.tgz#d62dbb5679405d72c4737ec58600e9ddcf06d24c\"\n+  integrity sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==\n+\n+performance-now@^2.1.0:\n+  version \"2.1.0\"\n+  resolved \"https://registry.yarnpkg.com/performance-now/-/performance-now-2.1.0.tgz#6309f4e0e5fa913ec1c69307ae364b4b377c9e7b\"\n+  integrity sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=\n+\n+prelude-ls@~1.1.2:\n+  version \"1.1.2\"\n+  resolved \"https://registry.yarnpkg.com/prelude-ls/-/prelude-ls-1.1.2.tgz#21932a549f5e52ffd9a827f570e04be62a97da54\"\n+  integrity sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=\n+\n+psl@^1.1.24:\n+  version \"1.1.31\"\n+  resolved \"https://registry.yarnpkg.com/psl/-/psl-1.1.31.tgz#e9aa86d0101b5b105cbe93ac6b784cd547276184\"\n+  integrity sha512-/6pt4+C+T+wZUieKR620OpzN/LlnNKuWjy1iFLQ/UG35JqHlR/89MP1d96dUfkf6Dne3TuLQzOYEYshJ+Hx8mw==\n+\n+punycode@^1.4.1:\n+  version \"1.4.1\"\n+  resolved \"https://registry.yarnpkg.com/punycode/-/punycode-1.4.1.tgz#c0d5a63b2718800ad8e1eb0fa5269c84dd41845e\"\n+  integrity sha1-wNWmOycYgArY4esPpSachN1BhF4=\n+\n+punycode@^2.1.0:\n+  version \"2.1.1\"\n+  resolved \"https://registry.yarnpkg.com/punycode/-/punycode-2.1.1.tgz#b58b010ac40c22c5657616c8d2c2c02c7bf479ec\"\n+  integrity sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\n+\n+qs@~6.5.2:\n+  version \"6.5.2\"\n+  resolved \"https://registry.yarnpkg.com/qs/-/qs-6.5.2.tgz#cb3ae806e8740444584ef154ce8ee98d403f3e36\"\n+  integrity sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==\n+\n+rechoir@^0.6.2:\n+  version \"0.6.2\"\n+  resolved \"https://registry.yarnpkg.com/rechoir/-/rechoir-0.6.2.tgz#85204b54dba82d5742e28c96756ef43af50e3384\"\n+  integrity sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=\n+  dependencies:\n+    resolve \"^1.1.6\"\n+\n+request@^2.88.0:\n+  version \"2.88.0\"\n+  resolved \"https://registry.yarnpkg.com/request/-/request-2.88.0.tgz#9c2fca4f7d35b592efe57c7f0a55e81052124fef\"\n+  integrity sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2/A0hg==\n+  dependencies:\n+    aws-sign2 \"~0.7.0\"\n+    aws4 \"^1.8.0\"\n+    caseless \"~0.12.0\"\n+    combined-stream \"~1.0.6\"\n+    extend \"~3.0.2\"\n+    forever-agent \"~0.6.1\"\n+    form-data \"~2.3.2\"\n+    har-validator \"~5.1.0\"\n+    http-signature \"~1.2.0\"\n+    is-typedarray \"~1.0.0\"\n+    isstream \"~0.1.2\"\n+    json-stringify-safe \"~5.0.1\"\n+    mime-types \"~2.1.19\"\n+    oauth-sign \"~0.9.0\"\n+    performance-now \"^2.1.0\"\n+    qs \"~6.5.2\"\n+    safe-buffer \"^5.1.2\"\n+    tough-cookie \"~2.4.3\"\n+    tunnel-agent \"^0.6.0\"\n+    uuid \"^3.3.2\"\n+\n+resolve@^1.1.6:\n+  version \"1.10.0\"\n+  resolved \"https://registry.yarnpkg.com/resolve/-/resolve-1.10.0.tgz#3bdaaeaf45cc07f375656dfd2e54ed0810b101ba\"\n+  integrity sha512-3sUr9aq5OfSg2S9pNtPA9hL1FVEAjvfOC4leW0SNf/mpnaakz2a9femSd6LqAww2RaFctwyf1lCqnTHuF1rxDg==\n+  dependencies:\n+    path-parse \"^1.0.6\"\n+\n+safe-buffer@^5.0.1, safe-buffer@^5.1.2:\n+  version \"5.1.2\"\n+  resolved \"https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.1.2.tgz#991ec69d296e0313747d59bdfd2b745c35f8828d\"\n+  integrity sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\n+\n+safer-buffer@^2.0.2, safer-buffer@^2.1.0, safer-buffer@~2.1.0:\n+  version \"2.1.2\"\n+  resolved \"https://registry.yarnpkg.com/safer-buffer/-/safer-buffer-2.1.2.tgz#44fa161b0187b9549dd84bb91802f9bd8385cd6a\"\n+  integrity sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\n+\n+shelljs@^0.8.2:\n+  version \"0.8.3\"\n+  resolved \"https://registry.yarnpkg.com/shelljs/-/shelljs-0.8.3.tgz#a7f3319520ebf09ee81275b2368adb286659b097\"\n+  integrity sha512-fc0BKlAWiLpwZljmOvAOTE/gXawtCoNrP5oaY7KIaQbbyHeQVg01pSEuEGvGh3HEdBU4baCD7wQBwADmM/7f7A==\n+  dependencies:\n+    glob \"^7.0.0\"\n+    interpret \"^1.0.0\"\n+    rechoir \"^0.6.2\"\n+\n+\"source-map@>= 0.1.2\":\n+  version \"0.7.3\"\n+  resolved \"https://registry.yarnpkg.com/source-map/-/source-map-0.7.3.tgz#5302f8169031735226544092e64981f751750383\"\n+  integrity sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ==\n+\n+source-map@~0.6.1:\n+  version \"0.6.1\"\n+  resolved \"https://registry.yarnpkg.com/source-map/-/source-map-0.6.1.tgz#74722af32e9614e9c287a8d0bbde48b5e2f1a263\"\n+  integrity sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\n+\n+sprintf-js@~1.0.2:\n+  version \"1.0.3\"\n+  resolved \"https://registry.yarnpkg.com/sprintf-js/-/sprintf-js-1.0.3.tgz#04e6926f662895354f3dd015203633b857297e2c\"\n+  integrity sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=\n+\n+sshpk@^1.7.0:\n+  version \"1.16.1\"\n+  resolved \"https://registry.yarnpkg.com/sshpk/-/sshpk-1.16.1.tgz#fb661c0bef29b39db40769ee39fa70093d6f6877\"\n+  integrity sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==\n+  dependencies:\n+    asn1 \"~0.2.3\"\n+    assert-plus \"^1.0.0\"\n+    bcrypt-pbkdf \"^1.0.0\"\n+    dashdash \"^1.12.0\"\n+    ecc-jsbn \"~0.1.1\"\n+    getpass \"^0.1.1\"\n+    jsbn \"~0.1.0\"\n+    safer-buffer \"^2.0.2\"\n+    tweetnacl \"~0.14.0\"\n+\n+static-eval@2.0.0:\n+  version \"2.0.0\"\n+  resolved \"https://registry.yarnpkg.com/static-eval/-/static-eval-2.0.0.tgz#0e821f8926847def7b4b50cda5d55c04a9b13864\"\n+  integrity sha512-6flshd3F1Gwm+Ksxq463LtFd1liC77N/PX1FVVc3OzL3hAmo2fwHFbuArkcfi7s9rTNsLEhcRmXGFZhlgy40uw==\n+  dependencies:\n+    escodegen \"^1.8.1\"\n+\n+tough-cookie@~2.4.3:\n+  version \"2.4.3\"\n+  resolved \"https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-2.4.3.tgz#53f36da3f47783b0925afa06ff9f3b165280f781\"\n+  integrity sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==\n+  dependencies:\n+    psl \"^1.1.24\"\n+    punycode \"^1.4.1\"\n+\n+tslib@^1.9.3:\n+  version \"1.9.3\"\n+  resolved \"https://registry.yarnpkg.com/tslib/-/tslib-1.9.3.tgz#d7e4dd79245d85428c4d7e4822a79917954ca286\"\n+  integrity sha512-4krF8scpejhaOgqzBEcGM7yDIEfi0/8+8zDRZhNZZ2kjmHJ4hv3zCbQWxoJGz1iw5U0Jl0nma13xzHXcncMavQ==\n+\n+tunnel-agent@^0.6.0:\n+  version \"0.6.0\"\n+  resolved \"https://registry.yarnpkg.com/tunnel-agent/-/tunnel-agent-0.6.0.tgz#27a5dea06b36b04a0a9966774b290868f0fc40fd\"\n+  integrity sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=\n+  dependencies:\n+    safe-buffer \"^5.0.1\"\n+\n+tweetnacl@^0.14.3, tweetnacl@~0.14.0:\n+  version \"0.14.5\"\n+  resolved \"https://registry.yarnpkg.com/tweetnacl/-/tweetnacl-0.14.5.tgz#5ae68177f192d4456269d108afa93ff8743f4f64\"\n+  integrity sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=\n+\n+type-check@~0.3.2:\n+  version \"0.3.2\"\n+  resolved \"https://registry.yarnpkg.com/type-check/-/type-check-0.3.2.tgz#5884cab512cf1d355e3fb784f30804b2b520db72\"\n+  integrity sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=\n+  dependencies:\n+    prelude-ls \"~1.1.2\"\n+\n+underscore@1.1.x:\n+  version \"1.1.7\"\n+  resolved \"https://registry.yarnpkg.com/underscore/-/underscore-1.1.7.tgz#40bab84bad19d230096e8d6ef628bff055d83db0\"\n+  integrity sha1-QLq4S60Z0jAJbo1u9ii/8FXYPbA=\n+\n+underscore@1.7.0:\n+  version \"1.7.0\"\n+  resolved \"https://registry.yarnpkg.com/underscore/-/underscore-1.7.0.tgz#6bbaf0877500d36be34ecaa584e0db9fef035209\"\n+  integrity sha1-a7rwh3UA02vjTsqlhODbn+8DUgk=\n+\n+underscore@^1.9.1:\n+  version \"1.9.1\"\n+  resolved \"https://registry.yarnpkg.com/underscore/-/underscore-1.9.1.tgz#06dce34a0e68a7babc29b365b8e74b8925203961\"\n+  integrity sha512-5/4etnCkd9c8gwgowi5/om/mYO5ajCaOgdzj/oW+0eQV9WxKBDZw5+ycmKmeaTXjInS/W0BzpGLo2xR2aBwZdg==\n+\n+uri-js@^4.2.2:\n+  version \"4.2.2\"\n+  resolved \"https://registry.yarnpkg.com/uri-js/-/uri-js-4.2.2.tgz#94c540e1ff772956e2299507c010aea6c8838eb0\"\n+  integrity sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==\n+  dependencies:\n+    punycode \"^2.1.0\"\n+\n+uuid@^3.3.2:\n+  version \"3.3.2\"\n+  resolved \"https://registry.yarnpkg.com/uuid/-/uuid-3.3.2.tgz#1b4af4955eb3077c501c23872fc6513811587131\"\n+  integrity sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==\n+\n+verror@1.10.0:\n+  version \"1.10.0\"\n+  resolved \"https://registry.yarnpkg.com/verror/-/verror-1.10.0.tgz#3a105ca17053af55d6e270c1f8288682e18da400\"\n+  integrity sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=\n+  dependencies:\n+    assert-plus \"^1.0.0\"\n+    core-util-is \"1.0.2\"\n+    extsprintf \"^1.2.0\"\n+\n+wordwrap@~1.0.0:\n+  version \"1.0.0\"\n+  resolved \"https://registry.yarnpkg.com/wordwrap/-/wordwrap-1.0.0.tgz#27584810891456a4171c8d0226441ade90cbcaeb\"\n+  integrity sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=\n+\n+wrappy@1:\n+  version \"1.0.2\"\n+  resolved \"https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f\"\n+  integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\n+\n+ws@^6.1.0:\n+  version \"6.1.3\"\n+  resolved \"https://registry.yarnpkg.com/ws/-/ws-6.1.3.tgz#d2d2e5f0e3c700ef2de89080ebc0ac6e1bf3a72d\"\n+  integrity sha512-tbSxiT+qJI223AP4iLfQbkbxkwdFcneYinM2+x46Gx2wgvbaOMO36czfdfVUBRTHvzAMRhDd98sA5d/BuWbQdg==\n+  dependencies:\n+    async-limiter \"~1.0.0\""
      }
    ],
    "existing_codes": [
      "awareness",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/openinfrastructure/terraform-google-multinic/commit/7a9c468b88d2edee19007cff6529a20a38eeb363",
    "files": [
      {
        "filename": "examples/endpoints/main.tf",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -12,12 +12,20 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n+# Instances in the same region as the multinic VMs.\n variable \"num_instances\" {\n   description = \"Set to 0 to reduce costs when not actively developing.\"\n   type        = number\n   default     = 0\n }\n \n+# Instances in a differnt region from the multinic VMs.\n+variable \"num_instances_remote\" {\n+  description = \"Set to 0 to reduce costs when not actively developing.\"\n+  type        = number\n+  default     = 0\n+}\n+\n locals {\n   project_id = \"multinic-networks-18d1\"\n }\n@@ -27,6 +35,7 @@ module \"endpoint-main-general\" {\n   source = \"../../modules/51_endpoints\"\n \n   num_instances = var.num_instances\n+  preemptible   = true\n \n   project_id  = local.project_id\n   name_prefix = \"endpoint-main-general\"\n@@ -43,6 +52,7 @@ module \"endpoint-transit-general\" {\n   source = \"../../modules/51_endpoints\"\n \n   num_instances = var.num_instances\n+  preemptible   = true\n \n   project_id  = local.project_id\n   name_prefix = \"endpoint-transit-general\"\n@@ -58,7 +68,7 @@ module \"endpoint-transit-general\" {\n module \"endpoint-main-remote\" {\n   source = \"../../modules/51_endpoints\"\n \n-  num_instances = var.num_instances\n+  num_instances = var.num_instances_remote\n \n   project_id  = local.project_id\n   name_prefix = \"endpoint-main-remote\"\n@@ -74,7 +84,7 @@ module \"endpoint-main-remote\" {\n module \"endpoint-transit-remote\" {\n   source = \"../../modules/51_endpoints\"\n \n-  num_instances = var.num_instances\n+  num_instances = var.num_instances_remote\n \n   project_id  = local.project_id\n   name_prefix = \"endpoint-transit-remote\""
      },
      {
        "filename": "modules/50_compute/main.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -65,7 +65,8 @@ resource google_compute_instance_template \"multinic\" {\n   }\n \n   scheduling {\n-    automatic_restart = true\n+    preemptible       = var.preemptible\n+    automatic_restart = var.preemptible ? false : true\n   }\n \n   lifecycle {"
      },
      {
        "filename": "modules/50_compute/variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -125,3 +125,9 @@ variable \"disk_size_gb\" {\n   type        = string\n   default     = \"100\"\n }\n+\n+variable \"preemptible\" {\n+  description = \"Allows instance to be preempted. This defaults to false. See https://cloud.google.com/compute/docs/instances/preemptible\"\n+  type        = bool\n+  default     = false\n+}"
      },
      {
        "filename": "modules/51_endpoints/main.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -54,7 +54,8 @@ resource google_compute_instance_template \"template\" {\n   }\n \n   scheduling {\n-    automatic_restart = true\n+    preemptible       = var.preemptible\n+    automatic_restart = var.preemptible ? false : true\n   }\n \n   lifecycle {"
      },
      {
        "filename": "modules/51_endpoints/variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -124,3 +124,9 @@ variable \"disk_size_gb\" {\n   type        = string\n   default     = \"100\"\n }\n+\n+variable \"preemptible\" {\n+  description = \"Allows instance to be preempted. This defaults to false. See https://cloud.google.com/compute/docs/instances/preemptible\"\n+  type        = bool\n+  default     = false\n+}"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/openinfrastructure/terraform-google-multinic/commit/620750695d8f83d79451948d2a43bf920b48c062",
    "files": [
      {
        "filename": "README.md",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -8,9 +8,11 @@ tunneling for east-west connectivity.\n Functionality:\n \n  * [ILB as Next Hop][ilb-nh] for high availability and reliability.\n+ * Auto-healing with persistence of established TCP connections.\n+ * Auto scaling based on CPU utilization.  See [Autoscaler][autoscaler] for\n+   details.\n  * Virtual wire behavior, traffic ingress to eth0 egresses eth1 and vice-versa.\n  * Separate health checks for load balancing and auto-healing.\n- * Auto-healing with persistence of established TCP connections.\n  * Cloud logging with structured log examples.\n  * Fast startup and shutdown, no packages installed.\n  * Systemd integration for easier control and logging.\n@@ -282,3 +284,4 @@ packets.\n [ilb]: https://cloud.google.com/load-balancing/docs/internal\n [balancing]: https://cloud.google.com/load-balancing/docs/backend-service#balancing-mode\n [autoheal]: https://cloud.google.com/compute/docs/instance-groups/autohealing-instances-in-migs\n+[autoscaler]: ./docs/AUTOSCALER.md"
      },
      {
        "filename": "docs/AUTOSCALER.md",
        "additions": 238,
        "deletions": 0,
        "changes": 238,
        "status": "added",
        "patch": "@@ -0,0 +1,238 @@\n+Autoscaler\n+===\n+\n+Summary\n+---\n+\n+ * CPU Autoscaler scales out from 1 to 6 instances in ~6 minutes.\n+ * `sent_bytes_count` Autoscaler scales out from 1 to 6 instances in ~30 minutes.\n+ * `n1-highcpu-2` machine types are recommended for multinic instances to\n+   support 10Gbps per instance.\n+ * CPU usage per n1-highcpu-2 multinic instance is ~22-24% when sending at\n+   10Gbps.\n+ * Autoscaler target of 20% CPU Utilization is recommended.\n+\n+Test Setup\n+---\n+\n+ * 1x `n1-highcpu-2` multinic router at the start.  (10Gbps)\n+ * 1x `n2-standard-4` [iperf-server](#iperf-server)\n+ * 6x [iperf-clients](#iperf-client)\n+\n+Over the 30 minute test run time, measure:\n+\n+ 1. Time to scale out\n+ 2. Aggregate throughput of the multinic instances\n+ 3. Time to scale in\n+\n+## <a name=\"CPU\"></a> CPU Autoscaler\n+\n+The CPU based autoscaler targets 20% utilization for each multinic instance.\n+At 20% CPU utilization of a `n1-highcpu-2` instance, the 10Gbps of bandwidth is\n+approximately 80% utilized.\n+\n+Scale out:\n+\n+| Time    | Note                                                    |\n+| ----    | ----                                                    |\n+| t0      | Start 6 iperf clients (~60Gbps send rate)               |\n+| +2m16s  | Autoscaler moves from 1 to 2 instances                  |\n+| +4m10s  | Autoscaler moves from 2 to 5 instances                  |\n+| +6m06s  | Autoscaler moves from 5 to 6 instances                  |\n+| +11m47s | The autoscaler cannot add more instances. (Max Reached) |\n+\n+Scale in:\n+\n+| Time   | Note                                                             |\n+| ----   | ----                                                             |\n+| t0     | iperf clients stop sending, multinic send rate drops below 1Mbit |\n+| +8m48s | Autoscaler moves from 6 to 5 instances                           |\n+| +8m58s | Autoscaler moves to 4 instances                                  |\n+| +9m08s | Autoscaler moves to 3 instances                                  |\n+| +9m16s | Autoscaler moves to 2 instances                                  |\n+| +9m29s | Autoscaler moves to 1 instance                                   |\n+\n+## <a name=\"sent_bytes_count\"></a> `sent_bytes_count` Autoscaler\n+\n+The `instance/network/sent_bytes_count` based autoscaler targets `939524096`\n+bytes per second, which is 70% of 10Gbps for each `n1-highcpu-2` multinic\n+instance.\n+\n+Scale out:\n+\n+| Time    | Note                                           |\n+| ----    | ----                                           |\n+| t0      | 5:32 Start 6 iperf clients (~60Gbps send rate) |\n+| +3m56s  | Autoscaler moves from 1 to 2 instances         |\n+| +9m24s  | Autoscaler moves from 2 to 3 instances         |\n+| +14m53s | Autoscaler moves from 3 to 4 instances         |\n+| +20m18s | Autoscaler moves from 4 to 5 instances         |\n+| +31m19s | Autoscaler moves from 5 to 6 instances         |\n+\n+Scale in:\n+\n+| Time    | Note                                                                     |\n+| ----    | ----                                                                     |\n+| t0      | 6:03 PM iperf clients stop sending, multinic send rate drops below 1Mbit |\n+| +12m14s | Autoscaler moves from 6 to 5 instances                                   |\n+| +13m17s | Autoscaler moves to 3 instances                                          |\n+| +13m01s | Autoscaler moves to 2 instances                                          |\n+| +13m18s | Autoscaler moves to 1 instance                                           |\n+\n+## <a name=\"CPU_graphs\"></a> CPU Autoscaler Graphs\n+\n+Multinic aggregate sent bytes per second\n+\n+![Sent Bytes](./autoscaler_cpu_sent_bytes.png)\n+\n+Multinic instance group size\n+\n+![Instance group size](./autoscaler_cpu_groupsize.png)\n+\n+CPU Utilization\n+\n+![Group CPU Utilization](./autoscaler_cpu_utilization.png)\n+\n+## <a name=\"sent_bytes_count_graphs\"></a> `sent_bytes_count` Autoscaler Graphs\n+\n+Multinic aggregate sent bytes per second\n+\n+![Sent Bytes](./autoscaler_sent_bytes_count_sent_bytes.png)\n+\n+Multinic instance group size\n+\n+![Instance group size](./autoscaler_sent_bytes_count_groupsize.png)\n+\n+CPU Utilization\n+\n+![Group CPU Utilization](./autoscaler_sent_bytes_count_utilization.png)\n+\n+Example\n+---\n+\n+Start with a single multinic instance running in a single zone.\n+\n+```bash\n+gcloud compute instances list --filter=\"name~^multinic\"\n+```\n+```\n+NAME             ZONE        MACHINE_TYPE  PREEMPTIBLE  INTERNAL_IP          EXTERNAL_IP  STATUS\n+multinic-a-wf14  us-west1-a  n1-highcpu-2  true         10.33.0.7,10.37.0.7               RUNNING\n+```\n+\n+Create the iperf-server endpoint on the east side of the routers:\n+\n+```bash\n+# examples/endpoints/\n+terraform apply -var num_instances_east=1\n+```\n+\n+Obtain the IP address of the iperf-server:\n+\n+```\n+IP=$(gcloud compute instances list --filter=\"name~^endpoint-main\" --format=\"value(networkInterfaces[0].networkIP)\")\n+```\n+\n+Start the iperf clients to generate network traffic through the routers.  Note,\n+this command will generate a large amount of network traffic.  Verify the\n+clients, routers, and servers are all in the same zone to reduce zone egress\n+charges.\n+\n+```bash\n+terraform apply -auto-approve -var iperf_client=${IP} -var num_instances_east=1 -var num_instances=6\n+```\n+\n+For the next 30 minutes, each client will try to connect to the server at `$IP`\n+every 10 seconds.  Multiple, short, runs are used to keep constant upward\n+pressure on the multinic routers.\n+\n+Helpful Commands\n+---\n+\n+List the number of multinic instances and the last autoscaler event:\n+\n+```bash\n+gcloud compute instances list --filter=name~^multinic\n+gcloud beta logging read \"resource.type=gce_autoscaler\" --limit=1\n+```\n+\n+Notes\n+===\n+\n+Appendix\n+===\n+\n+## Intentions\n+\n+A `n1-highcpu-2` machine type is used for multinic-router instances to handle\n+10Gbps of traffic.\n+\n+A `n2-standard-4` machine type is used for the iperf-server endpoint\n+`multinic-main` to handle upwards of 50Gbps from multiple iperf clients.\n+\n+A `n1-highcpu-2` machine type is used for iperf-clients to generate up to\n+10Gbps per client.\n+\n+\n+## <a name=\"iperf-client\"></a> iperf-client\n+\n+```bash\n+# 30 minutes, x*10 second runs.\n+local x=180\n+if [[ -n \"${IPERF_CLIENT}\" ]]; then\n+  while [[ $x -gt 0 ]]; do\n+    ((x--))\n+    # Restart the client to reset the TCP window size to create pressure on the network.\n+    iperf --parallel 128 --time 10 -i 1 --client \"${IPERF_CLIENT}\" | tee /var/log/iperf.log\n+  done\n+fi\n+```\n+\n+## <a name=\"iperf-server\"></a> iperf-server\n+\n+```\n+[Unit]\n+Description=iperf server\n+After=network-online.target\n+Wants=network-online.target\n+\n+[Service]\n+Type=simple\n+ExecStart=/usr/bin/iperf --server --interval 5\n+Restart=on-abort\n+\n+[Install]\n+WantedBy=multi-user.target\n+```\n+\n+## Inspecting Autoscaler Logs\n+\n+`gcloud` may be used to inspect the autoscaler logs and changes in near real\n+time:\n+\n+```\n++ gcloud compute instances list '--filter=name~^multinic'\n+NAME             ZONE        MACHINE_TYPE  PREEMPTIBLE  INTERNAL_IP            EXTERNAL_IP  STATUS\n+multinic-a-2tzr  us-west1-a  n1-highcpu-2  true         10.33.0.21,10.37.0.21               RUNNING\n+multinic-a-c96w  us-west1-a  n1-highcpu-2  true         10.33.0.20,10.37.0.20               RUNNING\n+multinic-a-l28p  us-west1-a  n1-highcpu-2  true         10.33.0.25,10.37.0.25               RUNNING\n+multinic-a-q8kp  us-west1-a  n1-highcpu-2  true         10.33.0.22,10.37.0.22               RUNNING\n+multinic-a-r4qc  us-west1-a  n1-highcpu-2  true         10.33.0.26,10.37.0.26               RUNNING\n+multinic-a-sqbn  us-west1-a  n1-highcpu-2  true         10.33.0.24,10.37.0.24               RUNNING\n++ gcloud beta logging read resource.type=gce_autoscaler --limit=1\n+---\n+insertId: 148tet9ggdt2fx7\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: OK\n+  oldStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:44:30.829289132Z'\n+```"
      },
      {
        "filename": "docs/autoscaler_cpu_groupsize.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "docs/autoscaler_cpu_sent_bytes.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "docs/autoscaler_cpu_test.yaml",
        "additions": 1025,
        "deletions": 0,
        "changes": 1025,
        "status": "added",
        "patch": "@@ -0,0 +1,1025 @@\n+---\n+insertId: 8c9nn0g3jam6l5\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 1\n+  oldSize: 2\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T15:07:30.072745855Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:07:30.066096638Z'\n+---\n+insertId: mhcgu1gfkrd8sx\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 1\n+  old_size: 2\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T15:07:29.984871707Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:07:29.977582315Z'\n+---\n+insertId: 12kk1jggfk5ba2t\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 2\n+  oldSize: 4\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T15:07:16.799540877Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:07:16.791902996Z'\n+---\n+insertId: ldmkabgeuhnt09\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 2\n+  old_size: 4\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T15:07:16.735139565Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:07:16.724634860Z'\n+---\n+insertId: 9proopgdbrsmzq\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 3\n+  oldSize: 4\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T15:07:14.044433186Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:07:14.031225644Z'\n+---\n+insertId: 1pvjg16g8589ked\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 3\n+  old_size: 4\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T15:07:13.923469228Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:07:13.915387958Z'\n+---\n+insertId: v2uvylg3vkxdlf\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 3\n+  oldSize: 5\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T15:07:08.691492693Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:07:08.681848459Z'\n+---\n+insertId: dlohpcgekvehz7\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 3\n+  old_size: 5\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T15:07:08.631436869Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:07:08.622149036Z'\n+---\n+insertId: 1js0fyng8zqcxfi\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 4\n+  oldSize: 5\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T15:06:58.142538758Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:06:58.140716575Z'\n+---\n+insertId: 81oq8kgcghs8fq\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 4\n+  old_size: 5\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T15:06:58.070888841Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:06:58.062951848Z'\n+---\n+insertId: bdmx7bghr0pk0x\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 5\n+  oldSize: 6\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T15:06:48.358783722Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:06:48.351141443Z'\n+---\n+insertId: 1ixxj8jg1jrfnrq\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 5\n+  old_size: 6\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T15:06:48.296272344Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T15:06:48.286866703Z'\n+---\n+insertId: 148tet9ggdt2fx7\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: OK\n+  oldStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:44:30.829289132Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:44:30.827656877Z'\n+---\n+insertId: 1j7w55vg2dp3bcx\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: OK\n+  old_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:44:30.799197458Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:44:30.789575414Z'\n+---\n+insertId: 15me7hjg1nuw73y\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  oldStatus:\n+    details: OK\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:44:22.882186070Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:44:22.870473533Z'\n+---\n+insertId: 1yre8yfgchs1ooq\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  old_status:\n+    details: OK\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:44:22.789079399Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:44:22.773322161Z'\n+---\n+insertId: 1xdr863gevi2rmv\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: OK\n+  oldStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:43:02.702245257Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:43:02.699104243Z'\n+---\n+insertId: b3s3djg34pag08\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: OK\n+  old_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:43:02.672379790Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:43:02.658908093Z'\n+---\n+insertId: a9n87lgh5z4e0j\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  oldStatus:\n+    details: OK\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:42:38.560411257Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:42:38.558601506Z'\n+---\n+insertId: 9pm1nfg7rhjmfg\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  old_status:\n+    details: OK\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:42:38.468851510Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:42:38.466619542Z'\n+---\n+insertId: 8w5f66ggfy7ihp\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: OK\n+  oldStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:41:35.263556054Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:41:35.254492400Z'\n+---\n+insertId: bno9u6gdgk3i5s\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: OK\n+  old_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:41:35.189533701Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:41:35.185820253Z'\n+---\n+insertId: 1wtnq2dgbi44fbv\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  oldStatus:\n+    details: OK\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:40:51.189054Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:40:51.178682132Z'\n+---\n+insertId: 16gtl2cgc6tgc0s\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  old_status:\n+    details: OK\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:40:51.146578907Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:40:51.144404983Z'\n+---\n+insertId: 1ixxj8jg1jg5a4m\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: OK\n+  oldStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:39:06.447020889Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:39:06.435675192Z'\n+---\n+insertId: iv9cnyg52ec3gc\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: OK\n+  old_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:39:06.383018232Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:39:06.381546227Z'\n+---\n+insertId: 1wtnoa0g2rut532\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  oldStatus:\n+    details: OK\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:38:36.897395346Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:38:36.895597563Z'\n+---\n+insertId: 1ji0k57g28xxceo\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  old_status:\n+    details: OK\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:38:36.840206886Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:38:36.837481223Z'\n+---\n+insertId: xkyqffgglylydh\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: OK\n+  oldStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:37:19.218457975Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:37:19.203231693Z'\n+---\n+insertId: b3s3djg34msvb6\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: OK\n+  old_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:37:19.131113454Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:37:19.117826888Z'\n+---\n+insertId: 1ama8ldg67rlf49\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerStatusChange\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newStatus:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  oldStatus:\n+    details: OK\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fstatus_change\n+receiveTimestamp: '2020-09-27T14:36:47.105123768Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:36:47.095522092Z'\n+---\n+insertId: h7okw8gjvdalac\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_status:\n+    details: The number of instances in the instance group has reached the max_num_replicas.\n+      The autoscaler cannot add more instances.\n+  old_status:\n+    details: OK\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:36:47.031533255Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:36:47.029675153Z'\n+---\n+insertId: 1kw0tn5g37ahtig\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 6\n+  oldSize: 5\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T14:31:07.042778415Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:31:07.039492447Z'\n+---\n+insertId: v2vn0igihm9o5k\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 6\n+  old_size: 5\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:31:06.957164095Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:31:06.954980769Z'\n+---\n+insertId: 120lv7ugeo6y80l\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 5\n+  oldSize: 2\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T14:29:11.033028115Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:29:11.031127998Z'\n+---\n+insertId: 1fc055zg7ow2ax6\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 5\n+  old_size: 2\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:29:10.948630417Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:29:10.939652881Z'\n+---\n+insertId: 1plvra7g2sv2h2b\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 2\n+  oldSize: 1\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T14:27:16.126782324Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:27:16.113413686Z'\n+---\n+insertId: h7okw8gjv7zfe1\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 2\n+  old_size: 1\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:27:16.062423801Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:27:16.061019199Z'\n+---\n+insertId: 1o675ngegv88q2\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 1\n+  oldSize: 1\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T14:22:58.908542692Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:22:58.900026381Z'\n+---\n+insertId: 1pvir3tg85masvj\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 1\n+  old_size: 1\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T14:22:58.831930388Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:22:58.821287771Z'\n+---\n+insertId: 77t15zg8ijtkw3\n+jsonPayload:\n+  actor:\n+    user: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+  event_subtype: compute.autoscalers.insert\n+  event_timestamp_us: '1601216565098893'\n+  event_type: GCE_OPERATION_DONE\n+  operation:\n+    id: '7810956822379831004'\n+    name: operation-1601216563343-5b04c487770c2-533f9dec-d002a6ad\n+    type: operation\n+    zone: us-west1-a\n+  resource:\n+    id: '7448944805072936668'\n+    name: multinic-a-us-west1-a\n+    type: autoscaler\n+    zone: us-west1-a\n+  trace_id: operation-1601216563343-5b04c487770c2-533f9dec-d002a6ad\n+  version: '1.2'\n+labels:\n+  compute.googleapis.com/resource_id: '7448944805072936668'\n+  compute.googleapis.com/resource_name: multinic-a-us-west1-a\n+  compute.googleapis.com/resource_type: autoscaler\n+  compute.googleapis.com/resource_zone: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Factivity_log\n+receiveTimestamp: '2020-09-27T14:22:45.156879541Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:22:45.098893Z'\n+---\n+insertId: lnhf6gd39o0\n+logName: projects/multinic-networks-18d1/logs/cloudaudit.googleapis.com%2Factivity\n+operation:\n+  id: operation-1601216563343-5b04c487770c2-533f9dec-d002a6ad\n+  last: true\n+  producer: compute.googleapis.com\n+protoPayload:\n+  '@type': type.googleapis.com/google.cloud.audit.AuditLog\n+  authenticationInfo:\n+    principalEmail: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+  methodName: v1.compute.autoscalers.insert\n+  request:\n+    '@type': type.googleapis.com/compute.autoscalers.insert\n+  requestMetadata:\n+    callerIp: 35.212.245.41\n+    callerNetwork: //compute.googleapis.com/projects/v2-controller-3467/global/networks/__unknown__\n+    callerSuppliedUserAgent: HashiCorp Terraform/0.12.26 (+https://www.terraform.io)\n+      Terraform Plugin SDK/1.11.0 terraform-provider-google/3.38.0,gzip(gfe)\n+    destinationAttributes: {}\n+    requestAttributes: {}\n+  resourceName: projects/multinic-networks-18d1/zones/us-west1-a/autoscalers/multinic-a-us-west1-a\n+  serviceName: compute.googleapis.com\n+receiveTimestamp: '2020-09-27T14:22:45.972010908Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: NOTICE\n+timestamp: '2020-09-27T14:22:45.005700Z'\n+---\n+insertId: totxmcga1nep3s\n+jsonPayload:\n+  actor:\n+    user: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+  event_subtype: compute.autoscalers.insert\n+  event_timestamp_us: '1601216563951440'\n+  event_type: GCE_API_CALL\n+  ip_address: ''\n+  operation:\n+    id: '7810956822379831004'\n+    name: operation-1601216563343-5b04c487770c2-533f9dec-d002a6ad\n+    type: operation\n+    zone: us-west1-a\n+  request:\n+    body: 'null'\n+    url: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a/autoscalers?alt=json\n+  resource:\n+    id: '7448944805072936668'\n+    name: multinic-a-us-west1-a\n+    type: autoscaler\n+    zone: us-west1-a\n+  trace_id: operation-1601216563343-5b04c487770c2-533f9dec-d002a6ad\n+  user_agent: HashiCorp Terraform/0.12.26 (+https://www.terraform.io) Terraform Plugin\n+    SDK/1.11.0 terraform-provider-google/3.38.0,gzip(gfe)\n+  version: '1.2'\n+labels:\n+  compute.googleapis.com/resource_id: '7448944805072936668'\n+  compute.googleapis.com/resource_name: multinic-a-us-west1-a\n+  compute.googleapis.com/resource_type: autoscaler\n+  compute.googleapis.com/resource_zone: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Factivity_log\n+receiveTimestamp: '2020-09-27T14:22:43.990446438Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T14:22:43.951440Z'\n+---\n+insertId: au0nhme22hn6\n+logName: projects/multinic-networks-18d1/logs/cloudaudit.googleapis.com%2Factivity\n+operation:\n+  first: true\n+  id: operation-1601216563343-5b04c487770c2-533f9dec-d002a6ad\n+  producer: compute.googleapis.com\n+protoPayload:\n+  '@type': type.googleapis.com/google.cloud.audit.AuditLog\n+  authenticationInfo:\n+    principalEmail: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+    serviceAccountDelegationInfo:\n+    - firstPartyPrincipal:\n+        principalEmail: service-353844093205@compute-system.iam.gserviceaccount.com\n+  authorizationInfo:\n+  - granted: true\n+    permission: compute.autoscalers.create\n+    resourceAttributes:\n+      name: projects/multinic-networks-18d1/zones/us-west1-a/autoscalers/multinic-a-us-west1-a\n+      service: compute\n+      type: compute.autoscalers\n+  - granted: true\n+    permission: compute.instanceGroupManagers.use\n+    resourceAttributes:\n+      name: projects/multinic-networks-18d1/zones/us-west1-a/instanceGroupManagers/multinic-a-us-west1-a\n+      service: compute\n+      type: compute.instanceGroupManagers\n+  methodName: v1.compute.autoscalers.insert\n+  request:\n+    '@type': type.googleapis.com/compute.autoscalers.insert\n+    autoscalingPolicy:\n+      coolDownPeriodSec: '45'\n+      cpuUtilization:\n+        utilizationTarget: 0.2\n+      maxNumReplicas: '6'\n+      minNumReplicas: '1'\n+      mode: ON\n+    name: multinic-a-us-west1-a\n+    target: https://compute.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a/instanceGroupManagers/multinic-a-us-west1-a\n+  requestMetadata:\n+    callerIp: 35.212.245.41\n+    callerNetwork: //compute.googleapis.com/projects/v2-controller-3467/global/networks/__unknown__\n+    callerSuppliedUserAgent: HashiCorp Terraform/0.12.26 (+https://www.terraform.io)\n+      Terraform Plugin SDK/1.11.0 terraform-provider-google/3.38.0,gzip(gfe)\n+    destinationAttributes: {}\n+    requestAttributes:\n+      auth: {}\n+      time: '2020-09-27T14:22:43.969006Z'\n+  resourceLocation:\n+    currentLocations:\n+    - us-west1-a\n+  resourceName: projects/multinic-networks-18d1/zones/us-west1-a/autoscalers/multinic-a-us-west1-a\n+  response:\n+    '@type': type.googleapis.com/operation\n+    id: '7810956822379831004'\n+    insertTime: '2020-09-27T07:22:43.791-07:00'\n+    name: operation-1601216563343-5b04c487770c2-533f9dec-d002a6ad\n+    operationType: compute.autoscalers.insert\n+    progress: '0'\n+    selfLink: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a/operations/operation-1601216563343-5b04c487770c2-533f9dec-d002a6ad\n+    selfLinkWithId: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a/operations/7810956822379831004\n+    startTime: '2020-09-27T07:22:43.801-07:00'\n+    status: RUNNING\n+    targetId: '7448944805072936668'\n+    targetLink: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a/autoscalers/multinic-a-us-west1-a\n+    user: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+    zone: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a\n+  serviceName: compute.googleapis.com\n+receiveTimestamp: '2020-09-27T14:22:44.229950073Z'\n+resource:\n+  labels:\n+    autoscaler_id: '7448944805072936668'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: NOTICE\n+timestamp: '2020-09-27T14:22:43.420010Z'"
      },
      {
        "filename": "docs/autoscaler_cpu_utilization.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "docs/autoscaler_sent_bytes_count_groupsize.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "docs/autoscaler_sent_bytes_count_sent_bytes.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "docs/autoscaler_sent_bytes_count_test.yaml",
        "additions": 560,
        "deletions": 0,
        "changes": 560,
        "status": "added",
        "patch": "@@ -0,0 +1,560 @@\n+---\n+insertId: 1b6jsjfg73qgypx\n+jsonPayload:\n+  actor:\n+    user: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+  event_subtype: delete\n+  event_timestamp_us: '1601169799340909'\n+  event_type: GCE_OPERATION_DONE\n+  operation:\n+    id: '8861399324970604393'\n+    name: operation-1601169797712-5b04165048bea-1198e3b5-e6896ce2\n+    type: operation\n+    zone: us-west1-a\n+  resource:\n+    id: '2465692322529174740'\n+    name: multinic-a-us-west1-a\n+    type: autoscaler\n+    zone: us-west1-a\n+  trace_id: operation-1601169797712-5b04165048bea-1198e3b5-e6896ce2\n+  version: '1.2'\n+labels:\n+  compute.googleapis.com/resource_id: '2465692322529174740'\n+  compute.googleapis.com/resource_name: multinic-a-us-west1-a\n+  compute.googleapis.com/resource_type: autoscaler\n+  compute.googleapis.com/resource_zone: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Factivity_log\n+receiveTimestamp: '2020-09-27T01:23:19.387355137Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:23:19.340909Z'\n+---\n+insertId: -9mo4ld2l0y\n+logName: projects/multinic-networks-18d1/logs/cloudaudit.googleapis.com%2Factivity\n+operation:\n+  id: operation-1601169797712-5b04165048bea-1198e3b5-e6896ce2\n+  last: true\n+  producer: compute.googleapis.com\n+protoPayload:\n+  '@type': type.googleapis.com/google.cloud.audit.AuditLog\n+  authenticationInfo:\n+    principalEmail: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+  methodName: v1.compute.autoscalers.delete\n+  request:\n+    '@type': type.googleapis.com/compute.autoscalers.delete\n+  requestMetadata:\n+    callerIp: 35.212.139.20\n+    callerNetwork: //compute.googleapis.com/projects/v2-controller-3467/global/networks/__unknown__\n+    callerSuppliedUserAgent: HashiCorp Terraform/0.12.26 (+https://www.terraform.io)\n+      Terraform Plugin SDK/1.11.0 terraform-provider-google/3.38.0,gzip(gfe)\n+    destinationAttributes: {}\n+    requestAttributes: {}\n+  resourceName: projects/multinic-networks-18d1/zones/us-west1-a/autoscalers/multinic-a-us-west1-a\n+  serviceName: compute.googleapis.com\n+receiveTimestamp: '2020-09-27T01:23:20.280289820Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: NOTICE\n+timestamp: '2020-09-27T01:23:19.196905Z'\n+---\n+insertId: 1l5zwy9g755mln2\n+jsonPayload:\n+  actor:\n+    user: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+  event_subtype: delete\n+  event_timestamp_us: '1601169798267557'\n+  event_type: GCE_API_CALL\n+  ip_address: ''\n+  operation:\n+    id: '8861399324970604393'\n+    name: operation-1601169797712-5b04165048bea-1198e3b5-e6896ce2\n+    type: operation\n+    zone: us-west1-a\n+  request:\n+    body: 'null'\n+    url: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a/autoscalers/multinic-a-us-west1-a?alt=json\n+  resource:\n+    id: '2465692322529174740'\n+    name: multinic-a-us-west1-a\n+    type: autoscaler\n+    zone: us-west1-a\n+  trace_id: operation-1601169797712-5b04165048bea-1198e3b5-e6896ce2\n+  user_agent: HashiCorp Terraform/0.12.26 (+https://www.terraform.io) Terraform Plugin\n+    SDK/1.11.0 terraform-provider-google/3.38.0,gzip(gfe)\n+  version: '1.2'\n+labels:\n+  compute.googleapis.com/resource_id: '2465692322529174740'\n+  compute.googleapis.com/resource_name: multinic-a-us-west1-a\n+  compute.googleapis.com/resource_type: autoscaler\n+  compute.googleapis.com/resource_zone: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Factivity_log\n+receiveTimestamp: '2020-09-27T01:23:18.313441074Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:23:18.267557Z'\n+---\n+insertId: -saf9qte19vkw\n+logName: projects/multinic-networks-18d1/logs/cloudaudit.googleapis.com%2Factivity\n+operation:\n+  first: true\n+  id: operation-1601169797712-5b04165048bea-1198e3b5-e6896ce2\n+  producer: compute.googleapis.com\n+protoPayload:\n+  '@type': type.googleapis.com/google.cloud.audit.AuditLog\n+  authenticationInfo:\n+    principalEmail: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+    serviceAccountDelegationInfo:\n+    - firstPartyPrincipal:\n+        principalEmail: service-353844093205@compute-system.iam.gserviceaccount.com\n+  authorizationInfo:\n+  - granted: true\n+    permission: compute.autoscalers.delete\n+    resourceAttributes:\n+      name: projects/multinic-networks-18d1/zones/us-west1-a/autoscalers/multinic-a-us-west1-a\n+      service: compute\n+      type: compute.autoscalers\n+  methodName: v1.compute.autoscalers.delete\n+  request:\n+    '@type': type.googleapis.com/compute.autoscalers.delete\n+  requestMetadata:\n+    callerIp: 35.212.139.20\n+    callerNetwork: //compute.googleapis.com/projects/v2-controller-3467/global/networks/__unknown__\n+    callerSuppliedUserAgent: HashiCorp Terraform/0.12.26 (+https://www.terraform.io)\n+      Terraform Plugin SDK/1.11.0 terraform-provider-google/3.38.0,gzip(gfe)\n+    destinationAttributes: {}\n+    requestAttributes:\n+      auth: {}\n+      time: '2020-09-27T01:23:18.287140Z'\n+  resourceLocation:\n+    currentLocations:\n+    - us-west1-a\n+  resourceName: projects/multinic-networks-18d1/zones/us-west1-a/autoscalers/multinic-a-us-west1-a\n+  response:\n+    '@type': type.googleapis.com/operation\n+    id: '8861399324970604393'\n+    insertTime: '2020-09-26T18:23:18.101-07:00'\n+    name: operation-1601169797712-5b04165048bea-1198e3b5-e6896ce2\n+    operationType: delete\n+    progress: '0'\n+    selfLink: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a/operations/operation-1601169797712-5b04165048bea-1198e3b5-e6896ce2\n+    selfLinkWithId: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a/operations/8861399324970604393\n+    startTime: '2020-09-26T18:23:18.113-07:00'\n+    status: RUNNING\n+    targetId: '2465692322529174740'\n+    targetLink: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a/autoscalers/multinic-a-us-west1-a\n+    user: platform-admin@v2-controller-3467.iam.gserviceaccount.com\n+    zone: https://www.googleapis.com/compute/v1/projects/multinic-networks-18d1/zones/us-west1-a\n+  serviceName: compute.googleapis.com\n+receiveTimestamp: '2020-09-27T01:23:19.142864041Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: NOTICE\n+timestamp: '2020-09-27T01:23:17.775862Z'\n+---\n+insertId: i1j4wrg7cwacsx\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 1\n+  oldSize: 2\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T01:16:18.919570381Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:16:18.907373939Z'\n+---\n+insertId: 2hy2jigd7ix4lm\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 1\n+  old_size: 2\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T01:16:18.879817938Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:16:18.868881197Z'\n+---\n+insertId: 170m9zeg240qfmt\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 1\n+  oldSize: 3\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T01:16:17.259023111Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:16:17.256914337Z'\n+---\n+insertId: uisywwggvq2yq1\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 1\n+  old_size: 3\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T01:16:17.172392857Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:16:17.160740337Z'\n+---\n+insertId: d1wa8tgfglpu67\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 2\n+  oldSize: 3\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T01:16:01.443584969Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:16:01.440984304Z'\n+---\n+insertId: wh9nk7g82wib19\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 2\n+  old_size: 3\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T01:16:01.380320267Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:16:01.369042125Z'\n+---\n+insertId: 1mjsw72gde8dn0y\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 3\n+  oldSize: 6\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T01:15:17.913004341Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:15:17.902158206Z'\n+---\n+insertId: 5kco3rfsou7n8\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 3\n+  old_size: 6\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T01:15:17.854627729Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:15:17.846337412Z'\n+---\n+insertId: 1848mmbfunqlel\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 5\n+  oldSize: 6\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T01:15:14.440662392Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:15:14.432756372Z'\n+---\n+insertId: 1idvqqgg6iifwkg\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 5\n+  old_size: 6\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T01:15:14.361473390Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:15:14.351652057Z'\n+---\n+insertId: 1gpyg6ygclecroa\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 6\n+  oldSize: 5\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T01:03:19.165702243Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:03:19.157452473Z'\n+---\n+insertId: 1bgg43fgf22r77f\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 6\n+  old_size: 5\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T01:03:19.116046216Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T01:03:19.114567742Z'\n+---\n+insertId: 1g6399rg2j1mw8y\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 5\n+  oldSize: 4\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T00:52:19.050684879Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T00:52:19.047291484Z'\n+---\n+insertId: 8w0i5rg1r7zyot\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 5\n+  old_size: 4\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T00:52:18.985710410Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T00:52:18.983789017Z'\n+---\n+insertId: 46bq8pgbd2zopo\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 4\n+  oldSize: 3\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T00:46:53.922727924Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T00:46:53.912153900Z'\n+---\n+insertId: 14smd2sggxvxwpb\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 4\n+  old_size: 3\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T00:46:53.850313834Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T00:46:53.846989016Z'\n+---\n+insertId: 1xxc493g797w2js\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 3\n+  oldSize: 2\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T00:41:24.516703996Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T00:41:24.508950997Z'\n+---\n+insertId: ktmen0g7z35p32\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 3\n+  old_size: 2\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T00:41:24.481227141Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T00:41:24.471685656Z'\n+---\n+insertId: 1pvjg16g7s9v31p\n+jsonPayload:\n+  '@type': type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\n+  autoscalerName: multinic-a-us-west1-a\n+  instanceGroupName: multinic-a-us-west1-a\n+  newSize: 2\n+  oldSize: 1\n+  projectId: multinic-networks-18d1\n+  zoneName: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/autoscaler.googleapis.com%2Fsize_change\n+receiveTimestamp: '2020-09-27T00:35:56.905001829Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T00:35:56.903144273Z'\n+---\n+insertId: dlohpcgeaol6f8\n+jsonPayload:\n+  autoscaler_name: multinic-a-us-west1-a\n+  instance_group_name: multinic-a-us-west1-a\n+  new_size: 2\n+  old_size: 1\n+  project_id: multinic-networks-18d1\n+  zone_name: us-west1-a\n+logName: projects/multinic-networks-18d1/logs/compute.googleapis.com%2Fautoscaler\n+receiveTimestamp: '2020-09-27T00:35:56.833504605Z'\n+resource:\n+  labels:\n+    autoscaler_id: '2465692322529174740'\n+    location: us-west1-a\n+    project_id: multinic-networks-18d1\n+  type: gce_autoscaler\n+severity: INFO\n+timestamp: '2020-09-27T00:35:56.831562702Z'"
      },
      {
        "filename": "docs/autoscaler_sent_bytes_count_utilization.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "docs/panic_test01.json.bz2",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "docs/test02_mig.txt.bz2",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "examples/compute/main.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -25,6 +25,12 @@ variable \"num_instances_b\" {\n   default     = 0\n }\n \n+variable \"preemptible\" {\n+  description = \"Allows instance to be preempted. This defaults to false. See https://cloud.google.com/compute/docs/instances/preemptible\"\n+  type        = bool\n+  default     = true\n+}\n+\n locals {\n   project_id = \"multinic-networks-18d1\"\n   region     = \"us-west1\"\n@@ -45,6 +51,8 @@ module \"multinic-a\" {\n   source = \"../../modules/50_compute\"\n \n   num_instances = var.num_instances\n+  preemptible   = var.preemptible\n+  autoscale     = var.num_instances == 0 ? false : true\n \n   project_id  = local.project_id\n   name_prefix = \"multinic-a\"\n@@ -69,6 +77,9 @@ module \"multinic-b\" {\n   source = \"../../modules/50_compute\"\n \n   num_instances = var.num_instances_b\n+  preemptible   = var.preemptible\n+  autoscale     = var.num_instances_b == 0 ? false : true\n+\n \n   project_id  = local.project_id\n   name_prefix = \"multinic-b\""
      },
      {
        "filename": "examples/endpoints/main.tf",
        "additions": 43,
        "deletions": 1,
        "changes": 44,
        "status": "modified",
        "patch": "@@ -19,13 +19,37 @@ variable \"num_instances\" {\n   default     = 0\n }\n \n+variable \"num_instances_east\" {\n+  description = \"Set to 0 to reduce costs when not actively developing.\"\n+  type        = number\n+  default     = 0\n+}\n+\n # Instances in a differnt region from the multinic VMs.\n variable \"num_instances_remote\" {\n   description = \"Set to 0 to reduce costs when not actively developing.\"\n   type        = number\n   default     = 0\n }\n \n+variable \"machine_type_west\" {\n+  description = \"Machine type\"\n+  type        = string\n+  default     = \"n1-highcpu-2\"\n+}\n+\n+variable \"machine_type_east\" {\n+  description = \"Machine type\"\n+  type        = string\n+  default     = \"n1-highcpu-2\"\n+}\n+\n+variable \"iperf_client\" {\n+  description = \"If set, the iperf.service unit file will be started and connect to the server at this address.  For example, '10.10.1.2'\"\n+  type        = string\n+  default     = \"\"\n+}\n+\n locals {\n   project_id = \"multinic-networks-18d1\"\n }\n@@ -34,13 +58,21 @@ locals {\n module \"endpoint-main-general\" {\n   source = \"../../modules/51_endpoints\"\n \n-  num_instances = var.num_instances\n+  # This is set to 1 instance because it's the iperf3 Server\n+  num_instances = var.num_instances_east\n+  machine_type  = var.machine_type_east\n   preemptible   = true\n \n   project_id  = local.project_id\n   name_prefix = \"endpoint-main-general\"\n   region      = \"us-west1\"\n \n+  labels = {\n+    role = \"iperf-server\"\n+  }\n+\n+  distribution_policy_zones = [\"us-west1-a\"]\n+\n   nic0_network = \"main\"\n   nic0_project = local.project_id\n   nic0_subnet  = \"main-general\"\n@@ -52,12 +84,22 @@ module \"endpoint-transit-general\" {\n   source = \"../../modules/51_endpoints\"\n \n   num_instances = var.num_instances\n+  machine_type  = var.machine_type_west\n+  # Instances in the westward Transit VPC are iperf3 clients and connect to the\n+  # instance in the eastward main VPC.\n+  iperf_client = var.iperf_client\n   preemptible   = true\n \n   project_id  = local.project_id\n   name_prefix = \"endpoint-transit-general\"\n   region      = \"us-west1\"\n \n+  labels = {\n+    role = \"iperf-client\"\n+  }\n+\n+  distribution_policy_zones = [\"us-west1-a\"]\n+\n   nic0_network = \"transit\"\n   nic0_project = local.project_id\n   nic0_subnet  = \"transit-general\""
      },
      {
        "filename": "modules/50_compute/main.tf",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "status": "modified",
        "patch": "@@ -37,6 +37,8 @@ resource google_compute_instance_template \"multinic\" {\n \n   tags = local.tags\n \n+  labels = var.labels\n+\n   network_interface {\n     subnetwork         = var.nic0_subnet\n     subnetwork_project = var.nic0_project\n@@ -117,3 +119,37 @@ resource \"google_compute_instance_group_manager\" \"multinic\" {\n     instance_template = google_compute_instance_template.multinic.self_link\n   }\n }\n+\n+resource \"google_compute_autoscaler\" \"multinic\" {\n+  count   = var.autoscale ? 1 : 0\n+  project = var.project_id\n+  name    = \"${var.name_prefix}-${var.zone}\"\n+  zone    = var.zone\n+  target  = google_compute_instance_group_manager.multinic.id\n+\n+  autoscaling_policy {\n+    max_replicas    = var.max_replicas\n+    min_replicas    = var.num_instances\n+    # systemd-analyze\n+    # Startup finished in 1.265s (kernel) + 5.206s (initrd) + 46.529s (userspace) = 53.001s\n+    # multi-user.target reached after 27.702s in userspace\n+    cooldown_period = 45\n+\n+    # CPU Utilization results in more responsive autoscaler behavior than\n+    # `sent_bytes_count`\n+    cpu_utilization {\n+      # multinic n1-highcpu-2 utilizes ~22-24% CPU when sending 10Gbps\n+      # 0.2 is a good value for a n1-highcpu-2 as of 2020-09-24\n+      target = var.utilization_target\n+    }\n+\n+    ## See https://cloud.google.com/monitoring/api/metrics_gcp\n+    # Delta count of bytes sent over the network. Sampled every 60 seconds.\n+    # After sampling, data is not visible for up to 240 seconds.\n+    # metric {\n+    #   name   = \"compute.googleapis.com/instance/network/sent_bytes_count\"\n+    #   target = var.utilization_target\n+    #   type   = \"DELTA_PER_SECOND\"\n+    # }\n+  }\n+}"
      },
      {
        "filename": "modules/50_compute/variables.tf",
        "additions": 31,
        "deletions": 3,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -91,15 +91,15 @@ variable \"nic1_cidrs\" {\n }\n \n variable \"machine_type\" {\n-  description = \"The machine type of each IP Router Bridge instance\"\n+  description = \"The machine type of each IP Router Bridge instance.  Check the table for Maximum egress bandwidth - https://cloud.google.com/compute/docs/machine-types\"\n   type        = string\n-  default     = \"n1-standard-1\"\n+  default     = \"n1-highcpu-2\"\n }\n \n variable \"num_instances\" {\n   description = \"The number of instances in the instance group\"\n   type        = number\n-  default     = 3\n+  default     = 1\n }\n \n variable \"hc_initial_delay_secs\" {\n@@ -131,3 +131,31 @@ variable \"preemptible\" {\n   type        = bool\n   default     = false\n }\n+\n+variable \"autoscale\" {\n+  description = \"Enable autoscaling default configuration, .  For advanced configuration, set to false and manage your own google_compute_autoscaler resource with target set this module's instance_group.id output value.\"\n+  type        = bool\n+  default     = true\n+}\n+\n+variable \"utilization_target\" {\n+  description = \"The CPU utilization_target for the Autoscaler.  A n1-highcpu-2 instance sending at 10Gbps has CPU utilization of 22-24%.\"\n+  type        = number\n+  default     = 0.2 # 20% when using CPU Utilization\n+  # default   = 939524096 # 70% of 10Gbps when using `instance/network/sent_bytes_count`\n+  # default   = 161061273 # 60% of 2Gbps when using `instance/network/sent_bytes_count`\n+}\n+\n+variable \"max_replicas\" {\n+  description = \"The maximum number of instances when the Autoscaler scales out\"\n+  type        = number\n+  default     = 4\n+}\n+\n+variable \"labels\" {\n+  description = \"Labels to apply to the compute instance resources managed by this module\"\n+  type        = map\n+  default     = {\n+    role = \"multinic-router\"\n+  }\n+}"
      },
      {
        "filename": "modules/51_endpoints/files/startup.sh",
        "additions": 75,
        "deletions": 4,
        "changes": 79,
        "status": "modified",
        "patch": "@@ -1,9 +1,80 @@\n #! /bin/bash\n #\n \n-# Get health check passing as quick as possible\n-yum -y install nginx\n-systemctl start nginx\n+setup_status_api() {\n+  # Install status API\n+  local status_file status_unit\n+  status_file=\"$(mktemp)\"\n+  echo '{status: \"OK\", host: \"'\"${HOSTNAME}\"'\"}' > \"${status_file}\"\n+  install -v -o 0 -g 0 -m 0755 -d /var/lib/multinic/status\n+  install -v -o 0 -g 0 -m 0644 \"${status_file}\" /var/lib/multinic/status/status.json\n+\n+  status_unit=\"$(mktemp)\"\n+  cat <<EOF>\"${status_unit}\"\n+[Unit]\n+Description=hc-health auto-healing endpoint (Instance is auto-healed if this unit is stopped)\n+After=network.target\n+\n+[Service]\n+Type=simple\n+User=nobody\n+Group=nogroup\n+Restart=always\n+WorkingDirectory=/var/lib/multinic/status\n+ExecStart=@/usr/bin/python3 \"/usr/bin/python3\" \"-m\" \"http.server\" \"9000\"\n+PrivateTmp=true\n+\n+[Install]\n+WantedBy=multi-user.target\n+EOF\n+  install -m 0644 -o 0 -g 0 \"${status_unit}\" /etc/systemd/system/hc-health.service\n+  systemctl daemon-reload\n+  systemctl restart hc-health.service\n+  systemctl enable hc-health.service\n+}\n+\n+setup_iperf_server() {\n+  local svcfile\n+  svcfile=\"$(mktemp)\"\n+  cat <<EOF>\"$svcfile\"\n+[Unit]\n+Description=iperf server\n+After=network-online.target\n+Wants=network-online.target\n+\n+[Service]\n+Type=simple\n+ExecStart=/usr/bin/iperf --server --interval 5\n+Restart=on-abort\n+\n+[Install]\n+WantedBy=multi-user.target\n+EOF\n+  install -m 0644 -o 0 -g 0 \"$svcfile\" /etc/systemd/system/iperf-server.service\n+  systemctl daemon-reload\n+  systemctl start iperf-server\n+  systemctl enable iperf-server\n+}\n+\n+setup_iperf_client() {\n+  # 30 minutes, x*10 second runs.\n+  local x=180\n+  if [[ -n \"${IPERF_CLIENT}\" ]]; then\n+    while [[ $x -gt 0 ]]; do\n+      ((x--))\n+      # Restart the client to reset the TCP window size to create pressure on the network.\n+      iperf --parallel 128 --time 10 -i 1 --client \"${IPERF_CLIENT}\" | tee /var/log/iperf.log\n+    done\n+  fi\n+}\n+\n+setup_status_api\n \n # Install convenience packages for load testing\n-yum -y install git tmux tcpdump iperf3\n+apt install -y -qq iperf\n+\n+setup_iperf_server\n+\n+apt install -y -qq tmux htop\n+\n+setup_iperf_client"
      },
      {
        "filename": "modules/51_endpoints/main.tf",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -22,6 +22,9 @@ module \"startup-script-lib\" {\n \n data \"template_file\" \"startup-script-config\" {\n   template = \"${file(\"${path.module}/templates/startup-script-config.tpl\")}\"\n+  vars = {\n+    iperf_client = var.iperf_client\n+  }\n }\n \n resource google_compute_instance_template \"template\" {\n@@ -33,6 +36,8 @@ resource google_compute_instance_template \"template\" {\n \n   tags = local.tags\n \n+  labels = var.labels\n+\n   network_interface {\n     subnetwork         = var.nic0_subnet\n     subnetwork_project = var.nic0_project\n@@ -84,7 +89,7 @@ module \"mig\" {\n   health_check      = {\n     type                = \"http\"\n     check_interval_sec  = 3\n-    port                = 80\n+    port                = 9000\n     timeout_sec         = 2\n     healthy_threshold   = 1\n     host                = \"\"\n@@ -106,4 +111,6 @@ module \"mig\" {\n     max_surge_percent             = null\n     max_unavailable_percent       = null\n   }]\n+\n+  distribution_policy_zones = var.distribution_policy_zones\n }"
      },
      {
        "filename": "modules/51_endpoints/templates/startup-script-config.tpl",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -11,3 +11,4 @@\n # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n # See the License for the specific language governing permissions and\n # limitations under the License.\n+IPERF_CLIENT=\"${iperf_client}\""
      },
      {
        "filename": "modules/51_endpoints/variables.tf",
        "additions": 21,
        "deletions": 1,
        "changes": 22,
        "status": "modified",
        "patch": "@@ -27,10 +27,16 @@ variable \"region\" {\n   type        = string\n }\n \n+variable \"distribution_policy_zones\" {\n+  description = \"The full zone names to distribute instances into.  Set this to a single zone to reduce cost during autoscale and load testing.\"\n+  type        = list(string)\n+  default     = []\n+}\n+\n variable \"os_image\" {\n   description = \"The os_image used with the MIG instance template\"\n   type        = string\n-  default     = \"centos-cloud/centos-8\"\n+  default     = \"debian-cloud/debian-10\"\n }\n \n variable \"nic0_network\" {\n@@ -130,3 +136,17 @@ variable \"preemptible\" {\n   type        = bool\n   default     = false\n }\n+\n+variable \"iperf_client\" {\n+  description = \"If set, the iperf.service unit file will be started and connect to the server at this address.  For example, '10.10.1.2'\"\n+  type        = string\n+  default     = \"\"\n+}\n+\n+variable \"labels\" {\n+  description = \"Labels to apply to the compute instance resources managed by this module\"\n+  type        = map\n+  default     = {\n+    role = \"multinic-endpoint\"\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cjbischoff/tf-terraform-management/commit/e357e4e6879f9f6fb09cf28a40684d30d0e63400",
    "files": [
      {
        "filename": "terraform-remote-state/ue1/kms/backend.tf",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "status": "removed",
        "patch": "@@ -1,7 +0,0 @@\n-terraform {\n-  backend \"s3\" {\n-    bucket = \"sliplab-ue1-terraform-remote-state\"\n-    key    = \"terraform-remote-state/ue1/kms/terraform.tfstate\"\n-    region = \"us-east-1\"\n-  }\n-}"
      },
      {
        "filename": "terraform-remote-state/ue1/s3/backend.tf",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "status": "removed",
        "patch": "@@ -1,7 +0,0 @@\n-terraform {\n-  backend \"s3\" {\n-    bucket = \"sliplab-ue1-terraform-remote-state\"\n-    key    = \"terraform-remote-state/ue1/s3/terraform.tfstate\"\n-    region = \"us-east-1\"\n-  }\n-}"
      },
      {
        "filename": "terraform-remote-state/ue1/s3/s3.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -10,7 +10,25 @@ resource \"aws_s3_bucket\" \"terraform_remote_state\" {\n     enabled = true\n   }\n \n+  server_side_encryption_configuration {\n+    rule {\n+      apply_server_side_encryption_by_default {\n+        sse_algorithm = \"AES256\"\n+      }\n+    }\n+  }\n+\n   lifecycle {\n     prevent_destroy = true\n   }\n+\n+  tags {\n+    tag_name    = \"Terraform Remote State Bucket\"\n+    tag_app     =  \"Terraform\"\n+    tag_env     = \"prd\"\n+    tag_contact = \"christopherjbischoff@gmail.com\"\n+  }\n }\n+\n+\n+"
      },
      {
        "filename": "terraform-remote-state/ue1/s3/terraform.tfvars",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,4 +1,5 @@\n-identifier = \"sliplab\"\n+identifier = \"sliplabio\"\n+profile = \"sliplab\"\n region               = \"us-east-1\"\n region_short = \"ue1\"\n system = \"terraform-remote-state\""
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ssfsx17/fantasy-manager/commit/bded5e3007349a6c47c509336ee9306d234902d6",
    "files": [
      {
        "filename": "infra/main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -2,8 +2,9 @@\n module \"vpc_public\" {\n   source = \"./modules/vpc_public\"\n \n-  cidr    = cidrsubnet(\"10.0.0.0/8\", 8, 0)\n-  ami_ids = var.ami_ids\n+  cidr        = cidrsubnet(\"10.0.0.0/8\", 8, 0)\n+  ami_ids     = var.ami_ids\n+  bastion_key = \"admin_ssh\"\n }\n \n module \"eks_public\" {"
      },
      {
        "filename": "infra/modules/vpc_private/main.tf",
        "additions": 8,
        "deletions": 35,
        "changes": 43,
        "status": "modified",
        "patch": "@@ -1,44 +1,17 @@\n \n+// VPC\n resource \"aws_vpc\" \"vpc\" {\n   cidr_block = var.cidr\n-}\n-\n-resource \"aws_subnet\" \"private\" {\n-  count = length(var.az_letters)\n-\n-  vpc_id            = aws_vpc.vpc.id\n-  cidr_block        = cidrsubnet(var.cidr, 3, count.index)\n-  availability_zone = \"${var.region}${var.az_letters[count.index]}\"\n-}\n-\n-// setup NAT gateway access\n \n-data \"aws_vpc\" \"public\" {\n-  id = var.public_vpc_id\n+  lifecycle {\n+    ignore_changes = [\n+      tags,\n+    ]\n+  }\n }\n \n-resource \"aws_vpc_peering_connection\" \"vpcpc\" {\n+resource \"aws_vpc_peering_connection\" \"to_target\" {\n   vpc_id      = aws_vpc.vpc.id\n-  peer_vpc_id = var.public_vpc_id\n+  peer_vpc_id = var.target_vpc_id\n   auto_accept = true\n }\n-\n-resource \"aws_route\" \"this_to_main_vpc\" {\n-  route_table_id            = aws_vpc.vpc.main_route_table_id\n-  destination_cidr_block    = data.aws_vpc.public.cidr_block\n-  vpc_peering_connection_id = aws_vpc_peering_connection.vpcpc.id\n-}\n-\n-resource \"aws_route\" \"main_vpc_to_this\" {\n-  route_table_id            = var.natgw_route_table_id\n-  destination_cidr_block    = var.cidr\n-  vpc_peering_connection_id = aws_vpc_peering_connection.vpcpc.id\n-}\n-\n-resource \"aws_route\" \"natgw_to_this\" {\n-  for_each = var.natgw_ids\n-\n-  route_table_id         = var.natgw_route_table_id\n-  destination_cidr_block = var.cidr\n-  nat_gateway_id         = each.value\n-}"
      },
      {
        "filename": "infra/modules/vpc_private/outputs.tf",
        "additions": 24,
        "deletions": 21,
        "changes": 45,
        "status": "modified",
        "patch": "@@ -1,16 +1,7 @@\n-\n // Read back variables and locals\n \n-output \"public_vpc_id\" {\n-  value = var.public_vpc_id\n-}\n-\n-output \"natgw_route_table_id\" {\n-  value = var.natgw_route_table_id\n-}\n-\n-output \"natgw_ids\" {\n-  value = var.natgw_ids\n+output \"region\" {\n+  value = var.region\n }\n \n output \"cidr\" {\n@@ -21,28 +12,40 @@ output \"az_letters\" {\n   value = var.az_letters\n }\n \n+output \"target_vpc_id\" {\n+  value = var.target_vpc_id\n+}\n+\n+output \"target_vpc_sg_bastion\" {\n+  value = var.target_vpc_sg_bastion\n+}\n+\n // Actual outputs\n \n output \"vpc\" {\n   value = aws_vpc.vpc\n }\n \n-output \"subnets\" {\n-  value = aws_subnet.private\n+output \"security_group\" {\n+  value = aws_security_group.private\n }\n \n-output \"vpc_peering_connection\" {\n-  value = aws_vpc_peering_connection.vpcpc\n+output \"route_tables\" {\n+  value = aws_route_table.private\n+}\n+\n+output \"subnets\" {\n+  value = aws_subnet.private\n }\n \n-output \"route_this_to_main_vpc\" {\n-  value = aws_route.this_to_main_vpc\n+output \"route_table_associations\" {\n+  value = aws_route_table_association.private\n }\n \n-output \"route_main_vpc_to_this\" {\n-  value = aws_route.main_vpc_to_this\n+output \"private_routes_to_vpclink\" {\n+  value = aws_route.private_to_target\n }\n \n-output \"route_natgw_to_this\" {\n-  value = aws_route.natgw_to_this\n+output \"target_routes_to_vpclink\" {\n+  value = aws_route.target_to_private\n }"
      },
      {
        "filename": "infra/modules/vpc_private/security_groups.tf",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "status": "added",
        "patch": "@@ -0,0 +1,24 @@\n+\n+resource \"aws_security_group\" \"private\" {\n+  vpc_id = aws_vpc.vpc.id\n+}\n+\n+resource \"aws_security_group_rule\" \"bastion_ssh_egress_to_private\" {\n+  security_group_id        = var.target_vpc_sg_bastion\n+  source_security_group_id = aws_security_group.private.id\n+\n+  type      = \"egress\"\n+  from_port = 22\n+  to_port   = 22\n+  protocol  = \"tcp\"\n+}\n+\n+resource \"aws_security_group_rule\" \"private_ssh_ingress_from_bastion\" {\n+  security_group_id        = aws_security_group.private.id\n+  source_security_group_id = var.target_vpc_sg_bastion\n+\n+  type      = \"ingress\"\n+  from_port = 22\n+  to_port   = 22\n+  protocol  = \"tcp\"\n+}"
      },
      {
        "filename": "infra/modules/vpc_private/subnets_private.tf",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "status": "added",
        "patch": "@@ -0,0 +1,49 @@\n+\n+// Private route tables - the only ones that should ever get VPC-linked\n+resource \"aws_route_table\" \"private\" {\n+  count = length(local.availability_zones)\n+\n+  vpc_id = aws_vpc.vpc.id\n+}\n+\n+// Private subnets\n+resource \"aws_subnet\" \"private\" {\n+  count = length(local.availability_zones)\n+\n+  vpc_id            = aws_vpc.vpc.id\n+  cidr_block        = cidrsubnet(local.private_cidr, 3, count.index)\n+  availability_zone = local.availability_zones[count.index]\n+\n+  tags = {\n+    \"kubernetes.io/role/internal-elb\" = \"1\"\n+  }\n+\n+  lifecycle {\n+    ignore_changes = [\n+      tags,\n+    ]\n+  }\n+}\n+\n+resource \"aws_route_table_association\" \"private\" {\n+  count = length(local.availability_zones)\n+\n+  route_table_id = aws_route_table.private[count.index].id\n+  subnet_id      = aws_subnet.private[count.index].id\n+}\n+\n+resource \"aws_route\" \"private_to_target\" {\n+  count = length(local.availability_zones)\n+\n+  route_table_id            = aws_route_table.private[count.index].id\n+  destination_cidr_block    = \"0.0.0.0/0\"\n+  vpc_peering_connection_id = aws_vpc_peering_connection.to_target\n+}\n+\n+resource \"aws_route\" \"target_to_private\" {\n+  for_each = var.target_vpc_route_table_ids\n+\n+  route_table_id            = each.key\n+  destination_cidr_block    = var.cidr_block\n+  vpc_peering_connection_id = aws_vpc_peering_connection.to_target\n+}"
      },
      {
        "filename": "infra/modules/vpc_private/variables.tf",
        "additions": 27,
        "deletions": 14,
        "changes": 41,
        "status": "modified",
        "patch": "@@ -1,24 +1,37 @@\n-variable \"public_vpc_id\" {\n-  type        = string\n-  description = \"public VPC ID\"\n-}\n-\n-variable \"natgw_route_table_id\" {\n-  type        = string\n-  description = \"NAT gateway route table ID - existing in the public VPC\"\n-}\n-\n-variable \"natgw_ids\" {\n-  type        = list(string)\n-  description = \"list of NAT gateway IDs - existing in the public VPC\"\n+variable \"region\" {\n+  type    = string\n+  default = \"us-east-1\"\n }\n \n variable \"cidr\" {\n   type    = string\n-  default = cidrsubnet(\"10.0.0.0/8\", 8, 1)\n+  default = \"10.0.0.0/16\"\n }\n \n variable \"az_letters\" {\n   type    = list(string)\n   default = [\"a\", \"b\", \"c\", \"d\"]\n }\n+\n+variable \"ami_ids\" {\n+  type = map(string)\n+}\n+\n+variable \"target_vpc_id\" {\n+  type        = string\n+  description = \"target VPC that is allowed to interface with the public\"\n+}\n+\n+variable \"target_vpc_sg_bastion\" {\n+  type        = string\n+  description = \"security group ID in the target VPC that has SSH bastions\"\n+}\n+\n+variable \"target_vpc_route_table_ids\" {\n+  type        = list(string)\n+  description = \"list of route table IDs in the target VPC that need to know about the VPC link\"\n+}\n+\n+locals {\n+  availability_zones = formatlist(\"%s%s\", var.region, var.az_letters)\n+}"
      },
      {
        "filename": "infra/modules/vpc_public/bastion.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -6,7 +6,7 @@ resource \"aws_launch_template\" \"ssh_bastion\" {\n   ebs_optimized = true\n   image_id      = var.ami_ids[var.region]\n   instance_type = \"t3.micro\"\n-  key_name      = \"admin_ssh\"\n+  key_name      = var.bastion_key\n \n   network_interfaces {\n     associate_public_ip_address = true"
      },
      {
        "filename": "infra/modules/vpc_public/variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -17,6 +17,10 @@ variable \"ami_ids\" {\n   type = map(string)\n }\n \n+variable \"bastion_key\" {\n+  type = string\n+}\n+\n locals {\n   public_cidr        = cidrsubnet(var.cidr, 1, 0)\n   private_cidr       = cidrsubnet(var.cidr, 1, 1)"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/CheesecakeLabs/django-drf-boilerplate/commit/e4003aa3c51b789e2a2b5828768a7d0f34659209",
    "files": [
      {
        "filename": "terraform/modules/network/route-tables.tf",
        "additions": 2,
        "deletions": 45,
        "changes": 47,
        "status": "modified",
        "patch": "@@ -38,56 +38,13 @@ resource \"aws_route_table_association\" \"public_subnet_2_rt_a\" {\n   route_table_id = aws_route_table.rt.id\n }\n \n-\n-# Allocate an Elastic Ip\n-resource \"aws_eip\" \"elastic_ip\" {\n-  vpc = true\n-\n-  tags = {\n-    Name = \"${var.project_name}-${var.environment}-ip\"\n-    \"ckl:environment\" = var.environment\n-    \"ckl:project\" = var.project_name\n-    \"ckl:alias\" = \"network\"\n-  }\n-}\n-\n-# Create an Nat gateway with Elatic Ip\n-resource \"aws_nat_gateway\" \"nat_gw\" {\n-  allocation_id = aws_eip.elastic_ip.id\n-  subnet_id = aws_subnet.public_subnet.id\n-\n-  tags = {\n-    Name = \"${var.project_name}-${var.environment}-nat-gateway\"\n-    \"ckl:environment\" = var.environment\n-    \"ckl:project\" = var.project_name\n-    \"ckl:alias\" = \"network\"\n-  }\n-}\n-\n-# Create Route table for private subnets with nat gateway\n-resource \"aws_route_table\" \"nat_rt\" {\n-  vpc_id = aws_vpc.vpc.id\n-\n-  route {\n-    cidr_block = \"0.0.0.0/0\"\n-    nat_gateway_id = aws_nat_gateway.nat_gw.id\n-  }\n-\n-  tags = {\n-    Name = \"${var.project_name}-${var.environment}-nat-route-table\"\n-    \"ckl:environment\" = var.environment\n-    \"ckl:project\" = var.project_name\n-    \"ckl:alias\" = \"nat-route-table-with-nat\"\n-  }\n-}\n-\n # Associate Route table with public subnets\n resource \"aws_route_table_association\" \"private_subnet_rt_a\" {\n   subnet_id = aws_subnet.private_subnet.id\n-  route_table_id = aws_route_table.nat_rt.id\n+  route_table_id = aws_route_table.rt.id\n }\n \n resource \"aws_route_table_association\" \"private_subnet_2_rt_a\" {\n   subnet_id = aws_subnet.private_subnet_2.id\n-  route_table_id = aws_route_table.nat_rt.id\n+  route_table_id = aws_route_table.rt.id\n }"
      },
      {
        "filename": "terraform/modules/network/subnets.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -3,6 +3,7 @@ resource \"aws_subnet\" \"private_subnet\" {\n   cidr_block = \"10.0.1.0/24\"\n   vpc_id = aws_vpc.vpc.id\n   availability_zone = \"${var.region}b\"\n+  map_public_ip_on_launch = true\n \n   tags = {\n     Name = \"${var.project_name}-${var.environment}-private-subnet\"\n@@ -16,6 +17,7 @@ resource \"aws_subnet\" \"private_subnet_2\" {\n   vpc_id = aws_vpc.vpc.id\n   cidr_block = \"10.0.3.0/24\"\n   availability_zone = \"${var.region}c\"\n+  map_public_ip_on_launch = true\n \n   tags = {\n     Name = \"${var.project_name}-${var.environment}-private-subnet-2\"\n@@ -30,6 +32,7 @@ resource \"aws_subnet\" \"public_subnet\" {\n   vpc_id = aws_vpc.vpc.id\n   cidr_block = \"10.0.0.0/24\"\n   availability_zone = \"${var.region}b\"\n+  map_public_ip_on_launch = true\n \n   tags = {\n     Name = \"${var.project_name}-${var.environment}-public-subnet\"\n@@ -43,6 +46,7 @@ resource \"aws_subnet\" \"public_subnet_2\" {\n   vpc_id = aws_vpc.vpc.id\n   cidr_block = \"10.0.2.0/24\"\n   availability_zone = \"${var.region}c\"\n+  map_public_ip_on_launch = true\n \n   tags = {\n     Name = \"${var.project_name}-${var.environment}--public-subnet-2\""
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/richardhughes/infra-modules/commit/48015a86eda461d99b580b69db5922acbe5bd28e",
    "files": [
      {
        "filename": "billing/main.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+resource \"aws_budgets_budget\" \"monthly_budget\" {\n+  name = \"Monthly Buget\"\n+  budget_type = \"COST\"\n+  limit_amount = \"${var.monthly_budget_amount}\"\n+  limit_unit = \"USD\"\n+  time_period_end = \"2087-06-15_00:00\"\n+  time_period_start = \"2019-01-01_00:00\"\n+  time_unit = \"MONTHLY\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "billing/vars.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+variable \"monthly_budget_amount\" {\n+  description = \"The amount to budget per month in USD\"\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/kabisa/terraform-datadog-costs/commit/adaf03ac0d5a324880e9e6aa10d54b9de6b4e635",
    "files": [
      {
        "filename": "apm-hosts-variables.tf",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ variable \"apm_hosts_warning\" {\n }\n \n variable \"apm_hosts_critical\" {\n-  type    = number\n+  type = number\n }\n \n variable \"apm_hosts_evaluation_period\" {\n@@ -41,3 +41,10 @@ variable \"apm_hosts_alerting_enabled\" {\n   type    = bool\n   default = true\n }\n+\n+variable \"apm_hosts_priority\" {\n+  description = \"Number from 1 (high) to 5 (low).\"\n+\n+  type    = number\n+  default = null\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "apm-hosts.tf",
        "additions": 25,
        "deletions": 30,
        "changes": 55,
        "status": "modified",
        "patch": "@@ -1,37 +1,32 @@\n locals {\n-  apm_hosts_filter = var.apm_hosts_filter_override != \"\" ? var.apm_hosts_filter_override : var.filter_str\n-  apm_hosts_notification_channel = var.apm_hosts_alerting_enabled ? var.notification_channel : \"\"\n+  apm_hosts_filter = coalesce(\n+    var.apm_hosts_filter_override,\n+    var.filter_str\n+  )\n }\n \n-resource \"datadog_monitor\" \"apm_hosts\" {\n-  count = var.apm_hosts_enabled ? 1 : 0\n-  name  = \"${var.service} - Estimated APM Hosts Usage\"\n-  type  = \"metric alert\"\n-  query = \"avg(${var.apm_hosts_evaluation_period}):sum:datadog.estimated_usage.apm_hosts{${local.apm_hosts_filter}} > ${var.apm_hosts_critical}\"\n-\n-  message = templatefile(\"${path.module}/alert.tpl\", {\n-    alert_message        = \"The Plan specified {{threshold}} APM Hosts. The current estimate ({{value}}) exceeds the plan\"\n-    recovery_message     = \"Count of Monitored APM Hosts has recovered\"\n-    note                 = var.apm_hosts_note\n-    docs                 = var.apm_hosts_docs\n-    notification_channel = local.apm_hosts_notification_channel\n-  })\n-\n-  tags = concat([\n-    \"terraform:true\",\n-    \"env:${var.alert_env}\",\n-    \"service:${var.service}\",\n-    \"severity:${var.apm_hosts_severity}\",\n-  ],\n-    var.additional_tags\n-  )\n+module \"apm_hosts\" {\n+  source = \"git@github.com:kabisa/terraform-datadog-generic-monitor.git?ref=0.5.1\"\n \n-  require_full_window = true\n+  name             = \"Estimated APM Hosts Usage\"\n+  query            = \"avg(${var.apm_hosts_evaluation_period}):sum:datadog.estimated_usage.apm_hosts{${local.apm_hosts_filter}} > ${var.apm_hosts_critical}\"\n+  alert_message    = \"The Plan specified {{threshold}} APM Hosts. The current estimate ({{value}}) exceeds the plan\"\n+  recovery_message = \"Count of Monitored APM Hosts has recovered\"\n \n-  monitor_thresholds {\n-    critical = var.apm_hosts_critical\n-    warning  = var.apm_hosts_warning\n-  }\n+  # monitor level vars\n+  enabled            = var.apm_hosts_enabled\n+  alerting_enabled   = var.apm_hosts_alerting_enabled\n+  critical_threshold = var.apm_hosts_critical\n+  warning_threshold  = var.apm_hosts_warning\n+  priority           = var.apm_hosts_priority\n+  severity           = var.apm_hosts_severity\n+  docs               = var.apm_hosts_docs\n+  note               = var.apm_hosts_note\n \n-  locked = true\n+  # module level vars\n+  env                  = var.alert_env\n+  service              = var.service\n+  notification_channel = var.notification_channel\n+  additional_tags      = var.additional_tags\n+  locked               = var.locked\n }"
      },
      {
        "filename": "apm-spans-variables.tf",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -4,11 +4,11 @@ variable \"apm_spans_enabled\" {\n }\n \n variable \"apm_spans_warning\" {\n-  type    = number\n+  type = number\n }\n \n variable \"apm_spans_critical\" {\n-  type    = number\n+  type = number\n }\n \n variable \"apm_spans_evaluation_period\" {\n@@ -40,3 +40,10 @@ variable \"apm_spans_alerting_enabled\" {\n   type    = bool\n   default = true\n }\n+\n+variable \"apm_spans_priority\" {\n+  description = \"Number from 1 (high) to 5 (low).\"\n+\n+  type    = number\n+  default = null\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "apm-spans.tf",
        "additions": 22,
        "deletions": 29,
        "changes": 51,
        "status": "modified",
        "patch": "@@ -1,37 +1,30 @@\n locals {\n-  apm_spans_filter = var.apm_spans_filter_override != \"\" ? var.apm_spans_filter_override : var.filter_str\n+  apm_spans_filter               = var.apm_spans_filter_override != \"\" ? var.apm_spans_filter_override : var.filter_str\n   apm_spans_notification_channel = var.apm_spans_alerting_enabled ? var.notification_channel : \"\"\n }\n \n-resource \"datadog_monitor\" \"apm_spans\" {\n-  count = var.apm_spans_enabled ? 1 : 0\n-  name  = \"${var.service} - Estimated APM Analyzed Spans Usage\"\n-  type  = \"metric alert\"\n-  query = \"sum(${var.apm_spans_evaluation_period}):sum:datadog.estimated_usage.apm.indexed_spans{${local.apm_spans_filter}}.as_count() > ${var.apm_spans_critical}\"\n+module \"apm_spans\" {\n+  source = \"git@github.com:kabisa/terraform-datadog-generic-monitor.git?ref=0.5.1\"\n \n-  message = templatefile(\"${path.module}/alert.tpl\", {\n-    alert_message        = \"The Plan specified {{threshold}} APM Analyzed Spans. The current estimate ({{value}}) exceeds the plan\"\n-    recovery_message     = \"Analyzed APM Spans have recovered\"\n-    note                 = var.apm_spans_note\n-    docs                 = var.apm_spans_docs\n-    notification_channel = local.apm_spans_notification_channel\n-  })\n+  name             = \"Estimated APM Analyzed Spans Usage\"\n+  query            = \"sum(${var.apm_spans_evaluation_period}):sum:datadog.estimated_usage.apm.indexed_spans{${local.apm_spans_filter}}.as_count() > ${var.apm_spans_critical}\"\n+  alert_message    = \"The Plan specified {{threshold}} APM Analyzed Spans. The current estimate ({{value}}) exceeds the plan\"\n+  recovery_message = \"Analyzed APM Spans have recovered\"\n \n-  tags = concat([\n-    \"terraform:true\",\n-    \"env:${var.alert_env}\",\n-    \"service:${var.service}\",\n-    \"severity:${var.apm_spans_severity}\",\n-  ],\n-    var.additional_tags\n-  )\n+  # monitor level vars\n+  enabled            = var.apm_spans_enabled\n+  alerting_enabled   = var.apm_spans_alerting_enabled\n+  critical_threshold = var.apm_spans_critical\n+  warning_threshold  = var.apm_spans_warning\n+  priority           = var.apm_spans_priority\n+  severity           = var.apm_spans_severity\n+  docs               = var.apm_spans_docs\n+  note               = var.apm_spans_note\n \n-  require_full_window = true\n-\n-  monitor_thresholds {\n-    critical = var.apm_spans_critical\n-    warning  = var.apm_spans_warning\n-  }\n-\n-  locked = true\n+  # module level vars\n+  env                  = var.alert_env\n+  service              = var.service\n+  notification_channel = var.notification_channel\n+  additional_tags      = var.additional_tags\n+  locked               = var.locked\n }"
      },
      {
        "filename": "containers-variables.tf",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ variable \"containers_warning\" {\n }\n \n variable \"containers_critical\" {\n-  type    = number\n+  type = number\n }\n \n variable \"containers_evaluation_period\" {\n@@ -41,3 +41,10 @@ variable \"containers_alerting_enabled\" {\n   type    = bool\n   default = true\n }\n+\n+variable \"containers_priority\" {\n+  description = \"Number from 1 (high) to 5 (low).\"\n+\n+  type    = number\n+  default = null\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "containers.tf",
        "additions": 22,
        "deletions": 29,
        "changes": 51,
        "status": "modified",
        "patch": "@@ -1,37 +1,30 @@\n locals {\n-  containers_filter = var.containers_filter_override != \"\" ? var.containers_filter_override : var.filter_str\n+  containers_filter               = var.containers_filter_override != \"\" ? var.containers_filter_override : var.filter_str\n   containers_notification_channel = var.containers_alerting_enabled ? var.notification_channel : \"\"\n }\n \n-resource \"datadog_monitor\" \"containers\" {\n-  count = var.containers_enabled ? 1 : 0\n-  name  = \"${var.service} - Estimated Containers Usage\"\n-  type  = \"metric alert\"\n-  query = \"avg(${var.containers_evaluation_period}):sum:datadog.estimated_usage.containers{${local.containers_filter}} > ${var.containers_critical}\"\n+module \"containers\" {\n+  source = \"git@github.com:kabisa/terraform-datadog-generic-monitor.git?ref=0.5.1\"\n \n-  message = templatefile(\"${path.module}/alert.tpl\", {\n-    alert_message        = \"The Plan specified {{threshold}} Containers. The current estimate ({{value}}) exceeds the plan\"\n-    recovery_message     = \"Count of Monitored Containers has recovered\"\n-    note                 = var.containers_note\n-    docs                 = var.containers_docs\n-    notification_channel = local.containers_notification_channel\n-  })\n+  name             = \"Estimated Containers Usage\"\n+  query            = \"avg(${var.containers_evaluation_period}):sum:datadog.estimated_usage.containers{${local.containers_filter}} > ${var.containers_critical}\"\n+  alert_message    = \"The Plan specified {{threshold}} Containers. The current estimate ({{value}}) exceeds the plan\"\n+  recovery_message = \"Count of Monitored Containers has recovered\"\n \n-  tags = concat([\n-    \"terraform:true\",\n-    \"env:${var.alert_env}\",\n-    \"service:${var.service}\",\n-    \"severity:${var.containers_severity}\",\n-  ],\n-    var.additional_tags\n-  )\n+  # monitor level vars\n+  enabled            = var.containers_enabled\n+  alerting_enabled   = var.containers_alerting_enabled\n+  critical_threshold = var.containers_critical\n+  warning_threshold  = var.containers_warning\n+  priority           = var.containers_priority\n+  severity           = var.containers_severity\n+  docs               = var.containers_docs\n+  note               = var.containers_note\n \n-  require_full_window = true\n-\n-  monitor_thresholds {\n-    critical = var.containers_critical\n-    warning  = var.containers_warning\n-  }\n-\n-  locked = true\n+  # module level vars\n+  env                  = var.alert_env\n+  service              = var.service\n+  notification_channel = var.notification_channel\n+  additional_tags      = var.additional_tags\n+  locked               = var.locked\n }"
      },
      {
        "filename": "custom-metrics-variables.tf",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ variable \"custom_metrics_warning\" {\n }\n \n variable \"custom_metrics_critical\" {\n-  type    = number\n+  type = number\n }\n \n variable \"custom_metrics_evaluation_period\" {\n@@ -41,3 +41,10 @@ variable \"custom_metrics_alerting_enabled\" {\n   type    = bool\n   default = true\n }\n+\n+variable \"custom_metrics_priority\" {\n+  description = \"Number from 1 (high) to 5 (low).\"\n+\n+  type    = number\n+  default = null\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "custom-metrics.tf",
        "additions": 22,
        "deletions": 29,
        "changes": 51,
        "status": "modified",
        "patch": "@@ -1,37 +1,30 @@\n locals {\n-  custom_metrics_filter = var.custom_metrics_filter_override != \"\" ? var.custom_metrics_filter_override : var.filter_str\n+  custom_metrics_filter               = var.custom_metrics_filter_override != \"\" ? var.custom_metrics_filter_override : var.filter_str\n   custom_metrics_notification_channel = var.custom_metrics_alerting_enabled ? var.notification_channel : \"\"\n }\n \n-resource \"datadog_monitor\" \"custom_metrics\" {\n-  count = var.custom_metrics_enabled ? 1 : 0\n-  name  = \"${var.service} - Estimated Custom Metrics Usage\"\n-  type  = \"metric alert\"\n-  query = \"avg(${var.custom_metrics_evaluation_period}):sum:datadog.estimated_usage.metrics.custom{${local.custom_metrics_filter}} > ${var.custom_metrics_critical}\"\n+module \"custom_metrics\" {\n+  source = \"git@github.com:kabisa/terraform-datadog-generic-monitor.git?ref=0.5.1\"\n \n-  message = templatefile(\"${path.module}/alert.tpl\", {\n-    alert_message        = \"The Plan specified {{threshold}} Custom Metrics. The current estimate ({{value}}) exceeds the plan\"\n-    recovery_message     = \"Count of Monitored Custom Metrics has recovered\"\n-    note                 = var.custom_metrics_note\n-    docs                 = var.custom_metrics_docs\n-    notification_channel = local.custom_metrics_notification_channel\n-  })\n+  name             = \"Estimated Custom Metrics Usage\"\n+  query            = \"avg(${var.custom_metrics_evaluation_period}):sum:datadog.estimated_usage.metrics.custom{${local.custom_metrics_filter}} > ${var.custom_metrics_critical}\"\n+  alert_message    = \"The Plan specified {{threshold}} Custom Metrics. The current estimate ({{value}}) exceeds the plan\"\n+  recovery_message = \"Count of Monitored Custom Metrics has recovered\"\n \n-  tags = concat([\n-    \"terraform:true\",\n-    \"env:${var.alert_env}\",\n-    \"service:${var.service}\",\n-    \"severity:${var.custom_metrics_severity}\",\n-  ],\n-    var.additional_tags\n-  )\n+  # monitor level vars\n+  enabled            = var.custom_metrics_enabled\n+  alerting_enabled   = var.custom_metrics_alerting_enabled\n+  critical_threshold = var.custom_metrics_critical\n+  warning_threshold  = var.custom_metrics_warning\n+  priority           = var.custom_metrics_priority\n+  severity           = var.custom_metrics_severity\n+  docs               = var.custom_metrics_docs\n+  note               = var.custom_metrics_note\n \n-  require_full_window = true\n-\n-  monitor_thresholds {\n-    critical = var.custom_metrics_critical\n-    warning  = var.custom_metrics_warning\n-  }\n-\n-  locked = true\n+  # module level vars\n+  env                  = var.alert_env\n+  service              = var.service\n+  notification_channel = var.notification_channel\n+  additional_tags      = var.additional_tags\n+  locked               = var.locked\n }"
      },
      {
        "filename": "hosts-variables.tf",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ variable \"hosts_warning\" {\n }\n \n variable \"hosts_critical\" {\n-  type    = number\n+  type = number\n }\n \n variable \"hosts_evaluation_period\" {\n@@ -41,3 +41,10 @@ variable \"hosts_alerting_enabled\" {\n   type    = bool\n   default = true\n }\n+\n+variable \"hosts_priority\" {\n+  description = \"Number from 1 (high) to 5 (low).\"\n+\n+  type    = number\n+  default = null\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "hosts.tf",
        "additions": 22,
        "deletions": 29,
        "changes": 51,
        "status": "modified",
        "patch": "@@ -1,37 +1,30 @@\n locals {\n-  hosts_filter = var.hosts_filter_override != \"\" ? var.hosts_filter_override : var.filter_str\n+  hosts_filter               = var.hosts_filter_override != \"\" ? var.hosts_filter_override : var.filter_str\n   hosts_notification_channel = var.hosts_alerting_enabled ? var.notification_channel : \"\"\n }\n \n-resource \"datadog_monitor\" \"hosts\" {\n-  count = var.hosts_enabled ? 1 : 0\n-  name  = \"${var.service} - Estimated Hosts Usage\"\n-  type  = \"metric alert\"\n-  query = \"avg(${var.hosts_evaluation_period}):sum:datadog.estimated_usage.hosts{${local.hosts_filter}} > ${var.hosts_critical}\"\n+module \"hosts\" {\n+  source = \"git@github.com:kabisa/terraform-datadog-generic-monitor.git?ref=0.5.1\"\n \n-  message = templatefile(\"${path.module}/alert.tpl\", {\n-    alert_message        = \"The Plan specified {{threshold}} Hosts. The current estimate ({{value}}) exceeds the plan\"\n-    recovery_message     = \"Count of Monitored Hosts has recovered\"\n-    note                 = var.hosts_note\n-    docs                 = var.hosts_docs\n-    notification_channel = local.hosts_notification_channel\n-  })\n+  name             = \"Estimated Hosts Usage\"\n+  query            = \"avg(${var.hosts_evaluation_period}):sum:datadog.estimated_usage.hosts{${local.hosts_filter}} > ${var.hosts_critical}\"\n+  alert_message    = \"The Plan specified {{threshold}} Hosts. The current estimate ({{value}}) exceeds the plan\"\n+  recovery_message = \"Count of Monitored Hosts has recovered\"\n \n-  tags = concat([\n-    \"terraform:true\",\n-    \"env:${var.alert_env}\",\n-    \"service:${var.service}\",\n-    \"severity:${var.hosts_severity}\",\n-  ],\n-    var.additional_tags\n-  )\n+  # monitor level vars\n+  enabled            = var.hosts_enabled\n+  alerting_enabled   = var.hosts_alerting_enabled\n+  critical_threshold = var.hosts_critical\n+  warning_threshold  = var.hosts_warning\n+  priority           = var.hosts_priority\n+  severity           = var.hosts_severity\n+  docs               = var.hosts_docs\n+  note               = var.hosts_note\n \n-  require_full_window = true\n-\n-  monitor_thresholds {\n-    critical = var.hosts_critical\n-    warning  = var.hosts_warning\n-  }\n-\n-  locked = true\n+  # module level vars\n+  env                  = var.alert_env\n+  service              = var.service\n+  notification_channel = var.notification_channel\n+  additional_tags      = var.additional_tags\n+  locked               = var.locked\n }"
      },
      {
        "filename": "logs-indexed-variables.tf",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ variable \"logs_indexed_warning\" {\n }\n \n variable \"logs_indexed_critical\" {\n-  type    = number\n+  type = number\n }\n \n variable \"logs_indexed_evaluation_period\" {\n@@ -41,3 +41,10 @@ variable \"logs_indexed_alerting_enabled\" {\n   type    = bool\n   default = true\n }\n+\n+variable \"logs_indexed_priority\" {\n+  description = \"Number from 1 (high) to 5 (low).\"\n+\n+  type    = number\n+  default = null\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "logs-indexed.tf",
        "additions": 22,
        "deletions": 29,
        "changes": 51,
        "status": "modified",
        "patch": "@@ -1,37 +1,30 @@\n locals {\n-  logs_indexed_filter = var.logs_indexed_filter_override != \"\" ? var.logs_indexed_filter_override : var.filter_str\n+  logs_indexed_filter               = var.logs_indexed_filter_override != \"\" ? var.logs_indexed_filter_override : var.filter_str\n   logs_indexed_notification_channel = var.logs_indexed_alerting_enabled ? var.notification_channel : \"\"\n }\n \n-resource \"datadog_monitor\" \"logs_indexed\" {\n-  count = var.logs_indexed_enabled ? 1 : 0\n-  name  = \"${var.service} - Indexed Logs\"\n-  type  = \"metric alert\"\n-  query = \"sum(${var.logs_indexed_evaluation_period}):sum:datadog.logs.indexed{${local.logs_indexed_filter}}.as_count() > ${var.logs_indexed_critical}\"\n+module \"logs_indexed\" {\n+  source = \"git@github.com:kabisa/terraform-datadog-generic-monitor.git?ref=0.5.1\"\n \n-  message = templatefile(\"${path.module}/alert.tpl\", {\n-    alert_message        = \"The amount of logs indexed ${var.logs_indexed_evaluation_period} is relatively high {{value}} and crosses threshold {{threshold}}\"\n-    recovery_message     = \"Logs indexed amount has recovered below {{threshold}} ({{value}})\"\n-    note                 = var.logs_indexed_note\n-    docs                 = var.logs_indexed_docs\n-    notification_channel = local.logs_indexed_notification_channel\n-  })\n+  name             = \"Indexed Logs\"\n+  query            = \"sum(${var.logs_indexed_evaluation_period}):sum:datadog.logs.indexed{${local.logs_indexed_filter}}.as_count() > ${var.logs_indexed_critical}\"\n+  alert_message    = \"The amount of logs indexed ${var.logs_indexed_evaluation_period} is relatively high {{value}} and crosses threshold {{threshold}}\"\n+  recovery_message = \"Logs indexed amount has recovered below {{threshold}} ({{value}})\"\n \n-  tags = concat([\n-    \"terraform:true\",\n-    \"env:${var.alert_env}\",\n-    \"service:${var.service}\",\n-    \"severity:${var.logs_indexed_severity}\",\n-  ],\n-    var.additional_tags\n-  )\n+  # monitor level vars\n+  enabled            = var.logs_indexed_enabled\n+  alerting_enabled   = var.logs_indexed_alerting_enabled\n+  critical_threshold = var.logs_indexed_critical\n+  warning_threshold  = var.logs_indexed_warning\n+  priority           = var.logs_indexed_priority\n+  severity           = var.logs_indexed_severity\n+  docs               = var.logs_indexed_docs\n+  note               = var.logs_indexed_note\n \n-  require_full_window = true\n-\n-  monitor_thresholds {\n-    critical = var.logs_indexed_critical\n-    warning  = var.logs_indexed_warning\n-  }\n-\n-  locked = true\n+  # module level vars\n+  env                  = var.alert_env\n+  service              = var.service\n+  notification_channel = var.notification_channel\n+  additional_tags      = var.additional_tags\n+  locked               = var.locked\n }"
      },
      {
        "filename": "logs-ingestion-4h-variables.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -42,3 +42,10 @@ variable \"logs_ingestion_4h_alerting_enabled\" {\n   type    = bool\n   default = true\n }\n+\n+variable \"logs_ingestion_4h_priority\" {\n+  description = \"Number from 1 (high) to 5 (low).\"\n+\n+  type    = number\n+  default = null\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "logs-ingestion-4h.tf",
        "additions": 22,
        "deletions": 29,
        "changes": 51,
        "status": "modified",
        "patch": "@@ -1,37 +1,30 @@\n locals {\n-  logs_ingestion_4h_filter = var.logs_ingestion_4h_filter_override != \"\" ? var.logs_ingestion_4h_filter_override : var.filter_str\n+  logs_ingestion_4h_filter               = var.logs_ingestion_4h_filter_override != \"\" ? var.logs_ingestion_4h_filter_override : var.filter_str\n   logs_ingestion_4h_notification_channel = var.logs_ingestion_4h_alerting_enabled ? var.notification_channel : \"\"\n }\n \n-resource \"datadog_monitor\" \"logs_ingestion_4h\" {\n-  count = var.logs_ingestion_4h_enabled ? 1 : 0\n-  name  = \"${var.service} - Logs ingestion high\"\n-  type  = \"metric alert\"\n-  query = \"sum(${var.logs_ingestion_4h_evaluation_period}):sum:datadog.estimated_usage.logs.ingested_bytes{${local.logs_ingestion_4h_filter}}.as_count() > ${var.logs_ingestion_4h_critical}\"\n+module \"logs_ingestion_4h\" {\n+  source = \"git@github.com:kabisa/terraform-datadog-generic-monitor.git?ref=0.5.1\"\n \n-  message = templatefile(\"${path.module}/alert.tpl\", {\n-    alert_message        = \"The amount of logs ingested ${var.logs_ingestion_4h_evaluation_period} is relatively high {{value}} and crosses threshold {{threshold}}\"\n-    recovery_message     = \"Logs ingestion amount has recovered below {{threshold}} ({{value}})\"\n-    note                 = var.logs_ingestion_4h_note\n-    docs                 = var.logs_ingestion_4h_docs\n-    notification_channel = local.logs_ingestion_4h_notification_channel\n-  })\n+  name             = \"Logs ingestion high\"\n+  query            = \"sum(${var.logs_ingestion_4h_evaluation_period}):sum:datadog.estimated_usage.logs.ingested_bytes{${local.logs_ingestion_4h_filter}}.as_count() > ${var.logs_ingestion_4h_critical}\"\n+  alert_message    = \"The amount of logs ingested ${var.logs_ingestion_4h_evaluation_period} is relatively high {{value}} and crosses threshold {{threshold}}\"\n+  recovery_message = \"Logs ingestion amount has recovered below {{threshold}} ({{value}})\"\n \n-  tags = concat([\n-    \"terraform:true\",\n-    \"env:${var.alert_env}\",\n-    \"service:${var.service}\",\n-    \"severity:${var.logs_ingestion_4h_severity}\",\n-  ],\n-    var.additional_tags\n-  )\n+  # monitor level vars\n+  enabled            = var.apm_hosts_enabled\n+  alerting_enabled   = var.apm_hosts_alerting_enabled\n+  critical_threshold = var.apm_hosts_critical\n+  warning_threshold  = var.apm_hosts_warning\n+  priority           = var.apm_hosts_priority\n+  severity           = var.apm_hosts_severity\n+  docs               = var.apm_hosts_docs\n+  note               = var.apm_hosts_note\n \n-  require_full_window = true\n-\n-  monitor_thresholds {\n-    critical = var.logs_ingestion_4h_critical\n-    warning  = var.logs_ingestion_4h_warning\n-  }\n-\n-  locked = true\n+  # module level vars\n+  env                  = var.alert_env\n+  service              = var.service\n+  notification_channel = var.notification_channel\n+  additional_tags      = var.additional_tags\n+  locked               = var.locked\n }"
      },
      {
        "filename": "logs-ingestion-variables.tf",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -4,11 +4,11 @@ variable \"logs_ingestion_enabled\" {\n }\n \n variable \"logs_ingestion_warning\" {\n-  type    = number\n+  type = number\n }\n \n variable \"logs_ingestion_critical\" {\n-  type    = number\n+  type = number\n }\n \n variable \"logs_ingestion_evaluation_period\" {\n@@ -40,3 +40,10 @@ variable \"logs_ingestion_alerting_enabled\" {\n   type    = bool\n   default = true\n }\n+\n+variable \"logs_ingestion_priority\" {\n+  description = \"Number from 1 (high) to 5 (low).\"\n+\n+  type    = number\n+  default = null\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "logs-ingestion.tf",
        "additions": 22,
        "deletions": 29,
        "changes": 51,
        "status": "modified",
        "patch": "@@ -1,37 +1,30 @@\n locals {\n-  logs_ingestion_filter = var.logs_ingestion_filter_override != \"\" ? var.logs_ingestion_filter_override : var.filter_str\n+  logs_ingestion_filter               = var.logs_ingestion_filter_override != \"\" ? var.logs_ingestion_filter_override : var.filter_str\n   logs_ingestion_notification_channel = var.logs_ingestion_alerting_enabled ? var.notification_channel : \"\"\n }\n \n-resource \"datadog_monitor\" \"logs_ingestion\" {\n-  count = var.logs_ingestion_enabled ? 1 : 0\n-  name  = \"${var.service} - Daily Logs Ingestion\"\n-  type  = \"metric alert\"\n-  query = \"sum(${var.logs_ingestion_evaluation_period}):sum:datadog.estimated_usage.logs.ingested_bytes{${local.logs_ingestion_filter}}.as_count() > ${var.logs_ingestion_critical}\"\n+module \"logs_ingestion\" {\n+  source = \"git@github.com:kabisa/terraform-datadog-generic-monitor.git?ref=0.5.1\"\n \n-  message = templatefile(\"${path.module}/alert.tpl\", {\n-    alert_message        = \"The amount of logs ingested ${var.logs_ingestion_evaluation_period} is relatively high {{value}} and crosses threshold {{threshold}}\"\n-    recovery_message     = \"Logs ingestion amount has recovered below {{threshold}} ({{value}})\"\n-    note                 = var.logs_ingestion_note\n-    docs                 = var.logs_ingestion_docs\n-    notification_channel = local.logs_ingestion_notification_channel\n-  })\n+  name             = \"Daily Logs Ingestion\"\n+  query            = \"sum(${var.logs_ingestion_evaluation_period}):sum:datadog.estimated_usage.logs.ingested_bytes{${local.logs_ingestion_filter}}.as_count() > ${var.logs_ingestion_critical}\"\n+  alert_message    = \"The amount of logs ingested ${var.logs_ingestion_evaluation_period} is relatively high {{value}} and crosses threshold {{threshold}}\"\n+  recovery_message = \"Logs ingestion amount has recovered below {{threshold}} ({{value}})\"\n \n-  tags = concat([\n-    \"terraform:true\",\n-    \"env:${var.alert_env}\",\n-    \"service:${var.service}\",\n-    \"severity:${var.logs_ingestion_severity}\",\n-  ],\n-    var.additional_tags\n-  )\n+  # monitor level vars\n+  enabled            = var.logs_ingestion_enabled\n+  alerting_enabled   = var.logs_ingestion_alerting_enabled\n+  critical_threshold = var.logs_ingestion_critical\n+  warning_threshold  = var.logs_ingestion_warning\n+  priority           = var.logs_ingestion_priority\n+  severity           = var.logs_ingestion_severity\n+  docs               = var.logs_ingestion_docs\n+  note               = var.logs_ingestion_note\n \n-  require_full_window = true\n-\n-  monitor_thresholds {\n-    critical = var.logs_ingestion_critical\n-    warning  = var.logs_ingestion_warning\n-  }\n-\n-  locked = true\n+  # module level vars\n+  env                  = var.alert_env\n+  service              = var.service\n+  notification_channel = var.notification_channel\n+  additional_tags      = var.additional_tags\n+  locked               = var.locked\n }"
      },
      {
        "filename": "provider.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n terraform {\n   required_providers {\n     datadog = {\n-      source = \"DataDog/datadog\"\n+      source  = \"DataDog/datadog\"\n       version = \">= 2.21\"\n     }\n   }"
      },
      {
        "filename": "variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -28,3 +28,8 @@ variable \"costs_dashboard_name_override\" {\n   type    = string\n   default = \"\"\n }\n+\n+variable \"locked\" {\n+  type    = bool\n+  default = true\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/patheard/terraform-cantrill-aws-associate/commit/bc7484cd34698f2724e5d9f241fd9f53d953e3a3",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,5 +1,7 @@\n # Local .terraform directories\n **/.terraform/*\n+**/.terragrunt-cache/*\n+\n \n # .tfstate files\n *.tfstate\n@@ -20,6 +22,8 @@ override.tf\n override.tf.json\n *_override.tf\n *_override.tf.json\n+provider.tf\n+backend.tf\n \n # Include override files you do wish to add to version control using negated pattern\n #"
      },
      {
        "filename": "env/general/alerts/.terraform.lock.hcl",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/aws\" {\n+  version     = \"3.35.0\"\n+  constraints = \"~> 3.0\"\n+  hashes = [\n+    \"h1:btK0kEAhczdkGY1qWGSEs5840TlyefTEekQJB9ctwJ8=\",\n+    \"zh:0b7cf15369fe940190f2e3fd77300119a16a9b821a7b15e049a6e349126b833d\",\n+    \"zh:65680b35a45df6dc9ebe4439aa28dbe5767f8745443d0807656759d81ed23f5d\",\n+    \"zh:75a71517d40b842308bc7a13a8dadcade99de3344292318b28a3ad95f09994e7\",\n+    \"zh:865e618aa41f4a3842e818f6389f4aac89a985b409d1bb108ac753ea6292215d\",\n+    \"zh:893658f93e57ea6c2bb458cdcf7d51e617147f53a9b2ed7741689bec3cfca4f9\",\n+    \"zh:89d63eab0ad7fe3a891e6567052dd3227520ae48c212465d3a2b0bed326b319d\",\n+    \"zh:94a408adcc52ce1758ecc2aad8394c35254029d18f358392b86602705a688b3d\",\n+    \"zh:a82d09d03cb5480b3b4f318d1db3a64d80a701a429f3a84520e4a26f66b9a178\",\n+    \"zh:aee92e745c43de2cc30913bddd8e625a8c6511f900f8e4104a0ccb746f276428\",\n+    \"zh:b1178f4c2db30d7e49c3af441f79ac932bb5b8a8f05b0d770515b732ad4ac388\",\n+    \"zh:b2684d0124ed6c394c83005def7387a6f8c9ac5f459dd7fc2fe56ea1aa97b20c\",\n+  ]\n+}"
      },
      {
        "filename": "env/general/alerts/terragrunt.hcl",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+include {\n+  path = find_in_parent_folders()\n+}\n+\n+terraform {\n+  source = \"../../../module//alerts\"\n+}\n+inputs = {\n+  monthly_billing_threshold = \"10\"\n+}"
      },
      {
        "filename": "env/general/env_vars.hcl",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+inputs = {\n+  env = \"general\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "env/prod/alerts/terragrunt.hcl",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+include {\n+  path = find_in_parent_folders()\n+}\n+\n+terraform {\n+  source = \"../../../module//alerts\"\n+}\n+inputs = {\n+  monthly_billing_threshold = \"10\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "env/prod/env_vars.hcl",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+inputs = {\n+  env = \"prod\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "module/alerts/main.tf",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+resource \"aws_cloudwatch_metric_alarm\" \"billing\" {\n+  alarm_name                = \"billing-alarm-${lower(var.currency)}-${var.env}\"\n+  comparison_operator       = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods        = \"1\"\n+  metric_name               = \"EstimatedCharges\"\n+  namespace                 = \"AWS/Billing\"\n+  period                    = \"28800\"\n+  statistic                 = \"Maximum\"\n+  threshold                 = var.monthly_billing_threshold\n+  alarm_actions             = [aws_sns_topic.sns_alert_topic.arn]\n+\n+  dimensions = {\n+      Currency = var.currency\n+  }\n+}\n+\n+resource \"aws_sns_topic\" \"sns_alert_topic\" {\n+    name = \"billing-alarm-notification-${lower(var.currency)}-${var.env}\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "module/alerts/variables.tf",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "added",
        "patch": "@@ -0,0 +1,15 @@\n+variable \"env\" {\n+    description = \"Environment you are deploying to. Will be appended to SNS topic and alarm name. (e.g. dev, stage, prod)\"\n+    type = string\n+}\n+\n+variable \"monthly_billing_threshold\" {\n+    description = \"The threshold for which estimated monthly charges will trigger the metric alarm.\"\n+    type = string\n+}\n+\n+variable \"currency\" {\n+    description = \"Short notation for currency type (e.g. USD, CAD, EUR)\"\n+    type = string\n+    default = \"CAD\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terragrunt.hcl",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "status": "added",
        "patch": "@@ -0,0 +1,42 @@\n+\n+locals {\n+  vars = read_terragrunt_config(\"../env_vars.hcl\")\n+}\n+\n+inputs = {\n+  env = \"${local.vars.inputs.env}\"\n+}\n+\n+remote_state {\n+  backend = \"s3\"\n+  generate = {\n+    path      = \"backend.tf\"\n+    if_exists = \"overwrite_terragrunt\"\n+  }\n+  config = {\n+    region         = \"us-east-1\"\n+    bucket         = \"pheard-associate-${local.vars.inputs.env}-tfstate\"\n+    key            = \"${path_relative_to_include()}/state.tfstate\"\n+    dynamodb_table = \"pheard-associate-statelock\"\n+    encrypt        = true\n+  }\n+}\n+\n+generate \"provider\" {\n+  path      = \"provider.tf\"\n+  if_exists = \"overwrite_terragrunt\"\n+  contents  = <<EOF\n+terraform {\n+  required_providers {\n+    aws = {\n+      source  = \"hashicorp/aws\"\n+      version = \"~> 3.0\"\n+    }\n+  }\n+}\n+\n+provider \"aws\" {\n+  region = \"us-east-1\"\n+}\n+EOF\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/covidapihub/terraform-covidapihub/commit/3c5d381a20fbd287f1003271ee1ba64272325074",
    "files": [
      {
        "filename": "dev_env.tf",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -3,5 +3,22 @@ module \"dev1_network\" {\n   source       = \"./modules/network\"\n   network_name = \"dev1\"\n   vpc_cidr     = \"10.1.0.0/16\"\n+  # Save money: disable while no EC2s are deployed\n+  internet_gateway = 0\n+  nat_gateway = 0\n }\n \n+module \"dev2_network\" {\n+  source       = \"./modules/network\"\n+  network_name = \"dev2\"\n+  vpc_cidr     = \"10.2.0.0/16\"\n+  # Save money: disable while no EC2s are deployed\n+  internet_gateway = 0\n+  nat_gateway = 0\n+}\n+\n+module \"infra_network\" {\n+  source       = \"./modules/network\"\n+  network_name = \"infra\"\n+  vpc_cidr     = \"10.3.0.0/16\"\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "cluster"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/midl-dev/tezos-auxiliary-cluster/commit/9cbfebaab11cb3466b160d18ef2eb46c0b875d55",
    "files": [
      {
        "filename": "terraform/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -27,7 +27,7 @@ variable \"billing_account\" {\n \n variable \"kubernetes_instance_type\" {\n   type        = string\n-  default     = \"n1-standard-1\"\n+  default     = \"e2-standard-2\"\n   description = \"Instance type to use for the nodes in their steady state.\"\n }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/NLnetLabs/rpki-deploy/commit/8bd6e745475f635d6f6b6929a545afa2e1d9dd57",
    "files": [
      {
        "filename": "terraform/krill-e2e-test/run_on_do/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -34,7 +34,7 @@ variable \"domain\" {\n \n variable \"size\" {\n   type        = string\n-  default     = \"s-8vcpu-32gb\"\n+  default     = \"s-4vcpu-8gb\"\n   description = \"The size of the Digital Ocean Droplet to create. Default: s-1vcpu-1gb\"\n }\n "
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/mattermost/mattermost-cloud-database-factory/commit/3794d676f4375842364a080e78750b41d9af22d5",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -7,4 +7,5 @@\n \n coverage.out\n .vscode\n+.idea\n build/_output/"
      },
      {
        "filename": "terraform/aws/modules/rds-aurora-postgresql/main.tf",
        "additions": 59,
        "deletions": 53,
        "changes": 112,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n locals {\n-  master_password         = var.password == \"\" ? random_password.master_password.result : var.password\n-  database_id             = var.db_id == \"\" ? random_string.db_cluster_identifier.result : var.db_id\n-  max_connections         = var.max_postgresql_connections == \"auto\" || var.max_postgresql_connections == \"\" ? var.max_postgresql_connections_map[var.instance_type] : var.max_postgresql_connections\n+  master_password              = var.password == \"\" ? random_password.master_password.result : var.password\n+  database_id                  = var.db_id == \"\" ? random_string.db_cluster_identifier.result : var.db_id\n+  max_connections              = var.max_postgresql_connections == \"auto\" || var.max_postgresql_connections == \"\" ? var.max_postgresql_connections_map[var.instance_type] : var.max_postgresql_connections\n   performance_insights_enabled = var.environment == \"prod\" ? var.performance_insights_enabled : false\n }\n \n@@ -73,22 +73,28 @@ resource \"aws_rds_cluster\" \"provisioning_rds_cluster\" {\n }\n \n resource \"aws_rds_cluster_instance\" \"provisioning_rds_db_instance\" {\n-  count                           = var.replica_min\n-  identifier                      = format(\"rds-db-instance-multitenant-%s-%s-%s\", split(\"-\", var.vpc_id)[1], local.database_id, (count.index + 1))\n-  cluster_identifier              = aws_rds_cluster.provisioning_rds_cluster.id\n-  engine                          = var.engine\n-  engine_version                  = var.engine_version\n-  instance_class                  = var.instance_type\n-  db_subnet_group_name            = \"mattermost-provisioner-db-${var.vpc_id}-postgresql\"\n-  db_parameter_group_name         = aws_db_parameter_group.db_parameter_group_postgresql.id\n-  preferred_maintenance_window    = var.preferred_maintenance_window\n-  apply_immediately               = var.apply_immediately\n-  monitoring_role_arn             = data.aws_iam_role.enhanced_monitoring.arn\n-  monitoring_interval             = var.monitoring_interval\n-  promotion_tier                  = count.index + 1\n-  performance_insights_enabled    = local.performance_insights_enabled\n+  count                        = var.replica_min\n+  identifier                   = format(\"rds-db-instance-multitenant-%s-%s-%s\", split(\"-\", var.vpc_id)[1], local.database_id, (count.index + 1))\n+  cluster_identifier           = aws_rds_cluster.provisioning_rds_cluster.id\n+  engine                       = var.engine\n+  engine_version               = var.engine_version\n+  instance_class               = var.instance_type\n+  db_subnet_group_name         = \"mattermost-provisioner-db-${var.vpc_id}-postgresql\"\n+  db_parameter_group_name      = aws_db_parameter_group.db_parameter_group_postgresql.id\n+  preferred_maintenance_window = var.preferred_maintenance_window\n+  apply_immediately            = var.apply_immediately\n+  monitoring_role_arn          = data.aws_iam_role.enhanced_monitoring.arn\n+  monitoring_interval          = var.monitoring_interval\n+  promotion_tier               = count.index + 1\n+  performance_insights_enabled = local.performance_insights_enabled\n \n-  tags = var.tags\n+  tags = merge(\n+    {\n+      \"DatabaseType\"                        = var.multitenant_tag,\n+      \"MattermostCloudInstallationDatabase\" = \"PostgreSQL/Aurora\"\n+    },\n+    var.tags\n+  )\n \n   lifecycle {\n     ignore_changes = [\n@@ -143,28 +149,28 @@ data \"aws_sns_topic\" \"horizontal_scaling_sns_topic\" {\n }\n \n resource \"aws_cloudwatch_metric_alarm\" \"db_instances_alarm_cpu\" {\n-  count                     = var.replica_min\n-  alarm_name                = format(\"rds-db-instance-multitenant-%s-%s-%s-cpu\", split(\"-\", var.vpc_id)[1], local.database_id, (count.index + 1))\n-  comparison_operator       = \"GreaterThanOrEqualToThreshold\"\n-  evaluation_periods        = \"3\"\n-  metric_name               = \"CPUUtilization\"\n-  namespace                 = \"AWS/RDS\"\n-  period                    = \"600\"\n-  statistic                 = \"Average\"\n-  threshold                 = \"70\"\n-  alarm_description         = \"This metric monitors RDS DB Instance cpu utilization\"\n-  actions_enabled           = true\n-  alarm_actions             = [data.aws_sns_topic.horizontal_scaling_sns_topic.arn]\n-  dimensions                = {DBInstanceIdentifier = aws_rds_cluster_instance.provisioning_rds_db_instance[count.index].identifier}\n+  count               = var.replica_min\n+  alarm_name          = format(\"rds-db-instance-multitenant-%s-%s-%s-cpu\", split(\"-\", var.vpc_id)[1], local.database_id, (count.index + 1))\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods  = \"3\"\n+  metric_name         = \"CPUUtilization\"\n+  namespace           = \"AWS/RDS\"\n+  period              = \"600\"\n+  statistic           = \"Average\"\n+  threshold           = \"70\"\n+  alarm_description   = \"This metric monitors RDS DB Instance cpu utilization\"\n+  actions_enabled     = true\n+  alarm_actions       = [data.aws_sns_topic.horizontal_scaling_sns_topic.arn]\n+  dimensions          = { DBInstanceIdentifier = aws_rds_cluster_instance.provisioning_rds_db_instance[count.index].identifier }\n }\n \n resource \"aws_cloudwatch_metric_alarm\" \"db_instances_alarm_memory\" {\n-  count                     = var.replica_min\n-  alarm_name                = format(\"rds-db-instance-multitenant-%s-%s-%s-memory\", split(\"-\", var.vpc_id)[1], local.database_id, (count.index + 1))\n-  comparison_operator       = \"LessThanOrEqualToThreshold\"\n-  evaluation_periods        = \"3\"\n-  threshold                 = var.memory_alarm_limit\n-  alarm_description         = \"This metric monitors RDS DB Instance freeable memory\"\n+  count               = var.replica_min\n+  alarm_name          = format(\"rds-db-instance-multitenant-%s-%s-%s-memory\", split(\"-\", var.vpc_id)[1], local.database_id, (count.index + 1))\n+  comparison_operator = \"LessThanOrEqualToThreshold\"\n+  evaluation_periods  = \"3\"\n+  threshold           = var.memory_alarm_limit\n+  alarm_description   = \"This metric monitors RDS DB Instance freeable memory\"\n   metric_query {\n     id          = \"e1\"\n     expression  = \"m1+${var.memory_cache_proportion}*${var.ram_memory_bytes[var.instance_type]}\"\n@@ -173,18 +179,18 @@ resource \"aws_cloudwatch_metric_alarm\" \"db_instances_alarm_memory\" {\n   }\n \n   metric_query {\n-    id                          = \"m1\"\n+    id = \"m1\"\n     metric {\n-      metric_name               = \"FreeableMemory\"\n-      namespace                 = \"AWS/RDS\"\n-      period                    = \"600\"\n-      stat                      = \"Average\"\n-      dimensions                = {DBInstanceIdentifier = aws_rds_cluster_instance.provisioning_rds_db_instance[count.index].identifier}\n+      metric_name = \"FreeableMemory\"\n+      namespace   = \"AWS/RDS\"\n+      period      = \"600\"\n+      stat        = \"Average\"\n+      dimensions  = { DBInstanceIdentifier = aws_rds_cluster_instance.provisioning_rds_db_instance[count.index].identifier }\n     }\n     return_data = \"false\"\n   }\n-  actions_enabled           = true\n-  alarm_actions             = [data.aws_sns_topic.horizontal_scaling_sns_topic.arn]\n+  actions_enabled = true\n+  alarm_actions   = [data.aws_sns_topic.horizontal_scaling_sns_topic.arn]\n }\n \n \n@@ -200,22 +206,22 @@ resource \"aws_db_parameter_group\" \"db_parameter_group_postgresql\" {\n   }\n \n   parameter {\n-    name = \"random_page_cost\"\n+    name  = \"random_page_cost\"\n     value = var.random_page_cost\n   }\n \n   parameter {\n-    name = \"tcp_keepalives_count\"\n+    name  = \"tcp_keepalives_count\"\n     value = var.tcp_keepalives_count\n   }\n \n   parameter {\n-    name = \"tcp_keepalives_idle\"\n+    name  = \"tcp_keepalives_idle\"\n     value = var.tcp_keepalives_idle\n   }\n \n   parameter {\n-    name = \"tcp_keepalives_interval\"\n+    name  = \"tcp_keepalives_interval\"\n     value = var.tcp_keepalives_interval\n   }\n \n@@ -240,22 +246,22 @@ resource \"aws_rds_cluster_parameter_group\" \"cluster_parameter_group_postgresql\"\n   }\n \n   parameter {\n-    name = \"random_page_cost\"\n+    name  = \"random_page_cost\"\n     value = var.random_page_cost\n   }\n \n   parameter {\n-    name = \"tcp_keepalives_count\"\n+    name  = \"tcp_keepalives_count\"\n     value = var.tcp_keepalives_count\n   }\n \n   parameter {\n-    name = \"tcp_keepalives_idle\"\n+    name  = \"tcp_keepalives_idle\"\n     value = var.tcp_keepalives_idle\n   }\n \n   parameter {\n-    name = \"tcp_keepalives_interval\"\n+    name  = \"tcp_keepalives_interval\"\n     value = var.tcp_keepalives_interval\n   }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/simplygenius/atmos-recipes/commit/d27b48345a3827b8a10cb5388e42bd5cbea484bb",
    "files": [
      {
        "filename": "aws/vpc/config/atmos/vpc.yml",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -4,3 +4,4 @@\n az_count: 2\n vpc_cidr: 10.10.0.0/16\n vpc_enable_nat: 1\n+vpc_enable_redundant_nat: 1"
      },
      {
        "filename": "aws/vpc/modules/vpc/outputs.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -28,6 +28,16 @@ output \"private_route_table_ids\" {\n   value = \"${aws_route_table.private.*.id}\"\n }\n \n+output \"nat_gateway_ids\" {\n+  description = \"The NAT gateway IDs\"\n+  value = \"${aws_nat_gateway.default.*.id}\"\n+}\n+\n+output \"internet_gateway_id\" {\n+  description = \"The Internet Gateway ID\"\n+  value = \"${aws_internet_gateway.default.id}\"\n+}\n+\n locals {\n   default_sg = \"${element(concat(\n     aws_default_security_group.default-both.*.id,"
      },
      {
        "filename": "aws/vpc/modules/vpc/private-subnet.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -30,7 +30,10 @@ resource \"aws_route\" \"private-nat\" {\n \n   route_table_id = \"${aws_route_table.private.*.id[count.index]}\"\n   destination_cidr_block = \"0.0.0.0/0\"\n-  nat_gateway_id = \"${aws_nat_gateway.default.*.id[count.index]}\"\n+  // If just one NAT, then each private subnet will point to to it.  If\n+  // redundant NATs, then each private subnet will point to the NAT in its AZ\n+  // since private-subnets:public-subnets:AZs are 1:1:1\n+  nat_gateway_id = \"${aws_nat_gateway.default.*.id[(count.index % local.nat_count)]}\"\n }\n \n resource \"aws_route_table_association\" \"private\" {"
      },
      {
        "filename": "aws/vpc/modules/vpc/public-subnet.tf",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -9,15 +9,13 @@ resource \"aws_internet_gateway\" \"default\" {\n }\n \n resource \"aws_eip\" \"nat_gateway_ip\" {\n-  count = \"${length(local.public_subnet_cidrs) * local.nat_enablement}\"\n+  count = \"${local.nat_count}\"\n \n   vpc = true\n }\n \n-// We want one nat gateway per AZ, and since the pubic subnets are setup to be\n-// 1:1 with the AZs, we use those for the count\n resource \"aws_nat_gateway\" \"default\" {\n-  count = \"${length(local.public_subnet_cidrs) * local.nat_enablement}\"\n+  count = \"${local.nat_count}\"\n \n   allocation_id = \"${aws_eip.nat_gateway_ip.*.id[count.index]}\"\n   subnet_id = \"${aws_subnet.public.*.id[count.index]}\""
      },
      {
        "filename": "aws/vpc/modules/vpc/variables.tf",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "status": "modified",
        "patch": "@@ -27,6 +27,11 @@ variable \"enable_nat\" {\n   default = 1\n }\n \n+variable \"enable_redundant_nat\" {\n+  description = \"Enable redundant provisioning of NAT gateways, one per AZ vs one for entire vpc\"\n+  default = 1\n+}\n+\n variable \"vpc_tenancy\" {\n   description = \"Instance tenancy for the VPC\"\n   default = \"default\"\n@@ -115,7 +120,13 @@ data \"template_file\" \"public_subnet_cidrs\" {\n }\n \n locals {\n-  nat_enablement = \"${signum(var.enable_nat) == 1 ? 1 : 0}\"\n   private_subnet_cidrs = \"${data.template_file.private_subnet_cidrs.*.rendered}\"\n   public_subnet_cidrs = \"${data.template_file.public_subnet_cidrs.*.rendered}\"\n+\n+  nat_enablement = \"${signum(var.enable_nat) == 1 ? 1 : 0}\"\n+  nat_redundancy = \"${signum(var.enable_redundant_nat) == 1 ? 1 : 0}\"\n+  // When doing redundant NATs, add a NAT to each public subnet.  Since the\n+  // pubic subnets are setup to be 1:1 with the AZs, we use the public subnet\n+  // count for the NAT count\n+  nat_count = \"${(local.nat_redundancy == 0 ? 1 : length(local.public_subnet_cidrs)) * local.nat_enablement}\"\n }"
      },
      {
        "filename": "aws/vpc/recipes/vpc.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -13,6 +13,11 @@ variable \"vpc_enable_nat\" {\n   default = \"1\"\n }\n \n+variable \"vpc_enable_redundant_nat\" {\n+  description = \"Enable redundant provisioning of NAT gateways, one per AZ vs one for entire vpc\"\n+  default = \"1\"\n+}\n+\n variable \"permissive_default_security_group\" {\n   description = <<-EOF\n     Sets up the default security group to allow permissive internal ingress,\n@@ -43,6 +48,7 @@ module \"vpc\" {\n   az_count = \"${var.az_count}\"\n   vpc_cidr = \"${var.vpc_cidr}\"\n   enable_nat = \"${var.vpc_enable_nat}\"\n+  enable_redundant_nat = \"${var.vpc_enable_redundant_nat}\"\n \n   permissive_default_security_group = \"${var.permissive_default_security_group}\"\n }"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jonbamber/terraform_state_bucket/commit/8c7ca9bbb2c89d622129ace7b10b655851615982",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -30,10 +30,6 @@ data aws_iam_policy_document \"state_bucket\" {\n   }\n }\n \n-resource \"aws_kms_key\" \"state_bucket\" {\n-  description = \"KMS key for encryption on the Terraform state file bucket\"\n-}\n-\n resource \"aws_s3_bucket\" \"state_bucket\" {\n   bucket = \"jonbamber-tf-state\"\n   acl    = \"private\"\n@@ -45,8 +41,7 @@ resource \"aws_s3_bucket\" \"state_bucket\" {\n   server_side_encryption_configuration {\n     rule {\n       apply_server_side_encryption_by_default {\n-        kms_master_key_id = aws_kms_key.state_bucket.arn\n-        sse_algorithm     = \"aws:kms\"\n+        sse_algorithm = \"aws:kms\"\n       }\n     }\n   }"
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/RootPrivileges/terragrunt-aws-modules/commit/1ee78d8228a83a42a8e099d0821ce6f32ee92dad",
    "files": [
      {
        "filename": "cloudtrail/s3-bucket-cloudtrail.tf",
        "additions": 1,
        "deletions": 11,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -85,18 +85,8 @@ resource \"aws_s3_bucket\" \"cloudtrail\" {\n       storage_class = \"STANDARD_IA\"\n     }\n \n-    transition {\n-      days          = \"60\"\n-      storage_class = \"GLACIER\"\n-    }\n-\n     noncurrent_version_expiration {\n-      days = \"90\"\n-    }\n-\n-    noncurrent_version_transition {\n-      days          = \"30\"\n-      storage_class = \"GLACIER\"\n+      days = \"30\"\n     }\n   }\n }"
      },
      {
        "filename": "organisation/s3-bucket-audit-logs.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -28,8 +28,8 @@ resource \"aws_s3_bucket\" \"audit_logs\" {\n     enabled = true\n \n     transition {\n-      days          = \"60\"\n-      storage_class = \"GLACIER\"\n+      days          = \"30\"\n+      storage_class = \"STANDARD_IA\"\n     }\n   }\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/nhsconnect/prm-mhs-infra/commit/f6c64d1b6ed367803a833da293e84d61573a7fd8",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -4,3 +4,4 @@\n /terraform/tf-out.json\n /terraform-patch/terraform.tfstate*\n /terraform-patch/.terraform/\n+/terraform/ssh/"
      },
      {
        "filename": "Dojofile",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1 +1 @@\n-DOJO_DOCKER_IMAGE=\"nhsdev/deductions-infra-dojo:7b675a770443732d6dec4c98770014f2cc2d30c3\"\n+DOJO_DOCKER_IMAGE=\"nhsdev/deductions-infra-dojo:5a3106a1603b26a96214f14f45d5ffbac63add9c\""
      },
      {
        "filename": "gocd/pipeline.gocd.yml",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "status": "modified",
        "patch": "@@ -41,6 +41,9 @@ pipelines:\n       docker:\n         pipeline: mhs-docker-images\n         stage: build\n+      docker_dns_images:\n+        pipeline: mhs-dns-images\n+        stage: test\n     environment_variables:\n       NHS_ENVIRONMENT: dev\n     stages:\n@@ -65,6 +68,17 @@ pipelines:\n                     arguments:\n                       - -c\n                       - ./tasks e2e_tests\n+            dns:\n+              resources:\n+                - dev\n+                - mhs\n+              tasks:\n+                - exec:\n+                    command: /bin/bash\n+                    working_directory: prm-mhs-infra\n+                    arguments:\n+                      - -c\n+                      - ./tasks test_dns\n \n   \"prm-mhs-infra-ptl-integration\":\n     group: mhs\n@@ -83,6 +97,9 @@ pipelines:\n       docker:\n         pipeline: mhs-docker-images\n         stage: build\n+      docker_dns_images:\n+        pipeline: mhs-dns-images\n+        stage: test\n       dev_env:\n         pipeline: prm-mhs-infra-opentest\n         stage: deploy #FIXME: actually should depend on tests, but opentest tests are failing now\n@@ -117,3 +134,14 @@ pipelines:\n                     arguments:\n                       - -c\n                       - ./tasks functional_tests\n+            dns:\n+              resources:\n+                - test\n+                - mhs\n+              tasks:\n+                - exec:\n+                    command: /bin/bash\n+                    working_directory: prm-mhs-infra\n+                    arguments:\n+                      - -c\n+                      - ./tasks test_dns"
      },
      {
        "filename": "tasks",
        "additions": 38,
        "deletions": 3,
        "changes": 41,
        "status": "modified",
        "patch": "@@ -16,13 +16,17 @@ fi\n function tf_plan {\n   operation=$1\n \n+  if [ -z \"${DNS_IMAGE_TAG}\" ]; then\n+    DNS_IMAGE_TAG=$(git rev-parse HEAD | cut -c 1-7)\n+  fi\n+\n   cd terraform/\n   terraform init -backend-config key=${NHS_SERVICE}-${NHS_ENVIRONMENT}/terraform.tfstate\n   terraform get # modules\n   if [[ \"${operation}\" == \"create\" ]]; then\n-    terraform plan -var build_id=$MHS_IMAGE_TAG -var-file=${NHS_ENVIRONMENT}.tfvars -out=\"nhs_deployment.tfplan\"\n+    terraform plan -var unbound_image_version=$DNS_IMAGE_TAG -var build_id=$MHS_IMAGE_TAG -var-file=${NHS_ENVIRONMENT}.tfvars -out=\"nhs_deployment.tfplan\"\n   elif [[ \"${operation}\" == \"destroy\" ]]; then\n-    terraform plan -var build_id=$MHS_IMAGE_TAG -var-file=${NHS_ENVIRONMENT}.tfvars -out=\"nhs_deployment.tfplan\" -destroy\n+    terraform plan -var unbound_image_version=$DNS_IMAGE_TAG -var build_id=$MHS_IMAGE_TAG -var-file=${NHS_ENVIRONMENT}.tfvars -out=\"nhs_deployment.tfplan\" -destroy\n   else\n     echo \"Unknown operation (should be create or destroy), got: ${operation}\"\n     exit 1\n@@ -46,7 +50,7 @@ function check_env {\n \n function generate_ssh_key {\n   secret_id=\"/NHS/deductions/mhs-opentest/id_rsa\"\n-  ssh_directory=terraform/transit-opentest/ssh\n+  ssh_directory=terraform/ssh\n   mkdir -p ${ssh_directory}/\n   if [[ ! -f \"${ssh_directory}/id_rsa\" ]]; then\n     #TODO check aws authentication\n@@ -126,6 +130,16 @@ function docker_login {\n   eval $(dojo \"aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION\")\n }\n \n+function get_aws_value {\n+  secret_id=$1\n+  json=$(aws ssm get-parameter --region $AWS_DEFAULT_REGION --name $secret_id)\n+  if [ $? != 0 ]; then\n+    >&2 echo \"Failed to obtain SSM value: $secret_id\"\n+    exit 5\n+  fi\n+  echo $json | jq -r \".Parameter.Value\"\n+}\n+\n command=\"$1\"\n case \"${command}\" in\n   _ssh_key)\n@@ -187,6 +201,27 @@ case \"${command}\" in\n   test_docker_dns)\n       echo \"TODO: dns docker image tests\"\n       ;;\n+  _test_dns)\n+      check_env\n+      AWS_ACCOUNT_ID=$(aws sts get-caller-identity | jq -r .Account)\n+      DNS_SERVERS=$(get_aws_value \"/NHS/deductions-${AWS_ACCOUNT_ID}/mhs-${NHS_ENVIRONMENT}/dns_servers\")\n+      DNS_SERVER_1=$(echo \"${DNS_SERVERS}\" | awk -F \",\" '{print $1}')\n+      DNS_SERVER_2=$(echo \"${DNS_SERVERS}\" | awk -F \",\" '{print $2}')\n+      echo \"Querying a public domain: redhat.com\"\n+      set -x\n+      dig redhat.com @${DNS_SERVER_1} | grep 'Got answer'\n+      dig redhat.com @${DNS_SERVER_2} | grep 'Got answer'\n+      echo \"OK. Received reply for a public domain\"\n+      if [ \"${NHS_ENVIRONMENT}\" == \"test\" ]; then\n+        echo \"Querying for private domain on HSCN network: nww.int.spine2.ncrs.nhs.uk\"\n+        dig nww.int.spine2.ncrs.nhs.uk @${DNS_SERVER_1} | grep 'Got answer'\n+        dig nww.int.spine2.ncrs.nhs.uk @${DNS_SERVER_2} | grep 'Got answer'\n+        echo \"OK. Received reply for an HSCN domain\"\n+      fi\n+      ;;\n+  test_dns)\n+      dojo \"./tasks _test_dns\"\n+      ;;\n   _generate_certs)\n       check_env\n       rm -rf support"
      },
      {
        "filename": "terraform/dev.tfvars",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -35,3 +35,7 @@ mhs_forward_reliable_endpoint_url  = \"https://192.168.128.11/reliablemessaging/f\n spineroutelookup_service_sds_url    = \"ldap://192.168.128.11:389\" # It seems so based on code usage, search for SDS_URL. MUST BE AN IP!!\n spineroutelookup_service_search_base = \"ou=services,o=nhs\"\n spineroutelookup_service_disable_sds_tls = \"True\" # Makes sense for opentest\n+\n+# OpenTest does not have dedicated DNSes, HSCN is not connected. Therefore we use public, internet-wide DNSes\n+dns_hscn_forward_server_1 = \"1.0.0.1\"\n+dns_hscn_forward_server_2 = \"1.1.1.1\""
      },
      {
        "filename": "terraform/dns.tf",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+\n+module \"dns\" {\n+    source = \"./dns\"\n+    dns_global_forward_server = cidrhost(local.mhs_vpc_cidr_block, 2) # AWS DNS - second IP in the subnet\n+    dns_hscn_forward_server_1 = var.dns_hscn_forward_server_1\n+    dns_hscn_forward_server_2 = var.dns_hscn_forward_server_2\n+    ecr_address               = local.ecr_address\n+    unbound_image_version     = var.unbound_image_version\n+    subnet_ids                = local.subnet_ids\n+    vpc_id                    = local.mhs_vpc_id\n+    allowed_cidr              = local.mhs_vpc_cidr_block\n+    ssh_keypair_name          = aws_key_pair.mhs-key.key_name\n+}"
      },
      {
        "filename": "terraform/dns/data.tf",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+data \"aws_ami\" \"amazon-linux-2\" {\n+  most_recent = true\n+  owners = [\"amazon\"]\n+\n+  filter {\n+    name   = \"name\"\n+    values = [\"amzn2-ami-hvm-2.0.????????-x86_64-gp2\"]\n+  }\n+\n+  filter {\n+    name = \"state\"\n+    values = [\"available\"]\n+  }\n+}\n+\n+data \"aws_caller_identity\" \"current\" {}"
      },
      {
        "filename": "terraform/dns/ec2-profile.tf",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "status": "added",
        "patch": "@@ -0,0 +1,25 @@\n+data \"aws_iam_policy_document\" \"instance-assume-role-policy\" {\n+  statement {\n+    actions = [\"sts:AssumeRole\"]\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"ec2.amazonaws.com\"]\n+    }\n+  }\n+}\n+\n+resource \"aws_iam_role\" \"dns-server\" {\n+  name               = \"mhs-dns-server\"\n+  assume_role_policy = data.aws_iam_policy_document.instance-assume-role-policy.json\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"ecr_read_attach\" {\n+  role       = aws_iam_role.dns-server.name\n+  policy_arn = \"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"\n+}\n+\n+resource \"aws_iam_instance_profile\" \"dns-server\" {\n+  name = \"mhs-dns-server\"\n+  role = aws_iam_role.dns-server.name\n+}"
      },
      {
        "filename": "terraform/dns/ec2.tf",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "status": "added",
        "patch": "@@ -0,0 +1,36 @@\n+locals {\n+  dns_count = 2\n+  dns_global_forward_server  = var.dns_global_forward_server\n+  dns_hscn_forward_server_1  = var.dns_hscn_forward_server_1\n+  dns_hscn_forward_server_2  = var.dns_hscn_forward_server_2\n+  dns_docker_image_url       = \"${var.ecr_address}/mhs-unbound-dns:${var.unbound_image_version}\"\n+  subnet_ids                 = var.subnet_ids\n+  dns_keypair_name           = var.ssh_keypair_name\n+}\n+\n+resource \"aws_instance\" \"dns\" {\n+    count                           = local.dns_count\n+    ami                             = data.aws_ami.amazon-linux-2.id\n+    instance_type                   = \"t2.micro\"\n+    vpc_security_group_ids          = [aws_security_group.dns-sg.id]\n+    subnet_id                       = local.subnet_ids[count.index]\n+    key_name                        = local.dns_keypair_name\n+\n+    user_data            = data.template_file.userdata.rendered\n+    iam_instance_profile = aws_iam_instance_profile.dns-server.name\n+\n+    tags = {\n+        Name = \"mhs-dns-${count.index}\"\n+    }\n+}\n+\n+data \"template_file\" \"userdata\" {\n+  template = \"${file(\"${path.module}/templates/userdata.tpl\")}\"\n+\n+  vars = {\n+    GLOBAL_FORWARD_SERVER = local.dns_global_forward_server\n+    HSCN_FORWARD_SERVER_1 = local.dns_hscn_forward_server_1\n+    HSCN_FORWARD_SERVER_2 = local.dns_hscn_forward_server_2\n+    DOCKER_IMAGE_URL      = local.dns_docker_image_url\n+  }\n+}"
      },
      {
        "filename": "terraform/dns/output.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+output \"dns_ip_addresses\" {\n+  value = aws_instance.dns.*.private_ip\n+}\n+\n+output \"security_group_id\" {\n+  value = aws_security_group.dns-sg.id\n+}"
      },
      {
        "filename": "terraform/dns/sg.tf",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "status": "added",
        "patch": "@@ -0,0 +1,46 @@\n+resource \"aws_security_group\" \"dns-sg\" {\n+    name        = \"mhs-dns-server-sg\"\n+    description = \"DNS server access in MHS VPC\"\n+    vpc_id      = var.vpc_id\n+\n+    # DNS traffic\n+    ingress {\n+        protocol    = \"tcp\"\n+        from_port   = 53\n+        to_port     = 53\n+        cidr_blocks = [var.allowed_cidr]\n+    }\n+\n+    ingress {\n+        protocol    = \"udp\"\n+        from_port   = 53\n+        to_port     = 53\n+        cidr_blocks = [var.allowed_cidr]\n+    }\n+\n+    # For debugging\n+    ingress {\n+        protocol    = \"tcp\"\n+        from_port   = 22\n+        to_port     = 22\n+        cidr_blocks = [\"10.0.0.0/8\"] # All local networks\n+    }\n+\n+    ingress {\n+        protocol    = \"icmp\"\n+        from_port   = -1\n+        to_port     = -1\n+        cidr_blocks = [\"10.0.0.0/8\"] # All local networks\n+    }\n+\n+    egress {\n+        from_port = 0\n+        to_port   = 0\n+        protocol  = \"-1\"\n+        cidr_blocks = [\"0.0.0.0/0\"]\n+    }\n+\n+    tags = {\n+        Name = \"mhs-dns-server\"\n+    }\n+}"
      },
      {
        "filename": "terraform/dns/templates/userdata.tpl",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "added",
        "patch": "@@ -0,0 +1,15 @@\n+#!/bin/bash -e\n+\n+sudo yum update -y\n+sudo amazon-linux-extras install -y docker\n+sudo service docker start\n+sudo usermod -a -G docker ec2-user\n+\n+eval $(aws ecr get-login --no-include-email --region eu-west-2)\n+\n+docker run -d --name unbound \\\n+ -p 53:53/udp -p 53:53/tcp \\\n+ -e GLOBAL_FORWARD_SERVER=${GLOBAL_FORWARD_SERVER} \\\n+ -e HSCN_FORWARD_SERVER_1=${HSCN_FORWARD_SERVER_1} \\\n+ -e HSCN_FORWARD_SERVER_2=${HSCN_FORWARD_SERVER_2} \\\n+ ${DOCKER_IMAGE_URL}"
      },
      {
        "filename": "terraform/dns/variables.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+variable \"dns_global_forward_server\" {}\n+variable \"dns_hscn_forward_server_1\" {}\n+variable \"dns_hscn_forward_server_2\" {}\n+variable \"ecr_address\" {}\n+variable \"unbound_image_version\" {}\n+variable \"subnet_ids\" {}\n+variable \"vpc_id\" {}\n+variable \"allowed_cidr\" {}\n+variable \"ssh_keypair_name\" {}"
      },
      {
        "filename": "terraform/ecs.tf",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "status": "modified",
        "patch": "@@ -43,6 +43,14 @@ resource \"aws_cloudwatch_log_group\" \"mhs_route_log_group\" {\n # environment variables\n locals {\n   mhs_outbound_base_environment_vars = [\n+    {\n+      name = \"DNS_SERVER_1\",\n+      value = module.dns.dns_ip_addresses[0]\n+    },\n+    {\n+      name = \"DNS_SERVER_2\",\n+      value = module.dns.dns_ip_addresses[1]\n+    },\n     {\n       name = \"MHS_LOG_LEVEL\"\n       value = var.mhs_log_level\n@@ -181,7 +189,16 @@ resource \"aws_ecs_task_definition\" \"mhs_inbound_task\" {\n         {\n           name = \"MHS_INBOUND_QUEUE_URL\"\n           value = \"${local.inbound_queue_host}/${var.inbound_queue_name}\"\n+        },\n+        {\n+          name = \"DNS_SERVER_1\",\n+          value = module.dns.dns_ip_addresses[0]\n+        },\n+        {\n+          name = \"DNS_SERVER_2\",\n+          value = module.dns.dns_ip_addresses[1]\n         }\n+\n       ]\n       secrets = [\n         {\n@@ -258,6 +275,14 @@ resource \"aws_ecs_task_definition\" \"mhs_route_task\" {\n       name = \"mhs-route\"\n       image = \"${local.ecr_address}/mhs-route:${var.build_id}\"\n       environment = [\n+        {\n+          name = \"DNS_SERVER_1\",\n+          value = module.dns.dns_ip_addresses[0]\n+        },\n+        {\n+          name = \"DNS_SERVER_2\",\n+          value = module.dns.dns_ip_addresses[1]\n+        },\n         {\n           name = \"MHS_LOG_LEVEL\"\n           value = var.mhs_log_level"
      },
      {
        "filename": "terraform/opentest.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -13,6 +13,7 @@ module \"opentest\" {\n     az = data.aws_availability_zones.all.names[0]\n     my_ip = var.my_ip\n     main_route_table_id = local.mhs_vpc_route_table_id\n+    ssh_keypair_name = aws_key_pair.mhs-key.key_name\n }\n \n "
      },
      {
        "filename": "terraform/output.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -10,6 +10,10 @@ output \"route_url\" {\n   value = aws_ssm_parameter.route_url.value\n }\n \n+output \"dns_servers\" {\n+  value = module.dns.dns_ip_addresses\n+}\n+\n variable \"deductions_env\" {\n   default = \"dev\" #FIXME: just use same env name, requires new certs\n }\n@@ -37,3 +41,9 @@ resource \"aws_ssm_parameter\" \"mhs_vpc\" {\n   type  = \"String\"\n   value = local.mhs_vpc_id\n }\n+\n+resource \"aws_ssm_parameter\" \"dns_servers\" {\n+  name = \"/NHS/deductions-${data.aws_caller_identity.current.account_id}/mhs-${var.environment_id}/dns_servers\"\n+  type  = \"String\"\n+  value = join(\",\", module.dns.dns_ip_addresses)\n+}"
      },
      {
        "filename": "terraform/security-groups.tf",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "status": "modified",
        "patch": "@@ -81,6 +81,16 @@ resource \"aws_security_group_rule\" \"mhs_outbound_security_group_cloudwatch_egres\n   description = \"HTTPS connections to Cloudwatch endpoint\"\n }\n \n+resource \"aws_security_group_rule\" \"mhs_outbound_security_group_dns_udp_egress_rule\" {\n+  security_group_id = aws_security_group.mhs_outbound_security_group.id\n+  type = \"egress\"\n+  from_port = 53\n+  to_port = 53\n+  protocol = \"udp\"\n+  source_security_group_id = module.dns.security_group_id\n+  description = \"DNS queries to local DNS servers\"\n+}\n+\n ###################\n # MHS route security group\n ###################\n@@ -155,6 +165,16 @@ resource \"aws_security_group_rule\" \"mhs_route_security_group_cloudwatch_egress_r\n   description = \"HTTPS connections to Cloudwatch endpoint\"\n }\n \n+resource \"aws_security_group_rule\" \"mhs_route_security_group_dns_udp_egress_rule\" {\n+  security_group_id = aws_security_group.mhs_route_security_group.id\n+  type = \"egress\"\n+  from_port = 53\n+  to_port = 53\n+  protocol = \"udp\"\n+  source_security_group_id = module.dns.security_group_id\n+  description = \"DNS queries to local DNS servers\"\n+}\n+\n ###################\n # MHS inbound security group\n ###################\n@@ -243,6 +263,17 @@ resource \"aws_security_group_rule\" \"mhs_inbound_security_group_cloudwatch_egress\n   description = \"HTTPS connections to Cloudwatch endpoint\"\n }\n \n+# Egress rule to allow requests to local DNS\n+resource \"aws_security_group_rule\" \"mhs_inbound_security_group_dns_udp_egress_rule\" {\n+  security_group_id = aws_security_group.mhs_inbound_security_group.id\n+  type = \"egress\"\n+  from_port = 53\n+  to_port = 53\n+  protocol = \"udp\"\n+  source_security_group_id = module.dns.security_group_id\n+  description = \"DNS queries to local DNS servers\"\n+}\n+\n ###################\n # VPC endpoint security groups\n ###################\n@@ -275,6 +306,15 @@ resource \"aws_security_group\" \"ecr_security_group\" {\n     description = \"Allow inbound HTTPS requests from GoCD agent\"\n   }\n \n+  ingress {\n+    from_port = 443\n+    to_port = 443\n+    protocol = \"tcp\"\n+    # Allow requests from DNS server instances\n+    security_groups = [ module.dns.security_group_id ]\n+    description = \"Allow inbound HTTPS requests from DNS servers to pull docker images\"\n+  }\n+\n   tags = {\n     Name = \"${var.environment_id}-ecr-endpoint-sg\"\n     EnvironmentId = var.environment_id"
      },
      {
        "filename": "terraform/ssh_keypair.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+\n+resource \"aws_key_pair\" \"mhs-key\" {\n+  key_name   = \"mhs-${var.environment_id}-ssh-key\"\n+  public_key = file(\"${path.module}/ssh/id_rsa.pub\")\n+}"
      },
      {
        "filename": "terraform/test.tfvars",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -43,3 +43,6 @@ mhs_forward_reliable_endpoint_url  = \"https://msg.int.spine2.ncrs.nhs.uk/reliabl\n spineroutelookup_service_sds_url    = \"ldaps://10.196.94.141:636\"\n spineroutelookup_service_search_base = \"ou=services,o=nhs\"\n spineroutelookup_service_disable_sds_tls = \"False\" # Must be false in PTL due to ldaps usage (as opposed to ldap in opentest)\n+\n+dns_hscn_forward_server_1 = \"155.231.231.1\"\n+dns_hscn_forward_server_2 = \"155.231.231.2\""
      },
      {
        "filename": "terraform/transit-opentest/ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -8,7 +8,7 @@ resource \"aws_instance\" \"vpn\" {\n     source_dest_check               = false\n     vpc_security_group_ids          = aws_security_group.vpn-sg.*.id\n     subnet_id                       = local.subnet_id\n-    key_name                        = local.vpn_keypair_name\n+    key_name                        = var.ssh_keypair_name\n \n     user_data            = data.template_file.userdata.rendered\n     iam_instance_profile = local.vpn_instance_profile"
      },
      {
        "filename": "terraform/transit-opentest/ssh_keypair.tf",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "status": "removed",
        "patch": "@@ -1,8 +0,0 @@\n-locals {\n-  vpn_keypair_name = join(\",\", aws_key_pair.vpn-key.*.key_name)\n-}\n-resource \"aws_key_pair\" \"vpn-key\" {\n-  key_name   = \"${var.component_name}-vpn-key\"\n-  public_key = file(\"${path.module}/ssh/id_rsa.pub\")\n-  count = var.opentest_resource_count\n-}"
      },
      {
        "filename": "terraform/transit-opentest/variables.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -10,6 +10,8 @@ variable \"vpc_id\" {}\n \n variable \"opentest_resource_count\" {}\n \n+variable \"ssh_keypair_name\" {}\n+\n variable \"region\" {\n   default = \"eu-west-2\"\n }"
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -12,6 +12,10 @@ variable \"recipient_ods_code\" {\n   description = \"ODS code that was used for the MHS (CMA endpoint) registration\"\n }\n \n+variable \"dns_hscn_forward_server_1\" {}\n+variable \"dns_hscn_forward_server_2\" {}\n+variable \"unbound_image_version\" {}\n+\n variable \"nlb_deletion_protection\" {}\n \n variable \"use_opentest\" {}"
      },
      {
        "filename": "terraform/vpc-endpoints.tf",
        "additions": 22,
        "deletions": 2,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -21,7 +21,7 @@ resource \"aws_vpc_endpoint\" \"dynamodb_endpoint\" {\n   }\n }\n \n-# ECR VPC endpoint\n+# ECR VPC docker API endpoint\n resource \"aws_vpc_endpoint\" \"ecr_endpoint\" {\n   vpc_id = local.mhs_vpc_id\n   service_name = \"com.amazonaws.${var.region}.ecr.dkr\"\n@@ -36,7 +36,27 @@ resource \"aws_vpc_endpoint\" \"ecr_endpoint\" {\n   subnet_ids = local.subnet_ids\n \n   tags = {\n-    Name = \"${var.environment_id}-ecr-endpoint\"\n+    Name = \"${var.environment_id}-ecr-docker-endpoint\"\n+    EnvironmentId = var.environment_id\n+  }\n+}\n+\n+# ECR VPC API endpoint - needed for docker login\n+resource \"aws_vpc_endpoint\" \"ecr_api_endpoint\" {\n+  vpc_id = local.mhs_vpc_id\n+  service_name = \"com.amazonaws.${var.region}.ecr.api\"\n+  vpc_endpoint_type = \"Interface\"\n+  private_dns_enabled = true\n+\n+  security_group_ids = [\n+    aws_security_group.ecr_security_group.id\n+  ]\n+\n+  # An endpoint network interface is created in all of the subnets we have created.\n+  subnet_ids = local.subnet_ids\n+\n+  tags = {\n+    Name = \"${var.environment_id}-ecr-api-endpoint\"\n     EnvironmentId = var.environment_id\n   }\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/wellcomecollection/buildkite-infrastructure/commit/300ed87cba6912103723b03d62c9b0bf93df36ea",
    "files": [
      {
        "filename": "README.md",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -17,4 +17,16 @@ This includes:\n     We cannot regenerate this easily (IDs are assigned randomly), so we want\n     to protect this from accidental changes.\n \n-*   Shared infrastructure used by other projects.\n\\ No newline at end of file\n+*   Shared infrastructure used by other projects.\n+\n+## Elastic Cloud Snapshots\n+\n+This repo includes the S3 bucket where snapshots from our cloud hosted Elasticsearch provider (Elastic Cloud) are stored for the Catalogue API.\n+\n+This repository needs to be registered with any new cluster that is created.\n+\n+See: https://www.elastic.co/guide/en/cloud/current/ec-aws-custom-repository.html\n+\n+The access key id and (encrypted) secret are available from the terraform outputs for the shared stack.\n+\n+To decrypt the secret for use you will need to base64 decode the secret output and decode it using the `wellcomedigitalplatform` secret key available via Keybase.\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/critical/iam.tf",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+# elasticcloud\n+\n+module \"elasticcloud-catalogue\" {\n+  source = \"../modules/elasticcloud\"\n+\n+  bucket_name = \"${aws_s3_bucket.elasticsearch-snapshots-catalogue.id}\"\n+  namespace   = \"catalogue\"\n+  pgp_pub_key = \"${local.wellcomedigitalplatform_pgp_pub_key}\"\n+\n+  principals = [\n+    \"${local.aws_platform_principal}\"\n+  ]\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/critical/locals.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+locals {\n+  account_id    = \"${data.aws_caller_identity.current.account_id}\"\n+  aws_platform_principal = \"arn:aws:iam::${local.account_id}:root\"\n+  wellcomedigitalplatform_pgp_pub_key = \"${data.template_file.pgp_pub_key.rendered}\"\n+}\n+\n+data \"template_file\" \"pgp_pub_key\" {\n+  template = \"${file(\"${path.module}/wellcomedigitalplatform.pub\")}\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/critical/outputs.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -17,3 +17,21 @@ output \"cognito_stacks_api_identifier\" {\n output \"admin_cidr_ingress\" {\n   value = \"${local.admin_cidr_ingress}\"\n }\n+\n+# Elasticcloud\n+\n+output \"elasticcloud_access_id\" {\n+  value = \"${module.elasticcloud-catalogue.elasticcloud_access_id}\"\n+}\n+\n+output \"elasticcloud_access_secret\" {\n+  value = \"${module.elasticcloud-catalogue.elasticcloud_access_secret}\"\n+}\n+\n+output \"elasticcloud_readonly_role_arn\" {\n+  value = \"${module.elasticcloud-catalogue.elasticcloud_readonly_role_arn}\"\n+}\n+\n+output \"elasticcloud_readonly_role_name\" {\n+  value = \"${module.elasticcloud-catalogue.elasticcloud_readonly_role_name}\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/critical/s3_elasticsearch.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+resource \"aws_s3_bucket\" \"elasticsearch-snapshots-catalogue\" {\n+  bucket = \"wellcomecollection-elasticsearch-snapshots-catalogue\"\n+  acl    = \"private\"\n+\n+  lifecycle {\n+    prevent_destroy = true\n+  }\n+}"
      },
      {
        "filename": "terraform/critical/wellcomedigitalplatform.pub",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+mQENBFwY66EBCADF3hClr8RWaH8vdobyzxkYf/Ec1p/9l9MDP6rEjh6AGoSoFggn79CyHp5o0EWx5CvaOcXQpf0tsfuXy7XfBVzDAOiyrYSnu5yS+UwUA8DGzqoM+gVAbm7i10EZo+uC6N9H09l48R48VmgSVVoAjNK0+N9RU0pnQxBESCV4/PJQRLyP3aLeZMrAaZtTHk2q9z9PGJQsUwIylhSXHWjb89aKRLeDuNNtxBgdIPd3SeMn2CfHCAMMQNgLCZJ1btTa5vCq76jyaauo8xqVncvzY3uH7dVBVR29DqCvgAa9F5g0kby/bMa1Q0x/SKqjNrGweFaRqtpAdzeA/vzSQ4uyQ3qFABEBAAG0QldlbGxjb21lIERpZ2l0YWwgUGxhdGZvcm0gPHdlbGxjb21lZGlnaXRhbHBsYXRmb3JtQHdlbGxjb21lLmFjLnVrPokBTgQTAQgAOBYhBCQdv/B+/mvembp4YmSNkd1aj8LDBQJcGOuhAhsDBQsJCAcCBhUICQoLAgQWAgMBAh4BAheAAAoJEGSNkd1aj8LDoysIAI1UjqUEvLykSeS+N2FfY3zvxAT0jM3pWVvn4A9pHUQsCrnXderzw+bmZAgFUdtx9CKjV5gNdpPVRovSrWPOmcaDrVVqa4KLSBeX24OK5J423sE8Isym4cRN+RO3ofuTDGBxorYS/VHYHood89eI2jXTgZz0iXwXuWXLZP0fYwnn6alYS/sHSf24ZImdfDPCpVql/tjBnx4FCqUDp6HDzOkbeysIihSqLwVy67xvVdR9LmqxsVv3lNb5bv3txRwALLKJphmMrUERSSTiYIs5FVWrjDLv7dtg4x4EFMHvWxJjYsIOnseM2vZm7CUOWMWoE3BrrUjc3P+7XQ6uBLQ46vC5AQ0EXBjroQEIALwIcvDve0R4xmzGf0r2YvWsXApfWC46ykwTKKOtrTOnkmOOkgZai8EIFuzHT9fI954AVIHsdZjmkBXHylBtzk8jcizhxgOKlTexQD1alWvXA7SjSrTGfxbuW/7m6RDGKU4O6K8qvSRH7dt4D37pnDeTuSZuEt+cfkIJIeH4sYWDaouIyydqUCq9Kd5e2glABrszCKgVsScT5dwYB3GavoIOtplc3MBkmMhnvcLnUqaiQV0MoFvtf5Q4vgYYhfPZcvIT3ITjlv/5HeVZG+IXkfPsIeY1qhOB+Ev1sw82baVZxJFohg0hd40lk2KJhZ4P8lW1xyhzsbVNg1tJzLw2bm0AEQEAAYkBNgQYAQgAIBYhBCQdv/B+/mvembp4YmSNkd1aj8LDBQJcGOuhAhsMAAoJEGSNkd1aj8LDWC8H/3G+4u77IAZ7+3liZSaE/zqwLh6MqOVKHsutSgvp0O9oLyIUitnVknOTob3yDOr+eaiVX3J7CXWxGFQ9nTvIvVZfiXavPAoEyW0xHWrPWLTvY+VJQIEO8bbH9z9vqS/+Fh6jrUMZNGkYIco8vIBf6iFkgs7+tVMH3YX2ybCs87CIrIZwRCXgrGCOXXgVq1IaUG0rjkIk+JrWyVAW2unp2SUhcbcjJhiIs6WQEUQE3UX83IxTK7fXOF1W2MuX43/MlsHoo6OWqSejM8cra7zZdrsjHxrZMQAwslXVAXuCw4ky0dgRKPrsu3po2v5+tObEo9n9ybRoyH21AGInUlXKtmM=\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/modules/elasticcloud/main.tf",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "status": "added",
        "patch": "@@ -0,0 +1,64 @@\n+# elasticcloud snapshot reader\n+\n+resource \"aws_iam_role\" \"elasticcloud-snapshot-readonly\" {\n+  assume_role_policy = \"${data.aws_iam_policy_document.assume-elasticcloud-snapshot-readonly.json}\"\n+}\n+\n+resource \"aws_iam_role_policy\" \"elasticcloud-snapshot-readonly\" {\n+  policy = \"${data.aws_iam_policy_document.elasticcloud-snapshot-readonly.json}\"\n+  role = \"${aws_iam_role.elasticcloud-snapshot-readonly.id}\"\n+}\n+\n+data \"aws_iam_policy_document\" \"elasticcloud-snapshot-readonly\" {\n+  statement {\n+    actions = [\n+      \"s3:List*\",\n+      \"s3:Get*\"\n+    ]\n+    resources = [\n+      \"${data.aws_s3_bucket.elasticcloud-snapshots.arn}\",\n+      \"${data.aws_s3_bucket.elasticcloud-snapshots.arn}/*\"\n+    ]\n+  }\n+}\n+\n+data \"aws_iam_policy_document\" \"assume-elasticcloud-snapshot-readonly\" {\n+  statement {\n+    actions = [\"sts:AssumeRole\"]\n+    principals {\n+      identifiers = [\"${var.principals}\"]\n+      type = \"AWS\"\n+    }\n+  }\n+}\n+\n+# elasticcloud service\n+\n+resource \"aws_iam_user\" \"elasticcloud\" {\n+  name = \"${var.namespace}-elasticcloud\"\n+}\n+\n+resource \"aws_iam_access_key\" \"elasticcloud\" {\n+  user = \"${aws_iam_user.elasticcloud.name}\"\n+  pgp_key = \"${var.pgp_pub_key}\"\n+}\n+\n+resource \"aws_iam_user_policy\" \"elasticcloud\" {\n+  user = \"${aws_iam_user.elasticcloud.name}\"\n+\n+  policy = \"${data.aws_iam_policy_document.elasticcloud.json}\"\n+}\n+\n+data \"aws_s3_bucket\" \"elasticcloud-snapshots\" {\n+  bucket = \"${var.bucket_name}\"\n+}\n+\n+data \"aws_iam_policy_document\" \"elasticcloud\" {\n+  statement {\n+    actions = [\"s3:*\"]\n+    resources = [\n+      \"${data.aws_s3_bucket.elasticcloud-snapshots.arn}\",\n+      \"${data.aws_s3_bucket.elasticcloud-snapshots.arn}/*\"\n+    ]\n+  }\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/modules/elasticcloud/outputs.tf",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "added",
        "patch": "@@ -0,0 +1,15 @@\n+output \"elasticcloud_access_id\" {\n+  value = \"${aws_iam_access_key.elasticcloud.id}\"\n+}\n+\n+output \"elasticcloud_access_secret\" {\n+  value = \"${aws_iam_access_key.elasticcloud.encrypted_secret}\"\n+}\n+\n+output \"elasticcloud_readonly_role_arn\" {\n+  value = \"${aws_iam_role.elasticcloud-snapshot-readonly.arn}\"\n+}\n+\n+output \"elasticcloud_readonly_role_name\" {\n+  value = \"${aws_iam_role.elasticcloud-snapshot-readonly.name}\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/modules/elasticcloud/variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+variable \"namespace\" {}\n+variable \"bucket_name\" {}\n+variable \"pgp_pub_key\" {}\n+variable \"principals\" {\n+  type = \"list\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/shared/iam.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,3 +1,5 @@\n+# cloudhealth\n+\n module \"cloudhealth-catalogue\" {\n   source = \"../modules/cloudhealth\"\n "
      },
      {
        "filename": "terraform/shared/locals.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,3 +1,5 @@\n locals {\n   aws_region = \"eu-west-1\"\n }\n+\n+"
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/TimonB/tf-azure-example/commit/ce89df3cebc6487146391afe9517661053229f77",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -286,7 +286,7 @@ resource \"azurerm_kubernetes_cluster\" \"example\" {\n   default_node_pool {\n     name       = \"default\"\n     node_count = 1\n-    vm_size    = \"Standard_D2_v2\"\n+    vm_size    = \"Standard_DS2_v2\"\n     node_labels = {\n     \"rootuser.net/performancelevel\" = \"slow\"\n   }"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/TimonB/tf-azure-example/commit/b49579fbecbe8002932fdfb86146f83efd60bfcf",
    "files": [
      {
        "filename": "main.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -146,11 +146,11 @@ resource \"azurerm_linux_virtual_machine\" \"myterraformvm\" {\n     network_interface_ids = [azurerm_network_interface.myterraformnic.id]\n     size                  = \"Standard_D1_v2\"\n \n-#    os_disk {\n-#        name              = \"myOsDisk\"\n-#        caching           = \"ReadWrite\"\n-#        storage_account_type = \"Premium_LRS\"\n-#    }\n+    os_disk {\n+        name              = \"myOsDisk\"\n+        caching           = \"ReadWrite\"\n+        storage_account_type = \"Standard_LRS\"\n+    }\n \n     source_image_reference {\n         publisher = \"Canonical\""
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ywarezk/academeez-iac/commit/3a96bab387bf898fd71023961e0cd957488e357b",
    "files": [
      {
        "filename": "main.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -88,8 +88,8 @@ resource \"github_actions_secret\" \"test_secret\" {\n */\n \n module \"environments\" {\n-  for_each      = var.environments\n-  source        = \"./modules/env\"\n-  env_name      = each.key\n-  budget_amount = each.value[\"budget_amount\"]\n+  for_each    = var.environments\n+  source      = \"./modules/env\"\n+  env_name    = each.key\n+  env_options = each.value\n }"
      },
      {
        "filename": "modules/env/main.tf",
        "additions": 79,
        "deletions": 3,
        "changes": 82,
        "status": "modified",
        "patch": "@@ -29,13 +29,14 @@ module \"env_project\" {\n   folder_id                   = module.env_folder.id\n   org_id                      = var.org_id\n   billing_account             = var.billing_account\n-  budget_amount               = var.budget_amount\n+  budget_amount               = var.env_options[\"budget_amount\"]\n   create_project_sa           = false\n   activate_apis               = [\n     \"billingbudgets.googleapis.com\",\n     \"serviceusage.googleapis.com\",\n     \"cloudidentity.googleapis.com\",\n-    \"cloudresourcemanager.googleapis.com\"\n+    \"cloudresourcemanager.googleapis.com\",\n+    \"container.googleapis.com\"\n   ]\n   labels                      = {\n     environment       = var.env_name\n@@ -56,7 +57,7 @@ module \"env_network\" {\n     {\n       subnet_name   = \"sb-${var.env_name}\"\n       subnet_ip     = \"10.0.0.0/17\"\n-      subnet_region = var.region\n+      subnet_region = var.env_options[\"region\"]\n       subnet_private_access = \"true\"\n     },\n   ]\n@@ -83,3 +84,78 @@ resource \"google_service_account\" \"sa_env_cluster\" {\n   account_id   = \"env-cluster\"\n   display_name = \"Service account for the nodes in the cluster\"\n }\n+\n+/**\n+ * each environment will have a kubernetes cluster\n+ */\n+# module \"env_gke\" {\n+#   source      = \"terraform-google-modules/kubernetes-engine/google\"\n+#   project_id  = module.env_project.project_id\n+#   name        = \"gke-alison-${var.env_name}\"\n+#   region      = var.region\n+#   zones       = [\"us-central1-a\", \"us-central1-b\", \"us-central1-f\"]\n+#   network = module.env_network.network_name\n+#   subnetwork = module.env_network.subnets_names[0]\n+#   ip_range_pods              = \"sb-range-pods\"\n+#   ip_range_services          = \"sb-range-services\"\n+#   http_load_balancing        = false\n+#   horizontal_pod_autoscaling = var.env_options[\"horizontal_pod_autoscaling\"]\n+#   network_policy             = false\n+#   node_pools = [\n+#     {\n+#       name                      = \"default-node-pool\"\n+#       machine_type              = var.env_options[\"machine_type\"]\n+#       min_count                 = var.env_options[\"min_count\"]\n+#       max_count                 = var.env_options[\"max_count\"]\n+#       initial_node_count        = var.env_options[\"initial_node_count\"]\n+#       local_ssd_count           = 0\n+#       disk_size_gb              = 20\n+#       disk_type                 = var.env_options[\"disk_type\"]\n+#       image_type                = \"COS\"\n+#       auto_repair               = true\n+#       auto_upgrade              = true\n+#       preemptible               = var.env_options[\"preemptible\"]\n+#       service_account = google_service_account.sa_env_cluster.email\n+#     }\n+#   ]\n+\n+#   node_pools_oauth_scopes = {\n+#     all = []\n+\n+#     default-node-pool = [\n+#       \"https://www.googleapis.com/auth/cloud-platform\",\n+#       \"https://www.googleapis.com/auth/ndev.clouddns.readwrite\",\n+#       \"https://www.googleapis.com/auth/servicecontrol\",\n+#       \"https://www.googleapis.com/auth/service.management.readonly\",\n+#       \"https://www.googleapis.com/auth/devstorage.read_write\"\n+#     ]\n+#   }\n+\n+#   node_pools_labels = {\n+#     all = {}\n+\n+#     default-node-pool = {\n+#       default-node-pool = true\n+#     }\n+#   }\n+\n+#   node_pools_taints = {\n+#     all = []\n+\n+#     default-node-pool = [\n+#       {\n+#         key    = \"default-node-pool\"\n+#         value  = true\n+#         effect = \"PREFER_NO_SCHEDULE\"\n+#       },\n+#     ]\n+#   }\n+\n+#   node_pools_tags = {\n+#     all = []\n+\n+#     default-node-pool = [\n+#       \"default-node-pool\",\n+#     ]\n+#   }\n+# }"
      },
      {
        "filename": "modules/env/variables.tf",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "status": "modified",
        "patch": "@@ -8,29 +8,38 @@\n  */\n \n variable \"env_name\" {\n-  type = string\n+  type        = string\n   description = \"dev/prod/staging...\"\n }\n \n variable \"org_id\" {\n   description = \"The id of the organization\"\n-  type = string\n-  default = \"701515151774\"\n+  type        = string\n+  default     = \"701515151774\"\n }\n \n variable \"billing_account\" {\n   description = \"Billing accound of the infastructure\"\n-  type = string\n-  default = \"01187F-6BAFD6-F8EE32\"\n+  type        = string\n+  default     = \"01187F-6BAFD6-F8EE32\"\n }\n \n-variable \"budget_amount\" {\n-  type = number\n-  description = \"The amount to use for a budget alert\"\n+variable \"env_options\" {\n+  type = object({\n+    budget_amount              = number\n+    horizontal_pod_autoscaling = bool\n+    min_count                  = number\n+    max_count                  = number\n+    initial_node_count         = number\n+    disk_type                  = string\n+    preemptible                = bool\n+    region                     = string\n+  })\n+  description = \"Environment configuration object\"\n }\n \n variable \"region\" {\n   description = \"The region where the infastructure will be\"\n-  type = string\n-  default = \"us-central1\"\n+  type        = string\n+  default     = \"us-central1\"\n }"
      },
      {
        "filename": "variables.tf",
        "additions": 22,
        "deletions": 8,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -8,28 +8,42 @@\n \n variable \"region\" {\n   description = \"The region where the infastructure will be\"\n-  type = string\n-  default = \"us-central1\"\n+  type        = string\n+  default     = \"us-central1\"\n }\n \n variable \"org_id\" {\n   description = \"The id of the organization\"\n-  type = string\n-  default = \"701515151774\"\n+  type        = string\n+  default     = \"701515151774\"\n }\n \n variable \"billing_account\" {\n   description = \"Billing accound of the infastructure\"\n-  type = string\n-  default = \"01187F-6BAFD6-F8EE32\"\n+  type        = string\n+  default     = \"01187F-6BAFD6-F8EE32\"\n }\n \n variable \"environments\" {\n   description = \"Environments object\"\n-  type = map\n+  type        = map(any)\n   default = {\n     dev = {\n-      budget_amount = 100\n+      budget_amount              = 100\n+      horizontal_pod_autoscaling = false\n+      machine_type               = \"e2-micro\"\n+      min_count                  = 1\n+      max_count                  = 1\n+      initial_node_count         = 1\n+\n+      #  should be set to ssd on production\n+      disk_type = \"pd-standard\"\n+\n+      # on production this should be set to false\n+      preemptible                = true\n+\n+      # Set to warsaw for cheapest prices, for production set to use\n+      region                     = \"europe-central2\"\n     }\n   }\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ywarezk/academeez-iac/commit/f1383adda80c8d0960fa8153c2a82f03ce81e874",
    "files": [
      {
        "filename": "modules/bootstrap/main.tf",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -38,7 +38,9 @@ module \"bootstrap_project\" {\n     \"containerregistry.googleapis.com\",\n     \"sourcerepo.googleapis.com\",\n     \"secretmanager.googleapis.com\",\n-    \"gmail.googleapis.com\"\n+    \"gmail.googleapis.com\",\n+\n+    \"container.googleapis.com\"\n   ]\n   labels                      = {\n     environment       = \"bootstrap\""
      },
      {
        "filename": "modules/env/main.tf",
        "additions": 63,
        "deletions": 63,
        "changes": 126,
        "status": "modified",
        "patch": "@@ -88,74 +88,74 @@ resource \"google_service_account\" \"sa_env_cluster\" {\n /**\n  * each environment will have a kubernetes cluster\n  */\n-# module \"env_gke\" {\n-#   source      = \"terraform-google-modules/kubernetes-engine/google\"\n-#   project_id  = module.env_project.project_id\n-#   name        = \"gke-alison-${var.env_name}\"\n-#   region      = var.region\n-#   zones       = [\"us-central1-a\", \"us-central1-b\", \"us-central1-f\"]\n-#   network = module.env_network.network_name\n-#   subnetwork = module.env_network.subnets_names[0]\n-#   ip_range_pods              = \"sb-range-pods\"\n-#   ip_range_services          = \"sb-range-services\"\n-#   http_load_balancing        = false\n-#   horizontal_pod_autoscaling = var.env_options[\"horizontal_pod_autoscaling\"]\n-#   network_policy             = false\n-#   node_pools = [\n-#     {\n-#       name                      = \"default-node-pool\"\n-#       machine_type              = var.env_options[\"machine_type\"]\n-#       min_count                 = var.env_options[\"min_count\"]\n-#       max_count                 = var.env_options[\"max_count\"]\n-#       initial_node_count        = var.env_options[\"initial_node_count\"]\n-#       local_ssd_count           = 0\n-#       disk_size_gb              = 20\n-#       disk_type                 = var.env_options[\"disk_type\"]\n-#       image_type                = \"COS\"\n-#       auto_repair               = true\n-#       auto_upgrade              = true\n-#       preemptible               = var.env_options[\"preemptible\"]\n-#       service_account = google_service_account.sa_env_cluster.email\n-#     }\n-#   ]\n+module \"env_gke\" {\n+  source      = \"terraform-google-modules/kubernetes-engine/google\"\n+  project_id  = module.env_project.project_id\n+  name        = \"gke-academeez-${var.env_name}\"\n+  region      = var.env_options[\"region\"]\n+  zones       = var.env_options[\"zones\"]\n+  network = module.env_network.network_name\n+  subnetwork = module.env_network.subnets_names[0]\n+  ip_range_pods              = \"sb-range-pods\"\n+  ip_range_services          = \"sb-range-services\"\n+  http_load_balancing        = false\n+  horizontal_pod_autoscaling = var.env_options[\"horizontal_pod_autoscaling\"]\n+  network_policy             = false\n+  node_pools = [\n+    {\n+      name                      = \"default-node-pool\"\n+      machine_type              = var.env_options[\"machine_type\"]\n+      min_count                 = var.env_options[\"min_count\"]\n+      max_count                 = var.env_options[\"max_count\"]\n+      initial_node_count        = var.env_options[\"initial_node_count\"]\n+      local_ssd_count           = 0\n+      disk_size_gb              = 20\n+      disk_type                 = var.env_options[\"disk_type\"]\n+      image_type                = \"COS\"\n+      auto_repair               = true\n+      auto_upgrade              = true\n+      preemptible               = var.env_options[\"preemptible\"]\n+      service_account = google_service_account.sa_env_cluster.email\n+    }\n+  ]\n \n-#   node_pools_oauth_scopes = {\n-#     all = []\n+  node_pools_oauth_scopes = {\n+    all = []\n \n-#     default-node-pool = [\n-#       \"https://www.googleapis.com/auth/cloud-platform\",\n-#       \"https://www.googleapis.com/auth/ndev.clouddns.readwrite\",\n-#       \"https://www.googleapis.com/auth/servicecontrol\",\n-#       \"https://www.googleapis.com/auth/service.management.readonly\",\n-#       \"https://www.googleapis.com/auth/devstorage.read_write\"\n-#     ]\n-#   }\n+    default-node-pool = [\n+      \"https://www.googleapis.com/auth/cloud-platform\",\n+      \"https://www.googleapis.com/auth/ndev.clouddns.readwrite\",\n+      \"https://www.googleapis.com/auth/servicecontrol\",\n+      \"https://www.googleapis.com/auth/service.management.readonly\",\n+      \"https://www.googleapis.com/auth/devstorage.read_write\"\n+    ]\n+  }\n \n-#   node_pools_labels = {\n-#     all = {}\n+  node_pools_labels = {\n+    all = {}\n \n-#     default-node-pool = {\n-#       default-node-pool = true\n-#     }\n-#   }\n+    default-node-pool = {\n+      default-node-pool = true\n+    }\n+  }\n \n-#   node_pools_taints = {\n-#     all = []\n+  node_pools_taints = {\n+    all = []\n \n-#     default-node-pool = [\n-#       {\n-#         key    = \"default-node-pool\"\n-#         value  = true\n-#         effect = \"PREFER_NO_SCHEDULE\"\n-#       },\n-#     ]\n-#   }\n+    default-node-pool = [\n+      {\n+        key    = \"default-node-pool\"\n+        value  = true\n+        effect = \"PREFER_NO_SCHEDULE\"\n+      },\n+    ]\n+  }\n \n-#   node_pools_tags = {\n-#     all = []\n+  node_pools_tags = {\n+    all = []\n \n-#     default-node-pool = [\n-#       \"default-node-pool\",\n-#     ]\n-#   }\n-# }\n+    default-node-pool = [\n+      \"default-node-pool\",\n+    ]\n+  }\n+}"
      },
      {
        "filename": "modules/env/variables.tf",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -34,12 +34,9 @@ variable \"env_options\" {\n     disk_type                  = string\n     preemptible                = bool\n     region                     = string\n+    zones                      = list(string)\n+    machine_type               = string\n   })\n   description = \"Environment configuration object\"\n }\n \n-variable \"region\" {\n-  description = \"The region where the infastructure will be\"\n-  type        = string\n-  default     = \"us-central1\"\n-}"
      },
      {
        "filename": "variables.tf",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -31,6 +31,7 @@ variable \"environments\" {\n     dev = {\n       budget_amount              = 100\n       horizontal_pod_autoscaling = false\n+      # change this in production you cheap fuck!\n       machine_type               = \"e2-micro\"\n       min_count                  = 1\n       max_count                  = 1\n@@ -40,10 +41,13 @@ variable \"environments\" {\n       disk_type = \"pd-standard\"\n \n       # on production this should be set to false\n-      preemptible                = true\n+      preemptible = true\n \n       # Set to warsaw for cheapest prices, for production set to use\n-      region                     = \"europe-central2\"\n+      region = \"europe-central2\"\n+\n+      # in production: [\"us-central1-a\", \"us-central1-b\", \"us-central1-f\"]\n+      zones = []\n     }\n   }\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "cluster"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/taldanzig/nginx-multistream/commit/94e101feda4af9eef9980dc024c9d1a95afe3e6f",
    "files": [
      {
        "filename": "terraform/Makefile",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -15,3 +15,11 @@ docker-push:\n \tset -uxe ;\\\n \tdocker tag nginx-multistream:latest $(REMOTE)/multiplexer:latest ;\\\n \tdocker push $(REMOTE)/multiplexer:latest\n+\n+apply-enable:\n+\texport TF_VAR_container_count=1 ;\\\n+\t\t./runtf.sh apply\n+\n+apply-disable:\n+\texport TF_VAR_container_count=0 ;\\\n+\t\t./runtf.sh apply"
      },
      {
        "filename": "terraform/ecs.tf",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -52,10 +52,12 @@ resource \"aws_cloudwatch_log_group\" \"multiplexer_logs\" {\n }\n \n resource \"aws_ecs_service\" \"multiplexer\" {\n+  count = local.service_enabled\n+\n   name                               = \"multiplexer\"\n   cluster                            = aws_ecs_cluster.multiplexer.id\n   task_definition                    = aws_ecs_task_definition.multiplexer.arn\n-  desired_count                      = 0\n+  desired_count                      = var.container_count\n   launch_type                        = \"FARGATE\"\n   deployment_maximum_percent         = 100\n   deployment_minimum_healthy_percent = 0\n@@ -73,13 +75,13 @@ resource \"aws_ecs_service\" \"multiplexer\" {\n   }\n \n   load_balancer {\n-    target_group_arn = aws_lb_target_group.rtmp.arn\n+    target_group_arn = aws_lb_target_group.rtmp[0].arn\n     container_name   = \"multiplexer\"\n     container_port   = local.rtmp_port\n   }\n \n   depends_on = [\n-    aws_lb.lb,\n+    aws_lb.lb[0],\n   ]\n }\n "
      },
      {
        "filename": "terraform/lb.tf",
        "additions": 26,
        "deletions": 4,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -7,6 +7,8 @@ locals {\n   ]\n \n   rtmp_port = 1935\n+\n+  service_enabled = var.container_count > 0 ? 1 : 0\n }\n \n resource \"aws_default_vpc\" \"default\" {\n@@ -30,8 +32,8 @@ resource \"aws_default_subnet\" \"default_az4\" {\n \n \n resource \"aws_security_group\" \"lb_ingress\" {\n-  vpc_id      = aws_default_vpc.default.id\n-  name        = \"Load Balancer Ingress\"\n+  vpc_id = aws_default_vpc.default.id\n+  name   = \"Load Balancer Ingress\"\n \n   ingress {\n     cidr_blocks = [\"0.0.0.0/0\"]\n@@ -42,12 +44,16 @@ resource \"aws_security_group\" \"lb_ingress\" {\n }\n \n resource \"aws_lb\" \"lb\" {\n+  count = local.service_enabled\n+\n   name               = \"lb\"\n   load_balancer_type = \"network\"\n   subnets            = local.subnet_ids\n }\n \n resource \"aws_lb_target_group\" \"rtmp\" {\n+  count = local.service_enabled\n+\n   name              = \"rtmp-target\"\n   port              = local.rtmp_port\n   protocol          = \"TCP\"\n@@ -57,12 +63,28 @@ resource \"aws_lb_target_group\" \"rtmp\" {\n }\n \n resource \"aws_lb_listener\" \"rtmp\" {\n-  load_balancer_arn = aws_lb.lb.id\n+  count = local.service_enabled\n+\n+  load_balancer_arn = aws_lb.lb[0].id\n   port              = local.rtmp_port\n   protocol          = \"TCP\"\n \n   default_action {\n     type             = \"forward\"\n-    target_group_arn = aws_lb_target_group.rtmp.arn\n+    target_group_arn = aws_lb_target_group.rtmp[0].arn\n+  }\n+}\n+\n+resource \"aws_route53_record\" \"lb\" {\n+  count = local.service_enabled\n+\n+  zone_id = data.aws_route53_zone.aws_zone.id\n+  name    = \"rtmp.talandyael.com\"\n+  type    = \"A\"\n+\n+  alias {\n+    name                   = aws_lb.lb[0].dns_name\n+    zone_id                = aws_lb.lb[0].zone_id\n+    evaluate_target_health = false\n   }\n }"
      },
      {
        "filename": "terraform/r53.tf",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -1,15 +1,3 @@\n data aws_route53_zone aws_zone {\n   name = \"talandyael.com\"\n }\n-\n-resource aws_route53_record lb {\n-  zone_id = data.aws_route53_zone.aws_zone.id\n-  name = \"rtmp.talandyael.com\"\n-  type = \"A\"\n-\n-  alias {\n-    name = aws_lb.lb.dns_name\n-    zone_id = aws_lb.lb.zone_id\n-    evaluate_target_health = false\n-  }\n-}"
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -15,16 +15,22 @@ variable \"aws_profile\" {\n }\n \n variable \"youtube_key\" {\n-  type = string\n+  type        = string\n   description = \"YouTube stream key\"\n }\n \n variable \"fb_key\" {\n-  type = string\n+  type        = string\n   description = \"Facebook stream key\"\n }\n \n variable \"password\" {\n-  type = string\n+  type        = string\n   description = \"Streaming password\"\n }\n+\n+variable \"container_count\" {\n+  type        = number\n+  description = \"Container count\"\n+  default     = 0\n+}"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-gcp-instance/commit/e88177b8ea5d4ef9f53f70ade27232de7a360800",
    "files": [
      {
        "filename": ".github/workflows/compare.yml",
        "additions": 39,
        "deletions": 26,
        "changes": 65,
        "status": "modified",
        "patch": "@@ -7,8 +7,6 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.5\n-  terraform-docs: 0.11.2\n   tf_target_dir: example/examplea\n   branch: main\n jobs:\n@@ -20,13 +18,19 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: Terraform security scan\n-        uses: triat/terraform-security-scan@v2.0.2\n-        with:\n-          tfsec_actions_working_dir: ${{ env.tf_target_dir }}\n-        env:\n-          GITHUB_TOKEN: ${{ github.token }}\n+      - name: tfsec\n+        run: |\n+          pip3 install lastversion\n+          lastversion tfsec/tfsec --assets -d\n+          chmod +x tfsec-linux-amd64\n+          ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n         continue-on-error: true\n+      - name: store\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: tfsec\n+          path: tfsec.json\n+          if-no-files-found: error\n   checkov:\n     runs-on: ubuntu-latest\n     steps:\n@@ -35,13 +39,18 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: Run Checkov action\n-        id: checkov\n-        uses: bridgecrewio/checkov-action@master\n-        with:\n-          directory: ${{ env.tf_target_dir }}\n-          output_format: json\n+      - name: install checkov\n+        run: |\n+          pip3 install checkov\n+      - name: run checkov\n+        run: checkov -d  ${{ env.tf_target_dir }} -o json | tee checkov.json\n         continue-on-error: true\n+      - name: store\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: checkov\n+          path: checkov.json\n+          if-no-files-found: error\n   terrascan:\n     runs-on: ubuntu-latest\n     steps:\n@@ -56,18 +65,20 @@ jobs:\n       - name: install terrascan\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion accurics/terrascan)\n-          curl --location https://github.com/accurics/terrascan/releases/download/v${now}/terrascan_${now}_Linux_x86_64.tar.gz --output terrascan.tar.gz\n-          tar -xvf terrascan.tar.gz\n+          lastversion accurics/terrascan --assets -d --verbose\n+          tar -xvf terrascan*.tar.gz\n+          chmod +x ./terrascan\n       - name: run terrascan\n-        run: ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json >terrascan.json\n+        run: |\n+          ./terrascan init\n+          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: terrascan\n           path: terrascan.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n   kics:\n     runs-on: ubuntu-latest\n     steps:\n@@ -76,11 +87,13 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: run kics Scan\n-        uses: checkmarx/kics-action@v1.0\n-        with:\n-          path: ${{ env.tf_target_dir }}\n-          output_path: 'kics.json'\n+      - name: install kics\n+        run: |\n+          pip3 install lastversion\n+          lastversion Checkmarx/kics --assets -d --verbose\n+          tar -xvf kics*.tar.gz\n+      - name: run kics\n+        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n@@ -98,7 +111,7 @@ jobs:\n         uses: nanzm/get-time-action@v1.1\n         with:\n           timeZone: 8\n-          format: 'YYYY-MM-DD-HH-mm-ss'\n+          format: \"YYYY-MM-DD-HH-mm-ss\"\n       - name: mkdir\n         run: |\n           mkdir  tos3\n@@ -112,6 +125,6 @@ jobs:\n           AWS_S3_BUCKET: compare-data-680235478471\n           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n-          AWS_REGION: 'eu-west-2'\n+          AWS_REGION: \"eu-west-2\"\n           SOURCE_DIR: tos3\n           DEST_DIR: ${{ github.repository }}/${{ steps.time.outputs.time }}"
      },
      {
        "filename": ".github/workflows/main.yml",
        "additions": 24,
        "deletions": 3,
        "changes": 27,
        "status": "modified",
        "patch": "@@ -9,8 +9,7 @@ on:\n     branches:\n       - main\n env:\n-  terraform: 0.14.5\n-  terraform-docs: 0.11.2\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n   branch: main\n jobs:\n@@ -34,6 +33,26 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GOOGLE_CLOUD_KEYFILE_JSON }}\n+      - name: costings\n+        run: |\n+          pip3 install lastversion\n+          lastversion infracost --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf infracost*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/infracost-linux-amd64\n+          $GITHUB_WORKSPACE/bin/infracost-linux-amd64 breakdown --path ${{ env.tf_target_dir }} --usage-file ${{ env.tf_target_dir }}/infracost-usage.yml\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GOOGLE_CLOUD_KEYFILE_JSON }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -46,8 +65,10 @@ jobs:\n         with:\n           python-version: 3.8\n       - run: |\n+          pip3 install lastversion\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -Lo $GITHUB_WORKSPACE/bin/terraform-docs https://github.com/terraform-docs/terraform-docs/releases/download/v${{ env.terraform-docs }}/terraform-docs-v${{ env.terraform-docs }}-$(uname)-amd64\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0"
      },
      {
        "filename": ".github/workflows/pull_request.yml",
        "additions": 44,
        "deletions": 3,
        "changes": 47,
        "status": "modified",
        "patch": "@@ -6,8 +6,7 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.5\n-  terraform-docs: 0.11.2\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n \n jobs:\n@@ -30,6 +29,27 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GOOGLE_CLOUD_KEYFILE_JSON }}\n+      - run: |\n+          pip3 install lastversion\n+          lastversion infracost --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf infracost*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/infracost-linux-amd64\n+          $GITHUB_WORKSPACE/bin/infracost-linux-amd64 breakdown --path ${{ env.tf_target_dir }}\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GOOGLE_CLOUD_KEYFILE_JSON }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -41,8 +61,29 @@ jobs:\n         with:\n           python-version: 3.8\n       - run: |\n+          pip3 install lastversion\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -Lo $GITHUB_WORKSPACE/bin/terraform-docs https://github.com/terraform-docs/terraform-docs/releases/download/v${{ env.terraform-docs }}/terraform-docs-v${{ env.terraform-docs }}-$(uname)-amd64\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          # See the cloud credentials section for the options\n+        with:\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          usage_file: ${{ env.tf_target_dir }}/infracost-usage.yml\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": ".gitignore",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -4,10 +4,11 @@\n *.zip\n .DS_Store\n # Module directory\n-.pytest_cache/\n .terraform/\n .terraform\n+.plugins\n __pycache__/\n+.vscode/\n .idea\n *.iml\n *.orig\n@@ -26,3 +27,6 @@ tf.plan\n *.log\n output/*.json\n secrets.auto.tfvars\n+checksums.txt\n+*.tar.gz\n+original/"
      },
      {
        "filename": ".pre-commit-config.yaml",
        "additions": 16,
        "deletions": 5,
        "changes": 21,
        "status": "modified",
        "patch": "@@ -17,7 +17,7 @@ repos:\n           - --autofix\n       - id: detect-private-key\n   - repo: git://github.com/Lucas-C/pre-commit-hooks\n-    rev: v1.1.9\n+    rev: v1.1.10\n     hooks:\n       - id: forbid-tabs\n         exclude_types: [python, javascript, dtd, markdown, makefile, xml]\n@@ -26,12 +26,13 @@ repos:\n     rev: 0.0.2\n     hooks:\n       - id: shell-lint\n+        exclude: template|\\.template$\n   - repo: git://github.com/igorshubovych/markdownlint-cli\n     rev: v0.27.1\n     hooks:\n       - id: markdownlint\n   - repo: git://github.com/adrienverge/yamllint\n-    rev: v1.26.0\n+    rev: v1.26.1\n     hooks:\n       - id: yamllint\n         name: yamllint\n@@ -40,15 +41,25 @@ repos:\n         language: python\n         types: [file, yaml]\n   - repo: git://github.com/jameswoolfenden/pre-commit\n-    rev: v0.1.35\n+    rev: v0.1.46\n     hooks:\n       - id: terraform-fmt\n         language_version: python3.8\n       - id: tf2docs\n         language_version: python3.8\n   - repo: git://github.com/bridgecrewio/checkov\n-    rev: 1.0.843\n+    rev: 2.0.139\n     hooks:\n       - id: checkov\n         verbose: true\n-        entry: checkov -d example/examplea\n+        entry: checkov -d example/examplea --external-checks-dir checkov\n+  - repo: git://github.com/tfsec/tfsec\n+    rev: v0.39.33\n+    hooks:\n+      - id: tfsec\n+        entry: tfsec\n+        args:\n+          - example/examplea\n+        types:\n+          - terraform\n+        pass_filenames: false"
      },
      {
        "filename": "example/examplea/Makefile",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -51,14 +51,14 @@ valid:\n \t-tfsec .\n \t-terrascan scan\n \tdocker pull checkmarx/kics:latest\n-\tdocker run -v $(CURDIR):/path checkmarx/kics:latest -p \"/path\"\n+\tdocker run -v $(CURDIR):/path checkmarx/kics:latest scan --path /path\n \n compare:\n \t-checkov -d . --external-checks-dir ../../checkov -o json >../../output/checkov.json\n \t-terrascan scan -o json -x json >../../output/terrascan.json\n \t-tfsec . --out ../../output/tfsec.json -f json -s\n \tdocker pull checkmarx/kics:latest\n-\tdocker run -v $(CURDIR):/path -v $(CURDIR)/../../output:/output checkmarx/kics:latest -p \"/path\" -o \"/output/kics.json\"\n+\tdocker run -v $(CURDIR):/path -v $(CURDIR)/../../output:/output checkmarx/kics:latest scan --path \"/path\" -o \"/output/kics.json\"\n \n conftest: plan convert\n \tconftest test ./tfplan.json -p ../../policies\n@@ -72,3 +72,6 @@ target:\n \n purge:\n \t$(BLAT)\n+\n+cost:\n+\tinfracost breakdown --path . --usage-file infracost-usage.yml  --sync-usage-file"
      },
      {
        "filename": "example/examplea/module.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,5 +1,6 @@\n module \"example\" {\n   source      = \"../../\"\n   common_tags = var.common_tags\n+  name=\"instance-1\"\n   account_id  = var.account_id\n }"
      },
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,9 +1,9 @@\n terraform {\n   required_providers {\n     google = {\n-      version = \"3.57.0\"\n+      version = \"3.59.0\"\n       source  = \"hashicorp/google\"\n     }\n   }\n-  required_version = \">= 0.14\"\n+  required_version = \">=0.14.8\"\n }"
      },
      {
        "filename": "validate.ps1",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -8,4 +8,5 @@ Remove-Item .terraform.lock.hcl -ErrorAction SilentlyContinue\n terraform init -upgrade\n terraform validate\n make valid\n+make cost\n Pop-Location"
      },
      {
        "filename": "validate.sh",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -5,4 +5,5 @@ rm .terraform.lock.hcl 2>/dev/null\n rm .terraform -fr 2>/dev/null\n terraform init -upgrade\n terraform validate\n+make cost\n make valid"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ninthnails/terraform-aws-camellia/commit/0019704e14723aaf326840ab36c594c3f514a2d4",
    "files": [
      {
        "filename": "cluster/README.md",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "status": "added",
        "patch": "@@ -0,0 +1,29 @@\n+# Camellia Cluster Terraform module\n+\n+Terraform module which creates an Apache Kafka cluster, along with Apache Zookeeper, \n+Yahoo Kafka Manager, LinkedIn Cruise Control; using Camellia Image.\n+\n+## Usage\n+\n+```hcl\n+module \"cluster\" {\n+  source = \"github.com/ninthnails/camellia-terraform//cluster\"\n+  vpc_id = \"vpc-54e70a3249a84d75f\"\n+  private_subnet_ids = [\"subnet-eb537de7850039a7f\", \"subnet-8537db59a00e7e73f\", \"subnet-43d7d02859de7e7b4\"]\n+  public_subnet_ids = [\"subnet-f7a9300587ed735be\", \"subnet-f37e7e00a95bd7358\", \"subnet-4b7e7ed95820d7d34\"]\n+  key_pair_name = \"your-ssh-key-pair\"\n+  private_zone_ids = [\"Z26235352124435617534\"]\n+  public_zone_id = \"Z16896WKL9998\"\n+  allowed_cidrs = [\"10.0.0.0/16\"]\n+  camellia_ami_id = \"ami-585aa317630bd3064\"\n+  zookeeper_cluster_size = 3\n+  kafka_cluster_size = 3\n+}\n+```\n+\n+CodeBuild run is not automatically triggered. You need to execute the build command the command output.\n+For example:\n+\n+```shell script\n+aws --region us-east-2 codebuild start-build --project-name camellia-kafka-automation-packer --source-version xyz...\n+```"
      },
      {
        "filename": "cluster/cluster.tf",
        "additions": 30,
        "deletions": 13,
        "changes": 43,
        "status": "modified",
        "patch": "@@ -25,10 +25,13 @@ variable \"public_zone_id\" {\n }\n \n variable \"allowed_cidrs\" {\n-  type = list(string)\n-  default = [\n-    \"10.0.0.0/16\"\n-  ]\n+  type = map(list(string))\n+  default = {\n+    ipv4 = [\n+      \"10.0.0.0/16\"\n+    ]\n+    ipv6 = []\n+  }\n }\n \n variable \"key_pair_name\" {\n@@ -38,8 +41,16 @@ variable \"camellia_ami_id\" {\n   type = string\n }\n \n+variable \"zookeeper_instance_type\" {\n+  default = \"t3a.nano\"\n+}\n+\n+variable \"zookeeper_cluster_size\" {\n+  default = 1\n+}\n+\n variable \"kafka_instance_type\" {\n-  default = \"t3a.micro\"\n+  default = \"t3a.nano\"\n }\n \n variable \"kafka_storage_type\" {\n@@ -54,8 +65,12 @@ variable \"kafka_storage_volume_size\" {\n   default = 1\n }\n \n-variable \"manager_storage_type\" {\n-  default = \"t3a.medium\"\n+variable \"manager_instance_type\" {\n+  default = \"t3a.nano\"\n+}\n+\n+variable \"kafka_cluster_size\" {\n+  default = 1\n }\n \n variable \"tags\" {\n@@ -72,8 +87,9 @@ module \"zookeeper\" {\n   vpc_id = var.vpc_id\n   subnet_ids = var.private_subnet_ids\n   ami_id = var.camellia_ami_id\n-  key_name = var.key_pair_name\n-  cluster_size = 3\n+  key_pair_name = var.key_pair_name\n+  instance_type = var.zookeeper_instance_type\n+  cluster_size = var.zookeeper_cluster_size\n   tags = var.tags\n }\n \n@@ -85,6 +101,7 @@ module \"kafka\" {\n   public_subnet_ids = var.public_subnet_ids\n   key_pair_name = var.key_pair_name\n   ami_id = var.camellia_ami_id\n+  cluster_size = var.kafka_cluster_size\n   zookeeper_connect = module.zookeeper.zookeeper_connect\n   private_zone_ids = var.private_zone_ids\n   instance_type = var.kafka_instance_type\n@@ -100,8 +117,8 @@ module \"manager\" {\n   private_subnet_ids = var.private_subnet_ids\n   public_subnet_ids = var.public_subnet_ids\n   key_pair_name = var.key_pair_name\n-  lb_allowed_cidrs = var.allowed_cidrs\n-  instance_type = var.manager_storage_type\n+  allowed_cidrs = var.allowed_cidrs\n+  instance_type = var.manager_instance_type\n   kafka_bootstrap_servers = module.kafka.bootstrap_servers_private\n   kafka_zookeeper_connect = module.kafka.zookeeper_kafka_connect\n   zookeeper_connect = module.zookeeper.zookeeper_connect\n@@ -115,8 +132,8 @@ module \"manager\" {\n #################\n # Outputs\n #################\n-output \"zookeeper_connect\" {\n-  value = module.zookeeper.zookeeper_connect\n+output \"zookeeper_kafka_connect\" {\n+  value = module.kafka.zookeeper_kafka_connect\n }\n \n output \"kafka_bootstrap_servers_private\" {"
      },
      {
        "filename": "cluster/kafka/kafka.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -31,7 +31,7 @@ variable \"cluster_size\" {\n }\n \n variable \"instance_type\" {\n-  default = \"t2.micro\"\n+  default = \"t3a.nano\"\n }\n \n variable \"broker_port\" {"
      },
      {
        "filename": "cluster/manager/manager.tf",
        "additions": 116,
        "deletions": 31,
        "changes": 147,
        "status": "modified",
        "patch": "@@ -27,14 +27,23 @@ variable \"kms_key_id\" {\n }\n \n variable \"instance_type\" {\n-  default = \"t3a.medium\"\n+  default = \"t3a.nano\"\n }\n \n-variable \"lb_allowed_cidrs\" {\n-  type = list(string)\n-  default = [\n-    \"0.0.0.0/0\"\n-  ]\n+variable \"lb_enabled\" {\n+  default = false\n+}\n+\n+variable \"allowed_cidrs\" {\n+  type = map(list(string))\n+  default = {\n+    ipv4 = [\n+      \"0.0.0.0/0\"\n+    ]\n+    ipv6 = [\n+      \"::/0\"\n+    ]\n+  }\n }\n \n variable \"public_zone_id\" {\n@@ -106,7 +115,7 @@ locals {\n #################\n # Security Groups\n #################\n-resource \"aws_security_group\" \"main\" {\n+resource \"aws_security_group\" \"private\" {\n   name_prefix = \"${var.prefix}-manager-private-\"\n   vpc_id = var.vpc_id\n   description = \"Security group for Kafka Manager\"\n@@ -116,7 +125,7 @@ resource \"aws_security_group\" \"main\" {\n resource \"aws_security_group_rule\" \"egress-all\" {\n   from_port = 0\n   protocol = \"all\"\n-  security_group_id = aws_security_group.main.id\n+  security_group_id = aws_security_group.private.id\n   cidr_blocks = [\"0.0.0.0/0\"]\n   ipv6_cidr_blocks = [\"::/0\"]\n   to_port = 65535\n@@ -125,7 +134,7 @@ resource \"aws_security_group_rule\" \"egress-all\" {\n \n resource \"aws_security_group_rule\" \"ingress-ssh\" {\n   type = \"ingress\"\n-  security_group_id = aws_security_group.main.id\n+  security_group_id = aws_security_group.private.id\n   cidr_blocks = [\n     data.aws_vpc.this.cidr_block\n   ]\n@@ -137,7 +146,7 @@ resource \"aws_security_group_rule\" \"ingress-ssh\" {\n resource \"aws_security_group_rule\" \"ingress-cruise\" {\n   description = \"HTTP Cruise Control\"\n   type = \"ingress\"\n-  security_group_id = aws_security_group.main.id\n+  security_group_id = aws_security_group.private.id\n   cidr_blocks = [\n     data.aws_vpc.this.cidr_block\n   ]\n@@ -149,7 +158,7 @@ resource \"aws_security_group_rule\" \"ingress-cruise\" {\n resource \"aws_security_group_rule\" \"ingress-manager\" {\n   description = \"HTTP Kafka Manager\"\n   type = \"ingress\"\n-  security_group_id = aws_security_group.main.id\n+  security_group_id = aws_security_group.private.id\n   cidr_blocks = [\n     data.aws_vpc.this.cidr_block\n   ]\n@@ -167,13 +176,44 @@ resource \"aws_security_group\" \"lb\" {\n     from_port = 80\n     protocol = \"TCP\"\n     to_port = 80\n-    cidr_blocks = var.lb_allowed_cidrs\n+    cidr_blocks = var.allowed_cidrs.ipv4\n   }\n   ingress {\n     from_port = 443\n     protocol = \"TCP\"\n     to_port = 443\n-    cidr_blocks = var.lb_allowed_cidrs\n+    cidr_blocks = var.allowed_cidrs.ipv4\n+  }\n+  egress {\n+    from_port = 0\n+    protocol = \"TCP\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+    ipv6_cidr_blocks = [\"::/0\"]\n+    to_port = 65535\n+  }\n+}\n+\n+resource \"aws_security_group\" \"public\" {\n+  count = var.lb_enabled ? 0 : 1\n+  name_prefix = \"${var.prefix}-manager-public-\"\n+  vpc_id = var.vpc_id\n+  description = \"Security group for Kafka Manager public access\"\n+  tags = merge(var.tags, map(\"Name\", \"${var.prefix}-manager-public\"))\n+  ingress {\n+    description = \"Kafka Manager\"\n+    from_port = var.kafka_manager_port\n+    protocol = \"TCP\"\n+    to_port = var.kafka_manager_port\n+    cidr_blocks = var.allowed_cidrs.ipv4\n+    ipv6_cidr_blocks = var.allowed_cidrs.ipv6\n+  }\n+  ingress {\n+    description = \"Cruise Control\"\n+    from_port = var.cruise_control_port\n+    protocol = \"TCP\"\n+    to_port = var.cruise_control_port\n+    cidr_blocks = var.allowed_cidrs.ipv4\n+    ipv6_cidr_blocks = var.allowed_cidrs.ipv6\n   }\n   egress {\n     from_port = 0\n@@ -196,28 +236,64 @@ data \"template_file\" \"user_data\" {\n     zookeeper_connect = var.zookeeper_connect\n     capacity = \"{ \\\"brokerCapacities\\\":[ ${local.capacity_default},${join(\",\", local.capacity_brokers)} ] }\"\n     cluster_name = \"${var.prefix}-kafka\"\n-    api_endpoint = \"${lower(aws_lb_listener.http.protocol)}://${aws_lb.alb.dns_name}/kafkacruisecontrol/\"\n+    api_endpoint = format(\"%s/kafkacruisecontrol/\", var.lb_enabled ? \"${lower(aws_lb_listener.http[0].protocol)}//${aws_lb.alb[0].dns_name}\" : \"http://${aws_eip.public[0].public_ip}:${var.cruise_control_port}\")\n   }\n }\n \n resource \"aws_instance\" \"server\" {\n   ami = var.ami_id\n   instance_type = var.instance_type\n-  subnet_id = data.aws_subnet.private.*.id[0]\n+  subnet_id = data.aws_subnet.private[0].id\n   vpc_security_group_ids = [\n-    aws_security_group.main.id\n+    aws_security_group.private.id\n   ]\n   key_name = var.key_pair_name\n \n   user_data = data.template_file.user_data.rendered\n \n   tags = merge(var.tags, map(\"Name\", \"${var.prefix}-kafka-manager\"))\n+\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n }\n \n #################\n-# Load Balancer\n+# Load Balancer and Public Access\n #################\n+data \"aws_subnet\" \"same-zone\" {\n+  availability_zone_id = data.aws_subnet.private[0].availability_zone_id\n+  filter {\n+    name = \"subnet-id\"\n+    values = var.public_subnet_ids\n+  }\n+}\n+\n+resource \"aws_network_interface\" \"public\" {\n+  count = var.lb_enabled ? 0 : 1\n+  subnet_id = data.aws_subnet.same-zone.id\n+  private_ips_count = 0\n+  security_groups = [\n+    aws_security_group.public[0].id\n+  ]\n+  tags = merge(var.tags, map(\"Name\", \"${var.prefix}-kafka-manager\"))\n+}\n+\n+resource \"aws_network_interface_attachment\" \"server-public\" {\n+  count = var.lb_enabled ? 0 : 1\n+  device_index = 1\n+  instance_id = aws_instance.server.id\n+  network_interface_id = aws_network_interface.public[0].id\n+}\n+\n+resource \"aws_eip\" \"public\" {\n+  count = var.lb_enabled ? 0 : 1\n+  network_interface = aws_network_interface.public[0].id\n+  tags = merge(var.tags, map(\"Name\", \"${var.prefix}-kafka-manager\"))\n+}\n+\n resource \"aws_lb\" \"alb\" {\n+  count = var.lb_enabled ? 1 : 0\n   internal = false\n   load_balancer_type = \"application\"\n   security_groups = [\n@@ -230,6 +306,7 @@ resource \"aws_lb\" \"alb\" {\n }\n \n resource \"aws_lb_target_group\" \"cruise\" {\n+  count = var.lb_enabled ? 1 : 0\n   port = var.cruise_control_port\n   protocol = \"HTTP\"\n   vpc_id = var.vpc_id\n@@ -239,12 +316,14 @@ resource \"aws_lb_target_group\" \"cruise\" {\n }\n \n resource \"aws_lb_target_group_attachment\" \"cruise\" {\n-  target_group_arn = aws_lb_target_group.cruise.arn\n+  count = var.lb_enabled ? 1 : 0\n+  target_group_arn = aws_lb_target_group.cruise[0].arn\n   target_id = aws_instance.server.id\n   port = var.cruise_control_port\n }\n \n resource \"aws_lb_target_group\" \"manager\" {\n+  count = var.lb_enabled ? 1 : 0\n   port = var.kafka_manager_port\n   protocol = \"HTTP\"\n   vpc_id = var.vpc_id\n@@ -254,27 +333,30 @@ resource \"aws_lb_target_group\" \"manager\" {\n }\n \n resource \"aws_lb_target_group_attachment\" \"manager\" {\n-  target_group_arn = aws_lb_target_group.manager.arn\n+  count = var.lb_enabled ? 1 : 0\n+  target_group_arn = aws_lb_target_group.manager[0].arn\n   target_id = aws_instance.server.id\n   port = var.kafka_manager_port\n }\n \n resource \"aws_lb_listener\" \"http\" {\n-  load_balancer_arn = aws_lb.alb.arn\n+  count = var.lb_enabled ? 1 : 0\n+  load_balancer_arn = aws_lb.alb[0].arn\n   port = \"80\"\n   protocol = \"HTTP\"\n \n   default_action {\n     type = \"forward\"\n-    target_group_arn = aws_lb_target_group.manager.arn\n+    target_group_arn = aws_lb_target_group.manager[0].arn\n   }\n }\n \n resource \"aws_lb_listener_rule\" \"manager\" {\n-  listener_arn = aws_lb_listener.http.arn\n+  count = var.lb_enabled ? 1 : 0\n+  listener_arn = aws_lb_listener.http[0].arn\n   action {\n     type = \"forward\"\n-    target_group_arn = aws_lb_target_group.manager.arn\n+    target_group_arn = aws_lb_target_group.manager[0].arn\n     order = 20\n   }\n   condition {\n@@ -284,10 +366,11 @@ resource \"aws_lb_listener_rule\" \"manager\" {\n }\n \n resource \"aws_lb_listener_rule\" \"cruise-static\" {\n-  listener_arn = aws_lb_listener.http.arn\n+  count = var.lb_enabled ? 1 : 0\n+  listener_arn = aws_lb_listener.http[0].arn\n   action {\n     type = \"forward\"\n-    target_group_arn = aws_lb_target_group.cruise.arn\n+    target_group_arn = aws_lb_target_group.cruise[0].arn\n     order = 30\n   }\n   condition {\n@@ -297,10 +380,11 @@ resource \"aws_lb_listener_rule\" \"cruise-static\" {\n }\n \n resource \"aws_lb_listener_rule\" \"cruise-ui\" {\n-  listener_arn = aws_lb_listener.http.arn\n+  count = var.lb_enabled ? 1 : 0\n+  listener_arn = aws_lb_listener.http[0].arn\n   action {\n     type = \"forward\"\n-    target_group_arn = aws_lb_target_group.cruise.arn\n+    target_group_arn = aws_lb_target_group.cruise[0].arn\n     order = 40\n   }\n   condition {\n@@ -310,10 +394,11 @@ resource \"aws_lb_listener_rule\" \"cruise-ui\" {\n }\n \n resource \"aws_lb_listener_rule\" \"cruise-api\" {\n-  listener_arn = aws_lb_listener.http.arn\n+  count = var.lb_enabled ? 1 : 0\n+  listener_arn = aws_lb_listener.http[0].arn\n   action {\n     type = \"forward\"\n-    target_group_arn = aws_lb_target_group.cruise.arn\n+    target_group_arn = aws_lb_target_group.cruise[0].arn\n   }\n   condition {\n     field  = \"path-pattern\"\n@@ -325,8 +410,8 @@ resource \"aws_lb_listener_rule\" \"cruise-api\" {\n # Outputs\n #################\n output \"public_cruise_control_endpoint\" {\n-  value = \"${lower(aws_lb_listener.http.protocol)}://${aws_lb.alb.dns_name}/\"\n+  value = var.lb_enabled ? format(\"%s://%s/\", lower(aws_lb_listener.http[0].protocol), aws_lb.alb[0].dns_name) : format(\"http://%s:%s/\", aws_eip.public[0].public_ip, var.cruise_control_port)\n }\n output \"public_kafka_manager_endpoint\" {\n-  value = \"${lower(aws_lb_listener.http.protocol)}://${aws_lb.alb.dns_name}/kafkamanager/\"\n+  value = var.lb_enabled ? format(\"%s://%s/\", lower(aws_lb_listener.http[0].protocol), aws_lb.alb[0].dns_name) : format(\"http://%s:%s/kafkamanager/\", aws_eip.public[0].public_ip, var.kafka_manager_port)\n }"
      },
      {
        "filename": "cluster/zookeeper/zookeeper.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -15,7 +15,7 @@ variable \"prefix\" {\n variable \"ami_id\" {\n }\n \n-variable \"key_name\" {\n+variable \"key_pair_name\" {\n }\n \n variable \"cluster_size\" {\n@@ -24,7 +24,7 @@ variable \"cluster_size\" {\n }\n \n variable \"instance_type\" {\n-  default = \"t2.micro\"\n+  default = \"t3a.nano\"\n }\n \n variable \"follower_port\" {\n@@ -173,7 +173,7 @@ resource \"aws_launch_template\" \"node\" {\n   name_prefix = \"${var.prefix}-kafka-zookeeper-${count.index}-\"\n   image_id = var.ami_id\n   instance_type = var.instance_type\n-  key_name = var.key_name\n+  key_name = var.key_pair_name\n   network_interfaces {\n     associate_public_ip_address = false\n     delete_on_termination = false"
      },
      {
        "filename": "image/image.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -309,7 +309,7 @@ version: 0.2\n phases:\n   install:\n     commands:\n-      - curl -sL -o packer.zip https://releases.hashicorp.com/packer/1.4.0/packer_1.4.0_linux_amd64.zip && unzip packer.zip\n+      - curl -sL -o packer.zip https://releases.hashicorp.com/packer/1.4.5/packer_1.4.5_linux_amd64.zip && unzip packer.zip\n       - pip3 -q install 'ansible~=2.7,<2.8'\n   pre_build:\n     commands:"
      },
      {
        "filename": "image/packer/aws-default.json",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -48,6 +48,7 @@\n       \"region\": \"{{ user `region` }}\",\n       \"ena_support\": true,\n       \"ebs_optimized\": true,\n+      \"enable_t2_unlimited\": false,\n       \"tags\": {\n         \"Name\": \"{{ user `ami_base_name` }}-kafka-{{ user `kafka_version` }}-hvm-{{ isotime \\\"2006-01-02\\\" }}-x86_64-gp2\",\n         \"Version\": \"{{ user `source_version` }}\","
      },
      {
        "filename": "image/packer/aws-private.json",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -39,6 +39,7 @@\n       \"region\": \"{{ user `region` }}\",\n       \"ena_support\": true,\n       \"ebs_optimized\": true,\n+      \"enable_t2_unlimited\": false,\n       \"tags\": {\n         \"Name\": \"{{ user `ami_base_name` }}-kafka-{{ user `kafka_version` }}-hvm-{{ isotime \\\"2006-01-02\\\" }}-x86_64-gp2\",\n         \"Version\": \"{{ user `source_version` }}\","
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ninthnails/terraform-aws-camellia/commit/9438dcebde79c0726d69ae6a15c99b9c5c0f461c",
    "files": [
      {
        "filename": "cluster/cluster.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -18,10 +18,12 @@ variable \"public_subnet_ids\" {\n \n variable \"private_zone_ids\" {\n   type = list(string)\n+  default = []\n }\n \n variable \"public_zone_id\" {\n   type = string\n+  default = \"\"\n }\n \n variable \"allowed_cidrs\" {\n@@ -119,6 +121,7 @@ module \"manager\" {\n   key_pair_name = var.key_pair_name\n   allowed_cidrs = var.allowed_cidrs\n   instance_type = var.manager_instance_type\n+  kafka_cluster_size = var.kafka_cluster_size\n   kafka_bootstrap_servers = module.kafka.bootstrap_servers_private\n   kafka_zookeeper_connect = module.kafka.zookeeper_kafka_connect\n   zookeeper_connect = module.zookeeper.zookeeper_connect"
      },
      {
        "filename": "cluster/kafka/kafka-user-data.tpl",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -19,6 +19,11 @@ ADVERTISED_LISTENERS=\"${broker_advertised_listener},${client_advertised_listener\n -e \"s|^advertised\\.listeners=.*|advertised.listeners=$${ADVERTISED_LISTENERS}|gm\" \\\n -e \"s|^listener\\.security\\.protocol\\.map=.*|listener.security.protocol.map=${protocol_map}|gm\" \\\n -e \"s|^cruise\\.control\\.metrics\\.reporter\\.bootstrap\\.servers=.*|cruise.control.metrics.reporter.bootstrap.servers=${bootstrap_servers}|gm\" \\\n+-e \"s|^default\\.replication\\.factor=.*|default.replication.factor=${default_replication_factor}|gm\" \\\n+-e \"s|^offsets\\.topic\\.replication\\.factor=.*|offsets.topic.replication.factor=${default_replication_factor}|gm\" \\\n+-e \"s|^transaction\\.state\\.log\\.replication\\.factor=.*|transaction.state.log.replication.factor=${default_replication_factor}|gm\" \\\n+-e \"s|^min\\.insync\\.replicas=.*|min.insync.replicas=${min_insync_replicas}|gm\" \\\n+-e \"s|^transaction\\.state\\.log\\.min\\.isr=.*|transaction.state.log.min.isr=${min_insync_replicas}|gm\" \\\n /opt/kafka/config/server.properties\n \n /usr/bin/systemctl enable kafka-storage.service"
      },
      {
        "filename": "cluster/kafka/kafka.tf",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -63,6 +63,7 @@ variable \"zookeeper_connect\" {\n \n variable \"private_zone_ids\" {\n   type = list(string)\n+  default = []\n }\n \n variable \"tags\" {\n@@ -258,8 +259,10 @@ data \"template_file\" \"user_data\" {\n \n     broker_id = local.broker_ids[count.index]\n     broker_rack = element(data.aws_subnet.private.*.availability_zone, count.index % length(data.aws_subnet.private.*.availability_zone))\n+    default_replication_factor = var.cluster_size < 3 ? var.cluster_size : 3\n+    min_insync_replicas = var.cluster_size < 2 ? 1 : 2\n     zookeeper = local.zookeeper_connect\n-    bootstrap_servers = \"PLAINTEXT://${aws_route53_record.private[0].fqdn}:${var.broker_port}\"\n+    bootstrap_servers = \"PLAINTEXT://${length(var.private_zone_ids) > 0 ? aws_route53_record.private[0].fqdn : join(\",\", aws_network_interface.private.*.private_ip)}:${var.broker_port}\"\n \n     // Format: ${listener_name}:${security_protocol}[,...]\n     protocol_map = \"BROKER:PLAINTEXT,CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT\"\n@@ -290,6 +293,9 @@ resource \"aws_instance\" \"broker\" {\n   key_name = var.key_pair_name\n \n   ebs_optimized = local.storage_ebs_flag > 0\n+  credit_specification {\n+    cpu_credits = \"standard\"\n+  }\n \n   user_data = data.template_file.user_data[count.index].rendered\n \n@@ -426,7 +432,7 @@ resource \"aws_route53_record\" \"private\" {\n # Outputs\n #################\n output \"bootstrap_servers_private\" {\n-  value = join(\",\", formatlist(\"%s:${var.plaintext_port}\", aws_route53_record.private.*.fqdn))\n+  value = join(\",\", formatlist(\"%s:${var.plaintext_port}\", length(var.private_zone_ids) > 0 ? aws_route53_record.private.*.fqdn : aws_network_interface.private.*.private_ip))\n }\n output \"broker_ids\" {\n   value = data.null_data_source.broker-ids.*.outputs.id"
      },
      {
        "filename": "cluster/manager/manager-user-data.tpl",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -5,14 +5,17 @@\n /usr/bin/sed -r -i \\\n -e \"s|^bootstrap\\.servers=.*|bootstrap.servers=${kafka_bootstrap_servers}|gm\" \\\n -e \"s|^zookeeper\\.connect=.*|zookeeper.connect=${kafka_zookeeper_connect}|gm\" \\\n+-e \"s|^sample\\.store\\.topic\\.replication\\.factor=.*|sample.store.topic.replication.factor=${topic_replication_factor}|gm\" \\\n /opt/cruise-control/config/cruisecontrol.properties\n \n /bin/echo '${capacity}' > /opt/cruise-control/config/capacity.json\n \n /bin/echo 'lab,${cluster_name},${api_endpoint}' > /opt/cruise-control/cruise-control-ui/static/config.csv\n \n+%{ if cruise_control_enabled }\n /usr/bin/systemctl enable cruisecontrol.service\n /usr/bin/systemctl start cruisecontrol\n+%{ endif }\n \n /usr/bin/sed -r -i \\\n -e \"s|^ZK_HOSTS=.*|ZK_HOSTS=${zookeeper_connect}|gm\" \\"
      },
      {
        "filename": "cluster/manager/manager.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -47,6 +47,7 @@ variable \"allowed_cidrs\" {\n }\n \n variable \"public_zone_id\" {\n+  default = \"\"\n }\n \n variable \"cruise_control_port\" {\n@@ -61,6 +62,10 @@ variable \"kafka_broker_ids\" {\n   type = list(string)\n }\n \n+variable \"kafka_cluster_size\" {\n+  type = number\n+}\n+\n variable \"kafka_storage_volume_size\" {\n   type = number\n }\n@@ -237,6 +242,8 @@ data \"template_file\" \"user_data\" {\n     capacity = \"{ \\\"brokerCapacities\\\":[ ${local.capacity_default},${join(\",\", local.capacity_brokers)} ] }\"\n     cluster_name = \"${var.prefix}-kafka\"\n     api_endpoint = format(\"%s/kafkacruisecontrol/\", var.lb_enabled ? \"${lower(aws_lb_listener.http[0].protocol)}//${aws_lb.alb[0].dns_name}\" : \"http://${aws_eip.public[0].public_ip}:${var.cruise_control_port}\")\n+    cruise_control_enabled = var.kafka_cluster_size > 1\n+    topic_replication_factor = var.kafka_cluster_size < 2 ? 1 : 2\n   }\n }\n \n@@ -248,6 +255,10 @@ resource \"aws_instance\" \"server\" {\n     aws_security_group.private.id\n   ]\n   key_name = var.key_pair_name\n+  ebs_optimized = false\n+  credit_specification {\n+    cpu_credits = \"standard\"\n+  }\n \n   user_data = data.template_file.user_data.rendered\n "
      },
      {
        "filename": "cluster/zookeeper/zookeeper.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -174,6 +174,9 @@ resource \"aws_launch_template\" \"node\" {\n   image_id = var.ami_id\n   instance_type = var.instance_type\n   key_name = var.key_pair_name\n+  credit_specification {\n+    cpu_credits = \"standard\"\n+  }\n   network_interfaces {\n     associate_public_ip_address = false\n     delete_on_termination = false"
      },
      {
        "filename": "image/packer/ansible/roles/kafka/tasks/main.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -76,7 +76,7 @@\n   replace:\n     path: \"{{ kafka_install_path }}/bin/kafka-server-start.sh\"\n     regexp: '(    HEAP_SIZE=.*\\n)?(    )export KAFKA_HEAP_OPTS=\"[^\"]+\"'\n-    replace: \\g<2>HEAP_SIZE=$(/usr/bin/free -m | awk '/^Mem/{print int($2 * 0.2)}')m\\n\\g<2>export KAFKA_HEAP_OPTS=\"-Xms${HEAP_SIZE} -Xmx${HEAP_SIZE}\"\n+    replace: \\g<2>HEAP_SIZE=$(/usr/bin/free -m | awk '/^Mem/{h=int($2 * 0.2); if (h < 256) print 256; else print h }')m\\n\\g<2>export KAFKA_HEAP_OPTS=\"-Xms${HEAP_SIZE} -Xmx${HEAP_SIZE}\"\n \n - name: Setup log rotate\n   template:"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/maddevsio/aws-eks-base/commit/c528b5e97d9d1b57087bd60644a885dd9b4a2294",
    "files": [
      {
        "filename": "terraform/layer1-aws/aws-vpc.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -27,6 +27,8 @@ module \"vpc\" {\n   enable_dns_hostnames = true\n   enable_dns_support   = true\n \n+  enable_s3_endpoint   = true\n+\n   create_database_subnet_group = false\n \n   manage_default_security_group  = true"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alghanmi/terraform-modules/commit/f4e8069ff11b7ca7a15ce25843b26d00fb399ade",
    "files": [
      {
        "filename": "aws-account-setup/bill-alerts.tf",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "status": "added",
        "patch": "@@ -0,0 +1,42 @@\n+resource \"aws_sns_topic\" \"account_alerts\" {\n+  name = var.sns_topic_account_alerts\n+  tags = var.tags\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"account_bill_alarm\" {\n+  alarm_name          = \"bill-alarm-${lower(var.alarm_bill.currency)}-${aws_iam_account_alias.alias.account_alias}\"\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods  = \"1\"\n+  metric_name         = \"EstimatedCharges\"\n+  namespace           = \"AWS/Billing\"\n+  period              = \"21600\"\n+  statistic           = \"Maximum\"\n+  threshold           = var.alarm_bill.monthly_threshold\n+  alarm_actions       = [\"${aws_sns_topic.account_alerts.arn}\"]\n+  alarm_description   = var.alarm_bill.description\n+\n+  dimensions = {\n+    Currency = \"${upper(var.alarm_bill.currency)}\"\n+  }\n+}\n+\n+resource \"aws_budgets_budget\" \"account_budget\" {\n+  name              = \"account-monthly-budget\"\n+  budget_type       = var.budget_overall_cost.budget_type\n+  limit_amount      = var.budget_overall_cost.limit_amount\n+  limit_unit        = var.budget_overall_cost.limit_unit\n+  time_period_start = \"2020-01-01_00:00\"\n+  time_unit         = var.budget_overall_cost.time_unit\n+\n+  dynamic \"notification\" {\n+    for_each = var.budget_overall_cost.notification_threshold\n+    content {\n+      comparison_operator        = \"GREATER_THAN\"\n+      threshold                  = notification.value\n+      threshold_type             = \"PERCENTAGE\"\n+      notification_type          = \"FORECASTED\"\n+      subscriber_email_addresses = compact(var.budget_overall_cost.subscriber_emails)\n+      subscriber_sns_topic_arns  = compact(concat(var.budget_overall_cost.subscriber_sns, [aws_sns_topic.account_alerts.arn]))\n+    }\n+  }\n+}"
      },
      {
        "filename": "aws-account-setup/data.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+data \"aws_caller_identity\" \"current\" {}"
      },
      {
        "filename": "aws-account-setup/main.tf",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -3,12 +3,12 @@ resource \"aws_iam_account_alias\" \"alias\" {\n }\n \n resource \"aws_iam_account_password_policy\" \"strict\" {\n+  allow_users_to_change_password = true\n   minimum_password_length        = 32\n   require_lowercase_characters   = true\n   require_numbers                = true\n-  require_uppercase_characters   = true\n   require_symbols                = true\n-  allow_users_to_change_password = true\n+  require_uppercase_characters   = true\n }\n \n resource \"aws_iam_user\" \"admin_console_user\" {\n@@ -18,10 +18,16 @@ resource \"aws_iam_user\" \"admin_console_user\" {\n }\n \n resource \"aws_iam_user_login_profile\" \"admin_console_user\" {\n-  user    = aws_iam_user.admin_console_user.name\n-  pgp_key = var.aws_console_admin_user.pgp_key\n+  user            = aws_iam_user.admin_console_user.name\n+  pgp_key         = var.aws_console_admin_user.pgp_key\n+  password_length = aws_iam_account_password_policy.strict.minimum_password_length\n \n   lifecycle {\n-    ignore_changes = [ password_length, password_reset_required, pgp_key ]\n+    ignore_changes = [password_length, password_reset_required, pgp_key]\n   }\n }\n+\n+resource \"aws_iam_user_policy_attachment\" \"admin_console_user\" {\n+  user       = aws_iam_user.admin_console_user.name\n+  policy_arn = \"arn:aws:iam::aws:policy/AdministratorAccess\"\n+}"
      },
      {
        "filename": "aws-account-setup/output.tf",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "modified",
        "patch": "@@ -1,3 +1,24 @@\n+output \"aws_account_alias\" {\n+  value = aws_iam_account_alias.alias.account_alias\n+}\n+\n+output \"aws_account_id\" {\n+  value = data.aws_caller_identity.current.account_id\n+}\n+\n+output \"aws_console_url\" {\n+  value = \"https://${aws_iam_account_alias.alias.account_alias}.signin.aws.amazon.com/console\"\n+}\n+\n+output \"billing_alarm\" {\n+  value = <<-EOF\n+    A billing alarm has been set for account ${data.aws_caller_identity.current.account_id} with\n+    threshold = ${var.alarm_bill.currency} ${var.alarm_bill.monthly_threshold}.\n+    Any estimated charges above this amount will trigger an alarm publish to the SNS topic below.\n+\n+    MUST SUBSCRIBE TO: ${aws_sns_topic.account_alerts.arn}\n+  EOF\n+}\n \n output \"console_admin_user\" {\n   value = aws_iam_user.admin_console_user.name"
      },
      {
        "filename": "aws-account-setup/variables.tf",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "status": "modified",
        "patch": "@@ -13,3 +13,49 @@ variable \"aws_console_admin_user\" {\n     pgp_key = \"keybase:alghanmi\"\n   }\n }\n+\n+variable \"sns_topic_account_alerts\" {\n+  type    = string\n+  default = \"account-alerts\"\n+}\n+\n+variable \"alarm_bill\" {\n+  type = object({\n+    monthly_threshold = number\n+    currency          = string\n+    description       = string\n+  })\n+  default = {\n+    monthly_threshold = \"100.00\"\n+    currency          = \"USD\"\n+    description       = \"Monthly account billing alarm\"\n+  }\n+}\n+\n+variable \"budget_overall_cost\" {\n+  type = object({\n+    budget_type            = string\n+    limit_amount           = number\n+    limit_unit             = string\n+    time_unit              = string\n+    notification_threshold = list(number)\n+    subscriber_emails      = list(string)\n+    subscriber_sns         = list(string)\n+  })\n+  default = {\n+    budget_type            = \"COST\"\n+    limit_amount           = \"100\"\n+    limit_unit             = \"USD\"\n+    time_unit              = \"MONTHLY\"\n+    notification_threshold = [50, 80, 100]\n+    subscriber_emails      = []\n+    subscriber_sns         = []\n+  }\n+}\n+\n+variable \"tags\" {\n+  type = map\n+  default = {\n+    managed-by = \"terraform\"\n+  }\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alghanmi/terraform-modules/commit/570d3d8440ed399ed8b30bffe1fd7a2adc197771",
    "files": [
      {
        "filename": "static-s3-site-on-cloudflare/cloudfront.tf",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -103,11 +103,5 @@ resource \"aws_cloudfront_distribution\" \"site\" {\n     minimum_protocol_version = \"TLSv1.2_2019\"\n   }\n \n-  logging_config {\n-    bucket          = data.aws_s3_bucket.logs.bucket_domain_name\n-    prefix          = format(\"cloudfront-logs-%s/\", replace(var.site_fqdn, \".\", \"-\"))\n-    include_cookies = false\n-  }\n-\n   tags = var.tags\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/andybaran/GCP-IOT-BigDataInfra/commit/cacd8afbc18273e42e4027b36b3a5e9c37c04405",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -246,7 +246,7 @@ resource \"google_storage_bucket\" \"dataflow_bucket\" {\n # Dataflow\n # ****************************************************************************\n \n-resource \"google_dataflow_job\" \"collect_OBD2_data\" {\n+/* resource \"google_dataflow_job\" \"collect_OBD2_data\" {\n \n   name              = \"OBD2-Data-Collection\"\n   template_gcs_path = \"gs://dataflow-templates/latest/PubSub_Subscription_to_BigQuery\"\n@@ -258,4 +258,4 @@ resource \"google_dataflow_job\" \"collect_OBD2_data\" {\n     outputTableSpec = \"${data.terraform_remote_state.project.outputs.short_project_id}:${var.bq_dataset}.${var.bq_table}\"\n     #flexRSGoal = \"COST_OPTIMIZED\"\n   }\n-}\n\\ No newline at end of file\n+} */\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/rackspace-infrastructure-automation/aws-terraform-ec2_autorecovery/commit/137c1c3085bb95b74e2d5a695c3343ca25830fd3",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -229,6 +229,7 @@ resource \"aws_ssm_parameter\" \"cwagentparam\" {\n }\n \n resource \"aws_ssm_association\" \"ssm_bootstrap_assoc\" {\n+  count               = \"${var.instance_count == 0 ? 0 : 1}\"\n   name                = \"${aws_ssm_document.ssm_bootstrap_doc.name}\"\n   schedule_expression = \"${var.ssm_association_refresh_rate}\"\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/lacework/terraform-gcp-audit-log/commit/324c8a499794f6a789d583c4c460af9475171215",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -3,6 +3,7 @@\n \n # generated via \"make ci\"\n examples/**/.terraform.lock.hcl\n+**/.terraform.lock.hcl\n \n # .tfstate files\n *.tfstate"
      },
      {
        "filename": "README.md",
        "additions": 18,
        "deletions": 16,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -32,19 +32,19 @@ cloudresourcemanager.googleapis.com\n \n | Name | Version |\n |------|---------|\n-| <a name=\"requirement_terraform\"></a> [terraform](#requirement\\_terraform) | >= 0.12.31 |\n-| <a name=\"requirement_google\"></a> [google](#requirement\\_google) | ~> 3.0 |\n+| <a name=\"requirement_terraform\"></a> [terraform](#requirement\\_terraform) | >= 0.14.0 |\n+| <a name=\"requirement_google\"></a> [google](#requirement\\_google) | >= 4.4.0, < 5.0.0 |\n | <a name=\"requirement_lacework\"></a> [lacework](#requirement\\_lacework) | ~> 0.2 |\n | <a name=\"requirement_time\"></a> [time](#requirement\\_time) | ~> 0.6 |\n \n ## Providers\n \n | Name | Version |\n |------|---------|\n-| <a name=\"provider_google\"></a> [google](#provider\\_google) | ~> 3.0 |\n-| <a name=\"provider_lacework\"></a> [lacework](#provider\\_lacework) | ~> 0.2 |\n-| <a name=\"provider_random\"></a> [random](#provider\\_random) | n/a |\n-| <a name=\"provider_time\"></a> [time](#provider\\_time) | ~> 0.6 |\n+| <a name=\"provider_google\"></a> [google](#provider\\_google) | 4.11.0 |\n+| <a name=\"provider_lacework\"></a> [lacework](#provider\\_lacework) | 0.15.0 |\n+| <a name=\"provider_random\"></a> [random](#provider\\_random) | 3.1.0 |\n+| <a name=\"provider_time\"></a> [time](#provider\\_time) | 0.7.2 |\n \n ## Modules\n \n@@ -56,9 +56,10 @@ cloudresourcemanager.googleapis.com\n \n | Name | Type |\n |------|------|\n+| [google_logging_folder_sink.lacework_folder_sink](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/logging_folder_sink) | resource |\n | [google_logging_organization_sink.lacework_organization_sink](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/logging_organization_sink) | resource |\n-| [google_logging_project_bucket_config.lacework_log_bucket](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/logging_project_bucket_config) | resource |\n | [google_logging_project_sink.lacework_project_sink](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/logging_project_sink) | resource |\n+| [google_logging_project_sink.lacework_root_project_sink](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/logging_project_sink) | resource |\n | [google_organization_iam_member.for_lacework_service_account](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/organization_iam_member) | resource |\n | [google_project_iam_member.for_lacework_service_account](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/project_iam_member) | resource |\n | [google_project_service.required_apis](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/project_service) | resource |\n@@ -72,32 +73,33 @@ cloudresourcemanager.googleapis.com\n | [lacework_integration_gcp_at.default](https://registry.terraform.io/providers/lacework/lacework/latest/docs/resources/integration_gcp_at) | resource |\n | [random_id.uniq](https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/id) | resource |\n | [time_sleep.wait_time](https://registry.terraform.io/providers/hashicorp/time/latest/docs/resources/sleep) | resource |\n+| [google_folders.my-org-folders](https://registry.terraform.io/providers/hashicorp/google/latest/docs/data-sources/folders) | data source |\n | [google_project.selected](https://registry.terraform.io/providers/hashicorp/google/latest/docs/data-sources/project) | data source |\n+| [google_projects.my-org-projects](https://registry.terraform.io/providers/hashicorp/google/latest/docs/data-sources/projects) | data source |\n | [google_storage_project_service_account.lw](https://registry.terraform.io/providers/hashicorp/google/latest/docs/data-sources/storage_project_service_account) | data source |\n \n ## Inputs\n \n | Name | Description | Type | Default | Required |\n |------|-------------|------|---------|:--------:|\n | <a name=\"input_bucket_force_destroy\"></a> [bucket\\_force\\_destroy](#input\\_bucket\\_force\\_destroy) | n/a | `bool` | `false` | no |\n-| <a name=\"input_bucket_labels\"></a> [bucket\\_labels](#input\\_bucket\\_labels) | Set of labels which will be added to the audit log bucket | `map(string)` | `null` | no |\n+| <a name=\"input_bucket_labels\"></a> [bucket\\_labels](#input\\_bucket\\_labels) | Set of labels which will be added to the audit log bucket | `map(string)` | `{}` | no |\n | <a name=\"input_bucket_region\"></a> [bucket\\_region](#input\\_bucket\\_region) | The region where the new bucket will be created, valid values for Multi-regions are (EU, US or ASIA) alternatively you can set a single region or Dual-regions follow the naming convention as outlined in the GCP bucket locations documentation https://cloud.google.com/storage/docs/locations#available-locations\\|string\\|US\\|false\\| | `string` | `\"US\"` | no |\n-| <a name=\"input_enable_ubla\"></a> [enable\\_ubla](#input\\_enable\\_ubla) | Boolean for enabled Uniform Bucket Level Access on the audit log bucket | `bool` | `false` | no |\n+| <a name=\"input_enable_ubla\"></a> [enable\\_ubla](#input\\_enable\\_ubla) | Boolean for enabling Uniform Bucket Level Access on the audit log bucket.  Default is true | `bool` | `true` | no |\n | <a name=\"input_existing_bucket_name\"></a> [existing\\_bucket\\_name](#input\\_existing\\_bucket\\_name) | The name of an existing bucket you want to send the logs to | `string` | `\"\"` | no |\n | <a name=\"input_existing_sink_name\"></a> [existing\\_sink\\_name](#input\\_existing\\_sink\\_name) | The name of an existing sink to be re-used for this integration | `string` | `\"\"` | no |\n-| <a name=\"input_k8s_filter\"></a> [k8s\\_filter](#input\\_k8s\\_filter) | Filter out GKE logs from GCP Audit Log sinks.  Default is false | `bool` | `false` | no |\n-| <a name=\"input_labels\"></a> [labels](#input\\_labels) | Set of labels which will be added to the resources managed by the module | `map(string)` | `null` | no |\n+| <a name=\"input_folders_to_exclude\"></a> [folders\\_to\\_exclude](#input\\_folders\\_to\\_exclude) | List of root folders to exclude if `exclude_folders` is set to `true`.  Format is 'folders/1234567890' | `set(string)` | `[]` | no |\n+| <a name=\"input_include_root_projects\"></a> [include\\_root\\_projects](#input\\_include\\_root\\_projects) | Enables logic to include root-level projects if `exclude_folders` is set to `true`.  Default is true | `bool` | `true` | no |\n+| <a name=\"input_k8s_filter\"></a> [k8s\\_filter](#input\\_k8s\\_filter) | Filter out GKE logs from GCP Audit Log sinks.  Default is true | `bool` | `true` | no |\n+| <a name=\"input_labels\"></a> [labels](#input\\_labels) | Set of labels which will be added to the resources managed by the module | `map(string)` | `{}` | no |\n | <a name=\"input_lacework_integration_name\"></a> [lacework\\_integration\\_name](#input\\_lacework\\_integration\\_name) | n/a | `string` | `\"TF audit_log\"` | no |\n | <a name=\"input_lifecycle_rule_age\"></a> [lifecycle\\_rule\\_age](#input\\_lifecycle\\_rule\\_age) | Number of days to keep audit logs in Lacework GCS bucket before deleting. Leave default to keep indefinitely | `number` | `-1` | no |\n-| <a name=\"input_log_bucket\"></a> [log\\_bucket](#input\\_log\\_bucket) | The name of the bucket that will receive log objects | `string` | `\"\"` | no |\n-| <a name=\"input_log_bucket_location\"></a> [log\\_bucket\\_location](#input\\_log\\_bucket\\_location) | The location of the bucket. Default is global | `string` | `\"global\"` | no |\n-| <a name=\"input_log_bucket_retention_days\"></a> [log\\_bucket\\_retention\\_days](#input\\_log\\_bucket\\_retention\\_days) | The number of days to keep logs before deleting. Default is 30 | `number` | `30` | no |\n | <a name=\"input_org_integration\"></a> [org\\_integration](#input\\_org\\_integration) | If set to true, configure an organization level integration | `bool` | `false` | no |\n | <a name=\"input_organization_id\"></a> [organization\\_id](#input\\_organization\\_id) | The organization ID, required if org\\_integration is set to true | `string` | `\"\"` | no |\n | <a name=\"input_prefix\"></a> [prefix](#input\\_prefix) | The prefix that will be use at the beginning of every generated resource | `string` | `\"lw-at\"` | no |\n | <a name=\"input_project_id\"></a> [project\\_id](#input\\_project\\_id) | A project ID different from the default defined inside the provider | `string` | `\"\"` | no |\n-| <a name=\"input_pubsub_subscription_labels\"></a> [pubsub\\_subscription\\_labels](#input\\_pubsub\\_subscription\\_labels) | Set of labels which will be added to the subscription | `map(string)` | `null` | no |\n-| <a name=\"input_pubsub_topic_labels\"></a> [pubsub\\_topic\\_labels](#input\\_pubsub\\_topic\\_labels) | Set of labels which will be added to the topic | `map(string)` | `null` | no |\n+| <a name=\"input_pubsub_subscription_labels\"></a> [pubsub\\_subscription\\_labels](#input\\_pubsub\\_subscription\\_labels) | Set of labels which will be added to the subscription | `map(string)` | `{}` | no |\n+| <a name=\"input_pubsub_topic_labels\"></a> [pubsub\\_topic\\_labels](#input\\_pubsub\\_topic\\_labels) | Set of labels which will be added to the topic | `map(string)` | `{}` | no |\n | <a name=\"input_required_apis\"></a> [required\\_apis](#input\\_required\\_apis) | n/a | `map(any)` | <pre>{<br>  \"iam\": \"iam.googleapis.com\",<br>  \"pubsub\": \"pubsub.googleapis.com\",<br>  \"resourcemanager\": \"cloudresourcemanager.googleapis.com\",<br>  \"serviceusage\": \"serviceusage.googleapis.com\"<br>}</pre> | no |\n | <a name=\"input_service_account_name\"></a> [service\\_account\\_name](#input\\_service\\_account\\_name) | The Service Account name (required when use\\_existing\\_service\\_account is set to true) | `string` | `\"\"` | no |\n | <a name=\"input_service_account_private_key\"></a> [service\\_account\\_private\\_key](#input\\_service\\_account\\_private\\_key) | The private key in JSON format, base64 encoded (required when use\\_existing\\_service\\_account is set to true) | `string` | `\"\"` | no |"
      },
      {
        "filename": "examples/organization-level-audit-log-exclude-folders/README.md",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "status": "added",
        "patch": "@@ -0,0 +1,32 @@\n+# Integrate GCP Organization with Lacework\n+The following provides an example of integrating a Google Cloud Organization with Lacework for Cloud\n+Audit Log analysis, excluding 2 folders from the root integration.\n+\n+```hcl\n+terraform {\n+  required_providers {\n+    lacework = {\n+      source = \"lacework/lacework\"\n+    }\n+  }\n+}\n+\n+provider \"google\" {}\n+\n+provider \"lacework\" {}\n+\n+module \"gcp_organization_level_audit_log\" {\n+  source               = \"../../\"\n+  bucket_force_destroy = true\n+  org_integration      = true\n+  organization_id      = \"my-organization-id\"\n+  enable_ubla          = true\n+  lifecycle_rule_age   = 7\n+  folders_to_exclude   = [\n+    \"folders/578370918314\", \n+    \"folders/1099205162015\",\n+  ] \n+}\n+```\n+\n+For detailed information on integrating Lacework with Google Cloud see [GCP Compliance and Audit Trail Integration - Terraform From Any Supported Host](https://docs.lacework.com/gcp-compliance-and-audit-log-integration-terraform-from-any-supported-host)"
      },
      {
        "filename": "examples/organization-level-audit-log-exclude-folders/main.tf",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+provider \"google\" {}\n+\n+provider \"lacework\" {}\n+\n+variable \"organization_id\" {\n+  default = \"my-organization-id\"\n+}\n+\n+module \"gcp_organization_level_audit_log\" {\n+  source               = \"../../\"\n+  bucket_force_destroy = true\n+  org_integration      = true\n+  project_id           = \"abc-demo-project-123\"\n+  organization_id      = var.organization_id\n+  enable_ubla          = true\n+  lifecycle_rule_age   = 7\n+  folders_to_exclude = [\n+    \"folders/123456789012\",\n+    \"folders/345678901234\",\n+  ]\n+}"
      },
      {
        "filename": "examples/organization-level-audit-log-exclude-folders/versions.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "renamed",
        "patch": null
      },
      {
        "filename": "examples/organization-level-audit-log/main.tf",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -2,11 +2,15 @@ provider \"google\" {}\n \n provider \"lacework\" {}\n \n+variable \"organization_id\" {\n+  default = \"my-organization-id\"\n+}\n+\n module \"gcp_organization_level_audit_log\" {\n   source               = \"../../\"\n   bucket_force_destroy = true\n   org_integration      = true\n-  organization_id      = \"my-organization-id\"\n+  organization_id      = var.organization_id\n   enable_ubla          = true\n   lifecycle_rule_age   = 7\n }"
      },
      {
        "filename": "examples/project-level-audit-log-with-logging-bucket/README.md",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "status": "removed",
        "patch": "@@ -1,29 +0,0 @@\n-# Integrate GCP Project with Lacework\n-The following provides an example of integrating a Google Cloud Project with Lacework for Cloud Audit Log analysis with a log bucket configured for logging of the bucket's access & storage Logs.\n-\n-```hcl\n-terraform {\n-  required_providers {\n-    lacework = {\n-      source = \"lacework/lacework\"\n-    }\n-  }\n-}\n-\n-provider \"google\" {}\n-\n-provider \"lacework\" {}\n-\n-module \"gcp_project_level_audit_log\" {\n-  source                    = \"lacework/audit-log/gcp\"\n-  version                   = \"~> 1.0\"\n-  bucket_force_destroy      = true\n-  enable_ubla               = true\n-  lifecycle_rule_age        = 7\n-  log_bucket                = \"lacework-log-bucket\"\n-  log_bucket_location       = \"us-east1\"\n-  log_bucket_retention_days = 60\n-}\n-```\n-\n-For detailed information on integrating Lacework with Google Cloud see [GCP Compliance and Audit Trail Integration - Terraform From Any Supported Host](https://support.lacework.com/hc/en-us/articles/360057065094-GCP-Compliance-and-Audit-Trail-Integration-Terraform-From-Any-Supported-Host)"
      },
      {
        "filename": "examples/project-level-audit-log-with-logging-bucket/main.tf",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "status": "removed",
        "patch": "@@ -1,13 +0,0 @@\n-provider \"google\" {}\n-\n-provider \"lacework\" {}\n-\n-module \"gcp_project_level_audit_log\" {\n-  source                    = \"../../\"\n-  bucket_force_destroy      = true\n-  enable_ubla               = true\n-  lifecycle_rule_age        = 7\n-  log_bucket                = \"lacework-log-bucket\"\n-  log_bucket_location       = \"us-east1\"\n-  log_bucket_retention_days = 60\n-}"
      },
      {
        "filename": "main.tf",
        "additions": 50,
        "deletions": 20,
        "changes": 70,
        "status": "modified",
        "patch": "@@ -8,11 +8,19 @@ locals {\n   sink_name = length(var.existing_sink_name) > 0 ? var.existing_sink_name : (\n     var.org_integration ? \"${var.prefix}-${var.organization_id}-lacework-sink-${random_id.uniq.hex}\" : \"${var.prefix}-lacework-sink-${random_id.uniq.hex}\"\n   )\n+  exclude_folders = length(var.folders_to_exclude) != 0\n   logging_sink_writer_identity = length(var.existing_sink_name) > 0 ? null : (\n-    var.org_integration ? (\n-      google_logging_organization_sink.lacework_organization_sink[0].writer_identity\n+    (var.org_integration && !local.exclude_folders) ? (\n+      [google_logging_organization_sink.lacework_organization_sink[0].writer_identity]\n       ) : (\n-      google_logging_project_sink.lacework_project_sink[0].writer_identity\n+      (var.org_integration && local.exclude_folders) ? (\n+        concat(\n+          [for v in google_logging_folder_sink.lacework_folder_sink : v.writer_identity],\n+          [for v in google_logging_project_sink.lacework_root_project_sink : v.writer_identity]\n+        )\n+        ) : (\n+        [google_logging_project_sink.lacework_project_sink[0].writer_identity]\n+      )\n     )\n   )\n   service_account_name = var.use_existing_service_account ? (\n@@ -35,8 +43,8 @@ locals {\n       \"roles/storage.admin\" = [\n         \"projectEditor:${local.project_id}\",\n         \"projectOwner:${local.project_id}\"\n-      ]\n-      \"roles/storage.objectCreator\" = [local.logging_sink_writer_identity]\n+      ],\n+      \"roles/storage.objectCreator\" = local.logging_sink_writer_identity,\n       \"roles/storage.objectViewer\" = [\n         \"serviceAccount:${local.service_account_json_key.client_email}\",\n         \"projectViewer:${local.project_id}\"\n@@ -45,6 +53,12 @@ locals {\n   log_filter = var.k8s_filter ? (\n     \"(protoPayload.@type=type.googleapis.com/google.cloud.audit.AuditLog) AND NOT (protoPayload.serviceName=\\\"k8s.io\\\") AND NOT (protoPayload.methodName:\\\"storage.objects\\\")\") : (\n   \"(protoPayload.@type=type.googleapis.com/google.cloud.audit.AuditLog) AND NOT (protoPayload.methodName:\\\"storage.objects\\\")\")\n+  folders = [\n+    (var.org_integration && local.exclude_folders) ? setsubtract(data.google_folders.my-org-folders[0].folders[*].name, var.folders_to_exclude) : toset([])\n+  ]\n+  root_projects = [\n+    (var.org_integration && local.exclude_folders) ? toset(data.google_projects.my-org-projects[0].projects[*].project_id) : toset([])\n+  ]\n }\n \n resource \"random_id\" \"uniq\" {\n@@ -71,14 +85,6 @@ module \"lacework_at_svc_account\" {\n   project_id           = local.project_id\n }\n \n-resource \"google_logging_project_bucket_config\" \"lacework_log_bucket\" {\n-  count          = length(var.log_bucket) > 0 ? 1 : 0\n-  project        = local.project_id\n-  location       = var.log_bucket_location\n-  retention_days = var.log_bucket_retention_days\n-  bucket_id      = \"${var.prefix}-${var.log_bucket}-${random_id.uniq.hex}\"\n-}\n-\n resource \"google_storage_bucket\" \"lacework_bucket\" {\n   count                       = length(var.existing_bucket_name) > 0 ? 0 : 1\n   project                     = local.project_id\n@@ -99,12 +105,6 @@ resource \"google_storage_bucket\" \"lacework_bucket\" {\n     }\n   }\n   labels = merge(var.labels, var.bucket_labels)\n-  dynamic \"logging\" {\n-    for_each = length(var.log_bucket) > 0 ? [1] : []\n-    content {\n-      log_bucket = var.log_bucket\n-    }\n-  }\n }\n \n resource \"google_storage_bucket_iam_binding\" \"policies\" {\n@@ -160,7 +160,7 @@ resource \"google_logging_project_sink\" \"lacework_project_sink\" {\n }\n \n resource \"google_logging_organization_sink\" \"lacework_organization_sink\" {\n-  count            = length(var.existing_sink_name) > 0 ? 0 : (var.org_integration ? 1 : 0)\n+  count            = length(var.existing_sink_name) > 0 ? 0 : ((var.org_integration && !local.exclude_folders) ? 1 : 0)\n   name             = local.sink_name\n   org_id           = var.organization_id\n   destination      = \"storage.googleapis.com/${local.bucket_name}\"\n@@ -169,6 +169,36 @@ resource \"google_logging_organization_sink\" \"lacework_organization_sink\" {\n   filter = local.log_filter\n }\n \n+data \"google_folders\" \"my-org-folders\" {\n+  count     = (var.org_integration && local.exclude_folders) ? 1 : 0\n+  parent_id = \"organizations/${var.organization_id}\"\n+}\n+\n+data \"google_projects\" \"my-org-projects\" {\n+  count  = (local.exclude_folders && var.include_root_projects) ? 1 : 0\n+  filter = \"parent.id=${var.organization_id}\"\n+}\n+\n+resource \"google_logging_folder_sink\" \"lacework_folder_sink\" {\n+  for_each         = local.folders[0]\n+  name             = local.sink_name\n+  folder           = each.value\n+  destination      = \"storage.googleapis.com/${local.bucket_name}\"\n+  include_children = true\n+\n+  filter = local.log_filter\n+}\n+\n+resource \"google_logging_project_sink\" \"lacework_root_project_sink\" {\n+  for_each               = local.root_projects[0]\n+  project                = each.value\n+  name                   = local.sink_name\n+  destination            = \"storage.googleapis.com/${local.bucket_name}\"\n+  unique_writer_identity = true\n+\n+  filter = local.log_filter\n+}\n+\n resource \"google_pubsub_subscription_iam_binding\" \"lacework\" {\n   project      = local.project_id\n   role         = \"roles/pubsub.subscriber\""
      },
      {
        "filename": "output.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -22,4 +22,4 @@ output \"pubsub_topic_name\" {\n output \"sink_name\" {\n   value       = local.sink_name\n   description = \"The sink name\"\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "filename": "scripts/ci_tests.sh",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -13,6 +13,7 @@ TEST_CASES=(\n   examples/environment-variables-project-level-audit-log/\n   examples/existing-service-account-org-level-audit-log/\n   examples/organization-level-audit-log/\n+  examples/organization-level-audit-log-exclude-folders/\n   examples/project-level-audit-log/\n )\n "
      },
      {
        "filename": "variables.tf",
        "additions": 13,
        "deletions": 19,
        "changes": 32,
        "status": "modified",
        "patch": "@@ -97,9 +97,9 @@ variable \"wait_time\" {\n }\n \n variable \"enable_ubla\" {\n-  description = \"Boolean for enabled Uniform Bucket Level Access on the audit log bucket\"\n+  description = \"Boolean for enabling Uniform Bucket Level Access on the audit log bucket.  Default is true\"\n   type        = bool\n-  default     = false\n+  default     = true\n }\n \n variable \"lifecycle_rule_age\" {\n@@ -120,26 +120,20 @@ variable \"pubsub_subscription_labels\" {\n   description = \"Set of labels which will be added to the subscription\"\n }\n \n-variable \"log_bucket\" {\n-  type        = string\n-  default     = \"\"\n-  description = \"The name of the bucket that will receive log objects\"\n-}\n-\n-variable \"log_bucket_location\" {\n-  type        = string\n-  default     = \"global\"\n-  description = \"The location of the bucket. Default is global\"\n+variable \"k8s_filter\" {\n+  type        = bool\n+  default     = true\n+  description = \"Filter out GKE logs from GCP Audit Log sinks.  Default is true\"\n }\n \n-variable \"log_bucket_retention_days\" {\n-  type        = number\n-  default     = 30\n-  description = \"The number of days to keep logs before deleting. Default is 30\"\n+variable \"folders_to_exclude\" {\n+  type        = list(string)\n+  default     = []\n+  description = \"List of root folders to exclude if `exclude_folders` is set to `true`.  Format is 'folders/1234567890'\"\n }\n \n-variable \"k8s_filter\" {\n+variable \"include_root_projects\" {\n   type        = bool\n-  default     = false\n-  description = \"Filter out GKE logs from GCP Audit Log sinks.  Default is false\"\n+  default     = true\n+  description = \"Enables logic to include root-level projects if `exclude_folders` is set to `true`.  Default is true\"\n }"
      },
      {
        "filename": "versions.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,8 +1,8 @@\n terraform {\n-  required_version = \">= 0.12.31\"\n+  required_version = \">= 0.14.0\"\n \n   required_providers {\n-    google = \">= 3.0.0, < 5.0.0\"\n+    google = \">= 4.4.0, < 5.0.0\"\n     time   = \"~> 0.6\"\n     lacework = {\n       source  = \"lacework/lacework\""
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/hazelops/terraform-aws-ecs-datadog-agent/commit/a10df203e8892e1a868bd88d798589719a582ba6",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -26,7 +26,7 @@ variable \"secret_names\" {\n \n variable \"docker_image_name\" {\n   type    = string\n-  default = \"datadog/agent\"\n+  default = \"public.ecr.aws/datadog/agent\"\n }\n \n variable \"docker_image_tag\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/trivbuit/Scalr-Demo/commit/773446c8f3192a447b8956f71b1ac90e7a9b8afa",
    "files": [
      {
        "filename": "remote/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -29,7 +29,7 @@ module \"ec2-instance-trmodule\" {\n   source  = \"trivbuit.scalr.io/env-tct37d1oddo7u4g/ec2-instance-trmodule/aws\"\n   version = \"1.0.4\"\n \n-  count = 2\n+  count = 1\n \n   ami           = \"ami-0f86a70488991335e\"\n   instance_type = \"t2.micro\""
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/thoughtbot/flightdeck/commit/c784bc0a3f747b66ab7cd01f23bbbdbad3bfe705",
    "files": [
      {
        "filename": "aws/workload-platform/README.md",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -65,6 +65,8 @@ Cluster Autoscaler, and ExternalDNS.\n | <a name=\"input_domain_names\"></a> [domain\\_names](#input\\_domain\\_names) | Domains which are allowed in this cluster | `list(string)` | `[]` | no |\n | <a name=\"input_external_dns_enabled\"></a> [external\\_dns\\_enabled](#input\\_external\\_dns\\_enabled) | Set to true to enable External DNS | `bool` | `false` | no |\n | <a name=\"input_external_dns_values\"></a> [external\\_dns\\_values](#input\\_external\\_dns\\_values) | Overrides to pass to the Helm chart | `list(string)` | `[]` | no |\n+| <a name=\"input_fluent_bit_enable_kubernetes_annotations\"></a> [fluent\\_bit\\_enable\\_kubernetes\\_annotations](#input\\_fluent\\_bit\\_enable\\_kubernetes\\_annotations) | Set to true to add Kubernetes annotations to log output | `bool` | `false` | no |\n+| <a name=\"input_fluent_bit_enable_kubernetes_labels\"></a> [fluent\\_bit\\_enable\\_kubernetes\\_labels](#input\\_fluent\\_bit\\_enable\\_kubernetes\\_labels) | Set to true to add Kubernetes labels to log output | `bool` | `false` | no |\n | <a name=\"input_fluent_bit_values\"></a> [fluent\\_bit\\_values](#input\\_fluent\\_bit\\_values) | Overrides to pass to the Helm chart | `list(string)` | `[]` | no |\n | <a name=\"input_hosted_zones\"></a> [hosted\\_zones](#input\\_hosted\\_zones) | Hosted zones this cluster is allowed to update | `list(string)` | `[]` | no |\n | <a name=\"input_istio_discovery_values\"></a> [istio\\_discovery\\_values](#input\\_istio\\_discovery\\_values) | Overrides to pass to the Helm chart | `list(string)` | `[]` | no |"
      },
      {
        "filename": "aws/workload-platform/main.tf",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -1,12 +1,14 @@\n module \"common_platform\" {\n   source = \"../../common/workload-platform\"\n \n-  certificate_issuer        = var.certificate_issuer\n-  domain_names              = var.domain_names\n-  external_dns_enabled      = var.external_dns_enabled\n-  istio_discovery_values    = var.istio_discovery_values\n-  pagerduty_routing_key     = local.pagerduty_routing_key\n-  prometheus_adapter_values = var.prometheus_adapter_values\n+  certificate_issuer                       = var.certificate_issuer\n+  domain_names                             = var.domain_names\n+  external_dns_enabled                     = var.external_dns_enabled\n+  fluent_bit_enable_kubernetes_annotations = var.fluent_bit_enable_kubernetes_annotations\n+  fluent_bit_enable_kubernetes_labels      = var.fluent_bit_enable_kubernetes_labels\n+  istio_discovery_values                   = var.istio_discovery_values\n+  pagerduty_routing_key                    = local.pagerduty_routing_key\n+  prometheus_adapter_values                = var.prometheus_adapter_values\n \n   cert_manager_values = concat(\n     local.cert_manager_values,"
      },
      {
        "filename": "aws/workload-platform/variables.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -81,6 +81,18 @@ variable \"external_dns_values\" {\n   default     = []\n }\n \n+variable \"fluent_bit_enable_kubernetes_annotations\" {\n+  description = \"Set to true to add Kubernetes annotations to log output\"\n+  type        = bool\n+  default     = false\n+}\n+\n+variable \"fluent_bit_enable_kubernetes_labels\" {\n+  description = \"Set to true to add Kubernetes labels to log output\"\n+  type        = bool\n+  default     = false\n+}\n+\n variable \"fluent_bit_values\" {\n   description = \"Overrides to pass to the Helm chart\"\n   type        = list(string)"
      },
      {
        "filename": "common/fluent-bit/README.md",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -30,6 +30,8 @@ No modules.\n | <a name=\"input_chart_repository\"></a> [chart\\_repository](#input\\_chart\\_repository) | Helm repository containing the chart | `string` | `\"https://fluent.github.io/helm-charts\"` | no |\n | <a name=\"input_chart_values\"></a> [chart\\_values](#input\\_chart\\_values) | Overrides to pass to the Helm chart | `list(string)` | `[]` | no |\n | <a name=\"input_chart_version\"></a> [chart\\_version](#input\\_chart\\_version) | Version of chart to install | `string` | n/a | yes |\n+| <a name=\"input_enable_kubernetes_annotations\"></a> [enable\\_kubernetes\\_annotations](#input\\_enable\\_kubernetes\\_annotations) | Set to true to add Kubernetes annotations to log output | `bool` | `false` | no |\n+| <a name=\"input_enable_kubernetes_labels\"></a> [enable\\_kubernetes\\_labels](#input\\_enable\\_kubernetes\\_labels) | Set to true to add Kubernetes labels to log output | `bool` | `false` | no |\n | <a name=\"input_k8s_namespace\"></a> [k8s\\_namespace](#input\\_k8s\\_namespace) | Kubernetes namespace in which resources will be written | `string` | n/a | yes |\n | <a name=\"input_name\"></a> [name](#input\\_name) | Name for the Helm release | `string` | `\"fluent-bit\"` | no |\n "
      },
      {
        "filename": "common/fluent-bit/filters.yaml",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "status": "added",
        "patch": "@@ -0,0 +1,37 @@\n+config:\n+  ## https://docs.fluentbit.io/manual/pipeline/filters\n+  filters: |\n+    [FILTER]\n+        Name kubernetes\n+        Match kube.*\n+        Merge_Log On\n+        Keep_Log Off\n+        K8S-Logging.Parser On\n+        K8S-Logging.Exclude On\n+\n+        # Disable adding pod annotations and labels to logs\n+        Annotations ${annotations}\n+        Labels ${labels}\n+\n+    # Lift the nested \"kubernetes\" object with prefix \"kube\"\n+    [FILTER]\n+        Name nest\n+        Match kube.*\n+        Operation lift\n+        Nested_under kubernetes\n+        Add_prefix kube_\n+\n+    # Remove verbose Docker data\n+    [FILTER]\n+        Name modify\n+        Match kube.*\n+        Remove_regex ^kube_(container_hash|container_image|docker_id)$\n+\n+    # Re-nest the \"kubernetes\" object\n+    [FILTER]\n+        Name nest\n+        Match kube.*\n+        Operation nest\n+        Wildcard kube_*\n+        Nest_under kubernetes\n+        Remove_prefix kube_"
      },
      {
        "filename": "common/fluent-bit/main.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -11,6 +11,10 @@ locals {\n   chart_values = [\n     yamlencode({\n       fullnameOverride = var.name\n+    }),\n+    templatefile(\"${path.module}/filters.yaml\", {\n+      annotations = var.enable_kubernetes_annotations ? \"On\" : \"Off\"\n+      labels      = var.enable_kubernetes_labels ? \"On\" : \"Off\"\n     })\n   ]\n }"
      },
      {
        "filename": "common/fluent-bit/variables.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -21,6 +21,18 @@ variable \"chart_repository\" {\n   default     = \"https://fluent.github.io/helm-charts\"\n }\n \n+variable \"enable_kubernetes_annotations\" {\n+  description = \"Set to true to add Kubernetes annotations to log output\"\n+  type        = bool\n+  default     = false\n+}\n+\n+variable \"enable_kubernetes_labels\" {\n+  description = \"Set to true to add Kubernetes labels to log output\"\n+  type        = bool\n+  default     = false\n+}\n+\n variable \"k8s_namespace\" {\n   type        = string\n   description = \"Kubernetes namespace in which resources will be written\""
      },
      {
        "filename": "common/workload-platform/README.md",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -56,6 +56,8 @@ Installs the components necessary for running workloads:\n | <a name=\"input_external_dns_values\"></a> [external\\_dns\\_values](#input\\_external\\_dns\\_values) | Overrides to pass to the Helm chart | `list(string)` | `[]` | no |\n | <a name=\"input_external_dns_version\"></a> [external\\_dns\\_version](#input\\_external\\_dns\\_version) | Version of external-dns to install | `string` | `\"5.0.0\"` | no |\n | <a name=\"input_flightdeck_namespace\"></a> [flightdeck\\_namespace](#input\\_flightdeck\\_namespace) | Kubernetes namespace in which flightdeck should be installed | `string` | `\"flightdeck\"` | no |\n+| <a name=\"input_fluent_bit_enable_kubernetes_annotations\"></a> [fluent\\_bit\\_enable\\_kubernetes\\_annotations](#input\\_fluent\\_bit\\_enable\\_kubernetes\\_annotations) | Set to true to add Kubernetes annotations to log output | `bool` | `false` | no |\n+| <a name=\"input_fluent_bit_enable_kubernetes_labels\"></a> [fluent\\_bit\\_enable\\_kubernetes\\_labels](#input\\_fluent\\_bit\\_enable\\_kubernetes\\_labels) | Set to true to add Kubernetes labels to log output | `bool` | `false` | no |\n | <a name=\"input_fluent_bit_values\"></a> [fluent\\_bit\\_values](#input\\_fluent\\_bit\\_values) | Overrides to pass to the Helm chart | `list(string)` | `[]` | no |\n | <a name=\"input_fluent_bit_version\"></a> [fluent\\_bit\\_version](#input\\_fluent\\_bit\\_version) | Version of Fluent Bit to install | `string` | `\"0.15.1\"` | no |\n | <a name=\"input_istio_discovery_values\"></a> [istio\\_discovery\\_values](#input\\_istio\\_discovery\\_values) | Overrides to pass to the Helm chart | `list(string)` | `[]` | no |"
      },
      {
        "filename": "common/workload-platform/main.tf",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -39,15 +39,15 @@ module \"cert_manager\" {\n \n   chart_values  = var.cert_manager_values\n   chart_version = var.cert_manager_version\n-  k8s_namespace = kubernetes_namespace.flightdeck.metadata[0].name\n+  k8s_namespace = local.k8s_namespace\n }\n \n module \"cluster_autoscaler\" {\n   source = \"../../common/cluster-autoscaler\"\n \n   chart_values  = var.cluster_autoscaler_values\n   chart_version = var.cluster_autoscaler_version\n-  k8s_namespace = kubernetes_namespace.flightdeck.metadata[0].name\n+  k8s_namespace = local.k8s_namespace\n }\n \n module \"external_dns\" {\n@@ -57,15 +57,17 @@ module \"external_dns\" {\n \n   chart_values  = var.external_dns_values\n   chart_version = var.external_dns_version\n-  k8s_namespace = kubernetes_namespace.flightdeck.metadata[0].name\n+  k8s_namespace = local.k8s_namespace\n }\n \n module \"fluent_bit\" {\n   source = \"../../common/fluent-bit\"\n \n-  chart_values  = var.fluent_bit_values\n-  chart_version = var.fluent_bit_version\n-  k8s_namespace = kubernetes_namespace.flightdeck.metadata[0].name\n+  chart_values                  = var.fluent_bit_values\n+  chart_version                 = var.fluent_bit_version\n+  enable_kubernetes_annotations = var.fluent_bit_enable_kubernetes_annotations\n+  enable_kubernetes_labels      = var.fluent_bit_enable_kubernetes_labels\n+  k8s_namespace                 = local.k8s_namespace\n \n   depends_on = [module.prometheus_operator]\n }\n@@ -75,15 +77,15 @@ module \"istio_ingress\" {\n \n   chart_values  = var.istio_ingress_values\n   istio_version = var.istio_version\n-  k8s_namespace = kubernetes_namespace.flightdeck.metadata[0].name\n+  k8s_namespace = local.k8s_namespace\n }\n \n module \"prometheus_operator\" {\n   source = \"../../common/prometheus-operator\"\n \n   chart_values          = var.prometheus_operator_values\n   chart_version         = var.prometheus_operator_version\n-  k8s_namespace         = kubernetes_namespace.flightdeck.metadata[0].name\n+  k8s_namespace         = local.k8s_namespace\n   pagerduty_routing_key = var.pagerduty_routing_key\n \n   depends_on = [module.cert_manager]\n@@ -94,7 +96,11 @@ module \"prometheus_adapter\" {\n \n   chart_values  = var.prometheus_adapter_values\n   chart_version = var.prometheus_adapter_version\n-  k8s_namespace = kubernetes_namespace.flightdeck.metadata[0].name\n+  k8s_namespace = local.k8s_namespace\n \n   depends_on = [module.prometheus_operator]\n }\n+\n+locals {\n+  k8s_namespace = kubernetes_namespace.flightdeck.metadata[0].name\n+}"
      },
      {
        "filename": "common/workload-platform/variables.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -58,6 +58,18 @@ variable \"flightdeck_namespace\" {\n   description = \"Kubernetes namespace in which flightdeck should be installed\"\n }\n \n+variable \"fluent_bit_enable_kubernetes_annotations\" {\n+  description = \"Set to true to add Kubernetes annotations to log output\"\n+  type        = bool\n+  default     = false\n+}\n+\n+variable \"fluent_bit_enable_kubernetes_labels\" {\n+  description = \"Set to true to add Kubernetes labels to log output\"\n+  type        = bool\n+  default     = false\n+}\n+\n variable \"fluent_bit_values\" {\n   description = \"Overrides to pass to the Helm chart\"\n   type        = list(string)"
      }
    ],
    "existing_codes": [
      "awareness",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/00inboxtest/terraform-google-vault/commit/1d0b5db7f310dc6a47af3130a97e5373d9cdaddf",
    "files": [
      {
        "filename": "README.md",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -209,12 +209,12 @@ done\n | vault\\_allowed\\_cidrs | List of CIDR blocks to allow access to the Vault nodes. Since the load balancer is a pass-through load balancer, this must also include all IPs from which you will access Vault. The default is unrestricted (any IP address can access Vault). It is recommended that you reduce this to a smaller list. | list(string) | `<list>` | no |\n | vault\\_args | Additional command line arguments passed to Vault server | string | `\"\"` | no |\n | vault\\_ca\\_cert\\_filename | GCS object path within the vault_tls_bucket. This is the root CA certificate. | string | `\"ca.crt\"` | no |\n-| vault\\_instance\\_base\\_image | Base operating system image in which to install Vault. This must be a Debian-based system at the moment due to how the metadata startup script runs. | string | `\"debian-cloud/debian-9\"` | no |\n+| vault\\_instance\\_base\\_image | Base operating system image in which to install Vault. This must be a Debian-based system at the moment due to how the metadata startup script runs. | string | `\"debian-cloud/debian-10\"` | no |\n | vault\\_instance\\_labels | Labels to apply to the Vault instances. | map(string) | `<map>` | no |\n | vault\\_instance\\_metadata | Additional metadata to add to the Vault instances. | map(string) | `<map>` | no |\n | vault\\_instance\\_tags | Additional tags to apply to the instances. Note 'allow-ssh' and 'allow-vault' will be present on all instances. | list(string) | `<list>` | no |\n | vault\\_log\\_level | Log level to run Vault in. See the Vault documentation for valid values. | string | `\"warn\"` | no |\n-| vault\\_machine\\_type | Machine type to use for Vault instances. | string | `\"n1-standard-1\"` | no |\n+| vault\\_machine\\_type | Machine type to use for Vault instances. | string | `\"e2-standard-2\"` | no |\n | vault\\_max\\_num\\_servers | Maximum number of Vault server nodes to run at one time. The group will not autoscale beyond this number. | string | `\"7\"` | no |\n | vault\\_min\\_num\\_servers | Minimum number of Vault server nodes in the autoscaling group. The group will not have less than this number of nodes. | string | `\"1\"` | no |\n | vault\\_port | Numeric port on which to run and expose Vault. | string | `\"8200\"` | no |\n@@ -227,7 +227,7 @@ done\n | vault\\_tls\\_kms\\_key\\_project | Project ID where the KMS key is stored. By default, same as `project_id` | string | `\"\"` | no |\n | vault\\_tls\\_require\\_and\\_verify\\_client\\_cert | Always use client certificates. You may want to disable this if users will not be authenticating to Vault with client certificates. | string | `\"false\"` | no |\n | vault\\_ui\\_enabled | Controls whether the Vault UI is enabled and accessible. | string | `\"true\"` | no |\n-| vault\\_version | Version of vault to install. This version must be 1.0+ and must be published on the HashiCorp releases service. | string | `\"1.1.3\"` | no |\n+| vault\\_version | Version of vault to install. This version must be 1.0+ and must be published on the HashiCorp releases service. | string | `\"1.6.0\"` | no |\n \n ## Outputs\n "
      },
      {
        "filename": "modules/cluster/README.md",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -32,6 +32,7 @@ module \"vault_cluster\" {\n | Name | Description | Type | Default | Required |\n |------|-------------|:----:|:-----:|:-----:|\n | domain | The domain name that will be set in the api_addr. Load Balancer IP used by default | string | `\"\"` | no |\n+| hc\\_initial\\_delay\\_secs | The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. | number | `\"60\"` | no |\n | host\\_project\\_id | ID of the host project if using Shared VPC | string | `\"\"` | no |\n | http\\_proxy | HTTP proxy for downloading agents and vault executable on startup. Only necessary if allow_public_egress is false. This is only used on the first startup of the Vault cluster and will NOT set the global HTTP_PROXY environment variable. i.e. If you configure Vault to manage credentials for other services, default HTTP routes will be taken. | string | `\"\"` | no |\n | ip\\_address | The IP address to assign the forwarding rules to. | string | n/a | yes |\n@@ -40,6 +41,7 @@ module \"vault_cluster\" {\n | kms\\_protection\\_level | The protection level to use for the KMS crypto key. | string | `\"software\"` | no |\n | load\\_balancing\\_scheme | Options are INTERNAL or EXTERNAL. If `EXTERNAL`, the forwarding rule will be of type EXTERNAL and a public IP will be created. If `INTERNAL` the type will be INTERNAL and a random RFC 1918 private IP will be assigned | string | `\"EXTERNAL\"` | no |\n | manage\\_tls | Set to `false` if you'd like to manage and upload your own TLS files. See `Managing TLS` for more details | bool | `\"true\"` | no |\n+| min\\_ready\\_sec | Minimum number of seconds to wait before considering a new or restarted instance as updated. This value must be from range. [0,3600] | number | `\"0\"` | no |\n | project\\_id | ID of the project in which to create resources and add IAM bindings. | string | n/a | yes |\n | region | Region in which to create resources. | string | `\"us-east4\"` | no |\n | service\\_account\\_project\\_additional\\_iam\\_roles | List of custom IAM roles to add to the project. | list(string) | `<list>` | no |\n@@ -56,12 +58,12 @@ module \"vault_cluster\" {\n | user\\_startup\\_script | Additional user-provided code injected after Vault is setup | string | `\"\"` | no |\n | vault\\_args | Additional command line arguments passed to Vault server | string | `\"\"` | no |\n | vault\\_ca\\_cert\\_filename | GCS object path within the vault_tls_bucket. This is the root CA certificate. | string | `\"ca.crt\"` | no |\n-| vault\\_instance\\_base\\_image | Base operating system image in which to install Vault. This must be a Debian-based system at the moment due to how the metadata startup script runs. | string | `\"debian-cloud/debian-9\"` | no |\n+| vault\\_instance\\_base\\_image | Base operating system image in which to install Vault. This must be a Debian-based system at the moment due to how the metadata startup script runs. | string | `\"debian-cloud/debian-10\"` | no |\n | vault\\_instance\\_labels | Labels to apply to the Vault instances. | map(string) | `<map>` | no |\n | vault\\_instance\\_metadata | Additional metadata to add to the Vault instances. | map(string) | `<map>` | no |\n | vault\\_instance\\_tags | Additional tags to apply to the instances. Note 'allow-ssh' and 'allow-vault' will be present on all instances. | list(string) | `<list>` | no |\n | vault\\_log\\_level | Log level to run Vault in. See the Vault documentation for valid values. | string | `\"warn\"` | no |\n-| vault\\_machine\\_type | Machine type to use for Vault instances. | string | `\"n1-standard-1\"` | no |\n+| vault\\_machine\\_type | Machine type to use for Vault instances. | string | `\"e2-standard-2\"` | no |\n | vault\\_max\\_num\\_servers | Maximum number of Vault server nodes to run at one time. The group will not autoscale beyond this number. | string | `\"7\"` | no |\n | vault\\_min\\_num\\_servers | Minimum number of Vault server nodes in the autoscaling group. The group will not have less than this number of nodes. | string | `\"1\"` | no |\n | vault\\_port | Numeric port on which to run and expose Vault. | string | `\"8200\"` | no |\n@@ -76,7 +78,8 @@ module \"vault_cluster\" {\n | vault\\_tls\\_kms\\_key\\_project | Project ID where the KMS key is stored. By default, same as `project_id` | string | `\"\"` | no |\n | vault\\_tls\\_require\\_and\\_verify\\_client\\_cert | Always use client certificates. You may want to disable this if users will not be authenticating to Vault with client certificates. | string | `\"false\"` | no |\n | vault\\_ui\\_enabled | Controls whether the Vault UI is enabled and accessible. | string | `\"true\"` | no |\n-| vault\\_version | Version of vault to install. This version must be 1.0+ and must be published on the HashiCorp releases service. | string | `\"1.1.3\"` | no |\n+| vault\\_version | Version of vault to install. This version must be 1.0+ and must be published on the HashiCorp releases service. | string | `\"1.6.0\"` | no |\n+| zones | The zones to distribute instances across.  If empty, all zones in the region are used.  ['us-west1-a', 'us-west1-b', 'us-west1-c'] | list(string) | `<list>` | no |\n \n ## Outputs\n "
      },
      {
        "filename": "modules/cluster/main.tf",
        "additions": 43,
        "deletions": 1,
        "changes": 44,
        "status": "modified",
        "patch": "@@ -28,6 +28,19 @@ locals {\n   api_addr          = var.domain != \"\" ? \"https://${var.domain}:${var.vault_port}\" : \"https://${local.lb_ip}:${var.vault_port}\"\n   host_project      = var.host_project_id != \"\" ? var.host_project_id : var.project_id\n   lb_ip             = local.use_external_lb ? google_compute_forwarding_rule.external[0].ip_address : var.ip_address\n+  # LB and Autohealing health checks have different behavior.  The load\n+  # balancer shouldn't route traffic to a secondary vault instance, but it\n+  # should consider the instance healthy for autohealing purposes.\n+  # See: https://www.vaultproject.io/api-docs/system/health\n+  hc_workload_request_path = \"/v1/sys/health?uninitcode=200\"\n+  hc_autoheal_request_path = \"/v1/sys/health?uninitcode=200&standbyok=true\"\n+  # Default to all zones in the region unless zones were provided.\n+  zones = length(var.zones) > 0 ? var.zones : data.google_compute_zones.available.names\n+}\n+\n+data \"google_compute_zones\" \"available\" {\n+  project = var.project_id\n+  region  = var.region\n }\n \n resource \"google_compute_instance_template\" \"vault\" {\n@@ -89,7 +102,7 @@ resource \"google_compute_health_check\" \"vault_internal\" {\n \n   https_health_check {\n     port         = var.vault_port\n-    request_path = \"/v1/sys/health?uninitcode=200\"\n+    request_path = local.hc_workload_request_path\n   }\n }\n \n@@ -140,6 +153,7 @@ resource \"google_compute_http_health_check\" \"vault\" {\n   healthy_threshold   = 2\n   unhealthy_threshold = 2\n   port                = var.vault_proxy_port\n+  request_path        = local.hc_workload_request_path\n }\n \n \n@@ -181,6 +195,18 @@ resource \"google_compute_region_instance_group_manager\" \"vault\" {\n   base_instance_name = \"vault-${var.region}\"\n   wait_for_instances = false\n \n+  auto_healing_policies {\n+    health_check      = google_compute_health_check.autoheal.id\n+    initial_delay_sec = var.hc_initial_delay_secs\n+  }\n+\n+  update_policy {\n+    type                  = \"OPPORTUNISTIC\"\n+    minimal_action        = \"REPLACE\"\n+    max_unavailable_fixed = length(local.zones)\n+    min_ready_sec         = var.min_ready_sec\n+  }\n+\n   target_pools = local.use_external_lb ? [google_compute_target_pool.vault[0].self_link] : []\n \n   named_port {\n@@ -212,3 +238,19 @@ resource \"google_compute_region_autoscaler\" \"vault\" {\n   }\n \n }\n+\n+# Auto-healing\n+resource \"google_compute_health_check\" \"autoheal\" {\n+  project = var.project_id\n+  name    = \"vault-health-autoheal\"\n+\n+  check_interval_sec  = 10\n+  timeout_sec         = 5\n+  healthy_threshold   = 1\n+  unhealthy_threshold = 2\n+\n+  https_health_check {\n+    port         = var.vault_port\n+    request_path = local.hc_autoheal_request_path\n+  }\n+}"
      },
      {
        "filename": "modules/cluster/startup.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -52,6 +52,7 @@ data \"template_file\" \"vault-config\" {\n     storage_bucket                           = var.vault_storage_bucket\n     vault_log_level                          = var.vault_log_level\n     vault_port                               = var.vault_port\n+    vault_proxy_port                         = var.vault_proxy_port\n     vault_tls_disable_client_certs           = var.vault_tls_disable_client_certs\n     vault_tls_require_and_verify_client_cert = var.vault_tls_require_and_verify_client_cert\n     vault_ui_enabled                         = var.vault_ui_enabled"
      },
      {
        "filename": "modules/cluster/templates/config.hcl.tpl",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -1,6 +1,7 @@\n # Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\n # have this set.\n-api_addr = \"${api_addr}\"\n+api_addr     = \"${api_addr}\"\n+# LOCAL_IP is replaced with the eth0 IP address by the startup script.\n cluster_addr = \"https://LOCAL_IP:8201\"\n \n # Set debugging level\n@@ -32,7 +33,14 @@ listener \"tcp\" {\n   tls_disable = 1\n }\n \n-# Create an mTLS listener on the load balancer\n+# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\n+# firewall doesn't allow traffic to this port except from the probe IP range.\n+listener \"tcp\" {\n+  address     = \"${lb_ip}:${vault_proxy_port}\"\n+  tls_disable = 1\n+}\n+\n+# Create an mTLS listener on the load balancer address\n listener \"tcp\" {\n   address            = \"${lb_ip}:${vault_port}\"\n   tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n@@ -44,8 +52,8 @@ listener \"tcp\" {\n }\n \n # Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\n-# but not all clients are well-behaved. This is also needed so the nodes can\n-# communicate with eachother.\n+# but not all clients are well-behaved. This is also needed so the cluster\n+# nodes can communicate with each other.\n listener \"tcp\" {\n   address            = \"LOCAL_IP:${vault_port}\"\n   tls_cert_file      = \"/etc/vault.d/tls/vault.crt\""
      },
      {
        "filename": "modules/cluster/templates/startup.sh.tpl",
        "additions": 49,
        "deletions": 35,
        "changes": 84,
        "status": "modified",
        "patch": "@@ -17,24 +17,23 @@ if [ ! -z '${custom_http_proxy}' ]; then\n   export https_proxy=$http_proxy\n fi\n \n+# Get Vault up and running as quickly as possible to get the auto-heal health\n+# check passing.  This results in faster recovery and faster rolling upgrades.\n+\n # Deps\n export DEBIAN_FRONTEND=noninteractive\n-apt-get update -yqq\n-apt-get upgrade -yqq\n-apt-get install -yqq jq libcap2-bin logrotate unzip\n-\n-# Install Stackdriver for logging and monitoring\n-curl -sSfL https://dl.google.com/cloudagents/install-logging-agent.sh | bash\n-curl -sSfL https://dl.google.com/cloudagents/install-monitoring-agent.sh | bash\n \n # Download and install Vault\n-cd /tmp && \\\n-  curl -sLfO \"https://releases.hashicorp.com/vault/${vault_version}/vault_${vault_version}_linux_amd64.zip\" && \\\n-  unzip \"vault_${vault_version}_linux_amd64.zip\" && \\\n-  mv vault /usr/local/bin/vault && \\\n-  rm \"vault_${vault_version}_linux_amd64.zip\"\n+curl -sLfo /tmp/vault.zip \"https://releases.hashicorp.com/vault/${vault_version}/vault_${vault_version}_linux_amd64.zip\"\n+# Unzip without having to apt install unzip\n+(echo \"import sys\"; echo \"import zipfile\"; echo \"with zipfile.ZipFile(sys.argv[1]) as z:\"; echo '  z.extractall(\"/tmp\")') | python3 - /tmp/vault.zip\n+install -o0 -g0 -m0755 -D /tmp/vault /usr/local/bin/vault\n+rm /tmp/vault.zip /tmp/vault\n \n # Give Vault the ability to run mlock as non-root\n+if ! [[ -x /sbin/setcap ]]; then\n+  apt install -qq -y libcap2-bin\n+fi\n /sbin/setcap cap_ipc_lock=+ep /usr/local/bin/vault\n \n # Add Vault user\n@@ -83,7 +82,8 @@ touch /var/log/vault/{audit,server}.log\n chmod 0640 /var/log/vault/{audit,server}.log\n chown -R vault:adm /var/log/vault\n \n-# Add the TLS ca.crt to the trusted store so plugins dont error with TLS handshakes\n+# Add the TLS ca.crt to the trusted store so plugins dont error with TLS\n+# handshakes\n cp /etc/vault.d/tls/ca.crt /usr/local/share/ca-certificates/\n update-ca-certificates\n \n@@ -94,6 +94,8 @@ Description=\"HashiCorp Vault\"\n Documentation=https://www.vaultproject.io/docs/\n Requires=network-online.target\n After=network-online.target\n+# Stop after the shutdown script stops.\n+Before=google-shutdown-scripts.service\n ConditionFileNotEmpty=/etc/vault.d/config.hcl\n \n [Service]\n@@ -125,6 +127,9 @@ EOF\n chmod 0644 /etc/systemd/system/vault.service\n systemctl daemon-reload\n systemctl enable vault\n+systemctl start vault\n+\n+## AT THIS POINT VAULT HEALTH CHECKS SHOULD START PASSING\n \n # Prevent core dumps - from all attack vectors\n cat <<\"EOF\" > /etc/sysctl.d/50-coredump.conf\n@@ -165,21 +170,6 @@ EOF\n chmod 644 /etc/profile.d/vault.sh\n source /etc/profile.d/vault.sh\n \n-if [ ${internal_lb} != true ]; then\n-  # Add health-check proxy because target pools don't support HTTPS\n-  apt-get install -yqq nginx\n-\n-  cat <<EOF > /etc/nginx/sites-available/default\n-server {\n-  listen ${vault_proxy_port};\n-  location / {\n-    proxy_pass $VAULT_ADDR/v1/sys/health?uninitcode=200;\n-  }\n-}\n-EOF\n-  systemctl enable nginx\n-  systemctl restart nginx\n-fi\n # Pull Vault data from syslog into a file for fluentd\n cat <<\"EOF\" > /etc/rsyslog.d/vault.conf\n #\n@@ -196,8 +186,18 @@ if ( $programname == \"vault\" ) then {\n EOF\n systemctl restart rsyslog\n \n+# Install Stackdriver for logging and monitoring\n+# Logging Agent: https://cloud.google.com/logging/docs/agent/installation\n+curl -sSfL https://dl.google.com/cloudagents/add-logging-agent-repo.sh | bash\n+# Monitoring Agent: https://cloud.google.com/monitoring/agent/installation\n+curl -sSfL https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh | bash\n+apt-get update -yqq\n+# Install structured logs\n+apt-get install -yqq 'stackdriver-agent=6.*' 'google-fluentd=1.*' google-fluentd-catch-all-config-structured\n+\n # Start Stackdriver logging agent and setup the filesystem to be ready to\n # receive audit logs\n+mkdir -p /etc/google-fluentd/config.d\n cat <<\"EOF\" > /etc/google-fluentd/config.d/vaultproject.io.conf\n <source>\n   @type tail\n@@ -249,7 +249,11 @@ EOF\n systemctl enable google-fluentd\n systemctl restart google-fluentd\n \n+# Install logrotate\n+apt-get install -yqq logrotate\n+\n # Configure logrotate for Vault audit logs\n+mkdir -p /etc/logrotate.d\n cat <<\"EOF\" > /etc/logrotate.d/vaultproject.io\n /var/log/vault/*.log {\n   daily\n@@ -260,25 +264,35 @@ cat <<\"EOF\" > /etc/logrotate.d/vaultproject.io\n   create 0640 vault adm\n   sharedscripts\n   postrotate\n-    kill -HUP $(pidof vault)\n+    /bin/systemctl reload vault 2> /dev/null\n     true\n   endscript\n }\n EOF\n \n # Start Stackdriver monitoring\n-curl -sSfLo /opt/stackdriver/collectd/etc/collectd.d/statsd.conf https://raw.githubusercontent.com/Stackdriver/stackdriver-agent-service-configs/master/etc/collectd.d/statsd.conf\n+mkdir -p /opt/stackdriver/collectd/etc/collectd.d /etc/stackdriver/collectd.d\n+curl -sSfLo /etc/stackdriver/collectd.d/statsd.conf \\\n+  https://raw.githubusercontent.com/Stackdriver/stackdriver-agent-service-configs/master/etc/collectd.d/statsd.conf\n+\n+# On GCE instances, swap is not enabled.  The collectd swap plugin is enabled\n+# by default and generates frequent error messages trying to divide by zero\n+# when there is no swap.  This perl command is an in-place edit to disable the\n+# swap plugin.  The intent is to prevent the spurious log messages and avoid\n+# having to filter them in stackdriver.\n+#\n+# The error string related to this is:\n+# `wg_typed_value_create_from_value_t_inline failed for swap/percent/value`\n+# See https://issuetracker.google.com/issues/161054680#comment5\n+perl -i -pe 'BEGIN{undef $/;} s,LoadPlugin swap.*?/Plugin>,# swap plugin disabled by startup-script,smg' /etc/stackdriver/collectd.conf\n+\n systemctl enable stackdriver-agent\n-systemctl restart stackdriver-agent\n+service stackdriver-agent restart\n \n #########################################\n ##          user_startup_script        ##\n #########################################\n ${user_startup_script}\n \n-\n # Signal this script has run\n touch ~/.startup-script-complete\n-\n-# Reboot to pick up system-level changes\n-sudo reboot"
      },
      {
        "filename": "modules/cluster/variables.tf",
        "additions": 21,
        "deletions": 4,
        "changes": 25,
        "status": "modified",
        "patch": "@@ -156,7 +156,7 @@ variable \"vault_instance_metadata\" {\n \n variable \"vault_instance_base_image\" {\n   type    = string\n-  default = \"debian-cloud/debian-9\"\n+  default = \"debian-cloud/debian-10\"\n \n   description = \"Base operating system image in which to install Vault. This must be a Debian-based system at the moment due to how the metadata startup script runs.\"\n }\n@@ -184,10 +184,9 @@ variable \"vault_min_num_servers\" {\n \n variable \"vault_machine_type\" {\n   type    = string\n-  default = \"n1-standard-1\"\n+  default = \"e2-standard-2\"\n \n   description = \"Machine type to use for Vault instances.\"\n-\n }\n \n variable \"vault_max_num_servers\" {\n@@ -270,7 +269,7 @@ variable \"vault_ui_enabled\" {\n \n variable \"vault_version\" {\n   type    = string\n-  default = \"1.1.3\"\n+  default = \"1.6.0\"\n \n   description = \"Version of vault to install. This version must be 1.0+ and must be published on the HashiCorp releases service.\"\n \n@@ -290,6 +289,24 @@ variable \"user_startup_script\" {\n   description = \"Additional user-provided code injected after Vault is setup\"\n }\n \n+variable \"min_ready_sec\" {\n+  description = \"Minimum number of seconds to wait before considering a new or restarted instance as updated. This value must be from range. [0,3600]\"\n+  type        = number\n+  default     = 0\n+}\n+\n+variable \"hc_initial_delay_secs\" {\n+  description = \"The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances.\"\n+  type        = number\n+  default     = 60\n+}\n+\n+variable \"zones\" {\n+  description = \"The zones to distribute instances across.  If empty, all zones in the region are used.  ['us-west1-a', 'us-west1-b', 'us-west1-c']\"\n+  type        = list(string)\n+  default     = []\n+}\n+\n #\n #\n # TLS"
      },
      {
        "filename": "test/integration/helpers/shared_tests/shared_instance_group_tests.rb",
        "additions": 107,
        "deletions": 0,
        "changes": 107,
        "status": "added",
        "patch": "@@ -0,0 +1,107 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+RSpec.shared_examples \"instance_group_behavior\" do |params|\n+  project_id = params[:project_id]\n+  region     = params[:region] || 'us-east4'\n+  ig_name    = params[:ig_name] || 'vault-igm'\n+  deadline   = params[:deadline] || 300\n+\n+  ##\n+  # Wait until an instance has booted\n+  def wait_for_boot(project_id, instance)\n+    tries=60\n+    delay=5\n+    while tries > 0\n+      c = command(\"gcloud --project=#{project_id} compute instances get-serial-port-output #{instance}\")\n+      if c.stdout =~ /GCEMetadataScripts: Finished running startup scripts/\n+        return c.stdout\n+      end\n+      tries = tries - 1\n+      sleep(delay)\n+    end\n+    return c.stdout\n+  end\n+\n+  ##\n+  # Wait until an instance has currentAction: \"NONE\" (STAGING => VERIFYING => NONE)\n+  def wait_for_action(project_id, ig_name, region)\n+    tries=60\n+    delay=5\n+    instances = []\n+    while tries > 0\n+      list = command(\"gcloud --project=#{project_id} compute instance-groups managed list-instances #{ig_name} --region=#{region} --format=json\")\n+      instances = list.exit_status == 0 ? JSON.parse(list.stdout) : []\n+      if instances.all? { |i| i['currentAction'] == 'NONE' }\n+        return instances\n+      end\n+      tries = tries - 1\n+      sleep(delay)\n+    end\n+    return list\n+  end\n+\n+  describe \"instances\" do\n+    # Wait until the instance group is stable, otherwise the instance status is\n+    # in flux, for example could be \"STAGING\" or \"RUNNING\" depending on the\n+    # health check.  DEADLINE seconds is intentional to provide quick feedback\n+    # to the contributor and to ensure the instance recovers quickly when\n+    # unhealthy.  The startup script should strive to get the health check\n+    # passing as quickly as possible.\n+    before :all do\n+      # Note, this block intentionally uses the unconventional before :all form\n+      # and instance variables because the API calls are time consuming and we\n+      # need the data only once to assert against it.\n+      @wait = command(\"gcloud --project=#{project_id} compute instance-groups managed wait-until --stable --timeout=#{deadline} #{ig_name} --region=#{region}\")\n+      # Wait until there are no actions on each instance\n+      @instances = wait_for_action(project_id, ig_name, region)\n+      # Array<String> serial port output from each instance in the group.\n+      @consoles = @instances.collect {|i| wait_for_boot(project_id, i['instance']) }\n+    end\n+\n+    it \"should become stable in #{deadline} seconds\" do\n+      expect(@wait.exit_status).to eq(0)\n+      expect(@wait.stdout).to include(\"Group is stable\")\n+    end\n+\n+    it 'should at least one instance in the group' do\n+      expect(@instances).not_to be_empty\n+    end\n+\n+    it 'should be running' do\n+      @instances.each do |inst|\n+        expect(inst['instanceStatus']).to eq(\"RUNNING\"), \"expected all to be RUNNING, got #{@instances.inspect}\"\n+      end\n+    end\n+\n+    it 'should be healthy' do\n+      @instances.each do |inst|\n+        health_states = inst['instanceHealth'].collect do |h|\n+          h['detailedHealthState']\n+        end\n+        expect(health_states).to all(eq(\"HEALTHY\")), \"expected #{inst.inspect} to have all instanceHealth detailedHealthState HEALTHY values.\"\n+      end\n+    end\n+\n+    # This example is intended to help troubleshoot startup failures by giving\n+    # visibility into the startup script output directly in the build output\n+    # log.\n+    it 'should run startup scripts successfully with exit status 0' do\n+      expect(@consoles).not_to be_empty\n+      @consoles.each do |serial_console|\n+        expect(serial_console).to include('startup-script exit status 0')\n+      end\n+    end\n+  end\n+end"
      },
      {
        "filename": "test/integration/shared_vpc_internal/controls/default.rb",
        "additions": 5,
        "deletions": 12,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -12,8 +12,10 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n require 'json'\n+require_relative '../../helpers/shared_tests/shared_instance_group_tests'\n \n LB_NAME = 'vault-internal'\n+IG_NAME = 'vault-igm'\n REGION = 'us-west1'\n \n project_id = attribute('project_id')\n@@ -31,17 +33,8 @@\n     end\n   end\n \n-  describe \"Instance configuration\" do\n-    subject { command(\"gcloud --project=#{project_id} compute instances list --format=json\") }\n-    its(:exit_status) { should eq 0 }\n-    its(:stderr) { should eq '' }\n-    let!(:data) { JSON.parse(subject.stdout) if subject.exit_status == 0 }\n-\n-    it 'should be running' do\n-      data.each do |inst|\n-        expect(inst['name']).to start_with(\"vault\")\n-        expect(inst['status']).to eq(\"RUNNING\")\n-      end\n-    end\n+  describe \"Managed instances\" do\n+    include_examples \"instance_group_behavior\", project_id: project_id, region: REGION, ig_name: IG_NAME\n   end\n end\n+"
      },
      {
        "filename": "test/integration/simple_external/controls/simple.rb",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -13,9 +13,12 @@\n # limitations under the License.\n require 'net/http'\n require 'json'\n+require_relative '../../helpers/shared_tests/shared_instance_group_tests'\n \n LB_NAME = 'vault-external'\n REGION = 'us-east4'\n+DEADLINE = 180\n+IG_NAME = 'vault-igm'\n \n project_id = attribute('project_id')\n control \"Vault cluster is running\" do\n@@ -33,8 +36,8 @@\n \n     it \"should be healthy\" do\n       def vault_health_check(lb_ip)\n-        uri = URI(\"https://#{lb_ip}:8200/v1/sys/health\")\n-        req = Net::HTTP::Get.new(uri.path)\n+        uri = URI(\"https://#{lb_ip}:8200/v1/sys/health?uninitcode=200\")\n+        req = Net::HTTP::Get.new(uri)\n         cert = nil\n         res = nil\n         # NOTE: Since Ruby cannot trivially make a request with a specified certificate,\n@@ -49,17 +52,22 @@ def vault_health_check(lb_ip)\n               ex['oid'] == 'subjectAltName'\n             end.first['value']\n             return res, san\n-          rescue\n+          rescue => err\n+            puts \"Waiting on health check: #{err}\"\n             sleep 60\n             next\n           end\n         end\n       end\n \n       res, san = vault_health_check(lb_ip)\n-      expect(res.code).to eq(\"501\")\n+      expect(res.code).to eq(\"200\")\n       expect(JSON.parse(res.body)['initialized']).to eq(false)\n       expect(san).to include(lb_ip)\n     end\n   end\n+\n+  describe \"Managed instances\" do\n+    include_examples \"instance_group_behavior\", project_id: project_id, region: REGION, ig_name: IG_NAME\n+  end\n end"
      },
      {
        "filename": "test/setup/main.tf",
        "additions": 39,
        "deletions": 1,
        "changes": 40,
        "status": "modified",
        "patch": "@@ -14,6 +14,10 @@\n  * limitations under the License.\n  */\n \n+resource \"random_id\" \"name\" {\n+  byte_length = 2\n+}\n+\n locals {\n   apis = [\n     \"cloudkms.googleapis.com\",\n@@ -29,7 +33,6 @@ locals {\n     \"billingbudgets.googleapis.com\",\n     \"pubsub.googleapis.com\",\n   ]\n-\n }\n \n module \"project_ci\" {\n@@ -83,3 +86,38 @@ module \"service_project_ci\" {\n   disable_services_on_destroy = false\n   default_service_account     = \"keep\"\n }\n+\n+resource \"google_compute_firewall\" \"allow-health-check\" {\n+  name    = \"allow-health-check-${random_id.name.hex}\"\n+  network = module.svpc.network_name\n+  project = module.svpc.project_id\n+\n+  description = \"Allow health check probes for instance groups\"\n+\n+  source_ranges = [\"130.211.0.0/22\", \"35.191.0.0/16\"]\n+\n+  allow {\n+    protocol = \"icmp\"\n+  }\n+\n+  allow {\n+    protocol = \"tcp\"\n+  }\n+\n+  allow {\n+    protocol = \"udp\"\n+  }\n+}\n+\n+// Cloud Nat\n+module \"cloud-nat\" {\n+  source     = \"terraform-google-modules/cloud-nat/google\"\n+  version    = \"~> 1.2\"\n+  project_id = module.svpc.project_id\n+  network    = module.svpc.network_name\n+  region     = var.subnet_region\n+  name       = \"cloud-nat-${var.subnet_region}-${random_id.name.hex}\"\n+  router     = \"cloud-nat-${var.subnet_region}-${random_id.name.hex}\"\n+\n+  create_router = true\n+}"
      },
      {
        "filename": "test/setup/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -27,7 +27,7 @@ variable \"billing_account\" {\n \n variable \"network_name\" {\n   description = \"Vault shared VPC network name.\"\n-  default     = \"vault-spvc\"\n+  default     = \"vault-svpc\"\n }\n \n variable \"subnet_region\" {"
      },
      {
        "filename": "variables.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -370,7 +370,7 @@ variable \"vault_instance_metadata\" {\n \n variable \"vault_instance_base_image\" {\n   type    = string\n-  default = \"debian-cloud/debian-9\"\n+  default = \"debian-cloud/debian-10\"\n \n   description = \"Base operating system image in which to install Vault. This must be a Debian-based system at the moment due to how the metadata startup script runs.\"\n }\n@@ -398,7 +398,7 @@ variable \"vault_min_num_servers\" {\n \n variable \"vault_machine_type\" {\n   type    = string\n-  default = \"n1-standard-1\"\n+  default = \"e2-standard-2\"\n \n   description = \"Machine type to use for Vault instances.\"\n \n@@ -484,7 +484,7 @@ variable \"vault_ui_enabled\" {\n \n variable \"vault_version\" {\n   type    = string\n-  default = \"1.1.3\"\n+  default = \"1.6.0\"\n \n   description = \"Version of vault to install. This version must be 1.0+ and must be published on the HashiCorp releases service.\"\n "
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/hellupline/terraform-eks-cluster/commit/2bd01358b3a30d1680074f9bbd120da3a1456450",
    "files": [
      {
        "filename": "eks-cluster.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -40,7 +40,7 @@ resource \"aws_eks_cluster\" \"vb\" {\n \n   vpc_config {\n     security_group_ids = [aws_security_group.vb-cluster.id]\n-    subnet_ids         = concat(aws_subnet.vb-public[*].id, aws_subnet.vb-private[*].id)\n+    subnet_ids         = concat(aws_subnet.vb-public[*].id)\n   }\n \n   depends_on = ["
      },
      {
        "filename": "eks-worker-nodes.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -41,8 +41,8 @@ resource \"aws_eks_node_group\" \"ng-workers\" {\n   cluster_name    = aws_eks_cluster.vb.name\n   node_group_name = \"ng-workers\"\n   node_role_arn   = aws_iam_role.vb-node.arn\n-  subnet_ids      = aws_subnet.vb-private[*].id\n-  instance_types  = [\"t3.medium\"]\n+  subnet_ids      = aws_subnet.vb-public[*].id\n+  instance_types  = [\"t3.xlarge\"]\n \n   scaling_config {\n     desired_size = 2"
      },
      {
        "filename": "vpc.tf",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "status": "modified",
        "patch": "@@ -19,21 +19,6 @@ resource \"aws_vpc\" \"vb\" {\n   )\n }\n \n-# Private subnets\n-resource \"aws_subnet\" \"vb-private\" {\n-  count = 3\n-\n-  availability_zone = data.aws_availability_zones.available.names[count.index]\n-  cidr_block        = \"10.0.${count.index}.0/24\"\n-  vpc_id            = aws_vpc.vb.id\n-\n-  tags = map(\n-    \"Name\", \"${var.cluster-name}/SubnetPrivate-${data.aws_availability_zones.available.names[count.index]}\",\n-    \"kubernetes.io/cluster/${var.cluster-name}\", \"shared\",\n-    \"kubernetes.io/role/internal-elb\", 1\n-  )\n-}\n-\n # Public subnets\n resource \"aws_subnet\" \"vb-public\" {\n   count = 3\n@@ -50,13 +35,6 @@ resource \"aws_subnet\" \"vb-public\" {\n   )\n }\n \n-resource \"aws_internet_gateway\" \"vb\" {\n-  vpc_id = aws_vpc.vb.id\n-  tags = {\n-    Name = \"${var.cluster-name}/InternetGateway\"\n-  }\n-}\n-\n resource \"aws_route_table\" \"vb-public\" {\n   vpc_id = aws_vpc.vb.id\n \n@@ -76,36 +54,3 @@ resource \"aws_route_table_association\" \"vb-public\" {\n   subnet_id      = aws_subnet.vb-public.*.id[count.index]\n   route_table_id = aws_route_table.vb-public.id\n }\n-\n-# NAT Gateway to allow traffic from private subnets to Internet via NAT gateway\n-resource \"aws_eip\" \"nat\" {\n-  depends_on = [aws_internet_gateway.vb]\n-  vpc        = true\n-}\n-\n-resource \"aws_nat_gateway\" \"vb\" {\n-  depends_on    = [aws_internet_gateway.vb]\n-  subnet_id     = aws_subnet.vb-public[0].id\n-  allocation_id = aws_eip.nat.id\n-}\n-\n-# Routing table for private subnets\n-resource \"aws_route_table\" \"vb-private\" {\n-  vpc_id = aws_vpc.vb.id\n-  tags = {\n-    Name = \"${var.cluster-name}/PrivateRouteTable\"\n-  }\n-}\n-\n-resource \"aws_route_table_association\" \"vb-private\" {\n-  count = 3\n-\n-  subnet_id      = aws_subnet.vb-private.*.id[count.index]\n-  route_table_id = aws_route_table.vb-private.id\n-}\n-\n-resource \"aws_route\" \"private_route\" {\n-  route_table_id         = aws_route_table.vb-private.id\n-  destination_cidr_block = \"0.0.0.0/0\"\n-  nat_gateway_id         = aws_nat_gateway.vb.id\n-}"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/openaustralia/infrastructure/commit/63ee190c0ae1832bb72681e1e4b1b14a9367b4bb",
    "files": [
      {
        "filename": "terraform/electionleaflets.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -39,7 +39,7 @@ resource \"aws_ebs_volume\" \"electionleaflets_data\" {\n   # on kedumba.\n   # After loading real data in we upped it to 20GB\n   size = 20\n-  type = \"gp2\"\n+  type = \"gp3\"\n   tags = {\n     Name = \"electionleaflets_data\"\n   }"
      },
      {
        "filename": "terraform/openaustralia.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -33,7 +33,7 @@ resource \"aws_ebs_volume\" \"openaustralia_data\" {\n   # on kedumba.\n   # After loading real data in we upped it to 20GB\n   size = 20\n-  type = \"gp2\"\n+  type = \"gp3\"\n   tags = {\n     Name = \"openaustralia_data\"\n   }"
      },
      {
        "filename": "terraform/righttoknow.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -32,7 +32,7 @@ resource \"aws_ebs_volume\" \"righttoknow_data\" {\n   availability_zone = \"ap-southeast-2c\"\n \n   size = 120\n-  type = \"gp2\"\n+  type = \"gp3\"\n   tags = {\n     Name = \"righttoknow_data\"\n   }"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Amberoat/didactic-octo-eureka/commit/494706fc421a0ddda47f7d543b7e7a296c378c26",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -17,8 +17,8 @@ resource \"azurerm_kubernetes_cluster\" \"playground_aks\" {\n \n   default_node_pool {\n     name            = \"default\"\n-    node_count      = 2\n-    vm_size         = \"Standard_D2a_v4\"\n+    node_count      = 3\n+    vm_size         = \"Standard_B2s\"\n     os_disk_size_gb = 30\n   }\n "
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/phillhocking/aws-ubuntu-irssi/commit/1532e0c298ec4f8d7d749a884f7c46f2a2cf53d3",
    "files": [
      {
        "filename": "main.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -23,9 +23,15 @@ data \"aws_ami\" \"ubuntu\" {\n resource \"aws_instance\" \"irssi_dev\" {\n   ami                    = data.aws_ami.ubuntu.id\n   instance_type          = \"t4g.nano\"\n+  cpu_core_count         = \"1\"\n   key_name               = var.key_name\n   vpc_security_group_ids = [aws_security_group.irssi_dev.id]\n   user_data              = templatefile(\"${path.module}/cloudinit.yml\", { irc_username = var.irc_username, gh_username = var.gh_username, irssi_gist = var.irssi_gist })\n+  root_block_device { \n+            volume_type = \"standard\"\n+            volume_size = 8\n+        }\n+    \n   tags = {\n     Name = \"irssi-dev\"\n   }"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cds-snc/cloud-based-sensor/commit/ccd141993815d0b1f444d12bbd2bdcdd9548e20e",
    "files": [
      {
        "filename": "terragrunt/aws/satellite_bucket/s3.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -2,7 +2,7 @@\n # Satellite bucket and access logging\n #\n module \"satellite_bucket\" {\n-  source            = \"github.com/cds-snc/terraform-modules?ref=v1.0.4//S3\"\n+  source            = \"github.com/cds-snc/terraform-modules?ref=v1.0.8//S3\"\n   bucket_name       = var.satellite_bucket_name\n   billing_tag_value = var.billing_tag_value\n \n@@ -19,7 +19,7 @@ module \"satellite_bucket\" {\n       id      = \"delete-old-objects\"\n       enabled = true\n       expiration = {\n-        days = 90\n+        days = 14\n       }\n     }\n   ]"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cds-snc/cloud-based-sensor/commit/10bb572d477197bd3874532bfd364de1cb496d05",
    "files": [
      {
        "filename": ".github/workflows/terragrunt-apply-central.yml",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -8,6 +8,7 @@ on:\n     paths:\n       - \".github/workflows/terragrunt-apply-central.yml\"\n       - \"satellite_accounts\"\n+      - \"terragrunt/aws/alarms/**\"\n       - \"terragrunt/aws/central_account/**\"\n       - \"terragrunt/aws/cloudtrail/**\"\n       - \"terragrunt/env/central/**\"\n@@ -16,11 +17,11 @@ on:\n \n env:\n   AWS_REGION: ca-central-1\n-  CONFTEST_VERSION: 0.27.0\n   TERRAFORM_VERSION: 1.1.4\n   TERRAGRUNT_VERSION: 0.36.0\n-  TF_VAR_cbs_principal_arn: ${{ secrets.CBS_PRINCIPAL_ARN }}\n   TF_INPUT: false\n+  TF_VAR_cbs_principal_arn: ${{ secrets.CBS_PRINCIPAL_ARN }}\n+  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_CBS }}\n \n permissions:\n   id-token: write\n@@ -52,19 +53,13 @@ jobs:\n           chmod +x bin/*\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n \n-      - name: Install Conftest\n-        run: |\n-          wget \"https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz\" \\\n-          && wget \"https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/checksums.txt\" \\\n-          && grep 'Linux_x86_64.tar.gz' < checksums.txt | sha256sum --check  --status \\\n-          && tar -zxvf \"conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz\" conftest \\\n-          && mv conftest /usr/local/bin \\\n-          && rm \"conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz\" checksums.txt\n-\n       - uses: cds-snc/paths-filter@v2.10.3\n         id: filter\n         with:\n           filters: |\n+            alarms:\n+              - 'terragrunt/aws/alarms/**'\n+              - 'terragrunt/env/central/alarms/**'\n             central_account:\n               - 'terragrunt/aws/central_account/**'\n               - 'terragrunt/env/central/central_account/**'\n@@ -92,4 +87,9 @@ jobs:\n       - name: Terragrunt apply cloudtrail\n         if: ${{ steps.filter.outputs.cloudtrail == 'true' || steps.filter.outputs.common == 'true' }}\n         working-directory: \"terragrunt/env/central/cloudtrail\"\n-        run: terragrunt apply --terragrunt-non-interactive -auto-approve\n\\ No newline at end of file\n+        run: terragrunt apply --terragrunt-non-interactive -auto-approve\n+\n+      - name: Terragrunt apply alarms\n+        if: ${{ steps.filter.outputs.alarms == 'true' || steps.filter.outputs.common == 'true' }}\n+        working-directory: \"terragrunt/env/central/alarms\"\n+        run: terragrunt apply --terragrunt-non-interactive -auto-approve        \n\\ No newline at end of file"
      },
      {
        "filename": ".github/workflows/terragrunt-apply-satellite.yml",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -8,6 +8,7 @@ on:\n     paths:\n       - \".github/workflows/terragrunt-apply-satellite.yml\"\n       - \"satellite_accounts\"\n+      - \"terragrunt/aws/alarms/**\"      \n       - \"terragrunt/aws/cloudtrail/**\"\n       - \"terragrunt/aws/config/**\"\n       - \"terragrunt/aws/satellite_bucket/**\"\n@@ -17,10 +18,10 @@ on:\n \n env:\n   AWS_REGION: ca-central-1\n-  CONFTEST_VERSION: 0.27.0\n   TERRAFORM_VERSION: 1.1.4\n   TERRAGRUNT_VERSION: 0.36.0\n   TF_INPUT: false\n+  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_CBS }}\n \n permissions:\n   id-token: write\n@@ -60,19 +61,13 @@ jobs:\n           chmod +x bin/*\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n \n-      - name: Install Conftest\n-        run: |\n-          wget \"https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz\" \\\n-          && wget \"https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/checksums.txt\" \\\n-          && grep 'Linux_x86_64.tar.gz' < checksums.txt | sha256sum --check  --status \\\n-          && tar -zxvf \"conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz\" conftest \\\n-          && mv conftest /usr/local/bin \\\n-          && rm \"conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz\" checksums.txt\n-\n       - uses: cds-snc/paths-filter@v2.10.3\n         id: filter\n         with:\n           filters: |\n+            alarms:\n+              - 'terragrunt/aws/alarms/**'\n+              - 'terragrunt/env/satellite/alarms/**'          \n             cloudtrail:\n               - 'terragrunt/aws/cloudtrail/**'\n               - 'terragrunt/env/satellite/cloudtrail/**'\n@@ -115,4 +110,9 @@ jobs:\n         working-directory: \"terragrunt/env/satellite/config\"\n         run: terragrunt apply --terragrunt-non-interactive -auto-approve\n \n+      - name: Terragrunt apply alarms\n+        if: ${{ steps.filter.outputs.alarms == 'true' || steps.filter.outputs.common == 'true' }}\n+        working-directory: \"terragrunt/env/satellite/alarms\"\n+        run: terragrunt apply --terragrunt-non-interactive -auto-approve        \n+\n "
      },
      {
        "filename": ".github/workflows/terragrunt-plan-central.yml",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "status": "modified",
        "patch": "@@ -6,6 +6,7 @@ on:\n     paths:\n       - \".github/workflows/terragrunt-plan-central.yml\"\n       - \"satellite_accounts\"\n+      - \"terragrunt/aws/alarms/**\"\n       - \"terragrunt/aws/central_account/**\"\n       - \"terragrunt/aws/cloudtrail/**\"\n       - \"terragrunt/env/central/**\"\n@@ -17,8 +18,9 @@ env:\n   CONFTEST_VERSION: 0.27.0\n   TERRAFORM_VERSION: 1.1.4\n   TERRAGRUNT_VERSION: 0.36.0\n-  TF_VAR_cbs_principal_arn: ${{ secrets.CBS_PRINCIPAL_ARN }}\n   TF_INPUT: false\n+  TF_VAR_cbs_principal_arn: ${{ secrets.CBS_PRINCIPAL_ARN }}\n+  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_CBS }}\n \n permissions:\n   id-token: write\n@@ -63,6 +65,9 @@ jobs:\n         id: filter\n         with:\n           filters: |\n+            alarms:\n+              - 'terragrunt/aws/alarms/**'\n+              - 'terragrunt/env/central/alarms/**'\n             central_account:\n               - 'terragrunt/aws/central_account/**'\n               - 'terragrunt/env/central/central_account/**'\n@@ -100,4 +105,14 @@ jobs:\n           comment-delete: \"true\"\n           comment-title: \"Central CloudTrail\"\n           github-token: \"${{ secrets.GITHUB_TOKEN }}\"\n-          terragrunt: \"true\"          \n\\ No newline at end of file\n+          terragrunt: \"true\"\n+\n+      - name: Terragrunt plan alarms\n+        if: ${{ steps.filter.outputs.alarms == 'true' || steps.filter.outputs.common == 'true' }}\n+        uses: cds-snc/terraform-plan@v2\n+        with:\n+          directory: \"terragrunt/env/central/alarms\"\n+          comment-delete: \"true\"\n+          comment-title: \"Central Alarms\"\n+          github-token: \"${{ secrets.GITHUB_TOKEN }}\"\n+          terragrunt: \"true\"\n\\ No newline at end of file"
      },
      {
        "filename": ".github/workflows/terragrunt-plan-satellite.yml",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -6,6 +6,7 @@ on:\n     paths:\n       - \".github/workflows/terragrunt-plan-satellite.yml\"\n       - \"satellite_accounts\"\n+      - \"terragrunt/aws/alarms/**\"      \n       - \"terragrunt/aws/cloudtrail/**\"\n       - \"terragrunt/aws/config/**\"\n       - \"terragrunt/aws/satellite_bucket/**\"\n@@ -19,6 +20,7 @@ env:\n   TERRAFORM_VERSION: 1.1.4\n   TERRAGRUNT_VERSION: 0.36.0\n   TF_INPUT: false\n+  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_CBS }}\n \n permissions:\n   id-token: write\n@@ -71,6 +73,9 @@ jobs:\n         id: filter\n         with:\n           filters: |\n+            alarms:\n+              - 'terragrunt/aws/alarms/**'\n+              - 'terragrunt/env/satellite/alarms/**'          \n             cloudtrail:\n               - 'terragrunt/aws/cloudtrail/**'\n               - 'terragrunt/env/satellite/cloudtrail/**'\n@@ -127,3 +132,13 @@ jobs:\n           comment-title: \"${{ matrix.account }}: ConfigRules\"\n           github-token: \"${{ secrets.GITHUB_TOKEN }}\"\n           terragrunt: \"true\"\n+\n+      - name: Terragrunt plan alarms\n+        if: ${{ steps.filter.outputs.alarms == 'true' || steps.filter.outputs.common == 'true' }}\n+        uses: cds-snc/terraform-plan@v2\n+        with:\n+          directory: \"terragrunt/env/satellite/alarms\"\n+          comment-delete: \"true\"\n+          comment-title: \"${{ matrix.account }}: Alarms\"\n+          github-token: \"${{ secrets.GITHUB_TOKEN }}\"\n+          terragrunt: \"true\"          "
      },
      {
        "filename": "terragrunt/aws/alarms/billing_alarm.tf",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "status": "added",
        "patch": "@@ -0,0 +1,47 @@\n+# EstimatedCharges metrics are published every ~6 hours\n+resource \"aws_cloudwatch_metric_alarm\" \"billing_change_over_threshold\" {\n+  provider = aws.us-east-1\n+\n+  alarm_name          = \"BillingChangeOverThreshold\"\n+  comparison_operator = \"GreaterThanThreshold\"\n+  evaluation_periods  = \"1\"\n+  threshold           = var.billing_change_percent_threshold\n+  alarm_description   = \"Estimated billing change greater than threshold in 6 hour period\"\n+  treat_missing_data  = \"notBreaching\"\n+  alarm_actions       = [aws_sns_topic.cloudwatch_alarm_us_east.arn]\n+  ok_actions          = [aws_sns_topic.cloudwatch_alarm_us_east.arn]\n+\n+  metric_query {\n+    id    = \"current\"\n+    label = \"Current charges\"\n+\n+    metric {\n+      metric_name = \"EstimatedCharges\"\n+      namespace   = \"AWS/Billing\"\n+      period      = \"21600\"\n+      stat        = \"Maximum\"\n+      dimensions = {\n+        Currency = \"USD\"\n+      }\n+    }\n+  }\n+\n+  metric_query {\n+    id         = \"delta\"\n+    expression = \"RATE(current) * PERIOD(current)\"\n+    label      = \"Delta\"\n+  }\n+\n+  metric_query {\n+    id         = \"previous\"\n+    expression = \"current - delta\"\n+    label      = \"Previous charges\"\n+  }\n+\n+  metric_query {\n+    id          = \"percent_change\"\n+    expression  = \"ABS(100 * delta/previous)\"\n+    label       = \"Percent change\"\n+    return_data = \"true\"\n+  }\n+}"
      },
      {
        "filename": "terragrunt/aws/alarms/inputs.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+variable \"billing_change_percent_threshold\" {\n+  description = \"Maximum billing percentage change between current and previous period.\"\n+  type        = string\n+}\n+\n+variable \"slack_webhook_url\" {\n+  description = \"Slack webhook used by the Notify Slack Lambda function.\"\n+  type        = string\n+  sensitive   = true\n+}"
      },
      {
        "filename": "terragrunt/aws/alarms/kms.tf",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "status": "added",
        "patch": "@@ -0,0 +1,44 @@\n+#\n+# KMS: SNS topic encryption keys\n+# A CMK is required so we can apply a policy that allows CloudWatch to use it\n+resource \"aws_kms_key\" \"sns_cloudwatch_us_east\" {\n+  provider = aws.us-east-1\n+\n+  # checkov:skip=CKV_AWS_7: key rotation not required for CloudWatch SNS topic's messages\n+  description = \"KMS key for CloudWatch SNS topic\"\n+  policy      = data.aws_iam_policy_document.sns_cloudwatch.json\n+\n+  tags = {\n+    (var.billing_tag_key) = var.billing_tag_value\n+    Terraform             = true\n+  }\n+}\n+\n+data \"aws_iam_policy_document\" \"sns_cloudwatch\" {\n+  # checkov:skip=CKV_AWS_109: `resources = [\"*\"]` identifies the KMS key to which the key policy is attached\n+  # checkov:skip=CKV_AWS_111: `resources = [\"*\"]` identifies the KMS key to which the key policy is attached\n+  statement {\n+    effect    = \"Allow\"\n+    resources = [\"*\"]\n+    actions   = [\"kms:*\"]\n+\n+    principals {\n+      type        = \"AWS\"\n+      identifiers = [\"arn:aws:iam::${var.account_id}:root\"]\n+    }\n+  }\n+\n+  statement {\n+    effect    = \"Allow\"\n+    resources = [\"*\"]\n+    actions = [\n+      \"kms:Decrypt\",\n+      \"kms:GenerateDataKey*\",\n+    ]\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"cloudwatch.amazonaws.com\"]\n+    }\n+  }\n+}"
      },
      {
        "filename": "terragrunt/aws/alarms/sns.tf",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "status": "added",
        "patch": "@@ -0,0 +1,34 @@\n+#\n+# SNS: topic, subscription and Lambda that posts to Slack\n+#\n+resource \"aws_sns_topic\" \"cloudwatch_alarm_us_east\" {\n+  provider = aws.us-east-1\n+\n+  name              = \"cloudwatch_alarm_cbs\"\n+  kms_master_key_id = aws_kms_key.sns_cloudwatch_us_east.id\n+\n+  tags = {\n+    (var.billing_tag_key) = var.billing_tag_value\n+    Terraform             = true\n+  }\n+}\n+\n+resource \"aws_sns_topic_subscription\" \"cloudwatch_alarm_us_east\" {\n+  provider = aws.us-east-1\n+\n+  topic_arn = aws_sns_topic.cloudwatch_alarm_us_east.arn\n+  protocol  = \"lambda\"\n+  endpoint  = module.notify_slack.lambda_arn\n+}\n+\n+module \"notify_slack\" {\n+  source = \"github.com/cds-snc/terraform-modules?ref=v1.0.10//notify_slack\"\n+\n+  function_name     = \"notify_slack_cbs\"\n+  project_name      = var.account_id\n+  slack_webhook_url = var.slack_webhook_url\n+  sns_topic_arns    = [aws_sns_topic.cloudwatch_alarm_us_east.arn]\n+\n+  billing_tag_key   = var.billing_tag_key\n+  billing_tag_value = var.billing_tag_value\n+}"
      },
      {
        "filename": "terragrunt/env/central/alarms/.terraform.lock.hcl",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "status": "added",
        "patch": "@@ -0,0 +1,39 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/archive\" {\n+  version = \"2.2.0\"\n+  hashes = [\n+    \"h1:CIWi5G6ob7p2wWoThRQbOB8AbmFlCzp7Ka81hR3cVp0=\",\n+    \"zh:06bd875932288f235c16e2237142b493c2c2b6aba0e82e8c85068332a8d2a29e\",\n+    \"zh:0c681b481372afcaefddacc7ccdf1d3bb3a0c0d4678a526bc8b02d0c331479bc\",\n+    \"zh:100fc5b3fc01ea463533d7bbfb01cb7113947a969a4ec12e27f5b2be49884d6c\",\n+    \"zh:55c0d7ddddbd0a46d57c51fcfa9b91f14eed081a45101dbfc7fd9d2278aa1403\",\n+    \"zh:73a5dd68379119167934c48afa1101b09abad2deb436cd5c446733e705869d6b\",\n+    \"zh:841fc4ac6dc3479981330974d44ad2341deada8a5ff9e3b1b4510702dfbdbed9\",\n+    \"zh:91be62c9b41edb137f7f835491183628d484e9d6efa82fcb75cfa538c92791c5\",\n+    \"zh:acd5f442bd88d67eb948b18dc2ed421c6c3faee62d3a12200e442bfff0aa7d8b\",\n+    \"zh:ad5720da5524641ad718a565694821be5f61f68f1c3c5d2cfa24426b8e774bef\",\n+    \"zh:e63f12ea938520b3f83634fc29da28d92eed5cfbc5cc8ca08281a6a9c36cca65\",\n+    \"zh:f6542918faa115df46474a36aabb4c3899650bea036b5f8a5e296be6f8f25767\",\n+  ]\n+}\n+\n+provider \"registry.terraform.io/hashicorp/aws\" {\n+  version     = \"3.74.3\"\n+  constraints = \"~> 3.0\"\n+  hashes = [\n+    \"h1:h4TYqgRKTuuWfZtxJnEGcs/NxGCaxZ4jr0IwTfgZDRM=\",\n+    \"zh:25401cd4667d0496caf7e92e74ecef7c98cf74465570705cda2207770c27ff6c\",\n+    \"zh:2d154527a9b2585f72fc5eceac635257e3f50f68de8a519e71c795d5166a0a22\",\n+    \"zh:499fa5201804a5a33a90d683147fb2f81da91bfcd8ed20293f88f6f39cedbf97\",\n+    \"zh:730284250fd949a59afb6935b3a68a33709d5a78b686fa98f351ad32c919cfc3\",\n+    \"zh:7461ebd6fb35900d620cfa3f42126d988ea1e604ee3828d1c64d5727f908bd26\",\n+    \"zh:7c85743b31c7459f8e74aaa98471ba82c54517eb908603411808a12982d89b1c\",\n+    \"zh:8ed977b7fb97de624f5414b08cab36fd973a624072e0e9082c0c822e0864c7b9\",\n+    \"zh:94ae7313bb0b425d4007a0b70601a337972c4f0f7a323487acf69215e74b4425\",\n+    \"zh:b5a1589672d709da725a72c46d28bf5b2dea71325f6e0b44a0049f644cd09eba\",\n+    \"zh:c7e8e7ce59e4578416557fc2f138137af3c8365ac3e34f0ff5166323c7d641a1\",\n+    \"zh:ccf2e286b207e749fff76bb4075deddb9e7e237936d8654f34828c54e7035455\",\n+  ]\n+}"
      },
      {
        "filename": "terragrunt/env/central/alarms/terragrunt.hcl",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+terraform {\n+  source = \"../../../aws//alarms\"\n+}\n+\n+inputs = {\n+  billing_change_percent_threshold = \"10\"\n+}\n+\n+include {\n+  path = find_in_parent_folders()\n+  expose = true\n+}"
      },
      {
        "filename": "terragrunt/env/common/provider.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -10,3 +10,8 @@ terraform {\n provider \"aws\" {\n   region = var.region\n }\n+\n+provider \"aws\" {\n+  alias  = \"us-east-1\"\n+  region = \"us-east-1\"\n+}"
      },
      {
        "filename": "terragrunt/env/satellite/alarms/.terraform.lock.hcl",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "status": "added",
        "patch": "@@ -0,0 +1,39 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/archive\" {\n+  version = \"2.2.0\"\n+  hashes = [\n+    \"h1:CIWi5G6ob7p2wWoThRQbOB8AbmFlCzp7Ka81hR3cVp0=\",\n+    \"zh:06bd875932288f235c16e2237142b493c2c2b6aba0e82e8c85068332a8d2a29e\",\n+    \"zh:0c681b481372afcaefddacc7ccdf1d3bb3a0c0d4678a526bc8b02d0c331479bc\",\n+    \"zh:100fc5b3fc01ea463533d7bbfb01cb7113947a969a4ec12e27f5b2be49884d6c\",\n+    \"zh:55c0d7ddddbd0a46d57c51fcfa9b91f14eed081a45101dbfc7fd9d2278aa1403\",\n+    \"zh:73a5dd68379119167934c48afa1101b09abad2deb436cd5c446733e705869d6b\",\n+    \"zh:841fc4ac6dc3479981330974d44ad2341deada8a5ff9e3b1b4510702dfbdbed9\",\n+    \"zh:91be62c9b41edb137f7f835491183628d484e9d6efa82fcb75cfa538c92791c5\",\n+    \"zh:acd5f442bd88d67eb948b18dc2ed421c6c3faee62d3a12200e442bfff0aa7d8b\",\n+    \"zh:ad5720da5524641ad718a565694821be5f61f68f1c3c5d2cfa24426b8e774bef\",\n+    \"zh:e63f12ea938520b3f83634fc29da28d92eed5cfbc5cc8ca08281a6a9c36cca65\",\n+    \"zh:f6542918faa115df46474a36aabb4c3899650bea036b5f8a5e296be6f8f25767\",\n+  ]\n+}\n+\n+provider \"registry.terraform.io/hashicorp/aws\" {\n+  version     = \"3.74.3\"\n+  constraints = \"~> 3.0\"\n+  hashes = [\n+    \"h1:h4TYqgRKTuuWfZtxJnEGcs/NxGCaxZ4jr0IwTfgZDRM=\",\n+    \"zh:25401cd4667d0496caf7e92e74ecef7c98cf74465570705cda2207770c27ff6c\",\n+    \"zh:2d154527a9b2585f72fc5eceac635257e3f50f68de8a519e71c795d5166a0a22\",\n+    \"zh:499fa5201804a5a33a90d683147fb2f81da91bfcd8ed20293f88f6f39cedbf97\",\n+    \"zh:730284250fd949a59afb6935b3a68a33709d5a78b686fa98f351ad32c919cfc3\",\n+    \"zh:7461ebd6fb35900d620cfa3f42126d988ea1e604ee3828d1c64d5727f908bd26\",\n+    \"zh:7c85743b31c7459f8e74aaa98471ba82c54517eb908603411808a12982d89b1c\",\n+    \"zh:8ed977b7fb97de624f5414b08cab36fd973a624072e0e9082c0c822e0864c7b9\",\n+    \"zh:94ae7313bb0b425d4007a0b70601a337972c4f0f7a323487acf69215e74b4425\",\n+    \"zh:b5a1589672d709da725a72c46d28bf5b2dea71325f6e0b44a0049f644cd09eba\",\n+    \"zh:c7e8e7ce59e4578416557fc2f138137af3c8365ac3e34f0ff5166323c7d641a1\",\n+    \"zh:ccf2e286b207e749fff76bb4075deddb9e7e237936d8654f34828c54e7035455\",\n+  ]\n+}"
      },
      {
        "filename": "terragrunt/env/satellite/alarms/terragrunt.hcl",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+terraform {\n+  source = \"../../../aws//alarms\"\n+}\n+\n+inputs = {\n+  billing_change_percent_threshold = \"10\"\n+}\n+\n+include {\n+  path = find_in_parent_folders()\n+  expose = true\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cds-snc/cloud-based-sensor/commit/ad9ba03731ec0520164bb23a90968f2100dca517",
    "files": [
      {
        "filename": "terragrunt/aws/alarms/billing_alarm.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -3,16 +3,16 @@ resource \"aws_cloudwatch_metric_alarm\" \"billing_change_over_threshold\" {\n   provider = aws.us-east-1\n \n   alarm_name          = \"CbsBillingChangeOverThreshold\"\n-  comparison_operator = \"LessThanLowerOrGreaterThanUpperThreshold\"\n-  evaluation_periods  = \"1\"\n+  comparison_operator = \"GreaterThanUpperThreshold\"\n+  evaluation_periods  = \"2\"\n   threshold_metric_id = \"anomaly\"\n   alarm_description   = \"Estimated billing anomaly\"\n   treat_missing_data  = \"notBreaching\"\n   alarm_actions       = [aws_sns_topic.cloudwatch_alarm_us_east.arn]\n \n   metric_query {\n     id          = \"anomaly\"\n-    expression  = \"ANOMALY_DETECTION_BAND(current, 3)\"\n+    expression  = \"ANOMALY_DETECTION_BAND(current, 4)\"\n     label       = \"Billing (Expected)\"\n     return_data = \"true\"\n   }\n@@ -25,7 +25,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"billing_change_over_threshold\" {\n     metric {\n       metric_name = \"EstimatedCharges\"\n       namespace   = \"AWS/Billing\"\n-      period      = \"21600\"\n+      period      = \"43200\"\n       stat        = \"Average\"\n       dimensions = {\n         Currency = \"USD\""
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/sa-proj/proj-azure/commit/baa5b2d85892a85403c5dac807c891bb1b7b6dc7",
    "files": [
      {
        "filename": "az-terraform-sql-ha-iaas/sqlserver-1.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -50,7 +50,7 @@ resource \"azurerm_virtual_machine_data_disk_attachment\" \"sql-1-vm-datadisk\" {\n }\n resource \"azurerm_mssql_virtual_machine\" \"sqlvm-1\" {\n     virtual_machine_id               = azurerm_windows_virtual_machine.sql-1-vm.id\n-    sql_license_type                 = \"AHUB\"\n+    sql_license_type                 = \"PAYG\"\n     r_services_enabled               = false\n     sql_connectivity_port            = 1433\n     sql_connectivity_type            = \"PRIVATE\""
      },
      {
        "filename": "az-terraform-sql-ha-iaas/sqlserver-2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -50,7 +50,7 @@ resource \"azurerm_virtual_machine_data_disk_attachment\" \"sql-2-vm-datadisk\" {\n }\n resource \"azurerm_mssql_virtual_machine\" \"sqlvm-2\" {\n     virtual_machine_id               = azurerm_windows_virtual_machine.sql-2-vm.id\n-    sql_license_type                 = \"AHUB\"\n+    sql_license_type                 = \"PAYG\"\n     r_services_enabled               = false\n     sql_connectivity_port            = 1433\n     sql_connectivity_type            = \"PRIVATE\""
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/emeloibmco/Schematics-Classic-Infrastructure-BareMetal/commit/2d2b279e98ba4b58b7931fbf7f7869d5d38ac305",
    "files": [
      {
        "filename": "Bare-Metal-SAP-HourlyBilling/README.md",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "status": "added",
        "patch": "@@ -0,0 +1,50 @@\n+# BareMetal Hourly Billing Guide - Schematics IBM Cloud\n+\n+_Ejemplo de BareMetal con facturaci\u00f3n por **HORAS** en Infraestructura cl\u00e1sica usando IaC en Schematics con el provvider de Terraform_\n+\n+<img width=\"940\" alt=\"BareMetal-Architecture\" src=\"images/baremetal.JPG\">\n+\n+## Comenzando \ud83d\ude80\n+\n+_Instrucciones_\n+\n+Para el aprovisionamiento de un BareMetal se debe contar con minimo 3 archivos en GITHUB los cuales son:\n+- variable.tf = Contiene las variables de llaves y nombres unicos que el cliente introduce en su servicio\n+- recursos.tf = Solicita aprovisionamiento del servicio que se requiere (en este caso BareMetal)\n+- provider.tf = Instalador de provider IBM sobre Schematics\n+\n+\n+### variables \ud83d\udccb\n+\n+El aprovisionamiento de un BareMetal para facturaci\u00f3n por horas con el provider terraform requiere de por lo menos las siguientes variables:\n+\n+| Variable | Informaci\u00f3n |\n+| ------------- | ------------- |\n+| **ibmcloud_apikey**  | [API key](https://cloud.ibm.com/docs/iam?topic=iam-userapikey) unica del usuario que se requiere para aprovisionamiento de recursos |\n+| **ibm_region**  | Region en la que se encuentra ubicado el datacenter donde se aprovisionar\u00e1 el recurso |\n+| **resource_group** | Grupo de recursos en cual se aprovisiona el recurso |\n+| **hostname** | Nombre del BareMetal a provisionar _No mayusculas_ |\n+| **os_reference** | Referencia del sistema operativo a instalar sobre el BareMetal (Depende de la capacidad del procesador elegida|\n+|**datacenter**| [Datacenter](https://api.softlayer.com/rest/v3/SoftLayer_Hardware/getCreateObjectOptions.json) en el cual se aprovisionar\u00e1 el BareMetal |\n+| **domain** | Dominio del Baremetal \u00b4nombre del dominio\u00b4.cloud.com |\n+| **network_speed** | Velocidad de la red |\n+| **private_network** | Si se requiere de un enlace a la red publica se coloca _false_ de lo contrario _true_ |\n+| **notes** | Notas de informaci\u00f3n del BareMetal |\n+| **fixed_config_preset** | [Procesador del BareMetal](https://api.softlayer.com/rest/v3/SoftLayer_Hardware/getCreateObjectOptions.json) Cores y memoria RAM  |\n+\n+\n+Para acceder a informaci\u00f3n de **api softlayer** se requiere de la [APIkey-ClassicInfrastructure](https://cloud.ibm.com/docs/iam?topic=iam-classic_keys&locale=es) y el usuario de la cuenta \n+\n+\n+### Pasos para el despliegue en Schematics \ud83d\udd27\n+\n+Se debe dirigir al simbolo de ![](images/menu.JPG) en donde encontrar\u00e1 la opci\u00f3n de **Schematics** una vez alli se crear\u00e1 un nuevo workspace donde se contar\u00e1 con la siguiente pesta\u00f1a:\n+<img width=\"945\" alt=\"workspace\" src=\"images/workspace.JPG\">\n+\n+En el espacio sobremarcado con rojo se debe pegar el link del repositorio y de ser necesario en la parte de abajo el Token para permisos de acceso. Se presiona el bot\u00f3n sobremarcado con amarillo para adquirir las variables a rellenar. Luego de rellenarlas se debe crear el workspace. En caso de realizar el procedimiento de forma correcta se contar\u00e1 con la siguiente pesta\u00f1a:\n+<img width=\"945\" alt=\"workspace\" src=\"images/workspace1.JPG\">\n+\n+Se debe generar el plan con el bot\u00f3n que aparece en pantalla y de generarse correctamente se podr\u00e1 aplicar el plan. _Solo hasta aplicar el plan se va a generar facturaci\u00f3n_\n+\n+---\n+#### Autores: IBM Cloud Tech Sales"
      },
      {
        "filename": "Bare-Metal-SAP-HourlyBilling/bare_metal.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+resource \"ibm_compute_bare_metal\" \"baremetal01\" {\n+  hostname                   = \"${var.bm_hostname}\"\n+  domain                     = \"${var.bm_domain}\"\n+  os_reference_code          = \"${var.bm_os_reference_code}\"\n+  datacenter                 = \"${var.datacenter}\"\n+  network_speed              = \"${var.bm_network_speed}\"\n+  hourly_billing             = \"${var.hourly_billing}\"\n+  private_network_only       = \"${var.private_network}\"\n+  fixed_config_preset        = \"${var.processor}\"\n+  notes                      = \"${var.notes_bm}\"\n+\n+}"
      },
      {
        "filename": "Bare-Metal-SAP-HourlyBilling/images/baremetal.JPG",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Bare-Metal-SAP-HourlyBilling/images/menu.JPG",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Bare-Metal-SAP-HourlyBilling/images/workspace.JPG",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Bare-Metal-SAP-HourlyBilling/images/workspace1.JPG",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Bare-Metal-SAP-HourlyBilling/provider.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+provider ibm {\n+  ibmcloud_api_key      = \"${var.ibmcloud_apikey}\"\n+  region                = \"${var.ibm_region}\"\n+  generation            = 1\n+  ibmcloud_timeout      = 60\n+}\n+\n+data ibm_resource_group resource_group {\n+  name = \"${var.resource_group}\"\n+  }"
      },
      {
        "filename": "Bare-Metal-SAP-HourlyBilling/variables.tf",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "status": "added",
        "patch": "@@ -0,0 +1,49 @@\n+variable ibmcloud_apikey {\n+  description = \"The IBM Cloud platform API key needed to deploy IAM enabled resources\"\n+}\n+\n+variable ibm_region {\n+  description = \"IBM Cloud region where all resources will be deployed\"\n+  default     = \"us-south\"\n+}\n+\n+variable resource_group {\n+  description = \"Name of resource group to provision resources\"\n+  default     = \"Default\"\n+}\n+\n+variable \"bm_hostname\" {\n+  default = \"BareMetal01\"\n+}\n+\n+variable \"bm_os_reference_code\" {\n+  description = \"REDHAT_6_64, CENTOS_6_32, UBUNTU_12_64, CENTOS_6_64, DEBIAN_8_32, WIN_2008-STD-R2-SP1_64, UBUNTU_12_32, CENTOS_7_64, WIN_2003-STD-SP2-5_64, WIN_2012-STD_64, UBUNTU_16_64, WIN_2016-STD_64, DEBIAN_9_64, WIN_2019-STD_64, WIN_2012-STD-R2_64, UBUNTU_14_32, UBUNTU_18_64 ... RedHat is only avaliable in monthly billing\" \n+  default = \"No_OS\"\n+}\n+\n+variable \"datacenter\" {\n+  default = \"dal06\"\n+}\n+\n+\n+variable \"bm_domain\" {\n+  default = \"baremetal-sap01.ibm.com\"\n+}\n+\n+variable \"bm_network_speed\" {\n+  default = 100\n+}\n+\n+variable \"private_network\" {\n+  description = \"true or false\"\n+  default = \"false\"\n+}\n+\n+\n+variable \"notes_bm\" {\n+  default = \"test\"\n+}\n+\n+variable \"hourly_billing\" {\n+  default = \"true\"\n+}"
      }
    ],
    "existing_codes": [
      "billing_mode",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/robertdebock/terraform-aws-vault/commit/e3b6520960a88aacbf03339dc1368f680a8bee9a",
    "files": [
      {
        "filename": "locals.tf",
        "additions": 3,
        "deletions": 18,
        "changes": 21,
        "status": "modified",
        "patch": "@@ -2,7 +2,7 @@ locals {\n   # A map from `size` to `instance_type`.\n   _instance_type = {\n     custom      = var.instance_type\n-    development = \"t3.micro\"\n+    development = \"t4g.nano\"\n     minimum     = \"m5.large\"\n     small       = \"m5.xlarge\"\n     large       = \"m5.2xlarge\"\n@@ -70,19 +70,6 @@ locals {\n \n   # The instance_type can be of the type \"x86_64\" or \"arm64\". This mapping sets the correct pattern to find an ami.\n   _ami_pattern = {\n-    a1   = \"amzn2-ami-hvm-*-arm64-gp2\"\n-    m4   = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    m5   = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    m5a  = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    m5n  = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    m5zn = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    m6g  = \"amzn2-ami-hvm-*-arm64-gp2\"\n-    m6i  = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    m6a  = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    t2   = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    t3   = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    t3a  = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    t4g  = \"amzn2-ami-hvm-*-arm64-gp2\"\n     a1      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n     c1      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n     c3      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n@@ -116,9 +103,9 @@ locals {\n     i2      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n     i3      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n     i3en    = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    im4gn   = \"amzn2-ami-hvm-*-x86_64-ebs\"\n+    im4gn   = \"amzn2-ami-hvm-*-arm64-gp2\"\n     inf1    = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    is4gen  = \"amzn2-ami-hvm-*-x86_64-ebs\"\n+    is4gen  = \"amzn2-ami-hvm-*-arm64-gp2\"\n     m1      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n     m2      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n     m3      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n@@ -134,8 +121,6 @@ locals {\n     m6g     = \"amzn2-ami-hvm-*-arm64-gp2\"\n     m6gd    = \"amzn2-ami-hvm-*-arm64-gp2\"\n     m6i     = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    mac1    = \"amzn2-ami-hvm-*-x86_64-ebs\"\n-    mac2    = \"amzn2-ami-hvm-*-x86_64-ebs\"\n     p2      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n     p3      = \"amzn2-ami-hvm-*-x86_64-ebs\"\n     p3dn    = \"amzn2-ami-hvm-*-x86_64-ebs\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/robertdebock/terraform-aws-vault/commit/757edca9d6fb2231ebdcf03ec611183c59eaf39b",
    "files": [
      {
        "filename": "main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -258,7 +258,7 @@ resource \"aws_security_group_rule\" \"internet\" {\n   type              = \"egress\"\n }\n \n-# Create a launch template.\n+# Create a launch configuration.\n resource \"aws_launch_configuration\" \"default\" {\n   associate_public_ip_address = true\n   iam_instance_profile        = aws_iam_instance_profile.default.name\n@@ -367,6 +367,7 @@ resource \"random_string\" \"default\" {\n \n # Create an auto scaling group.\n resource \"aws_autoscaling_group\" \"default\" {\n+  default_cooldown      = var.cooldown\n   desired_capacity      = var.amount\n   enabled_metrics       = [\"GroupDesiredCapacity\", \"GroupInServiceCapacity\", \"GroupPendingCapacity\", \"GroupMinSize\", \"GroupMaxSize\", \"GroupInServiceInstances\", \"GroupPendingInstances\", \"GroupStandbyInstances\", \"GroupStandbyCapacity\", \"GroupTerminatingCapacity\", \"GroupTerminatingInstances\", \"GroupTotalCapacity\", \"GroupTotalInstances\"]\n   health_check_type     = \"EC2\"\n@@ -435,7 +436,7 @@ resource \"aws_instance\" \"bastion\" {\n   count                       = var.bastion_host ? 1 : 0\n   ami                         = data.aws_ami.default.id\n   associate_public_ip_address = true\n-  instance_type               = local.instance_type\n+  instance_type               = \"t4g.nano\"\n   key_name                    = local.key_name\n   monitoring                  = true\n   subnet_id                   = tolist(local.aws_subnet_ids)[0]"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/e91e63/terraform-tekton-pipelines/commit/432683fcf7921a699f1557e89818b3bef5dba61a",
    "files": [
      {
        "filename": "modules/tasks/build/kaniko/main.tf",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -34,7 +34,6 @@ module \"main\" {\n     steps = [\n       {\n         args = [\n-          \"--cache=true\",\n           \"--context=${local.conf.working_dir}\",\n           \"--destination=$(params.${local.conf.labels.docker_image_url}):$(params.${local.conf.labels.version_tag})\",\n           \"--dockerfile=${local.conf.working_dir}/Dockerfile\","
      },
      {
        "filename": "modules/workflows/javascript/tests/scripts/npm-tests-e2e.sh",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -3,6 +3,8 @@ set -eu\n if [ \"${DEBUG:=}\" = true ]; then set -x; fi\n \n echo \"Starting $(basename \"${0}\")\"\n+\n+echo \"Installing dependencies\"\n npm ci\n \n echo \"Running end-to-end tests\""
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/weiztech/gcloud-python-cost-control/commit/43b3c46b84b984800a6a013a93555b7bedf5c81a",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "status": "added",
        "patch": "@@ -0,0 +1,185 @@\n+\n+# Created by https://www.toptal.com/developers/gitignore/api/python,terraform\n+# Edit at https://www.toptal.com/developers/gitignore?templates=python,terraform\n+\n+### Python ###\n+# Byte-compiled / optimized / DLL files\n+__pycache__/\n+*.py[cod]\n+*$py.class\n+\n+# C extensions\n+*.so\n+\n+# Distribution / packaging\n+.Python\n+build/\n+develop-eggs/\n+dist/\n+downloads/\n+eggs/\n+.eggs/\n+parts/\n+sdist/\n+var/\n+wheels/\n+pip-wheel-metadata/\n+share/python-wheels/\n+*.egg-info/\n+.installed.cfg\n+*.egg\n+MANIFEST\n+\n+# PyInstaller\n+#  Usually these files are written by a python script from a template\n+#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n+*.manifest\n+*.spec\n+\n+# Installer logs\n+pip-log.txt\n+pip-delete-this-directory.txt\n+\n+# Unit test / coverage reports\n+htmlcov/\n+.tox/\n+.nox/\n+.coverage\n+.coverage.*\n+.cache\n+nosetests.xml\n+coverage.xml\n+*.cover\n+*.py,cover\n+.hypothesis/\n+.pytest_cache/\n+pytestdebug.log\n+\n+# Translations\n+*.mo\n+*.pot\n+\n+# Django stuff:\n+*.log\n+local_settings.py\n+db.sqlite3\n+db.sqlite3-journal\n+\n+# Flask stuff:\n+instance/\n+.webassets-cache\n+\n+# Scrapy stuff:\n+.scrapy\n+\n+# Sphinx documentation\n+docs/_build/\n+doc/_build/\n+\n+# PyBuilder\n+target/\n+\n+# Jupyter Notebook\n+.ipynb_checkpoints\n+\n+# IPython\n+profile_default/\n+ipython_config.py\n+\n+# pyenv\n+.python-version\n+\n+# pipenv\n+#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n+#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n+#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n+#   install all needed dependencies.\n+#Pipfile.lock\n+\n+# poetry\n+#poetry.lock\n+\n+# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n+__pypackages__/\n+\n+# Celery stuff\n+celerybeat-schedule\n+celerybeat.pid\n+\n+# SageMath parsed files\n+*.sage.py\n+\n+# Environments\n+# .env\n+.env/\n+.venv/\n+env/\n+venv/\n+ENV/\n+env.bak/\n+venv.bak/\n+pythonenv*\n+\n+# Spyder project settings\n+.spyderproject\n+.spyproject\n+\n+# Rope project settings\n+.ropeproject\n+\n+# mkdocs documentation\n+/site\n+\n+# mypy\n+.mypy_cache/\n+.dmypy.json\n+dmypy.json\n+\n+# Pyre type checker\n+.pyre/\n+\n+# pytype static type analyzer\n+.pytype/\n+\n+# operating system-related files\n+*.DS_Store #file properties cache/storage on macOS\n+Thumbs.db #thumbnail cache on Windows\n+\n+# profiling data\n+.prof\n+\n+\n+### Terraform ###\n+# Local .terraform directories\n+**/.terraform/*\n+\n+# .tfstate files\n+*.tfstate\n+*.tfstate.*\n+\n+# Crash log files\n+crash.log\n+\n+# Ignore any .tfvars files that are generated automatically for each Terraform run. Most\n+# .tfvars files are managed as part of configuration and so should be included in\n+# version control.\n+#\n+terraform.tfvars\n+\n+# Ignore override files as they are usually used to override resources locally and so\n+# are not checked in\n+override.tf\n+override.tf.json\n+*_override.tf\n+*_override.tf.json\n+\n+# Include override files you do wish to add to version control using negated pattern\n+# !example_override.tf\n+\n+# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan\n+# example: *tfplan*\n+build/\n+\n+.vscode/\n+credentials.json\n+# End of https://www.toptal.com/developers/gitignore/api/python,terraform\n\\ No newline at end of file"
      },
      {
        "filename": "main/main.py",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "status": "added",
        "patch": "@@ -0,0 +1,89 @@\n+import base64\n+import json\n+import os\n+\n+from googleapiclient import discovery\n+\n+PROJECT_ID = os.getenv('GCP_PROJECT')\n+PROJECT_NAME = f'projects/{PROJECT_ID}'\n+\n+\n+def main(event, context):\n+    \"\"\"Triggered from a message on a Cloud Pub/Sub topic.\n+    Args:\n+         event (dict): Event payload.\n+         context (google.cloud.functions.Context): Metadata for the event.\n+    \"\"\"\n+    data = normalize_data(event)\n+    print(data)\n+    control_costs(data)\n+\n+\n+def normalize_data(event):\n+    '''\n+    normalize event data from source http and pubsub\n+    '''\n+    event_type = event.get(\"@type\")\n+    if event_type:\n+        if 'PubsubMessage' in event_type:\n+            return json.loads(base64.b64decode(event['data']).decode('utf-8'))\n+\n+    return event\n+\n+\n+def control_costs(data):\n+    cost_amount = data['costAmount']\n+    budget_amount = data['budgetAmount']\n+    if cost_amount <= budget_amount:\n+        print(f'No action necessary. (Current cost: {cost_amount})')\n+        return\n+\n+    if PROJECT_ID is None:\n+        print('No project specified with environment variable')\n+        return\n+\n+    billing = discovery.build(\n+        'cloudbilling',\n+        'v1',\n+        cache_discovery=False,\n+    )\n+\n+    projects = billing.projects()\n+\n+    billing_enabled = __is_billing_enabled(PROJECT_NAME, projects)\n+\n+    if billing_enabled:\n+        __disable_billing_for_project(PROJECT_NAME, projects)\n+    else:\n+        print('Billing already disabled')\n+\n+\n+def __is_billing_enabled(project_name, projects):\n+    \"\"\"\n+    Determine whether billing is enabled for a project\n+    @param {string} project_name Name of project to check if billing is enabled\n+    @return {bool} Whether project has billing enabled or not\n+    \"\"\"\n+    try:\n+        res = projects.getBillingInfo(name=project_name).execute()\n+        return res['billingEnabled']\n+    except KeyError:\n+        # If billingEnabled isn't part of the return, billing is not enabled\n+        return False\n+    except Exception:\n+        print('Unable to determine if billing is enabled on specified project, assuming billing is enabled')\n+        return True\n+\n+\n+def __disable_billing_for_project(project_name, projects):\n+    \"\"\"\n+    Disable billing for a project by removing its billing account\n+    @param {string} project_name Name of project disable billing on\n+    \"\"\"\n+    body = {'billingAccountName': ''}  # Disable billing\n+    try:\n+        res = projects.updateBillingInfo(\n+            name=project_name, body=body).execute()\n+        print(f'Billing disabled: {json.dumps(res)}')\n+    except Exception as ex:\n+        print('Failed to disable billing, possibly check permissions', ex)"
      },
      {
        "filename": "main/requirements.txt",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+google-api-python-client==2.0.2\n\\ No newline at end of file"
      },
      {
        "filename": "terraform/.terraform.lock.hcl",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "status": "added",
        "patch": "@@ -0,0 +1,38 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/archive\" {\n+  version = \"2.1.0\"\n+  hashes = [\n+    \"h1:Rjd4bHMA69V+16tiriAUTW8vvqoljzNLmEaRBCgzpUs=\",\n+    \"zh:033279ecbf60f565303222e9a6d26b50fdebe43aa1c6e8f565f09bb64d67c3fd\",\n+    \"zh:0af998e42eb421c92e87202df5bfee436b3cfe553214394f08d786c72a9e3f70\",\n+    \"zh:1183b661c692f38409a61eefb5d412167c246fcd9e49d4d61d6d910012d206ba\",\n+    \"zh:5febb66f4a8207117f71dcd460fb9c81d3afb7b600b5e598cf517cf6e27cf4b2\",\n+    \"zh:66135ce46d29d0ccf0e3b6a119423754ca334dbf4266bc989cce5b0b667b5fde\",\n+    \"zh:6b9dc1a4f0a680bb650a7191784927f99675a8c8dd3c155ba821185f630db604\",\n+    \"zh:91e249482c016ecf6bf8b83849964005cd2d0b4396688419cd1752809b46b23e\",\n+    \"zh:a6a2e5f2f010c511e66174cb84ea18899e8bcfc1354c4b9fed972fdb131ffffc\",\n+    \"zh:bb1f6abc76552a883732caff897ff7b07a91977a9b4bb97915f6aac54116bb65\",\n+    \"zh:f05a9a63607f85719fde705f58d82ee16fa67f9158a5c3424c0216507631eddf\",\n+    \"zh:fc603a05a06814387ffa4a054d1baee8ea6b5ab32c53cb73e90a5bf9a2616777\",\n+  ]\n+}\n+\n+provider \"registry.terraform.io/hashicorp/google\" {\n+  version     = \"3.61.0\"\n+  constraints = \"3.61.0\"\n+  hashes = [\n+    \"h1:lNlsjjLogncoH86MWffZ6xKCcvDRtdLsZoNUhCxCaeg=\",\n+    \"zh:09ab9579b5dbb866181d33272eeb53a4aedb70f91f80921b1bc7f9b7b3409671\",\n+    \"zh:0c36fad05dad6284746025bab139bbcfd90c5caa20004f49f9ba10b23e353150\",\n+    \"zh:1e1a96f2777cd088d3018f5a1df3a420acb9cbc81ade46a454290e4ac5a18a28\",\n+    \"zh:2321d64aafde14108ba83249368076a6e756df1268a2e4638ebcbab05c565948\",\n+    \"zh:314ce3e4b04a25a438256f6b09c0e9e3e9d1e91e44366c54d914a8bfe488324d\",\n+    \"zh:56e71910f66ad71373e00981c9c568cf75e7b844d028d98c3f04a6aca87461b5\",\n+    \"zh:65543fc0ad30dd98e551a35c0c9f8d7d5de51ce69c90594f85e03edafbcd56a9\",\n+    \"zh:95cd5bec37038aec219b74ec4478eef52143895ddf75bfd796895444f0db0e87\",\n+    \"zh:e0852c06803ef9731969631da3189154a6ef9e56087bad763d3c0aa2fe99c0a4\",\n+    \"zh:f6a43e7251b3d1fad1958be7ecb99542357648da87f5f0d93f08ac5f4378736a\",\n+  ]\n+}"
      },
      {
        "filename": "terraform/main.tf",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "status": "added",
        "patch": "@@ -0,0 +1,70 @@\n+terraform {\n+  required_providers {\n+    google = {\n+      source  = \"hashicorp/google\"\n+      version = \"3.61.0\"\n+    }\n+  }\n+}\n+\n+provider \"google\" {\n+\n+  credentials = file(\"credentials.json\")\n+\n+  project = var.google_project_id\n+  region  = var.region\n+  zone    = var.region\n+}\n+\n+resource \"google_storage_bucket\" \"bucket\" {\n+  name = \"budget-handler-storage\"\n+}\n+\n+\n+data \"archive_file\" \"code\" {\n+  type        = \"zip\"\n+  output_path = var.output_code\n+  source_dir  = var.source_code\n+}\n+\n+resource \"google_storage_bucket_object\" \"archive\" {\n+  name       = \"index.zip\"\n+  bucket     = google_storage_bucket.bucket.name\n+  source     = var.output_code\n+  depends_on = [data.archive_file.code]\n+}\n+\n+resource \"google_cloudfunctions_function\" \"function\" {\n+  name        = \"budget-handler\"\n+  description = \"automated budget handler\"\n+  runtime     = \"python38\"\n+\n+  max_instances         = 1\n+  available_memory_mb   = 128\n+  timeout               = 60\n+  source_archive_bucket = google_storage_bucket.bucket.name\n+  source_archive_object = google_storage_bucket_object.archive.name\n+  event_trigger {\n+    event_type = \"google.pubsub.topic.publish\"\n+    resource   = var.pubsub_topic\n+  }\n+  environment_variables = {\n+    \"GCP_PROJECT\" = var.google_project_id\n+  }\n+  entry_point           = \"main\"\n+  service_account_email = var.service_account\n+  depends_on = [\n+    google_storage_bucket_object.archive\n+  ]\n+}\n+\n+/*\n+# IAM entry for service account to invoke the function\n+resource \"google_cloudfunctions_function_iam_member\" \"invoker\" {\n+  project        = google_cloudfunctions_function.function.project\n+  region         = google_cloudfunctions_function.function.region\n+  cloud_function = google_cloudfunctions_function.function.name\n+\n+  role   = \"roles/cloudfunctions.invoker\"\n+  member = \"serviceAccount:\" + var.service_account\n+}*/"
      },
      {
        "filename": "terraform/variables.tf",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "status": "added",
        "patch": "@@ -0,0 +1,36 @@\n+variable \"google_project_id\" {\n+  description = \"Google project name\"\n+  type        = string\n+}\n+\n+\n+variable \"region\" {\n+  description = \"Google region name\"\n+  type        = string\n+}\n+\n+variable \"pubsub_topic\" {\n+  description = \"Google region name\"\n+  type        = string\n+}\n+\n+variable \"service_account\" {\n+  description = \"Google service account\"\n+  type        = string\n+}\n+\n+variable \"source_code\" {\n+  type = string\n+}\n+\n+variable \"output_code\" {\n+  type = string\n+}\n+\n+output \"source_code\" {\n+  value = var.source_code\n+}\n+\n+output \"output_code\" {\n+  value = var.output_code\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/mtheoryx/graph-ql-cloud-demo/commit/83f393acfdc39810b29f898ff2d8a3f247571aa6",
    "files": [
      {
        "filename": "deploy/workspace/vpc/backend.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -6,6 +6,18 @@ provider \"aws\" {\n   }\n }\n \n+provider \"tls\" {\n+  version = \"~> 1.2\"\n+}\n+\n+provider \"local\" {\n+  version = \"~> 1.1\"\n+}\n+\n+provider \"null\" {\n+  version = \"~> 2.0\"\n+}\n+\n terraform {\n   required_version = \"0.11.10\"\n "
      },
      {
        "filename": "deploy/workspace/vpc/main.tf",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "status": "modified",
        "patch": "@@ -124,8 +124,97 @@ resource \"aws_route_table_association\" \"private-route-assoc\" {\n }\n \n # security group(s)\n+resource \"aws_security_group\" \"bastion-security-group\" {\n+  name   = \"${var.app_name}-bastgion-sg\"\n+  vpc_id = \"${aws_vpc.vpc.id}\"\n+\n+  # tags\n+}\n+\n # security group(s) rule(s)\n+resource \"aws_security_group_rule\" \"allow-ssh-bastion-ingress\" {\n+  security_group_id = \"${aws_security_group.bastion-security-group.id}\"\n+  type              = \"ingress\"\n+  from_port         = 22\n+  to_port           = 22\n+  protocol          = \"tcp\"\n+  cidr_blocks       = [\"0.0.0.0/0\"]\n+}\n+\n+resource \"aws_security_group_rule\" \"allow-all-bastion-egress\" {\n+  security_group_id = \"${aws_security_group.bastion-security-group.id}\"\n+  type              = \"egress\"\n+  from_port         = 0\n+  to_port           = 0\n+  protocol          = \"-1\"\n+  cidr_blocks       = [\"0.0.0.0/0\"]\n+}\n+\n # keys (tf-controlled, generated keys)\n+#\n+# locals var (for the key name/filepath)\n+locals {\n+  public_key_filename  = \"bastion.pub\"\n+  private_key_filename = \"bastion.pem\"\n+}\n+\n+# generate key\n+resource \"tls_private_key\" \"generated\" {\n+  algorithm = \"RSA\"\n+  rsa_bits  = 4096\n+}\n+\n+# create keypair\n+resource \"aws_key_pair\" \"generated\" {\n+  key_name   = \"${var.ssh-key-name}\"\n+  public_key = \"${tls_private_key.generated.public_key_openssh}\"\n+\n+  lifecycle {\n+    ignore_changes = [\"keyname\"]\n+  }\n+}\n+\n+# save to local public key\n+# save to local private key\n+resource \"local_file\" \"bastion-private-key-file\" {\n+  content  = \"${tls_private_key.generated.private_key_pem}\"\n+  filename = \"${local.private_key_filename}\"\n+}\n+\n+# change permissions on private key\n+resource \"null_resource\" \"chmod-key\" {\n+  depends_on = [\"local_file.bastion-private-key-file\"]\n+\n+  triggers {\n+    key = \"${tls_private_key.generated.private_key_pem}\"\n+  }\n+\n+  provisioner \"local-exec\" {\n+    command = \"chmod 600 ${local.private_key_filename}\"\n+  }\n+}\n+\n+#\n # bastion\n+resource \"aws_instance\" \"bastion\" {\n+  ami                    = \"ami-04328208f4f0cf1fe\"\n+  subnet_id              = \"${aws_subnet.public.0.id}\"\n+  key_name               = \"${aws_key_pair.generated.key_name}\"\n+  instance_type          = \"t2.micro\"\n+  vpc_security_group_ids = [\"${aws_security_group.bastion-security-group.id}\"]\n+\n+  tags {\n+    Name        = \"${var.app_name}-${terraform.workspace}-bastion\"\n+    Environment = \"${var.environment[terraform.workspace]}\"\n+    Managed     = \"Terraform v0.11.10\"\n+  }\n+}\n+\n+#\n # EIP for bastion (caution, free only while attached)\n+resource \"aws_eip\" \"bastion-eip\" {\n+  instance = \"${aws_instance.bastion.id}\"\n+  vpc      = true\n \n+  # tags\n+}"
      },
      {
        "filename": "deploy/workspace/vpc/outputs.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -5,3 +5,7 @@ output \"vpc.id\" {\n output \"vpc.cidr_block\" {\n   value = \"${aws_vpc.vpc.cidr_block}\"\n }\n+\n+output \"bastion.ip\" {\n+  value = \"${aws_instance.bastion.public_ip}\"\n+}"
      },
      {
        "filename": "deploy/workspace/vpc/variables.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -2,6 +2,14 @@ variable \"region\" {\n   default = \"us-east-2\"\n }\n \n+variable \"ssh-key-name\" {\n+  default = \"ssh-bastion-key\"\n+}\n+\n+variable \"app_name\" {\n+  default = \"graphqldemo\"\n+}\n+\n variable \"account_roles\" {\n   type        = \"map\"\n   description = \"Roles to assume per environment\""
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/JamesWoolfenden/terraform-aws-cognito/commit/e8004aa1293b04a63fe33895e81ed2b9e6d3af94",
    "files": [
      {
        "filename": ".github/CODEOWNERS",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+* @JamesWoolfenden"
      },
      {
        "filename": ".github/workflows/compare.yml",
        "additions": 19,
        "deletions": 17,
        "changes": 36,
        "status": "modified",
        "patch": "@@ -7,9 +7,6 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n-  terraform-docs: 0.11.2\n-  tfsec: 0.39.10\n   tf_target_dir: example/examplea\n   branch: master\n jobs:\n@@ -23,9 +20,10 @@ jobs:\n           token: ${{ github.token }}\n       - name: tfsec\n         run: |\n-         wget https://github.com/tfsec/tfsec/releases/download/v${{ env.tfsec }}/tfsec-linux-amd64\n-         chmod +x tfsec-linux-amd64\n-         ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n+          pip3 install lastversion\n+          lastversion tfsec/tfsec --assets -d\n+          chmod +x tfsec-linux-amd64\n+          ./tfsec-linux-amd64 ${{ env.tf_target_dir }} -f json --out tfsec.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n@@ -67,18 +65,20 @@ jobs:\n       - name: install terrascan\n         run: |\n           pip3 install lastversion\n-          now=$(lastversion accurics/terrascan)\n-          curl --location https://github.com/accurics/terrascan/releases/download/v${now}/terrascan_${now}_Linux_x86_64.tar.gz --output terrascan.tar.gz\n-          tar -xvf terrascan.tar.gz\n+          lastversion accurics/terrascan --assets -d --verbose\n+          tar -xvf terrascan*.tar.gz\n+          chmod +x ./terrascan\n       - name: run terrascan\n-        run: ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json >terrascan.json\n+        run: |\n+          ./terrascan init\n+          ./terrascan scan -d  ${{ env.tf_target_dir }} -o json -x json | tee terrascan.json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: terrascan\n           path: terrascan.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n   kics:\n     runs-on: ubuntu-latest\n     steps:\n@@ -87,18 +87,20 @@ jobs:\n         with:\n           ref: ${{ env.branch }}\n           token: ${{ github.token }}\n-      - name: run kics Scan\n-        uses: checkmarx/kics-action@v1.0\n-        with:\n-          path: ${{ env.tf_target_dir }}\n-          output_path: \"kics.json\"\n+      - name: install kics\n+        run: |\n+          pip3 install lastversion\n+          lastversion Checkmarx/kics --assets -d --verbose\n+          tar -xvf kics*.tar.gz\n+      - name: run kics\n+        run: ./kics scan -p  ${{ env.tf_target_dir }} -o kics.json --report-formats json\n         continue-on-error: true\n       - name: store\n         uses: actions/upload-artifact@v2\n         with:\n           name: kics\n           path: kics.json\n-          if-no-files-found: error\n+          if-no-files-found: warn\n \n   upload:\n     needs: [kics, terrascan, checkov, tfsec]"
      },
      {
        "filename": ".github/workflows/master.yml",
        "additions": 26,
        "deletions": 4,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -9,8 +9,7 @@ on:\n     branches:\n       - master\n env:\n-  terraform: 0.14.8\n-  terraform-docs: 0.11.2\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n   branch: master\n jobs:\n@@ -34,6 +33,28 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+      - name: Bills\n+        run: |\n+          pip3 install lastversion\n+          lastversion infracost --assets -d --verbose\n+          mkdir $GITHUB_WORKSPACE/bin\n+          tar -xvf infracost*.tar.gz --directory $GITHUB_WORKSPACE/bin\n+          chmod +x $GITHUB_WORKSPACE/bin/infracost-linux-amd64\n+          $GITHUB_WORKSPACE/bin/infracost-linux-amd64 breakdown --path ${{ env.tf_target_dir }} --usage-file ${{ env.tf_target_dir }}/infracost-usage.yml\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -46,8 +67,10 @@ jobs:\n         with:\n           python-version: 3.8\n       - run: |\n+          pip3 install lastversion\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -Lo $GITHUB_WORKSPACE/bin/terraform-docs https://github.com/terraform-docs/terraform-docs/releases/download/v${{ env.terraform-docs }}/terraform-docs-v${{ env.terraform-docs }}-$(uname)-amd64\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n@@ -57,7 +80,6 @@ jobs:\n     steps:\n       - uses: actions/checkout@master\n       - name: Bump version and push tag\n-        if: ${{ !env.ACT }}\n         uses: anothrNick/github-tag-action@master\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      },
      {
        "filename": ".github/workflows/pull_request.yml",
        "additions": 32,
        "deletions": 3,
        "changes": 35,
        "status": "modified",
        "patch": "@@ -6,8 +6,7 @@ on:\n   workflow_dispatch:\n \n env:\n-  terraform: 0.14.8\n-  terraform-docs: 0.11.2\n+  terraform: 0.15.0\n   tf_target_dir: example/examplea\n \n jobs:\n@@ -30,6 +29,15 @@ jobs:\n           tf_actions_version: ${{ env.terraform }}\n           tf_actions_subcommand: validate\n           tf_actions_working_dir: ${{ env.tf_target_dir }}\n+      - name: Terraform Plan\n+        uses: hashicorp/terraform-github-actions@master\n+        with:\n+          tf_actions_version: ${{ env.terraform }}\n+          tf_actions_subcommand: plan\n+          tf_actions_working_dir: ${{ env.tf_target_dir }}\n+        env:\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n   security:\n     runs-on: ubuntu-latest\n     steps:\n@@ -41,8 +49,29 @@ jobs:\n         with:\n           python-version: 3.8\n       - run: |\n+          pip3 install lastversion\n+          lastversion terraform-docs --assets -d --verbose\n           mkdir $GITHUB_WORKSPACE/bin\n-          curl -Lo $GITHUB_WORKSPACE/bin/terraform-docs https://github.com/terraform-docs/terraform-docs/releases/download/v${{ env.terraform-docs }}/terraform-docs-v${{ env.terraform-docs }}-$(uname)-amd64\n+          tar -xvf terraform-docs*.tar.gz --directory $GITHUB_WORKSPACE/bin\n           chmod +x $GITHUB_WORKSPACE/bin/terraform-docs\n           echo \"$GITHUB_WORKSPACE/bin\" >> $GITHUB_PATH\n       - uses: pre-commit/action@v2.0.0\n+  infracost:\n+    runs-on: ubuntu-latest\n+    name: Show infracost diff\n+    steps:\n+      - name: Check out repository\n+        uses: actions/checkout@v2\n+      - name: Run infracost diff\n+        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred\n+        env:\n+          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Do not change\n+          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY }}\n+          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          # See the cloud credentials section for the options\n+        with:\n+          entrypoint: /scripts/ci/diff.sh # Do not change\n+          path: ${{ env.tf_target_dir }}\n+          usage_file: ${{ env.tf_target_dir }}/infracost-usage.yml\n+          #terraform_plan_flags: -var-file=my.tfvars"
      },
      {
        "filename": ".markdownlint.json",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -4,7 +4,8 @@\n   \"MD033\": {\n     \"allowed_elements\": [\n       \"br\",\n-      \"pre\"\n+      \"pre\",\n+      \"a\"\n     ]\n   },\n   \"MD034\": false,"
      },
      {
        "filename": "README.md",
        "additions": 29,
        "deletions": 25,
        "changes": 54,
        "status": "modified",
        "patch": "@@ -33,45 +33,49 @@ No requirements.\n \n | Name | Version |\n |------|---------|\n-| aws | n/a |\n+| <a name=\"provider_aws\"></a> [aws](#provider\\_aws) | n/a |\n \n ## Modules\n \n-No Modules.\n+No modules.\n \n ## Resources\n \n-| Name |\n-|------|\n-| [aws_cognito_identity_pool](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_identity_pool) |\n-| [aws_cognito_resource_server](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_resource_server) |\n-| [aws_cognito_user_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_group) |\n-| [aws_cognito_user_pool](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool) |\n-| [aws_cognito_user_pool_client](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool_client) |\n-| [aws_cognito_user_pool_domain](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool_domain) |\n-| [aws_iam_policy_document](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) |\n-| [aws_iam_role](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role) |\n+| Name | Type |\n+|------|------|\n+| [aws_cognito_identity_pool.main](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_identity_pool) | resource |\n+| [aws_cognito_resource_server.main](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_resource_server) | resource |\n+| [aws_cognito_user_group.authenticated](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_group) | resource |\n+| [aws_cognito_user_group.unauthenticated](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_group) | resource |\n+| [aws_cognito_user_pool.main](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool) | resource |\n+| [aws_cognito_user_pool_client.cli](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool_client) | resource |\n+| [aws_cognito_user_pool_client.web](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool_client) | resource |\n+| [aws_cognito_user_pool_domain.main](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool_domain) | resource |\n+| [aws_iam_role.authenticated_standard](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role) | resource |\n+| [aws_iam_role.unauthenticated](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role) | resource |\n+| [aws_iam_policy_document.authenticated_standard](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n+| [aws_iam_policy_document.unauthenticated](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n \n ## Inputs\n \n | Name | Description | Type | Default | Required |\n |------|-------------|------|---------|:--------:|\n-| authenticated\\_grouprole\\_count | Toggle an 'authenticated user' role associated with a specific application | `number` | n/a | yes |\n-| callback\\_urls | n/a | `list(any)` | <pre>[<br>  \"http://example.com\"<br>]</pre> | no |\n-| common\\_tags | Implemnts the common tags scheme | `map(any)` | n/a | yes |\n-| default\\_redirect\\_uri | n/a | `string` | `\"http://example.com\"` | no |\n-| fqdn | A fully qualified domain name (eg. ostl.dev.fibrenation.net) | `string` | n/a | yes |\n-| fqdn\\_no\\_env | A fully qualified domain name without the environment name (eg. ostl.fibrenation.net) | `string` | n/a | yes |\n-| iam\\_path | The path used to namespace IAM resources | `string` | n/a | yes |\n-| identity\\_pool\\_id | The identifier of the cognito identity pool to assign roles to | `string` | n/a | yes |\n-| server\\_side\\_token\\_check | n/a | `bool` | `true` | no |\n-| sldn\\_dash | A second level domain name seprated by dashes (ie. without the tld) (eg. auth-dev-fibrentation) | `string` | n/a | yes |\n-| unauthenticated\\_grouprole\\_count | Toggle an 'unauthenticated user' role associated with a specific application | `number` | n/a | yes |\n-| user\\_pool\\_id | The identifier of the cognito user pool to assign roles to | `string` | n/a | yes |\n+| <a name=\"input_authenticated_grouprole_count\"></a> [authenticated\\_grouprole\\_count](#input\\_authenticated\\_grouprole\\_count) | Toggle an 'authenticated user' role associated with a specific application | `number` | n/a | yes |\n+| <a name=\"input_callback_urls\"></a> [callback\\_urls](#input\\_callback\\_urls) | n/a | `list(any)` | <pre>[<br>  \"http://example.com\"<br>]</pre> | no |\n+| <a name=\"input_common_tags\"></a> [common\\_tags](#input\\_common\\_tags) | Implemnts the common tags scheme | `map(any)` | n/a | yes |\n+| <a name=\"input_default_redirect_uri\"></a> [default\\_redirect\\_uri](#input\\_default\\_redirect\\_uri) | n/a | `string` | `\"http://example.com\"` | no |\n+| <a name=\"input_fqdn\"></a> [fqdn](#input\\_fqdn) | A fully qualified domain name (eg. ostl.dev.fibrenation.net) | `string` | n/a | yes |\n+| <a name=\"input_fqdn_no_env\"></a> [fqdn\\_no\\_env](#input\\_fqdn\\_no\\_env) | A fully qualified domain name without the environment name (eg. ostl.fibrenation.net) | `string` | n/a | yes |\n+| <a name=\"input_iam_path\"></a> [iam\\_path](#input\\_iam\\_path) | The path used to namespace IAM resources | `string` | n/a | yes |\n+| <a name=\"input_identity_pool_id\"></a> [identity\\_pool\\_id](#input\\_identity\\_pool\\_id) | The identifier of the cognito identity pool to assign roles to | `string` | n/a | yes |\n+| <a name=\"input_server_side_token_check\"></a> [server\\_side\\_token\\_check](#input\\_server\\_side\\_token\\_check) | n/a | `bool` | `true` | no |\n+| <a name=\"input_sldn_dash\"></a> [sldn\\_dash](#input\\_sldn\\_dash) | A second level domain name seprated by dashes (ie. without the tld) (eg. auth-dev-fibrentation) | `string` | n/a | yes |\n+| <a name=\"input_unauthenticated_grouprole_count\"></a> [unauthenticated\\_grouprole\\_count](#input\\_unauthenticated\\_grouprole\\_count) | Toggle an 'unauthenticated user' role associated with a specific application | `number` | n/a | yes |\n+| <a name=\"input_user_pool_id\"></a> [user\\_pool\\_id](#input\\_user\\_pool\\_id) | The identifier of the cognito user pool to assign roles to | `string` | n/a | yes |\n \n ## Outputs\n \n-No output.\n+No outputs.\n <!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n \n ### Contributors"
      },
      {
        "filename": "example/examplea/infracost-usage.yml",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "added",
        "patch": "@@ -0,0 +1,2 @@\n+version: 0.1\n+resource_usage:"
      },
      {
        "filename": "example/examplea/terraform.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n terraform {\n   required_providers {\n     aws = {\n-      version = \"3.32.0\"\n+      version = \"3.39.0\"\n       source  = \"hashicorp/aws\"\n     }\n \n@@ -13,5 +13,5 @@ terraform {\n       version = \"2.2.0\"\n     }\n   }\n-  required_version = \"0.14.8\"\n+  required_version = \">=0.14.8\"\n }"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/tesera/terraform-modules/commit/3cd4d7b55ac2003153fd0670151ab395ae182431",
    "files": [
      {
        "filename": "state/dynamodb.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,5 +1,6 @@\n resource \"aws_dynamodb_table\" \"main\" {\n   name           = \"terraform-state${local.name}\"\n+  billing_mode = \"PAY_PER_REQUEST\"\n   read_capacity  = 1\n   write_capacity = 1\n   hash_key       = \"LockID\"\n@@ -13,6 +14,10 @@ resource \"aws_dynamodb_table\" \"main\" {\n     enabled = true\n   }\n \n+  lifecycle {\n+    ignore_changes = [read_capacity, write_capacity]\n+  }\n+\n   tags = {\n     Name      = \"Terraform Remote State\"\n     Terraform = true"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/tsub/ecs-sandbox/commit/8501fafbba186919c9e9b55a6a3fc72b4fb80909",
    "files": [
      {
        "filename": "terraform/ecs-cluster.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -23,6 +23,7 @@ module \"vpc\" {\n   public_subnets  = [\"10.0.101.0/24\", \"10.0.102.0/24\", \"10.0.103.0/24\"]\n \n   enable_nat_gateway = true\n+  single_nat_gateway = true # Cost cutting (false is preferred for production use)\n \n   tags = {\n     Terraform   = \"true\""
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/boffbowsh/dc-terraform-provisioning/commit/7e1b0531992b592980c232994b7248801073fcd0",
    "files": [
      {
        "filename": "projects/electionleaflets/nat.tf",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "status": "added",
        "patch": "@@ -0,0 +1,34 @@\n+data \"aws_availability_zones\" \"available\" {}\n+\n+module \"nat\" {\n+  name                   = \"electionleaflets-nat\"\n+  source                 = \"github.com/ashb/tf_aws_nat?ref=v0.9.3-pre1\"\n+  instance_count         = 1\n+  instance_type          = \"t2.nano\"\n+  public_subnet_ids      = [\"${aws_subnet.public-a.id}\", \"${aws_subnet.public-b.id}\"]\n+  private_subnet_ids     = [\"${aws_subnet.private-a.id}\", \"${aws_subnet.private-b.id}\"]\n+  subnets_count          = \"${length(data.aws_availability_zones.available.names)}\"\n+  az_list                = [\"${data.aws_availability_zones.available.names}\"]\n+  vpc_security_group_ids = [\"${aws_security_group.nat.id}\"]\n+  aws_key_name           = \"electionleaflets\"\n+  awsnycast_deb_url      = \"https://github.com/ashb/AWSnycast/releases/download/v0.1.3-pre1/awsnycast_0.1.3-pre1-debug0_amd64.deb\"\n+}\n+\n+resource \"aws_security_group\" \"nat\" {\n+  name   = \"electionleaflets-nat\"\n+  vpc_id = \"${aws_vpc.main.id}\"\n+\n+  ingress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = -1\n+    cidr_blocks = [\"${aws_vpc.main.cidr_block}\"]\n+  }\n+\n+  egress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = -1\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+}"
      },
      {
        "filename": "projects/electionleaflets/vpc.tf",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "status": "added",
        "patch": "@@ -0,0 +1,99 @@\n+resource \"aws_vpc\" \"main\" {\n+  cidr_block           = \"10.1.0.0/16\"\n+  enable_dns_support   = true\n+  enable_dns_hostnames = true\n+}\n+\n+resource \"aws_subnet\" \"public-a\" {\n+  vpc_id                  = \"${aws_vpc.main.id}\"\n+  cidr_block              = \"10.1.0.0/25\"\n+  availability_zone       = \"${data.aws_region.current.name}a\"\n+  map_public_ip_on_launch = true\n+\n+  tags = {\n+    Name = \"electionleaflets-public-a\"\n+  }\n+}\n+\n+resource \"aws_route_table_association\" \"public-a\" {\n+  subnet_id      = \"${aws_subnet.public-a.id}\"\n+  route_table_id = \"${aws_route_table.public.id}\"\n+}\n+\n+resource \"aws_subnet\" \"private-a\" {\n+  vpc_id            = \"${aws_vpc.main.id}\"\n+  cidr_block        = \"10.1.0.128/25\"\n+  availability_zone = \"${data.aws_region.current.name}a\"\n+\n+  tags = {\n+    Name = \"electionleaflets-private-a\"\n+  }\n+}\n+\n+resource \"aws_route_table_association\" \"private-a\" {\n+  subnet_id      = \"${aws_subnet.private-a.id}\"\n+  route_table_id = \"${aws_route_table.private.id}\"\n+}\n+\n+resource \"aws_subnet\" \"public-b\" {\n+  vpc_id                  = \"${aws_vpc.main.id}\"\n+  cidr_block              = \"10.1.2.0/25\"\n+  availability_zone       = \"${data.aws_region.current.name}b\"\n+  map_public_ip_on_launch = true\n+\n+  tags = {\n+    Name = \"electionleaflets-public-b\"\n+  }\n+}\n+\n+resource \"aws_route_table_association\" \"public-b\" {\n+  subnet_id      = \"${aws_subnet.public-b.id}\"\n+  route_table_id = \"${aws_route_table.public.id}\"\n+}\n+\n+resource \"aws_subnet\" \"private-b\" {\n+  vpc_id            = \"${aws_vpc.main.id}\"\n+  cidr_block        = \"10.1.2.128/25\"\n+  availability_zone = \"${data.aws_region.current.name}b\"\n+\n+  tags = {\n+    Name = \"electionleaflets-private-b\"\n+  }\n+}\n+\n+resource \"aws_route_table_association\" \"private-b\" {\n+  subnet_id      = \"${aws_subnet.private-b.id}\"\n+  route_table_id = \"${aws_route_table.private.id}\"\n+}\n+\n+resource \"aws_internet_gateway\" \"gateway\" {\n+  vpc_id = \"${aws_vpc.main.id}\"\n+}\n+\n+resource \"aws_route_table\" \"public\" {\n+  vpc_id = \"${aws_vpc.main.id}\"\n+\n+  route {\n+    cidr_block = \"0.0.0.0/0\"\n+    gateway_id = \"${aws_internet_gateway.gateway.id}\"\n+  }\n+}\n+\n+resource \"aws_route_table\" \"private\" {\n+  vpc_id = \"${aws_vpc.main.id}\"\n+\n+  route {\n+    cidr_block  = \"0.0.0.0/0\"\n+    instance_id = \"${module.nat.instance_ids[0]}\"\n+  }\n+}\n+\n+resource \"aws_vpc_endpoint\" \"private-s3\" {\n+  vpc_id       = \"${aws_vpc.main.id}\"\n+  service_name = \"com.amazonaws.${data.aws_region.current.name}.s3\"\n+}\n+\n+resource \"aws_vpc_endpoint_route_table_association\" \"private_s3\" {\n+  vpc_endpoint_id = \"${aws_vpc_endpoint.private-s3.id}\"\n+  route_table_id  = \"${aws_route_table.private.id}\"\n+}"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/MichaelDeCorte/TerraForm/commit/3799ee8b9677d02254eb6d6f50f3732df4c8374e",
    "files": [
      {
        "filename": "dynamo/dynamo.tf",
        "additions": 25,
        "deletions": 16,
        "changes": 41,
        "status": "modified",
        "patch": "@@ -71,18 +71,10 @@ variable \"stream_view_type\" {\n     default = \"\"\n }\n \n+variable \"billing_mode\" {\n+    default = \"PAY_PER_REQUEST\"\n+}\n \n-# triggers = [\n-#     {\n-#         name \t\t\t\t\t= \"lambda_name\"\t\t# arn or name of lambda function\n-#         batch_size \t\t\t= 10 \t\t\t\t# defaults to local.triggers.batch_size\n-#         starting_position \t= \"LATEST\"\t\t\t# defaults to local.triggers.starting_position\n-#\t\t\t\t\t\t\t\t\t\t\t\t\t# https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_streams_GetShardIterator.html\n-#     },\n-#     {\n-#         name \t\t\t\t\t= \"lambda_arn\"\t\t# arn or name of lambda function\n-#     }\n-# ]\n variable \"triggers\" {\n     default = []\n }\n@@ -144,12 +136,20 @@ resource \"aws_dynamodb_table\" \"dynamo_table\" {\n     hash_key        \t= \"${var.hash_key}\"\n     range_key        \t= \"${var.range_key}\"\n \n+    lifecycle {\n+        ignore_changes = [\n+            \"read_capacity\",\n+            \"write_capacity\"\n+        ]\n+    }\n     \n     attribute = [\n         \"${local.attributes}\"\n     ]\n \n \n+    billing_mode = \"${var.billing_mode}\"\n+\n     global_secondary_index\t\t= [\n         # # \"${null_resource.global_secondary_index.*.triggers}\"\n         \"${var.global_secondary_indexes}\"\n@@ -175,6 +175,8 @@ resource \"aws_dynamodb_table\" \"dynamo_table\" {\n \n ##############################\n resource \"aws_appautoscaling_target\" \"read_target\" {\n+    count = \"${var.billing_mode == \"PAY_PER_REQUEST\" ? 0 : 1}\"\n+\n     max_capacity       = \"${var.autoscale_max_read_capacity}\"\n     min_capacity       = \"${var.autoscale_min_read_capacity}\"\n \n@@ -185,6 +187,7 @@ resource \"aws_appautoscaling_target\" \"read_target\" {\n }\n \n resource \"aws_appautoscaling_policy\" \"read_target\" {\n+    count = \"${var.billing_mode == \"PAY_PER_REQUEST\" ? 0 : 1}\"\n     name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.read_target.resource_id}\"\n     policy_type        = \"TargetTrackingScaling\"\n     resource_id        = \"${aws_appautoscaling_target.read_target.resource_id}\"\n@@ -202,6 +205,7 @@ resource \"aws_appautoscaling_policy\" \"read_target\" {\n \n ##############################\n resource \"aws_appautoscaling_target\" \"write_target\" {\n+    count = \"${var.billing_mode == \"PAY_PER_REQUEST\" ? 0 : 1}\"\n     max_capacity       = \"${var.autoscale_max_write_capacity}\"\n     min_capacity       = \"${var.autoscale_min_write_capacity}\"\n \n@@ -213,6 +217,7 @@ resource \"aws_appautoscaling_target\" \"write_target\" {\n \n \n resource \"aws_appautoscaling_policy\" \"write_target\" {\n+    count = \"${var.billing_mode == \"PAY_PER_REQUEST\" ? 0 : 1}\"\n     name               = \"DynamoDBWriteCapacityUtilization:${aws_appautoscaling_target.write_target.resource_id}\"\n     policy_type        = \"TargetTrackingScaling\"\n     resource_id        = \"${aws_appautoscaling_target.write_target.resource_id}\"\n@@ -230,7 +235,8 @@ resource \"aws_appautoscaling_policy\" \"write_target\" {\n \n ##############################\n resource \"null_resource\" \"global_secondary_index_names\" {\n-    count = \"${length(var.global_secondary_indexes)}\"\n+    # count = \"${length(var.global_secondary_indexes)}\"\n+    count = \"${var.billing_mode == \"PAY_PER_REQUEST\" ? 0 : length(var.global_secondary_indexes)}\"\n \n     # Convert the multi-item `global_secondary_index_map` into a\n     # simple `map` with just one item `name` since `triggers` does not\n@@ -242,7 +248,8 @@ resource \"null_resource\" \"global_secondary_index_names\" {\n }\n \n resource \"aws_appautoscaling_target\" \"read_target_index\" {\n-    count\t\t\t\t= \"${length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n+    #    count\t\t\t\t= \"${length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n+    count\t\t\t\t= \"${var.billing_mode == \"PAY_PER_REQUEST\" ? 0 : length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n     max_capacity       \t= \"${var.autoscale_max_read_capacity}\"\n     min_capacity       \t= \"${var.autoscale_min_read_capacity}\"\n     resource_id        \t= \"table/${aws_dynamodb_table.dynamo_table.name}/index/${element(null_resource.global_secondary_index_names.*.triggers.name, count.index)}\"\n@@ -251,7 +258,8 @@ resource \"aws_appautoscaling_target\" \"read_target_index\" {\n }\n \n resource \"aws_appautoscaling_policy\" \"read_policy_index\" {\n-    count\t\t\t\t= \"${length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n+    #    count\t\t\t\t= \"${length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n+    count\t\t\t\t= \"${var.billing_mode == \"PAY_PER_REQUEST\" ? 0 : length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n     name               = \"DynamoDBReadCapacityUtilization:${element(aws_appautoscaling_target.read_target_index.*.resource_id, count.index)}\"\n     policy_type        = \"TargetTrackingScaling\"\n     resource_id        = \"${element(aws_appautoscaling_target.read_target_index.*.resource_id, count.index)}\"\n@@ -268,7 +276,7 @@ resource \"aws_appautoscaling_policy\" \"read_policy_index\" {\n }\n ##############################\n resource \"aws_appautoscaling_target\" \"write_target_index\" {\n-    count\t\t\t\t= \"${length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n+    count\t\t\t\t= \"${var.billing_mode == \"PAY_PER_REQUEST\" ? 0 : length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n     max_capacity       \t= \"${var.autoscale_max_write_capacity}\"\n     min_capacity       \t= \"${var.autoscale_min_write_capacity}\"\n     resource_id        \t= \"table/${aws_dynamodb_table.dynamo_table.name}/index/${element(null_resource.global_secondary_index_names.*.triggers.name, count.index)}\"\n@@ -277,7 +285,8 @@ resource \"aws_appautoscaling_target\" \"write_target_index\" {\n }\n \n resource \"aws_appautoscaling_policy\" \"write_policy_index\" {\n-    count\t\t\t\t= \"${length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n+    count\t\t\t\t= \"${var.billing_mode == \"PAY_PER_REQUEST\" ? 0: length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n+    # count\t\t\t\t= \"${length(null_resource.global_secondary_index_names.*.triggers.name)}\"\n     name               = \"DynamoDBWriteCapacityUtilization:${element(aws_appautoscaling_target.write_target_index.*.resource_id, count.index)}\"\n     policy_type        = \"TargetTrackingScaling\"\n     resource_id        = \"${element(aws_appautoscaling_target.write_target_index.*.resource_id, count.index)}\""
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/dharapvj/workflow-testing/commit/24fa52712f844e2b459329e28af96bc369024d25",
    "files": [
      {
        "filename": "argocd-apps/external-dns-role-demo.md",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "status": "added",
        "patch": "@@ -0,0 +1,48 @@\n+# external-dns-role-demo\n+\n+## Assume role policy\n+```json\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Sid\": \"\",\n+      \"Effect\": \"Allow\",\n+      \"Action\": \"sts:AssumeRole\",\n+      \"Principal\": {\n+        \"AWS\": \"arn:aws:iam::064814169464:role/vj1-host\",\n+        \"Service\": \"ec2.amazonaws.com\"\n+      }\n+    }\n+  ]\n+}\n+```\n+\n+## Role policy\n+\n+```json\n+{\n+    \"Statement\": [\n+        {\n+            \"Action\": [\n+                \"route53:ChangeResourceRecordSets\"\n+            ],\n+            \"Effect\": \"Allow\",\n+            \"Resource\": [\n+                \"arn:aws:route53:::hostedzone/Z07718862HZ7EMP8JYAFE\"\n+            ]\n+        },\n+        {\n+            \"Action\": [\n+                \"route53:ListHostedZones\",\n+                \"route53:ListResourceRecordSets\"\n+            ],\n+            \"Effect\": \"Allow\",\n+            \"Resource\": [\n+                \"*\"\n+            ]\n+        }\n+    ],\n+    \"Version\": \"2012-10-17\"\n+}\n+```\n\\ No newline at end of file"
      },
      {
        "filename": "argocd-apps/external-dns.yaml",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -34,7 +34,7 @@ spec:\n \n         # set via helm so that you can refer to role ARN from terraform\n         podAnnotations:\n-          iam.amazonaws.com/role: \"external-dns-role\"\n+          iam.amazonaws.com/role: \"external-dns-role-demo\"\n \n         resources:\n           limits:"
      },
      {
        "filename": "kubeone/examples/terraform/aws/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -272,7 +272,7 @@ resource \"aws_iam_role_policy\" \"policy\" {\n ############################ CONTROL PLANE INSTANCES ###########################\n \n resource \"aws_instance\" \"control_plane\" {\n-  count                  = 3\n+  count                  = 1\n   instance_type          = var.control_plane_type\n   iam_instance_profile   = aws_iam_instance_profile.profile.name\n   ami                    = local.ami"
      },
      {
        "filename": "kubeone/examples/terraform/aws/terraform.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -4,3 +4,4 @@ ssh_public_key_file = \"~/.ssh/id_rsa.pub\"\n # vpc_id = \"vpc-064614485048a19d4\"\n aws_region=\"ap-south-1\"\n worker_os=\"ubuntu\"\n+initial_machinedeployment_spotinstances = true\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ausmartway/gcp-playground/commit/4676fee3828f732d296feb81be51f9602610f537",
    "files": [
      {
        "filename": "gke.tf",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@ resource \"google_service_account\" \"default\" {\n }\n \n resource \"google_container_cluster\" \"primary\" {\n-  name     = \"taipei-devopsdays\"\n+  name     = \"playground\"\n   location = \"australia-southeast1\"\n \n   # We can't create a cluster with no node pool defined, but we want to only use\n@@ -16,14 +16,10 @@ resource \"google_container_cluster\" \"primary\" {\n }\n \n resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {\n-  name       = \"taipei-devopsdays-node-pool\"\n+  name       = \"playground-node-pool\"\n   location   = \"australia-southeast1\"\n   cluster    = google_container_cluster.primary.name\n   initial_node_count = 1\n-  autoscaling {\n-    min_node_count = 1\n-    max_node_count = 5\n-  }\n \n   management {\n     auto_repair = true"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ken5scal/secure-brigade-terraform/commit/f751747d53b467f72498c50deef79828c2b378be",
    "files": [
      {
        "filename": "README.md",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ AWS Terraform files used in Secure Brigade\n # TODO\n ## priority\n * [ ] vpc flowlog\n-* [ ] cloudtrail to azure sentinel\n+* [x] cloudtrail to azure sentinel\n * [ ] github action as CI and codepipeline as CD\n \n ## In General\n@@ -34,7 +34,7 @@ AWS Terraform files used in Secure Brigade\n \n ## Organization\n  * [ ] AWS Health\n- * [ ] Disable `IAM User and Role Access to Billing Information` in child accounts\n+ * [x] ~Disable `IAM User and Role Access to Billing Information` in child accounts~ <- not required because organization handles it automatically\n  * [ ] Other settings (listed in IAM section)\n \n ## Cloud Trail\n@@ -67,7 +67,7 @@ AWS Terraform files used in Secure Brigade\n  * [x] ~IAM Permission boundary~ <- tried, but couldn't come out of the good use cases.\n  * [ ] alb oidc\n  * [ ] https://aws.amazon.com/jp/blogs/security/iam-share-aws-resources-groups-aws-accounts-aws-organizations/\n- * [ ] [Access Analyze](https://aws.amazon.com/jp/blogs/aws/identify-unintended-resource-access-with-aws-identity-and-access-management-iam-access-analyzer/?sc_channel=sm&sc_campaign=launch_reInvent&sc_publisher=TWITTER&sc_country=Global&sc_outcome=awareness&trkCampaign=CSI_Q4_2019_Storage_S3_re:Invent-S3-Bucket-Protection-Access-Analyzer_&trk=AWS_reInvent_2019_launch__TWITTER&sc_content=AWS_reInvent_2019_launch_&linkId=78103269)\n+ * [x] [Access Analyze](https://aws.amazon.com/jp/blogs/aws/identify-unintended-resource-access-with-aws-identity-and-access-management-iam-access-analyzer/?sc_channel=sm&sc_campaign=launch_reInvent&sc_publisher=TWITTER&sc_country=Global&sc_outcome=awareness&trkCampaign=CSI_Q4_2019_Storage_S3_re:Invent-S3-Bucket-Protection-Access-Analyzer_&trk=AWS_reInvent_2019_launch__TWITTER&sc_content=AWS_reInvent_2019_launch_&linkId=78103269)\n  * [ ] [S3 Access Points](https://aws.amazon.com/jp/blogs/aws/easily-manage-shared-data-sets-with-amazon-s3-access-points/?sc_channel=sm&sc_campaign=launch_reInvent&sc_publisher=TWITTER&sc_country=re:Invent&sc_outcome=awareness&trk=AWS_reInvent_2019_launch__TWITTER&sc_content=AWS_reInvent_2019_launch_&linkId=78154390)\n  * [ ] [Monitor unused IAM roles with AWS Config](https://t.co/CP2z75ahFK?amp=1)\n "
      },
      {
        "filename": "detective.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -1,5 +1,6 @@\n // manually turned on using https://github.com/aws-samples/amazon-detective-multiaccount-scripts\n //% python3 enableDetective.py --master_account 085773780922 --assume_role TerraformAdministrativeRole --enabled_regions ap-northeast-1 --input_file hoge.csv                                                                                                                   (git)-[master]\n+// detective is not enabled in following region for cost-saving purpose: us-east-2,us-west-1,us-west-2,ap-south-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ca-central-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,eu-north-1,sa-east-1\n //cat hoge.csv\n //791325445011,kengoscal+aws-master@gmail.com\n //491027160565,kengoscal+aws-compliance@gmail.com"
      },
      {
        "filename": "guardduty.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,5 +1,6 @@\n // manually turned on using https://github.com/aws-samples/amazon-guardduty-multiaccount-scripts\n-// % python3 enableguardduty.py --master_account 085773780922 --assume_role TerraformAdministrativeRole --enabled_regions us-east-1,us-east-2,us-west-1,us-west-2,ap-south-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ca-central-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,eu-north-1,sa-east-1 hoge.cs\n+// % python3 enableguardduty.py --master_account 085773780922 --assume_role TerraformAdministrativeRole --enabled_regions ap-north-east-1 hoge.cs\n+// guardduty is not enabled in following region for cost-saving purpose: us-east-2,us-west-1,us-west-2,ap-south-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ca-central-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,eu-north-1,sa-east-1\n // % cat hoge.csv\n //791325445011,kengoscal+aws-master@gmail.com\n //491027160565,kengoscal+aws-compliance@gmail.com"
      },
      {
        "filename": "securityhub.tf",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,5 +1,7 @@\n // manually turned on using https://github.com/awslabs/aws-securityhub-multiaccount-scripts\n-// % python3 enablesecurityhub.py --master_account 085773780922 --assume_role TerraformAdministrativeRole --enabled_regions us-east-2,us-west-1,us-west-2,ap-south-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ca-central-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,eu-north-1,sa-east-1 --enable_standards arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0 hoge.csvs\n+// % python3 enablesecurityhub.py --master_account 085773780922 --assume_role TerraformAdministrativeRole --enabled_regions ap-northeast-1 --enable_standards arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0 hoge.csv\n+// security hub is not enabled in following region for cost-saving purpose: us-east-2,us-west-1,us-west-2,ap-south-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ca-central-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,eu-north-1,sa-east-1\n+// # cat hoge.csv\n //791325445011,kengoscal+aws-master@gmail.com\n //491027160565,kengoscal+aws-compliance@gmail.com\n //297323088823,kengoscal+aws-stg@gmail.com"
      },
      {
        "filename": "sg.tf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      }
    ],
    "existing_codes": [
      "saving",
      "area"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/schubergphilis/terraform-aws-mcaf-vpc/commit/6ca41e5ad697201a1d225e5d15134e547ee6ced3",
    "files": [
      {
        "filename": "main.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -42,7 +42,7 @@ resource \"aws_internet_gateway\" \"default\" {\n }\n \n resource \"aws_eip\" \"nat\" {\n-  count = local.public_subnets\n+  count = var.enable_nat_gateway ? local.public_subnets : 0\n   vpc   = true\n \n   tags = merge(\n@@ -53,7 +53,7 @@ resource \"aws_eip\" \"nat\" {\n }\n \n resource \"aws_nat_gateway\" \"default\" {\n-  count         = local.public_subnets\n+  count         = var.enable_nat_gateway ? local.public_subnets : 0\n   allocation_id = aws_eip.nat[count.index].id\n   subnet_id     = aws_subnet.public[count.index].id\n \n@@ -131,7 +131,7 @@ resource \"aws_route_table\" \"private\" {\n }\n \n resource \"aws_route\" \"private\" {\n-  count                  = local.private_subnets > 0 && local.public_subnets > 0 ? local.private_subnets : 0\n+  count                  = var.enable_nat_gateway && local.private_subnets > 0 && local.public_subnets > 0 ? local.private_subnets : 0\n   route_table_id         = aws_route_table.private[count.index].id\n   destination_cidr_block = \"0.0.0.0/0\"\n   nat_gateway_id         = aws_nat_gateway.default[count.index].id\n@@ -153,7 +153,7 @@ resource \"aws_route_table\" \"lambda\" {\n }\n \n resource \"aws_route\" \"lambda\" {\n-  count                  = local.lambda_subnets > 0 && local.public_subnets > 0 ? local.lambda_subnets : 0\n+  count                  = var.enable_nat_gateway && local.lambda_subnets > 0 && local.public_subnets > 0 ? local.lambda_subnets : 0\n   route_table_id         = aws_route_table.lambda[count.index].id\n   destination_cidr_block = \"0.0.0.0/0\"\n   nat_gateway_id         = aws_nat_gateway.default[count.index].id"
      },
      {
        "filename": "variables.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -8,6 +8,12 @@ variable \"cidr_block\" {\n   description = \"The CIDR block for the VPC\"\n }\n \n+variable \"enable_nat_gateway\" {\n+  type        = bool\n+  default     = true\n+  description = \"Set to true to provision a NAT Gateway for each private subnet\"\n+}\n+\n variable \"lambda_subnet_bits\" {\n   type        = number\n   default     = null"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/rmaheshvarma/terraform/commit/c866a7dd2575dd2a3f4af83f5f081a5004d0e478",
    "files": [
      {
        "filename": "aws-billing-budget-basic-module-ec2/.terraform.lock.hcl",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/aws\" {\n+  version = \"3.65.0\"\n+  hashes = [\n+    \"h1:ru8cxkvHaLrVIE0hSDyO4npDIPpHsKr7z8jMwLvvu3U=\",\n+    \"zh:108aeaf5e18087d9ac852737a5be1347a28e40825817cc1a29ec523d40268294\",\n+    \"zh:1a719c0c9754f906b2220d3bbf90d483ec0a74cf87768a464d2d657b7901ec6b\",\n+    \"zh:21acdc35ae70a626cbc81eff06181a78843f1ddc2d9200f80fabf2e0466ecbda\",\n+    \"zh:28846628e1a4227a1f2db256d6b22ed36922f37632999af7404aa74703cd9bfb\",\n+    \"zh:32455550dbf86ae07d9782650e86d23c4fa13d7872e48680044692894e8da6ea\",\n+    \"zh:4241246274627c752f9aef2806e810053306001e80fc5b51d27cbe997f75f95e\",\n+    \"zh:5ca0fab3ceb3f41a97c1ebd29561a034cb83fda04da35fd5f8c3c5cb97bb3ea8\",\n+    \"zh:5fed3b79d4ed6424055e8bbfb7a4393e8db5102cdba04b4590f8e0f4194637fb\",\n+    \"zh:99a0bc325b0a59ded1152546c004953a2bb0e110978bf0cc55e1804384941bdb\",\n+    \"zh:e74f9190a417c891992210f9af937ef55749d86a04762d982260fbbc989342a7\",\n+    \"zh:fb6984405ca63d0373bd992ce157e933b8ae9dd94d74b1c5691632f062fe60b2\",\n+  ]\n+}"
      },
      {
        "filename": "aws-billing-budget-basic-module-ec2/main.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+provider \"aws\" {\r\n+  region = \"us-east-1\"\r\n+\r\n+  }\r\n+\r\n+module \"budget\" {\r\n+    source = \"./modules/ec2\"\r\n+  \r\n+}\r\n+\r\n+\r\n+\r"
      },
      {
        "filename": "aws-billing-budget-basic-module-ec2/modules/ec2/budget.tf",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "status": "added",
        "patch": "@@ -0,0 +1,24 @@\n+resource \"aws_budgets_budget\" \"ec2\" {\r\n+  name              = \"budget-ec2-monthly\"\r\n+  budget_type       = \"COST\"\r\n+  limit_amount      = \"${var.limit}\"\r\n+  limit_unit        = \"${var.currency}\"\r\n+  time_period_end   = \"2087-06-15_00:00\"\r\n+  time_period_start = \"2017-07-01_00:00\"\r\n+  time_unit         = \"${var.time_unit}\"\r\n+\r\n+  cost_filter {\r\n+    name = \"Service\"\r\n+    values = [\r\n+      \"Amazon Elastic Compute Cloud - Compute\",\r\n+    ]\r\n+  }\r\n+\r\n+  notification {\r\n+    comparison_operator        = \"GREATER_THAN\"\r\n+    threshold                  = 100\r\n+    threshold_type             = \"PERCENTAGE\"\r\n+    notification_type          = \"FORECASTED\"\r\n+    subscriber_email_addresses = [\"mrdevops1@gmail.com\"]\r\n+  }\r\n+}\r"
      },
      {
        "filename": "aws-billing-budget-basic-module-ec2/modules/ec2/var.tf",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+variable \"currency\" {\r\n+    description = \"currency type\"\r\n+    type = string \r\n+    default = \"USD\" \r\n+}\r\n+\r\n+variable \"limit\" {\r\n+  description = \"limit\"\r\n+  type = string \r\n+  default = \"100\"\r\n+  }\r\n+variable \"time_unit\" {\r\n+    description = \"time-unit\"\r\n+    type = string \r\n+    default = \"MONTHLY\"\r\n+}\r\n+\r"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/covid-videoplattform/covid-videoplattform/commit/83d8b928ecb3f271a058bb30eaa1e05ce10e0434",
    "files": [
      {
        "filename": "frontend.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@ resource \"google_compute_address\" \"frontend_ip_address\" {\n \n resource \"google_compute_instance\" \"frontend\" {\n   name         = \"frontend\"\n-  machine_type = \"n1-standard-1\"\n+  machine_type = \"g1-small\"\n \n   boot_disk {\n     initialize_params {"
      },
      {
        "filename": "jicofo.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@\n \n resource \"google_compute_instance\" \"jicofo\" {\n   name         = \"jicofo\"\n-  machine_type = \"n1-standard-1\"\n+  machine_type = \"g1-small\"\n \n   boot_disk {\n     initialize_params {"
      },
      {
        "filename": "jvb.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -11,7 +11,7 @@ resource \"google_compute_address\" \"jvb_ip_address\" {\n \n resource \"google_compute_instance\" \"jvb\" {\n   name         = \"jvb-${count.index}\"\n-  machine_type = \"e2-highcpu-4\"\n+  machine_type = \"g1-small\"\n \n   boot_disk {\n     initialize_params {"
      },
      {
        "filename": "prosody.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@\n \n resource \"google_compute_instance\" \"prosody\" {\n   name         = \"prosody\"\n-  machine_type = \"n1-standard-1\"\n+  machine_type = \"g1-small\"\n \n   boot_disk {\n     initialize_params {"
      },
      {
        "filename": "reverse_proxy.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,7 +5,7 @@ resource \"google_compute_address\" \"reverse_proxy_ip_address\" {\n \n resource \"google_compute_instance\" \"reverse_proxy\" {\n   name         = \"reverse-proxy\"\n-  machine_type = \"n1-standard-1\"\n+  machine_type = \"g1-small\"\n \n   boot_disk {\n     initialize_params {"
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/marceloboeira/certifications/commit/da24f25924b6584137d7315e6eea61a31be86406",
    "files": [
      {
        "filename": "solutions-architect-associate/README.md",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -36,3 +36,4 @@ Within `terraform/` all terraform info is stored, the source, and the state. Not\n   * [Cross-Region Replication](topics/02_S3.md#cross-region-replication)\n   * [Transfer Acceleration](topics/02_S3.md#transfer-acceleration)\n * [3 - Organizations & Billing](topics/03_ORGANIZATIONS_AND_BILLING.md)\n+* [4 - CloudFront](topics/04_CLOUD_FRONT.md)"
      },
      {
        "filename": "solutions-architect-associate/terraform/04_cloudfront.tf",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "status": "added",
        "patch": "@@ -0,0 +1,47 @@\n+resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n+  origin {\n+    domain_name = aws_s3_bucket.aux_storage_01.bucket_regional_domain_name\n+    origin_id   = \"s3-public\"\n+  }\n+\n+  enabled             = false\n+  is_ipv6_enabled     = true\n+  default_root_object = \"index.html\"\n+\n+  # Used to Setup your own domain\n+  # aliases = [\"mysite.example.com\", \"yoursite.example.com\"]\n+\n+  default_cache_behavior {\n+    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n+    cached_methods   = [\"GET\", \"HEAD\"]\n+    target_origin_id = \"s3-public\"\n+\n+    forwarded_values {\n+      query_string = false\n+\n+      cookies {\n+        forward = \"none\"\n+      }\n+    }\n+\n+    viewer_protocol_policy = \"allow-all\"\n+    min_ttl                = 0\n+    default_ttl            = 30\n+    max_ttl                = 60\n+  }\n+\n+  # Choosing a Price Class\n+  # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html\n+  price_class = \"PriceClass_200\"\n+\n+  restrictions {\n+    geo_restriction {\n+      restriction_type = \"whitelist\"\n+      locations        = [\"DE\"]\n+    }\n+  }\n+\n+  viewer_certificate {\n+    cloudfront_default_certificate = true\n+  }\n+}"
      },
      {
        "filename": "solutions-architect-associate/terraform/etc/index.html",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1 +1 @@\n-<h1> Hello World! </h1>\n+<h1> Hello World! V6 </h1>"
      },
      {
        "filename": "solutions-architect-associate/terraform/terraform.tfstate",
        "additions": 116,
        "deletions": 3,
        "changes": 119,
        "status": "modified",
        "patch": "@@ -1,10 +1,123 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"0.12.24\",\n-  \"serial\": 104,\n+  \"serial\": 111,\n   \"lineage\": \"cdbbb50b-de72-5b23-3968-49dd7ad1d845\",\n   \"outputs\": {},\n   \"resources\": [\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_cloudfront_distribution\",\n+      \"name\": \"s3_distribution\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 1,\n+          \"attributes\": {\n+            \"active_trusted_signers\": {\n+              \"enabled\": \"false\",\n+              \"items.#\": \"0\"\n+            },\n+            \"aliases\": [],\n+            \"arn\": \"arn:aws:cloudfront::436791802080:distribution/E7Z3RVR670H5K\",\n+            \"cache_behavior\": [],\n+            \"caller_reference\": \"terraform-20200517070917776300000001\",\n+            \"comment\": null,\n+            \"custom_error_response\": [],\n+            \"default_cache_behavior\": [\n+              {\n+                \"allowed_methods\": [\n+                  \"GET\",\n+                  \"HEAD\",\n+                  \"OPTIONS\"\n+                ],\n+                \"cached_methods\": [\n+                  \"GET\",\n+                  \"HEAD\"\n+                ],\n+                \"compress\": false,\n+                \"default_ttl\": 30,\n+                \"field_level_encryption_id\": \"\",\n+                \"forwarded_values\": [\n+                  {\n+                    \"cookies\": [\n+                      {\n+                        \"forward\": \"none\",\n+                        \"whitelisted_names\": []\n+                      }\n+                    ],\n+                    \"headers\": [],\n+                    \"query_string\": false,\n+                    \"query_string_cache_keys\": []\n+                  }\n+                ],\n+                \"lambda_function_association\": [],\n+                \"max_ttl\": 60,\n+                \"min_ttl\": 0,\n+                \"smooth_streaming\": false,\n+                \"target_origin_id\": \"s3-public\",\n+                \"trusted_signers\": [],\n+                \"viewer_protocol_policy\": \"allow-all\"\n+              }\n+            ],\n+            \"default_root_object\": \"index.html\",\n+            \"domain_name\": \"d2iconzlbekdsu.cloudfront.net\",\n+            \"enabled\": true,\n+            \"etag\": \"EWZYLZ7RFNA95\",\n+            \"hosted_zone_id\": \"Z2FDTNDATAQYW2\",\n+            \"http_version\": \"http2\",\n+            \"id\": \"E7Z3RVR670H5K\",\n+            \"in_progress_validation_batches\": 0,\n+            \"is_ipv6_enabled\": true,\n+            \"last_modified_time\": \"2020-05-17 07:20:00.999 +0000 UTC\",\n+            \"logging_config\": [],\n+            \"ordered_cache_behavior\": [],\n+            \"origin\": [\n+              {\n+                \"custom_header\": [],\n+                \"custom_origin_config\": [],\n+                \"domain_name\": \"aux-storage-01.s3.eu-central-1.amazonaws.com\",\n+                \"origin_id\": \"s3-public\",\n+                \"origin_path\": \"\",\n+                \"s3_origin_config\": []\n+              }\n+            ],\n+            \"origin_group\": [],\n+            \"price_class\": \"PriceClass_200\",\n+            \"restrictions\": [\n+              {\n+                \"geo_restriction\": [\n+                  {\n+                    \"locations\": [\n+                      \"DE\"\n+                    ],\n+                    \"restriction_type\": \"whitelist\"\n+                  }\n+                ]\n+              }\n+            ],\n+            \"retain_on_delete\": false,\n+            \"status\": \"Deployed\",\n+            \"tags\": {},\n+            \"viewer_certificate\": [\n+              {\n+                \"acm_certificate_arn\": \"\",\n+                \"cloudfront_default_certificate\": true,\n+                \"iam_certificate_id\": \"\",\n+                \"minimum_protocol_version\": \"TLSv1\",\n+                \"ssl_support_method\": \"\"\n+              }\n+            ],\n+            \"wait_for_deployment\": true,\n+            \"web_acl_id\": \"\"\n+          },\n+          \"private\": \"eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==\",\n+          \"dependencies\": [\n+            \"aws_s3_bucket.aux_storage_01\"\n+          ]\n+        }\n+      ]\n+    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_iam_group\",\n@@ -642,7 +755,7 @@\n             \"content_encoding\": \"\",\n             \"content_language\": \"\",\n             \"content_type\": \"text/html\",\n-            \"etag\": \"4cc3b9df10c1364595bd87036497b5bc\",\n+            \"etag\": \"74766258babd584bfd02ce3c4de3f942\",\n             \"force_destroy\": false,\n             \"id\": \"public/index.html\",\n             \"key\": \"public/index.html\",\n@@ -655,7 +768,7 @@\n             \"source\": \"etc/index.html\",\n             \"storage_class\": \"STANDARD\",\n             \"tags\": {},\n-            \"version_id\": \"null\",\n+            \"version_id\": \"vf1.ogFmT5HRKGkLJ3IegVLN8GhyAZHR\",\n             \"website_redirect\": \"\"\n           },\n           \"private\": \"bnVsbA==\","
      },
      {
        "filename": "solutions-architect-associate/topics/04_CLOUD_FRONT.md",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "status": "added",
        "patch": "@@ -0,0 +1,33 @@\n+# CloudFront\n+\n+* CDN - Content Delivery Network\n+* It is a Global Service (not bound by region)\n+* 2 Modes Available: Web/HTTP & RTMP (Adobe Flash Media, used for streaming)\n+* Edge Location - Network AccessPoint on a region where content is cached\n+* Origin - Source of the files or content being distributed, e.g.: S3 Bucket, ELB, EC2 or Route53\n+* Distribution - Collection of Edge Locations\n+* Edge Locations are NOT READ ONLY - you can write to them\n+* CF is able to serve static, streaming and dynamic content, making it suitable for most applications\n+* CF is able to redirect user / download content from another Edge Location rather than the origin (making it cheaper)\n+* CF is able to set different path to different origins\n+* CF is able to set different cache rules based on different origins\n+* You are able to clear cache TTL (creating an Invalidation) but you are charged for that\n+* TTL is measured in secconds\n+\n+### Lab:\n+\n+* Create a cloud-front distributions\n+* Assign to the known bucket\n+* Test index\n+* Test updating file (cache invalidation should take a while to hit)\n+* Disable distribution to avoid costs\n+\n+### More Info\n+\n+* [Choosing a PriceClass](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html)\n+\n+> By default, CloudFront responds to requests for your objects based only on performance: objects are served from the edge location for which latency is lowest for that viewer. If you're willing to accept higher latency for your viewers in some geographic regions in return for lower cost, you can choose a price class that doesn't include all CloudFront regions. Although CloudFront will serve your objects only from the edge locations in that price class, it still serves content from the edge location that has the lowest latency among the edge locations in your selected price class. However, some of your viewers, especially those in geographic regions that are not in your price class, may see higher latency than if your content were being served from all CloudFront edge locations. For example, if you choose the price class that includes only the United States and Europe, viewers in Australia and in Asia may experience higher latency than if you choose the price class that includes Australia and Asia.\n+\n+> If you choose a price class that does not include all edge locations, CloudFront may still occasionally serve requests for your content from an edge location in a region that is not included in your price class. When this happens, you are not charged the rate for the more expensive region from which your objects were served. Instead, you're charged the rate for the least expensive region in your selected price class.\n+\n+* [Pricing Info](https://aws.amazon.com/cloudfront/pricing/)"
      }
    ],
    "existing_codes": [
      "awareness",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/marceloboeira/certifications/commit/985612e94b1ba7d6a881c6b2fe074449f47dd45d",
    "files": [
      {
        "filename": "solutions-architect-associate/terraform/11_cache.tf",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "status": "modified",
        "patch": "@@ -21,14 +21,15 @@ resource \"aws_security_group\" \"redis\" {\n   }\n }\n \n-resource \"aws_elasticache_cluster\" \"webserver_redis\" {\n-  cluster_id         = \"webserver-redis\"\n-  security_group_ids = [aws_security_group.redis.id]\n-\n-  engine               = \"redis\"\n-  node_type            = \"cache.t2.micro\"\n-  num_cache_nodes      = 1\n-  parameter_group_name = \"default.redis3.2\"\n-  engine_version       = \"3.2.10\"\n-  port                 = 6379\n-}\n+# Disabled to avoid costs\n+# resource \"aws_elasticache_cluster\" \"webserver_redis\" {\n+#   cluster_id         = \"webserver-redis\"\n+#   security_group_ids = [aws_security_group.redis.id]\n+#\n+#   engine               = \"redis\"\n+#   node_type            = \"cache.t2.micro\"\n+#   num_cache_nodes      = 1\n+#   parameter_group_name = \"default.redis3.2\"\n+#   engine_version       = \"3.2.10\"\n+#   port                 = 6379\n+# }"
      },
      {
        "filename": "solutions-architect-associate/terraform/11_databases.tf",
        "additions": 21,
        "deletions": 20,
        "changes": 41,
        "status": "modified",
        "patch": "@@ -21,26 +21,27 @@ resource \"aws_security_group\" \"mysql\" {\n   }\n }\n \n-resource \"aws_db_instance\" \"web_server_mysql\" {\n-  identifier = \"ninenine\"\n-  name       = \"ninenine\"\n-  username   = \"noice\"\n-  password   = \"toits-99\"\n-\n-  engine               = \"mysql\"\n-  engine_version       = \"5.7\"\n-  parameter_group_name = \"default.mysql5.7\"\n-\n-  instance_class          = \"db.t2.micro\"\n-  allocated_storage       = 20\n-  storage_type            = \"gp2\"\n-  apply_immediately       = true\n-  backup_retention_period = 0\n-\n-  publicly_accessible    = true\n-  vpc_security_group_ids = [aws_security_group.mysql.id]\n-  multi_az               = true\n-}\n+# Database RDS, Uncomment if you want to run it\n+# resource \"aws_db_instance\" \"web_server_mysql\" {\n+#   identifier = \"ninenine\"\n+#   name       = \"ninenine\"\n+#   username   = \"noice\"\n+#   password   = \"toits-99\"\n+#\n+#   engine               = \"mysql\"\n+#   engine_version       = \"5.7\"\n+#   parameter_group_name = \"default.mysql5.7\"\n+#\n+#   instance_class          = \"db.t2.micro\"\n+#   allocated_storage       = 20\n+#   storage_type            = \"gp2\"\n+#   apply_immediately       = true\n+#   backup_retention_period = 0\n+#\n+#   publicly_accessible    = true\n+#   vpc_security_group_ids = [aws_security_group.mysql.id]\n+#   multi_az               = true\n+# }\n \n \n # data \"aws_subnet_ids\" \"main\" {"
      },
      {
        "filename": "solutions-architect-associate/terraform/terraform.tfstate",
        "additions": 2,
        "deletions": 60,
        "changes": 62,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"0.12.25\",\n-  \"serial\": 193,\n+  \"serial\": 196,\n   \"lineage\": \"cdbbb50b-de72-5b23-3968-49dd7ad1d845\",\n   \"outputs\": {},\n   \"resources\": [\n@@ -293,11 +293,7 @@\n             \"vpc_security_group_ids\": [\n               \"sg-0d245deae51116fed\"\n             ]\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6NDgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n-          \"dependencies\": [\n-            \"aws_security_group.mysql\"\n-          ]\n+          }\n         }\n       ]\n     },\n@@ -358,60 +354,6 @@\n         }\n       ]\n     },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_elasticache_cluster\",\n-      \"name\": \"webserver_redis\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"apply_immediately\": null,\n-            \"arn\": \"arn:aws:elasticache:eu-central-1:436791802080:cluster:webserver-redis\",\n-            \"availability_zone\": \"eu-central-1a\",\n-            \"availability_zones\": null,\n-            \"az_mode\": \"single-az\",\n-            \"cache_nodes\": [\n-              {\n-                \"address\": \"webserver-redis.svvuhq.0001.euc1.cache.amazonaws.com\",\n-                \"availability_zone\": \"eu-central-1a\",\n-                \"id\": \"0001\",\n-                \"port\": 6379\n-              }\n-            ],\n-            \"cluster_address\": null,\n-            \"cluster_id\": \"webserver-redis\",\n-            \"configuration_endpoint\": null,\n-            \"engine\": \"redis\",\n-            \"engine_version\": \"3.2.10\",\n-            \"id\": \"webserver-redis\",\n-            \"maintenance_window\": \"mon:03:30-mon:04:30\",\n-            \"node_type\": \"cache.t2.micro\",\n-            \"notification_topic_arn\": null,\n-            \"num_cache_nodes\": 1,\n-            \"parameter_group_name\": \"default.redis3.2\",\n-            \"port\": 6379,\n-            \"preferred_availability_zones\": null,\n-            \"replication_group_id\": null,\n-            \"security_group_ids\": [\n-              \"sg-08470fb91a3dbc7b2\"\n-            ],\n-            \"security_group_names\": [],\n-            \"snapshot_arns\": null,\n-            \"snapshot_name\": null,\n-            \"snapshot_retention_limit\": 0,\n-            \"snapshot_window\": \"02:30-03:30\",\n-            \"subnet_group_name\": \"default\",\n-            \"tags\": null\n-          },\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_security_group.redis\"\n-          ]\n-        }\n-      ]\n-    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_iam_group\","
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/marceloboeira/certifications/commit/48f4dbd21e8912511bf5b7441a2a9e207f025d8e",
    "files": [
      {
        "filename": "solutions-architect-associate/terraform/14_loadbalancers.tf",
        "additions": 67,
        "deletions": 64,
        "changes": 131,
        "status": "modified",
        "patch": "@@ -1,61 +1,63 @@\n ## Elastic Load Balancer\n-resource \"aws_elb\" \"classic\" {\n-  name               = \"elb-classic\"\n-  availability_zones = [\n-    \"eu-central-1a\",\n-    \"eu-central-1b\",\n-  ]\n-\n-  listener {\n-    instance_port     = 80\n-    instance_protocol = \"http\"\n-    lb_port           = 80\n-    lb_protocol       = \"http\"\n-  }\n-\n-  security_groups = [\n-    aws_security_group.ec2.id,\n-  ]\n-  health_check {\n-    healthy_threshold   = 3\n-    unhealthy_threshold = 2\n-    timeout             = 3\n-    interval            = 5\n-    target              = \"HTTP:80/index.html\"\n-  }\n-\n-  instances = [\n-    aws_instance.elb_webserver_01.id,\n-    aws_instance.elb_webserver_02.id,\n-  ]\n-\n-  cross_zone_load_balancing   = true\n-  idle_timeout                = 400\n-  connection_draining         = true\n-  connection_draining_timeout = 400\n-\n-  tags = {\n-    Name = \"elb-classic\",\n-  }\n-}\n+# Commented Out to Save $$\n+# resource \"aws_elb\" \"classic\" {\n+#   name               = \"elb-classic\"\n+#   availability_zones = [\n+#     \"eu-central-1a\",\n+#     \"eu-central-1b\",\n+#   ]\n+#\n+#   listener {\n+#     instance_port     = 80\n+#     instance_protocol = \"http\"\n+#     lb_port           = 80\n+#     lb_protocol       = \"http\"\n+#   }\n+#\n+#   security_groups = [\n+#     aws_security_group.ec2.id,\n+#   ]\n+#   health_check {\n+#     healthy_threshold   = 3\n+#     unhealthy_threshold = 2\n+#     timeout             = 3\n+#     interval            = 5\n+#     target              = \"HTTP:80/index.html\"\n+#   }\n+#\n+#   instances = [\n+#     aws_instance.elb_webserver_01.id,\n+#     aws_instance.elb_webserver_02.id,\n+#   ]\n+#\n+#   cross_zone_load_balancing   = true\n+#   idle_timeout                = 400\n+#   connection_draining         = true\n+#   connection_draining_timeout = 400\n+#\n+#   tags = {\n+#     Name = \"elb-classic\",\n+#   }\n+# }\n \n ## Application Load Balancer\n \n-resource \"aws_lb\" \"main\" {\n-  name               = \"alb-main\"\n-  internal           = false\n-  load_balancer_type = \"application\"\n-  security_groups    = [\n-    aws_security_group.ec2.id,\n-  ]\n-\n-  subnets = [\n-    data.aws_subnet.frankfurt_main_a.id,\n-    data.aws_subnet.frankfurt_main_b.id,\n-  ]\n-\n-  enable_deletion_protection = false\n-}\n+# Commented Out to Save $$\n+# resource \"aws_lb\" \"main\" {\n+#   name               = \"alb-main\"\n+#   internal           = false\n+#   load_balancer_type = \"application\"\n+#   security_groups    = [\n+#     aws_security_group.ec2.id,\n+#   ]\n+#\n+#   subnets = [\n+#     data.aws_subnet.frankfurt_main_a.id,\n+#     data.aws_subnet.frankfurt_main_b.id,\n+#   ]\n+#\n+#   enable_deletion_protection = false\n+# }\n \n resource \"aws_lb_target_group\" \"main_target\" {\n   name     = \"elb-web-server-01\"\n@@ -88,13 +90,14 @@ resource \"aws_lb_target_group_attachment\" \"instance_02\" {\n   port             = 80\n }\n \n-resource \"aws_lb_listener\" \"default\" {\n-  load_balancer_arn = aws_lb.main.arn\n-  port              = \"80\"\n-  protocol          = \"HTTP\"\n-\n-  default_action {\n-    type             = \"forward\"\n-    target_group_arn = aws_lb_target_group.main_target.arn\n-  }\n-}\n+# Commented Out to Save $$\n+# resource \"aws_lb_listener\" \"default\" {\n+#   load_balancer_arn = aws_lb.main.arn\n+#   port              = \"80\"\n+#   protocol          = \"HTTP\"\n+#\n+#   default_action {\n+#     type             = \"forward\"\n+#     target_group_arn = aws_lb_target_group.main_target.arn\n+#   }\n+# }"
      },
      {
        "filename": "solutions-architect-associate/terraform/terraform.tfstate",
        "additions": 5,
        "deletions": 196,
        "changes": 201,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"0.12.25\",\n-  \"serial\": 345,\n+  \"serial\": 349,\n   \"lineage\": \"cdbbb50b-de72-5b23-3968-49dd7ad1d845\",\n   \"outputs\": {},\n   \"resources\": [\n@@ -569,15 +569,15 @@\n           \"attributes\": {\n             \"allocation_id\": null,\n             \"associate_with_private_ip\": null,\n-            \"association_id\": \"eipassoc-08b4d3c5\",\n+            \"association_id\": \"\",\n             \"customer_owned_ip\": \"\",\n             \"customer_owned_ipv4_pool\": \"\",\n             \"domain\": \"vpc\",\n             \"id\": \"eipalloc-05bec0927b267c9b4\",\n             \"instance\": \"\",\n-            \"network_interface\": \"eni-0c4524e7c6abcea7c\",\n+            \"network_interface\": \"\",\n             \"private_dns\": \"ip-10-0-1-236.eu-central-1.compute.internal\",\n-            \"private_ip\": \"10.0.1.236\",\n+            \"private_ip\": \"\",\n             \"public_dns\": \"ec2-3-126-53-228.eu-central-1.compute.amazonaws.com\",\n             \"public_ip\": \"3.126.53.228\",\n             \"public_ipv4_pool\": \"amazon\",\n@@ -589,75 +589,6 @@\n         }\n       ]\n     },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_elb\",\n-      \"name\": \"classic\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"access_logs\": [],\n-            \"arn\": \"arn:aws:elasticloadbalancing:eu-central-1:436791802080:loadbalancer/elb-classic\",\n-            \"availability_zones\": [\n-              \"eu-central-1a\",\n-              \"eu-central-1b\"\n-            ],\n-            \"connection_draining\": true,\n-            \"connection_draining_timeout\": 400,\n-            \"cross_zone_load_balancing\": true,\n-            \"dns_name\": \"elb-classic-1638210917.eu-central-1.elb.amazonaws.com\",\n-            \"health_check\": [\n-              {\n-                \"healthy_threshold\": 3,\n-                \"interval\": 5,\n-                \"target\": \"HTTP:80/index.html\",\n-                \"timeout\": 3,\n-                \"unhealthy_threshold\": 2\n-              }\n-            ],\n-            \"id\": \"elb-classic\",\n-            \"idle_timeout\": 400,\n-            \"instances\": [\n-              \"i-00151b254d496d2bb\",\n-              \"i-00baf81d899e8653c\"\n-            ],\n-            \"internal\": false,\n-            \"listener\": [\n-              {\n-                \"instance_port\": 80,\n-                \"instance_protocol\": \"http\",\n-                \"lb_port\": 80,\n-                \"lb_protocol\": \"http\",\n-                \"ssl_certificate_id\": \"\"\n-              }\n-            ],\n-            \"name\": \"elb-classic\",\n-            \"name_prefix\": null,\n-            \"security_groups\": [\n-              \"sg-0ffad46e70b400bb5\"\n-            ],\n-            \"source_security_group\": \"436791802080/allow-web-ssh-nfs\",\n-            \"source_security_group_id\": \"sg-0ffad46e70b400bb5\",\n-            \"subnets\": [\n-              \"subnet-2370865f\",\n-              \"subnet-a67ac1cc\"\n-            ],\n-            \"tags\": {\n-              \"Name\": \"elb-classic\"\n-            },\n-            \"zone_id\": \"Z215JYRZR1TBD5\"\n-          },\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_instance.elb_webserver_01\",\n-            \"aws_instance.elb_webserver_02\",\n-            \"aws_security_group.ec2\"\n-          ]\n-        }\n-      ]\n-    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_iam_group\",\n@@ -1585,103 +1516,6 @@\n         }\n       ]\n     },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_lb\",\n-      \"name\": \"main\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"access_logs\": [\n-              {\n-                \"bucket\": \"\",\n-                \"enabled\": false,\n-                \"prefix\": \"\"\n-              }\n-            ],\n-            \"arn\": \"arn:aws:elasticloadbalancing:eu-central-1:436791802080:loadbalancer/app/alb-main/bfa56c257fbfae1e\",\n-            \"arn_suffix\": \"app/alb-main/bfa56c257fbfae1e\",\n-            \"dns_name\": \"alb-main-1745140250.eu-central-1.elb.amazonaws.com\",\n-            \"drop_invalid_header_fields\": false,\n-            \"enable_cross_zone_load_balancing\": null,\n-            \"enable_deletion_protection\": false,\n-            \"enable_http2\": true,\n-            \"id\": \"arn:aws:elasticloadbalancing:eu-central-1:436791802080:loadbalancer/app/alb-main/bfa56c257fbfae1e\",\n-            \"idle_timeout\": 60,\n-            \"internal\": false,\n-            \"ip_address_type\": \"ipv4\",\n-            \"load_balancer_type\": \"application\",\n-            \"name\": \"alb-main\",\n-            \"name_prefix\": null,\n-            \"security_groups\": [\n-              \"sg-0ffad46e70b400bb5\"\n-            ],\n-            \"subnet_mapping\": [\n-              {\n-                \"allocation_id\": \"\",\n-                \"subnet_id\": \"subnet-2370865f\"\n-              },\n-              {\n-                \"allocation_id\": \"\",\n-                \"subnet_id\": \"subnet-a67ac1cc\"\n-              }\n-            ],\n-            \"subnets\": [\n-              \"subnet-2370865f\",\n-              \"subnet-a67ac1cc\"\n-            ],\n-            \"tags\": null,\n-            \"timeouts\": null,\n-            \"vpc_id\": \"vpc-f1895a9b\",\n-            \"zone_id\": \"Z215JYRZR1TBD5\"\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19\",\n-          \"dependencies\": [\n-            \"aws_security_group.ec2\"\n-          ]\n-        }\n-      ]\n-    },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_lb_listener\",\n-      \"name\": \"default\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"arn\": \"arn:aws:elasticloadbalancing:eu-central-1:436791802080:listener/app/alb-main/bfa56c257fbfae1e/08749c1f3a015031\",\n-            \"certificate_arn\": null,\n-            \"default_action\": [\n-              {\n-                \"authenticate_cognito\": [],\n-                \"authenticate_oidc\": [],\n-                \"fixed_response\": [],\n-                \"order\": 1,\n-                \"redirect\": [],\n-                \"target_group_arn\": \"arn:aws:elasticloadbalancing:eu-central-1:436791802080:targetgroup/elb-web-server-01/b90edc1bbf6ae348\",\n-                \"type\": \"forward\"\n-              }\n-            ],\n-            \"id\": \"arn:aws:elasticloadbalancing:eu-central-1:436791802080:listener/app/alb-main/bfa56c257fbfae1e/08749c1f3a015031\",\n-            \"load_balancer_arn\": \"arn:aws:elasticloadbalancing:eu-central-1:436791802080:loadbalancer/app/alb-main/bfa56c257fbfae1e\",\n-            \"port\": 80,\n-            \"protocol\": \"HTTP\",\n-            \"ssl_policy\": \"\",\n-            \"timeouts\": null\n-          },\n-          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsicmVhZCI6NjAwMDAwMDAwMDAwfX0=\",\n-          \"dependencies\": [\n-            \"aws_lb.main\",\n-            \"aws_lb_target_group.main_target\",\n-            \"aws_security_group.ec2\"\n-          ]\n-        }\n-      ]\n-    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_lb_target_group\",\n@@ -1723,7 +1557,7 @@\n                 \"type\": \"lb_cookie\"\n               }\n             ],\n-            \"tags\": null,\n+            \"tags\": {},\n             \"target_type\": \"instance\",\n             \"vpc_id\": \"vpc-f1895a9b\"\n           },\n@@ -1777,31 +1611,6 @@\n         }\n       ]\n     },\n-    {\n-      \"mode\": \"managed\",\n-      \"type\": \"aws_nat_gateway\",\n-      \"name\": \"custom\",\n-      \"provider\": \"provider.aws\",\n-      \"instances\": [\n-        {\n-          \"schema_version\": 0,\n-          \"attributes\": {\n-            \"allocation_id\": \"eipalloc-05bec0927b267c9b4\",\n-            \"id\": \"nat-01044678be232b844\",\n-            \"network_interface_id\": \"eni-0c4524e7c6abcea7c\",\n-            \"private_ip\": \"10.0.1.236\",\n-            \"public_ip\": \"3.126.53.228\",\n-            \"subnet_id\": \"subnet-0cf0ff3459a775b3e\",\n-            \"tags\": {}\n-          },\n-          \"private\": \"bnVsbA==\",\n-          \"dependencies\": [\n-            \"aws_eip.nat\",\n-            \"aws_subnet.custom_a\"\n-          ]\n-        }\n-      ]\n-    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_network_acl\","
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/davidcallen/parkrunpointsleague/commit/21627e4057b3446b511e4369ca366e297cfc87eb",
    "files": [
      {
        "filename": "deploy/aws/terraform/backbone/terraform.tfvars",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -78,3 +78,4 @@ client_vpn = {\n }\n route53_testing_mode_enabled = false\n prpl_deploy_modes            = [\"RKE\"] # modes : ECS, EC2, EC2-HA, EKS, RKE\n+backbone_only_account_mode   = true\n\\ No newline at end of file"
      },
      {
        "filename": "deploy/aws/terraform/backbone/tgw.tf",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,5 +1,6 @@\n #  TGW has auto-accept attachments to facilitate automation.\n resource \"aws_ec2_transit_gateway\" \"tgw\" {\n+  count                           = (var.backbone_only_account_mode == false) ? 1 : 0\n   description                     = \"TGW for ${module.global_variables.org_domain_name}\"\n   amazon_side_asn                 = \"64520\"\n   auto_accept_shared_attachments  = \"enable\"\n@@ -13,10 +14,11 @@ resource \"aws_ec2_transit_gateway\" \"tgw\" {\n # Share above TGW into our other accounts\n # This module should be applied in the account where the TGW exists (in master since TGW is currently regional only)\n module \"tgw-sharing-cross-accounts\" {\n+  count = (var.backbone_only_account_mode == false) ? 1 : 0\n   # source = \"git@github.com:davidcallen/terraform-module-tgw-sharing-cross-accounts.git?ref=1.0.0\"\n   source                 = \"../../../../../terraform-modules/terraform-module-tgw-sharing-cross-accounts\"\n   resource_name_prefix   = \"${var.environment.resource_name_prefix}-tgw-share\"\n-  tgw_arn                = aws_ec2_transit_gateway.tgw.arn\n+  tgw_arn                = aws_ec2_transit_gateway.tgw[0].arn\n   share_with_account_ids = var.cross_account_access.accounts[*].account_id\n   default_tags           = merge(module.global_variables.default_tags, var.environment.default_tags)\n }\n\\ No newline at end of file"
      },
      {
        "filename": "deploy/aws/terraform/backbone/variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -80,6 +80,11 @@ variable \"route53_testing_mode_enabled\" {\n   type        = bool\n   default     = false\n }\n+variable \"backbone_only_account_mode\" {\n+  description = \"True if only want backbone account - for simple testing and cheapness\"\n+  type        = bool\n+  default     = false\n+}\n variable \"prpl_deploy_modes\" {\n   description = \"Enabled modes for deployment of PRPL : ECS, EC2, EC2-HA, EKS\"\n   type        = list(string)"
      },
      {
        "filename": "deploy/aws/terraform/backbone/vpc.tf",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -100,8 +100,9 @@ module \"endpoints\" {\n # Shared Transit Gateway : attach VPC\n # ---------------------------------------------------------------------------------------------------------------------\n resource \"aws_ec2_transit_gateway_vpc_attachment\" \"cross-account\" {\n+  count              = (var.backbone_only_account_mode == false) ? 1 : 0\n   subnet_ids         = module.vpc.private_subnets\n-  transit_gateway_id = aws_ec2_transit_gateway.tgw.id\n+  transit_gateway_id = aws_ec2_transit_gateway.tgw[0].id\n   vpc_id             = module.vpc.vpc_id\n   tags = merge(module.global_variables.default_tags, var.environment.default_tags, {\n     Name = \"${var.environment.resource_name_prefix}-tgw-vpc-attachment\"\n@@ -115,10 +116,10 @@ locals {\n   route_table_account_cidr_combination_pairs = setproduct(module.vpc.private_route_table_ids, var.cross_account_access.accounts[*].cidr_block)\n }\n resource \"aws_route\" \"route-cross-account-shared-tgw\" {\n-  count                  = length(local.route_table_account_cidr_combination_pairs)\n+  count                  = (var.backbone_only_account_mode == false) ? length(local.route_table_account_cidr_combination_pairs) : 0\n   route_table_id         = element(local.route_table_account_cidr_combination_pairs, count.index)[0]\n   destination_cidr_block = element(local.route_table_account_cidr_combination_pairs, count.index)[1]\n-  transit_gateway_id     = aws_ec2_transit_gateway_vpc_attachment.cross-account.transit_gateway_id\n+  transit_gateway_id     = aws_ec2_transit_gateway_vpc_attachment.cross-account[0].transit_gateway_id\n }\n //\n //# ---------------------------------------------------------------------------------------------------------------------\n@@ -142,10 +143,10 @@ locals {\n   route_table_external_networks_cidr_combination_pairs = setproduct(module.vpc.private_route_table_ids, module.global_variables.allowed_org_private_network_cidrs)\n }\n resource \"aws_route\" \"route-external-networks-shared-tgw\" {\n-  count                  = length(local.route_table_external_networks_cidr_combination_pairs)\n+  count                  = (var.backbone_only_account_mode == false) ? length(local.route_table_external_networks_cidr_combination_pairs) : 0\n   route_table_id         = element(local.route_table_external_networks_cidr_combination_pairs, count.index)[0]\n   destination_cidr_block = element(local.route_table_external_networks_cidr_combination_pairs, count.index)[1]\n-  transit_gateway_id     = aws_ec2_transit_gateway_vpc_attachment.cross-account.transit_gateway_id\n+  transit_gateway_id     = aws_ec2_transit_gateway_vpc_attachment.cross-account[0].transit_gateway_id\n }\n \n # ---------------------------------------------------------------------------------------------------------------------"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ministryofjustice/network-access-control-infrastructure/commit/95c70a0a304c55adacc3ba0605dd2b9aa2730f6f",
    "files": [
      {
        "filename": "modules/admin/cluster.tf",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -56,6 +56,30 @@ resource \"aws_ecr_repository_policy\" \"admin_docker_nac_repository_policy\" {\n EOF\n }\n \n+resource \"aws_ecr_lifecycle_policy\" \"admin_container\" {\n+  repository = aws_ecr_repository.admin_ecr.name\n+\n+  policy = <<EOF\n+{\n+    \"rules\": [\n+        {\n+            \"rulePriority\": 1,\n+            \"description\": \"Expire images older than 14 days\",\n+            \"selection\": {\n+                \"tagStatus\": \"untagged\",\n+                \"countType\": \"sinceImagePushed\",\n+                \"countUnit\": \"days\",\n+                \"countNumber\": 14\n+            },\n+            \"action\": {\n+                \"type\": \"expire\"\n+            }\n+        }\n+    ]\n+}\n+EOF\n+}\n+\n resource \"aws_ecs_task_definition\" \"admin_task\" {\n   family                   = \"${var.prefix}-task\"\n   requires_compatibilities = [\"FARGATE\"]"
      },
      {
        "filename": "modules/radius/ecr.tf",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -39,3 +39,27 @@ resource \"aws_ecr_repository_policy\" \"docker_repository_policy\" {\n }\n EOF\n }\n+\n+resource \"aws_ecr_lifecycle_policy\" \"radius_container\" {\n+  repository = aws_ecr_repository.docker_repository.name\n+\n+  policy = <<EOF\n+{\n+    \"rules\": [\n+        {\n+            \"rulePriority\": 1,\n+            \"description\": \"Expire images older than 14 days\",\n+            \"selection\": {\n+                \"tagStatus\": \"untagged\",\n+                \"countType\": \"sinceImagePushed\",\n+                \"countUnit\": \"days\",\n+                \"countNumber\": 14\n+            },\n+            \"action\": {\n+                \"type\": \"expire\"\n+            }\n+        }\n+    ]\n+}\n+EOF\n+}"
      },
      {
        "filename": "modules/radius/ecr_nginx.tf",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -39,3 +39,27 @@ resource \"aws_ecr_repository\" \"docker_repository_nginx\" {\n     scan_on_push = true\n   }\n }\n+\n+resource \"aws_ecr_lifecycle_policy\" \"radius_nginx_sidecar_container\" {\n+  repository = aws_ecr_repository.docker_repository_nginx.name\n+\n+  policy = <<EOF\n+{\n+    \"rules\": [\n+        {\n+            \"rulePriority\": 1,\n+            \"description\": \"Expire images older than 14 days\",\n+            \"selection\": {\n+                \"tagStatus\": \"untagged\",\n+                \"countType\": \"sinceImagePushed\",\n+                \"countUnit\": \"days\",\n+                \"countNumber\": 14\n+            },\n+            \"action\": {\n+                \"type\": \"expire\"\n+            }\n+        }\n+    ]\n+}\n+EOF\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/bhfsystem/fogg/commit/81e606a72e7c2e06c2f6d9c204086157aa82eac3",
    "files": [
      {
        "filename": "module/env/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -29,7 +29,7 @@ data \"aws_ami\" \"env\" {\n \n   filter {\n     name   = \"block-device-mapping.volume-type\"\n-    values = [\"gp2\"]\n+    values = [\"sc1\"]\n   }\n \n   owners = [\"099720109477\"] # Canonical"
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/bhfsystem/fogg/commit/7cc487f270d553f819fea0cf96e872c374979305",
    "files": [
      {
        "filename": "module/service/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -177,7 +177,7 @@ resource \"aws_launch_configuration\" \"service\" {\n   }\n \n   root_block_device {\n-    volume_type = \"gp2\"\n+    volume_type = \"sc1\"\n     volume_size = \"${element(var.root_volume_size,count.index)}\"\n   }\n "
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cisagov/cool-assessment-terraform/commit/3138943ab4d15cc256d322e1128862ef11383c73",
    "files": [
      {
        "filename": "assessorportal_ec2.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -48,7 +48,7 @@ resource \"aws_instance\" \"assessorportal\" {\n     http_tokens = \"required\"\n   }\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 128\n     delete_on_termination = true\n   }\n@@ -82,7 +82,7 @@ resource \"aws_ebs_volume\" \"assessorportal_docker\" {\n   availability_zone = \"${var.aws_region}${var.aws_availability_zone}\"\n   encrypted         = true\n   size              = 16\n-  type              = \"gp2\"\n+  type              = \"gp3\"\n \n   tags = {\n     Name = format(\"AssessorPortal%d Docker\", count.index)"
      },
      {
        "filename": "debiandesktop_ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -48,7 +48,7 @@ resource \"aws_instance\" \"debiandesktop\" {\n     http_tokens = \"required\"\n   }\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 128\n     delete_on_termination = true\n   }"
      },
      {
        "filename": "examples/use-terraformer-instance/teamserver_ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -29,7 +29,7 @@ resource \"aws_instance\" \"teamserver\" {\n   instance_type               = \"t3.large\"\n   subnet_id                   = data.terraform_remote_state.cool_assessment_terraform.outputs.operations_subnet.id\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 128\n     delete_on_termination = true\n   }"
      },
      {
        "filename": "gophish_ec2.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -51,7 +51,7 @@ resource \"aws_instance\" \"gophish\" {\n     http_tokens = \"required\"\n   }\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 128\n     delete_on_termination = true\n   }\n@@ -107,7 +107,7 @@ resource \"aws_ebs_volume\" \"gophish_docker\" {\n   availability_zone = \"${var.aws_region}${var.aws_availability_zone}\"\n   encrypted         = true\n   size              = 16\n-  type              = \"gp2\"\n+  type              = \"gp3\"\n \n   tags = {\n     Name = format(\"Gophish%d Docker\", count.index)"
      },
      {
        "filename": "guacamole_ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -57,7 +57,7 @@ resource \"aws_instance\" \"guacamole\" {\n     http_tokens = \"required\"\n   }\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 8\n     delete_on_termination = true\n   }"
      },
      {
        "filename": "kali_ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -48,7 +48,7 @@ resource \"aws_instance\" \"kali\" {\n     http_tokens = \"required\"\n   }\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 128\n     delete_on_termination = true\n   }"
      },
      {
        "filename": "nessus_ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -62,7 +62,7 @@ resource \"aws_instance\" \"nessus\" {\n     http_tokens = \"required\"\n   }\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 128\n     delete_on_termination = true\n   }"
      },
      {
        "filename": "pentestportal_ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -48,7 +48,7 @@ resource \"aws_instance\" \"pentestportal\" {\n     http_tokens = \"required\"\n   }\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 128\n     delete_on_termination = true\n   }"
      },
      {
        "filename": "samba_ec2.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -56,6 +56,11 @@ resource \"aws_instance\" \"samba\" {\n     # Require IMDS tokens AKA require the use of IMDSv2\n     http_tokens = \"required\"\n   }\n+  root_block_device {\n+    volume_type           = \"gp3\"\n+    volume_size           = 16\n+    delete_on_termination = true\n+  }\n   user_data_base64 = data.cloudinit_config.samba_cloud_init_tasks.rendered\n   vpc_security_group_ids = [\n     aws_security_group.cloudwatch_and_ssm_agent.id,"
      },
      {
        "filename": "teamserver_ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -50,7 +50,7 @@ resource \"aws_instance\" \"teamserver\" {\n   instance_type               = \"t3.large\"\n   subnet_id                   = aws_subnet.operations.id\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 128\n     delete_on_termination = true\n   }"
      },
      {
        "filename": "terraformer_ec2.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -52,7 +52,7 @@ resource \"aws_instance\" \"terraformer\" {\n     http_tokens = \"required\"\n   }\n   root_block_device {\n-    volume_type           = \"gp2\"\n+    volume_type           = \"gp3\"\n     volume_size           = 20\n     delete_on_termination = true\n   }"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/sawyers/ec2-dev-env/commit/f0bbb7e656d0f9785f1cc7cead6b420e1862f4df",
    "files": [
      {
        "filename": ".terraform.lock.hcl",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "status": "added",
        "patch": "@@ -0,0 +1,53 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/aws\" {\n+  version = \"3.22.0\"\n+  hashes = [\n+    \"h1:KVhBCK+8d3Jpq7T/Un94WH0LiGGCT3j7HCuW71CGd1M=\",\n+    \"zh:4a9a66caf1964cdd3b61fb3ebb0da417195a5529cb8e496f266b0778335d11c8\",\n+    \"zh:514f2f006ae68db715d86781673faf9483292deab235c7402ff306e0e92ea11a\",\n+    \"zh:5277b61109fddb9011728f6650ef01a639a0590aeffe34ed7de7ba10d0c31803\",\n+    \"zh:67784dc8c8375ab37103eea1258c3334ee92be6de033c2b37e3a2a65d0005142\",\n+    \"zh:76d4c8be2ca4a3294fb51fb58de1fe03361d3bc403820270cc8e71a04c5fa806\",\n+    \"zh:8f90b1cfdcf6e8fb1a9d0382ecaa5056a3a84c94e313fbf9e92c89de271cdede\",\n+    \"zh:d0ac346519d0df124df89be2d803eb53f373434890f6ee3fb37112802f9eac59\",\n+    \"zh:d6256feedada82cbfb3b1dd6dd9ad02048f23120ab50e6146a541cb11a108cc1\",\n+    \"zh:db2fe0d2e77c02e9a74e1ed694aa352295a50283f9a1cf896e5be252af14e9f4\",\n+    \"zh:eda61e889b579bd90046939a5b40cf5dc9031fb5a819fc3e4667a78bd432bdb2\",\n+  ]\n+}\n+\n+provider \"registry.terraform.io/hashicorp/http\" {\n+  version = \"2.0.0\"\n+  hashes = [\n+    \"h1:BDwvm4qfII2x/pH/VU0rFRpuS3sj5XLyX2ba/J8slQg=\",\n+    \"zh:066b5f4f80013dcc7d94d7d4b5537607c74f93e8a414ac993709d138a36d7db6\",\n+    \"zh:41c1916d44c263828d39eeb12ab0bea8507e4e41af6f3376cb3f2b93158e35a6\",\n+    \"zh:78a429752ae9c3587a4ccf106ea17a89918732511f45f99ec905d014f88a3e88\",\n+    \"zh:8be68e5e4f095a090534594d1e0e08a8ff76638fc94cb38e5e38a683b8cb62ec\",\n+    \"zh:b00a3d86b86ac07347cd3d89f8bbb966686d897a7c37a18a69b715e8e01a4728\",\n+    \"zh:b9aab522396439716fb2e2cacf97c4083835fd0f8ea15b95d0a754578253c66c\",\n+    \"zh:c475bfacb7da999ff5a652680e7a7969b63c1e994462936a1ac7b98708e4ea1f\",\n+    \"zh:d85f228d5fb4d4197972939d27a00cc6f48309a3d562de44eade347c70f02f83\",\n+    \"zh:d91ece204cd2aec195dc7e0d1a620ceb19dcc2a64072af134fc9e49f233abb3e\",\n+    \"zh:faa5c9801b6686872908fb55d5feb4952168dd53e0dadec0962768e24b93116a\",\n+  ]\n+}\n+\n+provider \"registry.terraform.io/hashicorp/null\" {\n+  version = \"3.0.0\"\n+  hashes = [\n+    \"h1:GnUYWtyIRXT2ruijra2HtwGDb4z3Qk62ZFc1lAOlevo=\",\n+    \"zh:05fb7eab469324c97e9b73a61d2ece6f91de4e9b493e573bfeda0f2077bc3a4c\",\n+    \"zh:1688aa91885a395c4ae67636d411475d0b831e422e005dcf02eedacaafac3bb4\",\n+    \"zh:24a0b1292e3a474f57c483a7a4512d797e041bc9c2fbaac42fe12e86a7fb5a3c\",\n+    \"zh:2fc951bd0d1b9b23427acc93be09b6909d72871e464088171da60fbee4fdde03\",\n+    \"zh:6db825759425599a326385a68acc6be2d9ba0d7d6ef587191d0cdc6daef9ac63\",\n+    \"zh:85985763d02618993c32c294072cc6ec51f1692b803cb506fcfedca9d40eaec9\",\n+    \"zh:a53186599c57058be1509f904da512342cfdc5d808efdaf02dec15f0f3cb039a\",\n+    \"zh:c2e07b49b6efa676bdc7b00c06333ea1792a983a5720f9e2233db27323d2707c\",\n+    \"zh:cdc8fe1096103cf5374751e2e8408ec4abd2eb67d5a1c5151fe2c7ecfd525bef\",\n+    \"zh:dbdef21df0c012b0d08776f3d4f34eb0f2f229adfde07ff252a119e52c0f65b7\",\n+  ]\n+}"
      },
      {
        "filename": "README.md",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -1,2 +1,13 @@\n # ec2-dev-env\n  Terraform build dev box for linux projects\n+\n+Allow building out replaceable and consistent dev boxes for hobby projects\n+\n+Requires aws account\n+\n+Tested using:\n+\n+Terraform v0.14.3\n++ provider registry.terraform.io/hashicorp/aws v3.22.0\n++ provider registry.terraform.io/hashicorp/http v2.0.0\n++ provider registry.terraform.io/hashicorp/null v3.0.0\n\\ No newline at end of file"
      },
      {
        "filename": "assumerolepolicy.json",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Action\": \"sts:AssumeRole\",\n+      \"Principal\": {\n+        \"Service\": \"ec2.amazonaws.com\"\n+      },\n+      \"Effect\": \"Allow\",\n+      \"Sid\": \"\"\n+    }\n+  ]\n+}"
      },
      {
        "filename": "devpolicy.json",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Effect\": \"Allow\",\n+      \"Action\": \"s3:*\",\n+      \"Resource\": \"*\"\n+    }\n+  ]\n+}"
      },
      {
        "filename": "ec2_vscode.tf",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "status": "added",
        "patch": "@@ -0,0 +1,74 @@\n+provider \"aws\" {\n+  region                  = \"us-east-1\"\n+  shared_credentials_file = \"%HOME%/.aws/credentials\"\n+}\n+\n+terraform {\n+  backend \"s3\" {\n+    bucket = \"tf-state-31122020\"\n+    key    = \"terraform/aws/ec2/xxxNNN/terraform.tfstate\"\n+    region = \"us-east-1\"\n+  }\n+}\n+\n+data \"http\" \"myip\" {\n+  url = \"https://ipv4.icanhazip.com\"\n+}\n+\n+variable \"ami_key_pair_name\" {}\n+\n+resource \"aws_iam_policy\" \"dev-policy\" {\n+  name        = \"dev-policy\"\n+  description = \"TF general policy for hobby projects\"\n+  policy      = file(\"devpolicy.json\")\n+}\n+\n+resource \"aws_iam_role\" \"dev_access_role\" {\n+  name               = \"dev-role\"\n+  description        = \"TF Dev role\"\n+  assume_role_policy = file(\"assumerolepolicy.json\")\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"test-attach\" {\n+  role       = aws_iam_role.dev_access_role.name\n+  policy_arn = aws_iam_policy.dev-policy.arn\n+}\n+\n+resource \"aws_iam_instance_profile\" \"dev_profile\" {\n+  name = \"dev_profile\"\n+  role = aws_iam_role.dev_access_role.name\n+}\n+\n+resource \"aws_security_group\" \"allow_all\" {\n+  name        = \"allow_all\"\n+  description = \"Allow inbound traffice from my laptop\"\n+\n+  ingress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = \"-1\"\n+    cidr_blocks = [\"${chomp(data.http.myip.body)}/32\"]\n+  }\n+\n+  egress {\n+    from_port   = 0\n+    to_port     = 0\n+    protocol    = \"-1\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+}\n+\n+resource \"aws_instance\" \"vs-code\" {\n+  ami                  = \"ami-0affd4508a5d2481b\"\n+  instance_type        = \"t2.micro\"\n+  iam_instance_profile = aws_iam_instance_profile.dev_profile.name\n+  key_name             = var.ami_key_pair_name\n+  user_data            = file(\"provision.sh\")\n+  provisioner \"local-exec\" {\n+    command     = \"bash ./update_ssh.sh ${aws_instance.vs-code.public_ip}\"\n+  }\n+}\n+\n+output \"public_ip\" {\n+  value = aws_instance.vs-code.public_ip\n+}"
      },
      {
        "filename": "provision.sh",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+#! /bin/bash\n+yum install -y ansible git libselinux-python3.x86_64 yum-utils\n+yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n+yum install -y containerd.io docker-ce docker-ce-cli\n+usermod -aG docker centos\n+systemctl enable --now docker\n+chmod 666 /var/run/docker.sock\n+# installing pyenv\n+yum -y install epel-release\n+yum -y install git gcc zlib-devel bzip2-devel readline-devel sqlite-devel openssl-devel\n+curl https://pyenv.run | bash\n+echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bash_profile\n+echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bash_profile\n+echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\\n  eval \"$(pyenv init -)\"\\nfi' >> ~/.bash_profile\n+exec \"$SHELL\"\n+pyenv install 3.8.2\n+pyenv global 3.8.2\n\\ No newline at end of file"
      },
      {
        "filename": "update_ssh.sh",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+# Assumes you have a record in your ssh config file that you want updated\n+\n+OLDIP=`grep -w hobby-coding -A 1 ~/.ssh/config | awk '/HostName/ {print $2}'`\n+\n+sed -i \"s/$OLDIP/$1/g\" ~/.ssh/config"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Young-ook/terraform-aws-sagemaker/commit/df4c2102d59c5cae88c9ed30489b2d00bc75aafd",
    "files": [
      {
        "filename": "examples/s3/README.md",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -23,6 +23,10 @@ terraform plan -var-file tc1.tfvars\n terraform apply -var-file tc1.tfvars\n ```\n \n+## Object lifecycle rules\n+\n+![s3-lifecycle-rules-intelligent-tiering](../../images/s3-lifecycle-rules-intelligent-tiering.png)\n+\n ## Clean up\n Run terraform:\n ```"
      },
      {
        "filename": "examples/s3/default.auto.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -5,4 +5,4 @@ tags = {\n force_destroy                     = false\n versioning                        = false\n lifecycle_rules                   = []\n-intelligent_tiering_archive_rules = {}\n+intelligent_tiering_archive_rules = null"
      },
      {
        "filename": "examples/s3/fixture.tc1.tfvars",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,10 +1,12 @@\n aws_region = \"ap-northeast-2\"\n name       = \"s3-tc1\"\n tags = {\n-  env           = \"dev\"\n-  test          = \"tc1\"\n-  versioning    = \"true\"\n-  force-destroy = \"true\"\n+  env                         = \"dev\"\n+  test                        = \"tc1\"\n+  versioning                  = \"true\"\n+  force-destroy               = \"true\"\n+  lifecycle-rules             = \"disabled\"\n+  intelligent-tiering-archive = \"disabled\"\n }\n force_destroy = true\n versioning    = true"
      },
      {
        "filename": "examples/s3/fixture.tc3.tfvars",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -37,6 +37,8 @@ intelligent_tiering_archive_rules = {\n   ]\n   tiering = [\n     {\n+      # allowed values for 'access_tier':\n+      #   ARCHIVE_ACCESS, DEEP_ARCHIVE_ACCESS\n       access_tier = \"ARCHIVE_ACCESS\"\n       days        = 125\n     },"
      },
      {
        "filename": "examples/s3/fixture.tc4.tfvars",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -11,10 +11,12 @@ tags = {\n force_destroy   = true\n versioning      = true\n lifecycle_rules = []\n-intelligent_tiering = {\n+intelligent_tiering_archive_rules = {\n   state = \"Disabled\"\n   tiering = [\n     {\n+      # allowed values for 'access_tier':\n+      #   ARCHIVE_ACCESS, DEEP_ARCHIVE_ACCESS\n       access_tier = \"ARCHIVE_ACCESS\"\n       days        = 125\n     },"
      },
      {
        "filename": "examples/s3/main.tf",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -4,9 +4,14 @@ provider \"aws\" {\n   region = \"ap-northeast-2\"\n }\n \n+resource \"random_pet\" \"prefix\" {\n+  length    = 3\n+  separator = \"-\"\n+}\n+\n module \"s3\" {\n   source                            = \"../../modules/s3\"\n-  name                              = var.name\n+  name                              = join(\"-\", [random_pet.prefix.id, var.name])\n   tags                              = var.tags\n   force_destroy                     = var.force_destroy\n   versioning                        = var.versioning"
      },
      {
        "filename": "examples/s3/variables.tf",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -10,23 +10,19 @@ variable \"aws_region\" {\n variable \"force_destroy\" {\n   description = \"A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error\"\n   type        = bool\n-  default     = false\n }\n \n variable \"versioning\" {\n   description = \"A configuration to enable object version control\"\n   type        = bool\n-  default     = false\n }\n \n variable \"lifecycle_rules\" {\n   description = \"A configuration of object lifecycle management\"\n-  default     = []\n }\n \n variable \"intelligent_tiering_archive_rules\" {\n   description = \"A configuration of intelligent tiering archive management\"\n-  default     = {}\n }\n \n ### description"
      },
      {
        "filename": "images/s3-lifecycle-rules-intelligent-tiering.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "modules/s3/README.md",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,8 +1,7 @@\n # Amazon S3 (Simple Storage Service)\n [Amazon S3](https://aws.amazon.com/s3/) is an object storage service that offers industry-leading scalability, data availability, security, and performance.\n \n-## Quickstart\n-### Setup\n+### Quickstart\n ```hcl\n module \"s3\" {\n   source  = \"Young-ook/sagemaker/aws//modules/s3\"\n@@ -54,6 +53,7 @@ S3 Intelligent-Tiering is a new Amazon S3 storage class designed for customers w\n S3 Intelligent-Tiering stores objects in many access tiers. For a small monthly monitoring and automation fee per object, S3 Intelligent-Tiering monitors access patterns and moves objects that have not been accessed for 30 consecutive days to the infrequent access tier. There are no retrieval fees in S3 Intelligent-Tiering. If an object in the infrequent access tier is accessed later, it is automatically moved back to the frequent access tier. No additional tiering fees apply when objects are moved between access tiers within the S3 Intelligent-Tiering storage class. **S3 Intelligent-Tiering is designed for 99.9% availability and 99.999999999% durability, and offers the same low latency and high throughput performance of S3 Standard**.\n \n For more information, see [Amazon S3 Intelligent-Tiering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intelligent-tiering.html).\n+Also, you can find out more about how to add archive tier to your Intelligent-Tiering stoage classes for lower stoage costs in this blog, [S3 Intelligent-Tiering Adds Archive Access Tiers](https://aws.amazon.com/blogs/aws/s3-intelligent-tiering-adds-archive-access-tiers/).\n \n ### Example\n ```hcl\n@@ -95,3 +95,9 @@ Modify the terraform configuration file to add a lifecycle rule to apply objects\n terraform init\n terraform apply\n ```\n+\n+## Storage Cost Optimization\n+* [How to optimize storage costs using Amazon S3](https://d1.awsstatic.com/product-marketing/S3/Amazon_S3_eBook_Cost_Optimization.pdf)\n+* [5 Ways to reduce data storage costs using Amazon S3 Storage Lens](https://aws.amazon.com/blogs/storage/5-ways-to-reduce-costs-using-amazon-s3-storage-lens/)\n+* [Amazon S3 cost optimization for predictable and dynamic access patterns](https://aws.amazon.com/blogs/storage/amazon-s3-cost-optimization-for-predictable-and-dynamic-access-patterns/)\n+* [Expiring Amazon S3 Objects Based on Last Accessed Date to Decrease Costs](https://aws.amazon.com/blogs/architecture/expiring-amazon-s3-objects-based-on-last-accessed-date-to-decrease-costs/)"
      },
      {
        "filename": "modules/s3/default.tf",
        "additions": 2,
        "deletions": 10,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -3,7 +3,7 @@\n locals {\n   default_lifecycle_rules = [\n     {\n-      enabled                       = true\n+      enabled                       = false\n       id                            = null\n       tags                          = {}\n       prefix                        = null\n@@ -13,13 +13,5 @@ locals {\n       noncurrent_version_transition = []\n     }\n   ]\n-  default_intelligent_tiering = {\n-    state  = \"Disabled\"\n-    filter = []\n-    tiering = [{\n-      access_tier = \"ARCHIVE_ACCESS\" # allowed values: ARCHIVE_ACCESS, DEEP_ARCHIVE_ACCESS\n-      days        = 180\n-      }\n-    ]\n-  }\n+  default_intelligent_tiering_archive_rules = {}\n }"
      },
      {
        "filename": "modules/s3/main.tf",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "status": "modified",
        "patch": "@@ -4,6 +4,10 @@ module \"current\" {\n   source = \"Young-ook/spinnaker/aws//modules/aws-partitions\"\n }\n \n+locals {\n+  intelligent_tiering_archive_rules = (var.intelligent_tiering_archive_rules == null ? [] : [var.intelligent_tiering_archive_rules])\n+}\n+\n locals {\n   bucket_arn_with_slash = join(\"/\", [aws_s3_bucket.bucket.arn, \"*\"])\n }\n@@ -157,20 +161,21 @@ resource \"aws_s3_bucket\" \"bucket\" {\n }\n \n resource \"aws_s3_bucket_intelligent_tiering_configuration\" \"tiering\" {\n-  bucket = aws_s3_bucket.bucket.id\n-  name   = local.name\n-  status = lookup(var.intelligent_tiering_archive_rules, \"status\", local.default_intelligent_tiering.state)\n+  for_each = { for k, v in local.intelligent_tiering_archive_rules : k => v }\n+  bucket   = aws_s3_bucket.bucket.id\n+  name     = local.name\n+  status   = lookup(each.value, \"status\", \"Disabled\")\n \n   dynamic \"filter\" {\n-    for_each = { for k, v in lookup(var.intelligent_tiering_archive_rules, \"filter\", local.default_intelligent_tiering.filter) : k => v }\n+    for_each = { for k, v in lookup(each.value, \"filter\", []) : k => v }\n     content {\n       prefix = lookup(filter.value, \"prefix\")\n       tags   = lookup(filter.value, \"tags\")\n     }\n   }\n \n   dynamic \"tiering\" {\n-    for_each = { for k, v in lookup(var.intelligent_tiering_archive_rules, \"tiering\", local.default_intelligent_tiering.tiering) : k => v }\n+    for_each = { for k, v in lookup(each.value, \"tiering\", []) : k => v }\n     content {\n       access_tier = lookup(tiering.value, \"access_tier\")\n       days        = lookup(tiering.value, \"days\")"
      },
      {
        "filename": "modules/s3/variables.tf",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -27,7 +27,11 @@ variable \"server_side_encryption\" {\n \n variable \"intelligent_tiering_archive_rules\" {\n   description = \"A configuration of intelligent tiering archive management\"\n-  default     = {}\n+  default     = null\n+  validation {\n+    condition     = var.intelligent_tiering_archive_rules != {}\n+    error_message = \"The intelligent_tiering_archive_rules must not be empty. Required at least one archive tier.\"\n+  }\n }\n \n variable \"versioning\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alphagov/govuk-infrastructure/commit/8475fbe51281a76757f7046c6c591056db182286",
    "files": [
      {
        "filename": "terraform/modules/app/appmesh.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -37,6 +37,14 @@ resource \"aws_appmesh_virtual_node\" \"service\" {\n         service_name   = aws_service_discovery_service.service[count.index].name\n       }\n     }\n+\n+    logging {\n+      access_log {\n+        file {\n+          path = \"/dev/stdout\"\n+        }\n+      }\n+    }\n   }\n \n   depends_on = [aws_service_discovery_service.service]"
      }
    ],
    "existing_codes": [
      "awareness",
      "increase",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alphagov/govuk-infrastructure/commit/1e588a004172338404c487e679df5d503f0cab48",
    "files": [
      {
        "filename": "terraform/deployments/cluster-services/external_dns.tf",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -21,8 +21,10 @@ resource \"helm_release\" \"external_dns\" {\n         \"eks.amazonaws.com/role-arn\" = data.terraform_remote_state.cluster_infrastructure.outputs.external_dns_role_arn\n       }\n     }\n-    txtOwnerId    = data.terraform_remote_state.cluster_infrastructure.outputs.cluster_id\n-    domainFilters = [data.terraform_remote_state.cluster_infrastructure.outputs.external_dns_zone_name]\n+    txtOwnerId         = data.terraform_remote_state.cluster_infrastructure.outputs.cluster_id\n+    domainFilters      = [data.terraform_remote_state.cluster_infrastructure.outputs.external_dns_zone_name]\n+    interval           = \"5m\"\n+    triggerLoopOnEvent = true\n     # TODO: hook up Prometheus metrics (metrics.enabled, metrics.podAnnotations etc.)\n   })]\n }"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alphagov/govuk-infrastructure/commit/a51a3bfcd73fd55ecd43aa36ce3f266f0cefc2dc",
    "files": [
      {
        "filename": "terraform/deployments/govuk-publishing-infrastructure/frontend_memcache.tf",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "status": "added",
        "patch": "@@ -0,0 +1,43 @@\n+locals {\n+  frontend_memcached_name = \"frontend-memcached-${local.cluster_name}\"\n+}\n+\n+resource \"aws_elasticache_subnet_group\" \"frontend_memcached\" {\n+  name       = \"frontend-memcached\"\n+  subnet_ids = local.elasticache_subnets\n+}\n+\n+resource \"aws_security_group\" \"frontend_memcached\" {\n+  name        = local.frontend_memcached_name\n+  vpc_id      = local.vpc_id\n+  description = \"${local.frontend_memcached_name} memcached instance\"\n+  tags = {\n+    Name = local.frontend_memcached_name\n+  }\n+}\n+\n+resource \"aws_elasticache_cluster\" \"frontend_memcached\" {\n+  cluster_id = \"frontend-memcached-${local.cluster_name}\"\n+\n+  engine          = \"memcached\"\n+  engine_version  = \"1.6.6\"\n+  node_type       = var.frontend_memcached_node_type\n+  num_cache_nodes = 1 # TODO: consider whether failover is needed\n+\n+  apply_immediately    = var.govuk_environment != \"production\"\n+  parameter_group_name = \"default.memcached1.6\"\n+  subnet_group_name    = aws_elasticache_subnet_group.frontend_memcached.name\n+  security_group_ids   = [aws_security_group.frontend_memcached.id]\n+  tags = {\n+    Name = local.frontend_memcached_name\n+  }\n+}\n+\n+resource \"aws_route53_record\" \"frontend_memcached\" {\n+  zone_id = local.internal_dns_zone_id\n+  # TODO: consider removing EKS suffix once the old EC2 environments are gone.\n+  name    = \"frontend-memcached-${local.cluster_name}.eks\"\n+  type    = \"CNAME\"\n+  ttl     = 300\n+  records = [aws_elasticache_cluster.frontend_memcached.cluster_address]\n+}"
      },
      {
        "filename": "terraform/deployments/govuk-publishing-infrastructure/main.tf",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -11,9 +11,10 @@ terraform {\n }\n \n locals {\n+  cluster_name         = data.terraform_remote_state.cluster_infrastructure.outputs.cluster_id\n   vpc_id               = data.terraform_remote_state.infra_networking.outputs.vpc_id\n   internal_dns_zone_id = data.terraform_remote_state.infra_root_dns_zones.outputs.internal_root_zone_id\n-  redis_subnets        = data.terraform_remote_state.infra_networking.outputs.private_subnet_elasticache_ids\n+  elasticache_subnets  = data.terraform_remote_state.infra_networking.outputs.private_subnet_elasticache_ids\n \n   default_tags = {\n     project              = \"replatforming\""
      },
      {
        "filename": "terraform/deployments/govuk-publishing-infrastructure/outputs.tf",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,7 +1,3 @@\n output \"shared_redis_cluster_host\" {\n-  value = aws_route53_record.shared_redis_cluster_internal_service_record.fqdn\n-}\n-\n-output \"shared_redis_cluster_port\" {\n-  value = var.shared_redis_cluster_port\n+  value = aws_route53_record.shared_redis_cluster.fqdn\n }"
      },
      {
        "filename": "terraform/deployments/govuk-publishing-infrastructure/security.tf",
        "additions": 20,
        "deletions": 6,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -27,27 +27,41 @@ resource \"aws_security_group_rule\" \"shared_redis_cluster_to_any_any\" {\n resource \"aws_security_group_rule\" \"shared_redis_cluster_from_any\" {\n   description              = \"Shared Redis cluster for EKS accepts requests from EKS nodes\"\n   type                     = \"ingress\"\n-  from_port                = var.shared_redis_cluster_port\n-  to_port                  = var.shared_redis_cluster_port\n+  from_port                = 6379\n+  to_port                  = 6379\n   protocol                 = \"tcp\"\n   security_group_id        = aws_security_group.shared_redis_cluster.id\n   source_security_group_id = data.terraform_remote_state.cluster_infrastructure.outputs.worker_security_group_id\n }\n \n #\n-# Rules added to external security groups managed by govuk-aws\n+# Frontend memcached\n #\n \n-resource \"aws_security_group_rule\" \"frontend_memcache_from_eks_workers\" {\n-  description              = \"Frontend memcache accepts requests from EKS nodes\"\n+resource \"aws_security_group_rule\" \"frontend_memcached_to_any_any\" {\n+  description       = \"Frontend memcached sends requests to anywhere over any protocol\"\n+  type              = \"egress\"\n+  from_port         = 0\n+  to_port           = 0\n+  protocol          = -1\n+  cidr_blocks       = [\"0.0.0.0/0\"]\n+  security_group_id = aws_security_group.frontend_memcached.id\n+}\n+\n+resource \"aws_security_group_rule\" \"frontend_memcached_from_eks_workers\" {\n+  description              = \"Frontend memcached accepts requests from EKS nodes\"\n   type                     = \"ingress\"\n   from_port                = 11211\n   to_port                  = 11211\n   protocol                 = \"tcp\"\n-  security_group_id        = data.terraform_remote_state.infra_security_groups.outputs.sg_frontend_cache_id\n+  security_group_id        = aws_security_group.frontend_memcached.id\n   source_security_group_id = data.terraform_remote_state.cluster_infrastructure.outputs.worker_security_group_id\n }\n \n+#\n+# Rules added to external security groups managed by govuk-aws\n+#\n+\n resource \"aws_security_group_rule\" \"mongodb_from_eks_workers\" {\n   description              = \"Shared MongoDB (DocumentDB) accepts requests from EKS nodes\"\n   type                     = \"ingress\""
      },
      {
        "filename": "terraform/deployments/govuk-publishing-infrastructure/shared_redis.tf",
        "additions": 22,
        "deletions": 29,
        "changes": 51,
        "status": "modified",
        "patch": "@@ -1,48 +1,41 @@\n-resource \"aws_elasticache_subnet_group\" \"shared_redis_cluster_subnet_group\" {\n-  name       = var.shared_redis_cluster_name\n-  subnet_ids = local.redis_subnets\n+locals {\n+  shared_redis_name = \"shared-redis-${local.cluster_name}\"\n+}\n+\n+resource \"aws_elasticache_subnet_group\" \"shared_redis_cluster\" {\n+  name       = local.shared_redis_name\n+  subnet_ids = local.elasticache_subnets\n }\n \n resource \"aws_security_group\" \"shared_redis_cluster\" {\n-  name        = var.shared_redis_cluster_name\n+  name        = local.shared_redis_name\n   vpc_id      = local.vpc_id\n-  description = \"Access to the ${var.shared_redis_cluster_name} Redis cluster\"\n-\n-  tags = merge(\n-    local.default_tags,\n-    {\n-      Name = \"${var.shared_redis_cluster_name}\"\n-    },\n-  )\n-\n+  description = \"${local.shared_redis_name} Redis cluster\"\n+  tags = {\n+    Name = local.shared_redis_name\n+  }\n }\n \n resource \"aws_elasticache_replication_group\" \"shared_redis_cluster\" {\n-  apply_immediately             = var.govuk_environment != \"production\" ? true : false\n-  replication_group_id          = var.shared_redis_cluster_name\n-  replication_group_description = \"${var.shared_redis_cluster_name} Redis cluster with Redis master and replica\"\n+  apply_immediately             = var.govuk_environment != \"production\"\n+  replication_group_id          = local.shared_redis_name\n+  replication_group_description = \"${local.shared_redis_name} Redis cluster with Redis master and replica\"\n   node_type                     = var.shared_redis_cluster_node_type\n-  port                          = var.shared_redis_cluster_port\n   number_cache_clusters         = 2\n-  parameter_group_name          = \"default.redis6.x\"\n   automatic_failover_enabled    = true\n+  parameter_group_name          = \"default.redis6.x\"\n   engine_version                = \"6.x\"\n-  subnet_group_name             = aws_elasticache_subnet_group.shared_redis_cluster_subnet_group.name\n+  subnet_group_name             = aws_elasticache_subnet_group.shared_redis_cluster.name\n   security_group_ids            = [aws_security_group.shared_redis_cluster.id]\n-\n-  tags = merge(\n-    local.default_tags,\n-    {\n-      Name = \"${var.shared_redis_cluster_name}\"\n-    },\n-  )\n-\n+  tags = {\n+    Name = local.shared_redis_name\n+  }\n }\n \n-resource \"aws_route53_record\" \"shared_redis_cluster_internal_service_record\" {\n+resource \"aws_route53_record\" \"shared_redis_cluster\" {\n   zone_id = local.internal_dns_zone_id\n   # TODO: consider removing EKS suffix once the old EC2 environments are gone.\n-  name    = \"${var.shared_redis_cluster_name}.eks\"\n+  name    = \"${local.shared_redis_name}.eks\"\n   type    = \"CNAME\"\n   ttl     = 300\n   records = [aws_elasticache_replication_group.shared_redis_cluster.primary_endpoint_address]"
      },
      {
        "filename": "terraform/deployments/govuk-publishing-infrastructure/variables.tf",
        "additions": 6,
        "deletions": 14,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -8,25 +8,17 @@ variable \"cluster_infrastructure_state_bucket\" {\n   description = \"Name of the S3 bucket for the cluster-infrastructure module's Terraform state. Must match the name of the bucket specified in the backend config file.\"\n }\n \n-variable \"shared_redis_cluster_name\" {\n+variable \"govuk_environment\" {\n   type        = string\n-  description = \"Name of the shared Redis cluster\"\n-  default     = \"shared-redis\"\n-}\n-\n-variable \"shared_redis_cluster_port\" {\n-  type        = number\n-  description = \"Port of the shared Redis cluster\"\n-  default     = 6379\n+  description = \"GOV.UK environment where resources are being deployed\"\n }\n \n-variable \"shared_redis_cluster_node_type\" {\n+variable \"frontend_memcached_node_type\" {\n   type        = string\n-  description = \"Node type to used for the shared Redis cluster. Must not be t.* in order to use failover.\"\n-  default     = \"cache.m3.medium\"\n+  description = \"Instance type for the Frontend memcached.\"\n }\n \n-variable \"govuk_environment\" {\n+variable \"shared_redis_cluster_node_type\" {\n   type        = string\n-  description = \"GOV.UK environment where resources are being deployed\"\n+  description = \"Instance type for the shared Redis cluster. t1 and t2 instances are not supported.\"\n }"
      },
      {
        "filename": "terraform/deployments/variables/integration/common.tfvars",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -26,3 +26,6 @@ govuk_environment = \"integration\"\n \n publishing_service_domain = \"integration.publishing.service.gov.uk\"\n external_dns_subdomain    = \"eks\"\n+\n+frontend_memcached_node_type   = \"cache.t4g.micro\"\n+shared_redis_cluster_node_type = \"cache.t4g.small\""
      },
      {
        "filename": "terraform/deployments/variables/test/common.tfvars",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -27,3 +27,6 @@ force_destroy     = true\n \n publishing_service_domain = \"test.publishing.service.gov.uk\"\n external_dns_subdomain    = \"eks\"\n+\n+frontend_memcached_node_type   = \"cache.t4g.micro\"\n+shared_redis_cluster_node_type = \"cache.t4g.small\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/alphagov/govuk-infrastructure/commit/ee2b2286a02d49c7e9992d0a39ce950583e16bb7",
    "files": [
      {
        "filename": "terraform/deployments/cluster-services/argo.tf",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "status": "modified",
        "patch": "@@ -131,6 +131,29 @@ resource \"helm_release\" \"argo_workflows\" {\n         }\n       }\n       containerRuntimeExecutor = \"emissary\"\n+      resources = {\n+        requests = {\n+          cpu    = \"100m\"\n+          memory = \"64Mi\"\n+        }\n+        limits = {\n+          cpu    = \"500m\"\n+          memory = \"128Mi\"\n+        }\n+      }\n+    }\n+\n+    executor = {\n+      resources = {\n+        requests = {\n+          cpu    = \"100m\"\n+          memory = \"64Mi\"\n+        }\n+        limits = {\n+          cpu    = \"500m\"\n+          memory = \"512Mi\"\n+        }\n+      }\n     }\n \n     workflow = {\n@@ -167,6 +190,16 @@ resource \"helm_release\" \"argo_workflows\" {\n         redirectUrl = \"https://${local.argo_workflows_host}/oauth2/callback\"\n         # TODO: all logged in users are admin, maybe we want differentiation\n       }\n+      resources = {\n+        requests = {\n+          cpu    = \"100m\"\n+          memory = \"64Mi\"\n+        }\n+        limits = {\n+          cpu    = \"500m\"\n+          memory = \"128Mi\"\n+        }\n+      }\n     }\n   })]\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "cluster"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/companieshouse/ceu-terraform/commit/8733c7f4d1b395d6a8e236d0106cfae56d4ded06",
    "files": [
      {
        "filename": "groups/ceu-frontend/alb-internal.tf",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -108,12 +108,9 @@ module \"internal_alb_alarms\" {\n   maximum_4xx_threshold     = \"2\"\n   maximum_5xx_threshold     = \"2\"\n   unhealthy_hosts_threshold = \"1\"\n-  actions_alarm = [\n-    module.cloudwatch_sns_notifications.sns_topic_arn\n-  ]\n-  actions_ok = [\n-    module.cloudwatch_sns_notifications.sns_topic_arn\n-  ]\n+\n+  actions_alarm = var.aws_account != \"heritage-development\" ? [module.cloudwatch_sns_notifications[0].sns_topic_arn] : []\n+  actions_ok    = var.aws_account != \"heritage-development\" ? [module.cloudwatch_sns_notifications[0].sns_topic_arn] : []\n \n   depends_on = [\n     module.cloudwatch_sns_notifications,"
      },
      {
        "filename": "groups/ceu-frontend/asg_frontend.tf",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -140,12 +140,9 @@ module \"asg_alarms\" {\n   total_instances_statistic_period   = \"120\"\n   total_instances_in_service         = var.fe_desired_capacity\n \n-  actions_alarm = [\n-    module.cloudwatch_sns_notifications.sns_topic_arn\n-  ]\n-  actions_ok = [\n-    module.cloudwatch_sns_notifications.sns_topic_arn\n-  ]\n+  actions_alarm = var.aws_account != \"heritage-development\" ? [module.cloudwatch_sns_notifications[0].sns_topic_arn] : []\n+  actions_ok    = var.aws_account != \"heritage-development\" ? [module.cloudwatch_sns_notifications[0].sns_topic_arn] : []\n+\n \n   depends_on = [\n     module.cloudwatch_sns_notifications,"
      },
      {
        "filename": "groups/ceu-frontend/sns.tf",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,6 @@\n module \"cloudwatch_sns_notifications\" {\n+  count = var.aws_account != \"heritage-development\" ? 1 : 0\n+\n   source  = \"terraform-aws-modules/sns/aws\"\n   version = \"3.3.0\"\n "
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/gedejong/infra/commit/df7d6a56fb9c390574c45500fbae61dbba0044d8",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -43,7 +43,7 @@ module \"config\" {\n   config_logs_bucket                      = module.config_logs.aws_logs_bucket\n   config_logs_prefix                      = \"config\"\n   check_cloudtrail_enabled                = true\n-  check_guard_duty                        = true\n+  check_guard_duty                        = false\n   check_s3_bucket_public_write_prohibited = true\n   check_s3_bucket_ssl_requests_only       = true\n "
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/v3nd3774/AWSEMRInferencePipelinePOC/commit/75771876ca81699edfb4bb1afa202d6426abae1e",
    "files": [
      {
        "filename": "scripts/bootstrap-emr.sh",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+#!/usr/bin/env bash\n+# https://towardsdatascience.com/getting-started-with-pyspark-on-amazon-emr-c85154b6b921\n+\n+sudo pip install -U \\\n+    matplotlib \\\n+    pandas \\\n+    pyspark \\\n+    numpy \\\n+    scikit-learn"
      },
      {
        "filename": "tf/bootstrap-data.tf",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+# s3 info for bootstrapscript\n+locals {\n+  bootbucketname = lower(\"${var.projprefix}-EMRBootstrapBucket\")\n+  bootscript = \"${dirname(dirname(path.module))}/scripts/bootstrap-emr.sh\"\n+}\n+resource \"aws_s3_bucket\" \"emr_bootstrap_bucket\" {\n+  bucket = local.bootbucketname\n+  acl    = \"private\"\n+  tags = var.tags\n+}\n+resource \"aws_s3_bucket_object\" \"bootstrap\" {\n+  bucket = aws_s3_bucket.emr_bootstrap_bucket.bucket\n+  key    = \"/scripts/bootstrap-emr.sh\"\n+  source = local.bootscript\n+  etag = filemd5(local.bootscript)\n+  tags = var.tags\n+}"
      },
      {
        "filename": "tf/emr.tf",
        "additions": 152,
        "deletions": 0,
        "changes": 152,
        "status": "added",
        "patch": "@@ -0,0 +1,152 @@\n+# imports\n+# no modules yet\n+\n+# From: https://github.com/azavea/terraform-aws-emr-cluster/blob/develop/main.tf originally by Azavea: https://github.com/azavea\n+# EMR IAM resources\n+#\n+data \"aws_iam_policy_document\" \"emr_assume_role\" {\n+  statement {\n+    effect = \"Allow\"\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"elasticmapreduce.amazonaws.com\"]\n+    }\n+\n+    actions = [\"sts:AssumeRole\"]\n+  }\n+}\n+\n+resource \"aws_iam_role\" \"emr_service_role\" {\n+  name               = \"emr${var.environment}ServiceRole\"\n+  assume_role_policy = data.aws_iam_policy_document.emr_assume_role.json\n+  tags = var.tags\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"emr_service_role\" {\n+  role       = aws_iam_role.emr_service_role.name\n+  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole\"\n+}\n+\n+#\n+# EMR IAM resources for EC2\n+#\n+data \"aws_iam_policy_document\" \"ec2_assume_role\" {\n+  statement {\n+    effect = \"Allow\"\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"ec2.amazonaws.com\"]\n+    }\n+\n+    actions = [\"sts:AssumeRole\"]\n+  }\n+}\n+\n+resource \"aws_iam_role\" \"emr_ec2_instance_profile\" {\n+  name               = \"${var.environment}JobFlowInstanceProfile\"\n+  assume_role_policy = data.aws_iam_policy_document.ec2_assume_role.json\n+  tags = var.tags\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"emr_ec2_instance_profile\" {\n+  role       = aws_iam_role.emr_ec2_instance_profile.name\n+  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role\"\n+}\n+\n+resource \"aws_iam_instance_profile\" \"emr_ec2_instance_profile\" {\n+  name = aws_iam_role.emr_ec2_instance_profile.name\n+  role = aws_iam_role.emr_ec2_instance_profile.name\n+}\n+\n+#\n+# Security group resources\n+#\n+resource \"aws_security_group\" \"emr_master\" {\n+  vpc_id                 = aws_vpc.emr.id\n+  revoke_rules_on_delete = true\n+\n+  tags = merge(var.tags, {\n+    Name = \"sgMaster\"\n+  })\n+}\n+\n+resource \"aws_security_group\" \"emr_slave\" {\n+  vpc_id                 = aws_vpc.emr.id\n+  revoke_rules_on_delete = true\n+\n+  tags = merge(var.tags, {\n+    Name = \"sgSlave\"\n+  })\n+}\n+\n+#\n+# EMR resources\n+#\n+# from https://github.com/terraform-providers/terraform-provider-aws/issues/1530 by n-my\n+data \"template_file\" \"emr_config\" {\n+  template = <<EOF\n+[\n+  {\n+     \"classification\":\"emrfs-site\",\n+     \"properties\":{\n+        \"fs.s3.consistent.retryPeriodSeconds\":\"10\",\n+        \"fs.s3.consistent\":\"true\",\n+        \"fs.s3.consistent.retryCount\":\"5\",\n+        \"fs.s3.consistent.metadata.read.capacity\":\"600\",\n+        \"fs.s3.consistent.metadata.write.capacity\":\"300\",\n+        \"fs.s3.consistent.metadata.tableName\":\"EmrFSMetadata\"\n+     },\n+     \"configurations\":[\n+     ]\n+  }\n+]\n+EOF\n+}\n+\n+resource \"aws_emr_cluster\" \"cluster\" {\n+  name           = var.projprefix\n+  release_label  = var.release_label\n+  applications   = var.applications\n+  configurations = data.template_file.emr_config.rendered\n+\n+  ec2_attributes {\n+    key_name                          = var.key_name\n+    subnet_id                         = aws_subnet.emr.id\n+    emr_managed_master_security_group = aws_security_group.emr_master.id\n+    emr_managed_slave_security_group  = aws_security_group.emr_slave.id\n+    instance_profile                  = aws_iam_instance_profile.emr_ec2_instance_profile.arn\n+  }\n+\n+  master_instance_group {\n+    instance_type  = \"m3.xlarge\"\n+    instance_count = 1\n+    ebs_config {\n+      size = \"8\"\n+      type = \"gp2\"\n+      volumes_per_instance = 1\n+    }\n+  }\n+  core_instance_group {\n+    instance_type  = \"m3.xlarge\"\n+    instance_count = \"1\"\n+    bid_price      = \"0.30\"\n+    ebs_config {\n+      size = \"8\"\n+      type = \"gp2\"\n+      volumes_per_instance = 1\n+    }\n+  }\n+\n+  bootstrap_action {\n+    path = \"s3://${aws_s3_bucket.emr_bootstrap_bucket.bucket}${aws_s3_bucket_object.bootstrap.key}\"\n+    name = \"Install Dependencies on EMR Cluster\"\n+    args = var.bootstrap_args\n+  }\n+\n+  log_uri      = \"s3n://${aws_s3_bucket.emr_logging_bucket.bucket}\"\n+  service_role = aws_iam_role.emr_service_role.arn\n+\n+  tags = var.tags\n+}"
      },
      {
        "filename": "tf/log-data.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+# s3 info for logging bucket\n+locals {\n+  logbucketname = lower(\"${var.projprefix}-EMRLoggingBucket\")\n+}\n+resource \"aws_s3_bucket\" \"emr_logging_bucket\" {\n+  bucket = local.logbucketname\n+  acl    = \"private\"\n+  tags = var.tags\n+}"
      },
      {
        "filename": "tf/source-data.tf",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -1,24 +1,24 @@\n locals {\n   uriprefix = \"http://yann.lecun.com/exdb/mnist/\"\n   script = \"${dirname(dirname(path.module))}/py/download-data.py\"\n-  projprefix = \"AWSEMRInferencePipelinePOC\"\n }\n locals {\n   runscriptcommand = [\"python\", local.script]\n-  bucketname = lower(\"${local.projprefix}-Source\")\n+  bucketname = lower(\"${var.projprefix}-Source\")\n   filename1 = \"${local.uriprefix}train-images-idx3-ubyte.gz\"\n   filename2 = \"${local.uriprefix}train-labels-idx1-ubyte.gz\"\n   filename3 = \"${local.uriprefix}t10k-images-idx3-ubyte.gz\"\n   filename4 = \"${local.uriprefix}t10k-labels-idx1-ubyte.gz\"\n-  tags = {\n-    Project = local.projprefix\n-  }\n }\n \n resource \"aws_s3_bucket\" \"source\" {\n   bucket = local.bucketname\n   acl    = \"private\"\n-  tags = local.tags\n+  tags = var.tags\n+}\n+\n+output \"source_data_bucket\" {\n+  value = aws_s3_bucket.source.bucket\n }\n \n data \"external\" \"downloadmnist1\" {\n@@ -58,29 +58,29 @@ resource \"aws_s3_bucket_object\" \"mnist1\" {\n   key    = basename(local.source1)\n   source = local.source1\n   etag = filemd5(local.source1)\n-  tags = local.tags\n+  tags = var.tags\n }\n \n resource \"aws_s3_bucket_object\" \"mnist2\" {\n   bucket = aws_s3_bucket.source.bucket\n   key    = basename(local.source2)\n   source = local.source2\n   etag = filemd5(local.source2)\n-  tags = local.tags\n+  tags = var.tags\n }\n \n resource \"aws_s3_bucket_object\" \"mnist3\" {\n   bucket = aws_s3_bucket.source.bucket\n   key    = basename(local.source3)\n   source = local.source3\n   etag = filemd5(local.source3)\n-  tags = local.tags\n+  tags = var.tags\n }\n \n resource \"aws_s3_bucket_object\" \"mnist4\" {\n   bucket = aws_s3_bucket.source.bucket\n   key    = basename(local.source4)\n   source = local.source4\n   etag = filemd5(local.source4)\n-  tags = local.tags\n+  tags = var.tags\n }"
      },
      {
        "filename": "tf/variables.tf",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "status": "added",
        "patch": "@@ -0,0 +1,29 @@\n+variable \"environment\" {\n+  default = \"Development\"\n+}\n+\n+variable \"release_label\" {\n+  default = \"emr-5.8.0\"\n+}\n+\n+variable \"applications\" {\n+  default = [\"Spark\", \"Hadoop\"]\n+  type    = list\n+}\n+\n+variable \"key_name\" {}\n+\n+variable \"bootstrap_args\" {\n+  default = []\n+  type    = list\n+}\n+\n+variable \"projprefix\" {\n+  default = \"AWSEMRInferencePipelinePOC\"\n+}\n+\n+variable \"tags\" {\n+  default = {\n+    Project = \"AWSEMRInferencePipelinePOC\"\n+  }\n+}"
      },
      {
        "filename": "tf/vpc.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+resource \"aws_vpc\" \"emr\" {\n+  cidr_block = \"10.0.0.0/16\"\n+  tags = var.tags\n+}\n+resource \"aws_subnet\" \"emr\" {\n+  vpc_id = aws_vpc.emr.id\n+  cidr_block = \"10.0.1.0/24\"\n+  tags = var.tags\n+}"
      }
    ],
    "existing_codes": [
      "cluster",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cloud-geek/AWS-Cloud-Architect-master/commit/a662717d80209735e93b6b8e537f21b53c06b469",
    "files": [
      {
        "filename": "Project_02/README.md",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "status": "added",
        "patch": "@@ -0,0 +1,31 @@\n+# Cloud Developer ND Course 2: Design for Performance and Scalability\n+\n+---\n+\n+## Project  Instructions\n+\n+### Exercise 1\n+\n+1. Download the [starter code](https://github.com/udacity/cand-c2-project).\n+2. In the main.tf file write the code to provision\n+   * AWS as the cloud provider\n+   * Use an existing VPC ID\n+   * Use an existing public subnet\n+   * 4 AWS t2.micro EC2 instances named Udacity T2\n+   * 2 m4.large EC2 instances named Udacity M4\n+3. Run Terraform. \n+4. Take a screenshot of the 6 EC2 instances in the AWS console and save it as `Terraform_1_1`. \n+5. Use Terraform to  delete the 2 m4.large instances \n+6. Take an updated screenshot of the AWS console showing only the 4 t2.micro instances and save it as `Terraform_1_2`\n+\n+### Exercise 2\n+\n+1. In the  Exercise_2 folder, write the code to deploy an AWS Lambda Function using Terraform. Your code should include:\n+\n+   * A lambda.py file\n+   * A main.tf file with AWS as the provider, and IAM role for Lambda, a VPC, and a public subnet\n+   * An outputs.tf file\n+   * A variables.tf file with an AWS region\n+  \n+2. Take a screenshot of the EC2 instances page\n+3. Take a screenshot of the VPC page "
      },
      {
        "filename": "Project_02/Task_01/Udacity_Diagram_1.pdf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_01/Udacity_Diagram_2.pdf",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_02/Increased_Cost Estimate.csv",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+Group hierarchy,Region,Service,Upfront,Monthly,First 12 months total,Currency,Configuration summary\n+My Estimate,US East (Ohio),Amazon EC2,0,2645.42,31745.04,USD,\"Operating system (Linux), Quantity (8), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (1 TB), Provisioning IOPS (1000), Instance type (t3a.2xlarge)\"\n+My Estimate,US East (Ohio),Amazon CloudWatch,0,300,3600.00,USD,\n+My Estimate,US East (Ohio),Amazon Virtual Private Cloud (VPC),0,493.65,5923.80,USD,Number of NAT Gateways (1)\n+My Estimate,US East (Ohio),Amazon EC2,0,3696.29,44355.48,USD,\"Operating system (Linux), Quantity (8), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (2 TB), Provisioning IOPS (1000), Instance type (m6g.2xlarge)\"\n+My Estimate,US East (Ohio),Elastic Load Balancing,0,733.2299999999999,8798.76,USD,Number of Application Load Balancers (1)\n+My Estimate,US East (Ohio),Amazon Route 53,0,365,4380.00,USD,Number of Elastic Network Interfaces (4)\n+My Estimate,US East (Ohio),S3 Standard,0,2304,27648.00,USD,S3 Standard storage (100 TB per month)\n+My Estimate,US East (Ohio),Data Transfer,0,0,0.00,USD,\" Inbound (from: Not selected) 0 TB per month \n+ Outbound (to: Not selected) 0 TB per month \n+\"\n+My Estimate,US East (Ohio),Amazon RDS for MySQL,0,8082.352,96988.22,USD,\"Quantity (2), Storage for each RDS instance (General Purpose SSD (gp2)), Storage amount (250 GB), Additional backup storage (3 TB)\"\n+\n+\n+\n+\"AWS Pricing Calculator provides only an estimate of your AWS fees and doesn't include any taxes that might apply. Your actual fees depend on a variety of factors, including your actual usage of AWS services.\""
      },
      {
        "filename": "Project_02/Task_02/Initial_Cost_Estimate.csv",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+Group hierarchy,Region,Service,Upfront,Monthly,First 12 months total,Currency,Configuration summary\n+My Estimate,US East (Ohio),Amazon RDS for MySQL,0,1968.1879999999999,23618.26,USD,\"Quantity (2), Storage for each RDS instance (General Purpose SSD (gp2)), Storage amount (250 GB), Additional backup storage (3 TB)\"\n+My Estimate,US East (Ohio),S3 Standard,0,117.76,1413.12,USD,S3 Standard storage (5 TB per month)\n+My Estimate,US East (Ohio),Data Transfer,0,0,0.00,USD,\" Inbound (from: Not selected) 0 TB per month \n+ Outbound (to: Not selected) 0 TB per month \n+\"\n+My Estimate,US East (Ohio),Amazon Route 53,0,365,4380.00,USD,Number of Elastic Network Interfaces (4)\n+My Estimate,US East (Ohio),Elastic Load Balancing,0,178.85,2146.20,USD,Number of Application Load Balancers (2)\n+My Estimate,US East (Ohio),Amazon Virtual Private Cloud (VPC),0,155.7,1868.40,USD,Number of NAT Gateways (2)\n+My Estimate,US East (Ohio),Amazon CloudWatch,0,300,3600.00,USD,\n+My Estimate,US East (Ohio),Amazon EC2,0,1559.3600000000001,18712.32,USD,\"Operating system (Linux), Quantity (4), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (2 TB), Provisioning IOPS (1000), Instance type (t3a.xlarge)\"\n+My Estimate,US East (Ohio),Amazon EC2,0,4098.88,49186.56,USD,\"Operating system (Linux), Quantity (4), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (2 TB), Provisioning IOPS (1000), Instance type (c5.9xlarge)\"\n+My Estimate,US East (Ohio),Amazon Elastic IP,0,7.3,87.60,USD,\"Number of EC2 instances (2), Number of EIPs per instance (2)\"\n+\n+\n+\n+\"AWS Pricing Calculator provides only an estimate of your AWS fees and doesn't include any taxes that might apply. Your actual fees depend on a variety of factors, including your actual usage of AWS services.\""
      },
      {
        "filename": "Project_02/Task_02/Readme.md.txt",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "status": "added",
        "patch": "@@ -0,0 +1,67 @@\n+\r\n+Initial:\r\n+\r\n+Amazon EC2 : \r\n+\t\t- Operating system (Linux), Quantity (4), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (2 TB), Provisioning IOPS (1000), Instance type (c5.9xlarge)\r\n+\t\t- Operating system (Linux), Quantity (4), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (2 TB), Provisioning IOPS (1000), Instance type (t3a.xlarge)\r\n+\r\n+RDS for MySQL :\r\n+\t\t- Quantity (2), Storage for each RDS instance (General Purpose SSD (gp2)), Storage amount (250 GB), Additional backup storage (3 TB)\r\n+\r\n+S3 Storage bucket:\r\n+\t\t- S3 Standard storage (5 TB per month)\r\n+\r\n+Elastic IP:\r\n+\t    - Number of EC2 instances (2), Number of EIPs per instance (2)\t\r\n+\r\n+VPC:\r\n+\t\t- Number of NAT Gateways (2)\r\n+\r\n+LoadBalancers:\r\n+\t\t- Number of Application Load Balancers (2)\r\n+\t\t\r\n+Route 53:\r\n+\t\t- Number of Elastic Network Interfaces (4)\r\n+\t\t\t\r\n+\r\n+Reduced:\r\n+\r\n+Amazon EC2 : \r\n+\t\t- Operating system (Linux), Quantity (4), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (2 TB), Provisioning IOPS (1000), Instance type (m4.large)\r\n+\t\t- Operating system (Linux), Quantity (4), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (1 TB), Provisioning IOPS (1000), Instance type (t3.large\r\n+\r\n+RDS for MySQL :\r\n+\t\t- Quantity (2), Storage for each RDS instance (General Purpose SSD (gp2)), Storage amount (250 GB), Additional backup storage (3 TB)\r\n+\r\n+S3 Storage bucket:\r\n+\t\t- S3 Standard storage (5 TB per month)\r\n+\r\n+VPC:\r\n+\t\t- Number of NAT Gateways (1)\r\n+\r\n+LoadBalancers:\r\n+\t\t- Number of Application Load Balancers (1)\r\n+\t\t\r\n+Route 53:\r\n+\t\t- Number of Elastic Network Interfaces (4)\t\t\r\n+\t\t\r\n+Increased: \r\n+\r\n+Amazon EC2 : \r\n+\t\t- Operating system (Linux), Quantity (8), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (1 TB), Provisioning IOPS (1000), Instance type (t3a.2xlarge)\r\n+\t\t- Operating system (Linux), Quantity (8), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (2 TB), Provisioning IOPS (1000), Instance type (m6g.2xlarge)\r\n+\r\n+RDS for MySQL :\r\n+\t\t- Quantity (2), Storage for each RDS instance (General Purpose SSD (gp2)), Storage amount (250 GB), Additional backup storage (3 TB)\r\n+\t\t\r\n+S3 Storage bucket:\r\n+\t\t- S3 Standard storage (100 TB per month)\r\n+\t\t\r\n+VPC:\r\n+\t\t- Number of NAT Gateways (1)\r\n+\r\n+LoadBalancers:\r\n+\t\t- Number of Application Load Balancers (1)\r\n+\t\t\r\n+Route 53:\r\n+\t\t- Number of Elastic Network Interfaces (4)\t\n\\ No newline at end of file"
      },
      {
        "filename": "Project_02/Task_02/Reduced_Cost_Estimate.csv",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+Group hierarchy,Region,Service,Upfront,Monthly,First 12 months total,Currency,Configuration summary\n+My Estimate,US East (Ohio),Amazon EC2,0,924.42,11093.04,USD,\"Operating system (Linux), Quantity (4), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (1 TB), Provisioning IOPS (1000), Instance type (t3.large)\"\n+My Estimate,US East (Ohio),Amazon CloudWatch,0,300,3600.00,USD,\n+My Estimate,US East (Ohio),Amazon Virtual Private Cloud (VPC),0,78.93,947.16,USD,Number of NAT Gateways (1)\n+My Estimate,US East (Ohio),Amazon EC2,0,1465.04,17580.48,USD,\"Operating system (Linux), Quantity (4), Storage for each EC2 instance (Provisioned IOPS SSD (io1)), Storage amount (2 TB), Provisioning IOPS (1000), Instance type (m4.large)\"\n+My Estimate,US East (Ohio),Elastic Load Balancing,0,94.25,1131.00,USD,Number of Application Load Balancers (1)\n+My Estimate,US East (Ohio),Amazon Route 53,0,366,4392.00,USD,\"Hosted Zones (2), Number of Elastic Network Interfaces (4)\"\n+My Estimate,US East (Ohio),S3 Standard,0,117.76,1413.12,USD,S3 Standard storage (5 TB per month)\n+My Estimate,US East (Ohio),Data Transfer,0,0,0.00,USD,\" Inbound (from: Not selected) 0 TB per month \n+ Outbound (to: Not selected) 0 TB per month \n+\"\n+My Estimate,US East (Ohio),Amazon RDS for MySQL,0,2965.344,35584.13,USD,\"Quantity (2), Storage for each RDS instance (General Purpose SSD (gp2)), Storage amount (250 GB), Additional backup storage (3 TB)\"\n+\n+\n+\n+\"AWS Pricing Calculator provides only an estimate of your AWS fees and doesn't include any taxes that might apply. Your actual fees depend on a variety of factors, including your actual usage of AWS services.\""
      },
      {
        "filename": "Project_02/Task_03/UdacityCloudTrailLog.csv",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "status": "added",
        "patch": "@@ -0,0 +1,31 @@\n+User name,AWS access key,Event time,Event source,Event name,AWS region,Source IP address,User agent,Error code,Resources,Request ID,Event ID,Read-only,Event type,Recipient Account Id,Event category\n+CloudTrail,ASIAQPDGID2TJNESWZPD,2020-07-02T21:29:16Z,s3.amazonaws.com,CreateBucket,us-east-2,37.201.4.214,\"[AWSCloudTrail, aws-internal/3 aws-sdk-java/1.11.792 Linux/4.9.184-0.1.ac.235.83.329.metal1.x86_64 OpenJDK_64-Bit_Server_VM/25.252-b09 java/1.8.0_252 vendor/Oracle_Corporation]\",,\"[{\"\"resourceType\"\":\"\"AWS::S3::Bucket\"\",\"\"resourceName\"\":\"\"udacity-bucket-009\"\"}]\",25B285619ECB96DA,409a5781-2b1d-43e3-b078-0b4dbaaedbae,,AwsApiCall,032426696358,\n+CloudTrail,ASIAQPDGID2TJNESWZPD,2020-07-02T21:29:16Z,s3.amazonaws.com,PutBucketPolicy,us-east-2,37.201.4.214,\"[AWSCloudTrail, aws-internal/3 aws-sdk-java/1.11.792 Linux/4.9.184-0.1.ac.235.83.329.metal1.x86_64 OpenJDK_64-Bit_Server_VM/25.252-b09 java/1.8.0_252 vendor/Oracle_Corporation]\",,\"[{\"\"resourceType\"\":\"\"AWS::S3::Bucket\"\",\"\"resourceName\"\":\"\"udacity-bucket-009\"\"}]\",8645A9B9D5BFAB50,556664b1-46c3-4145-bc5a-d43633f5e996,,AwsApiCall,032426696358,\n+CloudTrail,ASIAQPDGID2TJNESWZPD,2020-07-02T21:29:16Z,cloudtrail.amazonaws.com,CreateTrail,us-east-2,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::CloudTrail::Trail\"\",\"\"resourceName\"\":\"\"Udacity_Trail\"\"},{\"\"resourceType\"\":\"\"AWS::CloudTrail::Trail\"\",\"\"resourceName\"\":\"\"arn:aws:cloudtrail:us-east-2:032426696358:trail/Udacity_Trail\"\"},{\"\"resourceType\"\":\"\"AWS::S3::Bucket\"\",\"\"resourceName\"\":\"\"udacity-bucket-009\"\"}]\",9f51ecc9-1337-4aca-b7e7-b4c67493cdcb,8dfb615f-b17a-4d9f-a000-1fac66cec841,false,AwsApiCall,032426696358,\n+CloudTrail,ASIAQPDGID2TJNESWZPD,2020-07-02T21:29:16Z,cloudtrail.amazonaws.com,StartLogging,us-east-2,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::CloudTrail::Trail\"\",\"\"resourceName\"\":\"\"Udacity_Trail\"\"}]\",f65ead05-cce0-4e01-a182-d171e9598ed0,c0b8f334-46f6-47b5-962a-65332031d143,false,AwsApiCall,032426696358,\n+CloudTrail,ASIAQPDGID2TJNESWZPD,2020-07-02T21:29:16Z,cloudtrail.amazonaws.com,PutEventSelectors,us-east-2,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::CloudTrail::Trail\"\",\"\"resourceName\"\":\"\"Udacity_Trail\"\"},{\"\"resourceType\"\":\"\"AWS::CloudTrail::Trail\"\",\"\"resourceName\"\":\"\"arn:aws:cloudtrail:us-east-2:032426696358:trail/Udacity_Trail\"\"}]\",1dc6d4e8-22ad-4176-b673-742501fc7030,fedf342e-9c20-4ae0-bb68-3de9f577efc0,false,AwsApiCall,032426696358,\n+CloudTrail,ASIAQPDGID2TEALLMGNB,2020-07-02T21:24:42Z,iam.amazonaws.com,ChangePassword,us-east-1,54.239.98.10,Coral/Jakarta,InternalFailure,[],970de2e9-f827-49da-8412-d584c15a7c56,39845aab-6f31-49c8-8841-ccec32f17a08,false,AwsApiCall,032426696358,\n+CloudTrail,ASIAQPDGID2TBSM4JVXM,2020-07-02T21:24:31Z,iam.amazonaws.com,ChangePassword,us-east-1,AWS Internal,AWS Internal,,[],74692782-72e7-4125-92f3-9132ba76608d,1cdfe933-7c1d-40f3-a898-a36bcc08bd66,false,AwsApiCall,032426696358,\n+root,ASIAQPDGID2TBSGSZP6U,2020-07-02T21:22:13Z,iam.amazonaws.com,CreateLoginProfile,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"Accountant\"\"}]\",d01f37c6-8184-4059-ae7a-f928ab1f1f5f,1b4f52dc-245c-49df-adac-e9a2ec394d7d,,AwsApiCall,032426696358,\n+root,ASIAQPDGID2TBSGSZP6U,2020-07-02T21:22:12Z,iam.amazonaws.com,AttachUserPolicy,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"Accountant\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Policy\"\",\"\"resourceName\"\":\"\"arn:aws:iam::aws:policy/IAMUserChangePassword\"\"}]\",9b5ab228-4d9b-42f6-b10f-6aeb9d862610,2211ae47-f4ac-4a2a-9dca-7ab705e846de,,AwsApiCall,032426696358,\n+root,ASIAQPDGID2TBSGSZP6U,2020-07-02T21:22:12Z,iam.amazonaws.com,AddUserToGroup,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"Accountant\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"Reviewers\"\"}]\",7e47b12f-dbce-4191-80f1-c0455565776c,8ab9bf7f-d2a5-447c-8785-b7e22fb7d6ce,,AwsApiCall,032426696358,\n+root,ASIAQPDGID2TBSGSZP6U,2020-07-02T21:22:12Z,iam.amazonaws.com,CreateUser,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"Accountant\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"AIDAQPDGID2TAL6XTY6J3\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"arn:aws:iam::032426696358:user/Accountant\"\"}]\",6779cb69-079c-4776-812c-80f43927989e,afe2378c-9378-4618-8f1b-e6288cb7076c,,AwsApiCall,032426696358,\n+root,,2020-07-02T21:21:20Z,signin.amazonaws.com,ConsoleLogin,us-east-1,37.201.4.214,\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36 OPR/68.0.3618.173\",,[],,ffd144b4-23b4-4b42-a921-011e6ad15196,,AwsConsoleSignIn,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:20:25Z,iam.amazonaws.com,CreateLoginProfile,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"CloudTrail\"\"}]\",a152e553-5b69-44e7-b191-d42b2648f6d3,a2a27ac0-fcfa-443d-92bc-d3015938b1ab,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:20:24Z,iam.amazonaws.com,AttachUserPolicy,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"CloudTrail\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Policy\"\",\"\"resourceName\"\":\"\"arn:aws:iam::aws:policy/IAMUserChangePassword\"\"}]\",ce914a6c-2d51-4fe7-bc4c-708542376677,8c230440-a10a-44a1-ad44-76eb702e5775,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:20:24Z,iam.amazonaws.com,AddUserToGroup,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"CloudTrail\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"CloudTrailAdmins\"\"}]\",8594b990-bd7d-41c9-a715-87c60c9428d5,ebd1e8c5-78d1-4023-9145-844b0e8ab811,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:20:23Z,iam.amazonaws.com,CreateUser,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"CloudTrail\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"AIDAQPDGID2TGMOWLCDWR\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"arn:aws:iam::032426696358:user/CloudTrail\"\"}]\",2cca567c-be83-4b52-82d1-d133d2126ef3,83c96dfb-1ad3-4ea1-8ba5-d6c3033a48ea,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:16:04Z,iam.amazonaws.com,CreateGroup,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"Reviewers\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"arn:aws:iam::032426696358:group/Reviewers\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"AGPAQPDGID2TFG5JBWBR3\"\"}]\",2ad8b838-9084-422b-863b-2ea27849aaf4,6645921c-c9fb-41e9-984f-e6867dbb66c1,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:16:04Z,iam.amazonaws.com,AttachGroupPolicy,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::Policy\"\",\"\"resourceName\"\":\"\"arn:aws:iam::aws:policy/job-function/Billing\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"Reviewers\"\"}]\",0a071de9-e4b7-41c9-8e47-856fd3b69d24,7b1af538-48e6-437a-af57-61e58d7f4007,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:14:55Z,iam.amazonaws.com,AttachGroupPolicy,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::Policy\"\",\"\"resourceName\"\":\"\"arn:aws:iam::aws:policy/AWSCloudTrailReadOnlyAccess\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"CloudTrailAdmins\"\"}]\",b20bb7dd-f159-4120-8204-7cdb4bc5b50a,3fad7073-de58-40ce-90d7-a5f0fcc49496,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:14:55Z,iam.amazonaws.com,AttachGroupPolicy,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::Policy\"\",\"\"resourceName\"\":\"\"arn:aws:iam::aws:policy/AWSCloudTrailFullAccess\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"CloudTrailAdmins\"\"}]\",42fca687-159f-44b5-b37e-af1cb5e1658c,6c19ce29-62f3-4090-adf0-d8016fa129f8,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:14:55Z,iam.amazonaws.com,CreateGroup,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"CloudTrailAdmins\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"arn:aws:iam::032426696358:group/CloudTrailAdmins\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"AGPAQPDGID2TLFSLKV3MS\"\"}]\",dd77466e-d95c-487f-84e3-660858e6fbba,869f997c-f763-4b5d-9fbc-6a7f013cbea7,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T21:11:31Z,iam.amazonaws.com,UpdateAccountPasswordPolicy,us-east-1,37.201.4.214,console.amazonaws.com,,[],866cdbbf-2f00-46fe-ac49-5bda52bb7068,9e5c5eae-dbc2-429b-999c-124bd04fa7a9,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T19:55:42Z,iam.amazonaws.com,EnableMFADevice,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"Administrator\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::MfaDevice\"\",\"\"resourceName\"\":\"\"arn:aws:iam::032426696358:mfa/Administrator\"\"}]\",daf85d2d-bbba-4eff-93a2-aeaf33c254e0,757dba3e-ecf3-473b-8a1e-85ad49eef23d,,AwsApiCall,032426696358,\n+Administrator,ASIAQPDGID2TELBOIO66,2020-07-02T19:46:27Z,iam.amazonaws.com,CreateVirtualMFADevice,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::MfaDevice\"\",\"\"resourceName\"\":\"\"arn:aws:iam::032426696358:mfa/Administrator\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::MfaDevice\"\",\"\"resourceName\"\":\"\"Administrator\"\"}]\",8d7dde9c-c794-4f64-ba3f-0de9e65c2570,ae1f1a9f-2844-4c87-8e53-4780692d3094,,AwsApiCall,032426696358,\n+root,ASIAQPDGID2TI4ZBYLC7,2020-07-02T19:33:44Z,iam.amazonaws.com,CreateLoginProfile,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"Administrator\"\"}]\",b378b83c-d88b-404a-bb2a-0299c3fe6012,03c64255-d56e-4cb2-a7ac-22bc69506d48,,AwsApiCall,032426696358,\n+root,ASIAQPDGID2TI4ZBYLC7,2020-07-02T19:33:43Z,iam.amazonaws.com,AddUserToGroup,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"Administrator\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"Administrators\"\"}]\",7a56151c-04cb-477f-909c-67c690a05ac9,12519aa7-6b7a-4bc1-ad06-edd02839aca1,,AwsApiCall,032426696358,\n+root,ASIAQPDGID2TI4ZBYLC7,2020-07-02T19:33:42Z,iam.amazonaws.com,CreateUser,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"arn:aws:iam::032426696358:user/Administrator\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"AIDAQPDGID2TF4UA2IE6I\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::User\"\",\"\"resourceName\"\":\"\"Administrator\"\"}]\",b251da75-981f-4eff-b9e1-248adcf52249,bf755f6a-a994-443e-b889-cab91c33efb7,,AwsApiCall,032426696358,\n+root,ASIAQPDGID2TI4ZBYLC7,2020-07-02T19:32:35Z,iam.amazonaws.com,AttachGroupPolicy,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::Policy\"\",\"\"resourceName\"\":\"\"arn:aws:iam::aws:policy/AdministratorAccess\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"Administrators\"\"}]\",8d48eabf-bd8a-413b-8a7a-ca1a8741ce5c,b72a33c7-9409-481b-9409-21f4349a3df0,,AwsApiCall,032426696358,\n+root,ASIAQPDGID2TI4ZBYLC7,2020-07-02T19:32:34Z,iam.amazonaws.com,CreateGroup,us-east-1,37.201.4.214,console.amazonaws.com,,\"[{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"Administrators\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"arn:aws:iam::032426696358:group/Administrators\"\"},{\"\"resourceType\"\":\"\"AWS::IAM::Group\"\",\"\"resourceName\"\":\"\"AGPAQPDGID2TMT7OV57E2\"\"}]\",888f77cd-b091-42f2-9db1-bb5ee40713bc,2a764615-6c7a-405a-bdc7-fc0d79e25fb1,,AwsApiCall,032426696358,\n+root,,2020-07-02T19:27:19Z,signin.amazonaws.com,ConsoleLogin,us-east-1,37.201.4.214,\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36 OPR/68.0.3618.173\",,[],,5888f116-582c-46bb-b582-e19ba96e35fd,,AwsConsoleSignIn,032426696358,"
      },
      {
        "filename": "Project_02/Task_03/udacity_password_policy.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_04/CloudWatch_alarm.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_1/2_Resources_Deleted.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_1/6_Resources_Created.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_1/Terraform_1_1.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_1/Terraform_1_2.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_1/main.tf",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "status": "added",
        "patch": "@@ -0,0 +1,31 @@\n+# TODO: Designate a cloud provider, region, and credentials\n+\n+provider \"aws\" {\n+  access_key = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n+  secret_key = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n+  region = \"us-west-2\"\n+}\n+\n+resource \"aws_instance\" \"UdacityT2\" {\n+  count = \"4\"\n+  ami = \"ami-0a243dbef00e96192\"\n+  instance_type = \"t2.micro\"\n+  tags = {\n+    name = \"Udacity T2\"\n+  }\n+}\n+\n+resource \"aws_instance\" \"UdacityM4\" {\n+  count = \"2\"\n+  ami = \"ami-0a243dbef00e96192\"\n+  instance_type = \"m4.large\"\n+  tags = {\n+    name = \"Udacity M4\"\n+  }\n+}\n+\n+\n+# TODO: provision 4 AWS t2.micro EC2 instances named Udacity T2\n+\n+\n+# TODO: provision 2 m4.large EC2 instances named Udacity M4"
      },
      {
        "filename": "Project_02/Task_05/Part_2/Resources_Created.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_2/Resources_Destroyed.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_2/Terraform_2_1.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_2/Terraform_2_2.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_2/Terraform_2_3.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_2/Terraform_destroyed.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_2/greet_lambda.py",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+import os\n+\n+def lambda_handler(event, context):\n+    return \"{} from Lambda!\".format(os.environ['greeting'])"
      },
      {
        "filename": "Project_02/Task_05/Part_2/lambda.zip",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      },
      {
        "filename": "Project_02/Task_05/Part_2/main.tf",
        "additions": 103,
        "deletions": 0,
        "changes": 103,
        "status": "added",
        "patch": "@@ -0,0 +1,103 @@\n+provider \"aws\" {\r\n+  # Updated with dummy key before uploading the code into github\r\n+  access_key = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\r\n+  secret_key = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\r\n+  region = \"${var.region}\"\r\n+}\r\n+\r\n+resource \"aws_instance\" \"UdacityT2\" {\r\n+  count = \"4\"\r\n+  ami = \"ami-0a243dbef00e96192\"\r\n+  instance_type = \"t2.micro\"\r\n+  tags = {\r\n+    name = \"Udacity T2\"\r\n+  }\r\n+}\r\n+\r\n+resource \"aws_instance\" \"UdacityM4\" {\r\n+  count = \"2\"\r\n+  ami = \"ami-0a243dbef00e96192\"\r\n+  instance_type = \"m4.large\"\r\n+  tags = {\r\n+    name = \"Udacity M4\"\r\n+  }\r\n+}\r\n+\r\n+data \"aws_vpc\" \"selected\" {\r\n+  id = \"${var.vpc_id}\"\r\n+}\r\n+\r\n+data \"archive_file\" \"lambda_zip\" {\r\n+  type        = \"zip\"\r\n+  output_path = \"lambda.zip\"\r\n+  source_file = \"greet_lambda.py\"\r\n+}\r\n+\r\n+resource \"aws_iam_role\" \"iam_for_lambda\" {\r\n+  name = \"iam_for_lambda\"\r\n+\r\n+  assume_role_policy = <<EOF\r\n+{\r\n+  \"Version\": \"2012-10-17\",\r\n+  \"Statement\": [\r\n+    {\r\n+      \"Action\": \"sts:AssumeRole\",\r\n+      \"Principal\": {\r\n+        \"Service\": \"lambda.amazonaws.com\"\r\n+      },\r\n+      \"Effect\": \"Allow\",\r\n+      \"Sid\": \"\"\r\n+    }\r\n+  ]\r\n+}\r\n+EOF\r\n+}\r\n+\r\n+resource \"aws_cloudwatch_log_group\" \"lambda_logs\" {\r\n+  name              = \"/aws/lambda/${var.lambda_function_name}\"\r\n+  retention_in_days = 14\r\n+}\r\n+\r\n+resource \"aws_iam_policy\" \"lambda_logging\" {\r\n+  name        = \"lambda_logging\"\r\n+  path        = \"/\"\r\n+  description = \"IAM policy for Lambda logging\"\r\n+\r\n+  policy = <<EOF\r\n+{\r\n+  \"Version\": \"2012-10-17\",\r\n+  \"Statement\": [\r\n+    {\r\n+      \"Action\": [\r\n+        \"logs:CreateLogGroup\",\r\n+        \"logs:CreateLogStream\",\r\n+        \"logs:PutLogEvents\"\r\n+      ],\r\n+      \"Resource\": \"arn:aws:logs:*:*:*\",\r\n+      \"Effect\": \"Allow\"\r\n+    }\r\n+  ]\r\n+}\r\n+EOF\r\n+}\r\n+\r\n+resource \"aws_iam_role_policy_attachment\" \"lambda_logs\" {\r\n+  role       = aws_iam_role.iam_for_lambda.name\r\n+  policy_arn = aws_iam_policy.lambda_logging.arn\r\n+}\r\n+\r\n+resource \"aws_lambda_function\" \"greet_lambda\" {\r\n+  filename         = \"lambda.zip\"\r\n+  function_name    = var.lambda_function_name\r\n+  role             = aws_iam_role.iam_for_lambda.arn\r\n+  handler          = \"greet_lambda.lambda_handler\"\r\n+  source_code_hash = data.archive_file.lambda_zip.output_base64sha256\r\n+  depends_on       = [aws_iam_role_policy_attachment.lambda_logs, aws_cloudwatch_log_group.lambda_logs]\r\n+\r\n+  runtime = var.runtime\r\n+  environment {\r\n+    variables = {\r\n+      greeting = \"Hello, World!\"\r\n+    }\r\n+  }\r\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "Project_02/Task_05/Part_2/outputs.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+# TODO: Define the output variable for the lambda function.\r\n+\r\n+output lamda_ouptut {\r\n+    value = \"${aws_lambda_function.greet_lambda.id}\"\r\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "Project_02/Task_05/Part_2/variables.tf",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+# TODO: Define the variable for aws_region\r\n+\r\n+variable \"region\" {\r\n+    description = \"The AWS region to use\"\r\n+    default = \"us-west-2\"\r\n+}\r\n+\r\n+variable \"runtime\" {\r\n+  default = \"python3.8\"\r\n+}\r\n+\r\n+variable \"lambda_function_name\" {\r\n+  default = \"greet_lambda\"\r\n+}\r\n+\r\n+variable \"vpc_id\" {\r\n+   description = \"VPC for resource to be created\"\r\n+   default = \"vpc-06ab10bf1208a7836\"\r\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "Project_02/Task_06/Terraform_destroyed.png",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "status": "added",
        "patch": null
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/AndreasSko/infrastructure/commit/e7c56ae03560224a4d40370ce812f05662cee20b",
    "files": [
      {
        "filename": "terraform/hetzner.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n resource \"hcloud_server\" \"andreas_sk\" {\n   name        = \"andreas-sk\"\n   image       = data.hcloud_image.ubuntu_2004.name\n-  server_type = \"cx11\"\n+  server_type = \"cpx11\"\n   location    = var.hcloud_location\n   ssh_keys = [\n     \"askorczyk@Andreass-MacBook-Pro.local\","
      }
    ],
    "existing_codes": [
      "awareness",
      "increase",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cliffano/feedpaper/commit/d13218e98814d7ac3bc65fc862c0119123f44d68",
    "files": [
      {
        "filename": "feedpaper-data/infrastructure.tf",
        "additions": 5,
        "deletions": 43,
        "changes": 48,
        "status": "modified",
        "patch": "@@ -1,6 +1,4 @@\n-variable \"db_data_conf\" {}\n-variable \"db_data_feeds\" {}\n-variable \"db_data_articles\" {}\n+variable \"db_data\" {}\n \n provider \"aws\" {\n     region = \"ap-southeast-2\"\n@@ -11,50 +9,14 @@ provider \"aws\" {\n     region = \"us-west-2\"\n }\n \n-resource \"aws_dynamodb_table\" \"data_conf\" {\n+resource \"aws_dynamodb_table\" \"data\" {\n     provider = \"aws.us\"\n-    name = \"${var.db_data_conf}\"\n-    read_capacity = 5\n-    write_capacity = 5\n+    name = \"${var.db_data}\"\n+    read_capacity = 1\n+    write_capacity = 1\n     hash_key = \"id\"\n     attribute {\n       name = \"id\"\n       type = \"S\"\n     }\n-    attribute {\n-      name = \"url\"\n-      type = \"S\"\n-    }\n-}\n-\n-resource \"aws_dynamodb_table\" \"data_feeds\" {\n-    provider = \"aws.us\"\n-    name = \"${var.db_data_feeds}\"\n-    read_capacity = 5\n-    write_capacity = 5\n-    hash_key = \"url\"\n-    attribute {\n-      name = \"url\"\n-      type = \"S\"\n-    }\n-    attribute {\n-      name = \"articles\"\n-      type = \"S\"\n-    }\n-}\n-\n-resource \"aws_dynamodb_table\" \"data_articles\" {\n-    provider = \"aws.us\"\n-    name = \"${var.db_data_articles}\"\n-    read_capacity = 5\n-    write_capacity = 5\n-    hash_key = \"url\"\n-    attribute {\n-      name = \"url\"\n-      type = \"S\"\n-    }\n-    attribute {\n-      name = \"content\"\n-      type = \"S\"\n-    }\n }"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/HarsheshShah08/HS-Terraform/commit/e0d0f044c54ebf491c122664d03e0cfe5d2b0823",
    "files": [
      {
        "filename": "provider.tf",
        "additions": 102,
        "deletions": 8,
        "changes": 110,
        "status": "modified",
        "patch": "@@ -1,41 +1,135 @@\n+\n+//Region\n provider \"aws\"{\n     region = \"${var.region}\"\n }\n \n-resource \"aws_vpc\" \"BomGen-VPC\" {\n+//Your VPC\n+resource \"aws_vpc\" \"BomGen_VPC\" {\n \n     cidr_block = \"${var.vpc_cidr}\"\n     instance_tenancy = \"default\"\n \n     tags = {\n-        Name=\"BomGen-VPC\"\n+        Name=\"BomGen_VPC\"\n         Project=\"BoMGen\"\n     }\n   \n }\n \n-resource \"aws_subnet\" \"BomGen-SubNet-Public\" {\n+//Public-Subnets\n+resource \"aws_subnet\" \"BomGen_SubNet_Public\" {\n     count = \"${length(var.subnet_cidr_public)}\"\n-    vpc_id = \"${aws_vpc.BomGen-VPC.id}\"\n+    vpc_id = \"${aws_vpc.BomGen_VPC.id}\"\n     availability_zone = \"${element(data.aws_availability_zones.azs.names, count.index)}\"\n     cidr_block = \"${element(var.subnet_cidr_public, count.index)}\"\n \n     tags = {\n-        Name=\"BomGen-SubNet-${count.index+1}\"\n+        Name=\"BomGen_SubNet_${count.index+1}\"\n         Project=\"BoMGen\"\n     }\n   \n+}\n+//Route Tables\n+resource \"aws_route_table\" \"BomGen_Public_RT\" {\n+  vpc_id = \"${aws_vpc.BomGen_VPC.id}\"\n+\n+  tags = {\n+    Name = \"BomGen_Public_RT\"\n+    Project=\"BoMGen\"\n+  }\n+}\n+\n+//Route Table entry for internet Gateway\n+resource \"aws_route\" \"BoMGen_public_internet_gateway\" {\n+    route_table_id = \"${aws_route_table.BomGen_Public_RT.id}\"\n+    destination_cidr_block = \"0.0.0.0/0\"\n+    gateway_id = \"${aws_internet_gateway.BoMGen_IGW.id}\"\n+    \n }\n \n-resource \"aws_subnet\" \"BomGen-SubNet-Private\" {\n+//Internet Gateway\n+resource \"aws_internet_gateway\" \"BoMGen_IGW\" {\n+  vpc_id = \"${aws_vpc.BomGen_VPC.id}\"\n+\n+  tags = {\n+    Name = \"BoMGen_IGW\"\n+    Project=\"BoMGen\"\n+  }\n+}\n+\n+//Route table entry with public subnet\n+resource \"aws_route_table_association\" \"BomGen_Public_RT\" {\n+    count = \"${length(var.subnet_cidr_public)}\"\n+    subnet_id = \"${element(aws_subnet.BomGen_SubNet_Public.*.id,count.index)}\"\n+    route_table_id =  \"${aws_route_table.BomGen_Public_RT.id}\"\n+}\n+/*\n+//Private-Subnets\n+\n+resource \"aws_subnet\" \"BomGen_SubNet_Private\" {\n     count = \"${length(var.subnet_cidr_private)}\"\n-    vpc_id = \"${aws_vpc.BomGen-VPC.id}\"\n+    vpc_id = \"${aws_vpc.BomGen_VPC.id}\"\n     availability_zone = \"${element(data.aws_availability_zones.azs.names, count.index)}\"\n     cidr_block = \"${element(var.subnet_cidr_private, count.index)}\"\n \n     tags = {\n-        Name=\"BomGen-SubNet-${count.index+3}\"\n+        Name=\"BomGen_SubNet_${count.index+3}\"\n         Project=\"BoMGen\"\n     }\n   \n }\n+\n+resource \"aws_route_table\" \"BomGen_Private_RT\" {\n+  vpc_id = \"${aws_vpc.BomGen_VPC.id}\"\n+\n+  tags = {\n+    Name = \"BomGen_Private_RT\"\n+    Project=\"BoMGen\"\n+  }\n+}\n+\n+//Route Table entry for NAT Gateway\n+\n+resource \"aws_route\" \"BoMGen_private_NAT_gateway\" {\n+    count = \"${length(var.subnet_cidr_private)}\"\n+    route_table_id = \"${element(aws_route_table.BomGen_Private_RT.*.id,count.index)}\"\n+    destination_cidr_block = \"0.0.0.0/0\"\n+    gateway_id = \"${element(aws_nat_gateway.BoMGen_NATG.*.id, count.index)}\"\n+}\n+\n+//Route table entry with private subnet\n+\n+resource \"aws_route_table_association\" \"BomGen_Private_RT\" {\n+    count = \"${length(var.subnet_cidr_private)}\"\n+    subnet_id = \"${element(aws_subnet.BomGen_SubNet_Private.*.id,count.index)}\"\n+    route_table_id =  \"${aws_route_table.BomGen_Private_RT.id}\"\n+}\n+\n+//EIP for NAT gateway\n+resource \"aws_eip\" \"BomGen_eip\" {\n+    count = \"${length(var.subnet_cidr_private)}\"\n+    instance = \"${element(var.eip,count.index)}\"\n+    vpc      = true\n+    tags = {\n+        Name = \"BomGen_eip__${count.index}\"\n+        Project=\"BoMGen\"\n+    }\n+    \n+    provisioner \"local-exec\" {\n+        command = \"echo Waiting ${var.eip_propagation_wait_time} seconds for EIP to propagate; sleep ${var.eip_propagation_wait_time}\"\n+        }\n+    \n+\n+}\n+//NAG Gateway\n+resource \"aws_nat_gateway\" \"BoMGen_NATG\" {\n+    count = \"${length(var.subnet_cidr_private)}\"\n+    allocation_id = \"${element(aws_eip.BomGen_eip.*.id,count.index)}\"\n+    subnet_id = \"${element(aws_subnet.BomGen_SubNet_Private.*.id,count.index)}\"\n+\n+    tags = {\n+        Name = \"BoMGen_NATG\"\n+        Project=\"BoMGen\"\n+    }\n+}*/\n\\ No newline at end of file"
      },
      {
        "filename": "terraform.tfstate",
        "additions": 316,
        "deletions": 32,
        "changes": 348,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"0.12.26\",\n-  \"serial\": 9,\n+  \"serial\": 25,\n   \"lineage\": \"d786a7cd-a004-3d46-9167-af20df8ac8e8\",\n   \"outputs\": {},\n   \"resources\": [\n@@ -21,7 +21,7 @@\n             \"group_names\": [\n               \"us-east-2\"\n             ],\n-            \"id\": \"2020-06-01 22:00:04.7924495 +0000 UTC\",\n+            \"id\": \"2020-06-02 22:24:45.7324476 +0000 UTC\",\n             \"names\": [\n               \"us-east-2a\",\n               \"us-east-2b\",\n@@ -37,160 +37,444 @@\n         }\n       ]\n     },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_eip\",\n+      \"name\": \"BomGen_eip\",\n+      \"each\": \"list\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"index_key\": 0,\n+          \"status\": \"tainted\",\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"allocation_id\": null,\n+            \"associate_with_private_ip\": null,\n+            \"association_id\": null,\n+            \"customer_owned_ip\": null,\n+            \"customer_owned_ipv4_pool\": null,\n+            \"domain\": \"vpc\",\n+            \"id\": \"eipalloc-067a7a7df2f0187b9\",\n+            \"instance\": \"\",\n+            \"network_interface\": \"\",\n+            \"private_dns\": null,\n+            \"private_ip\": null,\n+            \"public_dns\": null,\n+            \"public_ip\": null,\n+            \"public_ipv4_pool\": null,\n+            \"tags\": {\n+              \"Name\": \"BomGen_eip__0\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"timeouts\": null,\n+            \"vpc\": true\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==\"\n+        },\n+        {\n+          \"index_key\": 1,\n+          \"status\": \"tainted\",\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"allocation_id\": null,\n+            \"associate_with_private_ip\": null,\n+            \"association_id\": null,\n+            \"customer_owned_ip\": null,\n+            \"customer_owned_ipv4_pool\": null,\n+            \"domain\": \"vpc\",\n+            \"id\": \"eipalloc-0d1c0c5de685bea66\",\n+            \"instance\": \"\",\n+            \"network_interface\": \"\",\n+            \"private_dns\": null,\n+            \"private_ip\": null,\n+            \"public_dns\": null,\n+            \"public_ip\": null,\n+            \"public_ipv4_pool\": null,\n+            \"tags\": {\n+              \"Name\": \"BomGen_eip__1\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"timeouts\": null,\n+            \"vpc\": true\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==\"\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_internet_gateway\",\n+      \"name\": \"BoMGen_IGW\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"igw-0242ae4edd70c5449\",\n+            \"owner_id\": \"360288436262\",\n+            \"tags\": {\n+              \"Name\": \"BoMGen_IGW\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_nat_gateway\",\n+      \"name\": \"BoMGen_NATG\",\n+      \"each\": \"list\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": []\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route\",\n+      \"name\": \"BoMGen_private_NAT_gateway\",\n+      \"each\": \"list\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": []\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route\",\n+      \"name\": \"BoMGen_public_internet_gateway\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"destination_cidr_block\": \"0.0.0.0/0\",\n+            \"destination_ipv6_cidr_block\": null,\n+            \"destination_prefix_list_id\": \"\",\n+            \"egress_only_gateway_id\": \"\",\n+            \"gateway_id\": \"igw-0242ae4edd70c5449\",\n+            \"id\": \"r-rtb-0ace4f0228b919a1b1080289494\",\n+            \"instance_id\": \"\",\n+            \"instance_owner_id\": \"\",\n+            \"nat_gateway_id\": \"\",\n+            \"network_interface_id\": \"\",\n+            \"origin\": \"CreateRoute\",\n+            \"route_table_id\": \"rtb-0ace4f0228b919a1b\",\n+            \"state\": \"active\",\n+            \"timeouts\": null,\n+            \"transit_gateway_id\": \"\",\n+            \"vpc_peering_connection_id\": \"\"\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=\",\n+          \"dependencies\": [\n+            \"aws_internet_gateway.BoMGen_IGW\",\n+            \"aws_route_table.BomGen_Public_RT\",\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route_table\",\n+      \"name\": \"BomGen_Private_RT\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"rtb-0f7027ad5856e81a8\",\n+            \"owner_id\": \"360288436262\",\n+            \"propagating_vgws\": [],\n+            \"route\": [],\n+            \"tags\": {\n+              \"Name\": \"BomGen_Private_RT\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route_table\",\n+      \"name\": \"BomGen_Public_RT\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"rtb-0ace4f0228b919a1b\",\n+            \"owner_id\": \"360288436262\",\n+            \"propagating_vgws\": [],\n+            \"route\": [\n+              {\n+                \"cidr_block\": \"0.0.0.0/0\",\n+                \"egress_only_gateway_id\": \"\",\n+                \"gateway_id\": \"igw-0242ae4edd70c5449\",\n+                \"instance_id\": \"\",\n+                \"ipv6_cidr_block\": \"\",\n+                \"nat_gateway_id\": \"\",\n+                \"network_interface_id\": \"\",\n+                \"transit_gateway_id\": \"\",\n+                \"vpc_peering_connection_id\": \"\"\n+              }\n+            ],\n+            \"tags\": {\n+              \"Name\": \"BomGen_Public_RT\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route_table_association\",\n+      \"name\": \"BomGen_Private_RT\",\n+      \"each\": \"list\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"index_key\": 0,\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"gateway_id\": null,\n+            \"id\": \"rtbassoc-0e0ad25d35c7134e4\",\n+            \"route_table_id\": \"rtb-0f7027ad5856e81a8\",\n+            \"subnet_id\": \"subnet-0788951b9f1e0ef04\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_route_table.BomGen_Private_RT\",\n+            \"aws_subnet.BomGen_SubNet_Private\"\n+          ]\n+        },\n+        {\n+          \"index_key\": 1,\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"gateway_id\": null,\n+            \"id\": \"rtbassoc-056caefe058109a71\",\n+            \"route_table_id\": \"rtb-0f7027ad5856e81a8\",\n+            \"subnet_id\": \"subnet-02a6a4e257c27b194\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_route_table.BomGen_Private_RT\",\n+            \"aws_subnet.BomGen_SubNet_Private\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route_table_association\",\n+      \"name\": \"BomGen_Public_RT\",\n+      \"each\": \"list\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"index_key\": 0,\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"gateway_id\": null,\n+            \"id\": \"rtbassoc-0e5ca7efdd3a7204c\",\n+            \"route_table_id\": \"rtb-0ace4f0228b919a1b\",\n+            \"subnet_id\": \"subnet-0d08d02a1341cc984\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_route_table.BomGen_Public_RT\",\n+            \"aws_subnet.BomGen_SubNet_Public\",\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        },\n+        {\n+          \"index_key\": 1,\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"gateway_id\": null,\n+            \"id\": \"rtbassoc-00f4c0738f81f8c65\",\n+            \"route_table_id\": \"rtb-0ace4f0228b919a1b\",\n+            \"subnet_id\": \"subnet-05520b2ed07c6cbc1\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_route_table.BomGen_Public_RT\",\n+            \"aws_subnet.BomGen_SubNet_Public\",\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_subnet\",\n-      \"name\": \"BomGen-SubNet-Private\",\n+      \"name\": \"BomGen_SubNet_Private\",\n       \"each\": \"list\",\n       \"provider\": \"provider.aws\",\n       \"instances\": [\n         {\n           \"index_key\": 0,\n           \"schema_version\": 1,\n           \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-0d6a03d5292c61e74\",\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-0788951b9f1e0ef04\",\n             \"assign_ipv6_address_on_creation\": false,\n             \"availability_zone\": \"us-east-2a\",\n             \"availability_zone_id\": \"use2-az1\",\n             \"cidr_block\": \"172.16.0.32/28\",\n-            \"id\": \"subnet-0d6a03d5292c61e74\",\n+            \"id\": \"subnet-0788951b9f1e0ef04\",\n             \"ipv6_cidr_block\": \"\",\n             \"ipv6_cidr_block_association_id\": \"\",\n             \"map_public_ip_on_launch\": false,\n             \"outpost_arn\": \"\",\n             \"owner_id\": \"360288436262\",\n             \"tags\": {\n-              \"Name\": \"BomGen-SubNet-1\",\n+              \"Name\": \"BomGen_SubNet_3\",\n               \"Project\": \"BoMGen\"\n             },\n             \"timeouts\": null,\n-            \"vpc_id\": \"vpc-087b9d2811570f7fc\"\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n           },\n           \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n           \"dependencies\": [\n-            \"aws_vpc.BomGen-VPC\"\n+            \"aws_vpc.BomGen_VPC\"\n           ]\n         },\n         {\n           \"index_key\": 1,\n           \"schema_version\": 1,\n           \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-076c2e4c8007d9240\",\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-02a6a4e257c27b194\",\n             \"assign_ipv6_address_on_creation\": false,\n             \"availability_zone\": \"us-east-2b\",\n             \"availability_zone_id\": \"use2-az2\",\n             \"cidr_block\": \"172.16.0.48/28\",\n-            \"id\": \"subnet-076c2e4c8007d9240\",\n+            \"id\": \"subnet-02a6a4e257c27b194\",\n             \"ipv6_cidr_block\": \"\",\n             \"ipv6_cidr_block_association_id\": \"\",\n             \"map_public_ip_on_launch\": false,\n             \"outpost_arn\": \"\",\n             \"owner_id\": \"360288436262\",\n             \"tags\": {\n-              \"Name\": \"BomGen-SubNet-2\",\n+              \"Name\": \"BomGen_SubNet_4\",\n               \"Project\": \"BoMGen\"\n             },\n             \"timeouts\": null,\n-            \"vpc_id\": \"vpc-087b9d2811570f7fc\"\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n           },\n           \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n           \"dependencies\": [\n-            \"aws_vpc.BomGen-VPC\"\n+            \"aws_vpc.BomGen_VPC\"\n           ]\n         }\n       ]\n     },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_subnet\",\n-      \"name\": \"BomGen-SubNet-Public\",\n+      \"name\": \"BomGen_SubNet_Public\",\n       \"each\": \"list\",\n       \"provider\": \"provider.aws\",\n       \"instances\": [\n         {\n           \"index_key\": 0,\n           \"schema_version\": 1,\n           \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-01bc56c9216152320\",\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-0d08d02a1341cc984\",\n             \"assign_ipv6_address_on_creation\": false,\n             \"availability_zone\": \"us-east-2a\",\n             \"availability_zone_id\": \"use2-az1\",\n             \"cidr_block\": \"172.16.0.0/28\",\n-            \"id\": \"subnet-01bc56c9216152320\",\n+            \"id\": \"subnet-0d08d02a1341cc984\",\n             \"ipv6_cidr_block\": \"\",\n             \"ipv6_cidr_block_association_id\": \"\",\n             \"map_public_ip_on_launch\": false,\n             \"outpost_arn\": \"\",\n             \"owner_id\": \"360288436262\",\n             \"tags\": {\n-              \"Name\": \"BomGen-SubNet-1\",\n+              \"Name\": \"BomGen_SubNet_1\",\n               \"Project\": \"BoMGen\"\n             },\n             \"timeouts\": null,\n-            \"vpc_id\": \"vpc-087b9d2811570f7fc\"\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n           },\n           \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n           \"dependencies\": [\n-            \"aws_vpc.BomGen-VPC\"\n+            \"aws_vpc.BomGen_VPC\"\n           ]\n         },\n         {\n           \"index_key\": 1,\n           \"schema_version\": 1,\n           \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-0f74a1199d36c6050\",\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-05520b2ed07c6cbc1\",\n             \"assign_ipv6_address_on_creation\": false,\n             \"availability_zone\": \"us-east-2b\",\n             \"availability_zone_id\": \"use2-az2\",\n             \"cidr_block\": \"172.16.0.16/28\",\n-            \"id\": \"subnet-0f74a1199d36c6050\",\n+            \"id\": \"subnet-05520b2ed07c6cbc1\",\n             \"ipv6_cidr_block\": \"\",\n             \"ipv6_cidr_block_association_id\": \"\",\n             \"map_public_ip_on_launch\": false,\n             \"outpost_arn\": \"\",\n             \"owner_id\": \"360288436262\",\n             \"tags\": {\n-              \"Name\": \"BomGen-SubNet-2\",\n+              \"Name\": \"BomGen_SubNet_2\",\n               \"Project\": \"BoMGen\"\n             },\n             \"timeouts\": null,\n-            \"vpc_id\": \"vpc-087b9d2811570f7fc\"\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n           },\n           \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n           \"dependencies\": [\n-            \"aws_vpc.BomGen-VPC\"\n+            \"aws_vpc.BomGen_VPC\"\n           ]\n         }\n       ]\n     },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_vpc\",\n-      \"name\": \"BomGen-VPC\",\n+      \"name\": \"BomGen_VPC\",\n       \"provider\": \"provider.aws\",\n       \"instances\": [\n         {\n           \"schema_version\": 1,\n           \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:vpc/vpc-087b9d2811570f7fc\",\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:vpc/vpc-06597c9c044db9237\",\n             \"assign_generated_ipv6_cidr_block\": false,\n             \"cidr_block\": \"172.16.0.0/26\",\n-            \"default_network_acl_id\": \"acl-0664aaa135ef32fbb\",\n-            \"default_route_table_id\": \"rtb-0df8219b0fdc42bed\",\n-            \"default_security_group_id\": \"sg-0b11cf5e58babff80\",\n+            \"default_network_acl_id\": \"acl-0e18b65c2c00789f8\",\n+            \"default_route_table_id\": \"rtb-0d8f4e1663d9f1485\",\n+            \"default_security_group_id\": \"sg-0bd27102acc7e6750\",\n             \"dhcp_options_id\": \"dopt-daf848b1\",\n             \"enable_classiclink\": null,\n             \"enable_classiclink_dns_support\": null,\n             \"enable_dns_hostnames\": false,\n             \"enable_dns_support\": true,\n-            \"id\": \"vpc-087b9d2811570f7fc\",\n+            \"id\": \"vpc-06597c9c044db9237\",\n             \"instance_tenancy\": \"default\",\n             \"ipv6_association_id\": \"\",\n             \"ipv6_cidr_block\": \"\",\n-            \"main_route_table_id\": \"rtb-0df8219b0fdc42bed\",\n+            \"main_route_table_id\": \"rtb-0d8f4e1663d9f1485\",\n             \"owner_id\": \"360288436262\",\n             \"tags\": {\n-              \"Name\": \"BomGen-VPC\",\n+              \"Name\": \"BomGen_VPC\",\n               \"Project\": \"BoMGen\"\n             }\n           },"
      },
      {
        "filename": "terraform.tfstate.backup",
        "additions": 303,
        "deletions": 15,
        "changes": 318,
        "status": "modified",
        "patch": "@@ -1,72 +1,360 @@\n {\n   \"version\": 4,\n   \"terraform_version\": \"0.12.26\",\n-  \"serial\": 3,\n+  \"serial\": 22,\n   \"lineage\": \"d786a7cd-a004-3d46-9167-af20df8ac8e8\",\n   \"outputs\": {},\n   \"resources\": [\n+    {\n+      \"mode\": \"data\",\n+      \"type\": \"aws_availability_zones\",\n+      \"name\": \"azs\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"all_availability_zones\": null,\n+            \"blacklisted_names\": null,\n+            \"blacklisted_zone_ids\": null,\n+            \"filter\": null,\n+            \"group_names\": [\n+              \"us-east-2\"\n+            ],\n+            \"id\": \"2020-06-02 22:22:33.7902771 +0000 UTC\",\n+            \"names\": [\n+              \"us-east-2a\",\n+              \"us-east-2b\",\n+              \"us-east-2c\"\n+            ],\n+            \"state\": \"available\",\n+            \"zone_ids\": [\n+              \"use2-az1\",\n+              \"use2-az2\",\n+              \"use2-az3\"\n+            ]\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_internet_gateway\",\n+      \"name\": \"BoMGen_IGW\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"igw-0242ae4edd70c5449\",\n+            \"owner_id\": \"360288436262\",\n+            \"tags\": {\n+              \"Name\": \"BoMGen_IGW\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route\",\n+      \"name\": \"BoMGen_public_internet_gateway\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"destination_cidr_block\": \"0.0.0.0/0\",\n+            \"destination_ipv6_cidr_block\": null,\n+            \"destination_prefix_list_id\": \"\",\n+            \"egress_only_gateway_id\": \"\",\n+            \"gateway_id\": \"igw-0242ae4edd70c5449\",\n+            \"id\": \"r-rtb-0ace4f0228b919a1b1080289494\",\n+            \"instance_id\": \"\",\n+            \"instance_owner_id\": \"\",\n+            \"nat_gateway_id\": \"\",\n+            \"network_interface_id\": \"\",\n+            \"origin\": \"CreateRoute\",\n+            \"route_table_id\": \"rtb-0ace4f0228b919a1b\",\n+            \"state\": \"active\",\n+            \"timeouts\": null,\n+            \"transit_gateway_id\": \"\",\n+            \"vpc_peering_connection_id\": \"\"\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=\",\n+          \"dependencies\": [\n+            \"aws_internet_gateway.BoMGen_IGW\",\n+            \"aws_route_table.BomGen_Public_RT\",\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route_table\",\n+      \"name\": \"BomGen_Private_RT\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"rtb-0f7027ad5856e81a8\",\n+            \"owner_id\": \"360288436262\",\n+            \"propagating_vgws\": [],\n+            \"route\": [],\n+            \"tags\": {\n+              \"Name\": \"BomGen_Private_RT\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route_table\",\n+      \"name\": \"BomGen_Public_RT\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"id\": \"rtb-0ace4f0228b919a1b\",\n+            \"owner_id\": \"360288436262\",\n+            \"propagating_vgws\": [],\n+            \"route\": [\n+              {\n+                \"cidr_block\": \"0.0.0.0/0\",\n+                \"egress_only_gateway_id\": \"\",\n+                \"gateway_id\": \"igw-0242ae4edd70c5449\",\n+                \"instance_id\": \"\",\n+                \"ipv6_cidr_block\": \"\",\n+                \"nat_gateway_id\": \"\",\n+                \"network_interface_id\": \"\",\n+                \"transit_gateway_id\": \"\",\n+                \"vpc_peering_connection_id\": \"\"\n+              }\n+            ],\n+            \"tags\": {\n+              \"Name\": \"BomGen_Public_RT\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_route_table_association\",\n+      \"name\": \"BomGen_Public_RT\",\n+      \"each\": \"list\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"index_key\": 0,\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"gateway_id\": null,\n+            \"id\": \"rtbassoc-0e5ca7efdd3a7204c\",\n+            \"route_table_id\": \"rtb-0ace4f0228b919a1b\",\n+            \"subnet_id\": \"subnet-0d08d02a1341cc984\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_route_table.BomGen_Public_RT\",\n+            \"aws_subnet.BomGen_SubNet_Public\",\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        },\n+        {\n+          \"index_key\": 1,\n+          \"schema_version\": 0,\n+          \"attributes\": {\n+            \"gateway_id\": null,\n+            \"id\": \"rtbassoc-00f4c0738f81f8c65\",\n+            \"route_table_id\": \"rtb-0ace4f0228b919a1b\",\n+            \"subnet_id\": \"subnet-05520b2ed07c6cbc1\"\n+          },\n+          \"private\": \"bnVsbA==\",\n+          \"dependencies\": [\n+            \"aws_route_table.BomGen_Public_RT\",\n+            \"aws_subnet.BomGen_SubNet_Public\",\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_subnet\",\n-      \"name\": \"BomGen-SubNetPub-A\",\n+      \"name\": \"BomGen_SubNet_Private\",\n+      \"each\": \"list\",\n       \"provider\": \"provider.aws\",\n       \"instances\": [\n         {\n+          \"index_key\": 0,\n           \"schema_version\": 1,\n           \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-0e650dba1fa6d859f\",\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-0788951b9f1e0ef04\",\n+            \"assign_ipv6_address_on_creation\": false,\n+            \"availability_zone\": \"us-east-2a\",\n+            \"availability_zone_id\": \"use2-az1\",\n+            \"cidr_block\": \"172.16.0.32/28\",\n+            \"id\": \"subnet-0788951b9f1e0ef04\",\n+            \"ipv6_cidr_block\": \"\",\n+            \"ipv6_cidr_block_association_id\": \"\",\n+            \"map_public_ip_on_launch\": false,\n+            \"outpost_arn\": \"\",\n+            \"owner_id\": \"360288436262\",\n+            \"tags\": {\n+              \"Name\": \"BomGen_SubNet_3\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"timeouts\": null,\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n+          \"dependencies\": [\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        },\n+        {\n+          \"index_key\": 1,\n+          \"schema_version\": 1,\n+          \"attributes\": {\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-02a6a4e257c27b194\",\n             \"assign_ipv6_address_on_creation\": false,\n             \"availability_zone\": \"us-east-2b\",\n             \"availability_zone_id\": \"use2-az2\",\n+            \"cidr_block\": \"172.16.0.48/28\",\n+            \"id\": \"subnet-02a6a4e257c27b194\",\n+            \"ipv6_cidr_block\": \"\",\n+            \"ipv6_cidr_block_association_id\": \"\",\n+            \"map_public_ip_on_launch\": false,\n+            \"outpost_arn\": \"\",\n+            \"owner_id\": \"360288436262\",\n+            \"tags\": {\n+              \"Name\": \"BomGen_SubNet_4\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"timeouts\": null,\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n+          \"dependencies\": [\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        }\n+      ]\n+    },\n+    {\n+      \"mode\": \"managed\",\n+      \"type\": \"aws_subnet\",\n+      \"name\": \"BomGen_SubNet_Public\",\n+      \"each\": \"list\",\n+      \"provider\": \"provider.aws\",\n+      \"instances\": [\n+        {\n+          \"index_key\": 0,\n+          \"schema_version\": 1,\n+          \"attributes\": {\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-0d08d02a1341cc984\",\n+            \"assign_ipv6_address_on_creation\": false,\n+            \"availability_zone\": \"us-east-2a\",\n+            \"availability_zone_id\": \"use2-az1\",\n             \"cidr_block\": \"172.16.0.0/28\",\n-            \"id\": \"subnet-0e650dba1fa6d859f\",\n+            \"id\": \"subnet-0d08d02a1341cc984\",\n+            \"ipv6_cidr_block\": \"\",\n+            \"ipv6_cidr_block_association_id\": \"\",\n+            \"map_public_ip_on_launch\": false,\n+            \"outpost_arn\": \"\",\n+            \"owner_id\": \"360288436262\",\n+            \"tags\": {\n+              \"Name\": \"BomGen_SubNet_1\",\n+              \"Project\": \"BoMGen\"\n+            },\n+            \"timeouts\": null,\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n+          },\n+          \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n+          \"dependencies\": [\n+            \"aws_vpc.BomGen_VPC\"\n+          ]\n+        },\n+        {\n+          \"index_key\": 1,\n+          \"schema_version\": 1,\n+          \"attributes\": {\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:subnet/subnet-05520b2ed07c6cbc1\",\n+            \"assign_ipv6_address_on_creation\": false,\n+            \"availability_zone\": \"us-east-2b\",\n+            \"availability_zone_id\": \"use2-az2\",\n+            \"cidr_block\": \"172.16.0.16/28\",\n+            \"id\": \"subnet-05520b2ed07c6cbc1\",\n             \"ipv6_cidr_block\": \"\",\n             \"ipv6_cidr_block_association_id\": \"\",\n             \"map_public_ip_on_launch\": false,\n             \"outpost_arn\": \"\",\n             \"owner_id\": \"360288436262\",\n             \"tags\": {\n-              \"Name\": \"BomGen-SubNetPub-A\",\n+              \"Name\": \"BomGen_SubNet_2\",\n               \"Project\": \"BoMGen\"\n             },\n             \"timeouts\": null,\n-            \"vpc_id\": \"vpc-00bcf13fdb282c67b\"\n+            \"vpc_id\": \"vpc-06597c9c044db9237\"\n           },\n           \"private\": \"eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9\",\n           \"dependencies\": [\n-            \"aws_vpc.BomGen-VPC\"\n+            \"aws_vpc.BomGen_VPC\"\n           ]\n         }\n       ]\n     },\n     {\n       \"mode\": \"managed\",\n       \"type\": \"aws_vpc\",\n-      \"name\": \"BomGen-VPC\",\n+      \"name\": \"BomGen_VPC\",\n       \"provider\": \"provider.aws\",\n       \"instances\": [\n         {\n           \"schema_version\": 1,\n           \"attributes\": {\n-            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:vpc/vpc-00bcf13fdb282c67b\",\n+            \"arn\": \"arn:aws:ec2:us-east-2:360288436262:vpc/vpc-06597c9c044db9237\",\n             \"assign_generated_ipv6_cidr_block\": false,\n             \"cidr_block\": \"172.16.0.0/26\",\n-            \"default_network_acl_id\": \"acl-0f320b48ec10d47de\",\n-            \"default_route_table_id\": \"rtb-0e00ed5b6c0b67687\",\n-            \"default_security_group_id\": \"sg-07da865561d08d226\",\n+            \"default_network_acl_id\": \"acl-0e18b65c2c00789f8\",\n+            \"default_route_table_id\": \"rtb-0d8f4e1663d9f1485\",\n+            \"default_security_group_id\": \"sg-0bd27102acc7e6750\",\n             \"dhcp_options_id\": \"dopt-daf848b1\",\n             \"enable_classiclink\": null,\n             \"enable_classiclink_dns_support\": null,\n             \"enable_dns_hostnames\": false,\n             \"enable_dns_support\": true,\n-            \"id\": \"vpc-00bcf13fdb282c67b\",\n+            \"id\": \"vpc-06597c9c044db9237\",\n             \"instance_tenancy\": \"default\",\n             \"ipv6_association_id\": \"\",\n             \"ipv6_cidr_block\": \"\",\n-            \"main_route_table_id\": \"rtb-0e00ed5b6c0b67687\",\n+            \"main_route_table_id\": \"rtb-0d8f4e1663d9f1485\",\n             \"owner_id\": \"360288436262\",\n             \"tags\": {\n-              \"Name\": \"BomGen-VPC\",\n+              \"Name\": \"BomGen_VPC\",\n               \"Project\": \"BoMGen\"\n             }\n           },"
      },
      {
        "filename": "vars.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -14,4 +14,9 @@ variable \"subnet_cidr_private\" {\n      default=[\"172.16.0.32/28\",\"172.16.0.48/28\"]\n }\n \n+variable \"eip\" { \n+     default=[\"172.16.0.37\",\"172.16.0.53\"]\n+}\n+\n+\n "
      }
    ],
    "existing_codes": [
      "domain",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/akerl/aws-account/commit/91967d4089ad9580ceae62f7845581935c892455",
    "files": [
      {
        "filename": "LICENSE",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+The MIT License (MIT)\n+\n+Copyright (c) 2016 Les Aker\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+"
      },
      {
        "filename": "README.md",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+aws-account\n+===========\n+\n+This is the terraform I use to configure my main AWS account\n+\n+## Manual Steps\n+\n+Some parts of the process are still manual, unfortunately\n+\n+### Billing alarm SNS subscription\n+\n+* Under SNS -> Topics -> billing-notif, subscribe my email address for email notifications (manual because terraform doesn't support SNS subscriptions that can't be autoconfirmed)\n+"
      },
      {
        "filename": "billing.tf",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+resource \"aws_cloudwatch_metric_alarm\" \"billing-alarm\" {\n+    alarm_name = \"billing-alarm\"\n+    comparison_operator = \"GreaterThanThreshold\"\n+    evaluation_periods = \"2\"\n+    metric_name = \"EstimatedCharges\"\n+    namespace = \"AWS/Billing\"\n+    period = \"3600\"\n+    statistic = \"SamplesMaximum\"\n+    threshold = \"10\"\n+    dimensions {\n+        Currency = \"USD\"\n+    }\n+    alarm_description = \"Check for billing spikes\"\n+    alarm_actions = [\"${aws_sns_topic.billing-notif.arn}\"]\n+}\n+\n+resource \"aws_sns_topic\" \"billing-notif\" {\n+  name = \"billing-notif\"\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/akerl/aws-account/commit/9fcff4b82a2ad4d0ed24656243da51f767f2968a",
    "files": [
      {
        "filename": "account/billing.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -4,7 +4,7 @@ resource \"aws_cloudwatch_metric_alarm\" \"billing-alarm\" {\n   evaluation_periods  = \"2\"\n   metric_name         = \"EstimatedCharges\"\n   namespace           = \"AWS/Billing\"\n-  period              = \"3600\"\n+  period              = \"21600\"\n   statistic           = \"Maximum\"\n   threshold           = \"20\"\n "
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/zbmowrey/cloud-admin/commit/738d187f603e5a52e6c6338abcd6096e22e819a0",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -2,6 +2,10 @@\n \n .idea/*\n \n+# TFVars\n+\n+terraform.auto.tfvars\n+\n # Local .terraform directories\n **/.terraform/*\n "
      },
      {
        "filename": ".terraform.lock.hcl",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/hashicorp/aws\" {\n+  version = \"3.51.0\"\n+  hashes = [\n+    \"h1:SG9CoqWGJgsJz27G88kBxMjQ/Pl8QGVpcXOU/tDEO84=\",\n+    \"zh:35a28a35a106c5a4b00294f747f85aaf8feab07ece64f393e109318ca375428a\",\n+    \"zh:9185a2e3a145abbb791b0cf98e8cdc6134d683e84f6eacae2157b8f0bdb3dbfa\",\n+    \"zh:92897adf8e510911d6e161b34de5e05375356918137a46718f80edf86744c9e1\",\n+    \"zh:9c2a84222a02ab661f9b7912243245c57a249d53387773b37f80a8e9e59f8866\",\n+    \"zh:a05fbdd49ad6112d5f7bc102b5a8486d9724ab6d831b52eca69400f161e6b745\",\n+    \"zh:ba5472f506bb6a3fb3214c7dfbaab01892f84c1f2c591619924e704a70c01a3e\",\n+    \"zh:bd12d009f21b52f4e24b1d395922273350b97868110fe2eaf6ab3bee21c424d6\",\n+    \"zh:be9c7b38c303d997c83649392db3588d637d80985b4c610f2bbc3f11b3a8bce8\",\n+    \"zh:d6f7fb8378d0cd9cbbdcfdb9f80e99e5fcede08af4afca3b97916747c130278b\",\n+    \"zh:e32963e4e3d22868ccf94f89e30649a24025b68c78b6c5e91e3aa3bb9b9c4aea\",\n+    \"zh:eba96e9ffa19941c139326d3c942449a5d0e937ccbfcbe10b55a3c20105d6320\",\n+  ]\n+}"
      },
      {
        "filename": "README.md",
        "additions": 27,
        "deletions": 2,
        "changes": 29,
        "status": "modified",
        "patch": "@@ -1,2 +1,27 @@\n-# aws\n-Manage Org, Accounts, and SCP using Terraform\n+# Purpose\n+\n+This is IAC for the AWS Organization and any sub-accounts that may be needed, including\n+SCP definition and attachment. \n+\n+- Root Account\n+    - Organization\n+    - Service Control Policies\n+    - Billing\n+        - Cost & Usage Report\n+    - Sub Accounts (per Environment)\n+        - Dev\n+        - Prod\n+        - Stage\n+    \n+This repo provides overall infrastructure for the org: accounts and policies which host\n+various application environments. \n+\n+Any given project repository should include IAC which generates/manages the project's\n+dependencies (VPCs, databases, domains, queues, etc).\n+\n+TODO - Evaluate networking patterns and consider centralizing access. Example:\n+\n+    - Create a VPC in the root account and attach a nat gateway.\n+    - Create a VPC in each sub-account and set up VPC peering/transit.\n+    - Configure all VPCs to sue the root account's nat gateway for outbound traffic. \n+    - This prevents the need for a separate nat gateway ($20+/month each) for each subnet.\n\\ No newline at end of file"
      },
      {
        "filename": "main.tf",
        "additions": 186,
        "deletions": 0,
        "changes": 186,
        "status": "added",
        "patch": "@@ -0,0 +1,186 @@\n+terraform {\r\n+  backend \"remote\" {\r\n+    organization = \"zbmowrey-aws\"\r\n+\r\n+    workspaces {\r\n+      prefix = \"aws-\"\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+provider \"aws\" {\r\n+  region = var.region\r\n+}\r\n+provider \"aws\" {\r\n+  alias = \"virginia\"\r\n+  region = \"us-east-1\"\r\n+}\r\n+\r\n+locals {\r\n+  app_accounts = toset([\r\n+    \"Development\",\r\n+    \"Production\",\r\n+    \"Staging\"\r\n+  ])\r\n+}\r\n+\r\n+## Organizations ###############################################\r\n+\r\n+resource \"aws_organizations_organization\" \"root\" {\r\n+  aws_service_access_principals = [\r\n+    \"config.amazonaws.com\",\r\n+    \"controltower.amazonaws.com\",\r\n+    \"member.org.stacksets.cloudformation.amazonaws.com\",\r\n+    \"sso.amazonaws.com\"\r\n+  ]\r\n+  enabled_policy_types = [\r\n+    \"SERVICE_CONTROL_POLICY\"\r\n+  ]\r\n+}\r\n+\r\n+## Organizational Units ########################################\r\n+\r\n+resource \"aws_organizations_organizational_unit\" \"AppAccounts\" {\r\n+  name      = \"AppAccounts\"\r\n+  parent_id = aws_organizations_organization.root.id\r\n+  tags = {\r\n+    CostCenter = \"Applications\"\r\n+    Environment = \"all\"\r\n+  }\r\n+}\r\n+\r\n+resource \"aws_organizations_organizational_unit\" \"RecycleBin\" {\r\n+  name      = \"RecycleBin\"\r\n+  parent_id = aws_organizations_organization.root.id\r\n+  tags = {\r\n+    CostCenter = \"Internal - Management\"\r\n+    Environment = \"Recycle\"\r\n+  }\r\n+}\r\n+\r\n+## Service Control Policies (SCP) ##############################\r\n+\r\n+resource \"aws_organizations_policy\" \"no_access\" {\r\n+  name = \"no_access\"\r\n+  description = \"For accounts that can't be closed, this prevents them from being used for any purpose.\"\r\n+  tags = {\r\n+    CostCenter = \"Internal - Management\"\r\n+    Environment = \"Production\"\r\n+  }\r\n+  content = <<CONTENT\r\n+{\r\n+  \"Version\": \"2012-10-17\",\r\n+  \"Statement\": [{\r\n+    \"Action\": [\r\n+        \"*\"\r\n+    ],\r\n+    \"Effect\": \"Deny\",\r\n+    \"Resource\": \"*\",\r\n+    \"Sid\": \"VisualEditor0\"\r\n+  }]\r\n+}\r\n+CONTENT\r\n+}\r\n+\r\n+resource \"aws_organizations_policy\" \"full_access\" {\r\n+  name = \"full_access\"\r\n+  tags = {\r\n+    CostCenter = \"Internal - Management\"\r\n+    Environment = \"Production\"\r\n+  }\r\n+  content = <<CONTENT\r\n+{\r\n+  \"Version\": \"2012-10-17\",\r\n+  \"Statement\": {\r\n+    \"Effect\": \"Allow\",\r\n+    \"Action\": \"*\",\r\n+    \"Resource\": \"*\"\r\n+  }\r\n+}\r\n+CONTENT\r\n+}\r\n+\r\n+## Service Control Policy Attachments ##########################\r\n+\r\n+resource \"aws_organizations_policy_attachment\" \"root_full_access\" {\r\n+  policy_id = aws_organizations_policy.full_access.id\r\n+  target_id = aws_organizations_organization.root.id\r\n+}\r\n+\r\n+resource \"aws_organizations_policy_attachment\" \"no_access\" {\r\n+  policy_id = aws_organizations_policy.no_access.id\r\n+  target_id = aws_organizations_organizational_unit.RecycleBin.id\r\n+}\r\n+\r\n+## Root Account ################################################\r\n+\r\n+resource \"aws_organizations_account\" \"root\" {\r\n+  email = var.root_account_email\r\n+  name  = var.root_account_name\r\n+  tags  = {\r\n+    CostCenter = \"Internal - Management\"\r\n+    Environment = \"Production\"\r\n+  }\r\n+}\r\n+\r\n+## App Accounts ################################################\r\n+\r\n+resource \"aws_organizations_account\" \"app_accounts\" {\r\n+  for_each = local.app_accounts\r\n+  email    = join(\"\",[join(\"-\",[\"aws\",lower(each.value)]),var.account_email_domain])\r\n+  name     = each.value\r\n+  parent_id = aws_organizations_organizational_unit.AppAccounts.id\r\n+  tags = {\r\n+    CostCenter = join(\" - \",[\"Applications\",each.value])\r\n+    Environment = each.value\r\n+  }\r\n+}\r\n+\r\n+## Cost & Usage Report #########################################\r\n+\r\n+resource \"aws_s3_bucket\" \"cur-report\" {\r\n+  provider = aws.virginia\r\n+  bucket   = \"zbm-cost-usage-reports\"\r\n+  policy   = <<POLICY\r\n+{\r\n+  \"Version\": \"2012-10-17\",\r\n+  \"Statement\": [\r\n+    {\r\n+      \"Effect\": \"Allow\",\r\n+      \"Principal\": {\r\n+        \"Service\": \"billingreports.amazonaws.com\"\r\n+      },\r\n+      \"Action\": [\r\n+        \"s3:GetBucketAcl\",\r\n+        \"s3:GetBucketPolicy\"\r\n+      ],\r\n+      \"Resource\": \"arn:aws:s3:::zbm-cost-usage-reports\"\r\n+    },\r\n+    {\r\n+      \"Effect\": \"Allow\",\r\n+      \"Principal\": {\r\n+        \"Service\": \"billingreports.amazonaws.com\"\r\n+      },\r\n+      \"Action\": \"s3:PutObject\",\r\n+      \"Resource\": \"arn:aws:s3:::zbm-cost-usage-reports/*\"\r\n+    }\r\n+  ]\r\n+}\r\n+POLICY\r\n+}\r\n+\r\n+resource \"aws_cur_report_definition\" \"report\" {\r\n+  provider                   = aws.virginia\r\n+\r\n+  report_name                = \"aws-hourly-cost-usage-report\"\r\n+  s3_bucket                  = aws_s3_bucket.cur-report.bucket\r\n+  s3_region                  = \"us-east-1\"\r\n+\r\n+  time_unit                  = \"HOURLY\"\r\n+  report_versioning          = \"OVERWRITE_REPORT\"\r\n+  format                     = \"textORcsv\"\r\n+  compression                = \"GZIP\"\r\n+\r\n+  additional_schema_elements = []\r\n+  additional_artifacts       = []\r\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "variables.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+variable \"region\" {}\r\n+variable \"root_account_email\" {}\r\n+variable \"root_account_name\" {}\r\n+variable \"account_email_domain\" {}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "awareness",
      "policy"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/poseidon/typhoon/commit/85252dec6ed7f0b24517089150ec89bf32b45fb2",
    "files": [
      {
        "filename": "aws/fedora-coreos/kubernetes/ami.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,3 @@\n-\n data \"aws_ami\" \"fedora-coreos\" {\n   most_recent = true\n   owners      = [\"125523088429\"]\n@@ -18,6 +17,7 @@ data \"aws_ami\" \"fedora-coreos\" {\n     values = [\"Fedora CoreOS ${var.os_stream} *\"]\n   }\n }\n+\n data \"aws_ami\" \"fedora-coreos-arm\" {\n   count = var.arch == \"arm64\" ? 1 : 0\n "
      },
      {
        "filename": "aws/fedora-coreos/kubernetes/workers/ami.tf",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "status": "modified",
        "patch": "@@ -1,4 +1,3 @@\n-\n data \"aws_ami\" \"fedora-coreos\" {\n   most_recent = true\n   owners      = [\"125523088429\"]\n@@ -19,14 +18,11 @@ data \"aws_ami\" \"fedora-coreos\" {\n   }\n }\n \n-# Experimental Fedora CoreOS arm64 / aarch64 AMIs from Poseidon\n-# WARNING: These AMIs will be removed when Fedora CoreOS publishes arm64 AMIs\n-# and may be removed for any reason before then as well. Do not use.\n data \"aws_ami\" \"fedora-coreos-arm\" {\n   count = var.arch == \"arm64\" ? 1 : 0\n \n   most_recent = true\n-  owners      = [\"099663496933\"]\n+  owners      = [\"125523088429\"]\n \n   filter {\n     name   = \"architecture\"\n@@ -39,8 +35,7 @@ data \"aws_ami\" \"fedora-coreos-arm\" {\n   }\n \n   filter {\n-    name   = \"name\"\n-    values = [\"fedora-coreos-*\"]\n+    name   = \"description\"\n+    values = [\"Fedora CoreOS ${var.os_stream} *\"]\n   }\n }\n-"
      }
    ],
    "existing_codes": [
      "saving",
      "feature",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/rremer/terraform-minecraft/commit/bac050d515cd6991e17cd1a34197d84982f5931d",
    "files": [
      {
        "filename": ".gitignore",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -1,3 +1,2 @@\n .terraform/**\n-terraform.tfstat*\n-variables.tf\n+terraform.tfstate.backup"
      },
      {
        "filename": "ami.tf",
        "additions": 0,
        "deletions": 36,
        "changes": 36,
        "status": "removed",
        "patch": "@@ -1,36 +0,0 @@\n-/*\n-  lookup an ubuntu lts ami id\n-*/\n-data \"aws_ami\" \"ubuntu_lts\" {\n-  most_recent = true\n-\n-  # 099720109477 is Canonical's account ID\n-  owners = [\"099720109477\"]\n-\n-  # exclude /images-testing, for stable daily snapshots only\n-  filter {\n-    name   = \"manifest-location\"\n-    values = [\"*/ubuntu/images/*\"]\n-  }\n-\n-  filter {\n-    name   = \"name\"\n-    values = [\"*xenial*\"]\n-  }\n-\n-  filter {\n-    name   = \"architecture\"\n-    values = [\"x86_64\"]\n-  }\n-\n-  filter {\n-    name   = \"root-device-type\"\n-    values = [\"ebs\"]\n-  }\n-\n-  filter {\n-    name   = \"is-public\"\n-    values = [\"true\"]\n-  }\n-\n-}"
      },
      {
        "filename": "aptdaemon/main.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+resource \"null_resource\" \"provisioner\" {\n+  triggers {\n+    user                     = \"${var.connection_user}\"\n+    host                     = \"${var.connection_host}\"\n+    private_key              = \"${sha1(\"${var.connection_private_key}\")}\"\n+    port                     = \"${var.connection_port}\"\n+  }\n+\n+  connection {\n+    user        = \"${var.connection_user}\"\n+    host        = \"${var.connection_host}\"\n+    private_key = \"${var.connection_private_key}\"\n+    port        = \"${var.connection_port}\"\n+  }\n+\n+  provisioner \"remote-exec\" {\n+    inline = [\n+      \"sudo apt-get update -qq}\",\n+      \"sudo apt-get install -y aptdaemon\",\n+    ]\n+  }\n+}"
      },
      {
        "filename": "aptdaemon/variables.tf",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+variable \"connection_user\" {\n+  type        = \"string\"\n+  description = \"SSH username.\"\n+}\n+\n+variable \"connection_host\" {\n+  type        = \"string\"\n+  description = \"SSH remote host (IP or name).\"\n+}\n+\n+variable \"connection_private_key\" {\n+  type        = \"string\"\n+  description = \"SSH RSA private key material. Not a path to a file.\"\n+}\n+\n+variable \"connection_port\" {\n+  type        = \"string\"\n+  default     = \"22\"\n+  description = \"SSH remote port.\"\n+}"
      },
      {
        "filename": "backup/s3/configure-backup.sh",
        "additions": 0,
        "deletions": 78,
        "changes": 78,
        "status": "removed",
        "patch": "@@ -1,78 +0,0 @@\n-#!/bin/bash\n-#\n-# Configure an s3-backup service\n-#\n-\n-set -e\n-set -u\n-set -o pipefail\n-\n-test -n \"${backup_user}\"\n-test -n \"${s3_bucket}\"\n-test -n \"${s3_access_key_id}\"\n-test -n \"${s3_access_secret}\"\n-test ${interval_minutes} -ge 1\n-test ${keep_days} -gt -2\n-test -f \"${backup_script_path}\"\n-\n-adduser --system --no-create-home --home \"${backup_user}\" || true\n-addgroup --system \"${backup_user}\" || true\n-\n-# deps\n-yes | aptdcon --hide-terminal --install s3cmd || true\n-yes | aptdcon --hide-terminal --install trickle || true\n-\n-# configure s3cmd\n-mkdir -p \"$(dirname ${s3_config_path})\"\n-cat << S3CMD-CFG > \"${s3_config_path}\"\n-[default]\n-access_key = ${s3_access_key_id}\n-bucket_location = US\n-cloudfront_host = cloudfront.amazonaws.com\n-default_mime_type = binary/octet-stream\n-delete_removed = False\n-dry_run = False\n-enable_multipart = True\n-encoding = UTF-8\n-encrypt = False\n-follow_symlinks = False\n-force = False\n-get_continue = False\n-gpg_command = /usr/bin/gpg\n-gpg_decrypt = %(gpg_command)s -d --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s\n-gpg_encrypt = %(gpg_command)s -c --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s\n-gpg_passphrase = \n-guess_mime_type = True\n-host_base = s3.amazonaws.com\n-host_bucket = %(bucket)s.s3.amazonaws.com\n-human_readable_sizes = False\n-invalidate_on_cf = False\n-list_md5 = False\n-log_target_prefix = \n-mime_type = \n-multipart_chunk_size_mb = 15\n-preserve_attrs = True\n-progress_meter = True\n-proxy_host = \n-proxy_port = 0\n-recursive = False\n-recv_chunk = 4096\n-reduced_redundancy = False\n-secret_key = ${s3_access_secret}\n-send_chunk = 4096\n-simpledb_host = sdb.amazonaws.com\n-skip_existing = False\n-socket_timeout = 300\n-urlencoding_mode = normal\n-use_https = False\n-verbosity = WARNING\n-website_endpoint = http://%(bucket)s.s3-website-%(location)s.amazonaws.com/\n-website_error = \n-website_index = index.html\n-S3CMD-CFG\n-chown ${backup_user}:${backup_user} \"${s3_config_path}\"\n-chmod 0600 \"${s3_config_path}\"\n-\n-cat << S3CMD-CRON > /etc/cron.d/s3-backup\n-*/${interval_minutes} * * * * ${backup_user} $(which bash) ${backup_script_path} ${backup_directory} ${s3_bucket} ${s3_config_path} ${keep_days} ${backup_rate_limit_kbs}\n-S3CMD-CRON"
      },
      {
        "filename": "backup/s3/iam-policy.json.tpl",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "status": "removed",
        "patch": "@@ -1,41 +0,0 @@\n-{\n-    \"Version\": \"2012-10-17\",\n-    \"Statement\": [\n-        {\n-            \"Sid\": \"Stmt1450668161000\",\n-            \"Effect\": \"Allow\",\n-            \"Action\": [\n-                \"s3:DeleteObject\",\n-                \"s3:DeleteObjectVersion\",\n-                \"s3:GetObject\",\n-                \"s3:GetObjectAcl\",\n-                \"s3:GetObjectTorrent\",\n-                \"s3:GetObjectVersion\",\n-                \"s3:GetObjectVersionAcl\",\n-                \"s3:GetObjectVersionTorrent\",\n-                \"s3:ListAllMyBuckets\",\n-                \"s3:ListBucket\",\n-                \"s3:ListBucketMultipartUploads\",\n-                \"s3:ListBucketVersions\",\n-                \"s3:ListMultipartUploadParts\",\n-                \"s3:PutBucketAcl\",\n-                \"s3:PutObject\",\n-                \"s3:PutObjectAcl\",\n-                \"s3:PutObjectVersionAcl\"\n-            ],\n-            \"Resource\": [\n-                \"${bucket_arn}/*\"\n-            ]\n-        },\n-        {\n-            \"Sid\": \"Stmt1450668161001\",\n-            \"Effect\": \"Allow\",\n-            \"Action\": [\n-                \"s3:ListAllMyBuckets\"\n-            ],\n-            \"Resource\": [\n-                \"arn:aws:s3:::*\"\n-            ]\n-        }\n-    ]\n-}"
      },
      {
        "filename": "backup/s3/main.tf",
        "additions": 0,
        "deletions": 102,
        "changes": 102,
        "status": "removed",
        "patch": "@@ -1,102 +0,0 @@\n-resource \"null_resource\" \"provisioner\" {\n-  triggers {\n-    var_user                   = \"${var.connection_user}\"\n-    var_host                   = \"${var.connection_host}\"\n-    var_private_key            = \"${sha1(\"${var.connection_private_key}\")}\"\n-    var_port                   = \"${var.connection_port}\"\n-    var_module_name            = \"${var.module_name}\"\n-    var_module_install_basedir = \"${var.module_install_basedir}\"\n-    var_remote_resource_dir    = \"${var.remote_resource_dir}\"\n-    var_backup_user            = \"${var.backup_user}\"\n-    var_interval_minutes       = \"${var.interval_minutes}\"\n-    var_keep_days              = \"${var.keep_days}\"\n-    var_s3_config_path         = \"${var.s3_config_path}\"\n-    var_backup_directory       = \"${var.backup_directory}\"\n-    var_backup_rate_limit_kbs  = \"${var.backup_rate_limit_kbs}\"\n-    var_dpkg_timeout_s         = \"${var.dpkg_timeout_s}\"\n-\n-    file_provision_sh          = \"${sha1(\"${file(\"${path.module}/provision.sh\")}\")}\"\n-    file_configure_backup_sh   = \"${sha1(\"${file(\"${path.module}/configure-backup.sh\")}\")}\"\n-    file_s3_backup_sh          = \"${sha1(\"${file(\"${path.module}/s3-backup.sh\")}\")}\"\n-  }\n-\n-  connection {\n-    user        = \"${var.connection_user}\"\n-    host        = \"${var.connection_host}\"\n-    private_key = \"${var.connection_private_key}\"\n-    port        = \"${var.connection_port}\"\n-  }\n-\n-  provisioner \"remote-exec\" {\n-    inline = [\n-      \"sudo mkdir -p ${var.remote_resource_dir}/${var.module_name}\",\n-      \"sudo chown -R ${var.connection_user} ${var.remote_resource_dir}/${var.module_name}\",\n-    ]\n-  }\n-\n-  provisioner \"file\" {\n-    content = \"\n-# generated on deployment from ${path.module}\n-module_name='${var.module_name}'\n-module_install_basedir='${var.module_install_basedir}'\n-module_install_log='${var.module_install_log}'\n-interval_minutes='${var.interval_minutes}'\n-keep_days='${var.keep_days}'\n-backup_directory='${var.backup_directory}'\n-backup_script_path='${var.remote_resource_dir}/${var.module_name}/s3-backup.sh'\n-backup_rate_limit_kbs='${var.backup_rate_limit_kbs}'\n-dpkg_timeout_s='${var.dpkg_timeout_s}'\n-backup_user='${var.backup_user}'\n-s3_config_path='${var.s3_config_path}'\n-s3_username='${aws_iam_access_key.backup.user}'\n-s3_bucket='${var.backup_endpoint}'\n-s3_access_key_id='${aws_iam_access_key.backup.id}'\n-s3_access_secret='${aws_iam_access_key.backup.secret}'\n-\"\n-\n-    destination = \"${var.remote_resource_dir}/${var.module_name}/${var.module_properties}\"\n-  }\n-\n-  provisioner \"file\" {\n-    source      = \"${path.module}/\"\n-    destination = \"${var.remote_resource_dir}/${var.module_name}/\"\n-  }\n-\n-  provisioner \"remote-exec\" {\n-    inline = [\n-      \"sudo bash ${var.remote_resource_dir}/${var.module_name}/provision.sh ${var.module_properties}\",\n-    ]\n-  }\n-}\n-\n-resource \"aws_s3_bucket\" \"backup\" {\n-  bucket = \"${var.backup_endpoint}\"\n-  acl    = \"${var.bucket_acl}\"\n-\n-  website {\n-    index_document = \"index.html\"\n-    error_document = \"error.html\"\n-  }\n-}\n-\n-resource \"aws_iam_user\" \"backup\" {\n-  name = \"${var.backup_endpoint}\"\n-}\n-\n-data \"template_file\" \"iam-policy\" {\n-  template = \"${file(\"${path.module}/iam-policy.json.tpl\")}\"\n-\n-  vars {\n-    bucket_arn = \"${aws_s3_bucket.backup.arn}\"\n-  }\n-}\n-\n-resource \"aws_iam_user_policy\" \"backup\" {\n-  name   = \"${var.module_name}\"\n-  user   = \"${aws_iam_user.backup.name}\"\n-  policy = \"${data.template_file.iam-policy.rendered}\"\n-}\n-\n-resource \"aws_iam_access_key\" \"backup\" {\n-  user = \"${aws_iam_user.backup.name}\"\n-}"
      },
      {
        "filename": "backup/s3/outputs.tf",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "status": "removed",
        "patch": "@@ -1,31 +0,0 @@\n-output \"backup_endpoint\" {\n-  value = \"${aws_s3_bucket.backup.id}\"\n-}\n-\n-output \"backup_endpoint_id\" {\n-  value = \"${aws_s3_bucket.backup.arn}\"\n-}\n-\n-output \"backup_availability_zone\" {\n-  value = \"${aws_s3_bucket.backup.hosted_zone_id}\"\n-}\n-\n-output \"backup_region\" {\n-  value = \"${aws_s3_bucket.backup.region}\"\n-}\n-\n-output \"backup_url\" {\n-  value = \"${aws_s3_bucket.backup.website_endpoint}\"\n-}\n-\n-output \"backup_user_name\" {\n-  value = \"${aws_iam_access_key.backup.name}\"\n-}\n-\n-output \"backup_user_id\" {\n-  value = \"${aws_iam_user.backup.arn}\"\n-}\n-\n-output \"backup_access_policy\" {\n-  value = \"${data.template_file.iam-policy.rendered}\"\n-}"
      },
      {
        "filename": "backup/s3/provision.sh",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "status": "removed",
        "patch": "@@ -1,34 +0,0 @@\n-#!/bin/bash\n-#\n-# provisioning script for a generic s3 backup service\n-#\n-\n-set -e\n-set -u\n-set -a\n-set -o pipefail\n-\n-# accept all script-relative paths and exit out to executor path when done\n-lwd=\"$(pwd)\"\n-trap on_exit EXIT\n-on_exit(){\n-  cd \"${lwd}\"\n-}\n-cd \"$(dirname ${0})\"\n-\n-# assert application properties exist and source them\n-test -f \"${1}\"\n-source \"${1}\"\n-\n-scripts=(configure-backup.sh)\n-\n-# iterate through all the scripts\n-for script in ${scripts[@]}; do\n-  # assert the listed script exists and is syntactically valid\n-  test -f \"${script}\"\n-  bash -n \"${script}\"\n-\n-  # run the script and overwrite an installation log\n-  bash -x \"${script}\" &>> \"${module_install_log}\"\n-  echo \"${script}: SUCCESS @$(date +%s)\" >> \"${module_install_log}\"\n-done"
      },
      {
        "filename": "backup/s3/s3-backup.sh",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "status": "removed",
        "patch": "@@ -1,51 +0,0 @@\n-#!/bin/bash\n-#\n-# Backup a directory to s3\n-#\n-\n-\n-set -u\n-\n-DIRECTORY=\"${1}\"\n-S3_BUCKET=\"s3://${2}/\"\n-CFG_PATH=\"${3}\"\n-KEEP_DAYS=\"${4}\"\n-LIMIT_KBS=\"${5}\"\n-BACKUP_TMP_DIR=${6:-'/tmp'}\n-\n-keep_seconds=$(expr ${KEEP_DAYS} \\* 86400)\n-\n-date_now=$(date +%s)\n-backup_ext='.tgz'\n-backup=\"${BACKUP_TMP_DIR}/${date_now}${backup_ext}\"\n-del_seconds=$(expr ${date_now} - ${keep_seconds})\n-\n-# reusable s3cmd invocation\n-s3cmd_cmd=\"$(which s3cmd) --config=${CFG_PATH} --no-progress\"\n-\n-trap cleanup EXIT\n-cleanup(){\n-     rm -f \"${backup}\"\n-}\n-\n-test -d \"${DIRECTORY}\"\n-mkdir -p \"${BACKUP_TMP_DIR}\"\n-tar -czf \"${backup}\" \"${DIRECTORY}\"\n-trickle -s -u ${LIMIT_KBS} ${s3cmd_cmd} put ${backup} ${S3_BUCKET}\n-\n-# if we keep backups forever, exit here\n-if [ ${keep_seconds} -lt 0 ]; then exit 0; fi\n-\n-# list all existing backups and get seconds since the epoch mappings\n-declare -A s3_backups\n-for tgz in $(${s3cmd_cmd} ls ${S3_BUCKET} | rev | cut -d ' ' -f 1 | rev); do\n-     tgz_date=\"$(echo ${tgz} | sed \"s/${backup_ext}//g\")\"\n-     s3_backups[${tgz_date}]=${tgz}\n-done\n-\n-# iterate through the dated backups and delete old ones\n-for epoch_s in ${!s3_backups[@]}; do\n-     if [ ${epoch_s} -lt ${keep_seconds} ]; then\n-          ${s3cmd_cmd} del \"${S3_BUCKET}${s3_backups[${epoch_s}]}\"\n-     fi\n-done"
      },
      {
        "filename": "backup/s3/variables.tf",
        "additions": 0,
        "deletions": 103,
        "changes": 103,
        "status": "removed",
        "patch": "@@ -1,103 +0,0 @@\n-variable \"module_name\" {\n-  type        = \"string\"\n-  default     = \"backup\"\n-  description = \"The name of this module.\"\n-}\n-\n-variable \"module_properties\" {\n-  type        = \"string\"\n-  default     = \"module.properties\"\n-  description = \"Path to configuration properties for this module.\"\n-}\n-\n-variable \"module_install_log\" {\n-  type        = \"string\"\n-  default     = \"install.log\"\n-  description = \"Filename of the installation log for this service's configuration.\"\n-}\n-\n-variable \"remote_resource_dir\" {\n-  type        = \"string\"\n-  default     = \"/usr/share/terraform\"\n-  description = \"Base path to configuration scripts.\"\n-}\n-\n-variable \"connection_user\" {\n-  type        = \"string\"\n-  description = \"SSH username.\"\n-}\n-\n-variable \"connection_host\" {\n-  type        = \"string\"\n-  description = \"SSH remote host (IP or name).\"\n-}\n-\n-variable \"connection_private_key\" {\n-  sensitive   = true\n-  type        = \"string\"\n-  description = \"SSH RSA private key material. Not a path to a file.\"\n-}\n-\n-variable \"connection_port\" {\n-  type        = \"string\"\n-  default     = \"22\"\n-  description = \"SSH remote port.\"\n-}\n-\n-variable \"backup_directory\" {\n-  type        = \"string\"\n-  description = \"Full path to backup.\"\n-}\n-\n-variable \"backup_user\" {\n-  type        = \"string\"\n-  default     = \"root\"\n-  description = \"User to execute backup as.\"\n-}\n-\n-variable \"backup_rate_limit_kbs\" {\n-  type        = \"string\"\n-  default     = \"1000\"\n-  description = \"KB/s to rate-limit backup uploads to.\"\n-}\n-\n-variable \"s3_config_path\" {\n-  type        = \"string\"\n-  default     = \"/etc/backup.s3cfg\"\n-  description = \"Full path to an s3cfg file.\"\n-}\n-\n-variable \"interval_minutes\" {\n-  type        = \"string\"\n-  default     = \"15\"\n-  description = \"Interval between backups.\"\n-}\n-\n-variable \"dpkg_timeout_s\" {\n-  type        = \"string\"\n-  default     = \"120\"\n-  description = \"Time to wait until dpkg lock is lifted.\"\n-}\n-\n-variable \"keep_days\" {\n-  type        = \"string\"\n-  default     = \"7\"\n-  description = \"Expiry for backups in days, -1 to keep forever.\"\n-}\n-\n-variable \"module_install_basedir\" {\n-  type        = \"string\"\n-  default     = \"/var/lib\"\n-  description = \"Base path to install this backup service.\"\n-}\n-\n-variable \"backup_endpoint\" {\n-  type        = \"string\"\n-  description = \"The name of the bucket to backup to.\"\n-}\n-\n-variable \"bucket_acl\" {\n-  type        = \"string\"\n-  default     = \"public-read\"\n-  description = \"Default access control list configuration for the s3 bucket.\"\n-}"
      },
      {
        "filename": "compute-variables.tf",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "status": "added",
        "patch": "@@ -0,0 +1,29 @@\n+variable \"compute_instance_size\" {\n+  type        = \"string\"\n+  default     = \"n1-standard-4\"\n+  description = \"The compute server size/flavor.\"\n+}\n+\n+variable \"compute_image_name\" {\n+  type        = \"string\"\n+  default     = \"ubuntu\"\n+  description = \"The friendly name for the boot image.\"\n+}\n+\n+variable \"compute_image_family\" {\n+  type        = \"string\"\n+  default     = \"ubuntu-1604-lts\"\n+  description = \"The search token for a bootable image.\"\n+}\n+\n+variable \"compute_image_project\" {\n+  type        = \"string\"\n+  default     = \"ubuntu-os-cloud\"\n+  description = \"The project owning the compute image.\"\n+}\n+\n+variable \"compute_region\" {\n+  type        = \"string\"\n+  default     = \"us-west1\"\n+  description = \"The deployment availability zone.\"\n+}"
      },
      {
        "filename": "compute.tf",
        "additions": 41,
        "deletions": 65,
        "changes": 106,
        "status": "modified",
        "patch": "@@ -1,80 +1,56 @@\n-resource \"aws_instance\" \"vpc_ec2\" {\n-  ami                         = \"${data.aws_ami.ubuntu_lts.image_id}\"\n-  key_name                    = \"${aws_key_pair.terraform.key_name}\"\n-  subnet_id                   = \"${module.vpc.public_subnets[0]}\"\n-  instance_type               = \"${var.aws_ec2_instance_type}\"\n-  associate_public_ip_address = \"true\"\n-  vpc_security_group_ids      = [\"${aws_security_group.ssh.id}\", \"${aws_security_group.internet.id}\", \"${aws_security_group.application.id}\"]\n+data \"google_compute_image\" \"base\" {\n+  family  = \"${var.compute_image_family}\"\n+  project = \"${var.compute_image_project}\"\n+}\n+\n+data \"google_compute_zones\" \"available\" {\n+  region = \"${var.compute_region}\"\n+}\n \n-  root_block_device {\n-    volume_type           = \"standard\"\n-    volume_size           = 60\n-    delete_on_termination = true\n+resource \"google_compute_instance\" \"minecraft\" {\n+  depends_on   = [\"null_resource.ssh_public_key\"]\n+  name         = \"${var.global_app_name}\"\n+  machine_type = \"${var.compute_instance_size}\"\n+  zone         = \"${data.google_compute_zones.available.names.0}\"\n+  tags         = [\"${var.global_app_name}\"]\n+\n+  boot_disk {\n+    initialize_params {\n+      image = \"${data.google_compute_image.base.self_link}\"\n+    }\n   }\n \n-  tags {\n-    Name = \"${var.application_name}\"\n+  attached_disk {\n+    source = \"${google_compute_disk.persistent.self_link}\"\n   }\n \n-  connection {\n-    user        = \"${var.connection_user}\"\n-    private_key = \"${var.ssh_private_key}\"\n+  network_interface {\n+    network = \"default\"\n+\n+    access_config {\n+      # Ephemeral\n+    }\n   }\n \n-  provisioner \"remote-exec\" {\n-    /*\n-      - some amis boot with an unresolveable hostname, annoying fix\n-      - update the apt cache and install aptdaemon: paralellel apt\n-        installations by terraform modules\n-    */\n-    inline = [\n-      \"sudo sed -i '/^127.0.0.1/ s/$/ '$(hostname)'/' /etc/hosts\",\n-      \"sudo apt-get update -qq\",\n-      \"sudo apt-get install -qy aptdaemon\",\n-    ]\n+  metadata {\n+    ssh-keys = \"${var.compute_image_name}:${file(\"${var.connection_public_credentials_path}\")}\"\n   }\n-}\n \n-/* some launches are getting their ephemeral volumes, others aren't\n-   ... disable for now. This module correctly fails when the devices\n-   it expects are not accessible, but to use current gen hardware\n-   we are sacrificing the ephemerals.\n-module \"lvm\" {\n-  source                 = \"./lvm\"\n-  connection_host        = \"${aws_instance.vpc_ec2.public_ip}\"\n-  connection_user        = \"${var.connection_user}\"\n-  connection_private_key = \"${var.ssh_private_key}\"\n-  devices                = [\"/dev/xvdb\", \"/dev/xvdc\"]\n+  service_account {\n+    scopes = [\"https://www.googleapis.com/auth/compute.readonly\"]\n+  }\n }\n-*/\n \n-module \"ntp\" {\n-  source                 = \"./ntp\"\n-  connection_host        = \"${aws_instance.vpc_ec2.public_ip}\"\n-  connection_user        = \"${var.connection_user}\"\n-  connection_private_key = \"${var.ssh_private_key}\"\n+module \"aptdaemon\" {\n+  source                 = \"./aptdaemon\"\n+  connection_host        = \"${google_compute_instance.minecraft.network_interface.0.access_config.0.assigned_nat_ip}\"\n+  connection_user        = \"${var.compute_image_name}\"\n+  connection_private_key = \"${file(\"${var.connection_credentials_path}\")}\"\n }\n \n module \"minecraft\" {\n-  source                   = \"./minecraft\"\n-  connection_host          = \"${aws_instance.vpc_ec2.public_ip}\"\n-  connection_user          = \"${var.connection_user}\"\n-  connection_private_key   = \"${var.ssh_private_key}\"\n-  minecraft_port           = \"${var.application_port}\"\n-  minecraft_backup_enabled = \"false\"\n-  minecraft_data_symlink   = \"/world\"\n-  #minecraft_data_symlink   = \"${module.lvm.volume_mount_point}\"\n-}\n-\n-module \"backup\" {\n-  source                 = \"./backup/s3\"\n-  connection_host        = \"${aws_instance.vpc_ec2.public_ip}\"\n-  connection_user        = \"${var.connection_user}\"\n-  connection_private_key = \"${var.ssh_private_key}\"\n-  keep_days              = \"-1\"\n-  backup_rate_limit_kbs  = \"10000\"\n-\n-  backup_endpoint  = \"${var.application_name}.${var.domain_name}\"\n-  backup_directory = \"/world\"\n-  #backup_directory = \"${module.lvm.volume_mount_point}\"\n+  source                 = \"./minecraft\"\n+  connection_host        = \"${google_compute_instance.minecraft.network_interface.0.access_config.0.assigned_nat_ip}\"\n+  connection_user        = \"${var.compute_image_name}\"\n+  connection_private_key = \"${file(\"${var.connection_credentials_path}\")}\"\n }"
      },
      {
        "filename": "connection-variables.tf",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "added",
        "patch": "@@ -0,0 +1,17 @@\n+variable \"connection_credentials_path\" {\n+  type        = \"string\"\n+  default     = \"~/.ssh/id_rsa\"\n+  description = \"Path to credentials file for compute connectivity.\"\n+}\n+\n+variable \"connection_public_credentials_path\" {\n+  type        = \"string\"\n+  default     = \"~/.ssh/id_rsa.pub\"\n+  description = \"Path to credentials file for provisioning compute connectivity.\"\n+}\n+\n+variable \"connection_public_ipv4_api_url\" {\n+  type        = \"string\"\n+  default     = \"http://icanhazip.com\"\n+  description = \"URL to an API for returning the provisioning machines public NAT IPv4 address.\"\n+}"
      },
      {
        "filename": "connection.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+resource \"null_resource\" \"ssh_public_key\" {\n+  triggers {\n+    file_main_tf = \"${sha1(\"${file(\"${var.connection_credentials_path}\")}\")}\"\n+  }\n+\n+  provisioner \"local-exec\" {\n+    command = \"ssh-keygen -y -f ${var.connection_credentials_path} > ${var.connection_public_credentials_path}\"\n+  }\n+}"
      },
      {
        "filename": "global-variables.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+variable \"global_app_name\" {\n+  type        = \"string\"\n+  default     = \"minecraft\"\n+  description = \"The name of the application being deployed.\"\n+}"
      },
      {
        "filename": "lvm/configure-lvm.sh",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "status": "removed",
        "patch": "@@ -1,30 +0,0 @@\n-#!/bin/bash\n-#\n-# adopt some volumes and expose them as a logical group\n-#\n-\n-# the terraform trigger converted the device list to be space-separated\n-# first assert all these devices have no mounted volumes\n-for device in ${devices}; do\n-  umount \"${device}\"\n-done\n-\n-# manage all the physical volumes with lvm\n-pvcreate -y ${devices}\n-\n-# create a volume group with all the devices\n-vgcreate -y \"${volume_group_name}\" ${devices}\n-\n-# create a logical volume and use all the space in the volume group\n-lvcreate --name \"${volume_group_name}\" --extents 100%FREE \"${volume_group_name}\"\n-\n-# format the logical volume\n-mkfs.${volume_format} \"/dev/${volume_group_name}/${volume_group_name}\"\n-\n-# e.g. make /tank and mount /dev/tank/tank to tank\n-umount \"${volume_mount_point}\" || true\n-mkdir -p \"${volume_mount_point}\"\n-mount \"/dev/${volume_group_name}/${volume_group_name}\" \"${volume_mount_point}\"\n-\n-# this script is idempotent, assert that the final volume mount exists\n-mount | grep \"${volume_mount_point}\" || exit 1"
      },
      {
        "filename": "lvm/main.tf",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "status": "removed",
        "patch": "@@ -1,55 +0,0 @@\n-resource \"null_resource\" \"provisioner\" {\n-  triggers {\n-    var_user                = \"${var.connection_user}\"\n-    var_host                = \"${var.connection_host}\"\n-    var_private_key         = \"${sha1(\"${var.connection_private_key}\")}\"\n-    var_port                = \"${var.connection_port}\"\n-    var_devices             = \"${join(\" \", var.devices)}\"\n-    var_volume_group_name   = \"${var.volume_group_name}\"\n-    var_volume_mount_point  = \"${var.volume_mount_point}\"\n-    var_volume_format       = \"${var.volume_format}\"\n-    var_remote_resource_dir = \"${var.remote_resource_dir}\"\n-\n-    file_provision_sh  = \"${sha1(\"${file(\"${path.module}/provision.sh\")}\")}\"\n-    file_configure_lvm = \"${sha1(\"${file(\"${path.module}/configure-lvm.sh\")}\")}\"\n-  }\n-\n-  connection {\n-    user        = \"${var.connection_user}\"\n-    host        = \"${var.connection_host}\"\n-    private_key = \"${var.connection_private_key}\"\n-    port        = \"${var.connection_port}\"\n-  }\n-\n-  provisioner \"remote-exec\" {\n-    inline = [\n-      \"sudo mkdir -p ${var.remote_resource_dir}/${var.module_name}\",\n-      \"sudo chown -R ${var.connection_user} ${var.remote_resource_dir}/${var.module_name}\",\n-    ]\n-  }\n-\n-  provisioner \"file\" {\n-    content = \"\n-# generated on deployment from ${path.module}\n-module_name='${var.module_name}'\n-module_install_log='${var.module_install_log}'\n-devices='${null_resource.provisioner.triggers[\"var_devices\"]}'\n-volume_group_name='${var.volume_group_name}'\n-volume_mount_point='${var.volume_mount_point}'\n-volume_format='${var.volume_format}'\n-\"\n-\n-    destination = \"${var.remote_resource_dir}/${var.module_name}/${var.module_properties}\"\n-  }\n-\n-  provisioner \"file\" {\n-    source      = \"${path.module}/\"\n-    destination = \"${var.remote_resource_dir}/${var.module_name}/\"\n-  }\n-\n-  provisioner \"remote-exec\" {\n-    inline = [\n-      \"sudo bash ${var.remote_resource_dir}/${var.module_name}/provision.sh ${var.module_properties}\",\n-    ]\n-  }\n-}"
      },
      {
        "filename": "lvm/outputs.tf",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "status": "removed",
        "patch": "@@ -1,23 +0,0 @@\n-output \"module_name\" {\n-  value = \"${var.module_name}\"\n-}\n-\n-output \"module_properties\" {\n-  value = \"${var.module_properties}\"\n-}\n-\n-output \"module_install_log\" {\n-  value = \"${var.module_install_log}\"\n-}\n-\n-output \"remote_resource_dir\" {\n-  value = \"${var.remote_resource_dir}\"\n-}\n-\n-output \"volume_mount_point\" {\n-  value = \"${var.volume_mount_point}\"\n-}\n-\n-output \"volume_format\" {\n-  value = \"${var.volume_format}\"\n-}"
      },
      {
        "filename": "lvm/provision.sh",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "status": "removed",
        "patch": "@@ -1,34 +0,0 @@\n-#!/bin/bash\n-#\n-# provisioning script for a logical volume management\n-#\n-\n-set -e\n-set -u\n-set -a\n-set -o pipefail\n-\n-# accept all script-relative paths and exit out to executor path when done\n-lwd=\"$(pwd)\"\n-trap on_exit EXIT\n-on_exit(){\n-  cd \"${lwd}\"\n-}\n-cd \"$(dirname ${0})\"\n-\n-# assert application properties exist and source them\n-test -f \"${1}\"\n-source \"${1}\"\n-\n-scripts=(configure-lvm.sh)\n-\n-# iterate through all the scripts\n-for script in ${scripts[@]}; do\n-  # assert the listed script exists and is syntactically valid\n-  test -f \"${script}\"\n-  bash -n \"${script}\"\n-\n-  # run the script and overwrite an installation log\n-  bash -x \"${script}\" &>> \"${module_install_log}\"\n-  echo \"${script}: SUCCESS @$(date +%s)\" >> \"${module_install_log}\"\n-done"
      },
      {
        "filename": "lvm/variables.tf",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "status": "removed",
        "patch": "@@ -1,69 +0,0 @@\n-variable \"devices\" {\n-  type        = \"list\"\n-  default     = []\n-  description = \"A list of devices to manage with LVM.\"\n-}\n-\n-variable \"volume_group_name\" {\n-  type        = \"string\"\n-  default     = \"tank\"\n-  description = \"The logical name of the LVM volume group.\"\n-}\n-\n-variable \"volume_mount_point\" {\n-  type        = \"string\"\n-  default     = \"/tank\"\n-  description = \"The mounted path to the formatted volume group.\"\n-}\n-\n-variable \"volume_format\" {\n-  type        = \"string\"\n-  default     = \"ext4\"\n-  description = \"Format of logical volume, must be supported by mkfs.\"\n-}\n-\n-variable \"module_name\" {\n-  type        = \"string\"\n-  default     = \"lvm\"\n-  description = \"The name of this module.\"\n-}\n-\n-variable \"module_properties\" {\n-  type        = \"string\"\n-  default     = \"module.properties\"\n-  description = \"Path to configuration properties for this module.\"\n-}\n-\n-variable \"module_install_log\" {\n-  type        = \"string\"\n-  default     = \"install.log\"\n-  description = \"Filename of the installation log for this service's configuration.\"\n-}\n-\n-variable \"remote_resource_dir\" {\n-  type        = \"string\"\n-  default     = \"/usr/share/terraform\"\n-  description = \"Base path to configuration scripts.\"\n-}\n-\n-variable \"connection_user\" {\n-  type        = \"string\"\n-  description = \"SSH username.\"\n-}\n-\n-variable \"connection_host\" {\n-  type        = \"string\"\n-  description = \"SSH remote host (IP or name).\"\n-}\n-\n-variable \"connection_private_key\" {\n-  sensitive   = true\n-  type        = \"string\"\n-  description = \"SSH RSA private key material. Not a path to a file.\"\n-}\n-\n-variable \"connection_port\" {\n-  type        = \"string\"\n-  default     = \"22\"\n-  description = \"SSH remote port.\"\n-}"
      },
      {
        "filename": "minecraft/block-until-dependents.sh",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+#!/bin/bash\n+#\n+# block until some dependencies are met by other modules\n+#\n+\n+set -u\n+\n+while true; do\n+ which aptdcon && break\n+done"
      },
      {
        "filename": "minecraft/config/config.cfg.tmpl",
        "additions": 151,
        "deletions": 0,
        "changes": 151,
        "status": "added",
        "patch": "@@ -0,0 +1,151 @@\n+# Configuration file\n+\n+config {\n+\n+    auto_shutdown {\n+        B:enabled=false\n+\n+        # Server will automatically shut down after X hours\n+        # Time Format: HH:MM. If the system time matches a value, server will shut down\n+        # It will look for closest value available that is not equal to current time\n+        S:times <\n+            04:00\n+            16:00\n+         >\n+    }\n+\n+    server_info {\n+        B:difficulty=true\n+        B:motd=true\n+    }\n+\n+    chat {\n+        # Min: 0\n+        # Max: 10000000\n+        I:admin_history_limit=10000\n+\n+        # Min: 0\n+        # Max: 10000000\n+        I:general_history_limit=10000\n+\n+        # Min: 0\n+        # Max: 10000000\n+        I:team_history_limit=1000\n+    }\n+\n+    backups {\n+        # Timer in hours\n+        # 1.0 - backups every hour\n+        # 6.0 - backups every 6 hours\n+        # 0.5 - backups every 30 minutes\n+        # Min: 0.05\n+        # Max: 600.0\n+        D:backup_timer=minecraft_backup_hours_interval_float\n+\n+        # The number of backup files to keep\n+        # More backups = more space used\n+        # 0 - Infinite\n+        # Min: 0\n+        # Max: 32000\n+        I:backups_to_keep=minecraft_backup_keep_int\n+\n+        # 0 - Disabled (output = folders)\n+        # 1 - Best speed\n+        # 9 - Smallest file size\n+        # Min: 0\n+        # Max: 9\n+        I:compression_level=minecraft_backup_compression\n+\n+        # Prints (current size | total size) when backup is done\n+        B:display_file_size=true\n+        B:enabled=true\n+\n+        # Absolute path to backups folder\n+        S:folder=minecraft_backup_data_dir\n+        B:silent=minecraft_backup_silent\n+\n+        # Run backup in a separated Thread (recommended)\n+        B:use_separate_thread=true\n+    }\n+\n+    commands {\n+        B:back=true\n+        B:chunks=true\n+        B:fly=true\n+        B:heal=true\n+        B:home=true\n+        B:inv=true\n+        B:kickme=true\n+        B:killall=true\n+        B:leaderboard=true\n+        B:nbtedit=true\n+        B:ranks=true\n+        B:set_hour=true\n+        B:spawn=true\n+        B:tpl=true\n+        B:trash_can=true\n+        B:view_crash=true\n+        B:warp=true\n+    }\n+\n+    login {\n+        # Set to false to disable event badges, e.g. Halloween\n+        B:enable_event_badges=true\n+\n+        # Set to false to disable global badges completely, only server-wide badges will be available\n+        B:enable_global_badges=true\n+        B:enable_motd=false\n+        B:enable_starting_items=false\n+\n+        # Message of the day. This will be displayed when player joins the server\n+        S:motd <\n+            \"minecraft_property_motd\"\n+         >\n+\n+        # Items to give player when he first joins the server\n+        # Format: '{id:\"ID\",Count:X,Damage:X,tag:{}}'\n+        S:starting_items <\n+            {id:\"minecraft:stone_sword\",Count:1,Damage:1,tag:{display:{Name:\"Epic Stone Sword\"}}}\n+         >\n+    }\n+\n+    ranks {\n+        B:enabled=true\n+        B:override_chat=true\n+        B:override_commands=true\n+    }\n+\n+    world {\n+        # Dimensions where chunk claiming isn't allowed\n+        I:blocked_claiming_dimensions <\n+         >\n+        B:chunk_claiming=true\n+        B:chunk_loading=true\n+\n+        # If set to DEFAULT, then teams can decide their Explosion setting\n+        # Valid values:\n+        # TRUE\n+        # FALSE\n+        # DEFAULT\n+        S:enable_explosions=DEFAULT\n+\n+        # If set to DEFAULT, then players can decide their PVP status\n+        # Valid values:\n+        # TRUE\n+        # FALSE\n+        # DEFAULT\n+        S:enable_pvp=DEFAULT\n+\n+        # Print a message in console every time a chunk is forced or unforced. Recommended to be off, because spam\n+        B:log_chunkloading=false\n+\n+        # If set to true, explosions and hostile mobs in spawn area will be disabled, players won't be able to attack each other in spawn area\n+        B:safe_spawn=false\n+\n+        # Enable spawn area in singleplayer\n+        B:spawn_area_in_sp=false\n+    }\n+\n+}\n+\n+"
      },
      {
        "filename": "minecraft/config/server.properties.tmpl",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "status": "added",
        "patch": "@@ -0,0 +1,38 @@\n+max-tick-time=60000\n+generator-settings=\n+allow-nether=true\n+force-gamemode=false\n+gamemode=minecraft_property_gamemode\n+enable-query=false\n+player-idle-timeout=0\n+difficulty=minecraft_property_difficulty\n+spawn-monsters=true\n+op-permission-level=4\n+pvp=true\n+snooper-enabled=false\n+level-type=mirecraft_property_level_type\n+hardcore=false\n+enable-command-block=false\n+max-players=20\n+network-compression-threshold=minecraft_property_compression_threshold_bytes\n+resource-pack-sha1=\n+max-world-size=29999984\n+server-port=minecraft_property_port\n+server-ip=\n+spawn-npcs=true\n+allow-flight=minecraft_property_allow_flight\n+level-name=minecraft_data_subdir\n+view-distance=10\n+displayname=Fill this in if you have set the server to public\\!\n+resource-pack=\n+discoverability=unlisted\n+spawn-animals=true\n+white-list=false\n+generate-structures=true\n+online-mode=true\n+max-build-height=256\n+level-seed=minecraft_property_level_seed\n+prevent-proxy-connections=false\n+use-native-transport=true\n+motd=minecraft_property_motd\n+enable-rcon=false"
      },
      {
        "filename": "minecraft/connection-variables.tf",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "added",
        "patch": "@@ -0,0 +1,20 @@\n+variable \"connection_user\" {\n+  type        = \"string\"\n+  description = \"SSH username.\"\n+}\n+\n+variable \"connection_host\" {\n+  type        = \"string\"\n+  description = \"SSH remote host (IP or name).\"\n+}\n+\n+variable \"connection_private_key\" {\n+  type        = \"string\"\n+  description = \"SSH RSA private key material. Not a path to a file.\"\n+}\n+\n+variable \"connection_port\" {\n+  type        = \"string\"\n+  default     = \"22\"\n+  description = \"SSH remote port.\"\n+}"
      },
      {
        "filename": "minecraft/generate-config-json.sh",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "status": "removed",
        "patch": "@@ -1,83 +0,0 @@\n-#!/bin/bash\n-#\n-# Override default generated configuration\n-#\n-\n-mkdir -p \"$(dirname ${minecraft_local_config_path})\"\n-\n-cat << CFG-JSON > \"${minecraft_local_config_path}\"\n-{\n-  \"backups\": {\n-    \"backups_to_keep\": 12,\n-    \"display_file_size\": true,\n-    \"enabled\": ${minecraft_backup_enabled},\n-    \"compression_level\": 1,\n-    \"backup_timer\": 2.0,\n-    \"folder\": \"\",\n-    \"use_separate_thread\": true\n-  },\n-  \"world\": {\n-    \"temp\": {\n-      \"max_loaded_chunks\": 64,\n-      \"max_claimed_chunks\": 1000\n-    },\n-    \"chunk_loading\": true,\n-    \"locked_in_dimensions\": [\n-      1,\n-      0,\n-      -1\n-    ],\n-    \"locked_in_claimed_chunks\": false,\n-    \"blocked_entities\": [],\n-    \"chunk_claiming\": true,\n-    \"safe_spawn\": false,\n-    \"spawn_area_in_sp\": false\n-  },\n-  \"general\": {\n-    \"auto_restart\": false,\n-    \"chat\": {\n-      \"substitutes\": [\n-        {\n-          \"shrug\": {\n-            \"text\": \"??\\\\_(???)_/??\"\n-          }\n-        }\n-      ],\n-      \"substitute_prefix\": \"!\",\n-      \"enable_links\": true\n-    },\n-    \"restart_timer\": 12.0,\n-    \"server_info\": {\n-      \"difficulty\": true,\n-      \"mode\": true\n-    },\n-    \"ranks\": {\n-      \"enabled\": false\n-    }\n-  },\n-  \"commands\": {\n-    \"chunks\": true,\n-    \"trash_can\": true,\n-    \"js\": true,\n-    \"warp\": true,\n-    \"tpl\": true,\n-    \"inv\": true,\n-    \"back\": true,\n-    \"server_info\": true,\n-    \"spawn\": true,\n-    \"home\": true,\n-    \"kickme\": true\n-  },\n-  \"webapi\": {\n-    \"port\": 4509,\n-    \"output_map\": false,\n-    \"enabled\": false\n-  },\n-  \"login\": {\n-    \"motd\": [],\n-    \"enable_motd\": true,\n-    \"enable_starting_items\": true,\n-    \"starting_items\": []\n-  }\n-}\n-CFG-JSON"
      },
      {
        "filename": "minecraft/generate-properties.sh",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "status": "added",
        "patch": "@@ -0,0 +1,33 @@\n+#!/bin/bash\n+#\n+# Override default generated properties\n+#\n+\n+set -e\n+set -u\n+\n+# dumb property prefix iterator from environment to replace\n+# tokens in a file\n+replace_props(){\n+  prop_file=\"${1}\"\n+  prop_prefix='minecraft_'\n+\n+  while IFS='=' read -r key val; do\n+    if [ $(echo \"${key}\" | grep -c \"${prop_prefix}\") -eq 1 ]; then\n+      sed -i \"s%${key}%${val}%g\" \"${prop_file}\"\n+    fi\n+  done < <(env)\n+}\n+\n+mkdir -p \"$(dirname ${minecraft_property_file_target_path})\"\n+cp \"${minecraft_property_file_template}\" \"${minecraft_property_file_target_path}\"\n+replace_props \"${minecraft_property_file_target_path}\"\n+chown ${module_name} \"${minecraft_property_file_target_path}\"\n+chmod 0444 \"${minecraft_property_file_target_path}\"\n+\n+\n+mkdir -p \"$(dirname ${minecraft_ftb_config_target_path})\"\n+cp \"${minecraft_ftb_config_template}\" \"${minecraft_ftb_config_target_path}\"\n+replace_props \"${minecraft_ftb_config_target_path}\"\n+chown ${module_name} \"${minecraft_ftb_config_target_path}\"\n+chmod 0444 \"${minecraft_ftb_config_target_path}\""
      },
      {
        "filename": "minecraft/generate-server-properties.sh",
        "additions": 0,
        "deletions": 47,
        "changes": 47,
        "status": "removed",
        "patch": "@@ -1,47 +0,0 @@\n-#!/bin/bash\n-#\n-# Override default generated properties\n-#\n-\n-mkdir -p \"$(dirname ${minecraft_property_file_path})\"\n-\n-cat << SVR-PROPS > \"${minecraft_property_file_path}\"\n-#Minecraft server properties\n-#Wed Dec 21 20:46:02 PST 2016\n-max-tick-time=60000\n-generator-settings=\n-force-gamemode=false\n-allow-nether=true\n-gamemode=0\n-enable-query=false\n-player-idle-timeout=0\n-difficulty=${minecraft_property_difficulty}\n-spawn-monsters=true\n-op-permission-level=4\n-announce-player-achievements=true\n-pvp=true\n-snooper-enabled=true\n-level-type=DEFAULT\n-hardcore=false\n-enable-command-block=false\n-max-players=20\n-network-compression-threshold=256\n-resource-pack-sha1=\n-max-world-size=29999984\n-server-port=${minecraft_port}\n-server-ip=\n-spawn-npcs=true\n-allow-flight=false\n-level-name=${minecraft_data_subdir}\n-view-distance=10\n-resource-pack=\n-spawn-animals=true\n-white-list=false\n-generate-structures=true\n-online-mode=true\n-max-build-height=256\n-level-seed=\n-use-native-transport=true\n-enable-rcon=false\n-motd=${minecraft_property_motd}\n-SVR-PROPS"
      },
      {
        "filename": "minecraft/install-minecraft.sh",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -14,9 +14,11 @@ yes | aptdcon --hide-terminal --install unzip\n # add a service user\n rm -r \"${module_install_dir}\" || true\n mkdir -p \"${module_install_dir}\"\n+mkdir -p \"${minecraft_backup_data_dir}\"\n adduser --system --no-create-home --home \"${module_install_dir}\" \"${module_name}\" || true\n addgroup --system \"${module_name}\" || true\n chown -R \"${module_name}\" \"${module_install_dir}\"\n+chown -R \"${module_name}\" \"${minecraft_backup_data_dir}\"\n \n # create the service unit\n cat << SVC-UNIT > \"/etc/systemd/system/${module_name}.service\""
      },
      {
        "filename": "minecraft/main.tf",
        "additions": 57,
        "deletions": 37,
        "changes": 94,
        "status": "modified",
        "patch": "@@ -1,25 +1,21 @@\n resource \"null_resource\" \"provisioner\" {\n   triggers {\n-    var_user                           = \"${var.connection_user}\"\n-    var_host                           = \"${var.connection_host}\"\n-    var_private_key                    = \"${sha1(\"${var.connection_private_key}\")}\"\n-    var_port                           = \"${var.connection_port}\"\n-    var_minecraft_download_url         = \"${var.minecraft_download_url}\"\n-    var_module_name                    = \"${var.module_name}\"\n-    var_module_install_basedir         = \"${var.module_install_basedir}\"\n-    var_minecraft_data_subdir          = \"${var.minecraft_data_subdir}\"\n-    var_minecraft_data_symlink         = \"${var.minecraft_data_symlink}\"\n-    var_minecraft_backup_enabled       = \"${var.minecraft_backup_enabled}\"\n-    var_minecraft_port                 = \"${var.minecraft_port}\"\n-    var_remote_resource_dir            = \"${var.remote_resource_dir}\"\n-    var_dpkg_timeout_s                 = \"${var.dpkg_timeout_s}\"\n+    connection_user          = \"${var.connection_user}\"\n+    connection_host          = \"${var.connection_host}\"\n+    connection_private_key   = \"${sha1(\"${var.connection_private_key}\")}\"\n+    connection_port          = \"${var.connection_port}\"\n+    minecraft_download_url   = \"${var.minecraft_download_url}\"\n+    module_install_basedir   = \"${var.module_install_basedir}\"\n+    minecraft_data_subdir    = \"${var.minecraft_data_subdir}\"\n+    minecraft_data_symlink   = \"${var.minecraft_data_symlink}\"\n+    minecraft_backup_enabled = \"${var.minecraft_backup_enabled}\"\n+    minecraft_port           = \"${var.minecraft_property_port}\"\n \n-    file_main_tf                       = \"${sha1(\"${file(\"${path.module}/main.tf\")}\")}\"\n-    file_variables_tf                  = \"${sha1(\"${file(\"${path.module}/variables.tf\")}\")}\"\n-    file_provision_sh                  = \"${sha1(\"${file(\"${path.module}/provision.sh\")}\")}\"\n-    file_install_minecraft_sh          = \"${sha1(\"${file(\"${path.module}/install-minecraft.sh\")}\")}\"\n-    file_generate_config_json_sh       = \"${sha1(\"${file(\"${path.module}/generate-config-json.sh\")}\")}\"\n-    file_generate_server_properties_sh = \"${sha1(\"${file(\"${path.module}/generate-server-properties.sh\")}\")}\"\n+    main_tf                       = \"${sha1(\"${file(\"${path.module}/main.tf\")}\")}\"\n+    variables_tf                  = \"${sha1(\"${file(\"${path.module}/minecraft-variables.tf\")}\")}\"\n+    provision_sh                  = \"${sha1(\"${file(\"${path.module}/provision.sh\")}\")}\"\n+    install_minecraft_sh          = \"${sha1(\"${file(\"${path.module}/install-minecraft.sh\")}\")}\"\n+    generate_properties_sh = \"${sha1(\"${file(\"${path.module}/generate-properties.sh\")}\")}\"\n   }\n \n   connection {\n@@ -31,48 +27,72 @@ resource \"null_resource\" \"provisioner\" {\n \n   provisioner \"remote-exec\" {\n     inline = [\n-      \"sudo mkdir -p ${var.remote_resource_dir}/${var.module_name}\",\n-      \"sudo chown -R ${var.connection_user} ${var.remote_resource_dir}/${var.module_name}\",\n+      \"sudo mkdir -p ${var.module_resource_dir}/${var.module_name}\",\n+      \"sudo chown -R ${var.connection_user} ${var.module_resource_dir}/${var.module_name}\",\n     ]\n   }\n \n   provisioner \"file\" {\n-    content = \"\n+    content = <<PROPERTIES\n # generated on deployment from ${path.module}\n+\n+# general module properties\n module_name='${var.module_name}'\n module_install_basedir='${var.module_install_basedir}'\n module_install_dir='${var.module_install_basedir}/${var.module_name}'\n module_install_log='${var.module_install_log}'\n+module_dpkg_timeout_s='${var.module_dpkg_timeout_s}'\n+\n minecraft_download_url='${var.minecraft_download_url}'\n+\n+# ftb config properties\n+minecraft_ftb_config_template='${var.minecraft_ftb_config_template}'\n+minecraft_ftb_config_target='${var.minecraft_ftb_config_target}'\n+minecraft_ftb_config_target_path='${var.module_install_basedir}/${var.module_name}/${var.minecraft_ftb_config_target}'\n+minecraft_settings_script='${var.minecraft_settings_script}'\n+minecraft_install_script='${var.minecraft_install_script}'\n+\n+minecraft_data_subdir='${var.minecraft_data_subdir}'\n+minecraft_data_symlink='${var.minecraft_data_symlink}'\n+\n minecraft_min_ram='${var.minecraft_min_ram}'\n minecraft_max_ram='${var.minecraft_max_ram}'\n-minecraft_install_script='${var.minecraft_install_script}'\n-minecraft_start_script='${var.minecraft_start_script}'\n-minecraft_settings_script='${var.minecraft_settings_script}'\n minecraft_eula='${var.minecraft_eula}'\n-minecraft_local_config='${var.minecraft_local_config}'\n-minecraft_local_config_path='${var.module_install_basedir}/${var.module_name}/${var.minecraft_local_config}'\n+minecraft_start_script='${var.minecraft_start_script}'\n+\n+# backup properties\n minecraft_backup_enabled='${var.minecraft_backup_enabled}'\n-minecraft_property_file='${var.minecraft_property_file}'\n-minecraft_property_file_path='${var.module_install_basedir}/${var.module_name}/${var.minecraft_property_file}'\n-minecraft_property_difficulty='${var.minecraft_property_difficulty}'\n+minecraft_backup_hours_interval_float='${var.minecraft_backup_hours_interval_float}'\n+minecraft_backup_keep_int='${var.minecraft_backup_keep_int}'\n+minecraft_backup_compression='${var.minecraft_backup_compression}'\n+minecraft_backup_silent='${var.minecraft_backup_silent}'\n+minecraft_backup_data_dir='${var.minecraft_backup_data_dir}'\n+\n+# vanilla server properties\n+minecraft_property_file_template='${var.minecraft_property_file_template}'\n+minecraft_property_file_target='${var.minecraft_property_file_target}'\n+minecraft_property_file_target_path='${var.module_install_basedir}/${var.module_name}/${var.minecraft_property_file_target}'\n minecraft_property_motd='${var.minecraft_property_motd}'\n-minecraft_data_subdir='${var.minecraft_data_subdir}'\n-minecraft_data_symlink='${var.minecraft_data_symlink}'\n-dpkg_timeout_s='${var.dpkg_timeout_s}'\n-\"\n+minecraft_property_difficulty='${var.minecraft_property_difficulty}'\n+minecraft_property_allow_flight='${var.minecraft_property_allow_flight}'\n+minecraft_property_port='${var.minecraft_property_port}'\n+minecraft_property_gamemode='${var.minecraft_property_gamemode}'\n+minecraft_property_level_seed='${var.minecraft_property_level_seed}'\n+minecraft_property_compression_threshold_bytes='${var.minecraft_property_compression_threshold_bytes}'\n+minecraft_property_level_type='${var.minecraft_property_level_type}'\n+PROPERTIES\n \n-    destination = \"${var.remote_resource_dir}/${var.module_name}/${var.module_properties}\"\n+    destination = \"${var.module_resource_dir}/${var.module_name}/${var.module_properties}\"\n   }\n \n   provisioner \"file\" {\n     source      = \"${path.module}/\"\n-    destination = \"${var.remote_resource_dir}/${var.module_name}/\"\n+    destination = \"${var.module_resource_dir}/${var.module_name}/\"\n   }\n \n   provisioner \"remote-exec\" {\n     inline = [\n-      \"sudo bash ${var.remote_resource_dir}/${var.module_name}/provision.sh ${var.module_properties}\",\n+      \"sudo bash ${var.module_resource_dir}/${var.module_name}/provision.sh ${var.module_properties}\",\n     ]\n   }\n }"
      },
      {
        "filename": "minecraft/minecraft-backup-variables.tf",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "status": "added",
        "patch": "@@ -0,0 +1,35 @@\n+variable \"minecraft_backup_enabled\" {\n+  type        = \"string\"\n+  default     = \"true\"\n+  description = \"Bool to remove any minecraft mods for data backup.\"\n+}\n+\n+variable \"minecraft_backup_hours_interval_float\" {\n+  type        = \"string\"\n+  default     = \"0.5\"\n+  description = \"Float of hourly interval to backup.\"\n+}\n+\n+variable \"minecraft_backup_keep_int\" {\n+  type        = \"string\"\n+  default     = \"96\"\n+  description = \"Integer of backups to keep.\"\n+}\n+\n+variable \"minecraft_backup_compression\" {\n+  type        = \"string\"\n+  default     = \"9\"\n+  description = \"Compression ratio, 0 to disable, 9 for max.\"\n+}\n+\n+variable \"minecraft_backup_silent\" {\n+  type        = \"string\"\n+  default     = \"true\"\n+  description = \"Bool to display backup information in chat.\"\n+}\n+\n+variable \"minecraft_backup_data_dir\" {\n+  type        = \"string\"\n+  default     = \"/minecraft/backups\"\n+  description = \"Path to a directory to store backups.\"\n+}"
      },
      {
        "filename": "minecraft/minecraft-server-variables.tf",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "status": "added",
        "patch": "@@ -0,0 +1,56 @@\n+variable \"minecraft_property_file_template\" {\n+  type    = \"string\"\n+  default = \"config/server.properties.tmpl\"\n+}\n+\n+variable \"minecraft_property_file_target\" {\n+  type    = \"string\"\n+  default = \"server.properties\"\n+}\n+\n+variable \"minecraft_property_motd\" {\n+  type    = \"string\"\n+  default = \"\"\n+}\n+\n+variable \"minecraft_property_difficulty\" {\n+  type        = \"string\"\n+  default     = \"3\"\n+  description = \"0 for peaceful, 3 for hard.\"\n+}\n+\n+variable \"minecraft_property_allow_flight\" {\n+  type        = \"string\"\n+  default     = \"true\"\n+  description = \"Bool to enable flight enforcement (contrary to mod support).\"\n+}\n+\n+variable \"minecraft_property_port\" {\n+  type        = \"string\"\n+  default     = \"25565\"\n+  description = \"The minecraft server port.\"\n+}\n+\n+variable \"minecraft_property_gamemode\" {\n+  type        = \"string\"\n+  default     = \"0\"\n+  description = \"0 for survival, 1 creative, 2 adventure, 3 spectator.\"\n+}\n+\n+variable \"minecraft_property_level_seed\" {\n+  type        = \"string\"\n+  default     = \"\"\n+  description = \"Seed value for world generation, blank for random.\"\n+}\n+\n+variable \"minecraft_property_compression_threshold_bytes\" {\n+  type        = \"string\"\n+  default     = \"256\"\n+  description = \"Bytes after which packets should be compressed.\"\n+}\n+\n+variable \"minecraft_property_level_type\" {\n+  type        = \"string\"\n+  default     = \"DEFAULT\"\n+  description = \"String of world generation type.\"\n+}"
      },
      {
        "filename": "minecraft/minecraft-variables.tf",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "status": "added",
        "patch": "@@ -0,0 +1,55 @@\n+variable \"minecraft_download_url\" {\n+  type        = \"string\"\n+  default     = \"https://media.forgecdn.net/files/2533/332/FTBRevelationServer_1.6.0.zip\"\n+  description = \"URL to download minecrafot server modpack.\"\n+}\n+\n+variable \"minecraft_min_ram\" {\n+  type    = \"string\"\n+  default = \"8g\"\n+}\n+\n+variable \"minecraft_max_ram\" {\n+  type    = \"string\"\n+  default = \"8g\"\n+}\n+\n+variable \"minecraft_install_script\" {\n+  type    = \"string\"\n+  default = \"FTBInstall.sh\"\n+}\n+\n+variable \"minecraft_ftb_config_template\" {\n+  type    = \"string\"\n+  default = \"config/config.cfg.tmpl\"\n+}\n+\n+variable \"minecraft_ftb_config_target\" {\n+  type    = \"string\"\n+  default = \"local/ftbutilities/config.cfg\"\n+}\n+\n+variable \"minecraft_start_script\" {\n+  type    = \"string\"\n+  default = \"ServerStart.sh\"\n+}\n+\n+variable \"minecraft_settings_script\" {\n+  type    = \"string\"\n+  default = \"settings.sh\"\n+}\n+\n+variable \"minecraft_eula\" {\n+  type    = \"string\"\n+  default = \"eula.txt\"\n+}\n+\n+variable \"minecraft_data_subdir\" {\n+  type    = \"string\"\n+  default = \"world\"\n+}\n+\n+variable \"minecraft_data_symlink\" {\n+  type    = \"string\"\n+  default = \"/minecraft/world\"\n+}"
      },
      {
        "filename": "minecraft/module-variables.tf",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "status": "added",
        "patch": "@@ -0,0 +1,35 @@\n+variable \"module_name\" {\n+  type        = \"string\"\n+  default     = \"minecraft\"\n+  description = \"The name of this module.\"\n+}\n+\n+variable \"module_properties\" {\n+  type        = \"string\"\n+  default     = \"module.properties\"\n+  description = \"Path to configuration properties for this module.\"\n+}\n+\n+variable \"module_install_log\" {\n+  type        = \"string\"\n+  default     = \"install.log\"\n+  description = \"Filename of the installation log for this service's configuration.\"\n+}\n+\n+variable \"module_install_basedir\" {\n+  type        = \"string\"\n+  default     = \"/var/lib\"\n+  description = \"The root path to construct an installation directory from.\"\n+}\n+\n+variable \"module_resource_dir\" {\n+  type        = \"string\"\n+  default     = \"/usr/share/terraform\"\n+  description = \"Base path to configuration scripts.\"\n+}\n+\n+variable \"module_dpkg_timeout_s\" {\n+  type        = \"string\"\n+  default     = \"120\"\n+  description = \"Time to wait until dpkg lock is lifted.\"\n+}"
      },
      {
        "filename": "minecraft/outputs.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+output \"game_port\" {\n+  value = \"${var.minecraft_property_port}\"\n+}"
      },
      {
        "filename": "minecraft/provision.sh",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -20,9 +20,9 @@ cd \"$(dirname ${0})\"\n test -f \"${1}\"\n source \"${1}\"\n \n-scripts=(install-minecraft.sh \\\n-generate-config-json.sh\n-generate-server-properties.sh)\n+scripts=(block-until-dependents.sh \\\n+install-minecraft.sh \\\n+generate-properties.sh)\n \n # iterate through all the scripts\n for script in ${scripts[@]}; do"
      },
      {
        "filename": "minecraft/variables.tf",
        "additions": 0,
        "deletions": 135,
        "changes": 135,
        "status": "removed",
        "patch": "@@ -1,135 +0,0 @@\n-variable \"module_name\" {\n-  type        = \"string\"\n-  default     = \"minecraft\"\n-  description = \"The name of this module.\"\n-}\n-\n-variable \"module_properties\" {\n-  type        = \"string\"\n-  default     = \"module.properties\"\n-  description = \"Path to configuration properties for this module.\"\n-}\n-\n-variable \"module_install_log\" {\n-  type        = \"string\"\n-  default     = \"install.log\"\n-  description = \"Filename of the installation log for this service's configuration.\"\n-}\n-\n-variable \"remote_resource_dir\" {\n-  type        = \"string\"\n-  default     = \"/usr/share/terraform\"\n-  description = \"Base path to configuration scripts.\"\n-}\n-\n-variable \"connection_user\" {\n-  type        = \"string\"\n-  description = \"SSH username.\"\n-}\n-\n-variable \"connection_host\" {\n-  type        = \"string\"\n-  description = \"SSH remote host (IP or name).\"\n-}\n-\n-variable \"connection_private_key\" {\n-  sensitive   = true\n-  type        = \"string\"\n-  description = \"SSH RSA private key material. Not a path to a file.\"\n-}\n-\n-variable \"connection_port\" {\n-  type        = \"string\"\n-  default     = \"22\"\n-  description = \"SSH remote port.\"\n-}\n-\n-variable \"module_install_basedir\" {\n-  type        = \"string\"\n-  default     = \"/var/lib\"\n-  description = \"The root path to construct an installation directory from.\"\n-}\n-\n-variable \"minecraft_min_ram\" {\n-  type    = \"string\"\n-  default = \"6g\"\n-}\n-\n-variable \"dpkg_timeout_s\" {\n-  type        = \"string\"\n-  default     = \"120\"\n-  description = \"Time to wait until dpkg lock is lifted.\"\n-}\n-\n-variable \"minecraft_max_ram\" {\n-  type    = \"string\"\n-  default = \"6g\"\n-}\n-\n-variable \"minecraft_install_script\" {\n-  type    = \"string\"\n-  default = \"FTBInstall.sh\"\n-}\n-\n-variable \"minecraft_local_config\" {\n-  type    = \"string\"\n-  default = \"local/ftbu/config.json\"\n-}\n-\n-variable \"minecraft_start_script\" {\n-  type    = \"string\"\n-  default = \"ServerStart.sh\"\n-}\n-\n-variable \"minecraft_settings_script\" {\n-  type    = \"string\"\n-  default = \"settings.sh\"\n-}\n-\n-variable \"minecraft_eula\" {\n-  type    = \"string\"\n-  default = \"eula.txt\"\n-}\n-\n-variable \"minecraft_backup_enabled\" {\n-  type        = \"string\"\n-  default     = \"true\"\n-  description = \"Bool to remove any minecraft mods for data backup.\"\n-}\n-\n-variable \"minecraft_data_subdir\" {\n-  type    = \"string\"\n-  default = \"world\"\n-}\n-\n-variable \"minecraft_data_symlink\" {\n-  type        = \"string\"\n-  default     = \"/minecraft/world\"\n-  description = \"Path to symlink the local world data to.\"\n-}\n-\n-variable \"minecraft_download_url\" {\n-  type    = \"string\"\n-  default = \"http://ftb.cursecdn.com/FTB2/modpacks/FTBInfinityLite110/1_5_1/FTBInfinityLite110Server.zip\"\n-}\n-\n-variable \"minecraft_property_file\" {\n-  type    = \"string\"\n-  default = \"server.properties\"\n-}\n-\n-variable \"minecraft_property_motd\" {\n-  type    = \"string\"\n-  default = \"\"\n-}\n-\n-variable \"minecraft_property_difficulty\" {\n-  type    = \"string\"\n-  default = \"3\"\n-}\n-\n-variable \"minecraft_port\" {\n-  type        = \"string\"\n-  default     = \"25565\"\n-  description = \"The minecraft server port.\"\n-}"
      },
      {
        "filename": "network.tf",
        "additions": 19,
        "deletions": 36,
        "changes": 55,
        "status": "modified",
        "patch": "@@ -1,46 +1,29 @@\n-module \"vpc\" {\n-  source             = \"github.com/terraform-community-modules/tf_aws_vpc?ref=e3637e4db5b28e8396a94f6319b32ad99bb03d8e\"\n-  name               = \"${var.application_name}\"\n-  cidr               = \"10.0.0.0/16\"\n-  private_subnets    = [\"10.0.1.0/24\"]\n-  public_subnets     = [\"10.0.100.0/24\"]\n-  azs                = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n-  enable_nat_gateway = \"true\"\n-  enable_dns_support = \"true\"\n+data \"http\" \"public_ipv4\" {\n+  url = \"${var.connection_public_ipv4_api_url}\"\n }\n \n-resource \"aws_security_group\" \"ssh\" {\n-  vpc_id = \"${module.vpc.vpc_id}\"\n-  name   = \"ssh\"\n+resource \"google_compute_firewall\" \"app\" {\n+  name    = \"${var.global_app_name}-app\"\n+  network = \"default\"\n \n-  ingress {\n-    protocol    = \"tcp\"\n-    from_port   = 22\n-    to_port     = 22\n-    cidr_blocks = [\"0.0.0.0/0\"]\n+  allow {\n+    protocol = \"tcp\"\n+    ports    = [\"${module.minecraft.game_port}\"]\n   }\n-}\n-\n-resource \"aws_security_group\" \"internet\" {\n-  vpc_id = \"${module.vpc.vpc_id}\"\n-  name   = \"internet\"\n \n-  egress {\n-    from_port   = 0\n-    to_port     = 0\n-    protocol    = \"-1\"\n-    cidr_blocks = [\"0.0.0.0/0\"]\n-  }\n+  source_ranges = [\"0.0.0.0/0\"]\n+  target_tags   = [\"${var.global_app_name}\"]\n }\n \n-resource \"aws_security_group\" \"application\" {\n-  vpc_id = \"${module.vpc.vpc_id}\"\n-  name   = \"${var.application_name}\"\n+resource \"google_compute_firewall\" \"ssh\" {\n+  name    = \"${var.global_app_name}-ssh\"\n+  network = \"default\"\n \n-  ingress {\n-    protocol    = \"tcp\"\n-    from_port   = \"${var.application_port}\"\n-    to_port     = \"${var.application_port}\"\n-    cidr_blocks = [\"0.0.0.0/0\"]\n+  allow {\n+    protocol = \"tcp\"\n+    ports    = [\"22\"]\n   }\n+\n+  source_ranges = [\"${trimspace(data.http.public_ipv4.body)}\"]\n+  target_tags   = [\"${var.global_app_name}\"]\n }"
      },
      {
        "filename": "ntp/configure-ntp.sh",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "status": "removed",
        "patch": "@@ -1,27 +0,0 @@\n-#!/bin/bash\n-#\n-# set a default timezon and ntupdate\n-#\n-\n-set -e\n-set -u\n-set -o pipefail\n-\n-# set the timezone\n-timedatectl set-timezone ${ntp_timezone}\n-\n-# install ntpd\n-yes | aptdcon --hide-terminal --install ntp || true\n-\n-# clear out the list of ntp servers\n-sed -i '/server.*/d' /etc/ntp.conf\n-\n-# insert line comment\n-echo -e \"\\n#\\n# The below was generated by ${0}\\n#\\n\"\n-\n-# iterate through a space-separated list of peers\n-for peer in ${ntp_peers}; do\n-  echo \"server ${peer}\" >> /etc/ntp.conf\n-done\n-\n-service ntp restart"
      },
      {
        "filename": "ntp/main.tf",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "status": "removed",
        "patch": "@@ -1,54 +0,0 @@\n-resource \"null_resource\" \"provisioner\" {\n-  triggers {\n-    var_user                = \"${var.connection_user}\"\n-    var_host                = \"${var.connection_host}\"\n-    var_private_key         = \"${sha1(\"${var.connection_private_key}\")}\"\n-    var_port                = \"${var.connection_port}\"\n-    var_ntp_timezone        = \"${var.ntp_timezone}\"\n-    var_ntp_peers           = \"${join(\" \", var.ntp_peers)}\"\n-    var_remote_resource_dir = \"${var.remote_resource_dir}\"\n-    var_dpkg_timeout_s      = \"${var.dpkg_timeout_s}\"\n-\n-    file_provision_sh     = \"${sha1(\"${file(\"${path.module}/provision.sh\")}\")}\"\n-    file_configure_ntp_sh = \"${sha1(\"${file(\"${path.module}/configure-ntp.sh\")}\")}\"\n-  }\n-\n-  connection {\n-    user        = \"${var.connection_user}\"\n-    host        = \"${var.connection_host}\"\n-    private_key = \"${var.connection_private_key}\"\n-    port        = \"${var.connection_port}\"\n-  }\n-\n-  provisioner \"remote-exec\" {\n-    inline = [\n-      \"sudo mkdir -p ${var.remote_resource_dir}/${var.module_name}\",\n-      \"sudo chown -R ${var.connection_user} ${var.remote_resource_dir}/${var.module_name}\",\n-    ]\n-  }\n-\n-  provisioner \"file\" {\n-    content = \"\n-# generated on deployment from ${path.module}\n-module_name='${var.module_name}'\n-module_install_basedir='${var.module_install_log}'\n-module_install_log='${var.module_install_log}'\n-dpkg_timeout_s='${var.dpkg_timeout_s}'\n-ntp_timezone='${var.ntp_timezone}'\n-ntp_peers='${null_resource.provisioner.triggers[\"var_ntp_peers\"]}'\n-\"\n-\n-    destination = \"${var.remote_resource_dir}/${var.module_name}/${var.module_properties}\"\n-  }\n-\n-  provisioner \"file\" {\n-    source      = \"${path.module}/\"\n-    destination = \"${var.remote_resource_dir}/${var.module_name}/\"\n-  }\n-\n-  provisioner \"remote-exec\" {\n-    inline = [\n-      \"sudo bash ${var.remote_resource_dir}/${var.module_name}/provision.sh ${var.module_properties}\",\n-    ]\n-  }\n-}"
      },
      {
        "filename": "ntp/provision.sh",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "status": "removed",
        "patch": "@@ -1,34 +0,0 @@\n-#!/bin/bash\n-#\n-# provisioning script for system time\n-#\n-\n-set -e\n-set -u\n-set -a\n-set -o pipefail\n-\n-# accept all script-relative paths and exit out to executor path when done\n-lwd=\"$(pwd)\"\n-trap on_exit EXIT\n-on_exit(){\n-  cd \"${lwd}\"\n-}\n-cd \"$(dirname ${0})\"\n-\n-# assert application properties exist and source them\n-test -f \"${1}\"\n-source \"${1}\"\n-\n-scripts=(configure-ntp.sh)\n-\n-# iterate through all the scripts\n-for script in ${scripts[@]}; do\n-  # assert the listed script exists and is syntactically valid\n-  test -f \"${script}\"\n-  bash -n \"${script}\"\n-\n-  # run the script and overwrite an installation log\n-  bash -x \"${script}\" &>> \"${module_install_log}\"\n-  echo \"${script}: SUCCESS @$(date +%s)\" >> \"${module_install_log}\"\n-done"
      },
      {
        "filename": "ntp/variables.tf",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "status": "removed",
        "patch": "@@ -1,69 +0,0 @@\n-variable \"module_name\" {\n-  type        = \"string\"\n-  default     = \"ntp\"\n-  description = \"The name of this module.\"\n-}\n-\n-variable \"module_properties\" {\n-  type        = \"string\"\n-  default     = \"module.properties\"\n-  description = \"Path to configuration properties for this module.\"\n-}\n-\n-variable \"module_install_log\" {\n-  type        = \"string\"\n-  default     = \"install.log\"\n-  description = \"Filename of the installation log for this service's configuration.\"\n-}\n-\n-variable \"remote_resource_dir\" {\n-  type        = \"string\"\n-  default     = \"/usr/share/terraform\"\n-  description = \"Base path to configuration scripts.\"\n-}\n-\n-variable \"connection_user\" {\n-  type        = \"string\"\n-  description = \"SSH username.\"\n-}\n-\n-variable \"connection_host\" {\n-  type        = \"string\"\n-  description = \"SSH remote host (IP or name).\"\n-}\n-\n-variable \"connection_private_key\" {\n-  sensitive   = true\n-  type        = \"string\"\n-  description = \"SSH RSA private key material. Not a path to a file.\"\n-}\n-\n-variable \"connection_port\" {\n-  type        = \"string\"\n-  default     = \"22\"\n-  description = \"SSH remote port.\"\n-}\n-\n-variable \"dpkg_timeout_s\" {\n-  type        = \"string\"\n-  default     = \"120\"\n-  description = \"Time to wait until dpkg lock is lifted.\"\n-}\n-\n-variable \"ntp_timezone\" {\n-  type        = \"string\"\n-  default     = \"America/Los_Angeles\"\n-  description = \"The timezone to set the system clock to.\"\n-}\n-\n-variable \"ntp_peers\" {\n-  type = \"list\"\n-\n-  default = [\"0.amazon.pool.ntp.org\",\n-    \"1.amazon.pool.ntp.org\",\n-    \"2.amazon.pool.ntp.org\",\n-    \"3.amazon.pool.ntp.org\",\n-  ]\n-\n-  description = \"Space-delimited list of ntp peer servers.\"\n-}"
      },
      {
        "filename": "provider-variables.tf",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+variable \"provider_credentials_path\" {\n+  type        = \"string\"\n+  default     = \"~/.config/google-cloud-compute/minecraft.json\"\n+  description = \"Path to credentials file for provider auth.\"\n+}\n+\n+variable \"provider_project_id\" {\n+  type        = \"string\"\n+  default     = \"minecraft-197021\"\n+  description = \"The project ID.\"\n+}"
      },
      {
        "filename": "provider.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n-provider \"aws\" {\n-  access_key = \"${var.aws_access_key}\"\n-  secret_key = \"${var.aws_secret_key}\"\n-  region     = \"${var.aws_region}\"\n+provider \"google\" {\n+  region      = \"${var.compute_region}\"\n+  project     = \"${var.provider_project_id}\"\n+  credentials = \"${file(\"${var.provider_credentials_path}\")}\"\n }"
      },
      {
        "filename": "ssh.tf",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "status": "removed",
        "patch": "@@ -1,4 +0,0 @@\n-resource \"aws_key_pair\" \"terraform\" {\n-  key_name   = \"${var.application_name}\"\n-  public_key = \"${var.ssh_public_key}\"\n-}"
      },
      {
        "filename": "storage.tf",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+resource \"google_compute_disk\" \"persistent\" {\n+  name  = \"${var.global_app_name}-persistent\"\n+  zone  = \"${data.google_compute_zones.available.names.0}\"\n+  size  = \"5\"\n+}"
      },
      {
        "filename": "terraform.tfstate",
        "additions": 365,
        "deletions": 0,
        "changes": 365,
        "status": "added",
        "patch": "@@ -0,0 +1,365 @@\n+{\n+    \"version\": 3,\n+    \"terraform_version\": \"0.11.3\",\n+    \"serial\": 23,\n+    \"lineage\": \"c2231ed3-77f8-4bf5-84d1-d97c111e8bdf\",\n+    \"modules\": [\n+        {\n+            \"path\": [\n+                \"root\"\n+            ],\n+            \"outputs\": {},\n+            \"resources\": {\n+                \"data.google_compute_image.base\": {\n+                    \"type\": \"google_compute_image\",\n+                    \"depends_on\": [],\n+                    \"primary\": {\n+                        \"id\": \"ubuntu-os-cloud/family/ubuntu-1604-lts\",\n+                        \"attributes\": {\n+                            \"archive_size_bytes\": \"5364076800\",\n+                            \"creation_timestamp\": \"2018-03-06T07:01:13.895-08:00\",\n+                            \"description\": \"Canonical, Ubuntu, 16.04 LTS, amd64 xenial image built on 2018-03-06\",\n+                            \"disk_size_gb\": \"10\",\n+                            \"family\": \"ubuntu-1604-lts\",\n+                            \"id\": \"ubuntu-os-cloud/family/ubuntu-1604-lts\",\n+                            \"image_encryption_key_sha256\": \"\",\n+                            \"label_fingerprint\": \"42WmSpB8rSM=\",\n+                            \"labels.%\": \"0\",\n+                            \"licenses.#\": \"1\",\n+                            \"licenses.0\": \"https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/licenses/ubuntu-1604-xenial\",\n+                            \"name\": \"ubuntu-1604-xenial-v20180306\",\n+                            \"project\": \"ubuntu-os-cloud\",\n+                            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20180306\",\n+                            \"source_disk\": \"\",\n+                            \"source_disk_encryption_key_sha256\": \"\",\n+                            \"source_disk_id\": \"\",\n+                            \"source_image_id\": \"\",\n+                            \"status\": \"READY\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.google\"\n+                },\n+                \"data.google_compute_zones.available\": {\n+                    \"type\": \"google_compute_zones\",\n+                    \"depends_on\": [],\n+                    \"primary\": {\n+                        \"id\": \"2018-03-08 04:57:42.668840166 +0000 UTC\",\n+                        \"attributes\": {\n+                            \"id\": \"2018-03-08 04:57:42.668840166 +0000 UTC\",\n+                            \"names.#\": \"3\",\n+                            \"names.0\": \"us-west1-a\",\n+                            \"names.1\": \"us-west1-b\",\n+                            \"names.2\": \"us-west1-c\",\n+                            \"region\": \"us-west1\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.google\"\n+                },\n+                \"data.http.public_ipv4\": {\n+                    \"type\": \"http\",\n+                    \"depends_on\": [],\n+                    \"primary\": {\n+                        \"id\": \"2018-03-08 04:57:41.984160516 +0000 UTC\",\n+                        \"attributes\": {\n+                            \"body\": \"69.181.226.59\\n\",\n+                            \"id\": \"2018-03-08 04:57:41.984160516 +0000 UTC\",\n+                            \"url\": \"http://icanhazip.com\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.http\"\n+                },\n+                \"google_compute_disk.persistent\": {\n+                    \"type\": \"google_compute_disk\",\n+                    \"depends_on\": [\n+                        \"data.google_compute_zones.available\"\n+                    ],\n+                    \"primary\": {\n+                        \"id\": \"minecraft-persistent\",\n+                        \"attributes\": {\n+                            \"id\": \"minecraft-persistent\",\n+                            \"image\": \"\",\n+                            \"label_fingerprint\": \"42WmSpB8rSM=\",\n+                            \"labels.%\": \"0\",\n+                            \"name\": \"minecraft-persistent\",\n+                            \"project\": \"minecraft-197021\",\n+                            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/zones/us-west1-a/disks/minecraft-persistent\",\n+                            \"size\": \"5\",\n+                            \"snapshot\": \"\",\n+                            \"type\": \"pd-standard\",\n+                            \"users.#\": \"1\",\n+                            \"users.0\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/zones/us-west1-a/instances/minecraft\",\n+                            \"zone\": \"us-west1-a\"\n+                        },\n+                        \"meta\": {\n+                            \"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\": {\n+                                \"create\": 300000000000,\n+                                \"delete\": 300000000000,\n+                                \"update\": 300000000000\n+                            }\n+                        },\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.google\"\n+                },\n+                \"google_compute_firewall.app\": {\n+                    \"type\": \"google_compute_firewall\",\n+                    \"depends_on\": [\n+                        \"module.minecraft\"\n+                    ],\n+                    \"primary\": {\n+                        \"id\": \"minecraft-app\",\n+                        \"attributes\": {\n+                            \"allow.#\": \"1\",\n+                            \"allow.1534240539.ports.#\": \"1\",\n+                            \"allow.1534240539.ports.0\": \"25565\",\n+                            \"allow.1534240539.protocol\": \"tcp\",\n+                            \"deny.#\": \"0\",\n+                            \"description\": \"\",\n+                            \"destination_ranges.#\": \"0\",\n+                            \"direction\": \"INGRESS\",\n+                            \"id\": \"minecraft-app\",\n+                            \"name\": \"minecraft-app\",\n+                            \"network\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/global/networks/default\",\n+                            \"priority\": \"1000\",\n+                            \"project\": \"minecraft-197021\",\n+                            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/global/firewalls/minecraft-app\",\n+                            \"source_ranges.#\": \"1\",\n+                            \"source_ranges.1080289494\": \"0.0.0.0/0\",\n+                            \"source_service_accounts.#\": \"0\",\n+                            \"source_tags.#\": \"0\",\n+                            \"target_service_accounts.#\": \"0\",\n+                            \"target_tags.#\": \"1\",\n+                            \"target_tags.894426373\": \"minecraft\"\n+                        },\n+                        \"meta\": {\n+                            \"schema_version\": \"1\"\n+                        },\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.google\"\n+                },\n+                \"google_compute_firewall.ssh\": {\n+                    \"type\": \"google_compute_firewall\",\n+                    \"depends_on\": [\n+                        \"data.http.public_ipv4\"\n+                    ],\n+                    \"primary\": {\n+                        \"id\": \"minecraft-ssh\",\n+                        \"attributes\": {\n+                            \"allow.#\": \"1\",\n+                            \"allow.803338340.ports.#\": \"1\",\n+                            \"allow.803338340.ports.0\": \"22\",\n+                            \"allow.803338340.protocol\": \"tcp\",\n+                            \"deny.#\": \"0\",\n+                            \"description\": \"\",\n+                            \"destination_ranges.#\": \"0\",\n+                            \"direction\": \"INGRESS\",\n+                            \"id\": \"minecraft-ssh\",\n+                            \"name\": \"minecraft-ssh\",\n+                            \"network\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/global/networks/default\",\n+                            \"priority\": \"1000\",\n+                            \"project\": \"minecraft-197021\",\n+                            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/global/firewalls/minecraft-ssh\",\n+                            \"source_ranges.#\": \"1\",\n+                            \"source_ranges.3108736435\": \"69.181.226.59\",\n+                            \"source_service_accounts.#\": \"0\",\n+                            \"source_tags.#\": \"0\",\n+                            \"target_service_accounts.#\": \"0\",\n+                            \"target_tags.#\": \"1\",\n+                            \"target_tags.894426373\": \"minecraft\"\n+                        },\n+                        \"meta\": {\n+                            \"schema_version\": \"1\"\n+                        },\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.google\"\n+                },\n+                \"google_compute_instance.minecraft\": {\n+                    \"type\": \"google_compute_instance\",\n+                    \"depends_on\": [\n+                        \"data.google_compute_image.base\",\n+                        \"data.google_compute_zones.available\",\n+                        \"google_compute_disk.persistent\",\n+                        \"null_resource.ssh_public_key\"\n+                    ],\n+                    \"primary\": {\n+                        \"id\": \"minecraft\",\n+                        \"attributes\": {\n+                            \"attached_disk.#\": \"1\",\n+                            \"attached_disk.0.device_name\": \"persistent-disk-1\",\n+                            \"attached_disk.0.disk_encryption_key_raw\": \"\",\n+                            \"attached_disk.0.disk_encryption_key_sha256\": \"\",\n+                            \"attached_disk.0.source\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/zones/us-west1-a/disks/minecraft-persistent\",\n+                            \"boot_disk.#\": \"1\",\n+                            \"boot_disk.0.auto_delete\": \"true\",\n+                            \"boot_disk.0.device_name\": \"persistent-disk-0\",\n+                            \"boot_disk.0.disk_encryption_key_raw\": \"\",\n+                            \"boot_disk.0.disk_encryption_key_sha256\": \"\",\n+                            \"boot_disk.0.initialize_params.#\": \"1\",\n+                            \"boot_disk.0.initialize_params.0.image\": \"https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20180306\",\n+                            \"boot_disk.0.initialize_params.0.size\": \"10\",\n+                            \"boot_disk.0.initialize_params.0.type\": \"pd-standard\",\n+                            \"boot_disk.0.source\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/zones/us-west1-a/disks/minecraft\",\n+                            \"can_ip_forward\": \"false\",\n+                            \"cpu_platform\": \"Intel Broadwell\",\n+                            \"create_timeout\": \"4\",\n+                            \"guest_accelerator.#\": \"0\",\n+                            \"id\": \"minecraft\",\n+                            \"instance_id\": \"4421427391860931790\",\n+                            \"label_fingerprint\": \"42WmSpB8rSM=\",\n+                            \"machine_type\": \"n1-standard-4\",\n+                            \"metadata.%\": \"1\",\n+                            \"metadata.ssh-keys\": \"ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC02ke3lI/aFoqa7Sf+GsuaTuYxXg7vzVw1Io1J8newPuxe88ewJHouxeJT5vCNtnsEjNl4N7mSDRzPGO0CreYlUxjrjuP91EWLNKiy9gF9SJOofjFdRs5RZXqlM2uG+OX22gitsY6iwt/9HjJPLbqyb7np1x9rL5euuutXUfOG9r4bgZLzJAcrqhA9liG/+PcyruJd5rS8vJIKncKol07UCgOTh7AZ+d5sxf/TIGEG9sMeVIfIpmhNcaztzWoo+lFb+lrzDaBIMuRo+0buj7NmOR62837IgyhYFGQUHrW7sMvww0Of4b+strPMPihtLG5mRGTzzlFbYhtnyrJFOKCF\\n\",\n+                            \"metadata_fingerprint\": \"t4kfWoPJVkg=\",\n+                            \"metadata_startup_script\": \"\",\n+                            \"min_cpu_platform\": \"\",\n+                            \"name\": \"minecraft\",\n+                            \"network_interface.#\": \"1\",\n+                            \"network_interface.0.access_config.#\": \"1\",\n+                            \"network_interface.0.access_config.0.assigned_nat_ip\": \"35.230.114.75\",\n+                            \"network_interface.0.access_config.0.nat_ip\": \"35.230.114.75\",\n+                            \"network_interface.0.address\": \"10.138.0.2\",\n+                            \"network_interface.0.alias_ip_range.#\": \"0\",\n+                            \"network_interface.0.name\": \"nic0\",\n+                            \"network_interface.0.network\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/global/networks/default\",\n+                            \"network_interface.0.network_ip\": \"10.138.0.2\",\n+                            \"network_interface.0.subnetwork\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/regions/us-west1/subnetworks/default\",\n+                            \"network_interface.0.subnetwork_project\": \"minecraft-197021\",\n+                            \"project\": \"minecraft-197021\",\n+                            \"scheduling.#\": \"1\",\n+                            \"scheduling.0.automatic_restart\": \"true\",\n+                            \"scheduling.0.on_host_maintenance\": \"MIGRATE\",\n+                            \"scheduling.0.preemptible\": \"false\",\n+                            \"scratch_disk.#\": \"0\",\n+                            \"self_link\": \"https://www.googleapis.com/compute/v1/projects/minecraft-197021/zones/us-west1-a/instances/minecraft\",\n+                            \"service_account.#\": \"1\",\n+                            \"service_account.0.email\": \"987902595805-compute@developer.gserviceaccount.com\",\n+                            \"service_account.0.scopes.#\": \"1\",\n+                            \"service_account.0.scopes.2862113455\": \"https://www.googleapis.com/auth/compute.readonly\",\n+                            \"tags.#\": \"1\",\n+                            \"tags.894426373\": \"minecraft\",\n+                            \"tags_fingerprint\": \"YTzQcRKKkWU=\",\n+                            \"zone\": \"us-west1-a\"\n+                        },\n+                        \"meta\": {\n+                            \"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\": {\n+                                \"create\": 360000000000,\n+                                \"delete\": 360000000000,\n+                                \"update\": 360000000000\n+                            },\n+                            \"schema_version\": \"6\"\n+                        },\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.google\"\n+                },\n+                \"null_resource.ssh_public_key\": {\n+                    \"type\": \"null_resource\",\n+                    \"depends_on\": [],\n+                    \"primary\": {\n+                        \"id\": \"7395705583123960542\",\n+                        \"attributes\": {\n+                            \"id\": \"7395705583123960542\",\n+                            \"triggers.%\": \"1\",\n+                            \"triggers.file_main_tf\": \"d03b1a382140d5709fa9fca45e193f69b8421c82\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.null\"\n+                }\n+            },\n+            \"depends_on\": []\n+        },\n+        {\n+            \"path\": [\n+                \"root\",\n+                \"aptdaemon\"\n+            ],\n+            \"outputs\": {},\n+            \"resources\": {\n+                \"null_resource.provisioner\": {\n+                    \"type\": \"null_resource\",\n+                    \"depends_on\": [],\n+                    \"primary\": {\n+                        \"id\": \"987953479469405490\",\n+                        \"attributes\": {\n+                            \"id\": \"987953479469405490\",\n+                            \"triggers.%\": \"4\",\n+                            \"triggers.host\": \"35.230.114.75\",\n+                            \"triggers.port\": \"22\",\n+                            \"triggers.private_key\": \"d03b1a382140d5709fa9fca45e193f69b8421c82\",\n+                            \"triggers.user\": \"ubuntu\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.null\"\n+                }\n+            },\n+            \"depends_on\": []\n+        },\n+        {\n+            \"path\": [\n+                \"root\",\n+                \"minecraft\"\n+            ],\n+            \"outputs\": {\n+                \"game_port\": {\n+                    \"sensitive\": false,\n+                    \"type\": \"string\",\n+                    \"value\": \"25565\"\n+                }\n+            },\n+            \"resources\": {\n+                \"null_resource.provisioner\": {\n+                    \"type\": \"null_resource\",\n+                    \"depends_on\": [],\n+                    \"primary\": {\n+                        \"id\": \"1773574284771047284\",\n+                        \"attributes\": {\n+                            \"id\": \"1773574284771047284\",\n+                            \"triggers.%\": \"15\",\n+                            \"triggers.connection_host\": \"35.230.114.75\",\n+                            \"triggers.connection_port\": \"22\",\n+                            \"triggers.connection_private_key\": \"d03b1a382140d5709fa9fca45e193f69b8421c82\",\n+                            \"triggers.connection_user\": \"ubuntu\",\n+                            \"triggers.generate_properties_sh\": \"5f7668d12f4df48f686643a2db126b9c19537f39\",\n+                            \"triggers.install_minecraft_sh\": \"a13926041cd6eeced05827d95e53069f94d3625d\",\n+                            \"triggers.main_tf\": \"a1f3b434f6983315958a5882d3e56d4d221ca6d1\",\n+                            \"triggers.minecraft_backup_enabled\": \"true\",\n+                            \"triggers.minecraft_data_subdir\": \"world\",\n+                            \"triggers.minecraft_data_symlink\": \"/minecraft/world\",\n+                            \"triggers.minecraft_download_url\": \"https://media.forgecdn.net/files/2533/332/FTBRevelationServer_1.6.0.zip\",\n+                            \"triggers.minecraft_port\": \"25565\",\n+                            \"triggers.module_install_basedir\": \"/var/lib\",\n+                            \"triggers.provision_sh\": \"54921a6f64a858a46c7bb76cf2c5bc7ddab4afca\",\n+                            \"triggers.variables_tf\": \"27d458930d25ca66814b5110e27b8c0468a452d5\"\n+                        },\n+                        \"meta\": {},\n+                        \"tainted\": false\n+                    },\n+                    \"deposed\": [],\n+                    \"provider\": \"provider.null\"\n+                }\n+            },\n+            \"depends_on\": []\n+        }\n+    ]\n+}"
      }
    ],
    "existing_codes": [
      "saving",
      "provider"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/miiingle/infrastructure/commit/3210c2185c0a554fa8b5aed45e7daa2c861954ce",
    "files": [
      {
        "filename": "shared/ci/ci_codebuild.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -13,8 +13,8 @@ resource \"aws_codebuild_project\" \"user_api\" {\n   }\n \n   environment {\n-    compute_type                = \"BUILD_GENERAL1_2XLARGE\"\n-    image                       = \"aws/codebuild/standard:5.0\"\n+    compute_type                = \"BUILD_GENERAL1_LARGE\"\n+    image                       = \"aws/codebuild/amazonlinux2-x86_64-standard:3.0\"\n     type                        = \"LINUX_CONTAINER\"\n     image_pull_credentials_type = \"CODEBUILD\"\n     privileged_mode             = true"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness",
      "increase"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/chapas/tf-az-kubernetes/commit/bcc6e190b8f8a12b590089fb755c4f552f179ad0",
    "files": [
      {
        "filename": "README.md",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -46,10 +46,11 @@ These are the variables used along with their defaults. For any without a value\n |location|The location of this deployment|UK South|\n |resource_prefix|A prefix for the name of the resource, used to generate the resource names|kubernetes|\n |tags|Tags given to the resources created by this template|{}|\n-|enable_acr|Flag used to enable ACR|true|\n+|enable_acr|Flag used to enable ACR|false|\n |acr_sku|SKU of the ACR|Basic|\n-|acr_admin_enabled|Flag used to enable ACR Admin|true|\n+|acr_admin_enabled|Flag used to enable ACR Admin|false|\n |aks_kubernetes_version|Version of Kubernetes to use in the cluster|null|\n+|enable_aks_la_monitoring||Flag used to enable Log Analytics|false|\n |enable_aks_aad_rbac|Flag used to enable AAD RBAC integration|false|\n |aks_aad_client_app_id|App ID of the client application used for AAD RBAC|null|\n |aks_aad_server_app_id|App ID of the server application used for AAD RBAC|null|"
      },
      {
        "filename": "main.tf",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "status": "modified",
        "patch": "@@ -92,7 +92,9 @@ resource \"azurerm_role_assignment\" \"main_acr_pull\" {\n \n ## Monitoring\n resource \"azurerm_log_analytics_workspace\" \"main\" {\n-  name                = \"${local.resource_prefix}-oms\"\n+  count = var.enable_aks_la_monitoring ? 1 : 0\n+\n+  name                = \"${local.resource_prefix}-la\"\n   resource_group_name = azurerm_resource_group.main.name\n   location            = azurerm_resource_group.main.location\n   tags                = local.tags\n@@ -102,9 +104,9 @@ resource \"azurerm_log_analytics_workspace\" \"main\" {\n }\n \n resource \"azurerm_role_assignment\" \"main_oms_readers\" {\n-  for_each = local.aad_kubernetes_groups\n+  for_each = var.enable_aks_la_monitoring ? local.aad_kubernetes_groups : {}\n \n-  scope                = azurerm_log_analytics_workspace.main.id\n+  scope                = azurerm_log_analytics_workspace.main[0].id\n   role_definition_name = \"Reader\"\n   principal_id         = azuread_group.main[each.key].id\n }\n@@ -190,8 +192,8 @@ resource \"azurerm_kubernetes_cluster\" \"main\" {\n     }\n \n     oms_agent {\n-      enabled                    = true\n-      log_analytics_workspace_id = azurerm_log_analytics_workspace.main.id\n+      enabled = var.enable_aks_la_monitoring\n+      log_analytics_workspace_id = var.enable_aks_la_monitoring ? azurerm_log_analytics_workspace.main[0].id : null\n     }\n   }\n \n@@ -239,9 +241,11 @@ data \"azurerm_monitor_diagnostic_categories\" \"main_aks\" {\n }\n \n resource \"azurerm_monitor_diagnostic_setting\" \"main_aks\" {\n+  count = var.enable_aks_la_monitoring ? 1 : 0\n+\n   name                       = local.resource_prefix\n   target_resource_id         = azurerm_kubernetes_cluster.main.id\n-  log_analytics_workspace_id = azurerm_log_analytics_workspace.main.id\n+  log_analytics_workspace_id = azurerm_log_analytics_workspace.main[0].id\n \n   dynamic log {\n     for_each = data.azurerm_monitor_diagnostic_categories.main_aks.logs"
      },
      {
        "filename": "variables.tf",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -46,7 +46,7 @@ variable \"tags\" {\n variable \"enable_acr\" {\n   description = \"Flag used to enable ACR\"\n   type        = bool\n-  default     = true\n+  default     = false\n }\n \n variable \"acr_sku\" {\n@@ -58,7 +58,7 @@ variable \"acr_sku\" {\n variable \"acr_admin_enabled\" {\n   description = \"Flag used to enable ACR Admin\"\n   type        = bool\n-  default     = true\n+  default     = false\n }\n \n ## AKS Cluster\n@@ -69,6 +69,12 @@ variable \"aks_kubernetes_version\" {\n   default     = null\n }\n \n+variable \"enable_aks_la_monitoring\" {\n+  description = \"Flag used to enable Log Analytics\"\n+  type        = string\n+  default     = false\n+}\n+\n variable \"enable_aks_aad_rbac\" {\n   description = \"Flag used to enable AAD RBAC Integration\"\n   type        = bool"
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/nagpach/terraform-example-aws-vpc/commit/35d26fd046185ae079e09fa6435c41ae685e679e",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -2,7 +2,7 @@ module \"aws_vpc\" {\n   source                    = \"./modules/aws_vpc\"\n   cidr_block                = \"${var.vpc_cidr_block}\"\n   gateway_enabled           = true\n-  nat_enabled               = true\n+  nat_enabled               = false\n   private_subnets           = \"${var.vpc_private_subnets}\"\n   public_subnets            = \"${var.vpc_public_subnets}\"\n   subnet_availability_zones = [\"${var.aws_availability_zones}\"]"
      }
    ],
    "existing_codes": [
      "networking",
      "saving",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/pelias/terraform-elasticsearch/commit/21c1827f4507eae217d43d99ad8cb1bbb1337e21",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -28,16 +28,16 @@ variable \"aws_vpc_id\" {\n \n # Autoscaling Group Settings\n \n-# r3.xlarge is a good economic default for full planet builds\n+# r4.xlarge is a good economic default for full planet builds\n # for more performance, use c4.4xlarge or similar. High throughput\n # geocoders really love having lots of CPU available\n variable \"elasticsearch_instance_type\" {\n   description = \"Elasticsearch instance type.\"\n-  default = \"r3.xlarge\"\n+  default = \"r4.xlarge\"\n }\n \n # Elasticsearch ASG instance counts\n-# a minimum of 5 r3.xlarge instances is needed for a full planet build\n+# a minimum of 5 r4.xlarge instances is needed for a full planet build\n variable \"elasticsearch_min_instances\" {\n   description = \"total instances\"\n   default = \"5\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/pelias/terraform-elasticsearch/commit/8454c8ee25e821abde10b73a2fec691269e41822",
    "files": [
      {
        "filename": "variables.tf",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -31,36 +31,36 @@ variable \"ssh_ip_range\" {\n \n # Autoscaling Group Settings\n \n-# r4.xlarge is a good economic default for full planet builds\n-# for more performance, use c4.4xlarge or similar. High throughput\n+# t3.large is a good economic default for low volume full planet builds\n+# for more performance, use m5.2xlarge, c5.2xlarge or similar. High throughput\n # geocoders really love having lots of CPU available\n variable \"elasticsearch_instance_type\" {\n   description = \"Elasticsearch instance type.\"\n-  default     = \"r4.xlarge\"\n+  default     = \"t3.large\"\n }\n \n # Elasticsearch ASG instance counts\n-# a minimum of 5 r4.xlarge instances is needed for a full planet build\n+# a full planet build can run on a single node, but 2 is better\n variable \"elasticsearch_min_instances\" {\n   description = \"total instances\"\n-  default     = \"5\"\n+  default     = \"2\"\n }\n \n variable \"elasticsearch_desired_instances\" {\n   description = \"total instances\"\n-  default     = \"5\"\n+  default     = \"2\"\n }\n \n variable \"elasticsearch_max_instances\" {\n   description = \"total instances\"\n-  default     = \"5\"\n+  default     = \"2\"\n }\n \n # higher values here tune elasticsearch for use on smaller clusters\n # lower values give better performance if there is lots of RAM available\n variable \"elasticsearch_heap_memory_percent\" {\n   description = \"Elasticsearch heap size as a percent of system RAM\"\n-  default     = \"60\"\n+  default     = \"30\"\n }\n \n ## Launch Configuration settings\n@@ -70,7 +70,7 @@ variable \"elasticsearch_root_volume_size\" {\n }\n \n variable \"elasticsearch_data_volume_size\" {\n-  default = \"200\"\n+  default = \"300\"\n }\n \n variable \"elasticsearch_log_volume_size\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "cluster"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ironpeakservices/infrastructure/commit/2ca24fa9114b5b4389768d5ab93c1e6d99bb287c",
    "files": [
      {
        "filename": "modules/scaleway/variables.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -13,7 +13,7 @@ variable k8s_version {\n }\n \n variable node_type {\n-    default = \"GP1-XS\"\n+    default = \"DEV1-M\"\n }\n \n variable node_default_count {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/scirner22/provenance-infra/commit/599aa2776677bcf05ebf5f6377a2eb82f5d2220c",
    "files": [
      {
        "filename": "infrastructure/asg.tf",
        "additions": 121,
        "deletions": 154,
        "changes": 275,
        "status": "modified",
        "patch": "@@ -30,91 +30,63 @@\n # Problem - we need a custom user data script that will attach the associated EBS from the pool because\n # typical ASGs aren't setup to attach to persistent volumes.\n \n-resource \"aws_instance\" \"public_sentinel_1\" {\n-  ami = \"ami-04893c9535825d595\"\n-  instance_type = \"m5.xlarge\"\n-\n-  ebs_optimized = true\n-  root_block_device {\n-    delete_on_termination = true\n-\n-    volume_type = \"gp2\"\n-    volume_size = 1000\n-  }\n-\n-  key_name = aws_key_pair.ssh.id\n-\n-  # TODO add user_data/public_sentinel.sh to all public sentinels\n-\n-  subnet_id = aws_subnet.main_a_public.id\n-  vpc_security_group_ids = [\n-    aws_security_group.allow_personal_ssh.id,\n-    aws_security_group.allow_external_cosmos.id,\n-    aws_security_group.allow_internal_cosmos.id,\n-    aws_security_group.allow_outbound_internet_access.id,\n-  ]\n-\n-  tags = {\n-    Name = \"public_sentinel_1\"\n-    Environment = \"mainnet\"\n-  }\n-}\n-\n-resource \"aws_instance\" \"public_sentinel_2\" {\n-  ami = \"ami-04893c9535825d595\"\n-  instance_type = \"m5.xlarge\"\n-\n-  ebs_optimized = true\n-  root_block_device {\n-    delete_on_termination = true\n-\n-    volume_type = \"gp2\"\n-    volume_size = 1000\n-  }\n-\n-  key_name = aws_key_pair.ssh.id\n-\n-  subnet_id = aws_subnet.main_b_public.id\n-  vpc_security_group_ids = [\n-    aws_security_group.allow_personal_ssh.id,\n-    aws_security_group.allow_external_cosmos.id,\n-    aws_security_group.allow_internal_cosmos.id,\n-    aws_security_group.allow_outbound_internet_access.id,\n-  ]\n-\n-  tags = {\n-    Name = \"public_sentinel_2\"\n-    Environment = \"mainnet\"\n-  }\n-}\n-\n-resource \"aws_instance\" \"public_sentinel_3\" {\n-  ami = \"ami-04893c9535825d595\"\n-  instance_type = \"m5.xlarge\"\n-\n-  ebs_optimized = true\n-  root_block_device {\n-    delete_on_termination = true\n-\n-    volume_type = \"gp2\"\n-    volume_size = 1000\n-  }\n-\n-  key_name = aws_key_pair.ssh.id\n-\n-  subnet_id = aws_subnet.main_c_public.id\n-  vpc_security_group_ids = [\n-    aws_security_group.allow_personal_ssh.id,\n-    aws_security_group.allow_external_cosmos.id,\n-    aws_security_group.allow_internal_cosmos.id,\n-    aws_security_group.allow_outbound_internet_access.id,\n-  ]\n+# resource \"aws_instance\" \"public_sentinel_1\" {\n+#   ami = \"ami-04893c9535825d595\"\n+#   instance_type = \"m5.xlarge\"\n+# \n+#   ebs_optimized = true\n+#   root_block_device {\n+#     delete_on_termination = true\n+# \n+#     volume_type = \"gp2\"\n+#     volume_size = 1000\n+#   }\n+# \n+#   key_name = aws_key_pair.ssh.id\n+# \n+#   # TODO add user_data/public_sentinel.sh to all public sentinels\n+# \n+#   subnet_id = aws_subnet.main_a_public.id\n+#   vpc_security_group_ids = [\n+#     aws_security_group.allow_personal_ssh.id,\n+#     aws_security_group.allow_external_cosmos.id,\n+#     aws_security_group.allow_internal_cosmos.id,\n+#     aws_security_group.allow_outbound_internet_access.id,\n+#   ]\n+# \n+#   tags = {\n+#     Name = \"public_sentinel_1\"\n+#     Environment = \"mainnet\"\n+#   }\n+# }\n \n-  tags = {\n-    Name = \"public_sentinel_3\"\n-    Environment = \"mainnet\"\n-  }\n-}\n+# resource \"aws_instance\" \"public_sentinel_2\" {\n+#   ami = \"ami-04893c9535825d595\"\n+#   instance_type = \"m5.xlarge\"\n+# \n+#   ebs_optimized = true\n+#   root_block_device {\n+#     delete_on_termination = true\n+# \n+#     volume_type = \"gp2\"\n+#     volume_size = 1000\n+#   }\n+# \n+#   key_name = aws_key_pair.ssh.id\n+# \n+#   subnet_id = aws_subnet.main_b_public.id\n+#   vpc_security_group_ids = [\n+#     aws_security_group.allow_personal_ssh.id,\n+#     aws_security_group.allow_external_cosmos.id,\n+#     aws_security_group.allow_internal_cosmos.id,\n+#     aws_security_group.allow_outbound_internet_access.id,\n+#   ]\n+# \n+#   tags = {\n+#     Name = \"public_sentinel_2\"\n+#     Environment = \"mainnet\"\n+#   }\n+# }\n \n resource \"aws_instance\" \"bastion\" {\n   ami = \"ami-011899242bb902164\"\n@@ -141,79 +113,73 @@ resource \"aws_eip_association\" \"eip_assoc_bastion\" {\n   allocation_id = aws_eip.bastion.id\n }\n \n-resource \"aws_eip_association\" \"eip_assoc_public_sentinel_1\" {\n-  instance_id   = aws_instance.public_sentinel_1.id\n-  allocation_id = aws_eip.ip_a.id\n-}\n-\n-resource \"aws_eip_association\" \"eip_assoc_public_sentinel_2\" {\n-  instance_id   = aws_instance.public_sentinel_2.id\n-  allocation_id = aws_eip.ip_b.id\n-}\n-\n-resource \"aws_eip_association\" \"eip_assoc_public_sentinel_3\" {\n-  instance_id   = aws_instance.public_sentinel_3.id\n-  allocation_id = aws_eip.ip_c.id\n-}\n-\n-\n-resource \"aws_instance\" \"private_sentinel_1\" {\n-  ami = \"ami-04893c9535825d595\"\n-  instance_type = \"m5.xlarge\"\n-\n-  ebs_optimized = true\n-  root_block_device {\n-    delete_on_termination = false\n-\n-    volume_type = \"gp2\"\n-    volume_size = 1000\n-  }\n-\n-  key_name = aws_key_pair.ssh.id\n-\n-  subnet_id = aws_subnet.main_a_private.id\n-  vpc_security_group_ids = [\n-    aws_security_group.allow_internal_ssh.id,\n-    aws_security_group.allow_internal_cosmos.id,\n-    aws_security_group.allow_outbound_internet_access.id,\n-  ]\n-\n-  user_data = file(\"user_data/private_sentinel.sh\")\n-\n-  tags = {\n-    Name = \"private_sentinel_1\"\n-    Environment = \"mainnet\"\n-  }\n-}\n-\n-resource \"aws_instance\" \"private_sentinel_2\" {\n-  ami = \"ami-04893c9535825d595\"\n-  instance_type = \"m5.xlarge\"\n-\n-  ebs_optimized = true\n-  root_block_device {\n-    delete_on_termination = false\n-\n-    volume_type = \"gp2\"\n-    volume_size = 1000\n-  }\n-\n-  key_name = aws_key_pair.ssh.id\n+# resource \"aws_eip_association\" \"eip_assoc_public_sentinel_1\" {\n+#   instance_id   = aws_instance.public_sentinel_1.id\n+#   allocation_id = aws_eip.ip_a.id\n+# }\n \n-  subnet_id = aws_subnet.main_b_private.id\n-  vpc_security_group_ids = [\n-    aws_security_group.allow_internal_ssh.id,\n-    aws_security_group.allow_internal_cosmos.id,\n-    aws_security_group.allow_outbound_internet_access.id,\n-  ]\n+# resource \"aws_eip_association\" \"eip_assoc_public_sentinel_2\" {\n+#   instance_id   = aws_instance.public_sentinel_2.id\n+#   allocation_id = aws_eip.ip_b.id\n+# }\n \n-  user_data = file(\"user_data/private_sentinel.sh\")\n+# resource \"aws_instance\" \"private_sentinel_1\" {\n+#   ami = \"ami-04893c9535825d595\"\n+#   instance_type = \"m5.xlarge\"\n+# \n+#   ebs_optimized = true\n+#   root_block_device {\n+#     delete_on_termination = false\n+# \n+#     volume_type = \"gp2\"\n+#     volume_size = 1000\n+#   }\n+# \n+#   key_name = aws_key_pair.ssh.id\n+# \n+#   subnet_id = aws_subnet.main_a_private.id\n+#   vpc_security_group_ids = [\n+#     aws_security_group.allow_internal_ssh.id,\n+#     aws_security_group.allow_internal_cosmos.id,\n+#     aws_security_group.allow_outbound_internet_access.id,\n+#   ]\n+# \n+#   user_data = file(\"user_data/private_sentinel.sh\")\n+# \n+#   tags = {\n+#     Name = \"private_sentinel_1\"\n+#     Environment = \"mainnet\"\n+#   }\n+# }\n \n-  tags = {\n-    Name = \"private_sentinel_2\"\n-    Environment = \"mainnet\"\n-  }\n-}\n+# resource \"aws_instance\" \"private_sentinel_2\" {\n+#   ami = \"ami-04893c9535825d595\"\n+#   instance_type = \"m5.xlarge\"\n+# \n+#   ebs_optimized = true\n+#   root_block_device {\n+#     delete_on_termination = false\n+# \n+#     volume_type = \"gp2\"\n+#     volume_size = 1000\n+#   }\n+# \n+#   key_name = aws_key_pair.ssh.id\n+# \n+#   subnet_id = aws_subnet.main_b_private.id\n+#   vpc_security_group_ids = [\n+#     aws_security_group.allow_internal_ssh.id,\n+#     aws_security_group.allow_internal_cosmos.id,\n+#     aws_security_group.allow_outbound_internet_access.id,\n+#   ]\n+# \n+#   user_data = file(\"user_data/private_sentinel.sh\")\n+# \n+#   tags = {\n+#     Name = \"private_sentinel_2\"\n+#     Environment = \"mainnet\"\n+#   }\n+# }\n \n resource \"aws_instance\" \"validator\" {\n   ami = \"ami-04893c9535825d595\"\n@@ -233,6 +199,7 @@ resource \"aws_instance\" \"validator\" {\n   vpc_security_group_ids = [\n     aws_security_group.allow_internal_ssh.id,\n     aws_security_group.allow_internal_cosmos.id,\n+    aws_security_group.allow_strict_external_cosmos.id,\n     aws_security_group.allow_tmkms.id,\n     aws_security_group.allow_outbound_internet_access.id,\n   ]"
      },
      {
        "filename": "infrastructure/sec_group.tf",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "status": "modified",
        "patch": "@@ -125,6 +125,23 @@ resource \"aws_security_group\" \"allow_external_cosmos\" {\n   }\n }\n \n+resource \"aws_security_group\" \"allow_strict_external_cosmos\" {\n+  name = \"allow_strict_external_cosmos\"\n+  description = \"Allow internal nodes access to external cosmos nodes\"\n+  vpc_id = aws_vpc.main.id\n+\n+  egress {\n+    from_port = 26656\n+    to_port = 26657\n+    protocol = \"tcp\"\n+    cidr_blocks = [\"0.0.0.0/0\"]\n+  }\n+\n+  tags = {\n+    Name = \"allow_strict_external_cosmos\"\n+  }\n+}\n+\n resource \"aws_security_group\" \"allow_outbound_internet_access\" {\n   name = \"allow_outbound_internet_access\"\n   description = \"Allow all outbound to the internet\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/appbricks/cloud-inceptor/commit/782a0a3c30cf83bcaeacc942789ccc903576fe8a",
    "files": [
      {
        "filename": "examples/inceptor/aws/main.tf",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -37,9 +37,11 @@ module \"bootstrap\" {\n   vpc_name = \"inceptor-${data.aws_region.default.name}\"\n   vpc_cidr = local.vpc_cidr\n \n+  configure_admin_network = var.configure_admin_network\n+\n   # DNS Name for VPC will be 'test-<region>.aws.appbricks.io'\n   vpc_dns_zone    = \"test-${data.aws_region.default.name}.aws.appbricks.io\"\n-  attach_dns_zone = var.bastion_use_fqdn\n+  attach_dns_zone = var.attach_dns_zone\n \n   # Local DNS zone. This could also be the same as the public\n   # which will enable setting up a split DNS of the public zone"
      },
      {
        "filename": "examples/inceptor/aws/vars.tf",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -45,6 +45,18 @@ variable \"bastion_image_owner\" {\n   type = string\n }\n \n+#\n+# Networking\n+#\n+\n+variable \"attach_dns_zone\" {\n+  type = string\n+}\n+\n+variable \"configure_admin_network\" {\n+  type = string\n+}\n+\n #\n # Distinct CIDR for VPCs by region\n #"
      },
      {
        "filename": "modules/bastion-config/bastion.tf",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -12,8 +12,6 @@ resource \"tls_private_key\" \"bastion-ssh-key\" {\n #\n \n locals {\n-  bastion_internal_ip = length(var.bastion_admin_itf_ip) > 0 ? var.bastion_admin_itf_ip : var.bastion_dmz_itf_ip\n-\n   admin_email = \"${var.bastion_admin_user}@${var.vpc_dns_zone}\"\n \n   # Create shorter email key if it is too long when \n@@ -114,7 +112,7 @@ server:\n   certify_bastion: ${var.certify_bastion ? \"yes\" : \"no\"}\n   dmz_itf_ip: '${var.bastion_dmz_itf_ip}'\n   lan_interfaces: '${join(\",\", var.bastion_nic_config)}'\n-  dns_resolvers: '${length(var.bastion_dns) == 0 ? local.bastion_internal_ip: var.bastion_dns}'\n+  dns_resolvers: '${length(var.bastion_dns) == 0 ? var.bastion_admin_itf_ip : var.bastion_dns}'\n   enable_dhcpd: ${var.enable_bastion_as_dhcpd}\n   admin_ssh_port: ${var.bastion_admin_ssh_port}\n   admin_user: '${var.bastion_admin_user}'\n@@ -131,14 +129,14 @@ powerdns:\n   dns_zones: '${join(\" \", var.vpc_internal_dns_zones)}'\n   dns_records: '${join(\" \", var.vpc_internal_dns_records)}'\n   allowed_subnets: '${var.vpc_cidr},${var.vpn_network}'\n-  ns_ip: '${local.bastion_internal_ip}'\n+  ns_ip: '${var.bastion_admin_itf_ip}'\n   api_key: '${random_string.powerdns-api-key.result}'\n \n smtp:\n   relay_host: '${var.smtp_relay_host}'\n   relay_port: ${var.smtp_relay_port}\n   relay_api_key: '${var.smtp_relay_api_key}'\n-  internal_smtp_host: '${local.bastion_internal_ip}'\n+  internal_smtp_host: '${var.bastion_admin_itf_ip}'\n   internal_smtp_port: 2525\n   networks: '172.16.0.0/12 ${var.vpc_cidr} ${var.bastion_public_ip}'\n \n@@ -164,7 +162,7 @@ vpn:\n     port_end: ${var.tunnel_vpn_port_end}\n   wireguard:\n     itf_name: 'wg0'\n-    host_ip: '${local.bastion_internal_ip}'\n+    host_ip: '${var.bastion_admin_itf_ip}'\n     listen_port: ${var.wireguard_service_port}\n     subnet_ip: '${var.wireguard_subnet_ip}'\n   vpn_cert:"
      },
      {
        "filename": "modules/bastion-config/certs.tf",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -49,11 +49,15 @@ resource \"tls_cert_request\" \"bastion\" {\n     var.bastion_fqdn\n   ]\n \n-  ip_addresses = [\n-    var.bastion_public_ip,\n-    var.bastion_dmz_itf_ip,\n-    var.bastion_admin_itf_ip,\n-  ]\n+  ip_addresses = concat(\n+    [\n+      var.bastion_dmz_itf_ip,\n+      var.bastion_admin_itf_ip,\n+    ],\n+    length(regexall(\"^[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}$\", var.bastion_public_ip)) > 0\n+      ? [ var.bastion_public_ip ]\n+      : []\n+  )\n \n   subject {\n     common_name         = var.bastion_fqdn"
      },
      {
        "filename": "modules/bootstrap/aws/__inputs.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -180,6 +180,13 @@ variable \"bastion_as_nat\" {\n   default = true\n }\n \n+#\n+# Configure admin network segment.\n+#\n+variable \"configure_admin_network\" {\n+  default = false\n+}\n+\n #\n # Certify bastion host using letsencrypt certificates\n #"
      },
      {
        "filename": "modules/bootstrap/aws/__outputs.tf",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -62,15 +62,19 @@ output \"bastion_instance_id\" {\n }\n \n output \"bastion_public_ip\" {\n-  value = aws_eip.bastion-public.public_ip\n+  value = aws_instance.bastion.public_ip\n }\n \n output \"bastion_admin_ip\" {\n   value = local.bastion_admin_itf_ip\n }\n \n output \"bastion_fqdn\" {\n-  value = var.attach_dns_zone ? aws_route53_record.vpc-external[0].name : \"\"\n+  value = (\n+    var.attach_dns_zone \n+      ? aws_route53_record.vpc-external[0].name \n+      : aws_instance.bastion.public_dns\n+  )\n }\n \n output \"bastion_admin_fqdn\" {"
      },
      {
        "filename": "modules/bootstrap/aws/bastion.tf",
        "additions": 34,
        "deletions": 12,
        "changes": 46,
        "status": "modified",
        "patch": "@@ -17,9 +17,12 @@ resource \"aws_instance\" \"bastion\" {\n     network_interface_id = aws_network_interface.bastion-dmz.id\n     device_index         = 0\n   }\n-  network_interface {\n-    network_interface_id = aws_network_interface.bastion-admin.id\n-    device_index         = 1\n+  dynamic \"network_interface\" {\n+    for_each = var.configure_admin_network ? [1] : []\n+    content {\n+      network_interface_id = aws_network_interface.bastion-admin[0].id\n+      device_index         = 1\n+    }\n   }\n \n   tags = {\n@@ -77,7 +80,11 @@ data \"aws_ami\" \"bastion\" {\n \n locals {\n   bastion_dmz_itf_ip   = cidrhost(aws_subnet.dmz[0].cidr_block, -3)\n-  bastion_admin_itf_ip = cidrhost(aws_subnet.admin[0].cidr_block, -3)\n+  bastion_admin_itf_ip = (\n+    var.configure_admin_network\n+      ? cidrhost(aws_subnet.admin[0].cidr_block, -3)\n+      : local.bastion_dmz_itf_ip\n+  )\n }\n \n resource \"aws_network_interface\" \"bastion-dmz\" {\n@@ -90,14 +97,11 @@ resource \"aws_network_interface\" \"bastion-dmz\" {\n   }\n }\n \n-resource \"aws_eip_association\" \"bastion\" {\n-  network_interface_id = aws_network_interface.bastion-dmz.id\n-  allocation_id        = aws_eip.bastion-public.id\n-}\n-\n resource \"aws_network_interface\" \"bastion-admin\" {\n-  subnet_id       = aws_subnet.admin[0].id\n-  private_ips     = [local.bastion_admin_itf_ip]\n+  count = var.configure_admin_network ? 1 : 0\n+\n+  subnet_id   = aws_subnet.admin[0].id\n+  private_ips = [local.bastion_admin_itf_ip]\n \n   # Enable traffic not destined \n   # for bastion to pass through\n@@ -109,15 +113,33 @@ resource \"aws_network_interface\" \"bastion-admin\" {\n }\n \n resource \"aws_network_interface_sg_attachment\" \"bastion-admin\" {\n-  network_interface_id = aws_network_interface.bastion-admin.id\n+\n+  network_interface_id = (\n+    var.configure_admin_network \n+      ? aws_network_interface.bastion-admin[0].id\n+      : aws_network_interface.bastion-dmz.id\n+  )\n   security_group_id    = (\n     var.bastion_as_nat \n       ? aws_security_group.internal.id \n       : aws_security_group.bastion-private.id\n   )\n }\n \n+#\n+# Static external IP - created when admin network segment is configured\n+#\n+\n+resource \"aws_eip_association\" \"bastion\" {\n+  count = var.configure_admin_network ? 1 : 0\n+\n+  network_interface_id = aws_network_interface.bastion-dmz.id\n+  allocation_id        = aws_eip.bastion-public[0].id\n+}\n+\n resource \"aws_eip\" \"bastion-public\" {\n+  count = var.configure_admin_network ? 1 : 0\n+\n   vpc = true\n \n   tags = {"
      },
      {
        "filename": "modules/bootstrap/aws/config.tf",
        "additions": 45,
        "deletions": 19,
        "changes": 64,
        "status": "modified",
        "patch": "@@ -34,32 +34,44 @@ module \"config\" {\n   vpc_internal_dns_records = concat(var.vpc_internal_dns_records, tolist([local.jumpbox_dns_record]))\n \n   certify_bastion   = var.certify_bastion\n-  bastion_fqdn      = var.vpc_dns_zone\n+  bastion_fqdn      = local.bastion_fqdn\n   bastion_use_fqdn  = var.bastion_use_fqdn\n-  bastion_public_ip = aws_eip.bastion-public.public_ip\n+  bastion_public_ip = local.bastion_public_ip\n \n   bastion_dns = length(var.bastion_dns) == 0 ? cidrhost(var.vpc_cidr, 2): var.bastion_dns\n \n   bastion_dmz_itf_ip   = local.bastion_dmz_itf_ip\n   bastion_admin_itf_ip = local.bastion_admin_itf_ip\n \n-  bastion_nic_config = [\n-    join(\"|\", \n-      tolist([\n-        \"\", // AWS will assign static IP via DHCP\n-        aws_subnet.dmz[0].cidr_block,\n-        \"0.0.0.0/0\"\n-      ]),\n-    ),\n-    join(\"|\", \n-      tolist([\n-        local.bastion_admin_itf_ip, \n-        aws_subnet.admin[0].cidr_block,\n-        length(var.global_internal_cidr) == 0 ? var.vpc_cidr : var.global_internal_cidr,\n-        cidrhost(aws_subnet.admin[0].cidr_block, 1)\n-      ])\n-    ),\n-  ]\n+  bastion_nic_config = (\n+    var.configure_admin_network\n+      ? [ \n+          join(\"|\", \n+            tolist([\n+              \"\", // AWS will assign static IP via DHCP\n+              aws_subnet.dmz[0].cidr_block,\n+              \"0.0.0.0/0\"\n+            ]),\n+          ),\n+          join(\"|\", \n+            tolist([\n+              local.bastion_admin_itf_ip, \n+              aws_subnet.admin[0].cidr_block,\n+              length(var.global_internal_cidr) == 0 ? var.vpc_cidr : var.global_internal_cidr,\n+              cidrhost(aws_subnet.admin[0].cidr_block, 1)\n+            ])\n+          ) \n+        ]\n+      : [ \n+          join(\"|\", \n+            tolist([\n+              \"\", // AWS will assign static IP via DHCP\n+              aws_subnet.dmz[0].cidr_block,\n+              \"0.0.0.0/0\"\n+            ]),\n+          ) \n+        ]\n+  )\n \n   data_volume_name = var.bastion_data_disk_device_name\n \n@@ -135,4 +147,18 @@ locals {\n       ? \"${cidrhost(var.vpn_network, 1)}/${split(\"/\", var.vpn_network)[1]}\"\n       : \"${cidrhost(var.wireguard_mesh_network, var.wireguard_mesh_node)}/${split(\"/\", var.wireguard_mesh_network)[1]}\"\n   )\n+  # If the bastion has been allocated an elastic IP then \n+  # return that. Otherwise pass an indicator in the field\n+  # so the bastion startup script can attempt to introspect\n+  # its externally facing Ip.\n+  bastion_public_ip = (\n+    var.configure_admin_network\n+      ? aws_eip.bastion-public[0].public_ip\n+      : \"aws\"      \n+  )\n+  bastion_fqdn = (\n+    var.attach_dns_zone\n+      ? var.vpc_dns_zone\n+      : \"aws\"\n+  )\n }"
      },
      {
        "filename": "modules/bootstrap/aws/dns.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -66,7 +66,7 @@ resource \"aws_route53_record\" \"vpc-external\" {\n   type = \"A\"\n   ttl  = \"300\"\n   \n-  records = [aws_eip.bastion-public.public_ip]\n+  records = [aws_instance.bastion.public_ip]\n }\n \n resource \"aws_route53_record\" \"vpc-internal\" {"
      },
      {
        "filename": "modules/bootstrap/aws/jumpbox.tf",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -27,7 +27,11 @@ resource \"aws_instance\" \"jumpbox\" {\n   ami           = data.aws_ami.ubuntu.id\n   key_name      = aws_key_pair.default.key_name\n \n-  subnet_id         = aws_subnet.admin[0].id\n+  subnet_id         = (\n+    var.configure_admin_network\n+      ? aws_subnet.admin[0].id\n+      : aws_subnet.dmz[0].id\n+  )\n   availability_zone = data.aws_availability_zones.available.names[0]\n \n   vpc_security_group_ids = [aws_security_group.internal.id]"
      },
      {
        "filename": "modules/bootstrap/aws/network.tf",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -8,6 +8,8 @@ resource \"aws_subnet\" \"dmz\" {\n   vpc_id            = aws_vpc.main.id\n   availability_zone = data.aws_availability_zones.available.names[count.index]\n \n+  map_public_ip_on_launch = !var.configure_admin_network\n+\n   # If DMZ CIDR is not provided then the a DMZ network will\n   # be created for each AZ starting from ${var.vpc_subnet_start}\n   cidr_block = (\n@@ -22,7 +24,7 @@ resource \"aws_subnet\" \"dmz\" {\n }\n \n resource \"aws_subnet\" \"admin\" {\n-  count = local.num_azs_to_configure\n+  count = var.configure_admin_network ? local.num_azs_to_configure : 0\n \n   vpc_id            = aws_vpc.main.id\n   availability_zone = data.aws_availability_zones.available.names[count.index]\n@@ -96,7 +98,7 @@ resource \"aws_nat_gateway\" \"nat\" {\n }\n \n resource \"aws_route_table\" \"admin\" {\n-  count = local.num_azs_to_configure\n+  count = var.configure_admin_network ? local.num_azs_to_configure : 0\n \n   vpc_id = aws_vpc.main.id\n \n@@ -107,17 +109,17 @@ resource \"aws_route_table\" \"admin\" {\n \n # Use Bastion as NAT\n resource \"aws_route\" \"nat-bastion\" {\n-  count = var.bastion_as_nat ? local.num_azs_to_configure : 0\n+  count = var.configure_admin_network && var.bastion_as_nat ? local.num_azs_to_configure : 0\n   \n   route_table_id = aws_route_table.admin[count.index].id\n \n   destination_cidr_block = \"0.0.0.0/0\"\n-  network_interface_id   = aws_network_interface.bastion-admin.id\n+  network_interface_id   = aws_network_interface.bastion-admin[0].id\n }\n \n # Use NAT instance\n resource \"aws_route\" \"nat-gateway\" {\n-  count = !var.bastion_as_nat ? local.num_azs_to_configure : 0\n+  count = var.configure_admin_network && !var.bastion_as_nat ? local.num_azs_to_configure : 0\n   \n   route_table_id = aws_route_table.admin[count.index].id\n \n@@ -137,7 +139,7 @@ resource \"aws_route_table_association\" \"dmz\" {\n }\n \n resource \"aws_route_table_association\" \"admin\" {\n-  count = local.num_azs_to_configure\n+  count = var.configure_admin_network ? local.num_azs_to_configure : 0\n \n   subnet_id      = element(aws_subnet.admin.*.id, count.index)\n   route_table_id = element(aws_route_table.admin.*.id, count.index)"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/cisagov/freeipa-server-tf-module/commit/99fd319a72d25441acf36fd2c167a875e9028935",
    "files": [
      {
        "filename": "ec2.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -14,6 +14,7 @@ resource \"aws_instance\" \"ipa\" {\n   iam_instance_profile        = aws_iam_instance_profile.ipa.name\n   root_block_device {\n     volume_size = var.root_disk_size\n+    volume_type = \"gp3\"\n   }\n   # AWS Instance Meta-Data Service (IMDS) options\n   metadata_options {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/firehawkvfx/firehawk-prototype-deprecated/commit/894fb1d80c7a3953b7a51d7acd5e9b942faced8f",
    "files": [
      {
        "filename": "main.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -7,6 +7,9 @@ provider \"aws\" {\n \n module \"vpc\" {\n   source = \"./modules/vpc\"\n+\n+  #sleep will disable the nat gateway to save cost during idle time.\n+  sleep = \"${var.sleep}\"\n }\n \n module \"vpn\" {"
      },
      {
        "filename": "modules/vpc/main.tf",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -9,6 +9,10 @@ variable \"region\" {\n   default = \"ap-southeast-2\"\n }\n \n+variable \"sleep\" {\n+  default = false\n+}\n+\n module \"vpc\" {\n   source = \"terraform-aws-modules/vpc/aws\"\n \n@@ -19,8 +23,9 @@ module \"vpc\" {\n   private_subnets = [\"10.0.1.0/24\", \"10.0.2.0/24\"]\n   public_subnets  = [\"10.0.101.0/24\", \"10.0.102.0/24\"]\n \n-  enable_nat_gateway = true\n-  enable_vpn_gateway = true\n+  # if sleep is true, then nat is disabled to save costs during idle time.\n+  enable_nat_gateway = \"${var.sleep ? false : true}\"\n+  enable_vpn_gateway = \"${var.sleep ? false : true}\"\n \n   tags = {\n     Terraform   = \"true\""
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/Xin00163/terraform/commit/f69ce3812180a20bbda69ff1432a1cd36342bc3b",
    "files": [
      {
        "filename": "fargate.tf",
        "additions": 29,
        "deletions": 29,
        "changes": 58,
        "status": "modified",
        "patch": "@@ -80,30 +80,30 @@ resource \"aws_security_group\" \"ecs_security_group\" {\n   }\n }\n \n-resource \"aws_alb\" \"main\" {\n-  name            = \"fargate-application\"\n-  subnets         = [\"${aws_subnet.main.*.id}\"]\n-  security_groups = [\"${aws_security_group.loadbalancer_security_group.id}\"]\n-}\n+# resource \"aws_alb\" \"main\" {\n+#   name            = \"fargate-application\"\n+#   subnets         = [\"${aws_subnet.main.*.id}\"]\n+#   security_groups = [\"${aws_security_group.loadbalancer_security_group.id}\"]\n+# }\n \n-resource \"aws_alb_target_group\" \"app_one\" {\n-  name        = \"hub\"\n-  port        = 4444\n-  protocol    = \"HTTP\"\n-  vpc_id      = \"${aws_vpc.main.id}\"\n-  target_type = \"ip\"\n-}\n+# resource \"aws_alb_target_group\" \"app_one\" {\n+#   name        = \"hub\"\n+#   port        = 4444\n+#   protocol    = \"HTTP\"\n+#   vpc_id      = \"${aws_vpc.main.id}\"\n+#   target_type = \"ip\"\n+# }\n \n-resource \"aws_alb_listener\" \"listener\" {\n-  load_balancer_arn = \"${aws_alb.main.id}\"\n-  port              = \"4444\"\n-  protocol          = \"HTTP\"\n+# resource \"aws_alb_listener\" \"listener\" {\n+#   load_balancer_arn = \"${aws_alb.main.id}\"\n+#   port              = \"4444\"\n+#   protocol          = \"HTTP\"\n \n-  default_action {\n-    target_group_arn = \"${aws_alb_target_group.app_one.id}\"\n-    type             = \"forward\"\n-  }\n-}\n+#   default_action {\n+#     target_group_arn = \"${aws_alb_target_group.app_one.id}\"\n+#     type             = \"forward\"\n+#   }\n+# }\n \n resource \"aws_ecs_cluster\" \"main\" {\n   name = \"selenium-cluster\"\n@@ -252,13 +252,13 @@ resource \"aws_ecs_service\" \"ecs-service\" {\n     assign_public_ip = true\n   }\n \n-  load_balancer {\n-    target_group_arn = \"${aws_alb_target_group.app_one.id}\"\n-    container_name   = \"selenium\"\n-    container_port   = 4444\n-  }\n+  # load_balancer {\n+  #   target_group_arn = \"${aws_alb_target_group.app_one.id}\"\n+  #   container_name   = \"selenium\"\n+  #   container_port   = 4444\n+  # }\n \n-  depends_on = [\n-    \"aws_alb_listener.listener\",\n-  ]\n+  # depends_on = [\n+  #   \"aws_alb_listener.listener\",\n+  # ]\n }"
      },
      {
        "filename": "outputs.tf",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -1,3 +1,4 @@\n-output \"alb_dns\" {\n-  value = \"${aws_alb.main.dns_name}\"\n-}\n+# output \"alb_dns\" {\n+#   value = \"${aws_alb.main.dns_name}\"\n+# }\n+"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/bortolo/Three-tier-app-infrastructure/commit/316179eeaaba01499ac86fa7027f004708daf9ee",
    "files": [
      {
        "filename": "terraform_test_AWS/IAM/custom_policies/EC2_t2micro.json",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "status": "added",
        "patch": "@@ -0,0 +1,73 @@\n+{\n+    \"Version\": \"2012-10-17\",\n+    \"Statement\": [\n+        {\n+            \"Action\": \"ec2:*\",\n+            \"Effect\": \"Allow\",\n+            \"Resource\": \"*\"\n+        },\n+        {\n+      \"Effect\": \"Deny\",\n+      \"Action\": \"ec2:RunInstances\",\n+      \"Resource\": [\n+         \"arn:aws:ec2:*:152371567679:instance/*\"\n+            ],\n+      \"Condition\": {\n+               \"StringEquals\": {\n+                  \"ec2:InstanceType\": \"t2.small\",\n+                  \"ec2:InstanceType\": \"t2.medium\",\n+                  \"ec2:InstanceType\": \"t2.large\",\n+                  \"ec2:InstanceType\": \"t2.xlarge\",\n+                  \"ec2:InstanceType\": \"t2.2xlarge\",\n+                  \"ec2:InstanceType\": \"t3.nano\",\n+                  \"ec2:InstanceType\": \"t3.micro\",\n+                  \"ec2:InstanceType\": \"t3.small\",\n+                  \"ec2:InstanceType\": \"t3.medium\",\n+                  \"ec2:InstanceType\": \"t3.large\",\n+                  \"ec2:InstanceType\": \"t3.xlarge\",\n+                  \"ec2:InstanceType\": \"t3.2xlarge\",\n+                  \"ec2:InstanceType\": \"t3a.micro\",\n+                  \"ec2:InstanceType\": \"t3a.nano\",\n+                  \"ec2:InstanceType\": \"t3a.micro\",\n+                  \"ec2:InstanceType\": \"t3a.small\",\n+                  \"ec2:InstanceType\": \"t3a.medium\",\n+                  \"ec2:InstanceType\": \"t3a.large\",\n+                  \"ec2:InstanceType\": \"t3a.xlarge\",\n+                  \"ec2:InstanceType\": \"t3a.2xlarge\"\n+               }\n+            }\n+        },\n+        {\n+            \"Effect\": \"Allow\",\n+            \"Action\": \"elasticloadbalancing:*\",\n+            \"Resource\": \"*\"\n+        },\n+        {\n+            \"Effect\": \"Allow\",\n+            \"Action\": \"cloudwatch:*\",\n+            \"Resource\": \"*\"\n+        },\n+        {\n+            \"Effect\": \"Allow\",\n+            \"Action\": \"autoscaling:*\",\n+            \"Resource\": \"*\"\n+        },\n+        {\n+            \"Effect\": \"Allow\",\n+            \"Action\": \"iam:CreateServiceLinkedRole\",\n+            \"Resource\": \"*\",\n+            \"Condition\": {\n+                \"StringEquals\": {\n+                    \"iam:AWSServiceName\": [\n+                        \"autoscaling.amazonaws.com\",\n+                        \"ec2scheduled.amazonaws.com\",\n+                        \"elasticloadbalancing.amazonaws.com\",\n+                        \"spot.amazonaws.com\",\n+                        \"spotfleet.amazonaws.com\",\n+                        \"transitgateway.amazonaws.com\"\n+                    ]\n+                }\n+            }\n+        }\n+    ]\n+}"
      },
      {
        "filename": "terraform_test_AWS/IAM/custom_policies/self_manage_vmfa.json",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "status": "added",
        "patch": "@@ -0,0 +1,43 @@\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Effect\": \"Allow\",\n+      \"Action\": [\n+        \"iam:CreateVirtualMFADevice\",\n+        \"iam:EnableMFADevice\",\n+        \"iam:ResyncMFADevice\",\n+        \"iam:DeleteVirtualMFADevice\"\n+      ],\n+      \"Resource\": [\n+        \"arn:aws:iam::*:mfa/${aws:username}\",\n+        \"arn:aws:iam::*:user/${aws:username}\"\n+      ]\n+    },\n+    {\n+      \"Sid\": \"AllowUsersToDeactivateTheirOwnVirtualMFADevice\",\n+      \"Effect\": \"Allow\",\n+      \"Action\": [\n+        \"iam:DeactivateMFADevice\"\n+      ],\n+      \"Resource\": [\n+        \"arn:aws:iam::*:mfa/${aws:username}\",\n+        \"arn:aws:iam::*:user/${aws:username}\"\n+      ],\n+      \"Condition\": {\n+        \"Bool\": {\n+          \"aws:MultiFactorAuthPresent\": \"true\"\n+        }\n+      }\n+    },\n+    {\n+      \"Effect\": \"Allow\",\n+      \"Action\": [\n+        \"iam:ListMFADevices\",\n+        \"iam:ListVirtualMFADevices\",\n+        \"iam:ListUsers\"\n+      ],\n+      \"Resource\": \"*\"\n+    }\n+  ]\n+}"
      },
      {
        "filename": "terraform_test_AWS/IAM/main.tf",
        "additions": 52,
        "deletions": 1,
        "changes": 53,
        "status": "modified",
        "patch": "@@ -62,12 +62,63 @@ module \"iam_group_complete_administrators\" {\n module \"iam_group_complete_EC2users\" {\n   source = \"../../modules_AWS/terraform-aws-iam-master/modules/iam-group-with-policies\"\n   name = \"EC2users\"\n+  group_users = [\n+    module.iam_user2.this_iam_user_name,\n+    module.iam_user3.this_iam_user_name,\n+  ]\n+  custom_group_policy_arns = [\n+    aws_iam_policy.EC2_t2micro.arn,\n+  ]\n+}\n+\n+module \"iam_group_complete_SelfMgmt\" {\n+  source = \"../../modules_AWS/terraform-aws-iam-master/modules/iam-group-with-policies\"\n+  name = \"IAMSelf\"\n+  group_users = [\n+    module.iam_user4.this_iam_user_name,\n+  ]\n+  custom_group_policy_arns = [\n+    \"arn:aws:iam::aws:policy/IAMReadOnlyAccess\",\n+    \"arn:aws:iam::aws:policy/IAMSelfManageServiceSpecificCredentials\",\n+    \"arn:aws:iam::aws:policy/IAMUserChangePassword\",\n+    aws_iam_policy.self_manage_vmfa.arn,\n+  ]\n+}\n+\n+module \"iam_group_complete_BillingViewer\" {\n+  source = \"../../modules_AWS/terraform-aws-iam-master/modules/iam-group-with-policies\"\n+  name = \"BillingViewer\"\n   group_users = [\n     module.iam_user2.this_iam_user_name,\n     module.iam_user3.this_iam_user_name,\n     module.iam_user4.this_iam_user_name,\n   ]\n   custom_group_policy_arns = [\n-    \"arn:aws:iam::aws:policy/AmazonEC2FullAccess\",\n+    \"arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess\",\n+  ]\n+}\n+/*\n+module \"iam_group_complete_BillingManager\" {\n+  source = \"../../modules_AWS/terraform-aws-iam-master/modules/iam-group-with-policies\"\n+  name = \"BillingManager\"\n+  group_users = [\n+    module.iam_user1.this_iam_user_name,\n   ]\n+  custom_group_policy_arns = [\n+    \"arn:aws:iam::aws:policy/job-function/Billing\",\n+  ]\n+}\n+*/\n+#############################################################################################\n+# IAM Custom policies\n+#############################################################################################\n+\n+resource \"aws_iam_policy\" \"self_manage_vmfa\" {\n+  name   = \"SelfManageVMFA\"\n+  policy = file(\"./custom_policies/self_manage_vmfa.json\")\n+}\n+\n+resource \"aws_iam_policy\" \"EC2_t2micro\" {\n+  name   = \"EC2_t2micro\"\n+  policy = file(\"./custom_policies/EC2_t2micro.json\")\n }"
      }
    ],
    "existing_codes": [
      "awareness",
      "policy"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/lowflying/OVPN---TF/commit/be1245d8634025277ba79a4155ee88d7eaffcdfb",
    "files": [
      {
        "filename": "AWS/ec2.tf",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -6,17 +6,12 @@ data \"aws_ami\" \"ubuntu\" {\n     values = [\"ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*\"]\n   }\n \n-  filter {\n-    name   = \"virtualization-type\"\n-    values = [\"hvm\"]\n-  }\n-\n   owners = [\"099720109477\"]\n }\n \n resource \"aws_instance\" \"ovpn\" {\n   ami           = \"${data.aws_ami.ubuntu.id}\"\n-  instance_type = \"t2.nano\"\n+  instance_type = \"t3.nano\"\n \n   associate_public_ip_address = true\n   source_dest_check           = false"
      },
      {
        "filename": "AWS/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1,4 +1,4 @@\n provider \"aws\" {\n   profile = \"${var.profile}\"\n-  region = \"${var.region}\"\n+  region  = \"${var.region}\"\n }"
      },
      {
        "filename": "AWS/sg.tf",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -1,5 +1,5 @@\n resource \"aws_security_group\" \"ovpn_sg\" {\n-  name        = \"ovpn_sg\"\n+  name_prefix = \"ovpn_sg-\"\n   description = \"OpenVPN SG\"\n \n   ingress {\n@@ -9,7 +9,7 @@ resource \"aws_security_group\" \"ovpn_sg\" {\n     cidr_blocks = [\"0.0.0.0/0\"]\n   }\n \n-ingress {\n+  ingress {\n     from_port   = 1194\n     to_port     = 1194\n     protocol    = \"udp\"\n@@ -22,5 +22,4 @@ ingress {\n     protocol    = \"-1\"\n     cidr_blocks = [\"0.0.0.0/0\"]\n   }\n-\n }"
      },
      {
        "filename": "AWS/terraform.tfvars",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+region = \"ca-central-1\"\n+private_key_file = \"../certs/ovpn\"\n+public_key_file = \"../certs/ovpn.pub\"\n+client_config_path = \"../client_configs\"\n+client_config_name = \"aws-ovpn-client\"\n+cert_details = \"../cert_details\""
      },
      {
        "filename": "AWS/userdata.sh",
        "additions": 24,
        "deletions": 6,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -14,33 +14,50 @@ echo \"Adding official OpenVPN Distro ...\"\n \n wget -O - https://swupdate.openvpn.net/repos/repo-public.gpg|apt-key add -\n \n-echo \"deb http://build.openvpn.net/debian/openvpn/stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/openvpn-aptrepo.list\n+echo \"deb http://build.openvpn.net/debian/openvpn/stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/openvpn.list\n+\n+echo \"Update apt sources ...\"\n+echo \"deb http://archive.ubuntu.com/ubuntu/ xenial main restricted\n+deb http://archive.ubuntu.com/ubuntu/ xenial-updates main restricted\n+deb http://archive.ubuntu.com/ubuntu/ xenial universe\n+deb http://archive.ubuntu.com/ubuntu/ xenial-updates universe\n+deb http://archive.ubuntu.com/ubuntu/ xenial multiverse\n+deb http://archive.ubuntu.com/ubuntu/ xenial-updates multiverse\n+deb http://archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse\" > /etc/apt/sources.list.d/ubuntu.list\n \n echo \"Fully update ...\"\n \n-apt-get update && apt-get -y dist-upgrade\n+unset UCF_FORCE_CONFFOLD\n+export UCF_FORCE_CONFFNEW=YES\n+ucf --purge /boot/grub/menu.lst\n+\n+export DEBIAN_FRONTEND=noninteractive\n+apt update\n+apt -o Dpkg::Options::=\"--force-confnew\" --force-yes -fuy dist-upgrade\n \n echo \"Install packages we need ...\"\n \n-apt-get -y install openvpn easy-rsa fail2ban\n+apt -y install openvpn easy-rsa fail2ban unattended-upgrades\n \n echo \"Enable and configure firewall ...\"\n \n-ufw enable\n+ufw --force enable\n ufw default allow outgoing\n ufw allow ssh\n ufw allow 1194/udp\n \n+TMPFILE=$(mktemp)\n+\n echo \"# START OPENVPN RULES\n # NAT table rules\n *nat\n :POSTROUTING ACCEPT [0:0]\n # Allow traffic from OpenVPN client to $INTERFACE\n -A POSTROUTING -s 192.168.51.0/24 -o $INTERFACE -j MASQUERADE\n COMMIT\n-# END OPENVPN RULES\n+# END OPENVPN RULES\" | cat - /etc/ufw/before.rules > $TMPFILE\n \n-$(cat /etc/ufw/before.rules)\" > /etc/ufw/before.rules\n+mv -f $TMPFILE /etc/ufw/before.rules\n \n sed -i.bak s/DEFAULT_FORWARD_POLICY=\\\"DROP\\\"/DEFAULT_FORWARD_POLICY=\\\"ACCEPT\\\"/g /etc/default/ufw\n \n@@ -153,4 +170,5 @@ EOF\n \n chmod 444 /etc/openvpn/client.ovpn\n \n+\n echo \"DONE!\""
      },
      {
        "filename": "AWS/variables.tf",
        "additions": 8,
        "deletions": 23,
        "changes": 31,
        "status": "modified",
        "patch": "@@ -1,25 +1,10 @@\n-variable \"profile\" {}\n-\n-variable \"region\" {\n-  default = \"ca-central-1\"\n-}\n-\n-variable \"private_key_file\" {\n-  default = \"../certs/ovpn\"\n-}\n-\n-variable \"public_key_file\" {\n-  default = \"../certs/ovpn.pub\"\n+variable \"profile\" {\n+  default = \"default\"\n }\n \n-variable \"client_config_path\" {\n-  default = \"../client_configs\"\n-}\n-\n-variable \"client_config_name\" {\n-  default = \"aws-ovpn-client\"\n-}\n-\n-variable \"cert_details\" {\n-  default = \"../cert_details\"\n-}\n+variable \"region\" {}\n+variable \"private_key_file\" {}\n+variable \"public_key_file\" {}\n+variable \"client_config_path\" {}\n+variable \"client_config_name\" {}\n+variable \"cert_details\" {}"
      }
    ],
    "existing_codes": [
      "instance",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/jeffawang/infrastructure/commit/9f610811aea8c523332e9dccad9bb0800b70691e",
    "files": [
      {
        "filename": "aws/env/infra.tf",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -23,10 +23,10 @@ resource \"aws_eip\" \"nat\" {\n     vpc = true\n }\n \n-resource \"aws_nat_gateway\" \"nat\" {\n-    subnet_id = \"${aws_subnet.public.*.id[count.index]}\"\n-    allocation_id = \"${aws_eip.nat.id}\"\n-}\n+#resource \"aws_nat_gateway\" \"nat\" {\n+#    subnet_id = \"${aws_subnet.public.*.id[count.index]}\"\n+#    allocation_id = \"${aws_eip.nat.id}\"\n+#}\n \n resource \"aws_subnet\" \"public\" {\n     vpc_id = \"${aws_vpc.vpc.id}\"\n@@ -50,7 +50,7 @@ resource \"aws_subnet\" \"private\" {\n         Name = \"${var.env}-private-${var.availability_zones[count.index]}\"\n         Env = \"${var.env}\"\n     }\n-    depends_on = [ \"aws_nat_gateway.nat\" ]\n+    #depends_on = [ \"aws_nat_gateway.nat\" ]\n     count = \"${length(var.availability_zones)}\"\n }\n \n@@ -59,10 +59,10 @@ resource \"aws_route_table\" \"private\" {\n     tags {\n         Name = \"${var.env}-private\"\n     }\n-    route {\n-        cidr_block = \"0.0.0.0/0\"\n-        nat_gateway_id = \"${aws_nat_gateway.nat.id}\"\n-    }\n+#    route {\n+#        cidr_block = \"0.0.0.0/0\"\n+#        nat_gateway_id = \"${aws_nat_gateway.nat.id}\"\n+#    }\n }\n \n resource \"aws_route_table_association\" \"private\" {"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/tomoconnor/cheap-ass-vpn/commit/659dd8a34701684f7c574ce35bc37ad9f70d56e1",
    "files": [
      {
        "filename": "README.md",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,2 +1,12 @@\n # cheap-ass-vpn\n Terraform Module for creating a really cheap VPN solution on AWS\n+\n+## Variables\n+* `aws_region` - Set this to your current region (the provider in this module uses it.  You can probably refactor it out)\n+`project` - Project and Environment tags are used by Locals for construction of object naming/tags\n+`environment` - See above\n+`vpc_id` - VPC to deploy cheap-ass-VPN into\n+`subnet_id` - Public Subnet to deploy the endpoint into.\n+`vpn_ami_id` - AMI ID of an image with Strongswan configured. (out of scope for this repo, because it's so bloody fiddly.)\n+`allow_list_ipv4_prefix` - Your home/office **STATIC** IPv4 address.  Uncomment `allow_list_ipv6_prefix` in `variables.tf` if you plan on using IPv6. I haven't tested it.\n+`key_pair_name` - AWS Key Pair so you can SSH into the newly deployed instance to configure / debug it.\n\\ No newline at end of file"
      },
      {
        "filename": "aws_data.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+data \"aws_caller_identity\" \"current\" {}"
      },
      {
        "filename": "aws_eip.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+resource \"aws_eip\" \"endpoint\" {\n+  instance = module.endpoint_server.id\n+  vpc      = true\n+  tags = merge(local.default_tags,\n+    { Name = \"${var.component}-EIP\"},\n+  )\n+}\n+"
      },
      {
        "filename": "aws_provider.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+provider \"aws\" {\n+  region = var.aws_region\n+}"
      },
      {
        "filename": "aws_security_group.tf",
        "additions": 129,
        "deletions": 0,
        "changes": 129,
        "status": "added",
        "patch": "@@ -0,0 +1,129 @@\n+resource \"aws_security_group\" \"allow_vpn_traffic\" {\n+  name        = \"allow_vpn_traffic\"\n+  description = \"Allow VPN inbound traffic\"\n+  vpc_id      = data.aws_vpc.this.id\n+\n+  tags = {\n+    Name = \"Allow-VPN-Traffic\"\n+  }\n+}\n+\n+resource \"aws_security_group_rule\" \"ssh_in\" {\n+  type              = \"ingress\"\n+  from_port         = 22\n+  to_port           = 22\n+  protocol          = \"tcp\"\n+  cidr_blocks       = [var.allow_list_ipv4_prefix]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"SSH-In\"\n+}\n+\n+resource \"aws_security_group_rule\" \"isakmp_in\" {\n+  type              = \"ingress\"\n+  from_port         = 500\n+  to_port           = 500\n+  protocol          = \"udp\"\n+  cidr_blocks       = [var.allow_list_ipv4_prefix]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"ISAKMP-In\"\n+}\n+resource \"aws_security_group_rule\" \"nat_t_in\" {\n+  type              = \"ingress\"\n+  from_port         = 4500\n+  to_port           = 4500\n+  protocol          = \"udp\"\n+  cidr_blocks       = [var.allow_list_ipv4_prefix]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"NAT-T-In\"\n+}\n+\n+\n+resource \"aws_security_group_rule\" \"esp_in\" {\n+  type              = \"ingress\"\n+  from_port         = 0\n+  to_port           = 0\n+  protocol          = 50\n+  cidr_blocks       = [var.allow_list_ipv4_prefix]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"ESP-In\"\n+}\n+\n+resource \"aws_security_group_rule\" \"ah_in\" {\n+  type              = \"ingress\"\n+  from_port         = 0\n+  to_port           = 0\n+  protocol          = 51\n+  cidr_blocks       = [var.allow_list_ipv4_prefix]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"AH-In\"\n+}\n+\n+resource \"aws_security_group_rule\" \"isakmp_out\" {\n+  type              = \"egress\"\n+  from_port         = 500\n+  to_port           = 500\n+  protocol          = \"udp\"\n+  cidr_blocks       = [var.allow_list_ipv4_prefix]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"ISAKMP-Out\"\n+}\n+\n+resource \"aws_security_group_rule\" \"esp_out\" {\n+  type              = \"egress\"\n+  from_port         = 0\n+  to_port           = 0\n+  protocol          = 50\n+  cidr_blocks       = [var.allow_list_ipv4_prefix]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"ESP-Out\"\n+}\n+\n+resource \"aws_security_group_rule\" \"ah_out\" {\n+  type              = \"egress\"\n+  from_port         = 0\n+  to_port           = 0\n+  protocol          = 51\n+  cidr_blocks       = [var.allow_list_ipv4_prefix]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"AH-Out\"\n+}\n+\n+resource \"aws_security_group_rule\" \"https_out\" {\n+  type              = \"egress\"\n+  from_port         = 443\n+  to_port           = 443\n+  protocol          = \"tcp\"\n+  cidr_blocks       = [\"0.0.0.0/0\"]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"HTTPS-Out\"\n+}\n+\n+resource \"aws_security_group_rule\" \"http_out\" {\n+  type              = \"egress\"\n+  from_port         = 80\n+  to_port           = 80\n+  protocol          = \"tcp\"\n+  cidr_blocks       = [\"0.0.0.0/0\"]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"HTTP-Out\"\n+}\n+\n+resource \"aws_security_group_rule\" \"nat_t_out\" {\n+  type              = \"egress\"\n+  from_port         = 4500\n+  to_port           = 4500\n+  protocol          = \"udp\"\n+  cidr_blocks       = [var.allow_list_ipv4_prefix]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"NAT-T-Out\"\n+}\n+\n+resource \"aws_security_group_rule\" \"all_out_to_vpc\" {\n+  type              = \"egress\"\n+  from_port         = 0\n+  to_port           = 0\n+  protocol          = \"-1\"\n+  cidr_blocks       = [data.aws_vpc.this.cidr_block]\n+  security_group_id = aws_security_group.allow_vpn_traffic.id\n+  description       = \"All Traffic out to VPC\"\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "data_aws_key_pair.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+data \"aws_key_pair\" \"access\" {\n+    key_name = var.key_pair_name\n+}\n+"
      },
      {
        "filename": "data_vpc.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+data \"aws_vpc\" \"this\" {\n+    id = var.vpc_id\n+}\n+"
      },
      {
        "filename": "locals.tf",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "status": "added",
        "patch": "@@ -0,0 +1,27 @@\n+locals {\n+  # GENERAL\n+  aws_account_level_id = format(\n+    \"%s-%s-%s\",\n+    var.project,\n+    var.environment,\n+    var.component,\n+  )\n+\n+  aws_global_level_id = format(\n+    \"%s-%s-%s-%s\",\n+    var.project,\n+    data.aws_caller_identity.current.account_id,\n+    var.environment,\n+    var.component,\n+  )\n+\n+  default_tags = {\n+    Project     = var.project\n+    Environment = var.environment\n+    Component   = var.component\n+  }\n+\n+  # SPECIFIC\n+  # ...\n+}\n+"
      },
      {
        "filename": "module_ec2_instance.tf",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "status": "added",
        "patch": "@@ -0,0 +1,18 @@\n+\n+\n+module \"endpoint_server\" {\n+  source  = \"terraform-aws-modules/ec2-instance/aws\"\n+  version = \"~> 3.0\"\n+\n+  name = \"${local.aws_global_level_id}-vpn\"\n+\n+  ami                    = var.vpn_ami_id\n+  instance_type          = var.instance_type\n+  key_name               = data.aws_key_pair.access.key_name\n+  monitoring             = false\n+  vpc_security_group_ids = [resource.aws_security_group.allow_vpn_traffic.id]\n+  subnet_id              = var.subnet_id\n+  source_dest_check      = false\n+  tags                   = local.default_tags\n+  disable_api_termination = true\n+}"
      },
      {
        "filename": "outputs.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+output \"rsa_key_pair_id\" {\n+  value = data.aws_key_pair.access.id\n+}\n+\n+output \"endpoint_eip\" {\n+    value = aws_eip.endpoint.public_ip\n+  \n+}\n\\ No newline at end of file"
      },
      {
        "filename": "variables.tf",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "status": "added",
        "patch": "@@ -0,0 +1,58 @@\n+# GENERAL\n+variable \"aws_region\" {\n+  type        = string\n+  description = \"The AWS Region\"\n+}\n+\n+variable \"project\" {\n+  type        = string\n+  description = \"The Project name\"\n+}\n+\n+variable \"environment\" {\n+  type        = string\n+  description = \"The environment name\"\n+}\n+\n+variable \"component\" {\n+  type        = string\n+  description = \"The TF component name\"\n+  default     = \"cheap-ass-vpn\"\n+}\n+\n+# SPECIFIC\n+variable \"vpc_id\" {\n+  type = string\n+  description = \"VPC ID into which we deploy the VPN\"\n+}\n+\n+variable \"subnet_id\" {\n+  type = string\n+  description = \"Subnet ID to deploy the VPN Endpoint into\"\n+}\n+\n+variable \"instance_type\" {\n+  type = string\n+  description = \"The EC2 instance type that'll host the VPN\"\n+  default = \"t4g.nano\" \n+\n+variable \"vpn_ami_id\" {\n+  type = string\n+  description = \"VPN Endpoint AMI id for the required Architecture(ARM)\"\n+  \n+}\n+\n+# Optional\n+# variable \"allow_list_ipv6_prefix\" {\n+#   type        = string\n+#   description = \"The IPv6 Prefix to allow\"\n+# }\n+variable \"allow_list_ipv4_prefix\" {\n+  type        = string\n+  description = \"The IPv4 Prefix to allow\"\n+}\n+\n+variable \"key_pair_name\" {\n+  type = string\n+  description = \"Name of the RSA Keypair to use for SSH to the Endpoint VPN Server for initial configuration\"\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/TalkingFox/SignalWs/commit/935d9d683608b4d8a97ef6ccc2c8ab7c14eec0d0",
    "files": [
      {
        "filename": "terraform/data.tf",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "status": "modified",
        "patch": "@@ -4,8 +4,8 @@ provider \"aws\" {\n \n resource \"aws_dynamodb_table\" \"signalrooms\" {\n   name           = \"SignalRooms\"\n-  read_capacity  = 20\n-  write_capacity = 20\n+  read_capacity  = 1\n+  write_capacity = 1\n   hash_key       = \"roomName\"\n \n   attribute = [\n@@ -18,8 +18,8 @@ resource \"aws_dynamodb_table\" \"signalrooms\" {\n \n resource \"aws_dynamodb_table\" \"signalhosts\" {\n   name           = \"SignalHosts\"\n-  read_capacity  = 20\n-  write_capacity = 20\n+  read_capacity  = 1\n+  write_capacity = 1\n   hash_key       = \"host\"\n \n   attribute = [\n@@ -32,8 +32,8 @@ resource \"aws_dynamodb_table\" \"signalhosts\" {\n \n resource \"aws_dynamodb_table\" \"signalwords\" {\n   name           = \"SignalWords\"\n-  read_capacity  = 20\n-  write_capacity = 20\n+  read_capacity  = 1\n+  write_capacity = 1\n   hash_key       = \"wordsProperty\"\n \n   attribute = [\n@@ -54,7 +54,7 @@ resource \"aws_dynamodb_table_item\" \"state_init\" {\n             \"S\": \"wordsInUse\"\n         },\n         \"propertyValue\": {\n-            \"L\": []\n+            \"M\": {}\n         }\n     }\n     ITEM"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/EtchUK/Etch.OrchardCore.SiteBoilerplate/commit/cc3460b79e8811df25a34a10c34c2a0ad2b6280f",
    "files": [
      {
        "filename": "Content/deployment/terraform/azure/resources/main.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "modified",
        "patch": "@@ -78,6 +78,9 @@ resource \"azurerm_sql_database\" \"sd\" {\n   resource_group_name = \"${data.azurerm_resource_group.rg.name}\"\n   location            = \"${data.azurerm_resource_group.rg.location}\"\n   server_name         = \"${var.sql_server_name}\"\n+\n+  edition                          = \"Standard\"\n+  requested_service_objective_name = \"S0\"\n }\n \n resource \"azurerm_app_service_custom_hostname_binding\" \"hostnames\" {"
      }
    ],
    "existing_codes": [
      "awareness",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/robertdebock/git-terraform-demo/commit/5638b1a044215292a5e3fa405b6a0567c6b35436",
    "files": [
      {
        "filename": "README.md",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -20,9 +20,9 @@ This is the infrastructure that's being built by this code:\n +----------------------------------+\n                  |\n                  V\n-+---  template_file: cloud-init-yml ---+\n++---  template_file: cloud-init.yml ---+\n | packages:                            |\n-| - httpd                              |\n+|   - httpd                            |\n | # And a few other tasks.             |\n +--------------------------------------+\n ```"
      },
      {
        "filename": "input.auto.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1 +1 @@\n-size = \"medium\"\n+size = \"small\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/robertdebock/git-terraform-demo/commit/686374095321975d851932a77b139d627f50c7d5",
    "files": [
      {
        "filename": "input.auto.tfvars",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -1 +1 @@\n-size = \"large\"\n+size = \"small\""
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/JacobTLeBlanc/PortfolioTF/commit/68c7bfb39a40f2783cfdae9ab5206c6747b8e7f3",
    "files": [
      {
        "filename": "route53.tf",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "status": "removed",
        "patch": "@@ -1,42 +0,0 @@\n-resource \"aws_acm_certificate\" \"default\" {\n-  provider = aws\n-  domain_name = \"${var.domain}\"\n-  subject_alternative_names = [\"*.${var.domain}\"]\n-  validation_method = \"DNS\"\n-\n-  lifecycle {\n-    create_before_destroy = true\n-  }\n-}\n-\n-resource \"aws_route53_zone\" \"primary\" {\n-  name = var.domain\n-}\n-\n-resource \"aws_route53_record\" \"validation\" {\n-  zone_id = aws_route53_zone.primary.id\n-\n-  for_each = {\n-    for dvo in aws_acm_certificate.default.domain_validation_options : dvo.domain_name => {\n-      name   = dvo.resource_record_name\n-      record = dvo.resource_record_value\n-      type   = dvo.resource_record_type\n-    }\n-  }\n-\n-  allow_overwrite = true\n-\n-  ttl = \"300\"\n-  name            = each.value.name\n-  records         = [each.value.record]\n-  type            = each.value.type\n-}\n-\n-resource \"aws_acm_certificate_validation\" \"default\" {\n-  provider = aws\n-  certificate_arn = aws_acm_certificate.default.arn\n-\n-\n-\n-  validation_record_fqdns = [for record in aws_route53_record.validation : record.fqdn]\n-}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/grahamgilbert/terraform-repo/commit/08ff1d9788127d4fb9aa6616e22ed0b4ed406106",
    "files": [
      {
        "filename": "dns.tf",
        "additions": 88,
        "deletions": 88,
        "changes": 176,
        "status": "modified",
        "patch": "@@ -1,92 +1,92 @@\n-resource \"random_id\" \"dns_id\" {\n-  byte_length = \"2\"\n-  prefix      = \"grahamgilbert-com-dns-\"\n-}\n+# resource \"random_id\" \"dns_id\" {\n+#   byte_length = \"2\"\n+#   prefix      = \"grahamgilbert-com-dns-\"\n+# }\n \n-resource \"google_project\" \"dns_project\" {\n-  name            = \"grahamgilbert-com-dns\"\n-  project_id      = random_id.dns_id.hex\n-  billing_account = var.billing_account_id\n-  org_id          = var.org_id\n-  labels          = var.labels\n-}\n+# resource \"google_project\" \"dns_project\" {\n+#   name            = \"grahamgilbert-com-dns\"\n+#   project_id      = random_id.dns_id.hex\n+#   billing_account = var.billing_account_id\n+#   org_id          = var.org_id\n+#   labels          = var.labels\n+# }\n \n-resource \"google_project_service\" \"dns_service\" {\n-  for_each           = toset(var.services)\n-  service            = each.key\n-  project            = google_project.dns_project.project_id\n-  disable_on_destroy = false\n-}\n+# resource \"google_project_service\" \"dns_service\" {\n+#   for_each           = toset(var.services)\n+#   service            = each.key\n+#   project            = google_project.dns_project.project_id\n+#   disable_on_destroy = false\n+# }\n \n-module \"dns-public-zone\" {\n-  source     = \"terraform-google-modules/cloud-dns/google\"\n-  version    = \"3.0.0\"\n-  project_id = google_project.dns_project.project_id\n-  type       = \"public\"\n-  name       = \"grahamgilbertdotcom\"\n-  domain     = \"grahamgilbert.com.\"\n+# module \"dns-public-zone\" {\n+#   source     = \"terraform-google-modules/cloud-dns/google\"\n+#   version    = \"3.0.0\"\n+#   project_id = google_project.dns_project.project_id\n+#   type       = \"public\"\n+#   name       = \"grahamgilbertdotcom\"\n+#   domain     = \"grahamgilbert.com.\"\n \n-  recordsets = [\n-    {\n-      name = \"\"\n-      type = \"A\"\n-      ttl  = 60\n-      records = [\n-        google_compute_global_address.website.address,\n-      ]\n-    },\n-    {\n-      name = \"\"\n-      type = \"MX\"\n-      ttl  = 300\n-      records = [\n-        \"60 aspmx4.googlemail.com.\",\n-        \"10 aspmx.l.google.com.\",\n-        \"50 aspmx3.googlemail.com.\",\n-        \"20 alt2.aspmx.l.google.com.\",\n-        \"40 aspmx2.googlemail.com.\",\n-        \"30 alt1.aspmx.l.google.com.\",\n-      ]\n-    },\n-    {\n-      name = \"server.grahamgilbert.com\"\n-      type = \"CNAME\"\n-      ttl  = 300\n-      records = [\n-        \"gg-home.ddns.net.\",\n-      ]\n-    },\n-    {\n-      name = \"mail.grahamgilbert.com\"\n-      type = \"CNAME\"\n-      ttl  = 300\n-      records = [\n-        \"ghs.google.com.\",\n-      ]\n-    },\n-    {\n-      name = \"calendar.grahamgilbert.com\"\n-      type = \"CNAME\"\n-      ttl  = 300\n-      records = [\n-        \"ghs.google.com.\",\n-      ]\n-    },\n-    {\n-      name = \"link.grahamgilbert.com\"\n-      type = \"CNAME\"\n-      ttl  = 300\n-      records = [\n-        \"ghs.google.com.\",\n-      ]\n-    },\n-    {\n-      name = \"sites.grahamgilbert.com\"\n-      type = \"CNAME\"\n-      ttl  = 300\n-      records = [\n-        \"ghs.google.com.\",\n-      ]\n-    },\n-  ]\n-}\n+#   recordsets = [\n+#     {\n+#       name = \"\"\n+#       type = \"A\"\n+#       ttl  = 60\n+#       records = [\n+#         google_compute_global_address.website.address,\n+#       ]\n+#     },\n+#     {\n+#       name = \"\"\n+#       type = \"MX\"\n+#       ttl  = 300\n+#       records = [\n+#         \"60 aspmx4.googlemail.com.\",\n+#         \"10 aspmx.l.google.com.\",\n+#         \"50 aspmx3.googlemail.com.\",\n+#         \"20 alt2.aspmx.l.google.com.\",\n+#         \"40 aspmx2.googlemail.com.\",\n+#         \"30 alt1.aspmx.l.google.com.\",\n+#       ]\n+#     },\n+#     {\n+#       name = \"server.grahamgilbert.com\"\n+#       type = \"CNAME\"\n+#       ttl  = 300\n+#       records = [\n+#         \"gg-home.ddns.net.\",\n+#       ]\n+#     },\n+#     {\n+#       name = \"mail.grahamgilbert.com\"\n+#       type = \"CNAME\"\n+#       ttl  = 300\n+#       records = [\n+#         \"ghs.google.com.\",\n+#       ]\n+#     },\n+#     {\n+#       name = \"calendar.grahamgilbert.com\"\n+#       type = \"CNAME\"\n+#       ttl  = 300\n+#       records = [\n+#         \"ghs.google.com.\",\n+#       ]\n+#     },\n+#     {\n+#       name = \"link.grahamgilbert.com\"\n+#       type = \"CNAME\"\n+#       ttl  = 300\n+#       records = [\n+#         \"ghs.google.com.\",\n+#       ]\n+#     },\n+#     {\n+#       name = \"sites.grahamgilbert.com\"\n+#       type = \"CNAME\"\n+#       ttl  = 300\n+#       records = [\n+#         \"ghs.google.com.\",\n+#       ]\n+#     },\n+#   ]\n+# }"
      },
      {
        "filename": "grahamgilbert_com_www.tf",
        "additions": 146,
        "deletions": 146,
        "changes": 292,
        "status": "modified",
        "patch": "@@ -1,147 +1,147 @@\n-resource \"random_id\" \"www_id\" {\n-  byte_length = \"2\"\n-  prefix      = \"grahamgilbert-com-www-\"\n-}\n-\n-resource \"google_project\" \"gg_project\" {\n-  name            = \"grahamgilbert-com-www\"\n-  project_id      = random_id.www_id.hex\n-  billing_account = var.billing_account_id\n-  org_id          = var.org_id\n-  labels          = var.labels\n-}\n-\n-resource \"google_project_service\" \"gg_service\" {\n-  for_each           = toset(var.services)\n-  service            = each.key\n-  project            = google_project.gg_project.project_id\n-  disable_on_destroy = false\n-}\n-\n-\n-resource \"google_storage_bucket\" \"website\" {\n-  provider      = google\n-  name          = \"grahamgilbert-website\"\n-  location      = \"US\"\n-  force_destroy = true\n-  project       = google_project.gg_project.project_id\n-  website {\n-    main_page_suffix = \"index.html\"\n-    not_found_page   = \"404.html\"\n-  }\n-}\n-\n-resource \"google_storage_default_object_access_control\" \"website_read\" {\n-  bucket = google_storage_bucket.website.name\n-  role   = \"READER\"\n-  entity = \"allUsers\"\n-}\n-\n-resource \"google_compute_global_address\" \"website\" {\n-  provider = google\n-  name     = \"website-lb-ip\"\n-  project  = google_project.gg_project.project_id\n-}\n-\n-resource \"google_compute_backend_bucket\" \"website\" {\n-  provider    = google\n-  name        = \"website-backend\"\n-  description = \"Contains files needed by the website\"\n-  bucket_name = google_storage_bucket.website.name\n-  enable_cdn  = true\n-  project     = google_project.gg_project.project_id\n-}\n-\n-# Get the managed DNS zone\n-# data \"google_dns_managed_zone\" \"gcp_coffeetime_dev\" {\n+# resource \"random_id\" \"www_id\" {\n+#   byte_length = \"2\"\n+#   prefix      = \"grahamgilbert-com-www-\"\n+# }\n+\n+# resource \"google_project\" \"gg_project\" {\n+#   name            = \"grahamgilbert-com-www\"\n+#   project_id      = random_id.www_id.hex\n+#   billing_account = var.billing_account_id\n+#   org_id          = var.org_id\n+#   labels          = var.labels\n+# }\n+\n+# resource \"google_project_service\" \"gg_service\" {\n+#   for_each           = toset(var.services)\n+#   service            = each.key\n+#   project            = google_project.gg_project.project_id\n+#   disable_on_destroy = false\n+# }\n+\n+\n+# resource \"google_storage_bucket\" \"website\" {\n+#   provider      = google\n+#   name          = \"grahamgilbert-website\"\n+#   location      = \"US\"\n+#   force_destroy = true\n+#   project       = google_project.gg_project.project_id\n+#   website {\n+#     main_page_suffix = \"index.html\"\n+#     not_found_page   = \"404.html\"\n+#   }\n+# }\n+\n+# resource \"google_storage_default_object_access_control\" \"website_read\" {\n+#   bucket = google_storage_bucket.website.name\n+#   role   = \"READER\"\n+#   entity = \"allUsers\"\n+# }\n+\n+# resource \"google_compute_global_address\" \"website\" {\n #   provider = google\n-#   name     = \"gcp-coffeetime-dev\"\n-# project  = google_project.dns.project_id\n-# }\n-\n-# # Add the IP to the DNS\n-# resource \"google_dns_record_set\" \"website\" {\n-#   provider     = google\n-#   name         = \"website.${data.google_dns_managed_zone.gcp_coffeetime_dev.dns_name}\"\n-#   type         = \"A\"\n-#   ttl          = 300\n-#   managed_zone = data.google_dns_managed_zone.gcp_coffeetime_dev.name\n-#   rrdatas      = [google_compute_global_address.website.address]\n-# project  = google_project.dns.project_id\n-# }\n-\n-# Create HTTPS certificate\n-resource \"google_compute_managed_ssl_certificate\" \"website\" {\n-  provider = google-beta\n-  name     = \"grahamgilbert-dot-com-cert\"\n-  managed {\n-    domains = [var.root_domain_name]\n-  }\n-  project = google_project.gg_project.project_id\n-}\n-\n-# GCP URL MAP\n-resource \"google_compute_url_map\" \"website\" {\n-  provider        = google\n-  name            = \"website-url-map\"\n-  default_service = google_compute_backend_bucket.website.self_link\n-  project         = google_project.gg_project.project_id\n-}\n-\n-# GCP target proxy\n-resource \"google_compute_target_https_proxy\" \"website\" {\n-  provider         = google\n-  name             = \"gg-https-target-proxy\"\n-  url_map          = google_compute_url_map.website.self_link\n-  ssl_certificates = [google_compute_managed_ssl_certificate.website.self_link]\n-  project          = google_project.gg_project.project_id\n-}\n-\n-# GCP forwarding rule\n-resource \"google_compute_global_forwarding_rule\" \"website\" {\n-  provider              = google\n-  name                  = \"gg-website-lb-https\"\n-  load_balancing_scheme = \"EXTERNAL\"\n-  ip_address            = google_compute_global_address.website.address\n-  ip_protocol           = \"TCP\"\n-  port_range            = \"443\"\n-  target                = google_compute_target_https_proxy.website.self_link\n-  project               = google_project.gg_project.project_id\n-}\n-\n-resource \"google_compute_url_map\" \"https_redirect\" {\n-  name    = \"gg-website-https-redirect\"\n-  project = google_project.gg_project.project_id\n-\n-  default_url_redirect {\n-    https_redirect         = true\n-    redirect_response_code = \"MOVED_PERMANENTLY_DEFAULT\"\n-    strip_query            = false\n-  }\n-}\n-\n-resource \"google_compute_target_http_proxy\" \"https_redirect\" {\n-  name    = \"gg-website-http-proxy\"\n-  url_map = google_compute_url_map.https_redirect.id\n-  project = google_project.gg_project.project_id\n-}\n-\n-resource \"google_compute_global_forwarding_rule\" \"https_redirect\" {\n-  name       = \"gg-website-lb-http\"\n-  target     = google_compute_target_http_proxy.https_redirect.id\n-  port_range = \"80\"\n-  ip_address = google_compute_global_address.website.address\n-  project    = google_project.gg_project.project_id\n-}\n-\n-resource \"google_service_account\" \"deploy_account\" {\n-  account_id   = \"deploy-account\"\n-  display_name = \"Deploy Account\"\n-  project      = google_project.gg_project.project_id\n-}\n-\n-resource \"google_storage_bucket_iam_member\" \"bucket_admin\" {\n-  bucket = google_storage_bucket.website.name\n-  role   = \"roles/storage.admin\"\n-  member = \"serviceAccount:${google_service_account.deploy_account.email}\"\n-}\n+#   name     = \"website-lb-ip\"\n+#   project  = google_project.gg_project.project_id\n+# }\n+\n+# resource \"google_compute_backend_bucket\" \"website\" {\n+#   provider    = google\n+#   name        = \"website-backend\"\n+#   description = \"Contains files needed by the website\"\n+#   bucket_name = google_storage_bucket.website.name\n+#   enable_cdn  = true\n+#   project     = google_project.gg_project.project_id\n+# }\n+\n+# # Get the managed DNS zone\n+# # data \"google_dns_managed_zone\" \"gcp_coffeetime_dev\" {\n+# #   provider = google\n+# #   name     = \"gcp-coffeetime-dev\"\n+# # project  = google_project.dns.project_id\n+# # }\n+\n+# # # Add the IP to the DNS\n+# # resource \"google_dns_record_set\" \"website\" {\n+# #   provider     = google\n+# #   name         = \"website.${data.google_dns_managed_zone.gcp_coffeetime_dev.dns_name}\"\n+# #   type         = \"A\"\n+# #   ttl          = 300\n+# #   managed_zone = data.google_dns_managed_zone.gcp_coffeetime_dev.name\n+# #   rrdatas      = [google_compute_global_address.website.address]\n+# # project  = google_project.dns.project_id\n+# # }\n+\n+# # Create HTTPS certificate\n+# resource \"google_compute_managed_ssl_certificate\" \"website\" {\n+#   provider = google-beta\n+#   name     = \"grahamgilbert-dot-com-cert\"\n+#   managed {\n+#     domains = [var.root_domain_name]\n+#   }\n+#   project = google_project.gg_project.project_id\n+# }\n+\n+# # GCP URL MAP\n+# resource \"google_compute_url_map\" \"website\" {\n+#   provider        = google\n+#   name            = \"website-url-map\"\n+#   default_service = google_compute_backend_bucket.website.self_link\n+#   project         = google_project.gg_project.project_id\n+# }\n+\n+# # GCP target proxy\n+# resource \"google_compute_target_https_proxy\" \"website\" {\n+#   provider         = google\n+#   name             = \"gg-https-target-proxy\"\n+#   url_map          = google_compute_url_map.website.self_link\n+#   ssl_certificates = [google_compute_managed_ssl_certificate.website.self_link]\n+#   project          = google_project.gg_project.project_id\n+# }\n+\n+# # GCP forwarding rule\n+# resource \"google_compute_global_forwarding_rule\" \"website\" {\n+#   provider              = google\n+#   name                  = \"gg-website-lb-https\"\n+#   load_balancing_scheme = \"EXTERNAL\"\n+#   ip_address            = google_compute_global_address.website.address\n+#   ip_protocol           = \"TCP\"\n+#   port_range            = \"443\"\n+#   target                = google_compute_target_https_proxy.website.self_link\n+#   project               = google_project.gg_project.project_id\n+# }\n+\n+# resource \"google_compute_url_map\" \"https_redirect\" {\n+#   name    = \"gg-website-https-redirect\"\n+#   project = google_project.gg_project.project_id\n+\n+#   default_url_redirect {\n+#     https_redirect         = true\n+#     redirect_response_code = \"MOVED_PERMANENTLY_DEFAULT\"\n+#     strip_query            = false\n+#   }\n+# }\n+\n+# resource \"google_compute_target_http_proxy\" \"https_redirect\" {\n+#   name    = \"gg-website-http-proxy\"\n+#   url_map = google_compute_url_map.https_redirect.id\n+#   project = google_project.gg_project.project_id\n+# }\n+\n+# resource \"google_compute_global_forwarding_rule\" \"https_redirect\" {\n+#   name       = \"gg-website-lb-http\"\n+#   target     = google_compute_target_http_proxy.https_redirect.id\n+#   port_range = \"80\"\n+#   ip_address = google_compute_global_address.website.address\n+#   project    = google_project.gg_project.project_id\n+# }\n+\n+# resource \"google_service_account\" \"deploy_account\" {\n+#   account_id   = \"deploy-account\"\n+#   display_name = \"Deploy Account\"\n+#   project      = google_project.gg_project.project_id\n+# }\n+\n+# resource \"google_storage_bucket_iam_member\" \"bucket_admin\" {\n+#   bucket = google_storage_bucket.website.name\n+#   role   = \"roles/storage.admin\"\n+#   member = \"serviceAccount:${google_service_account.deploy_account.email}\"\n+# }"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/stephengrier/my-infra/commit/e5742d6f4f93dd432c9d8d0a31493d43c45aaff1",
    "files": [
      {
        "filename": "terraform/modules/ecs/iam.tf",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "status": "modified",
        "patch": "@@ -32,3 +32,33 @@ resource \"aws_iam_instance_profile\" \"instance\" {\n   name = \"${aws_ecs_cluster.cluster.name}-instance-profile\"\n   role = \"${aws_iam_role.instance.name}\"\n }\n+\n+resource \"aws_iam_role\" \"nat_instance\" {\n+  name = \"${aws_ecs_cluster.cluster.name}-nat-instance\"\n+\n+  assume_role_policy = <<EOF\n+{\n+  \"Version\": \"2012-10-17\",\n+  \"Statement\": [\n+    {\n+      \"Sid\": \"\",\n+      \"Effect\": \"Allow\",\n+      \"Principal\": {\n+        \"Service\": \"ec2.amazonaws.com\"\n+      },\n+      \"Action\": \"sts:AssumeRole\"\n+    }\n+  ]\n+}\n+EOF\n+}\n+\n+resource \"aws_iam_instance_profile\" \"nat_instance\" {\n+  name = \"${aws_ecs_cluster.cluster.name}-nat-instance-profile\"\n+  role = \"${aws_iam_role.nat_instance.name}\"\n+}\n+\n+resource \"aws_iam_role_policy_attachment\" \"ssm\" {\n+  role       = \"${aws_iam_role.nat_instance.name}\"\n+  policy_arn = \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\"\n+}"
      },
      {
        "filename": "terraform/modules/ecs/nat_instances.tf",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "status": "added",
        "patch": "@@ -0,0 +1,97 @@\n+locals {\n+  spot_instance_types = [\"t3.nano\", \"t3a.nano\"]\n+}\n+\n+resource \"aws_network_interface\" \"nat_eni\" {\n+  count             = \"${local.az_count}\"\n+  security_groups   = [\"${aws_security_group.nat_instance.id}\"]\n+  subnet_id         = \"${element(aws_subnet.public.*.id, count.index)}\"\n+  source_dest_check = false\n+  description       = \"ENI for NAT instance ${count.index}\"\n+\n+  tags = {\n+    Name = \"nat-instance-eni-${count.index}\"\n+  }\n+}\n+\n+resource \"aws_eip\" \"nat\" {\n+  count             = \"${local.az_count}\"\n+  network_interface = \"${element(aws_network_interface.nat_eni.*.id, count.index)}\"\n+\n+  tags = {\n+    Name = \"nat-instance-eip-${count.index}\"\n+  }\n+}\n+\n+data \"aws_ami\" \"amazon_nat\" {\n+  most_recent = true\n+  owners      = [\"amazon\"]\n+\n+  filter {\n+    name   = \"architecture\"\n+    values = [\"x86_64\"]\n+  }\n+\n+  filter {\n+    name   = \"name\"\n+    values = [\"amzn-ami-vpc-nat-hvm-*\"]\n+  }\n+}\n+\n+resource \"aws_launch_template\" \"nat_instance\" {\n+  count       = \"${local.az_count}\"\n+  name_prefix = \"${aws_ecs_cluster.cluster.name}-nat-instance\"\n+  image_id    = \"${data.aws_ami.amazon_nat.id}\"\n+\n+  iam_instance_profile {\n+    arn = \"${aws_iam_instance_profile.nat_instance.arn}\"\n+  }\n+\n+  network_interfaces {\n+    delete_on_termination = false\n+    network_interface_id  = \"${element(aws_network_interface.nat_eni.*.id, count.index)}\"\n+  }\n+}\n+\n+resource \"aws_autoscaling_group\" \"nat\" {\n+  count              = \"${local.az_count}\"\n+  name               = \"${aws_ecs_cluster.cluster.name}-nat-asg-${count.index}\"\n+  desired_capacity   = 1\n+  min_size           = 1\n+  max_size           = 1\n+  availability_zones = [\"${element(data.aws_availability_zones.azs.names, count.index)}\"]\n+\n+  mixed_instances_policy {\n+    instances_distribution {\n+      on_demand_base_capacity                  = 0\n+      on_demand_percentage_above_base_capacity = 0\n+    }\n+\n+    launch_template {\n+      launch_template_specification {\n+        launch_template_id = \"${element(aws_launch_template.nat_instance.*.id, count.index)}\"\n+        version            = \"$Latest\"\n+      }\n+\n+      dynamic \"override\" {\n+        for_each = \"${local.spot_instance_types}\"\n+\n+        content {\n+          instance_type = \"${override.value}\"\n+        }\n+      }\n+    }\n+  }\n+\n+  tag {\n+    key                 = \"Name\"\n+    value               = \"${aws_ecs_cluster.cluster.name}-nat-instance\"\n+    propagate_at_launch = true\n+  }\n+\n+  tag {\n+    key                 = \"Environment\"\n+    value               = \"${var.environment}\"\n+    propagate_at_launch = true\n+  }\n+}"
      },
      {
        "filename": "terraform/modules/ecs/routing.tf",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -38,10 +38,7 @@ resource \"aws_route\" \"private_default\" {\n     count.index\n   )}\"\n \n-  nat_gateway_id = \"${element(\n-    aws_nat_gateway.ecs.*.id,\n-    count.index\n-  )}\"\n+  network_interface_id = \"${element(aws_network_interface.nat_eni.*.id, count.index)}\"\n }\n \n resource \"aws_route_table_association\" \"private\" {"
      },
      {
        "filename": "terraform/modules/ecs/security_groups.tf",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "status": "modified",
        "patch": "@@ -12,3 +12,31 @@ resource \"aws_security_group_rule\" \"common_egress_all\" {\n   cidr_blocks       = [\"0.0.0.0/0\"]\n   security_group_id = \"${aws_security_group.common.id}\"\n }\n+\n+resource \"aws_security_group\" \"nat_instance\" {\n+  name_prefix = \"${aws_ecs_cluster.cluster.name}-nat-instance\"\n+  vpc_id      = \"${aws_vpc.ecs.id}\"\n+  description = \"Security group for NAT instances\"\n+\n+  tags = {\n+    Name = \"${aws_ecs_cluster.cluster.name}-nat-instance\"\n+  }\n+}\n+\n+resource \"aws_security_group_rule\" \"nat_egress\" {\n+  security_group_id = \"${aws_security_group.nat_instance.id}\"\n+  type              = \"egress\"\n+  cidr_blocks       = [\"0.0.0.0/0\"]\n+  from_port         = 0\n+  to_port           = 65535\n+  protocol          = \"all\"\n+}\n+\n+resource \"aws_security_group_rule\" \"nat_ingress\" {\n+  security_group_id = \"${aws_security_group.nat_instance.id}\"\n+  type              = \"ingress\"\n+  cidr_blocks       = \"${aws_subnet.private.*.cidr_block}\"\n+  from_port         = 0\n+  to_port           = 65535\n+  protocol          = \"all\"\n+}"
      }
    ],
    "existing_codes": [
      "networking",
      "saving",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/ministryofjustice/cloud-platform-terraform-monitoring/commit/87401ba23af26d379d8132cc09fd7cd212773ba1",
    "files": [
      {
        "filename": "README.md",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -72,7 +72,7 @@ module \"monitoring\" {\n \n | Name | Description | Type | Default | Required |\n |------|-------------|------|---------|:--------:|\n-| alertmanager\\_slack\\_receivers | A list of configuration values for Slack receivers | `list` | n/a | yes |\n+| alertmanager\\_slack\\_receivers | A list of configuration values for Slack receivers | `list(any)` | n/a | yes |\n | cluster\\_domain\\_name | The cluster domain - used by externalDNS and certmanager to create URLs | `any` | n/a | yes |\n | dockerhub\\_password | DockerHub password - required to avoid hitting Dockerhub API limits in EKS clusters | `string` | `\"\"` | no |\n | dockerhub\\_username | DockerHub username - required to avoid hitting Dockerhub API limits in EKS clusters | `string` | `\"\"` | no |"
      },
      {
        "filename": "cloudwatch-exporter.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -17,7 +17,7 @@ resource \"helm_release\" \"cloudwatch_exporter\" {\n     eks_service_account = module.iam_assumable_role_cloudwatch_exporter.this_iam_role_arn\n   })]\n \n-    depends_on = [\n+  depends_on = [\n     local.prometheus_dependency,\n   ]\n "
      },
      {
        "filename": "ecr-exporter.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -25,7 +25,7 @@ resource \"helm_release\" \"ecr_exporter\" {\n     value = \"eu-west-2\"\n   }\n \n-    depends_on = [\n+  depends_on = [\n     local.prometheus_dependency,\n   ]\n "
      },
      {
        "filename": "locals.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -1,7 +1,7 @@\n \n locals {\n-  live_workspace = \"live-1\"\n-  live_domain    = \"cloud-platform.service.justice.gov.uk\"\n+  live_workspace   = \"live-1\"\n+  live_domain      = \"cloud-platform.service.justice.gov.uk\"\n   ingress_redirect = terraform.workspace == local.live_workspace ? true : false\n \n   alertmanager_ingress = format("
      },
      {
        "filename": "prometheus.tf",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -139,7 +139,7 @@ resource \"helm_release\" \"prometheus_operator\" {\n \n # This helm_release is for EKS cluster, running latest version of prometheus-operator.\n resource \"helm_release\" \"prometheus_operator_eks\" {\n-  count      = var.eks ? 1 : 0\n+  count = var.eks ? 1 : 0\n \n   name       = \"prometheus-operator\"\n   repository = \"https://prometheus-community.github.io/helm-charts\"\n@@ -165,6 +165,8 @@ resource \"helm_release\" \"prometheus_operator_eks\" {\n     enable_thanos_sidecar                      = var.enable_thanos_sidecar\n     enable_large_nodesgroup                    = var.enable_large_nodesgroup\n     eks_service_account                        = module.iam_assumable_role_monitoring.this_iam_role_arn\n+    storage_class                              = can(regex(\"live\", terraform.workspace)) ? \"io1-expand\" : \"gp2-expand\"\n+    storage_size                               = can(regex(\"live\", terraform.workspace)) ? \"750Gi\" : \"75Gi\"\n   })]\n \n   # Depends on Helm being installed\n@@ -424,13 +426,13 @@ resource \"helm_release\" \"kibana_proxy\" {\n resource \"kubernetes_ingress\" \"ingress_redirect_grafana\" {\n   count = local.ingress_redirect ? 1 : 0\n   metadata {\n-    name        = \"ingress-redirect-grafana\"\n-    namespace   = kubernetes_namespace.monitoring.id\n+    name      = \"ingress-redirect-grafana\"\n+    namespace = kubernetes_namespace.monitoring.id\n     annotations = {\n-      \"external-dns.alpha.kubernetes.io/aws-weight\" = \"100\"\n+      \"external-dns.alpha.kubernetes.io/aws-weight\"     = \"100\"\n       \"external-dns.alpha.kubernetes.io/set-identifier\" = \"dns-grafana\"\n       \"cloud-platform.justice.gov.uk/ignore-external-dns-weight\" : \"true\"\n-      \"kubernetes.io/ingress.class\" = \"nginx\"\n+      \"kubernetes.io/ingress.class\"                    = \"nginx\"\n       \"nginx.ingress.kubernetes.io/permanent-redirect\" = local.grafana_root\n     }\n   }"
      },
      {
        "filename": "templates/prometheus-operator-eks.yaml.tpl",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -453,11 +453,11 @@ prometheus:\n     storageSpec:\n       volumeClaimTemplate:\n         spec:\n-          storageClassName: io1-expand\n+          storageClassName: ${storage_class}\n           accessModes: [\"ReadWriteOnce\"]\n           resources:\n             requests:\n-              storage: 750Gi\n+              storage: ${storage_size}\n \n %{ if enable_thanos_sidecar == true ~}\n     thanos: "
      },
      {
        "filename": "thanos.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -19,7 +19,7 @@ resource \"helm_release\" \"thanos\" {\n     clusterName         = terraform.workspace\n   })]\n \n-    depends_on = [\n+  depends_on = [\n     local.prometheus_dependency,\n   ]\n "
      },
      {
        "filename": "variables.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,6 +1,6 @@\n variable \"alertmanager_slack_receivers\" {\n   description = \"A list of configuration values for Slack receivers\"\n-  type        = list\n+  type        = list(any)\n }\n \n variable \"iam_role_nodes\" {\n@@ -114,14 +114,14 @@ variable \"dockerhub_password\" {\n \n variable \"kibana_upstream\" {\n   description = \"ES upstream for logs\"\n-  default = \"https://search-cloud-platform-live-dibidbfud3uww3lpxnhj2jdws4.eu-west-2.es.amazonaws.com\"\n-  type = string\n+  default     = \"https://search-cloud-platform-live-dibidbfud3uww3lpxnhj2jdws4.eu-west-2.es.amazonaws.com\"\n+  type        = string\n }\n \n variable \"kibana_audit_upstream\" {\n   description = \"ES upstream for audit logs\"\n-  default = \"https://search-cloud-platform-audit-live-hfclvgaq73cul7ku362rvigti4.eu-west-2.es.amazonaws.com\"\n-  type = string\n+  default     = \"https://search-cloud-platform-audit-live-hfclvgaq73cul7ku362rvigti4.eu-west-2.es.amazonaws.com\"\n+  type        = string\n }\n \n variable \"grafana_ingress_redirect_url\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/sasidharkollimarla/terraform/commit/87d2fc1f203860095dc632c536d1820176941419",
    "files": [
      {
        "filename": "main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -23,7 +23,7 @@ resource \"aws_instance\" \"example\" {\n \n \n   tags = {\n-    Name = \"TF-CLOUD-CLI-POLICY\"\n+    Name = \"TF-CLOUD-CLI-POLICY-COST\"\n   }\n \n   user_data = <<-EOF"
      }
    ],
    "existing_codes": [
      "saving",
      "policy"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/maxjahn/terraform-oci-azure-adb/commit/e2295fe41d430f42795605b6356e69b393625999",
    "files": [
      {
        "filename": "infrastructure-setup/modules/interconnect/main.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -175,7 +175,7 @@ resource \"azurerm_express_route_circuit\" \"connect_erc\" {\n   bandwidth_in_mbps     =  1000\n \n   sku {\n-    tier   = \"Standard\"\n+    tier   = \"Local\"\n     family = \"MeteredData\"\n   }\n "
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/codequest-eu/terraform-modules/commit/ffe23d4c2cd78035bef0dfb261701e7ed8dd588d",
    "files": [
      {
        "filename": "meta/main.tf",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -61,8 +61,8 @@ resource \"aws_s3_bucket\" \"state\" {\n resource \"aws_dynamodb_table\" \"state_lock\" {\n   name           = \"${local.name_prefix}-state-lock\"\n   hash_key       = \"LockID\"\n-  read_capacity  = 20\n-  write_capacity = 20\n+  read_capacity  = 1\n+  write_capacity = 1\n \n   attribute {\n     name = \"LockID\"\n@@ -75,8 +75,8 @@ resource \"aws_dynamodb_table\" \"state_lock\" {\n resource \"aws_dynamodb_table\" \"meta_lock\" {\n   name           = \"${local.name_prefix}-meta-lock\"\n   hash_key       = \"LockID\"\n-  read_capacity  = 20\n-  write_capacity = 20\n+  read_capacity  = 1\n+  write_capacity = 1\n \n   attribute {\n     name = \"LockID\""
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/dgorbov/terraform-s3-backend-setup/commit/81f82740760a357a86b3a77f9ed400624edcb218",
    "files": [
      {
        "filename": "main.tf",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -25,8 +25,9 @@ resource \"aws_s3_bucket\" \"tf_state\" {\n resource \"aws_dynamodb_table\" \"tf_state_lock\" {\n   name = \"tf-state-lock-${var.s3_bucket_name}\"\n   hash_key = \"LockID\"\n-  read_capacity = 20\n-  write_capacity = 20\n+  billing_mode = \"PAY_PER_REQUEST\"\n+  # read_capacity = 20\n+  # write_capacity = 20\n   attribute {\n     name = \"LockID\"\n     type = \"S\""
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/tresvitae/tf_eks_simpleweb/commit/200e62726a588acf05f58a1087d71eb1b98f4e0a",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 24,
        "changes": 26,
        "status": "modified",
        "patch": "@@ -28,8 +28,8 @@ module \"vpc\" {\n   cidr = \"10.0.0.0/16\"\n \n   azs             = data.aws_availability_zones.available.names\n-  private_subnets = [\"10.0.1.0/24\", \"10.0.2.0/24\", \"10.0.3.0/24\"]\n-  public_subnets  = [\"10.0.101.0/24\", \"10.0.102.0/24\", \"10.0.103.0/24\"]\n+  private_subnets = [\"10.0.1.0/24\", \"10.0.2.0/24\"]\n+  public_subnets  = [\"10.0.101.0/24\", \"10.0.102.0/24\"]\n \n   enable_nat_gateway   = true\n   enable_vpn_gateway   = true\n@@ -65,21 +65,6 @@ resource \"aws_security_group\" \"worker_group_mgmt_one\" {\n   }\n }\n \n-resource \"aws_security_group\" \"worker_group_mgmt_two\" {\n-  name_prefix = \"worker_group_mgmt_two\"\n-  vpc_id      = module.vpc.vpc_id\n-\n-  ingress {\n-    from_port = 22\n-    to_port   = 22\n-    protocol  = \"tcp\"\n-\n-    cidr_blocks = [\n-      \"192.168.0.0/16\",\n-    ]\n-  }\n-}\n-\n resource \"aws_security_group\" \"all_worker_mgmt\" {\n   name_prefix = \"all_worker_management\"\n   vpc_id      = module.vpc.vpc_id\n@@ -128,13 +113,6 @@ module \"eks\" {\n       asg_desired_capacity          = 2\n       additional_security_group_ids = [aws_security_group.worker_group_mgmt_one.id]\n     },\n-    {\n-      name                          = \"worker-group-2\"\n-      instance_type                 = \"t2.medium\"\n-      additional_userdata           = \"echo foo bar\"\n-      additional_security_group_ids = [aws_security_group.worker_group_mgmt_two.id]\n-      asg_desired_capacity          = 1\n-    },\n   ]\n }\n "
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/smerck/blog/commit/3e543412b6680057ffb10b0fbba777ccb3205882",
    "files": [
      {
        "filename": "infra/k8s/deployment.yaml",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "status": "removed",
        "patch": "@@ -1,24 +0,0 @@\n-apiVersion: apps/v1\n-kind: Deployment\n-metadata:\n-  name: blog\n-  labels:\n-    app: blog\n-spec:\n-  replicas: 1\n-  selector:\n-    matchLabels:\n-      app: blog\n-  template:\n-    metadata:\n-      labels:\n-        app: blog\n-    spec:\n-      containers:\n-      - name: blog\n-        image: registry.digitalocean.com/smerc-dev/hugo:v0.10\n-        imagePullPolicy: Always\n-        ports:\n-        - containerPort: 1313\n-\n-"
      },
      {
        "filename": "infra/k8s/ingress.yaml",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "status": "removed",
        "patch": "@@ -1,17 +0,0 @@\n-apiVersion: networking.k8s.io/v1\n-kind: Ingress\n-metadata:\n-  name: blog-ingress\n-  annotations:\n-    nginx.ingress.kubernetes.io/rewrite-target: /\n-spec:\n-  rules:\n-  - http:\n-      paths:\n-      - path: /\n-        pathType: Prefix\n-        backend:\n-          service:\n-            name: blog\n-            port:\n-              number: 80"
      },
      {
        "filename": "infra/k8s/service.yaml",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "status": "removed",
        "patch": "@@ -1,14 +0,0 @@\n-apiVersion: v1\n-kind: Service\n-metadata:\n-  name: blog\n-  annotations:\n-    nginx.ingress.kubernetes.io/rewrite-target: /\n-spec:\n-  type: LoadBalancer\n-  selector:\n-    app: blog\n-  ports:\n-  - protocol: TCP\n-    port: 80\n-    targetPort: 1313"
      },
      {
        "filename": "infra/tf/.terraform.lock.hcl",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "status": "added",
        "patch": "@@ -0,0 +1,44 @@\n+# This file is maintained automatically by \"terraform init\".\n+# Manual edits may be lost in future updates.\n+\n+provider \"registry.terraform.io/digitalocean/digitalocean\" {\n+  version     = \"2.15.0\"\n+  constraints = \"~> 2.0\"\n+  hashes = [\n+    \"h1:FjswQZbqqRm9jnBUeiD1bAKFCJ6+lg2lXpPcNV4y34I=\",\n+    \"zh:3398034380c1cf0c9439dfeac857889aa47c60b75198cc14a238d787c6de28f8\",\n+    \"zh:4bd4314f4c0b8f196746f9507d5a919d06a1df9aeca6c4366ed7d2de44d6b1b4\",\n+    \"zh:5c08823e87825fe6043b85780e5bccc2a746549fbcee6e157dcfab109865ffe0\",\n+    \"zh:6d03f81ee4d0bc30910df3ede1e0776a779d04488d3e0fd6266a2baa641e29ad\",\n+    \"zh:73d899c1c297da784be78da3865230db8c538c4e979b3154dbb8af9882a307e1\",\n+    \"zh:7c1eeb131ad168d4322804d6263ad721970b78d1e4c83ad29a6130726e149215\",\n+    \"zh:7d3e0312c0cf76630f67b94e2c85862e8f96f31945080514df103d24cbd66983\",\n+    \"zh:7daedcfeb453d3d5f17eece2e77d1969730d76310ee7d787c931d64928148510\",\n+    \"zh:8729246056c7ddade5c5e37540a7e6920bc6f6d9129901c7984461f4243e79d5\",\n+    \"zh:8a0d54890299e666420b7967d3746cc93f9485909c50b0e92fc1d90fafeec58d\",\n+    \"zh:9ac83aeb960198edf20c6affa70c1ee3d07f0157d9764200322efba4d7a01555\",\n+    \"zh:b2af55740c5c214a758598cac8714e5d34d8160d20096ba1d807901dc6cbd54f\",\n+    \"zh:d85951333327532e921dae4bdedb1917caaf5db8916b4a049e5414b029dfb5a7\",\n+    \"zh:dbda132523eb744d958f82aee49e8f64ae357aa8bd9a902d265c62eb4bead64d\",\n+    \"zh:e83d45d404be7e712eab816c2fc384f25674c6f9a90fa7c41d3cdaeee3160880\",\n+  ]\n+}\n+\n+provider \"registry.terraform.io/hashicorp/kubernetes\" {\n+  version     = \"2.6.1\"\n+  constraints = \">= 2.0.0\"\n+  hashes = [\n+    \"h1:aw4mTyVx41Y/+lAGNJcRvylF2j0sRQD6up5/CXmj9ds=\",\n+    \"zh:081fbaf9441ebb278753dcf05f318fa7d445e9599a600d7c525e9a18b871d4c8\",\n+    \"zh:143bfbe871c628981d756ead47486e807fce876232d05607e0b8852ebee4eed8\",\n+    \"zh:34f413a644eb952e3f041d67ef19200f4c286d374eae87b60fafdd8bf6bb5654\",\n+    \"zh:370562be70233be730e1876d565710c3ef477e047f209cb3dff8a4a3217a6461\",\n+    \"zh:443021df6d56e59e4d8dda8e57b506affff32b8a22de09661d21b98bc781fefb\",\n+    \"zh:51a9501360b58adf9ee6e09fb81f555042ebc909ab36e06ccfc5e701e91f9923\",\n+    \"zh:7d41d48b8291b98e0a4b7a1f79a9d1fe140a2e0d8df422c5b48cbae4c3fa615a\",\n+    \"zh:881b3e44814d7d49a5820e2e4b13ee3d000b5baf7957df774a909f17472ece8a\",\n+    \"zh:b860ff68a944de63fbe0a624c41f2e373711a2da4298c0f0cb151e00fb32a6b3\",\n+    \"zh:c4ab48ea6e0f8d4a6db1abab1877addb2b21ecd126e505c74b8c85804bd92cbe\",\n+    \"zh:e96589575dfd31eab48fcc85466dd49895925473c60c802b346cdb4037953350\",\n+  ]\n+}"
      },
      {
        "filename": "infra/tf/blog.tf",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "status": "removed",
        "patch": "@@ -1,8 +0,0 @@\n-module \"blog_prod\" {\n-  source = \"./modules/digital_ocean/app\"\n-\n-  region = \"nyc\"\n-  name = \"smerc-blog\"\n-  branch = \"main\"\n-  hostname = \"blog.smerc.io\"\n-}"
      },
      {
        "filename": "infra/tf/dns.tf",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "status": "added",
        "patch": "@@ -0,0 +1,57 @@\n+data \"digitalocean_domain\" \"smerc_io\" {\n+  name = \"smerc.io\"\n+}\n+\n+data \"digitalocean_domain\" \"smerc_dev\" {\n+  name = \"smerc.dev\"\n+}\n+\n+\n+locals {\n+  mx_records = [\n+    {\n+      name     = \"mx\"\n+      value    = \"gmr-smtp-in.l.google.com.\"\n+      priority = \"1\"\n+    },\n+    {\n+      name     = \"mx1\"\n+      value    = \"alt1.gmr-smtp-in.l.google.com.\"\n+      priority = \"5\"\n+    },\n+    {\n+      name     = \"mx2\"\n+      value    = \"alt2.gmr-smtp-in.l.google.com.\"\n+      priority = \"5\"\n+    },\n+    {\n+      name     = \"mx3\"\n+      value    = \"alt3.gmr-smtp-in.l.google.com.\"\n+      priority = \"10\"\n+    },\n+    {\n+      name     = \"mx4\"\n+      value    = \"alt4.gmr-smtp-in.l.google.com.\"\n+      priority = \"10\"\n+    },\n+  ]\n+}\n+\n+resource \"digitalocean_record\" \"mx_smerc_io\" {\n+  for_each = { for record in local.mx_records : record.name => record }\n+  domain   = data.digitalocean_domain.smerc_io.id\n+  type     = \"MX\"\n+  name     = \"@\"\n+  value    = each.value.value\n+  priority = each.value.priority\n+}\n+\n+\n+resource \"digitalocean_record\" \"mx_smerc_dev\" {\n+  for_each = { for record in local.mx_records : record.name => record }\n+  domain   = data.digitalocean_domain.smerc_dev.id\n+  type     = \"MX\"\n+  name     = \"@\"\n+  value    = each.value.value\n+  priority = each.value.priority\n+}"
      },
      {
        "filename": "infra/tf/main.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+module \"blog_dev\" {\n+  source = \"./modules/digital_ocean/app\"\n+\n+  region      = \"nyc\"\n+  name        = \"smerc-dev-blog\"\n+  branch      = \"main\"\n+  apex_domain = \"smerc.dev\"\n+\n+}"
      },
      {
        "filename": "infra/tf/modules/digital_ocean/app/app.tf",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -1,29 +1,29 @@\n resource \"digitalocean_app\" \"app\" {\n   spec {\n-    name   = \"${var.name}\"\n-    region = \"${var.region}\"\n+    name   = var.name\n+    region = var.region\n \n     domain {\n-      name = \"${var.hostname}\"\n+      name = var.apex_domain\n       type = \"PRIMARY\"\n-      zone = \"smerc.io\"\n+      zone = var.apex_domain\n     }\n \n     service {\n-      name               = \"${var.name}\"\n+      name               = var.name\n       instance_count     = 1\n       instance_size_slug = \"basic-xxs\"\n-      dockerfile_path = \"Dockerfile\"\n-      http_port = 1313\n+      dockerfile_path    = \"Dockerfile\"\n+      http_port          = 1313\n \n \n       routes {\n         path = \"/\"\n       }\n \n       github {\n-        repo = \"smerck/blog\"\n-        branch = \"${var.branch}\"\n+        repo           = \"smerck/blog\"\n+        branch         = var.branch\n         deploy_on_push = true\n       }\n "
      },
      {
        "filename": "infra/tf/modules/digital_ocean/app/output.tf",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,3 +1,7 @@\n- output \"app_url\" {\n-     value = digitalocean_app.app.live_url\n- }\n+output \"app_url\" {\n+  value = digitalocean_app.app.live_url\n+}\n+\n+output \"do_url\" {\n+  value = digitalocean_app.app.default_ingress\n+}"
      },
      {
        "filename": "infra/tf/modules/digital_ocean/app/variables.tf",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -1,15 +1,15 @@\n variable \"name\" {\n-    type = string\n+  type = string\n }\n \n variable \"branch\" {\n-    type = string\n+  type = string\n }\n \n variable \"region\" {\n-    type = string\n+  type = string\n }\n \n-variable \"hostname\" {\n-    type = string\n+variable \"apex_domain\" {\n+  type = string\n }"
      },
      {
        "filename": "infra/tf/output.tf",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+output \"blog_do_url\" {\n+  value = module.blog_dev.do_url\n+}\n+\n+output \"smerc_dev_domain_url\" {\n+  value = module.blog_dev.app_url\n+}"
      }
    ],
    "existing_codes": [
      "domain",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/AnalysisByDesign/abd-cloud/commit/50c96dd99f04083d8a2f0d432ad2b0b3c291d3b9",
    "files": [
      {
        "filename": "tf-templates/compute/ec2-asg/alb.tf",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -19,21 +19,3 @@ module \"load_balancer\" {\n \n   common_tags = \"${local.common_tags}\"\n }\n-\n-module \"load_balancer_admin\" {\n-  source = \"git@github.com:AnalysisByDesign/abd-cloud-modules.git//compute/alb\"\n-\n-  # Required variables\n-  name       = \"${format(\"%s-%s-admin\", local.vpc_name, var.name)}\"\n-  vpc_id     = \"${local.vpc_id}\"\n-  subnet_ids = [\"${data.aws_subnet.lb.*.id}\"]\n-\n-  security_group_ids = [\"${module.alb-sg.id}\"]\n-  acm_arn            = \"${join(\"\", module.ssl_cert.cert_validation_arn)}\"\n-\n-  # Health check\n-  path         = \"${var.alb_health_check_path}\"\n-  success_code = \"${var.alb_health_check_status}\"\n-\n-  common_tags = \"${local.common_tags}\"\n-}"
      },
      {
        "filename": "tf-templates/compute/ec2-asg/autoscaling-group.tf",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "status": "modified",
        "patch": "@@ -34,37 +34,3 @@ module \"autoscaling-group\" {\n       map(\"key\", \"Provisioner\", \"value\", \"terraform\",                     \"propagate_at_launch\", true)\n     )}\"]\n }\n-\n-module \"autoscaling_group_admin\" {\n-  source = \"git@github.com:AnalysisByDesign/abd-cloud-modules.git//compute/asg\"\n-\n-  # Required variables\n-  name       = \"${format(\"%s-%s-admin\", local.vpc_name, var.name)}\"\n-  subnet_ids = [\"${data.aws_subnet.asg.*.id}\"]\n-\n-  # Optional variables\n-  launch_template_id = \"${module.launch_template_admin.id}\"\n-\n-  min_size                  = \"${var.asg_admin_min_size}\"\n-  desired_capacity          = \"${var.asg_admin_desired_capacity}\"\n-  max_size                  = \"${var.asg_admin_max_size}\"\n-  default_cooldown          = \"${var.asg_default_cooldown}\"\n-  health_check_grace_period = \"${var.asg_health_check_grace_period}\"\n-  capacity_timeout          = \"${var.asg_capacity_timeout}\"\n-  target_group_arns         = [\"${module.load_balancer_admin.target_group_arn}\"]\n-  health_check_type         = \"ELB\"\n-  force_delete              = \"${var.asg_force_delete}\"\n-  termination_policies      = [\"${var.asg_termination_policies}\"]\n-  delete_timeout            = \"${var.asg_delete_timeout}\"\n-\n-  tag_map = [\"${list(\n-      map(\"key\", \"Name\",        \"value\", \"${format(\"%s-%s-admin\", local.vpc_name, var.name)}\", \"propagate_at_launch\", true),\n-      map(\"key\", \"Account\",     \"value\", \"${var.account_name}\",           \"propagate_at_launch\", true),\n-      map(\"key\", \"Owner\",       \"value\", \"${var.common_tag_owner}\",       \"propagate_at_launch\", true),\n-      map(\"key\", \"Project\",     \"value\", \"${var.common_tag_project}\",     \"propagate_at_launch\", true),\n-      map(\"key\", \"SubSystem\",   \"value\", \"${var.common_tag_subsystem}\",   \"propagate_at_launch\", true),\n-      map(\"key\", \"Component\",   \"value\", \"${var.common_tag_component}\",   \"propagate_at_launch\", true),\n-      map(\"key\", \"Environment\", \"value\", \"${var.common_tag_environment}\", \"propagate_at_launch\", true),\n-      map(\"key\", \"Provisioner\", \"value\", \"terraform\",                     \"propagate_at_launch\", true)\n-    )}\"]\n-}"
      },
      {
        "filename": "tf-templates/compute/ec2-asg/launch-template.tf",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "status": "modified",
        "patch": "@@ -19,24 +19,6 @@ module \"launch_template\" {\n   user_data_script = \"${local.user_data_script}\"\n }\n \n-module \"launch_template_admin\" {\n-  source = \"git@github.com:AnalysisByDesign/abd-cloud-modules.git//compute/launch-template\"\n-\n-  # Required variables\n-  name               = \"${format(\"%s-%s-admin\", local.vpc_name, var.name)}\"\n-  image_id           = \"${data.aws_ami.this.id}\"\n-  security_group_ids = [\"${module.ec2-sg.id}\"]\n-  common_tags        = \"${local.common_tags}\"\n-\n-  # Optional variables\n-  ec2_instance_type = \"${var.asg_admin_ec2_instance_type}\"\n-  ssh_key_name      = \"${format(\"%s-%s\", local.vpc_name, var.asg_ssh_key_name)}\"\n-  require_public_ip = false\n-  iam_profile_id    = \"${aws_iam_instance_profile.ec2-asg.name}\"\n-\n-  user_data_script = \"${local.user_data_script}\"\n-}\n-\n locals {\n   user_data_script = \"${base64encode(data.template_file.user_data_script.rendered)}\"\n }"
      },
      {
        "filename": "tf-templates/compute/ec2-asg/route53-regular.tf",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -20,11 +20,9 @@ module \"dns_load_balancer\" {\n }\n \n module \"dns_load_balancer_admin\" {\n-  source = \"git@github.com:AnalysisByDesign/abd-cloud-modules.git//network/dns/alias-record\"\n+  source = \"git@github.com:AnalysisByDesign/abd-cloud-modules.git//network/dns/record\"\n \n-  zone_id                      = \"${data.aws_route53_zone.public.zone_id}\"\n-  name                         = \"\"\n-  alias_name                   = \"${module.load_balancer_admin.alb_dns_name}\"\n-  alias_zone_id                = \"${module.load_balancer_admin.alb_zone_id}\"\n-  alias_evaluate_target_health = false\n+  zone_id = \"${data.aws_route53_zone.public.zone_id}\"\n+  name    = \"\"\n+  records = [\"127.0.0.1\"]\n }"
      },
      {
        "filename": "tf-templates/compute/ec2-asg/variables.tf",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "status": "modified",
        "patch": "@@ -83,12 +83,6 @@ variable \"asg_ec2_instance_type\" {\n   default     = \"t3.small\"\n }\n \n-variable \"asg_admin_ec2_instance_type\" {\n-  description = \"The EC2 admin instance type to build\"\n-  type        = \"string\"\n-  default     = \"t3.medium\"\n-}\n-\n variable \"asg_iam_profile_name\" {\n   description = \"IAM instance profile to use for EC2 instances\"\n   type        = \"string\"\n@@ -168,24 +162,6 @@ variable \"asg_max_size\" {\n   default     = \"1\"\n }\n \n-variable \"asg_admin_min_size\" {\n-  description = \"Minimum size of the admin autoscaling group\"\n-  type        = \"string\"\n-  default     = \"0\"\n-}\n-\n-variable \"asg_admin_desired_capacity\" {\n-  description = \"Desired size of the admin autoscaling group\"\n-  type        = \"string\"\n-  default     = \"0\"\n-}\n-\n-variable \"asg_admin_max_size\" {\n-  description = \"Maximum size of the admin autoscaling group\"\n-  type        = \"string\"\n-  default     = \"1\"\n-}\n-\n variable \"asg_default_cooldown\" {\n   description = \"Cooldown period before allowing another autoscaling action\"\n   type        = \"string\""
      }
    ],
    "existing_codes": [
      "saving",
      "feature"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/naftulikay/titan/commit/a0ea4fd84a409fe4ee853effa9f309a005b0efc1",
    "files": [
      {
        "filename": "examples/aws/v1/single-no-nat/Makefile",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "added",
        "patch": "@@ -0,0 +1,4 @@\n+#!/usr/bin/make -f\n+\n+clean:\n+\t@rm -fr .terraform.lock.hcl .terraform terraform.tfstate\n\\ No newline at end of file"
      },
      {
        "filename": "examples/aws/v1/single-no-nat/main.tf",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+# Single, Small-Sized (1 AZ) Titan Network Example\n+\n+provider \"aws\" {\n+  region = \"us-east-1\"\n+}\n+\n+terraform {\n+  backend \"local\" {\n+    path = \"terraform.tfstate\"\n+  }\n+}\n+\n+module \"network\" {\n+  source = \"../../../../modules/aws/v1/titan_network\"\n+  network_id = 1\n+  name = \"development\"\n+  name_short = \"dev\"\n+  name_fancy = \"Titan Development Network\"\n+  nat_enabled = false\n+  domain = \"us-east-1.mycompany.com\"\n+  subnets_per_layer = 1\n+}"
      },
      {
        "filename": "modules/aws/v1/titan_environment/exports/outputs.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -56,6 +56,7 @@ output name_fancy { value = module.environment.name_fancy }\n output name_short { value = module.environment.name_short }\n output name { value = module.environment.name }\n output nat_allocation_ids { value = module.environment.nat_allocation_ids }\n+output nat_enabled { value = module.environment.nat_enabled }\n output nat_gateway_ids { value = module.environment.nat_gateway_ids }\n output nat_interface_ids { value = module.environment.nat_interface_ids }\n output nat_private_ips { value = module.environment.nat_private_ips }"
      },
      {
        "filename": "modules/aws/v1/titan_environment/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -9,6 +9,7 @@ module \"network\" {\n   name = var.name\n   name_fancy = var.name_fancy\n   name_short = var.name_short\n+  nat_enabled = var.nat_enabled\n   netbios_name_servers = var.netbios_name_servers\n   network_id = var.network_id\n   ntp_servers = var.ntp_servers"
      },
      {
        "filename": "modules/aws/v1/titan_environment/o.network.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -50,6 +50,7 @@ output name_fancy { value = module.network.name_fancy }\n output name_short { value = module.network.name_short }\n output name { value = module.network.name }\n output nat_allocation_ids { value = module.network.nat_allocation_ids }\n+output nat_enabled { value = module.network.nat_enabled }\n output nat_gateway_ids { value = module.network.nat_gateway_ids }\n output nat_interface_ids { value = module.network.nat_interface_ids }\n output nat_private_ips { value = module.network.nat_private_ips }"
      },
      {
        "filename": "modules/aws/v1/titan_environment/v.network.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -16,6 +16,15 @@ variable name {}\n variable name_fancy {}\n variable name_short {}\n \n+variable nat_enabled {\n+  type = bool\n+  default = true\n+\n+  description = <<-EOF\n+    Whether to create NAT gateways and relevant routes and resources.\n+  EOF\n+}\n+\n variable netbios_name_servers {\n   type = list(string)\n   default = []"
      },
      {
        "filename": "modules/aws/v1/titan_hub/exports/outputs.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -49,6 +49,7 @@ output name_fancy { value = module.hub.name_fancy }\n output name_short { value = module.hub.name_short }\n output name { value = module.hub.name }\n output nat_allocation_ids { value = module.hub.nat_allocation_ids }\n+output nat_enabled { value = module.hub.nat_enabled }\n output nat_gateway_ids { value = module.hub.nat_gateway_ids }\n output nat_interface_ids { value = module.hub.nat_interface_ids }\n output nat_private_ips { value = module.hub.nat_private_ips }"
      },
      {
        "filename": "modules/aws/v1/titan_hub/main.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -9,6 +9,7 @@ module \"network\" {\n   name = var.name\n   name_fancy = var.name_fancy\n   name_short = var.name_short\n+  nat_enabled = var.nat_enabled\n   netbios_name_servers = var.netbios_name_servers\n   network_id = var.network_id\n   ntp_servers = var.ntp_servers"
      },
      {
        "filename": "modules/aws/v1/titan_hub/o.network.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -50,6 +50,7 @@ output name_fancy { value = module.network.name_fancy }\n output name_short { value = module.network.name_short }\n output name { value = module.network.name }\n output nat_allocation_ids { value = module.network.nat_allocation_ids }\n+output nat_enabled { value = module.network.nat_enabled }\n output nat_gateway_ids { value = module.network.nat_gateway_ids }\n output nat_interface_ids { value = module.network.nat_interface_ids }\n output nat_private_ips { value = module.network.nat_private_ips }"
      },
      {
        "filename": "modules/aws/v1/titan_hub/v.network.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "modified",
        "patch": "@@ -16,6 +16,15 @@ variable name {}\n variable name_fancy {}\n variable name_short {}\n \n+variable nat_enabled {\n+  type = bool\n+  default = true\n+\n+  description = <<-EOF\n+    Whether to create NAT gateways and relevant routes and resources.\n+  EOF\n+}\n+\n variable netbios_name_servers {\n   type = list(string)\n   default = []"
      },
      {
        "filename": "modules/aws/v1/titan_layer/exports/outputs.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -10,6 +10,7 @@ output ipv6_cidr_block_association_ids { value = module.layer.ipv6_cidr_block_as\n output ipv6_cidr_blocks { value = module.layer.ipv6_cidr_blocks }\n output is_public { value = module.layer.is_public }\n output name { value = module.layer.name }\n+output nat_enabled { value = module.layer.nat_enabled }\n output nat_gateway_ids { value = module.layer.nat_gateway_ids }\n output network_acl_id { value = module.layer.network_acl_id }\n output network_cidr_block { value = module.layer.network_cidr_block }"
      },
      {
        "filename": "modules/aws/v1/titan_layer/o.nat.tf",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "status": "added",
        "patch": "@@ -0,0 +1,9 @@\n+# Titan Layer Module - NAT Outputs\n+\n+output nat_enabled {\n+  value = var.nat_enabled\n+\n+  description = <<-EOF\n+    Whether NAT gateways and relevant resources are created.\n+  EOF\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/aws/v1/titan_layer/r.routing.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -43,8 +43,8 @@ resource aws_route public_ipv6 {\n \n # Route for Private, NAT Layers\n resource aws_route private {\n-  # only created for private layers\n-  count = var.is_public ? 0 : length(var.availability_zones)\n+  # only created for private layers when nat is enabled\n+  count = var.is_public || !var.nat_enabled ? 0 : length(var.availability_zones)\n \n   route_table_id = aws_route_table.default[count.index].id\n   # there must be one NAT gateway per availability zone, hence 1:1 route table to NAT gateway"
      },
      {
        "filename": "modules/aws/v1/titan_layer/v.nat.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+# Titan Layer Module - Routing Variables\n+\n+variable nat_enabled {\n+  type = bool\n+  default = true\n+\n+  description = <<-EOF\n+    Whether to create NAT gateways and relevant routes and resources.\n+  EOF\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/aws/v1/titan_network/exports/outputs.tf",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "modified",
        "patch": "@@ -49,6 +49,7 @@ output name_fancy { value = module.network.name_fancy }\n output name_short { value = module.network.name_short }\n output name { value = module.network.name }\n output nat_allocation_ids { value = module.network.nat_allocation_ids }\n+output nat_enabled { value = moudle.network.nat_enabled }\n output nat_gateway_ids { value = module.network.nat_gateway_ids }\n output nat_interface_ids { value = module.network.nat_interface_ids }\n output nat_private_ips { value = module.network.nat_private_ips }"
      },
      {
        "filename": "modules/aws/v1/titan_network/o.nat.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,5 +1,13 @@\n # Titan Network Module - NAT Gateway Outputs\n \n+output nat_enabled {\n+  value = var.nat_enabled\n+\n+  description = <<-EOF\n+    Whether NAT gateways and relevant resources are created.\n+  EOF\n+}\n+\n output nat_allocation_ids {\n   value = aws_nat_gateway.default.*.allocation_id\n "
      },
      {
        "filename": "modules/aws/v1/titan_network/r.layers.tf",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -14,6 +14,7 @@ module \"dmz_layer\" {\n   zone = \"${var.name_short}.${var.domain}\"\n   internet_gateway_id = aws_internet_gateway.default.id\n   cidr_start = 0 * 5\n+  nat_enabled = var.nat_enabled\n }\n \n # The Routing Layer: Layer 5 and Layer 7 Routing\n@@ -29,6 +30,7 @@ module \"routing_layer\" {\n   zone = \"${var.name_short}.${var.domain}\"\n   cidr_start = 1 * 5\n   egress_only_gateway_id = aws_egress_only_internet_gateway.default.id\n+  nat_enabled = var.nat_enabled\n   nat_gateway_ids = aws_nat_gateway.default.*.id\n }\n \n@@ -45,6 +47,7 @@ module \"service_layer\" {\n   zone = \"${var.name_short}.${var.domain}\"\n   cidr_start = 2 * 5\n   egress_only_gateway_id = aws_egress_only_internet_gateway.default.id\n+  nat_enabled = var.nat_enabled\n   nat_gateway_ids = aws_nat_gateway.default.*.id\n }\n \n@@ -61,6 +64,7 @@ module \"data_layer\" {\n   zone = \"${var.name_short}.${var.domain}\"\n   cidr_start = 3 * 5\n   egress_only_gateway_id = aws_egress_only_internet_gateway.default.id\n+  nat_enabled = var.nat_enabled\n   nat_gateway_ids = aws_nat_gateway.default.*.id\n }\n \n@@ -77,6 +81,7 @@ module \"admin_layer\" {\n   zone = \"${var.name_short}.${var.domain}\"\n   cidr_start = 4 * 5\n   egress_only_gateway_id = aws_egress_only_internet_gateway.default.id\n+  nat_enabled = var.nat_enabled\n   nat_gateway_ids = aws_nat_gateway.default.*.id\n }\n \n@@ -97,5 +102,6 @@ module \"net_layer\" {\n   cidr_mask_bits = 8\n \n   egress_only_gateway_id = aws_egress_only_internet_gateway.default.id\n+  nat_enabled = var.nat_enabled\n   nat_gateway_ids = aws_nat_gateway.default.*.id\n }"
      },
      {
        "filename": "modules/aws/v1/titan_network/r.nat.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -2,7 +2,7 @@\n \n # NAT Gateways per Availability Zone\n resource aws_nat_gateway default {\n-  count = var.subnets_per_layer\n+  count = var.nat_enabled ? var.subnets_per_layer : 0\n \n   allocation_id = aws_eip.nat[count.index].id\n   subnet_id = module.dmz_layer.subnet_ids[count.index]\n@@ -21,7 +21,7 @@ resource aws_nat_gateway default {\n \n # Elastic IP Allocation per NAT Gateway\n resource aws_eip nat {\n-  count = var.subnets_per_layer\n+  count = var.nat_enabled ? var.subnets_per_layer : 0\n \n   vpc = true\n "
      },
      {
        "filename": "modules/aws/v1/titan_network/r.routing.tf",
        "additions": 25,
        "deletions": 12,
        "changes": 37,
        "status": "modified",
        "patch": "@@ -4,21 +4,34 @@\n resource aws_default_route_table r {\n   default_route_table_id = aws_vpc.default.default_route_table_id\n \n-  # IPv4 summary route via first NAT Gatweway\n-  route {\n-    cidr_block = \"0.0.0.0/0\"\n-    nat_gateway_id = aws_nat_gateway.default[0].id\n-  }\n-\n-  # IPv6 summary route via Egress-Only Internet Gateway\n-  route {\n-    egress_only_gateway_id = aws_egress_only_internet_gateway.default.id\n-    ipv6_cidr_block = \"::/0\"\n-  }\n-\n   tags = {\n     Name = \"${var.name_short}.${var.domain} Default Route Table\"\n     titan_network = var.name\n     titan_zone = \"${var.name_short}.${var.domain}\"\n   }\n }\n+\n+resource aws_route ipv4_egress_nat {\n+  count = var.nat_enabled ? 1 : 0\n+\n+  route_table_id = aws_default_route_table.r.id\n+\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  nat_gateway_id = aws_nat_gateway.default[0].id\n+}\n+\n+resource aws_route ipv4_egress_public {\n+  count = var.nat_enabled ? 0 : 1\n+\n+  route_table_id = aws_default_route_table.r.id\n+\n+  destination_cidr_block = \"0.0.0.0/0\"\n+  gateway_id = aws_internet_gateway.default.id\n+}\n+\n+resource aws_route ipv6 {\n+  route_table_id = aws_default_route_table.r.id\n+\n+  destination_ipv6_cidr_block = \"::/0\"\n+  egress_only_gateway_id = aws_egress_only_internet_gateway.default.id\n+}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/aws/v1/titan_network/v.nat.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+# Titan Network Module - NAT Variables\n+\n+variable nat_enabled {\n+  type = bool\n+  default = true\n+\n+  description = <<-EOF\n+    Whether to create NAT gateways and relevant routes and resources.\n+  EOF\n+}\n\\ No newline at end of file"
      }
    ],
    "existing_codes": [
      "networking",
      "saving"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/bjacobel/terraform/commit/27738267ad6467f453f998419eca4b870b824faa",
    "files": [
      {
        "filename": "ecs/main.tf",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -67,6 +67,10 @@ resource \"aws_instance\" \"ecs_host\" {\n   tags {\n     Cluster = \"${var.cluster_name}\"\n   }\n+  \n+  credit_specification {\n+    cpu_credits = \"standard\"\n+  }\n \n   user_data = <<EOF\n ${data.template_file.user_data.rendered}"
      }
    ],
    "existing_codes": [
      "awareness",
      "policy"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/figurate/bedrock/commit/bffc023eeff075ef281b1fd261897f4c7216b354",
    "files": [
      {
        "filename": "terraform/blueprints/bastion/aws/vars.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -18,7 +18,7 @@ variable \"image_owner\" {\n \n variable \"instance_type\" {\n   description = \"AWS instance type for bastion\"\n-  default = \"t2.micro\"\n+  default = \"t3.micro\"\n }\n \n variable \"enabled\" {"
      }
    ],
    "existing_codes": [
      "saving",
      "instance"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/singaporewaketools/iaac/commit/197502b1ac4bab77b9ab017b755c4d75ddaa218b",
    "files": [
      {
        "filename": "README.md",
        "additions": 109,
        "deletions": 2,
        "changes": 111,
        "status": "modified",
        "patch": "@@ -1,2 +1,109 @@\n-# iaac\n-Infrastructure as code\n+# Terraform based infrastructure\n+\n+This repository follows the Terragrunt layout to manage state while keeping the TF code DRY.\n+\n+```\n+$ tree -L 3\n+.\n+\u251c\u2500\u2500 live\n+\u2502   \u251c\u2500\u2500 main\n+\u2502   \u2502   \u251c\u2500\u2500 terragrunt.hcl\n+\u2502   \u2502   \u251c\u2500\u2500 common_vars.yaml\n+\u2502   \u2502   \u251c\u2500\u2500 account-base\n+\u2514\u2500\u2500 modules\n+    \u251c\u2500\u2500 README.md\n+    \u251c\u2500\u2500 basic\n+    \u2502   \u251c\u2500\u2500 README.md\n+    \u2502   \u251c\u2500\u2500 private-subnets\n+    \u2502   \u251c\u2500\u2500 public-subnets\n+    \u2502   \u251c\u2500\u2500 s3-bucket-simple\n+    \u2502   \u251c\u2500\u2500 ssh-key\n+    \u2502   \u2514\u2500\u2500 vpc\n+    \u2514\u2500\u2500 composed\n+        \u251c\u2500\u2500 README.md\n+        \u2514\u2500\u2500 account-base\n+```\n+\n+## Why Terragrunt?\n+\n+- Automatically initializes state S3 buckets with versioning, encryption and DynamoDb state locks\n+- Handles state transparently across configuration code\n+- Handles inheritance of environment settings across infrastructure layers\n+- Handles cross layer dependencies and parameter passing\n+\n+## CIDR Overview\n+\n+This is not automated yet, ideally we move to something like [go-jek/gana](https://blog.gojekengineering.com/gana-a-solution-to-keep-up-with-scale-e4bbe7561960)\n+\n+For now:\n+\n+```\n+ for n in $(find . -type d -name network-* -not -path \"*/.terragrunt-cache/*\");do echo $n;grep '  cidr_block = \"' $n/terragrunt.hcl;done\n+./live/main/network-prod\n+  cidr_block = \"10.50.0.0/20\"\n+```\n+\n+## Terraform set up\n+\n+Currently using TF 0.12.16\n+\n+OSX Set up:\n+\n+```\n+curl -Lo tf.zip https://releases.hashicorp.com/terraform/0.12.16/terraform_0.12.16_darwin_amd64.zip\n+unzip tf.zip && rm tf.zip\n+sudo mv terraform /usr/local/bin/\n+```\n+\n+\n+## Terragrunt set up\n+\n+```\n+curl -Lo terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.21.2/terragrunt_darwin_amd64\n+chmod +x terragrunt && mv /usr/local/bin/\n+```\n+\n+## Custom providers set up\n+\n+### terraform-provider-filesystem\n+\n+- Download the compiled binary for Terraform 0.12 from [GitHub releases][https://github.com/sethvargo/terraform-provider-filesystem/releases].\n+\n+- Unzip/untar the archive.\n+\n+- Move it into `$HOME/.terraform.d/plugins`:\n+\n+```sh\n+# OSX download one-liner\n+$ curl -L https://github.com/sethvargo/terraform-provider-filesystem/releases/download/v0.1.1/darwin_amd64.tgz | tar -xzf -\n+\n+$ mkdir -p $HOME/.terraform.d/plugins\n+$ mv terraform-provider-filesystem $HOME/.terraform.d/plugins/terraform-provider-filesystem\n+```\n+\n+- Create your Terraform configurations as normal, and run `terraform init`:\n+\n+```sh\n+$ terraform init\n+```\n+\n+### terraform-provider-kops\n+\n+- Download the compiled binary for Terraform 0.12 from [GitHub releases](https://github.com/compareasiagroup/terraform-provider-kops/releases/tag/0.1.0)\n+\n+- Unzip/untar the archive\n+\n+- Move it into `$HOME/.terraform.d/plugins`:\n+\n+```sh\n+$ curl -L https://github.com/compareasiagroup/terraform-provider-kops/releases/download/0.1.0/terraform-provider-kops_0.1.0_darwin_amd64.tgz | tar -xzf -\n+\n+$ mkdir -p $HOME/.terraform.d/plugins\n+$ mv terraform-provider-kops $HOME/.terraform.d/plugins/terraform-provider-kops\n+```\n+\n+- Create your Terraform configurations as normal, and run `terraform init`:\n+\n+```sh\n+terraform init\n+```"
      },
      {
        "filename": "live/.gitignore",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+# Terraform\n+.terraform\n+*.tfstate\n+*.tfstate.backup\n+\n+# Terragrunt\n+.terragrunt-cache\n+\n+# OS X\n+.ssh\n+.history\n+.DS_Store"
      },
      {
        "filename": "live/main/.envrc",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+export AWS_PROFILE=swt-main"
      },
      {
        "filename": "live/main/account-base/terragrunt.hcl",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+terraform {\n+  source = \"../../../modules//composed/account-base\"\n+}\n+\n+include {\n+  path = find_in_parent_folders()\n+}\n+\n+locals {\n+  common_vars = yamldecode(file(\"${get_terragrunt_dir()}/${find_in_parent_folders(\"common_vars.yaml\")}\"))\n+}\n+\n+inputs = {\n+  namespace          = \"swt\"\n+  stage              = \"svc\"\n+  name               = \"main\"\n+  public_zones       = {}\n+  billing_threshhold = 400 #USD\n+}"
      },
      {
        "filename": "live/main/common_vars.yaml",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+root_dns:    example.com"
      },
      {
        "filename": "live/main/terragrunt.hcl",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "status": "added",
        "patch": "@@ -0,0 +1,16 @@\n+remote_state {\n+  backend = \"s3\"\n+  config = {\n+    bucket         = \"swt-svc-main-tfstate\"\n+    key            = \"${path_relative_to_include()}/terraform.tfstate\"\n+    region         = \"ap-southeast-1\"\n+    encrypt        = true\n+    dynamodb_table = \"swt-svc-main-tfstate\"\n+  }\n+}\n+\n+inputs = {\n+  aws_region = \"ap-southeast-1\"\n+  # because local_file provider stores the file path in state, we have to define an absolute path\n+  output_dir = get_terragrunt_dir()\n+}"
      },
      {
        "filename": "modules/.gitignore",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+# Terraform\n+.terraform\n+terraform.tfvars\n+*.tfstate\n+*.tfstate.backup\n+tfstate-tmp.json\n+\n+# OS X\n+.history\n+.DS_Store"
      },
      {
        "filename": "modules/README.md",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+# Modules\n+\n+To keep our environments DRY, all infra is instantiated from these modules - currently we are not versioning the modules for staged roll-outs of changes from non-prod to prod. In the future, this directory should be managed in a separate repository with a CI pipeline publishing versioned modules.\n+\n+## Basic\n+\n+Basic Modules are the building blocks for our all the different environments in our infrastructe. These modules do not define providers or backend configuration as they are composed into larger infrastructure pieces, inheriting all Terraform providers from there.\n+\n+## Composed\n+\n+These are the actual infrastructure templates used to create the different environments. These modules have placeholders for providers and backend configuration for Terragrunt to fill in.\n+\n+These modules directly relate to state files, still keeping them small reduces impact of changes, and these can define inter dependencies managed by Terragrunt."
      },
      {
        "filename": "modules/basic/README.md",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+# Basic modules\n+\n+These modules are small blocks used for compositition into final infra\n+\n+They do not contain provider definitions"
      },
      {
        "filename": "modules/composed/README.md",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+# Composed modules\n+\n+These modules are meant to be used by Terragrunt and contain provider and terraform backend placeholder blocks"
      },
      {
        "filename": "modules/composed/account-base/README.md",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+# CAG AWS Account base configuration\n+\n+Public Zones + cross account IAM Rights, AWS Budgets per service, ..."
      },
      {
        "filename": "modules/composed/account-base/billing.tf",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "status": "added",
        "patch": "@@ -0,0 +1,91 @@\n+resource \"aws_cloudwatch_metric_alarm\" \"account_billing\" {\n+  provider            = aws.billing\n+  alarm_name          = \"account-billing-alarm\"\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods  = \"1\"     # every 6 hours\n+  period              = \"21600\" # The period in seconds ~ 6 hours\n+  metric_name         = \"EstimatedCharges\"\n+  namespace           = \"AWS/Billing\"\n+  statistic           = \"Average\"\n+  threshold           = var.billing_threshhold\n+  alarm_description   = \"Billing alarm by account\"\n+  alarm_actions       = [aws_sns_topic.billing_alerts.arn]\n+\n+  dimensions = {\n+    Currency      = \"USD\"\n+    LinkedAccount = data.aws_caller_identity.current.account_id\n+  }\n+}\n+\n+resource \"aws_sns_topic\" \"billing_alerts\" {\n+  provider = aws.billing\n+  name     = \"${local.id}-billing-alerts\"\n+\n+  tags = merge(\n+    local.tags,\n+    map(\n+      \"Name\", \"${local.id}-billing-alerts\"\n+    )\n+  )\n+}\n+\n+## Billing IAM\n+# give AWS Budgets permissions to publish to billing_alerts sns topic\n+resource \"aws_sns_topic_policy\" \"billing_alerts\" {\n+  provider = aws.billing\n+  arn      = aws_sns_topic.billing_alerts.arn\n+  policy   = data.aws_iam_policy_document.sns_billing_alerts.json\n+}\n+\n+data \"aws_iam_policy_document\" \"sns_billing_alerts\" {\n+  provider = aws.billing\n+  policy_id = \"__default_policy_ID\"\n+\n+  statement {\n+    sid = \"AWSBudgetsAlerts\"\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"budgets.amazonaws.com\"]\n+    }\n+    actions = [\n+      \"SNS:Publish\",\n+    ]\n+    resources = [\n+      aws_sns_topic.billing_alerts.arn,\n+    ]\n+  }\n+\n+  statement {\n+    sid = \"__default_statement_ID\"\n+\n+    principals {\n+      type        = \"AWS\"\n+      identifiers = [\"*\"]\n+    }\n+    actions = [\n+      \"SNS:GetTopicAttributes\",\n+      \"SNS:SetTopicAttributes\",\n+      \"SNS:AddPermission\",\n+      \"SNS:RemovePermission\",\n+      \"SNS:DeleteTopic\",\n+      \"SNS:Subscribe\",\n+      \"SNS:ListSubscriptionsByTopic\",\n+      \"SNS:Publish\",\n+      \"SNS:Receive\",\n+    ]\n+\n+    condition {\n+      test     = \"StringEquals\"\n+      variable = \"AWS:SourceOwner\"\n+\n+      values = [\n+        data.aws_caller_identity.current.account_id,\n+      ]\n+    }\n+\n+    resources = [\n+      aws_sns_topic.billing_alerts.arn,\n+    ]\n+  }\n+}"
      },
      {
        "filename": "modules/composed/account-base/dns.tf",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "status": "added",
        "patch": "@@ -0,0 +1,38 @@\n+resource \"aws_route53_zone\" \"public_zones\" {\n+  for_each = var.public_zones\n+  name     = each.key\n+\n+  tags = merge(\n+    local.tags,\n+    map(\n+      \"Name\", \"${local.id}-${each.key}\"\n+    )\n+  )\n+}\n+\n+data \"aws_vpc\" \"default\" {\n+  default = \"true\"\n+}\n+\n+data \"aws_route53_zone\" \"parents\" {\n+  for_each = { for domain, zone in var.public_zones:\n+    domain => zone\n+    if length(zone.parent) > 0\n+  }\n+  name = each.value.parent\n+}\n+\n+resource \"aws_route53_record\" \"parent_ns\" {\n+  for_each = { for domain, zone in var.public_zones:\n+    domain => zone\n+    if length(zone.parent) > 0\n+  }\n+\n+  zone_id = data.aws_route53_zone.parents[each.key].zone_id\n+  name    = each.key\n+  type    = \"NS\"\n+  ttl     = \"900\"\n+\n+  records = aws_route53_zone.public_zones[each.key].name_servers\n+}\n+"
      },
      {
        "filename": "modules/composed/account-base/main.tf",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "status": "added",
        "patch": "@@ -0,0 +1,10 @@\n+locals {\n+  id = join(\"-\",list(var.namespace,var.stage,var.name))\n+  tags = {\n+    Name      = local.id\n+    Namespace = var.namespace\n+    Stage     = var.stage\n+  }\n+}\n+\n+data \"aws_caller_identity\" \"current\" {}\n\\ No newline at end of file"
      },
      {
        "filename": "modules/composed/account-base/outputs.tf",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+output \"public_zones\" {\n+  value = aws_route53_zone.public_zones\n+}"
      },
      {
        "filename": "modules/composed/account-base/providers.tf",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+provider \"aws\" {\n+  region = var.aws_region\n+  version = \"~> 2.40\"\n+}\n+\n+provider \"aws\" {\n+  region = \"us-east-1\"\n+  version = \"~> 2.0\"\n+  alias = \"billing\"\n+}\n+\n+terraform {\n+  # The configuration for this backend will be filled in by Terragrunt\n+  backend \"s3\" {}\n+\n+  # The latest version of Terragrunt (v0.19.0 and above) requires Terraform 0.12.0 or above.\n+  # Additionaly, these modules use for_each resource configuration introduced with Terraform 0.12.6 and above\n+  required_version = \">= 0.12.6\"\n+}"
      },
      {
        "filename": "modules/composed/account-base/variables.tf",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "status": "added",
        "patch": "@@ -0,0 +1,29 @@\n+variable \"name\" {\n+  description = \"Name\"\n+}\n+\n+variable \"namespace\" {\n+  description = \"`cag`. This will be used to scope the name\"\n+  default     = \"cag\"\n+}\n+\n+variable \"stage\" {\n+  description = \"Stage / Environment (e.g. `stage`, `prod`)\"\n+  default     = \"stage\"\n+}\n+\n+variable \"public_zones\" {\n+  description = \"Public Route53 Zones\"\n+  type        = map(object({\n+    parent           = string      # set up NS record in this zone\n+  }))\n+  default     = {}\n+}\n+\n+variable \"billing_threshhold\" {\n+  description = \"Threshhold for estimated charges to trigger billing alerts\"\n+}\n+\n+variable \"aws_region\" {\n+  type = string\n+}"
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/singaporewaketools/iaac/commit/cebf7f883b1325a4db1c0e7b3cd0d6684a7c41b0",
    "files": [
      {
        "filename": "README.md",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -6,7 +6,9 @@ create `live/main/common_secret_vars.yaml`\n \n ```\n billing_subscriptions:\n-  sms: \"+65<redacted>\"\n+  id: \n+    protocol: \"sms\"\n+    endpoint: \"+65<redacted>\"\n ```\n \n This repository follows the Terragrunt layout to manage state while keeping the TF code DRY."
      },
      {
        "filename": "modules/composed/account-base/billing.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -33,8 +33,8 @@ resource \"aws_sns_topic_subscription\" \"billing_alerts\" {\n   for_each = var.billing_subscriptions\n   provider  = aws.billing\n   topic_arn = aws_sns_topic.billing_alerts.arn\n-  protocol  = each.key\n-  endpoint  = each.value\n+  protocol  = each.value.protocol\n+  endpoint  = each.value.endpoint\n }\n \n ## Billing IAM"
      },
      {
        "filename": "modules/composed/account-base/variables.tf",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "status": "modified",
        "patch": "@@ -26,7 +26,10 @@ variable \"billing_threshhold\" {\n \n variable \"billing_subscriptions\" {\n   description = \"Protocol to endpoint mapping for notifications (email not supported)\"\n-  type = map(string)\n+  type = map(object({\n+    protocol = string\n+    endpoint = string\n+  }))\n   default = {}\n }\n "
      }
    ],
    "existing_codes": [
      "alert",
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/sbogacz/terraform-aws-state-backend/commit/174486319f3b956807d56e5433880f9978884f93",
    "files": [
      {
        "filename": "main.tf",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "status": "modified",
        "patch": "@@ -46,8 +46,8 @@ resource \"aws_dynamodb_table\" \"dynamodb_terraform_state_lock\" {\n   # https://www.terraform.io/docs/backends/types/s3.html#dynamodb_table\n   hash_key = \"LockID\"\n \n-  read_capacity  = \"${var.lock_table_read_capacity}\"\n-  write_capacity = \"${var.lock_table_write_capacity}\"\n+  # Use DynamoDB On Demand billing to reduce costs\n+  billing_mode = \"PAY_PER_REQUEST\"\n \n   attribute {\n     name = \"LockID\""
      },
      {
        "filename": "outputs.tf",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "status": "modified",
        "patch": "@@ -9,7 +9,7 @@ locals {\n }\n \n output \"state_s3_bucket_name\" {\n-  value = \"${aws_s3_bucket.terraform_state.arn}\"\n+  value = \"${aws_s3_bucket.terraform_state.id}\"\n }\n \n output \"state_s3_bucket_arn\" {"
      },
      {
        "filename": "variables.tf",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "status": "modified",
        "patch": "@@ -3,16 +3,6 @@ variable \"bucket_prefix\" {\n   type        = \"string\"\n }\n \n-variable \"lock_table_read_capacity\" {\n-  description = \"the read capacity of the configured dynamo state lock table\"\n-  default     = 5\n-}\n-\n-variable \"lock_table_write_capacity\" {\n-  description = \"the write capacity of the configured dynamo state lock table\"\n-  default     = 5\n-}\n-\n variable \"tags\" {\n   description = \"tags to attach to the created resources\"\n   default     = {}"
      }
    ],
    "existing_codes": [
      "saving",
      "storage"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/nationalarchives/tdr-grafana/commit/213ea410b9a2146cc804213dedeacdff4f07a74a",
    "files": [
      {
        "filename": "terraform/modules/grafana/flowlogs.tf",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "status": "removed",
        "patch": "@@ -1,65 +0,0 @@\n-resource \"aws_flow_log\" \"grafana_flowlog\" {\n-  iam_role_arn    = aws_iam_role.grafana_flowlog_role.arn\n-  log_destination = aws_cloudwatch_log_group.grafana_flowlog_log_group.arn\n-  traffic_type    = \"ALL\"\n-  vpc_id          = aws_vpc.main.id\n-}\n-\n-resource \"aws_cloudwatch_log_group\" \"grafana_flowlog_log_group\" {\n-  name = \"/flowlogs/grafana-vpc-${var.environment}\"\n-  tags = merge(\n-    var.common_tags,\n-    map(\n-      \"Name\", \"flowlogs/grafana-vpc-${var.environment}\",\n-    )\n-  )\n-}\n-\n-resource \"aws_iam_role\" \"grafana_flowlog_role\" {\n-  name               = \"TDRGrafanaFlowlogRole${title(var.environment)}\"\n-  assume_role_policy = data.aws_iam_policy_document.grafana_flowlog_assume_role_policy.json\n-  tags = merge(\n-    var.common_tags,\n-    map(\n-      \"Name\", \"grafana-flowlog-role-${var.environment}\",\n-    )\n-  )\n-}\n-\n-data \"aws_iam_policy_document\" \"grafana_flowlog_assume_role_policy\" {\n-  version = \"2012-10-17\"\n-  statement {\n-    effect  = \"Allow\"\n-    actions = [\"sts:AssumeRole\"]\n-    principals {\n-      type        = \"Service\"\n-      identifiers = [\"vpc-flow-logs.amazonaws.com\"]\n-    }\n-  }\n-}\n-\n-resource \"aws_iam_policy\" \"grafana_flowlog_policy\" {\n-  name   = \"TDRGrafanaFlowlogPolicy${title(var.environment)}\"\n-  path   = \"/\"\n-  policy = data.aws_iam_policy_document.grafana_flowlog_policy.json\n-}\n-\n-data \"aws_iam_policy_document\" \"grafana_flowlog_policy\" {\n-  statement {\n-    actions = [\n-      \"logs:CreateLogStream\",\n-      \"logs:PutLogEvents\",\n-      \"logs:DescribeLogGroups\",\n-      \"logs:DescribeLogStreams\"\n-    ]\n-\n-    resources = [\n-      \"arn:aws:logs:*:*:log-group:/flowlogs/grafana-vpc-*\"\n-    ]\n-  }\n-}\n-\n-resource \"aws_iam_role_policy_attachment\" \"grafana_flowlog_attach\" {\n-  role       = aws_iam_role.grafana_flowlog_role.name\n-  policy_arn = aws_iam_policy.grafana_flowlog_policy.arn\n-}"
      },
      {
        "filename": "terraform/modules/grafana/outputs.tf",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -5,11 +5,3 @@ output alb_security_group_id {\n output \"public_subnets\" {\n   value = aws_subnet.public.*.id\n }\n-\n-output \"vpc_id\" {\n-  value = aws_vpc.main.id\n-}\n-\n-output \"vpc_tag_name\" {\n-  value = aws_vpc.main.tags[\"Name\"]\n-}"
      },
      {
        "filename": "terraform/modules/grafana/security.tf",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "status": "modified",
        "patch": "@@ -7,9 +7,9 @@ data \"aws_ssm_parameter\" \"external_ips\" {\n }\n \n resource \"aws_security_group\" \"grafana_alb_group\" {\n-  name        = \"${var.app_name}-alb-security-group\"\n+  name        = \"tdr-grafana-alb-security-group\"\n   description = \"Controls access to the Grafana load balancer\"\n-  vpc_id      = aws_vpc.main.id\n+  vpc_id      = var.vpc_id\n   ingress {\n     protocol    = \"tcp\"\n     from_port   = 443\n@@ -26,9 +26,9 @@ resource \"aws_security_group\" \"grafana_alb_group\" {\n }\n \n resource \"aws_security_group\" \"ecs_tasks\" {\n-  name        = \"${var.app_name}-ecs-tasks-security-group-${var.environment}\"\n-  description = \"Allow inbound access from the keycloak load balancer only\"\n-  vpc_id      = aws_vpc.main.id\n+  name        = \"tdr-grafana-ecs-tasks-security-group-${var.environment}\"\n+  description = \"Allow inbound access from the Grafana load balancer only\"\n+  vpc_id      = var.vpc_id\n \n   ingress {\n     protocol        = \"tcp\"\n@@ -46,6 +46,6 @@ resource \"aws_security_group\" \"ecs_tasks\" {\n \n   tags = merge(\n     var.common_tags,\n-    map(\"Name\", \"${var.app_name}-ecs-task-security-group-${var.environment}\")\n+    map(\"Name\", \"tdr-grafana-ecs-task-security-group-${var.environment}\")\n   )\n }"
      },
      {
        "filename": "terraform/modules/grafana/subnets.tf",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "status": "added",
        "patch": "@@ -0,0 +1,63 @@\n+data \"aws_availability_zones\" \"available\" {}\n+\n+data \"aws_nat_gateway\" \"public\" {\n+  count = var.az_count\n+  tags = {\n+    Name = \"nat-gateway-${count.index}-mgmt-mgmt\"\n+  }\n+}\n+\n+# Bring default security group under Terraform management and remove all rules\n+resource \"aws_default_security_group\" \"default\" {\n+  vpc_id = var.vpc_id\n+}\n+\n+# Create var.az_count private subnets, each in a different AZ\n+resource \"aws_subnet\" \"private\" {\n+  count             = var.az_count\n+  cidr_block        = cidrsubnet(var.vpc_cidr_block, 8, count.index + 6)\n+  availability_zone = data.aws_availability_zones.available.names[count.index]\n+  vpc_id            = var.vpc_id\n+\n+  tags = merge(\n+    var.common_tags,\n+    map(\"Name\", \"tdr-grafana-private-subnet-${count.index}-${var.environment}\")\n+  )\n+}\n+\n+# Create var.az_count public subnets, each in a different AZ\n+resource \"aws_subnet\" \"public\" {\n+  count                   = var.az_count\n+  cidr_block              = cidrsubnet(var.vpc_cidr_block, 8, var.az_count + count.index + 2)\n+  availability_zone       = data.aws_availability_zones.available.names[count.index]\n+  vpc_id                  = var.vpc_id\n+  map_public_ip_on_launch = true\n+\n+  tags = merge(\n+    var.common_tags,\n+    map(\"Name\", \"tdr-grafana-public-subnet-${count.index}-${var.environment}\")\n+  )\n+}\n+\n+# Create a new route table for the private subnets, make it route non-local traffic through the NAT gateway to the internet\n+resource \"aws_route_table\" \"private\" {\n+  count  = var.az_count\n+  vpc_id = var.vpc_id\n+\n+  route {\n+    cidr_block     = \"0.0.0.0/0\"\n+    nat_gateway_id = data.aws_nat_gateway.public[count.index].id\n+  }\n+\n+  tags = merge(\n+    var.common_tags,\n+    map(\"Name\", \"route-table-${count.index}-tdr-grafana-${var.environment}\")\n+  )\n+}\n+\n+# Explicitly associate the newly created route tables to the private subnets (so they don't default to the main route table)\n+resource \"aws_route_table_association\" \"private\" {\n+  count          = var.az_count\n+  subnet_id      = aws_subnet.private.*.id[count.index]\n+  route_table_id = aws_route_table.private.*.id[count.index]\n+}"
      },
      {
        "filename": "terraform/modules/grafana/variables.tf",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -4,8 +4,6 @@ variable \"alb_target_group_arn\" {}\n \n variable \"alb_zone_id\" {}\n \n-variable \"app_name\" {}\n-\n variable \"az_count\" {}\n \n variable \"common_tags\" {}\n@@ -19,3 +17,9 @@ variable \"ecs_task_role_name\" {}\n variable \"environment\" {}\n \n variable \"region\" {}\n+\n+variable \"vpc_cidr_block\" {}\n+\n+variable \"vpc_id\" {}\n+\n+variable \"vpc_name_tag\" {}"
      },
      {
        "filename": "terraform/modules/grafana/vpc.tf",
        "additions": 0,
        "deletions": 100,
        "changes": 100,
        "status": "removed",
        "patch": "@@ -1,100 +0,0 @@\n-data \"aws_availability_zones\" \"available\" {\n-}\n-\n-resource \"aws_vpc\" \"main\" {\n-  cidr_block = \"10.0.0.0/16\"\n-\n-  tags = merge(\n-    var.common_tags,\n-    map(\"Name\", \"${var.app_name}-vpc-${var.environment}\")\n-  )\n-}\n-\n-# Bring default security group under Terraform management and remove all rules\n-resource \"aws_default_security_group\" \"default\" {\n-  vpc_id = aws_vpc.main.id\n-}\n-\n-# Create var.az_count private subnets, each in a different AZ\n-resource \"aws_subnet\" \"private\" {\n-  count             = var.az_count\n-  cidr_block        = cidrsubnet(aws_vpc.main.cidr_block, 8, count.index)\n-  availability_zone = data.aws_availability_zones.available.names[count.index]\n-  vpc_id            = aws_vpc.main.id\n-\n-  tags = merge(\n-    var.common_tags,\n-    map(\"Name\", \"${var.app_name}-private-subnet-${count.index}-${var.environment}\")\n-  )\n-}\n-\n-# Create var.az_count public subnets, each in a different AZ\n-resource \"aws_subnet\" \"public\" {\n-  count                   = var.az_count\n-  cidr_block              = cidrsubnet(aws_vpc.main.cidr_block, 8, var.az_count + count.index)\n-  availability_zone       = data.aws_availability_zones.available.names[count.index]\n-  vpc_id                  = aws_vpc.main.id\n-  map_public_ip_on_launch = true\n-\n-  tags = merge(\n-    var.common_tags,\n-    map(\"Name\", \"${var.app_name}-public-subnet-${count.index}-${var.environment}\")\n-  )\n-}\n-\n-# Internet Gateway for the public subnet\n-resource \"aws_internet_gateway\" \"gw\" {\n-  vpc_id = aws_vpc.main.id\n-}\n-\n-# Route the public subnet traffic through the IGW\n-resource \"aws_route\" \"internet_access\" {\n-  route_table_id         = aws_vpc.main.main_route_table_id\n-  destination_cidr_block = \"0.0.0.0/0\"\n-  gateway_id             = aws_internet_gateway.gw.id\n-}\n-\n-# Create a NAT gateway with an Elastic IP for each private subnet to get internet connectivity\n-resource \"aws_eip\" \"gw\" {\n-  count      = var.az_count\n-  vpc        = true\n-  depends_on = [aws_internet_gateway.gw]\n-\n-  tags = merge(\n-    var.common_tags\n-  )\n-}\n-\n-resource \"aws_nat_gateway\" \"gw\" {\n-  count         = var.az_count\n-  subnet_id     = aws_subnet.public.*.id[count.index]\n-  allocation_id = aws_eip.gw.*.id[count.index]\n-\n-  tags = merge(\n-    var.common_tags,\n-    map(\"Name\", \"nat-gateway-${count.index}-${var.app_name}-${var.environment}\")\n-  )\n-}\n-\n-# Create a new route table for the private subnets, make it route non-local traffic through the NAT gateway to the internet\n-resource \"aws_route_table\" \"private\" {\n-  count  = var.az_count\n-  vpc_id = aws_vpc.main.id\n-\n-  route {\n-    cidr_block     = \"0.0.0.0/0\"\n-    nat_gateway_id = aws_nat_gateway.gw.*.id[count.index]\n-  }\n-\n-  tags = merge(\n-    var.common_tags,\n-    map(\"Name\", \"route-table-${count.index}-${var.app_name}-${var.environment}\")\n-  )\n-}\n-\n-# Explicitly associate the newly created route tables to the private subnets (so they don't default to the main route table)\n-resource \"aws_route_table_association\" \"private\" {\n-  count          = var.az_count\n-  subnet_id      = aws_subnet.private.*.id[count.index]\n-  route_table_id = aws_route_table.private.*.id[count.index]\n-}"
      },
      {
        "filename": "terraform/root.tf",
        "additions": 24,
        "deletions": 15,
        "changes": 39,
        "status": "modified",
        "patch": "@@ -1,30 +1,37 @@\n module \"grafana\" {\n-  source               = \"./modules/grafana\"\n-  app_name             = \"${var.project}-${var.function}\"\n+  source = \"./modules/grafana\"\n+\n   alb_dns_name         = module.grafana_alb.alb_dns_name\n   alb_target_group_arn = module.grafana_alb.alb_target_group_arn\n   alb_zone_id          = module.grafana_alb.alb_zone_id\n-  az_count             = 2\n+  az_count             = var.az_count\n   common_tags          = local.common_tags\n   container_name       = var.function\n   dns_zone             = var.dns_zone\n   ecs_task_role_name   = module.grafana_ecs.grafana_ecs_task_role_name\n   environment          = local.environment\n   region               = local.aws_region\n+  vpc_cidr_block       = data.aws_vpc.main.cidr_block\n+  vpc_id               = data.aws_vpc.main.id\n+  vpc_name_tag         = var.vpc_name_tag\n }\n \n module \"grafana_ecs\" {\n-  source               = \"./tdr-terraform-modules/ecs\"\n-  alb_target_group_arn = module.grafana_alb.alb_target_group_arn\n-  app_name             = \"grafana\"\n-  common_tags          = local.common_tags\n-  grafana_build        = true\n-  project              = \"tdr\"\n-  vpc_name_tag         = module.grafana.vpc_tag_name\n+  source = \"./tdr-terraform-modules/ecs\"\n+\n+  alb_target_group_arn       = module.grafana_alb.alb_target_group_arn\n+  app_name                   = \"grafana\"\n+  common_tags                = local.common_tags\n+  ecs_task_security_group_id = data.aws_security_group.ecs_task_security_group.id\n+  grafana_build              = true\n+  project                    = var.project\n+  vpc_id                     = data.aws_vpc.main.id\n+  vpc_private_subnet_ids     = data.aws_subnet_ids.private.ids\n }\n \n module \"grafana_certificate\" {\n-  source      = \"./tdr-terraform-modules/certificatemanager\"\n+  source = \"./tdr-terraform-modules/certificatemanager\"\n+\n   common_tags = local.common_tags\n   dns_zone    = var.dns_zone\n   domain_name = var.domain_name\n@@ -33,7 +40,8 @@ module \"grafana_certificate\" {\n }\n \n module \"grafana_alb\" {\n-  source                = \"./tdr-terraform-modules/alb\"\n+  source = \"./tdr-terraform-modules/alb\"\n+\n   alb_log_bucket        = module.alb_logs_s3.s3_bucket_id\n   alb_security_group_id = module.grafana.alb_security_group_id\n   alb_target_group_port = 3000\n@@ -48,14 +56,15 @@ module \"grafana_alb\" {\n   http_listener         = false\n   project               = var.project\n   public_subnets        = module.grafana.public_subnets\n-  vpc_id                = module.grafana.vpc_id\n+  vpc_id                = data.aws_vpc.main.id\n }\n \n module \"alb_logs_s3\" {\n-  source        = \"./tdr-terraform-modules/s3\"\n+  source = \"./tdr-terraform-modules/s3\"\n+\n   access_logs   = false\n   bucket_policy = \"alb_logging_euwest2\"\n   common_tags   = local.common_tags\n   function      = \"${var.function}-logs\"\n-  project       = \"tdr\"\n+  project       = var.project\n }"
      },
      {
        "filename": "terraform/root_data.tf",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "status": "modified",
        "patch": "@@ -1,3 +1,23 @@\n+data \"aws_security_group\" \"ecs_task_security_group\" {\n+  vpc_id = data.aws_vpc.main.id\n+  tags = {\n+    Name = \"${var.project}-grafana-ecs-task-security-group-${local.environment}\"\n+  }\n+}\n+\n data \"aws_ssm_parameter\" \"cost_centre\" {\n   name = \"/mgmt/cost_centre\"\n }\n+\n+data \"aws_subnet_ids\" \"private\" {\n+  vpc_id = data.aws_vpc.main.id\n+  tags = {\n+    Name = \"${var.project}-grafana-private-subnet-*-${local.environment}\"\n+  }\n+}\n+\n+data \"aws_vpc\" \"main\" {\n+  tags = {\n+    Name = var.vpc_name_tag\n+  }\n+}"
      },
      {
        "filename": "terraform/root_locals.tf",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "status": "modified",
        "patch": "@@ -1,11 +1,11 @@\n locals {\n-  environment = \"mgmt\"\n-  tag_prefix  = var.tag_prefix\n-  aws_region  = var.default_aws_region\n+  aws_region = var.default_aws_region\n   common_tags = map(\n     \"Environment\", local.environment,\n     \"Owner\", \"TDR\",\n     \"Terraform\", true,\n     \"CostCentre\", data.aws_ssm_parameter.cost_centre.value\n   )\n+  environment = \"mgmt\"\n+  tag_prefix  = var.tag_prefix\n }"
      },
      {
        "filename": "terraform/root_variables.tf",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "status": "modified",
        "patch": "@@ -1,3 +1,7 @@\n+variable \"az_count\" {\n+  default = 2\n+}\n+\n variable \"default_aws_region\" {\n   default = \"eu-west-2\"\n }\n@@ -25,3 +29,7 @@ variable \"project\" {\n variable \"tag_prefix\" {\n   default = \"grafana\"\n }\n+\n+variable \"vpc_name_tag\" {\n+  default = \"tdr-jenkins-vpc-mgmt\"\n+}"
      }
    ],
    "existing_codes": [
      "awareness"
    ],
    "codes": [],
    "notes": ""
  },
  {
    "url": "https://github.com/giuseppeborgese/terraform-locking-s3-state/commit/6b4e59e8b844417dc5c247bdef1b0adb8e2e7028",
    "files": [
      {
        "filename": "remote.tf",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "status": "modified",
        "patch": "@@ -33,8 +33,11 @@ resource \"aws_s3_bucket\" \"terraform-state-storage-s3\" {\n resource \"aws_dynamodb_table\" \"dynamodb-terraform-state-lock\" {\n   name = \"terraform-state-lock-dynamo\"\n   hash_key = \"LockID\"\n-  read_capacity = 20\n-  write_capacity = 20\n+  \n+  # I changed the model because this pay per request is more efficient for this purpose\n+  billing_mode = \"PAY_PER_REQUEST\"\n+  #read_capacity = 20\n+  #write_capacity = 20\n \n   attribute {\n     name = \"LockID\""
      }
    ],
    "existing_codes": [
      "saving",
      "billing_mode"
    ],
    "codes": [],
    "notes": ""
  }
]
